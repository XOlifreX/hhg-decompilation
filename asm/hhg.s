	.include "defines.s"
	.include "macros.s"

	.global RomBase

	.text

	.arm

RomBase:
    .include "rom_header.s"
	.include "crt0.s"

	thumb_func_start sub_08000260
sub_08000260:
	bx		lr

.incbin "base.gba", 0x262, 0x2
	thumb_func_end sub_08000260

	thumb_func_start sub_08000264
sub_08000264:
	bx		lr

.incbin "base.gba", 0x266, 0x2
	thumb_func_end sub_08000264

	thumb_func_start sub_08000268
sub_08000268:
	push	{ lr }
	bl		sub_08006f54
_0800026e:
	bl		sub_0808acf8
	b		_0800026e
	push	{ lr }
	bl		sub_0800b8fc
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x27E, 0x2
	push	{ r4, lr }
	ldr		r0, _080002e4
	bl		sub_08002148
	add		r4, r0, #0x0
	ldr		r0, _080002e8
	mov		r1, #0x80
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	mov		r3, #0x1
	neg		r3, r3
	add		r2, r4, #0x0
	bl		sub_08001ef0
	add		r4, r0, #0x0
_080002a6:
	add		r0, r4, #0x0
	bl		sub_080b76d4
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080002a6
	bl		sub_0808aff4
	ldr		r0, _080002ec
	bl		sub_0800223c
	ldr		r0, _080002f0
	bl		sub_0800223c
	ldr		r0, _080002f4
	bl		sub_0800223c
	ldr		r0, _080002f8
	bl		sub_08002268
	ldr		r0, _080002fc
	bl		sub_08002148
	bl		sub_0800d4d4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080002e4:	.4byte 0x080c7010 @ script_Game_Init
_080002e8:	.4byte 0x0200DA00
_080002ec:	.4byte 0x00000FF2
_080002f0:	.4byte 0x00000FF3
_080002f4:	.4byte 0x0000087C
_080002f8:	.4byte 0x00000FF1
_080002fc:	.4byte 0x080c7024 @ gameflow_Red
	bx		lr

.incbin "base.gba", 0x302, 0x2
	thumb_func_end sub_08000268

	thumb_func_start sub_08000304
sub_08000304:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x5c
	beq		_0800032e
	cmp		r0, #0x2f
	beq		_0800032e
	ldr		r0, _08000384
	ldr		r1, _08000388
	ldr		r1, [r1, #0x0]
	bl		sub_080bdbf0
	ldr		r1, _0800038c
	bl		sub_080bdac0
	add		r1, r4, #0x0
	bl		sub_080bdac0
	add		r4, r0, #0x0
_0800032e:
	ldr		r1, _08000390
	add		r0, r5, #0x0
	bl		sub_080bdbf0
	add		r1, r4, #0x0
	bl		sub_080bdac0
	ldr		r1, _08000394
	bl		sub_080bdac0
	add		r1, r5, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	beq		_08000362
	mov		r2, #0x5c
_0800034e:
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x2f
	bne		_08000358
	strb	r2, [r1, #0x0]
_08000358:
	add		r1, #0x1
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bne		_0800034e
_08000362:
	add		r0, r5, #0x0
	mov		r1, #0x5c
	bl		sub_080b6938
	add		r0, r5, #0x0
	mov		r1, #0x3a
	bl		sub_080bdb08
	add		r0, #0x1
	mov		r1, #0x0
	bl		sub_080b6ad8
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x382, 0x2

_08000384:	.4byte 0x02000900
_08000388:	.4byte 0x0200CDD0
_0800038c:	.4byte 0x080c7054
_08000390:	.4byte 0x080c7038 @ cdrom0:\
_08000394:	.4byte 0x080c704c
	thumb_func_end sub_08000304

	thumb_func_start sub_08000398
sub_08000398:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r2, #0x0
	add		r5, r3, #0x0
	ldr		r2, _080003d8
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	cmp		r7, #0x0
	bne		_080003b4
	mov		r7, sp
_080003b4:
	cmp		r4, #0x0
	bne		_080003ba
	add		r4, r2, #0x4
_080003ba:
	mov		r8, r2
	ldr		r1, [r6, #0x0]
	ldr		r0, _080003dc
	cmp		r1, r0
	beq		_080003e8
	ldr		r0, _080003e0
	cmp		r1, r0
	beq		_080003f4
	ldr		r0, _080003e4
	mov		r1, #0x42
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_0800041c

_080003d8:	.4byte 0x02000058
_080003dc:	.4byte 0x30444C53
_080003e0:	.4byte 0x31444C53
_080003e4:	.4byte 0x080c7058 @ system/agbextra.cpp

_080003e8:
	ldr		r0, [r6, #0x4]
	str		r0, [r4, #0x0]
	mov		r0, #0x8
	mov		r1, r8
	str		r0, [r1, #0x0]
	b		_0800041c
_080003f4:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080b64bc
	cmp		r0, #0x0
	bne		_0800040c
	ldr		r0, _08000434
	mov		r1, #0x3d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800040c:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, r8
	bl		sub_080b646c
	mov		r1, r8
	ldr		r0, [r1, #0x4]
	str		r0, [r4, #0x0]
_0800041c:
	ldr		r1, [r7, #0x0]
	cmp		r1, #0x0
	beq		_08000438
	ldr		r0, [r4, #0x0]
	add		r0, r1, r0
	add		r1, r0, #0x3
	mov		r2, #0x3
	and		r1, r2
	sub		r1, #0x3
	sub		r4, r0, r1
	b		_08000442

.incbin "base.gba", 0x432, 0x2

_08000434:	.4byte 0x080c7058 @ system/agbextra.cpp

_08000438:
	ldr		r0, [r4, #0x0]
	bl		sub_0808afb8
	str		r0, [r7, #0x0]
	add		r4, r0, #0x0
_08000442:
	ldr		r1, [r7, #0x0]
	mov		r0, r8
	ldr		r2, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_080b651c
	add		r0, r4, #0x0
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08000398

	thumb_func_start sub_0800045c
sub_0800045c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r7, #0x0
	ldr		r1, _080004a4
	mov		r8, r1
	add		r5, r0, #0x0
	add		r5, #0x60
	add		r4, r0, #0x0
	mov		r6, #0x17
_08000470:
	ldr		r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_0800048e
	mov		r2, r8
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, #0x0
	bne		_0800048e
	add		r1, r7, #0x0
	add		r7, #0x1
	mov		r0, #0x0
	ldrsh	r2, [r5, r0]
	ldr		r0, _080004a8
	bl		sub_0808c670
_0800048e:
	add		r5, #0x2
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08000470
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A2, 0x2

_080004a4:	.4byte 0x0200CDBC
_080004a8:	.4byte 0x080c7114 @ %2d_ID#_%4d_%s
	thumb_func_end sub_0800045c

	thumb_func_start sub_080004ac
sub_080004ac:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	add		r1, r4, #0x4
	mov		r2, #0x5c
	bl		sub_0808c818
	add		r0, r4, #0x0
	add		r0, #0x60
	add		r1, r4, #0x0
	add		r1, #0x62
	mov		r2, #0x2e
	bl		sub_0808c818
	str		r5, [r4, #0x5c]
	add		r4, #0x8e
	strh	r6, [r4, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4D6, 0x12
	thumb_func_end sub_080004ac

	thumb_func_start sub_080004e8
sub_080004e8:
	ldr		r0, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	str		r2, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x4F2, 0x2
	thumb_func_end sub_080004e8

	thumb_func_start sub_080004f4
sub_080004f4:
	str		r1, [r0, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	str		r2, [r0, #0x4]
	str		r2, [r1, #0x0]
	bx		lr
	thumb_func_end sub_080004f4

	thumb_func_start sub_08000500
sub_08000500:
	push	{ r4, lr }
	ldr		r4, [r0, #0x18]
	ldr		r1, [r0, #0x1c]
	ldr		r2, [r0, #0x20]
	ldr		r3, _08000518
	add		r0, r4, #0x0
	bl		sub_08000a2c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x516, 0x2

_08000518:	.4byte 0x84000003
	thumb_func_end sub_08000500

	thumb_func_start sub_0800051c
sub_0800051c:
	push	{ r4, r5, lr }
	ldr		r5, [sp, #0x0+0xc]
	mov		r4, #0x0
	str		r4, [r0, #0x4]
	str		r4, [r0, #0x8]
	str		r4, [r0, #0x0]
	str		r1, [r0, #0x14]
	str		r2, [r0, #0x18]
	str		r3, [r0, #0x1c]
	str		r5, [r0, #0x20]
	ldr		r1, _0800053c
	str		r1, [r0, #0xc]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x53A, 0x2

_0800053c:	.4byte 0x080e0304
	thumb_func_end sub_0800051c

	thumb_func_start sub_08000540
sub_08000540:
	push	{ r4, lr }
	ldr		r4, [r0, #0x18]
	ldr		r1, [r0, #0x1c]
	ldr		r2, [r0, #0x20]
	ldr		r3, _08000558
	add		r0, r4, #0x0
	bl		sub_08000a2c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x556, 0x2

_08000558:	.4byte 0x80000003

.incbin "base.gba", 0x55C, 0x60
	thumb_func_end sub_08000540

	thumb_func_start sub_080005bc
sub_080005bc:
	push	{ r4, lr }
	ldr		r2, _080005f8
	ldr		r4, [r2, #0x8]
	add		r3, r1, #0x0
	add		r3, #0xf
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_080005d0
	add		r0, r1, #0x0
	add		r0, #0x1e
_080005d0:
	asr		r0, r0, #0x4
	lsl		r0, r0, #0x4
	add		r0, r4, r0
	str		r0, [r2, #0x8]
	ldr		r1, [r2, #0x4]
	ldr		r2, [r2, #0x0]
	add		r1, r1, r2
	cmp		r0, r1
	bls		_080005ee
	ldr		r0, _080005fc
	mov		r1, #0x77
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080005ee:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5F6, 0x2

_080005f8:	.4byte 0x03005918
_080005fc:	.4byte 0x080c7058 @ system/agbextra.cpp @ s_system/agbextra.cpp
	thumb_func_end sub_080005bc

	thumb_func_start sub_08000600
sub_08000600:
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r2, _0800063c
	ldr		r4, [r2, #0x8]
	add		r1, r3, #0x0
	add		r1, #0xf
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08000616
	add		r0, r3, #0x0
	add		r0, #0x1e
_08000616:
	asr		r0, r0, #0x4
	lsl		r0, r0, #0x4
	add		r0, r4, r0
	str		r0, [r2, #0x8]
	ldr		r1, [r2, #0x4]
	ldr		r2, [r2, #0x0]
	add		r1, r1, r2
	cmp		r0, r1
	bls		_08000634
	ldr		r0, _08000640
	mov		r1, #0x77
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08000634:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0800063c:	.4byte 0x03005918
_08000640:	.4byte 0x080c7058 @ system/agbextra.cpp
	thumb_func_end sub_08000600

	thumb_func_start sub_08000644
sub_08000644:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08000658
	add		r0, r5, #0x0
	bl		sub_080b5dc4
_08000658:
	str		r4, [r5, #0x10]
	cmp		r4, #0x10
	beq		_08000670
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	ldr		r1, _08000678
	add		r0, r0, r1
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080b5dfc
_08000670:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x676, 0x2

_08000678:	.4byte 0x03005924
	thumb_func_end sub_08000644

	thumb_func_start sub_0800067c
sub_0800067c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08000690
	add		r0, r5, #0x0
	bl		sub_080b5dc4
_08000690:
	str		r4, [r5, #0x10]
	cmp		r4, #0x10
	beq		_080006a8
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	ldr		r1, _080006b0
	add		r0, r0, r1
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080b5e54
_080006a8:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6AE, 0x2

_080006b0:	.4byte 0x03005924
	thumb_func_end sub_0800067c

	thumb_func_start sub_080006b4
sub_080006b4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _080006e4
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080006d0
	ldr		r0, _080006e8
	mov		r1, #0x8d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080006d0:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080006de
	add		r0, r4, #0x0
	bl		sub_0808afac
_080006de:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080006e4:	.4byte 0x080e034c
_080006e8:	.4byte 0x080c7058 @ system/agbextra.cpp
	thumb_func_end sub_080006b4

	thumb_func_start sub_080006ec
sub_080006ec:
	ldr		r1, _080006fc
	str		r1, [r0, #0xc]
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x8]
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x6FA, 0x2

_080006fc:	.4byte 0x080e034c
	thumb_func_end sub_080006ec

	thumb_func_start sub_08000700
sub_08000700:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r1, #0x0
	ldr		r0, _08000758
	ldr		r1, [r0, #0x0]
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r5, #0xc
	mov		r4, #0xf
_08000710:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_0800082c
	add		r5, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08000710
	ldr		r5, [r7, #0x0]
	ldr		r0, [r5, #0x4]
	str		r0, [r5, #0x8]
	mov		r2, #0x0
	mov		r4, #0x0
_0800072a:
	lsl		r0, r2, #0x1
	add		r0, r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	add		r0, #0xc
	ldr		r1, [r0, #0x4]
	add		r3, r2, #0x1
	cmp		r1, #0x0
	beq		_08000746
	mov		r2, #0x0
_0800073e:
	str		r2, [r1, #0x0]
	ldr		r1, [r1, #0x8]
	cmp		r1, #0x0
	bne		_0800073e
_08000746:
	str		r4, [r0, #0x4]
	str		r4, [r0, #0x8]
	str		r4, [r0, #0x0]
	add		r2, r3, #0x0
	cmp		r2, #0xf
	ble		_0800072a
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08000758:	.4byte 0x080c7124
	thumb_func_end sub_08000700

	thumb_func_start sub_0800075c
sub_0800075c:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r4, r0, #0x0
	add		r4, #0xc
	mov		r5, #0xf
_08000766:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0800082c
	add		r4, #0xc
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08000766
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800075c

	thumb_func_start sub_0800077c
sub_0800077c:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r4, [r2, #0x8]
	add		r3, r1, #0x0
	add		r3, #0xf
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_08000790
	add		r0, r1, #0x0
	add		r0, #0x1e
_08000790:
	asr		r0, r0, #0x4
	lsl		r0, r0, #0x4
	add		r0, r4, r0
	str		r0, [r2, #0x8]
	ldr		r1, [r2, #0x4]
	ldr		r2, [r2, #0x0]
	add		r1, r1, r2
	cmp		r0, r1
	bls		_080007ae
	ldr		r0, _080007b8
	mov		r1, #0x77
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080007ae:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7B6, 0x2

_080007b8:	.4byte 0x080c7058 @ system/agbextra.cpp
	thumb_func_end sub_0800077c

	thumb_func_start sub_080007bc
sub_080007bc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	mov		r2, #0x0
	mov		r5, #0x0
_080007c8:
	lsl		r0, r2, #0x1
	add		r0, r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	add		r0, #0xc
	ldr		r1, [r0, #0x4]
	add		r3, r2, #0x1
	cmp		r1, #0x0
	beq		_080007e4
	mov		r2, #0x0
_080007dc:
	str		r2, [r1, #0x0]
	ldr		r1, [r1, #0x8]
	cmp		r1, #0x0
	bne		_080007dc
_080007e4:
	str		r5, [r0, #0x4]
	str		r5, [r0, #0x8]
	str		r5, [r0, #0x0]
	add		r2, r3, #0x0
	cmp		r2, #0xf
	ble		_080007c8
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7F6, 0x2
	thumb_func_end sub_080007bc

	thumb_func_start sub_080007f8
sub_080007f8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	str		r0, [r4, #0x0]
_08000800:
	str		r2, [r4, #0x4]
	cmp		r2, #0x0
	bne		_0800080c
	bl		sub_0808afb8
	str		r0, [r4, #0x4]
_0800080c:
	ldr		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	mov		r2, #0x0
	add		r0, r4, #0x0
	add		r0, #0xc
	mov		r1, #0xf
_08000818:
	str		r2, [r0, #0x4]
	str		r2, [r0, #0x8]
	str		r2, [r0, #0x0]
	add		r0, #0xc
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08000818
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080007f8

	thumb_func_start sub_0800082c
sub_0800082c:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_08000850
	mov		r6, #0x0
_08000838:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r2, [r1, #0x14]
	add		r1, r5, #0x0
	bl		sub_080bbc78
	str		r6, [r4, #0x0]
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_08000838
_08000850:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x856, 0x2A
	thumb_func_end sub_0800082c


.incbin "base.gba", 0x880, 0xE

_0800088e:

.incbin "base.gba", 0x88E, 0x1C
_080008aa:

.incbin "base.gba", 0x8AA, 0x42
_080008ec:

.incbin "base.gba", 0x8EC, 0x8
_080008f4:	.4byte 0x0200CDD4
_080008f8:	.4byte 0x080c7058 @ system/agbextra.cpp
_080008fc:	.4byte 0x02000980
_08000900:	.4byte 0x0200CDBC
_08000904:	.4byte 0x080c706c @ FILE_%s_#%d

_08000908:

.incbin "base.gba", 0x908, 0x6
_0800090e:

.incbin "base.gba", 0x90E, 0x6
	thumb_func_start sub_08000914
sub_08000914:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_08000928
	ldr		r0, _08000934
	mov		r1, #0x1e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08000928:
	ldr		r1, _08000938
	ldr		r0, [r4, #0x0]
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08000934:	.4byte 0x080c7058 @ system/agbextra.cpp
_08000938:	.4byte 0x0834c000
	thumb_func_end sub_08000914

	thumb_func_start sub_0800093c
sub_0800093c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	cmp		r5, #0x0
	beq		_08000950
	ldr		r1, _0800094c
	b		_08000952

_0800094c:	.4byte 0x080c7038 @ cdrom0:\

_08000950:
	ldr		r1, _08000968
_08000952:
	add		r0, r4, #0x0
	bl		sub_080bdbf0
	add		r1, r6, #0x0
	bl		sub_080bdac0
	cmp		r5, #0x0
	beq		_08000970
	ldr		r1, _0800096c
	b		_08000972

.incbin "base.gba", 0x966, 0x2

_08000968:	.4byte 0x080c7044 @ host0:
_0800096c:	.4byte 0x080c704c

_08000970:
	ldr		r1, _080009bc
_08000972:
	bl		sub_080bdac0
	add		r1, r4, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	beq		_08000996
	mov		r2, #0x5c
_08000982:
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x2f
	bne		_0800098c
	strb	r2, [r1, #0x0]
_0800098c:
	add		r1, #0x1
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bne		_08000982
_08000996:
	add		r0, r4, #0x0
	mov		r1, #0x5c
	bl		sub_080b6938
	cmp		r5, #0x0
	beq		_080009b2
	add		r0, r4, #0x0
	mov		r1, #0x3a
	bl		sub_080bdb08
	add		r0, #0x1
	mov		r1, #0x0
	bl		sub_080b6ad8
_080009b2:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9BA, 0x2

_080009bc:	.4byte 0x080c7050
	thumb_func_end sub_0800093c

	thumb_func_start sub_080009c0
sub_080009c0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldrb	r1, [r4, #0x1a]
	cmp		r1, #0x2
	bne		_080009e2
	ldrb	r1, [r4, #0x18]
	mov		r0, #0x1
	eor		r1, r0
	mov		r2, #0x0
	strb	r1, [r4, #0x18]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	str		r2, [r3, #0x8]
	b		_08000a00
_080009e2:
	ldrb	r0, [r4, #0x19]
	cmp		r0, #0x0
	beq		_08000a1c
	cmp		r1, #0x1
	bne		_080009f2
	mov		r0, #0x0
	str		r0, [r3, #0x8]
	b		_08000a1a
_080009f2:
	ldrb	r1, [r4, #0x18]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	mov		r1, #0x0
	str		r1, [r3, #0x8]
_08000a00:
	ldr		r1, [r3, #0x8]
	ldr		r1, [r0, #0x0]
	str		r1, [r3, #0x0]
	ldr		r1, [r0, #0x4]
	str		r1, [r3, #0x4]
	ldr		r1, [r0, #0x8]
	ldr		r0, _08000a28
	and		r0, r1
	str		r0, [r3, #0x8]
	ldr		r0, [r3, #0x8]
	str		r1, [r3, #0x8]
	ldr		r0, [r3, #0x8]
	mov		r0, #0x1
_08000a1a:
	strb	r0, [r4, #0x19]
_08000a1c:
	mov		r0, #0x0
	strb	r0, [r4, #0x1a]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xA26, 0x2

_08000a28:	.4byte 0xdfffffff
	thumb_func_end sub_080009c0

	thumb_func_start sub_08000a2c
sub_08000a2c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r1
	add		r4, r2, #0x0
	add		r6, r3, #0x0
	cmp		r4, #0x0
	bgt		_08000a4a
	ldr		r0, _08000a6c
	mov		r1, #0x6b
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08000a4a:
	lsr		r1, r6, #0x10
	mov		r0, #0x84
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08000b00
	cmp		r1, r0
	bgt		_08000a70
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08000af4
	mov		r0, #0x81
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08000b0c
	b		_08000b24

.incbin "base.gba", 0xA6A, 0x2

_08000a6c:	.4byte 0x080c716c @ system/agbdevice.cpp

_08000a70:
	ldr		r0, _08000a84
	cmp		r1, r0
	beq		_08000a8e
	cmp		r1, r0
	bgt		_08000a88
	mov		r0, #0x85
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08000b18
	b		_08000b24

_08000a84:	.4byte 0x0000A260

_08000a88:
	ldr		r0, _08000ae8
	cmp		r1, r0
	bne		_08000b24
_08000a8e:
	ldr		r1, _08000aec
	mov		r0, #0x3
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	cmp		r5, #0x0
	bne		_08000aaa
	ldr		r0, _08000af0
	mov		r1, #0x6f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08000aaa:
	cmp		r4, #0x0
	ble		_08000b30
	lsr		r2, r6, #0x10
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r1, r0, #0x0
	add		r0, r2, #0x0
	and		r0, r1
	lsr		r3, r4, #0x1
	cmp		r0, #0x0
	beq		_08000ac2
	lsr		r3, r4, #0x2
_08000ac2:
	ldrb	r1, [r5, #0x18]
	mov		r0, #0x1
	eor		r0, r1
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r5, r1
	str		r7, [r1, #0x0]
	mov		r0, r8
	str		r0, [r1, #0x4]
	lsl		r2, r2, #0x10
	lsl		r0, r3, #0x10
	lsr		r0, r0, #0x10
	orr		r2, r0
	str		r2, [r1, #0x8]
	mov		r0, #0x2
	strb	r0, [r5, #0x1a]
	b		_08000b30

.incbin "base.gba", 0xAE6, 0x2

_08000ae8:	.4byte 0x0000A660
_08000aec:	.4byte 0x080c715c
_08000af0:	.4byte 0x080c716c @ system/agbdevice.cpp

_08000af4:
	mov		r0, r8
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0808c6b8
	b		_08000b30
_08000b00:
	mov		r0, r8
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0808c694
	b		_08000b30
_08000b0c:
	ldrh	r1, [r7, #0x0]
	mov		r0, r8
	add		r2, r4, #0x0
	bl		sub_0808c7b0
	b		_08000b30
_08000b18:
	ldr		r1, [r7, #0x0]
	mov		r0, r8
	add		r2, r4, #0x0
	bl		sub_0808c788
	b		_08000b30
_08000b24:
	ldr		r0, _08000b3c
	mov		r1, #0x7f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08000b30:
	mov		r0, r8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08000b3c:	.4byte 0x080c716c @ system/agbdevice.cpp
	thumb_func_end sub_08000a2c

	thumb_func_start sub_08000b40
sub_08000b40:
	push	{ r4, r5, lr }
	ldr		r0, _08000c1c
	ldr		r1, _08000c20
	mov		r2, #0x34
	bl		sub_0808c818
	ldr		r5, _08000c24
	mov		r3, #0xc0
	strh	r3, [r5, #0x0]
	ldr		r1, _08000c28
	ldr		r0, _08000c2c
	str		r0, [r1, #0x0]
	ldr		r1, _08000c30
	ldr		r0, _08000c34
	str		r0, [r1, #0x0]
	ldr		r2, _08000c38
	ldr		r1, _08000c3c
	sub		r0, r0, r1
	asr		r0, r0, #0x1
	cmp		r0, #0x0
	bge		_08000b6c
	add		r0, #0xf
_08000b6c:
	asr		r0, r0, #0x4
	strh	r0, [r2, #0x0]
	ldr		r1, _08000c40
	ldr		r0, _08000c44
	str		r0, [r1, #0x0]
	ldr		r1, _08000c48
	ldr		r2, _08000c4c
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	sub		r1, #0x8
	ldr		r2, _08000c50
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _08000c54
	mov		r0, #0x8
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	strh	r3, [r0, #0x0]
	add		r0, #0x10
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x13
	mov		r2, #0xc0
	lsl		r2, r2, #0x9
	mov		r1, #0x0
	bl		sub_0808c828
	mov		r0, #0xa0
	lsl		r0, r0, #0x13
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	mov		r1, #0x0
	bl		sub_0808c828
	bl		sub_08001458
	mov		r0, #0x0
	bl		sub_08000d3c
	ldr		r1, _08000c58
	add		r0, r5, #0x0
	bl		sub_08000c6c
	ldr		r1, _08000c5c
	mov		r0, #0xbf
	strh	r0, [r1, #0x0]
	ldr		r0, _08000c60
	strh	r4, [r0, #0x0]
	add		r1, #0x4
	mov		r0, #0x10
	strh	r0, [r1, #0x0]
	ldrh	r1, [r5, #0x0]
	ldr		r0, _08000c64
	and		r0, r1
	mov		r2, #0xf8
	lsl		r2, r2, #0x5
	add		r1, r2, #0x0
	orr		r0, r1
	strh	r0, [r5, #0x0]
	ldrh	r0, [r5, #0x0]
	bl		sub_0800132c
	ldr		r0, _08000c68
	mov		r1, #0xf
	bl		sub_08000700
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08000c1c:	.4byte 0x02000014
_08000c20:	.4byte 0x080c7128
_08000c24:	.4byte 0x02000B18
_08000c28:	.4byte 0x0200CE6C
_08000c2c:	.4byte 0x06010000
_08000c30:	.4byte 0x0200CE80
_08000c34:	.4byte 0x03000200
_08000c38:	.4byte 0x0200CE94
_08000c3c:	.4byte 0x03000000
_08000c40:	.4byte 0x03007FFC
_08000c44:	.4byte 0x08000108
_08000c48:	.4byte 0x04000204
_08000c4c:	.4byte 0x00004014
_08000c50:	.4byte 0x00002001
_08000c54:	.4byte 0x04000004
_08000c58:	.4byte 0x02000B1A
_08000c5c:	.4byte 0x04000050
_08000c60:	.4byte 0x04000052
_08000c64:	.4byte 0x0000FF7F
_08000c68:	.4byte 0x03005918
	thumb_func_end sub_08000b40

	thumb_func_start sub_08000c6c
sub_08000c6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	ldr		r0, _08000cd4
	mov		r8, r0
	ldr		r7, _08000cd8
	mov		r12, r7
	ldr		r0, _08000cdc
	str		r0, [sp, #0x0]
	ldr		r3, _08000ce0
	ldr		r6, _08000ce4
	ldr		r5, _08000ce8
	add		r4, r1, #0x0
	mov		r1, #0xc
	add		r1, r1, r3
	mov		r10, r1
_08000c94:
	mov		r7, r9
	ldrh	r2, [r7, #0x0]
	ldrh	r0, [r4, #0x0]
	add		r1, r0, #0x0
	mov		r7, #0xf8
	lsl		r7, r7, #0x5
	and		r1, r7
	lsl		r1, r1, #0x3
	mov		r7, #0xc0
	lsl		r7, r7, #0x13
	add		r1, r1, r7
	str		r1, [r5, #0x0]
	add		r1, r0, #0x0
	mov		r7, #0xc
	and		r1, r7
	lsl		r1, r1, #0xc
	mov		r7, #0xc0
	lsl		r7, r7, #0x13
	add		r1, r1, r7
	str		r1, [r6, #0x0]
	mov		r1, r8
	str		r1, [r3, #0x0]
	lsr		r0, r0, #0xe
	lsl		r1, r0, #0x1
	ldr		r7, _08000cec
	cmp		r3, r7
	ble		_08000cf0
	mov		r0, #0x7
	and		r2, r0
	lsl		r0, r2, #0x3
	add		r0, r1, r0
	b		_08000cf2

_08000cd4:	.4byte 0x03000000
_08000cd8:	.4byte 0x0200CE8C
_08000cdc:	.4byte 0x0200CE84
_08000ce0:	.4byte 0x0200CE70
_08000ce4:	.4byte 0x0200CE5C
_08000ce8:	.4byte 0x0200CE4C
_08000cec:	.4byte 0x0200CE74

_08000cf0:
	add		r0, r1, #0x0
_08000cf2:
	ldr		r1, _08000d38
	add		r0, r1, r0
	ldrh	r0, [r0, #0x0]
	ldr		r7, [sp, #0x0]
	strh	r0, [r7, #0x0]
	ldr		r0, [r3, #0x0]
	mov		r1, r8
	sub		r0, r0, r1
	asr		r0, r0, #0x1
	cmp		r0, #0x0
	bge		_08000d0a
	add		r0, #0xf
_08000d0a:
	asr		r0, r0, #0x4
	mov		r7, r12
	strh	r0, [r7, #0x0]
	mov		r0, #0x2
	add		r12, r0
	ldr		r1, [sp, #0x0]
	add		r1, #0x2
	str		r1, [sp, #0x0]
	add		r3, #0x4
	add		r6, #0x4
	add		r5, #0x4
	add		r4, #0x2
	cmp		r3, r10
	ble		_08000c94
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xD36, 0x2

_08000d38:	.4byte 0x080C718E
	thumb_func_end sub_08000c6c

	thumb_func_start sub_08000d3c
sub_08000d3c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r4, #0x1
	beq		_08000d58
	ldr		r2, _08000d50
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08000d54
	and		r0, r1
	b		_08000d64

.incbin "base.gba", 0xD4E, 0x2

_08000d50:	.4byte 0x02000B18
_08000d54:	.4byte 0x0000FFF8

_08000d58:
	ldr		r2, _08000d80
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08000d84
	and		r0, r1
	mov		r1, #0x1
	orr		r0, r1
_08000d64:
	strh	r0, [r2, #0x0]
	ldr		r0, _08000d88
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	cmp		r4, #0x4
	bhi		_08000da4
	lsl		r0, r4, #0x2
	ldr		r1, _08000d8c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0xD7E, 0x2

_08000d80:	.4byte 0x02000B18
_08000d84:	.4byte 0x0000FFF8
_08000d88:	.4byte 0x02000B04
_08000d8c:	.4byte 0x08000d90
_08000d90:	.4byte 0x08000da4

.incbin "base.gba", 0xD94, 0x10

_08000da4:
	mov		r4, #0xe0
	lsl		r4, r4, #0x4
	ldr		r2, _08000dac
	b		_08000dce

_08000dac:	.4byte 0x00000F09

.incbin "base.gba", 0xDB0, 0x18
	thumb_func_end sub_08000d3c


.incbin "base.gba", 0xDC8, 0x6

_08000dce:

.incbin "base.gba", 0xDCE, 0xA
_08000dd8:	.4byte 0x00000C0A
_08000ddc:	.4byte 0x00000D0B

.incbin "base.gba", 0xDE0, 0x22

_08000e02:

.incbin "base.gba", 0xE02, 0x32
_08000e34:	.4byte 0x02000B1A
_08000e38:	.4byte 0x02000B1C
_08000e3c:	.4byte 0x02000B1E
_08000e40:	.4byte 0x02000B20
_08000e44:	.4byte 0x02000AF0
	thumb_func_start sub_08000e48
sub_08000e48:
	push	{ r4, r5, lr }
	cmp		r0, #0x0
	bne		_08000e66
	mov		r0, #0x0
	mov		r1, #0xf
	bl		sub_08001884
	cmp		r0, #0xf
	bne		_08000f24
	mov		r0, #0x0
	mov		r1, #0xf
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08000f24
_08000e66:
	ldr		r3, _08000f2c
	mov		r2, #0x80
	mvn		r0, r2
	ldrh	r1, [r3, #0x0]
	and		r0, r1
	orr		r0, r2
	strh	r0, [r3, #0x0]
	ldr		r4, _08000f30
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r1, [r4, #0xc]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r0, r4
	ldr		r2, [r1, #0x14]
	mov		r1, #0x0
	bl		sub_080bbc78
	mov		r1, #0xbf
	mov		r5, #0x0
	mov		r2, #0x10
	ldr		r0, _08000f34
	strh	r1, [r0, #0x0]
	ldr		r0, _08000f38
	strh	r5, [r0, #0x0]
	ldr		r0, _08000f3c
	strh	r2, [r0, #0x0]
	ldr		r4, _08000f40
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r1, [r4, #0xC]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r0, r4
	ldr		r2, [r1, #0x14]
	mov		r1, #0x0
	bl		sub_080bbc78
	ldr		r0, _08000f44
	mov		r1, #0x1
	strb	r1, [r0, #0x1a]
	ldr		r0, _08000f48
	strb	r1, [r0, #0x1A]
	bl		sub_0808f540
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0808f558
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_0808f558
	mov		r0, #0x2
	mov		r1, #0x0
	bl		sub_0808f558
	ldr		r4, _08000f4c
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08000ef2
	bl		sub_080b75b0
	str		r5, [r4, #0x0]
_08000ef2:
	mov		r2, #0x2
	ldr		r0, _08000f50
	ldr		r4, [r0, #0x0]
	add		r5, r0, #0x0
_08000efa:
	ldrh	r0, [r4, #0x0]
	add		r1, r0, #0x0
	ldrh	r0, [r4, #0x0]
	sub		r3, r2, #0x1
	cmp		r1, r0
	bne		_08000f0e
	ldr		r2, [r5, #0x0]
_08000f08:
	ldrh	r0, [r2, #0x0]
	cmp		r1, r0
	beq		_08000f08
_08000f0e:
	add		r2, r3, #0x0
	cmp		r2, #0x0
	bge		_08000efa
	ldr		r0, _08000f54
	ldr		r1, _08000f58
	str		r1, [r0, #0xC]
	mov		r1, #0x1
	str		r1, [r0, #0x10]
	mov		r0, #0xc0
	bl		sub_080bb614
_08000f24:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xF2A, 0x2

_08000f2c:	.4byte 0x02000B18
_08000f30:	.4byte 0x02000B04
_08000f34:	.4byte 0x02000B24
_08000f38:	.4byte 0x02000B26
_08000f3c:	.4byte 0x02000B28
_08000f40:	.4byte 0x02000A00
_08000f44:	.4byte 0x0200CDE4
_08000f48:	.4byte 0x0200CE00
_08000f4c:	.4byte 0x0200D280
_08000f50:	.4byte 0x080c71a0
_08000f54:	.4byte 0x02000000
_08000f58:	.4byte 0x080c71b8
	thumb_func_end sub_08000e48

	thumb_func_start sub_08000f5c
sub_08000f5c:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, _08000fb8
	mov		r1, #0x2
	bl		sub_080006b4
	ldr		r0, _08000fbc
	mov		r1, #0x0
	bl		sub_080006b4
	ldr		r0, _08000fc0
	mov		r1, #0x0
	bl		sub_080006b4
	ldr		r0, _08000fc4
	mov		r1, #0x0
	bl		sub_080006b4
	ldr		r0, _08000fc8
	ldr		r6, _08000fcc
	ldr		r7, _08000fd0
	cmp		r0, #0x0
	beq		_08000fa0
	add		r4, r0, #0x0
	add		r4, #0x70
	cmp		r0, r4
	beq		_08000fa0
	add		r5, r0, #0x0
_08000f92:
	sub		r4, #0x1c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	cmp		r5, r4
	bne		_08000f92
_08000fa0:
	ldr		r0, [r6, #0x0]
	mov		r1, #0x2
	bl		sub_080006b4
	ldr		r0, [r7, #0x0]
	mov		r1, #0x2
	bl		sub_080006b4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xFB6, 0x2

_08000fb8:	.4byte 0x02000A00
_08000fbc:	.4byte 0x02000A14
_08000fc0:	.4byte 0x02000A38
_08000fc4:	.4byte 0x02000A5C
_08000fc8:	.4byte 0x02000A80
_08000fcc:	.4byte 0x080c71a4
_08000fd0:	.4byte 0x080c71a8
	thumb_func_end sub_08000f5c

	thumb_func_start sub_08000fd4
sub_08000fd4:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	ldr		r4, _08001054
	add		r0, r4, #0x0
	bl		sub_080006ec
	ldr		r0, _08001058
	str		r0, [r4, #0xc]
	ldr		r4, _0800105c
	add		r0, r4, #0x0
	bl		sub_080006ec
	ldr		r0, _08001060
	str		r0, [r4, #0xc]
	ldr		r4, _08001064
	mov		r5, #0x3
	ldr		r7, _08001068
	mov		r6, #0x1
	neg		r6, r6
_08000ffa:
	add		r0, r4, #0x0
	bl		sub_080006ec
	str		r7, [r4, #0xc]
	add		r4, #0x1c
	sub		r5, #0x1
	cmp		r5, r6
	bne		_08000ffa
	ldr		r1, _0800106c
	ldr		r2, _08001070
	mov		r3, #0xa0
	lsl		r3, r3, #0x13
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	str		r4, [sp, #0x0]
	add		r0, r1, #0x0
	bl		sub_0800051c
	ldr		r1, _08001074
	ldr		r2, _08001078
	ldr		r3, _0800107c
	str		r4, [sp, #0x0]
	add		r0, r1, #0x0
	bl		sub_0800051c
	ldr		r1, _08001080
	ldr		r2, _08001084
	mov		r3, #0xe0
	lsl		r3, r3, #0x13
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	str		r0, [sp, #0x0]
	add		r0, r1, #0x0
	bl		sub_0800051c
	ldr		r4, _08001088
	add		r0, r4, #0x0
	bl		sub_080006ec
	ldr		r0, _0800108c
	str		r0, [r4, #0xC]
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08001054:	.4byte 0x02000B04
_08001058:	.4byte 0x080e03ac
_0800105c:	.4byte 0x02000AF0
_08001060:	.4byte 0x080e0394
_08001064:	.4byte 0x02000A80
_08001068:	.4byte 0x080e037c
_0800106c:	.4byte 0x02000A5C
_08001070:	.4byte 0x03000000
_08001074:	.4byte 0x02000A38
_08001078:	.4byte 0x03000200
_0800107c:	.4byte 0x05000200
_08001080:	.4byte 0x02000A14
_08001084:	.4byte 0x03000400
_08001088:	.4byte 0x02000A00
_0800108c:	.4byte 0x080e0364
	thumb_func_end sub_08000fd4

	thumb_func_start sub_08001090
sub_08001090:
	push	{ r4, lr }
	ldr		r3, _080010b4
	strh	r0, [r3, #0x0]
	ldr		r0, _080010b8
	strh	r1, [r0, #0x0]
	ldr		r0, _080010bc
	strh	r2, [r0, #0x0]
	ldr		r4, _080010c0
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x10B2, 0x2

_080010b4:	.4byte 0x02000B24
_080010b8:	.4byte 0x02000B26
_080010bc:	.4byte 0x02000B28
_080010c0:	.4byte 0x02000A00

.incbin "base.gba", 0x10C4, 0x174
	thumb_func_end sub_08001090

	thumb_func_start sub_08001238
sub_08001238:
	push	{ r4, lr }
	ldr		r3, _0800125c
	lsl		r4, r0, #0x3
	sub		r4, r4, r0
	lsl		r4, r4, #0x2
	add		r4, r4, r3
	strh	r0, [r4, #0x14]
	strh	r1, [r4, #0x16]
	strh	r2, [r4, #0x18]
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0800125c:	.4byte 0x02000A80

.incbin "base.gba", 0x1260, 0x4C
	thumb_func_end sub_08001238

	thumb_func_start sub_080012ac
sub_080012ac:
	push	{ r4, lr }
	ldr		r4, _080012d4
	strh	r0, [r4, #0x0]
	ldr		r0, _080012d8
	strh	r1, [r0, #0x0]
	ldr		r0, _080012dc
	strh	r2, [r0, #0x0]
	ldr		r0, _080012e0
	strh	r3, [r0, #0x0]
	ldr		r4, _080012e4
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x12D2, 0x2

_080012d4:	.4byte 0x02000B1A
_080012d8:	.4byte 0x02000B1C
_080012dc:	.4byte 0x02000B1E
_080012e0:	.4byte 0x02000B20
_080012e4:	.4byte 0x02000AF0

.incbin "base.gba", 0x12E8, 0x44
	thumb_func_end sub_080012ac

	thumb_func_start sub_0800132c
sub_0800132c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r3
	mov		r2, #0x80
	cmp		r0, #0x0
	beq		_0800133e
	ldr		r2, _08001360
_0800133e:
	ldr		r0, _08001364
	ldrh	r1, [r0, #0x0]
	bic		r1, r2
	and		r2, r3
	orr		r1, r2
	strh	r1, [r0, #0x0]
	ldr		r4, _08001368
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x135E, 0x2

_08001360:	.4byte 0x0000FF80
_08001364:	.4byte 0x02000B18
_08001368:	.4byte 0x02000B04
	thumb_func_end sub_0800132c

	thumb_func_start sub_0800136c
sub_0800136c:
	push	{ lr }
	ldr		r0, _08001388
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800137e
	mov		r0, #0x7f
	and		r1, r0
_0800137e:
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	strh	r1, [r0, #0x0]
	pop		{ r0 }
	bx		r0

_08001388:	.4byte 0x02000B18
	thumb_func_end sub_0800136c

	thumb_func_start sub_0800138c
sub_0800138c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	lsl		r3, r6, #0x2
	ldr		r1, _080013dc
	add		r1, r3, r1
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	and		r0, r2
	lsl		r0, r0, #0x3
	mov		r4, #0xc0
	lsl		r4, r4, #0x13
	add		r0, r0, r4
	str		r0, [r1, #0x0]
	ldr		r1, _080013e0
	add		r1, r3, r1
	mov		r0, #0xc
	and		r0, r2
	lsl		r0, r0, #0xc
	add		r0, r0, r4
	str		r0, [r1, #0x0]
	ldr		r5, _080013e4
	ldr		r0, [r5, #0x0]
	add		r3, r3, r0
	ldr		r4, _080013e8
	ldr		r0, [r4, #0x0]
	str		r0, [r3, #0x0]
	lsl		r1, r6, #0x1
	ldr		r0, _080013ec
	add		r1, r1, r0
	ldr		r3, _080013f0
	lsr		r2, r2, #0xe
	lsl		r2, r2, #0x1
	cmp		r6, #0x1
	ble		_080013f4
	mov		r0, #0x7
	and		r0, r7
	lsl		r0, r0, #0x3
	add		r0, r2, r0
	b		_080013f6

_080013dc:	.4byte 0x0200CE4C
_080013e0:	.4byte 0x0200CE5C
_080013e4:	.4byte 0x080c71ac
_080013e8:	.4byte 0x080c71b0
_080013ec:	.4byte 0x0200CE84
_080013f0:	.4byte 0x080C718E

_080013f4:
	add		r0, r2, #0x0
_080013f6:
	add		r0, r3, r0
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	lsl		r1, r6, #0x1
	ldr		r0, _08001420
	add		r2, r1, r0
	lsl		r0, r6, #0x2
	ldr		r1, [r5, #0x0]
	add		r0, r0, r1
	ldr		r1, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x1
	cmp		r0, #0x0
	bge		_08001416
	add		r0, #0xf
_08001416:
	asr		r0, r0, #0x4
	strh	r0, [r2, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08001420:	.4byte 0x0200CE8C
	thumb_func_end sub_0800138c

	thumb_func_start sub_08001424
sub_08001424:
	push	{ r4, lr }
	ldr		r4, _08001448
	lsl		r1, r0, #0x2
	ldr		r2, _0800144c
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x1
	ldr		r2, _08001450
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	ldr		r3, _08001454
	add		r0, r4, #0x0
	bl		sub_08000a2c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08001448:	.4byte 0x080c718c
_0800144c:	.4byte 0x0200CE4C
_08001450:	.4byte 0x0200CE84
_08001454:	.4byte 0x81000003
	thumb_func_end sub_08001424

	thumb_func_start sub_08001458
sub_08001458:
	push	{ lr }
	mov		r1, #0xe0
	lsl		r1, r1, #0x13
	ldr		r0, _08001470
	ldr		r0, [r0, #0x0]
	ldr		r2, _08001474
_08001464:
	str		r0, [r1, #0x0]
	add		r1, #0x8
	cmp		r1, r2
	bls		_08001464
	pop		{ r0 }
	bx		r0

_08001470:	.4byte 0x080c7184
_08001474:	.4byte 0x070003FF
	thumb_func_end sub_08001458

	thumb_func_start sub_08001478
sub_08001478:
	push	{ r4, r5, lr }
	ldr		r0, _080014b8
	add		r5, r0, #0x0
	add		r5, #0xc
	mov		r4, #0x7
_08001482:
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_0800082c
	add		r5, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08001482
	ldr		r1, _080014bc
_08001494:
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08001494
	ldr		r0, _080014b8
	add		r5, r0, #0x0
	add		r5, #0x6c
	mov		r4, #0x7
_080014a2:
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_0800082c
	add		r5, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080014a2
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080014b8:	.4byte 0x03005918
_080014bc:	.4byte 0x0200CE20
	thumb_func_end sub_08001478

	thumb_func_start sub_080014c0
sub_080014c0:
	push	{ r4, r5, lr }
	add		r1, r0, #0x0
	sub		r1, #0x1
	cmp		r1, #0x0
	blt		_080014ea
	ldr		r0, _080014f0
	ldr		r4, [r0, #0x0]
	add		r5, r0, #0x0
_080014d0:
	ldrh	r0, [r4, #0x0]
	add		r2, r0, #0x0
	ldrh	r0, [r4, #0x0]
	sub		r3, r1, #0x1
	cmp		r2, r0
	bne		_080014e4
	ldr		r1, [r5, #0x0]
_080014de:
	ldrh	r0, [r1, #0x0]
	cmp		r2, r0
	beq		_080014de
_080014e4:
	add		r1, r3, #0x0
	cmp		r1, #0x0
	bge		_080014d0
_080014ea:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080014f0:	.4byte 0x080c71b4
	thumb_func_end sub_080014c0

	thumb_func_start sub_080014f4
sub_080014f4:
	push	{ lr }
	ldr		r1, _08001504
_080014f8:
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080014f8
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1502, 0x2

_08001504:	.4byte 0x0200CE20
	thumb_func_end sub_080014f4

	thumb_func_start sub_08001508
sub_08001508:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	add		r2, r3, #0x0
	cmp		r2, #0x0
	ble		_0800154c
	ldr		r0, [sp, #0x14]
	lsr		r5, r0, #0x10
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	and		r0, r1
	lsr		r3, r2, #0x1
	cmp		r0, #0x0
	beq		_0800152c
	lsr		r3, r2, #0x2
_0800152c:
	ldrb	r1, [r4, #0x18]
	mov		r0, #0x1
	eor		r0, r1
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r4, r1
	str		r6, [r1, #0x0]
	str		r7, [r1, #0x4]
	lsl		r2, r5, #0x10
	lsl		r0, r3, #0x10
	lsr		r0, r0, #0x10
	orr		r2, r0
	str		r2, [r1, #0x8]
	mov		r0, #0x2
	strb	r0, [r4, #0x1a]
_0800154c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1552, 0xA
	thumb_func_end sub_08001508

	thumb_func_start sub_0800155c
sub_0800155c:
	push	{ r4, lr }
	mov		r3, #0x0
	str		r3, [r1, #0x8]
	ldr		r3, [r1, #0x8]
	ldr		r3, [r2, #0x0]
	str		r3, [r1, #0x0]
	ldr		r3, [r2, #0x4]
	str		r3, [r1, #0x4]
	ldr		r3, [r2, #0x8]
	ldr		r4, _08001588
	and		r3, r4
	str		r3, [r1, #0x8]
	ldr		r3, [r1, #0x8]
	ldr		r2, [r2, #0x8]
	str		r2, [r1, #0x8]
	ldr		r1, [r1, #0x8]
	mov		r1, #0x1
	strb	r1, [r0, #0x19]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1586, 0x2

_08001588:	.4byte 0xdfffffff
	bx		lr

.incbin "base.gba", 0x158E, 0x2
	push	{ lr }
	ldr		r1, _080015c8
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r0, _080015cc
	ldr		r1, _080015d0
	bl		sub_080009c0
	ldr		r0, _080015d4
	ldr		r1, _080015d8
	bl		sub_080009c0
	bl		sub_08094f4a
	ldr		r1, _080015dc
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x1
	beq		_080015c2
	bl		sub_080964bc
	bl		sub_08094f9e
_080015c2:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x15C6, 0x2

_080015c8:	.4byte 0x03007FF8
_080015cc:	.4byte 0x0200CDE4
_080015d0:	.4byte 0x040000B0
_080015d4:	.4byte 0x0200CE00
_080015d8:	.4byte 0x040000D4
_080015dc:	.4byte 0x0200CE20
	thumb_func_end sub_0800155c

	thumb_func_start sub_080015e0
sub_080015e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	mov		r6, #0x81
	neg		r6, r6
	mov		r10, r6
	mov		r7, #0x41
	neg		r7, r7
	mov		r9, r7
	add		r3, r0, #0x0
	add		r5, r3, #0x0
	add		r5, #0x10
	add		r4, r3, #0x0
	add		r4, #0xc
	add		r0, r3, #0x4
	mov		r8, r0
_0800160a:
	ldr		r2, [r3, #0x0]
	ldr		r1, [r3, #0x8]
	orr		r1, r2
	str		r1, [r3, #0x8]
	add		r0, r2, #0x0
	mov		r6, #0x20
	and		r0, r6
	cmp		r0, #0x0
	beq		_08001624
	mov		r7, #0x11
	neg		r7, r7
	and		r1, r7
	str		r1, [r3, #0x8]
_08001624:
	mov		r0, #0x10
	mov		r12, r0
	add		r0, r2, #0x0
	mov		r1, r12
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800163c
	ldr		r0, [r3, #0x8]
	mov		r6, #0x21
	neg		r6, r6
	and		r0, r6
	str		r0, [r3, #0x8]
_0800163c:
	add		r0, r2, #0x0
	mov		r7, #0x40
	and		r0, r7
	cmp		r0, #0x0
	beq		_0800164e
	ldr		r0, [r3, #0x8]
	mov		r1, r10
	and		r0, r1
	str		r0, [r3, #0x8]
_0800164e:
	mov		r6, #0x80
	and		r2, r6
	cmp		r2, #0x0
	beq		_0800165e
	ldr		r0, [r3, #0x8]
	mov		r7, r9
	and		r0, r7
	str		r0, [r3, #0x8]
_0800165e:
	ldr		r0, [r3, #0x4]
	ldr		r2, [r3, #0x0]
	bic		r2, r0
	ldr		r1, [r3, #0xc]
	orr		r1, r2
	str		r1, [r3, #0xc]
	add		r0, r2, #0x0
	mov		r7, #0x20
	and		r0, r7
	cmp		r0, #0x0
	beq		_0800167c
	mov		r0, #0x11
	neg		r0, r0
	and		r1, r0
	str		r1, [r3, #0xc]
_0800167c:
	add		r0, r2, #0x0
	mov		r1, r12
	and		r0, r1
	cmp		r0, #0x0
	beq		_08001690
	ldr		r0, [r4, #0x0]
	mov		r7, #0x21
	neg		r7, r7
	and		r0, r7
	str		r0, [r4, #0x0]
_08001690:
	add		r0, r2, #0x0
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_080016a2
	ldr		r0, [r4, #0x0]
	mov		r7, r10
	and		r0, r7
	str		r0, [r4, #0x0]
_080016a2:
	and		r2, r6
	cmp		r2, #0x0
	beq		_080016b0
	ldr		r0, [r3, #0xc]
	mov		r1, r9
	and		r0, r1
	str		r0, [r3, #0xc]
_080016b0:
	mov		r7, r8
	ldr		r2, [r7, #0x0]
	ldr		r0, [r3, #0x0]
	bic		r2, r0
	ldr		r1, [r3, #0x10]
	orr		r1, r2
	str		r1, [r3, #0x10]
	add		r0, r2, #0x0
	mov		r7, #0x20
	and		r0, r7
	cmp		r0, #0x0
	beq		_080016d0
	mov		r0, #0x11
	neg		r0, r0
	and		r1, r0
	str		r1, [r3, #0x10]
_080016d0:
	add		r0, r2, #0x0
	mov		r1, r12
	and		r0, r1
	cmp		r0, #0x0
	beq		_080016e4
	ldr		r0, [r5, #0x0]
	mov		r7, #0x21
	neg		r7, r7
	and		r0, r7
	str		r0, [r5, #0x0]
_080016e4:
	add		r0, r2, #0x0
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_080016f6
	ldr		r0, [r5, #0x0]
	mov		r7, r10
	and		r0, r7
	str		r0, [r5, #0x0]
_080016f6:
	and		r2, r6
	cmp		r2, #0x0
	beq		_08001704
	ldr		r0, [r3, #0x10]
	mov		r1, r9
	and		r0, r1
	str		r0, [r3, #0x10]
_08001704:
	ldmia	r3!, { r0 }
	mov		r6, r8
	add		r6, #0x4
	mov		r8, r6
	sub		r6, #0x4
	stmia	r6!, { r0 }
	add		r5, #0x4
	add		r4, #0x4
	ldr		r7, [sp, #0x0]
	add		r7, #0x1
	str		r7, [sp, #0x0]
	cmp		r7, #0x0
	bgt		_08001720
	b		_0800160a
_08001720:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080015e0

	thumb_func_start sub_08001730
sub_08001730:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r0, _08001790
	mov		r12, r0
	ldr		r6, [r0, #0x0]
	mov		r4, #0x0
	add		r2, r5, #0x0
	add		r2, #0x8
	mov		r7, #0x0
_08001742:
	ldr		r0, [r2, #0x4]
	str		r0, [r2, #0x20]
	ldr		r0, [r2, #0xc]
	add		r0, #0x1
	str		r0, [r2, #0xc]
	ldr		r1, [r2, #0x1c]
	and		r1, r6
	ldr		r0, [r2, #0x0]
	and		r0, r6
	cmp		r1, r0
	beq		_0800175a
	str		r4, [r2, #0xc]
_0800175a:
	ldr		r1, [r2, #0xc]
	ldr		r3, [r5, #0x18]
	cmp		r1, r3
	beq		_08001768
	ldr		r0, [r5, #0x1c]
	cmp		r1, r0
	blt		_08001774
_08001768:
	str		r3, [r2, #0xc]
	ldr		r0, [r2, #0x0]
	mov		r3, r12
	ldr		r1, [r3, #0x0]
	and		r0, r1
	str		r0, [r2, #0x20]
_08001774:
	ldr		r0, [r2, #0x0]
	str		r0, [r2, #0x1c]
	ldr		r0, [r2, #0x4]
	str		r0, [r2, #0x18]
	str		r4, [r2, #0x8]
	str		r4, [r2, #0x0]
	str		r4, [r2, #0x4]
	add		r2, #0x4
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_08001742
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08001790:	.4byte 0x0200CE98
	thumb_func_end sub_08001730

	thumb_func_start sub_08001794
sub_08001794:
	push	{ r4, r5, r6, lr }
	ldr		r3, _08001818
	ldr		r0, [r3, #0x0]
	mov		r1, #0x18
	mov		r2, #0x1e
	str		r1, [r0, #0x18]
	str		r2, [r0, #0x1c]
	add		r6, r3, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
_080017a8:
	str		r1, [r0, #0x28]
	str		r1, [r0, #0x24]
	str		r1, [r0, #0x20]
	str		r1, [r0, #0x14]
	str		r1, [r0, #0x10]
	str		r1, [r0, #0xc]
	str		r1, [r0, #0x8]
	str		r1, [r0, #0x4]
	stmia	r0!, {  r1 }
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080017a8
	ldr		r1, _0800181c
	mov		r0, #0xfc
	lsl		r0, r0, #0x2
	str		r0, [r1, #0x0]
	ldr		r4, [r6, #0x0]
	ldr		r5, _08001820
	add		r0, #0xf
	add		r2, r0, #0x0
	add		r3, r4, #0x0
	mov		r1, #0x0
_080017d4:
	ldrh	r0, [r5, #0x0]
	eor		r0, r2
	stmia	r3!, { r0 }
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_080017d4
	add		r0, r4, #0x0
	bl		sub_080015e0
	add		r0, r4, #0x0
	bl		sub_08001730
	ldr		r4, [r6, #0x0]
	ldr		r5, _08001820
	ldr		r0, _08001824
	add		r2, r0, #0x0
	add		r3, r4, #0x0
	mov		r1, #0x0
_080017f8:
	ldrh	r0, [r5, #0x0]
	eor		r0, r2
	stmia	r3!, { r0 }
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_080017f8
	add		r0, r4, #0x0
	bl		sub_080015e0
	add		r0, r4, #0x0
	bl		sub_08001730
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1816, 0x2

_08001818:	.4byte 0x080c71c0
_0800181c:	.4byte 0x0200CE98
_08001820:	.4byte 0x04000130
_08001824:	.4byte 0x000003FF

.incbin "base.gba", 0x1828, 0x34
	thumb_func_end sub_08001794

	thumb_func_start sub_0800185c
sub_0800185c:
	ldr		r2, _0800186c
	lsl		r0, r0, #0x2
	add		r2, #0x28
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	and		r0, r1
	bx		lr

.incbin "base.gba", 0x186A, 0x2

_0800186c:	.4byte 0x02000B2C
	thumb_func_end sub_0800185c

	thumb_func_start sub_08001870
sub_08001870:
	ldr		r2, _08001880
	lsl		r0, r0, #0x2
	add		r2, #0x20
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	and		r0, r1
	bx		lr

.incbin "base.gba", 0x187E, 0x2

_08001880:	.4byte 0x02000B2C
	thumb_func_end sub_08001870

	thumb_func_start sub_08001884
sub_08001884:
	ldr		r2, _08001894
	lsl		r0, r0, #0x2
	add		r2, #0x24
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	and		r0, r1
	bx		lr

.incbin "base.gba", 0x1892, 0x2

_08001894:	.4byte 0x02000B2C
	thumb_func_end sub_08001884

	thumb_func_start sub_08001898
sub_08001898:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _080018c4
	ldr		r0, _080018c8
	add		r3, r0, #0x0
	add		r2, r4, #0x0
	mov		r1, #0x0
_080018a6:
	ldrh	r0, [r5, #0x0]
	eor		r0, r3
	stmia	r2!, { r0 }
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_080018a6
	add		r0, r4, #0x0
	bl		sub_080015e0
	add		r0, r4, #0x0
	bl		sub_08001730
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080018c4:	.4byte 0x04000130
_080018c8:	.4byte 0x000003FF
	thumb_func_end sub_08001898

	thumb_func_start sub_080018cc
sub_080018cc:
	push	{ lr }
	add		r3, r1, #0x0
	ldr		r1, [r3, #0x0]
	orr		r1, r2
	str		r1, [r3, #0x0]
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	beq		_080018e6
	mov		r0, #0x11
	neg		r0, r0
	and		r1, r0
	str		r1, [r3, #0x0]
_080018e6:
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	beq		_080018f8
	ldr		r0, [r3, #0x0]
	mov		r1, #0x21
	neg		r1, r1
	and		r0, r1
	str		r0, [r3, #0x0]
_080018f8:
	mov		r0, #0x40
	and		r0, r2
	cmp		r0, #0x0
	beq		_0800190a
	ldr		r0, [r3, #0x0]
	mov		r1, #0x81
	neg		r1, r1
	and		r0, r1
	str		r0, [r3, #0x0]
_0800190a:
	mov		r0, #0x80
	and		r0, r2
	cmp		r0, #0x0
	beq		_0800191c
	ldr		r0, [r3, #0x0]
	mov		r1, #0x41
	neg		r1, r1
	and		r0, r1
	str		r0, [r3, #0x0]
_0800191c:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1920, 0x34
	thumb_func_end sub_080018cc

	thumb_func_start sub_08001954
sub_08001954:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r3, #0x0
	ldr		r3, [sp, #0x0+0x18]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0xc0
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08001a18
	cmp		r1, r0
	bhi		_0800199e
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_080019e8
	cmp		r1, r0
	bhi		_0800198c
	cmp		r1, #0x0
	beq		_080019dc
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_080019dc
	b		_08001a88
_0800198c:
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_080019f8
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08001a08
	b		_08001a88
_0800199e:
	mov		r0, #0xa0
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08001a48
	cmp		r1, r0
	bhi		_080019bc
	mov		r0, #0xe0
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08001a28
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08001a38
	b		_08001a88
_080019bc:
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08001a68
	cmp		r1, r0
	bhi		_080019d2
	mov		r0, #0xb0
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08001a58
	b		_08001a88
_080019d2:
	mov		r0, #0xd0
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08001a78
	b		_08001a88
_080019dc:
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_08009458
	b		_08001cd6
_080019e8:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_080166d8
	b		_08001cd6
_080019f8:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_0802b730
	b		_08001cd6
_08001a08:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_0804e7e0
	b		_08001cd6
_08001a18:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_0804e9d0
	b		_08001cd6
_08001a28:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_080666f0
	b		_08001cd6
_08001a38:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_08068e48
	b		_08001cd6
_08001a48:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_0806d178
	b		_08001cd6
_08001a58:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_080739d8
	b		_08001cd6
_08001a68:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_0807cfbc
	b		_08001cd6
_08001a78:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r5, #0x0
	add		r1, r2, #0x0
	add		r2, r6, #0x0
	bl		sub_08089a50
	b		_08001cd6
_08001a88:
	ldr		r1, _08001a9c
	add		r0, r2, r1
	cmp		r0, #0x13
	bls		_08001a92
	b		_08001cc4
_08001a92:
	lsl		r0, r0, #0x2
	ldr		r1, _08001aa0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08001a9c:	.4byte 0xFFFFF080
_08001aa0:	.4byte 0x08001aa4
_08001aa4:	.4byte 0x08001b20

.incbin "base.gba", 0x1AA8, 0x4C
	thumb_func_end sub_08001954


.incbin "base.gba", 0x1AF4, 0x2C

_08001b20:

.incbin "base.gba", 0x1B20, 0x1A4

_08001cc4:

.incbin "base.gba", 0x1CC4, 0x12
_08001cd6:

.incbin "base.gba", 0x1CD6, 0xF2
_08001dc8:	.4byte 0x08001e28

.incbin "base.gba", 0x1DCC, 0x5C

_08001e28:

.incbin "base.gba", 0x1E28, 0xC8
	thumb_func_start sub_08001ef0
sub_08001ef0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	mov		r9, r1
	add		r5, r2, #0x0
	mov		r10, r3
	bl		sub_080b74f4
	mov		r0, #0x40
	add		r0, r0, r4
	mov		r8, r0
	ldr		r7, _08001f78
	str		r7, [r4, #0x78]
	ldr		r6, _08001f7c
	ldr		r0, [r6, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r0, _08001f80
	cmp		r1, r0
	beq		_08001f28
	ldr		r0, _08001f84
	mov		r1, #0x3b
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08001f28:
	str		r7, [r4, #0x78]
	ldr		r0, _08001f88
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x7c
	ldr		r0, _08001f8c
	strh	r0, [r1, #0x0]
	cmp		r5, #0x0
	bne		_08001f46
	ldr		r0, _08001f84
	mov		r1, #0xc7
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08001f46:
	mov		r0, r8
	mov		r1, r9
	add		r2, r5, #0x0
	bl		sub_0808ba04
	add		r0, r4, #0x0
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, [r6, #0x4]
	bl		sub_0808b560
	add		r0, r4, #0x0
	add		r0, #0x7e
	mov		r1, r10
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1F76, 0x2

_08001f78:	.4byte 0x080e03ec
_08001f7c:	.4byte 0x0200BF08
_08001f80:	.4byte 0x30524353
_08001f84:	.4byte 0x080c7220 @ system/agbscript.cpp
_08001f88:	.4byte 0x080e03c4
_08001f8c:	.4byte 0x0000FFFF
	thumb_func_end sub_08001ef0

	thumb_func_start sub_08001f90
sub_08001f90:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	add		r7, r3, #0x0
	cmp		r4, #0x0
	bne		_08001faa
	ldr		r0, _08001fd4
	mov		r1, #0xc7
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08001faa:
	add		r0, r5, #0x0
	add		r0, #0x40
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0808ba04
	add		r0, r5, #0x0
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, _08001fd8
	ldr		r0, [r0, #0x4]
	bl		sub_0808b560
	add		r0, r5, #0x0
	add		r0, #0x7e
	strh	r7, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1FD2, 0x2

_08001fd4:	.4byte 0x080c7220 @ system/agbscript.cpp
_08001fd8:	.4byte 0x0200BF08
	thumb_func_end sub_08001f90

	thumb_func_start sub_08001fdc
sub_08001fdc:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	beq		_08002036
	mov		r0, #0x10
	ldrsh	r5, [r2, r0]
	ldr		r0, _0800203c
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_080004ac
	ldr		r0, _08002040
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08002036
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x5f
	beq		_08002036
	add		r0, r4, #0x0
	bl		sub_080bdc3c
	add		r0, r0, r4
	sub		r0, #0x1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x5f
	beq		_08002036
	ldr		r0, _08002044
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08002036
	ldr		r0, _08002048
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_0808c670
_08002036:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0800203c:	.4byte 0x02000070
_08002040:	.4byte 0x0200DD28
_08002044:	.4byte 0x0200CDBC
_08002048:	.4byte 0x080c7238 @ ID#_%4d_%s
	thumb_func_end sub_08001fdc

	thumb_func_start sub_0800204c
sub_0800204c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808bed0
	cmp		r0, #0x0
	bne		_08002064
	ldr		r0, _08002070
	mov		r1, #0x48
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002064:
	mov		r1, #0x12
	ldrsh	r0, [r4, r1]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x206E, 0x2

_08002070:	.4byte 0x080c7220 @ system/agbscript.cpp
	thumb_func_end sub_0800204c

	thumb_func_start sub_08002074
sub_08002074:
	push	{ lr }
	bl		sub_0808ba04
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x207E, 0x2
	thumb_func_end sub_08002074

	thumb_func_start sub_08002080
sub_08002080:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _080020b0
	str		r0, [r4, #0x38]
	add		r0, r4, #0x0
	bl		sub_0808ba04
	ldr		r0, _080020b4
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r0, _080020b8
	cmp		r1, r0
	beq		_080020a6
	ldr		r0, _080020bc
	mov		r1, #0x40
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080020a6:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x20AE, 0x2

_080020b0:	.4byte 0x080e03ec
_080020b4:	.4byte 0x0200BF08
_080020b8:	.4byte 0x30524353
_080020bc:	.4byte 0x080c7220 @ system/agbscript.cpp
	thumb_func_end sub_08002080

	thumb_func_start sub_080020c0
sub_080020c0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _080020e8
	str		r0, [r4, #0x38]
	ldr		r0, _080020ec
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r0, _080020f0
	cmp		r1, r0
	beq		_080020e0
	ldr		r0, _080020f4
	mov		r1, #0x3b
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080020e0:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_080020e8:	.4byte 0x080e03ec
_080020ec:	.4byte 0x0200BF08
_080020f0:	.4byte 0x30524353
_080020f4:	.4byte 0x080c7220 @ system/agbscript.cpp
	thumb_func_end sub_080020c0

	thumb_func_start sub_080020f8
sub_080020f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r6, #0x0
	ldr		r7, _0800213c
	ldr		r0, _08002140
	mov		r8, r0
	ldr		r5, _08002144
_08002108:
	mov		r0, #0x0
	ldrsh	r4, [r5, r0]
	mov		r0, r8
	add		r0, #0x4
	mov		r8, r0
	sub		r0, #0x4
	ldmia	r0!, { r1 }
	mov		r0, #0x0
	bl		sub_0800185c
	neg		r2, r0
	orr		r2, r0
	lsr		r2, r2, #0x1f
	ldr		r0, [r7, #0x4]
	add		r1, r4, #0x0
	bl		sub_0808b528
	add		r5, #0x2
	add		r6, #0x1
	cmp		r6, #0x9
	bls		_08002108
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800213c:	.4byte 0x0200BF08
_08002140:	.4byte 0x080c71e4
_08002144:	.4byte 0x080c720c
	thumb_func_end sub_080020f8

	thumb_func_start sub_08002148
sub_08002148:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r4, _08002198
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r6, r0, #0x0
	cmp		r6, #0x0
	bge		_0800217a
	ldr		r0, _0800219c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800217a
	ldr		r0, _080021a0
	ldr		r0, [r0, #0x0]
	ldr		r1, _080021a4
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800217a:
	ldr		r4, [r4, #0x0]
	ldr		r0, [r4, #0x0]
	add		r1, r6, #0x0
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2196, 0x2

_08002198:	.4byte 0x080c7260
_0800219c:	.4byte 0x0200CDBC
_080021a0:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_080021a4:	.4byte 0x080c71c4
	thumb_func_end sub_08002148

	thumb_func_start sub_080021a8
sub_080021a8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r3, r2, #0x0
	ldr		r0, _080021c4
	ldr		r0, [r0, #0x4]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808b734
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x21C2, 0x2

_080021c4:	.4byte 0x0200BF08
	thumb_func_end sub_080021a8

	thumb_func_start sub_080021c8
sub_080021c8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r3, r2, #0x0
	ldr		r0, _080021e4
	ldr		r0, [r0, #0x4]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808b6cc
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x21E2, 0x2

_080021e4:	.4byte 0x0200BF08
	thumb_func_end sub_080021c8

	thumb_func_start sub_080021e8
sub_080021e8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r3, r2, #0x0
	ldr		r0, _08002204
	ldr		r0, [r0, #0x4]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808b63c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2202, 0x2

_08002204:	.4byte 0x0200BF08
	thumb_func_end sub_080021e8

	thumb_func_start sub_08002208
sub_08002208:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r3, r2, #0x0
	ldr		r0, _08002224
	ldr		r0, [r0, #0x4]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808b5bc
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2222, 0x2

_08002224:	.4byte 0x0200BF08
	thumb_func_end sub_08002208

	thumb_func_start sub_08002228
sub_08002228:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08002238
	ldr		r0, [r0, #0x4]
	bl		sub_0808b58c
	pop		{ r0 }
	bx		r0

_08002238:	.4byte 0x0200BF08
	thumb_func_end sub_08002228

	thumb_func_start sub_0800223c
sub_0800223c:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0800224c
	ldr		r0, [r0, #0x4]
	bl		sub_0808b560
	pop		{ r0 }
	bx		r0

_0800224c:	.4byte 0x0200BF08
	thumb_func_end sub_0800223c

	thumb_func_start sub_08002250
sub_08002250:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, _08002264
	ldr		r0, [r0, #0x4]
	add		r1, r3, #0x0
	bl		sub_0808b528
	pop		{ r0 }
	bx		r0

_08002264:	.4byte 0x0200BF08
	thumb_func_end sub_08002250

	thumb_func_start sub_08002268
sub_08002268:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08002278
	ldr		r0, [r0, #0x4]
	bl		sub_0808b4f8
	pop		{ r0 }
	bx		r0

_08002278:	.4byte 0x0200BF08
	thumb_func_end sub_08002268

	thumb_func_start sub_0800227c
sub_0800227c:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0800228c
	ldr		r0, [r0, #0x4]
	bl		sub_0808b4d0
	pop		{ r1 }
	bx		r1

_0800228c:	.4byte 0x0200BF08
	thumb_func_end sub_0800227c

	thumb_func_start sub_08002290
sub_08002290:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r8, r0
	ldr		r4, _080022a0
	b		_080022aa

_080022a0:	.4byte 0x080c7274

_080022a4:
	mov		r0, r8
	bl		sub_080b7690
_080022aa:
	ldr		r0, _08002370
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080022a4
	ldr		r0, [r4, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080022c4
	ldr		r0, _08002374
	bl		sub_0808c670
_080022c4:
	mov		r4, #0x0
	ldr		r3, _08002378
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0800237c
	add		r2, r0, #0x0
	mov		r0, #0xf0
	bic		r0, r1
	cmp		r0, #0xf0
	beq		_080022f2
	add		r7, r3, #0x0
	add		r6, r2, #0x0
	mov		r5, #0xf0
_080022dc:
	mov		r0, r8
	bl		sub_080b7690
	add		r4, #0x1
	ldrh	r0, [r7, #0x0]
	eor		r0, r6
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	and		r0, r5
	cmp		r0, #0xf0
	bne		_080022dc
_080022f2:
	mov		r10, r4
	ldr		r3, _08002378
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0800237c
	add		r2, r0, #0x0
	mov		r0, #0xf0
	bic		r0, r1
	cmp		r0, #0x0
	beq		_08002320
	add		r7, r3, #0x0
	add		r6, r2, #0x0
	mov		r5, #0xf0
_0800230a:
	mov		r0, r8
	bl		sub_080b7690
	add		r4, #0x1
	ldrh	r0, [r7, #0x0]
	eor		r0, r6
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	and		r0, r5
	cmp		r0, #0x0
	bne		_0800230a
_08002320:
	mov		r9, r4
	ldr		r3, _08002378
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0800237c
	add		r2, r0, #0x0
	mov		r0, #0xf0
	bic		r0, r1
	cmp		r0, #0xf0
	beq		_0800234e
	add		r7, r3, #0x0
	add		r6, r2, #0x0
	mov		r5, #0xf0
_08002338:
	mov		r0, r8
	bl		sub_080b7690
	add		r4, #0x1
	ldrh	r0, [r7, #0x0]
	eor		r0, r6
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	and		r0, r5
	cmp		r0, #0xf0
	bne		_08002338
_0800234e:
	mov		r1, r9
	mov		r2, r10
	sub		r0, r1, r2
	cmp		r0, #0x4
	bgt		_080022f2
	ldr		r1, _08002380
	ldrb	r0, [r1, #0x0]
	add		r0, #0x3
	strb	r0, [r1, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x236E, 0x2

_08002370:	.4byte 0x00000837
_08002374:	.4byte 0x080c7264 @ Scanning_GBP
_08002378:	.4byte 0x04000130
_0800237c:	.4byte 0x000003FF
_08002380:	.4byte 0x0200D09C
	thumb_func_end sub_08002290

	thumb_func_start sub_08002384
sub_08002384:
	push	{ r4, r5, lr }
	ldr		r5, _080023b0
	ldr		r1, _080023b4
	add		r0, r5, r1
	mov		r1, #0x40
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _080023b8
	str		r0, [r4, #0xc]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080023b0:	.4byte 0x0200DB30
_080023b4:	.4byte 0xFFFFFED0
_080023b8:	.4byte 0x080e03fc
	thumb_func_end sub_08002384

	thumb_func_start sub_080023bc
sub_080023bc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _0800240c
	str		r0, [r5, #0xc]
	ldr		r0, _08002410
	ldr		r4, _08002414
	ldrb	r1, [r4, #0x0]
	bl		sub_08002250
	ldrb	r0, [r4, #0x0]
	bl		sub_0808e834
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080023ee
	ldr		r0, _08002418
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080023ee
	ldr		r0, _0800241c
	ldrb	r1, [r4, #0x0]
	bl		sub_0808c670
_080023ee:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_08002404
	add		r0, r5, #0x0
	bl		sub_080b74c8
_08002404:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x240A, 0x2

_0800240c:	.4byte 0x080e03fc
_08002410:	.4byte 0x00000838
_08002414:	.4byte 0x0200D09C
_08002418:	.4byte 0x0200CDBC
_0800241c:	.4byte 0x080c7278 @ Detected_GBP_(%d)

.incbin "base.gba", 0x2420, 0x14
	thumb_func_end sub_080023bc

	thumb_func_start sub_08002434
sub_08002434:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r8, r1
	ldr		r0, _08002480
	mov		r1, #0x0
	mov		r2, #0xc0
	bl		sub_0808c788
	ldr		r2, _08002484
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_0808c828
	ldr		r6, _08002488
	ldr		r1, _0800248c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r7, _08002490
	ldr		r3, _08002494
	mov		r9, r3
	cmp		r1, r0
	bcs		_080024a4
	ldr		r3, _08002498
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800246e:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_0800249c
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080024a8

_08002480:	.4byte 0x0200CEDC
_08002484:	.4byte 0x00003DC4
_08002488:	.4byte 0x02000BAC
_0800248c:	.4byte 0x080c7634 @ Keyword
_08002490:	.4byte 0x080c7c34 @ Hamtaro
_08002494:	.4byte 0x080c7c38
_08002498:	.4byte 0x02008880

_0800249c:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800246e
_080024a4:
	mov		r4, #0x1
	neg		r4, r4
_080024a8:
	cmp		r4, #0x0
	bge		_080024ba
	ldr		r0, _08002608
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080024ba:
	add		r1, r5, #0x0
	ldr		r0, [r7, #0x0]
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	add		r1, #0xc4
	mov		r0, r8
	strb	r0, [r1, #0x0]
	ldr		r0, _0800260c
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mov		r2, #0x1
	lsl		r2, r1
	mov		r1, #0x6
	bl		sub_080021c8
	add		r0, r5, #0x0
	bl		sub_080034b0
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x3
	mov		r3, #0x1
	bl		sub_0800327c
	ldr		r0, _08002610
	bl		sub_08002268
	ldr		r0, _08002614
	bl		sub_08002268
	ldr		r1, _08002618
	add		r0, r5, r1
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	mov		r2, #0x4
	bl		sub_0808c720
	ldr		r3, _0800261c
	add		r1, r5, r3
	mov		r0, #0xc
	strb	r0, [r1, #0x0]
	mov		r0, #0xe5
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	mov		r0, #0x5b
	strb	r0, [r1, #0x0]
	ldr		r2, _08002620
	add		r1, r5, r2
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	sub		r3, #0x5
	add		r1, r5, r3
	mov		r0, #0x4e
	strb	r0, [r1, #0x0]
	ldr		r0, _08002624
	add		r1, r5, r0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r2, #0xc
	add		r1, r5, r2
	mov		r0, #0x21
	strb	r0, [r1, #0x0]
	add		r3, #0xc
	add		r1, r5, r3
	mov		r0, #0x25
	strb	r0, [r1, #0x0]
	ldr		r0, _08002628
	add		r1, r5, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r2, #0x3
	add		r1, r5, r2
	mov		r0, #0x5
	strb	r0, [r1, #0x0]
	sub		r3, #0x3
	add		r1, r5, r3
	mov		r0, #0x26
	strb	r0, [r1, #0x0]
	ldr		r0, _0800262c
	add		r1, r5, r0
	mov		r0, #0x6
	strh	r0, [r1, #0x0]
	add		r2, #0xa
	add		r1, r5, r2
	mov		r0, #0xe
	strh	r0, [r1, #0x0]
	add		r3, #0x11
	add		r1, r5, r3
	mov		r0, #0x12
	strh	r0, [r1, #0x0]
	mov		r0, #0xea
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	mov		r0, #0x1d
	strh	r0, [r1, #0x0]
	sub		r2, #0x2
	add		r1, r5, r2
	mov		r0, #0x56
	strh	r0, [r1, #0x0]
	sub		r3, #0xa
	add		r1, r5, r3
	mov		r0, #0x4a
	strh	r0, [r1, #0x0]
	ldr		r0, _08002630
	add		r1, r5, r0
	sub		r0, #0xa5
	strh	r0, [r1, #0x0]
	sub		r2, #0x19
	add		r1, r5, r2
	mov		r0, #0x4
	strb	r0, [r1, #0x0]
	sub		r3, #0x1f
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	sub		r2, #0x5c
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	sub		r3, #0x18
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	add		r2, #0x44
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x10
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	sub		r2, #0x18
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	sub		r3, #0x54
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	add		r2, #0x8
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x10
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	sub		r2, #0x20
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x1c
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	add		r2, #0x8
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	sub		r3, #0x34
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	sub		r2, #0x34
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_08002634
	add		r0, r5, #0x0
	bl		sub_08002f84
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2606, 0x2

_08002608:	.4byte 0x080c7bd0 @ system/savedata.cpp
_0800260c:	.4byte 0x00000876
_08002610:	.4byte 0x00000839
_08002614:	.4byte 0x0000079E
_08002618:	.4byte 0x00003DB8
_0800261c:	.4byte 0x00000395
_08002620:	.4byte 0x00000391
_08002624:	.4byte 0x0000039E
_08002628:	.4byte 0x0000039B
_0800262c:	.4byte 0x000003A6
_08002630:	.4byte 0x000003AE
	thumb_func_end sub_08002434

	thumb_func_start sub_08002634
sub_08002634:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	str		r0, [sp, #0x0]
	ldr		r0, _08002688
	bl		sub_08002268
	ldr		r0, _0800268c
	mov		r1, #0x10
	mov		r2, #0x1
	bl		sub_080021c8
	ldr		r5, _08002690
	ldr		r1, PTR_PTR_s_Keyword_08002694
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r6, _08002698
	ldr		r7, _0800269c
	ldr		r3, _080026a0
	mov		r8, r3
	ldr		r2, _080026a4
	mov		r9, r2
	ldr		r3, _080026a8
	mov		r10, r3
	cmp		r1, r0
	bcs		_080026b8
	ldr		r3, _080026ac
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002676:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080026b0
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080026bc

_08002688:	.4byte 0x0000079F
_0800268c:	.4byte 0x00000433
_08002690:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_08002694:	.4byte 0x080c7634 @ Keyword
_08002698:	.4byte 0x080c7c3c
_0800269c:	.4byte 0x080c7c40
_080026a0:	.4byte 0x080c7c44
_080026a4:	.4byte 0x080c7c48
_080026a8:	.4byte 0x080c7c4c
_080026ac:	.4byte 0x02008880

_080026b0:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002676
_080026b8:
	mov		r4, #0x1
	neg		r4, r4
_080026bc:
	cmp		r4, #0x0
	bge		_080026cc
	ldr		r0, _08002760
	ldr		r1, _08002764
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080026cc:
	ldr		r0, [sp, #0x0]
	add		r0, #0xf0
	mov		r2, #0x88
	lsl		r2, r2, #0x2
	mov		r1, #0x0
	bl		sub_0808c828
	ldr		r0, [sp, #0x0]
	ldr		r2, _08002768
	add		r1, r0, r2
	mov		r0, #0x4
	strb	r0, [r1, #0x0]
	ldr		r3, [sp, #0x0]
	sub		r2, #0x20
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	ldr		r2, _0800276c
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	add		r2, #0xf0
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	add		r2, #0x20
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	add		r2, #0x20
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	sub		r2, #0x80
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	sub		r2, #0xf0
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	ldr		r2, _08002770
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	sub		r2, #0xb0
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	add		r2, #0x30
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	add		r2, #0x40
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	sub		r2, #0x20
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	sub		r2, #0xd0
	add		r1, r3, r2
	strb	r0, [r1, #0x0]
	add		r1, r3, #0x0
	add		r1, #0xf5
	strb	r0, [r1, #0x0]
	ldr		r5, [r6, #0x0]
	ldr		r1, _08002774
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08002784
	ldr		r3, _08002778
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800274e:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_0800277c
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002788

_08002760:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002764:	.4byte 0x00000181
_08002768:	.4byte 0x000002E5
_0800276c:	.4byte 0x00000175
_08002770:	.4byte 0x00000245
_08002774:	.4byte 0x080c7634 @ Keyword
_08002778:	.4byte 0x02008880

_0800277c:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800274e
_08002784:
	mov		r4, #0x1
	neg		r4, r4
_08002788:
	cmp		r4, #0x0
	bge		_0800279a
	ldr		r0, _080027c0
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800279a:
	ldr		r5, [r7, #0x0]
	ldr		r1, PTR_PTR_s_Keyword_080027c4
	mov		r7, #0xb1
	lsl		r7, r7, #0x3
	add		r0, r1, r7
	cmp		r1, r0
	bcs		_080027d4
	ldr		r3, _080027c8
	add		r2, r0, #0x0
	mov		r4, #0x0
_080027ae:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080027cc
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080027d8

_080027c0:	.4byte 0x080c7bd0 @ system/savedata.cpp
PTR_PTR_s_Keyword_080027c4:	.4byte 0x080c7634 @ Keyword
_080027c8:	.4byte 0x02008880

_080027cc:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080027ae
_080027d4:
	mov		r4, #0x1
	neg		r4, r4
_080027d8:
	cmp		r4, #0x0
	bge		_080027e8
	ldr		r0, _08002810
	ldr		r1, _08002814
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080027e8:
	mov		r0, r8
	ldr		r5, [r0, #0x0]
	ldr		r1, PTR_PTR_s_Keyword_08002818
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08002828
	ldr		r3, _0800281c
	add		r2, r0, #0x0
	mov		r4, #0x0
_080027fe:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002820
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_0800282c

_08002810:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002814:	.4byte 0x00000195
PTR_PTR_s_Keyword_08002818:	.4byte 0x080c7634 @ Keyword
_0800281c:	.4byte 0x02008880

_08002820:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080027fe
_08002828:
	mov		r4, #0x1
	neg		r4, r4
_0800282c:
	cmp		r4, #0x0
	bge		_0800283e
	ldr		r0, _08002868
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800283e:
	mov		r3, r9
	ldr		r5, [r3, #0x0]
	ldr		r1, PTR_PTR_s_Keyword_0800286c
	mov		r7, #0xb1
	lsl		r7, r7, #0x3
	add		r0, r1, r7
	cmp		r1, r0
	bcs		_0800287c
	ldr		r3, _08002870
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002854:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002874
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002880

.incbin "base.gba", 0x2866, 0x2

_08002868:	.4byte 0x080c7bd0 @ system/savedata.cpp
PTR_PTR_s_Keyword_0800286c:	.4byte 0x080c7634 @ Keyword
_08002870:	.4byte 0x02008880

_08002874:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002854
_0800287c:
	mov		r4, #0x1
	neg		r4, r4
_08002880:
	cmp		r4, #0x0
	bge		_08002890
	ldr		r0, _080028b8
	ldr		r1, _080028bc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002890:
	mov		r0, r10
	ldr		r5, [r0, #0x0]
	ldr		r1, PTR_PTR_s_Keyword_080028c0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080028d0
	ldr		r3, _080028c4
	add		r2, r0, #0x0
	mov		r4, #0x0
_080028a6:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080028c8
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080028d4

_080028b8:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080028bc:	.4byte 0x00000197
PTR_PTR_s_Keyword_080028c0:	.4byte 0x080c7634 @ Keyword
_080028c4:	.4byte 0x02008880

_080028c8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080028a6
_080028d0:
	mov		r4, #0x1
	neg		r4, r4
_080028d4:
	cmp		r4, #0x0
	bge		_080028e6
	ldr		r0, _0800290c
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080028e6:
	ldr		r5, _08002910
	ldr		r1, PTR_PTR_s_Keyword_08002914
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08002924
	ldr		r3, _08002918
	add		r2, r0, #0x0
	mov		r4, #0x0
_080028fa:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_0800291c
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002928

_0800290c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002910:	.4byte 0x02000D6C
PTR_PTR_s_Keyword_08002914:	.4byte 0x080c7634 @ Keyword
_08002918:	.4byte 0x02008880

_0800291c:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080028fa
_08002924:
	mov		r4, #0x1
	neg		r4, r4
_08002928:
	cmp		r4, #0x0
	bge		_08002938
	ldr		r0, _08002960
	ldr		r1, _08002964
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002938:
	ldr		r5, _08002968
	ldr		r1, PTR_PTR_s_Keyword_0800296c
	mov		r7, #0xb1
	lsl		r7, r7, #0x3
	add		r0, r1, r7
	cmp		r1, r0
	bcs		_0800297c
	ldr		r3, _08002970
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800294c:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002974
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002980

.incbin "base.gba", 0x295E, 0x2

_08002960:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002964:	.4byte 0x00000199
_08002968:	.4byte 0x02000D8C
PTR_PTR_s_Keyword_0800296c:	.4byte 0x080c7634 @ Keyword
_08002970:	.4byte 0x02008880

_08002974:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800294c
_0800297c:
	mov		r4, #0x1
	neg		r4, r4
_08002980:
	cmp		r4, #0x0
	bge		_08002992
	ldr		r0, _080029b8
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002992:
	ldr		r5, _080029bc
	ldr		r1, PTR_PTR_s_Keyword_080029c0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080029d0
	ldr		r3, _080029c4
	add		r2, r0, #0x0
	mov		r4, #0x0
_080029a6:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080029c8
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080029d4

_080029b8:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080029bc:	.4byte 0x02000DAC
PTR_PTR_s_Keyword_080029c0:	.4byte 0x080c7634 @ Keyword
_080029c4:	.4byte 0x02008880

_080029c8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080029a6
_080029d0:
	mov		r4, #0x1
	neg		r4, r4
_080029d4:
	cmp		r4, #0x0
	bge		_080029e4
	ldr		r0, _08002a0c
	ldr		r1, _08002a10
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080029e4:
	ldr		r5, _08002a14
	ldr		r1, PTR_PTR_s_Keyword_08002a18
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08002a28
	ldr		r3, _08002a1c
	add		r2, r0, #0x0
	mov		r4, #0x0
_080029f8:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002a20
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002a2c

.incbin "base.gba", 0x2A0A, 0x2

_08002a0c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002a10:	.4byte 0x0000019B
_08002a14:	.4byte 0x02000DCC
PTR_PTR_s_Keyword_08002a18:	.4byte 0x080c7634 @ Keyword
_08002a1c:	.4byte 0x02008880

_08002a20:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080029f8
_08002a28:
	mov		r4, #0x1
	neg		r4, r4
_08002a2c:
	cmp		r4, #0x0
	bge		_08002a3e
	ldr		r0, _08002a64
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002a3e:
	ldr		r5, _08002a68
	ldr		r1, PTR_PTR_s_Keyword_08002a6c
	mov		r7, #0xb1
	lsl		r7, r7, #0x3
	add		r0, r1, r7
	cmp		r1, r0
	bcs		_08002a7c
	ldr		r3, _08002a70
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002a52:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002a74
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002a80

_08002a64:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002a68:	.4byte 0x02000E2C
PTR_PTR_s_Keyword_08002a6c:	.4byte 0x080c7634 @ Keyword
_08002a70:	.4byte 0x02008880

_08002a74:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002a52
_08002a7c:
	mov		r4, #0x1
	neg		r4, r4
_08002a80:
	cmp		r4, #0x0
	bge		_08002a90
	ldr		r0, _08002ab8
	ldr		r1, _08002abc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002a90:
	ldr		r5, _08002ac0
	ldr		r1, PTR_PTR_s_Keyword_08002ac4
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08002ad4
	ldr		r3, _08002ac8
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002aa4:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002acc
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002ad8

.incbin "base.gba", 0x2AB6, 0x2

_08002ab8:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002abc:	.4byte 0x0000019D
_08002ac0:	.4byte 0x02000DEC
PTR_PTR_s_Keyword_08002ac4:	.4byte 0x080c7634 @ Keyword
_08002ac8:	.4byte 0x02008880

_08002acc:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002aa4
_08002ad4:
	mov		r4, #0x1
	neg		r4, r4
_08002ad8:
	cmp		r4, #0x0
	bge		_08002aea
	ldr		r0, _08002b10
	mov		r1, #0xcf
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002aea:
	ldr		r5, _08002b14
	ldr		r1, PTR_PTR_s_Keyword_08002b18
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08002b28
	ldr		r3, _08002b1c
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002afe:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002b20
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002b2c

_08002b10:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002b14:	.4byte 0x02000E0C
PTR_PTR_s_Keyword_08002b18:	.4byte 0x080c7634 @ Keyword
_08002b1c:	.4byte 0x02008880

_08002b20:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002afe
_08002b28:
	mov		r4, #0x1
	neg		r4, r4
_08002b2c:
	cmp		r4, #0x0
	bge		_08002b3c
	ldr		r0, _08002b64
	ldr		r1, _08002b68
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002b3c:
	ldr		r5, _08002b6c
	ldr		r1, PTR_PTR_s_Keyword_08002b70
	mov		r7, #0xb1
	lsl		r7, r7, #0x3
	add		r0, r1, r7
	cmp		r1, r0
	bcs		_08002b80
	ldr		r3, _08002b74
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002b50:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002b78
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002b84

.incbin "base.gba", 0x2B62, 0x2

_08002b64:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002b68:	.4byte 0x0000019F
_08002b6c:	.4byte 0x02000E4C
PTR_PTR_s_Keyword_08002b70:	.4byte 0x080c7634 @ Keyword
_08002b74:	.4byte 0x02008880

_08002b78:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002b50
_08002b80:
	mov		r4, #0x1
	neg		r4, r4
_08002b84:
	cmp		r4, #0x0
	bge		_08002b96
	ldr		r0, _08002bbc
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002b96:
	ldr		r5, _08002bc0
	ldr		r1, PTR_PTR_s_Keyword_08002bc4
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08002bd4
	ldr		r3, _08002bc8
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002baa:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002bcc
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002bd8

_08002bbc:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002bc0:	.4byte 0x02000E6C
PTR_PTR_s_Keyword_08002bc4:	.4byte 0x080c7634 @ Keyword
_08002bc8:	.4byte 0x02008880

_08002bcc:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002baa
_08002bd4:
	mov		r4, #0x1
	neg		r4, r4
_08002bd8:
	cmp		r4, #0x0
	bge		_08002be8
	ldr		r0, _08002c10
	ldr		r1, _08002c14
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002be8:
	ldr		r5, _08002c18
	ldr		r1, PTR_PTR_s_Keyword_08002c1c
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08002c2c
	ldr		r3, _08002c20
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002bfc:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002c24
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002c30

.incbin "base.gba", 0x2C0E, 0x2

_08002c10:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002c14:	.4byte 0x000001A1
_08002c18:	.4byte 0x02000E8C
PTR_PTR_s_Keyword_08002c1c:	.4byte 0x080c7634 @ Keyword
_08002c20:	.4byte 0x02008880

_08002c24:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002bfc
_08002c2c:
	mov		r4, #0x1
	neg		r4, r4
_08002c30:
	cmp		r4, #0x0
	bge		_08002c42
	ldr		r0, _08002c9c
	mov		r1, #0xd1
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002c42:
	ldr		r7, [sp, #0x0]
	mov		r1, #0xec
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, #0x0
	mov		r2, #0x18
	bl		sub_0808c828
	mov		r2, #0xed
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r3, _08002ca0
	add		r1, r7, r3
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, _08002ca4
	add		r1, r7, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r2, #0x3
	add		r1, r7, r2
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldr		r5, _08002ca8
	ldr		r1, PTR_PTR_s_Keyword_08002cac
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08002cbc
	ldr		r3, _08002cb0
	add		r2, r0, #0x0
	mov		r4, #0x0
_08002c88:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08002cb4
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08002cc0

.incbin "base.gba", 0x2C9A, 0x2

_08002c9c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002ca0:	.4byte 0x000003B5
_08002ca4:	.4byte 0x000003B6
_08002ca8:	.4byte 0x02000F5C
PTR_PTR_s_Keyword_08002cac:	.4byte 0x080c7634 @ Keyword
_08002cb0:	.4byte 0x02008880

_08002cb4:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08002c88
_08002cbc:
	mov		r4, #0x1
	neg		r4, r4
_08002cc0:
	cmp		r4, #0x0
	bge		_08002cd0
	ldr		r0, _08002d7c
	ldr		r1, _08002d80
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08002cd0:
	mov		r5, #0x0
	ldr		r7, [sp, #0x0]
	mov		r0, #0x9a
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	mov		r1, #0xb9
	lsl		r1, r1, #0x2
	add		r1, r7, r1
	str		r1, [sp, #0x4]
	mov		r3, #0xb1
	lsl		r3, r3, #0x2
	add		r3, r7, r3
	str		r3, [sp, #0x8]
	add		r0, #0x40
	add		r0, r7, r0
	str		r0, [sp, #0xC]
	mov		r1, #0x99
	lsl		r1, r1, #0x2
	add		r1, r7, r1
	str		r1, [sp, #0x10]
	mov		r3, #0xa1
	lsl		r3, r3, #0x2
	add		r3, r7, r3
	str		r3, [sp, #0x14]
	mov		r0, #0xa9
	lsl		r0, r0, #0x2
	add		r7, r7, r0
	mov		r10, r7
	ldr		r1, [sp, #0x0]
	mov		r3, #0x89
	lsl		r3, r3, #0x2
	add		r1, r1, r3
	mov		r9, r1
	ldr		r7, [sp, #0x0]
	sub		r0, #0x60
	add		r7, r7, r0
	mov		r8, r7
	ldr		r1, [sp, #0x0]
	sub		r3, #0x90
	add		r1, r1, r3
	mov		r12, r1
	sub		r0, #0x80
	ldr		r7, [sp, #0x0]
	add		r0, r7, r0
	str		r0, [sp, #0x18]
	mov		r1, #0x81
	lsl		r1, r1, #0x2
	add		r6, r7, r1
	add		r3, #0x50
	add		r4, r7, r3
	mov		r0, #0x8a
	lsl		r0, r0, #0x1
	add		r3, r7, r0
	add		r1, r7, #0x0
	add		r1, #0xf4
_08002d3e:
	cmp		r5, #0x3
	bgt		_08002d84
	ldr		r7, [sp, #0x4]
	strb	r5, [r7, #0x0]
	add		r0, r5, #0x0
	mov		r7, #0xff
	and		r0, r7
	ldr		r7, [sp, #0x8]
	strb	r0, [r7, #0x0]
	ldr		r7, [sp, #0xC]
	strb	r0, [r7, #0x0]
	ldr		r7, [sp, #0x10]
	strb	r0, [r7, #0x0]
	ldr		r7, [sp, #0x14]
	strb	r0, [r7, #0x0]
	mov		r7, r10
	strb	r0, [r7, #0x0]
	mov		r7, r9
	strb	r0, [r7, #0x0]
	strb	r0, [r2, #0x0]
	mov		r7, r8
	strb	r0, [r7, #0x0]
	mov		r7, r12
	strb	r0, [r7, #0x0]
	ldr		r7, [sp, #0x18]
	strb	r0, [r7, #0x0]
	strb	r0, [r6, #0x0]
	strb	r0, [r4, #0x0]
	strb	r0, [r3, #0x0]
	strb	r0, [r1, #0x0]
	b		_08002d86

_08002d7c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08002d80:	.4byte 0x000001A9

_08002d84:
	strb	r5, [r2, #0x0]
_08002d86:
	add		r2, #0x8
	ldr		r0, [sp, #0x4]
	add		r0, #0xc
	str		r0, [sp, #0x4]
	ldr		r7, [sp, #0x8]
	add		r7, #0x8
	str		r7, [sp, #0x8]
	ldr		r0, [sp, #0xC]
	add		r0, #0x8
	str		r0, [sp, #0xC]
	ldr		r7, [sp, #0x10]
	add		r7, #0x8
	str		r7, [sp, #0x10]
	ldr		r0, [sp, #0x14]
	add		r0, #0x8
	str		r0, [sp, #0x14]
	mov		r7, #0x8
	add		r10, r7
	mov		r0, #0x8
	add		r9, r0
	add		r8, r0
	mov		r7, #0xc
	add		r12, r7
	ldr		r0, [sp, #0x18]
	add		r0, #0x8
	str		r0, [sp, #0x18]
	add		r6, #0x8
	add		r4, #0x8
	add		r3, #0x8
	add		r1, #0x8
	add		r5, #0x1
	cmp		r5, #0x7
	ble		_08002d3e
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08002634

	thumb_func_start sub_08002dd8
sub_08002dd8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	ldr		r0, _08002f40
	bl		sub_0800227c
	mov		r9, r0
	ldr		r0, _08002f44
	mov		r8, r0
	bl		sub_0800227c
	mov		r10, r0
	ldr		r6, _08002f48
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	add		r1, r6, #0x0
	mov		r2, #0x4
	bl		sub_08002208
	ldr		r5, _08002f4c
	ldr		r7, _08002f50
	ldr		r2, _08002f54
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_0808c818
	add		r4, r5, #0x0
	add		r4, #0xcc
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	add		r0, r7, #0x0
	bl		sub_08002434
	ldr		r0, _08002f58
	bl		sub_0800223c
	ldr		r0, _08002f40
	mov		r1, r9
	bl		sub_08002250
	mov		r0, r8
	mov		r1, r10
	bl		sub_08002250
	add		r0, r6, #0x0
	mov		r1, #0xf2
	lsl		r1, r1, #0x4
	mov		r2, #0x4
	bl		sub_08002208
	ldrb	r1, [r4, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xcc
	strb	r1, [r0, #0x0]
	mov		r1, #0xf8
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	add		r6, r7, r1
	strb	r0, [r6, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	add		r1, r5, r1
	mov		r2, #0x88
	lsl		r2, r2, #0x1
	bl		sub_0808c818
	ldr		r2, _08002f5c
	add		r0, r7, r2
	add		r1, r5, r2
	ldr		r2, _08002f60
	bl		sub_0808c818
	ldr		r0, _08002f64
	add		r1, r5, r0
	ldrb	r1, [r1, #0x0]
	add		r0, r7, r0
	strb	r1, [r0, #0x0]
	ldr		r0, _08002f68
	add		r4, r7, r0
	add		r5, r5, r0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x8
	bl		sub_0808c694
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0808b560
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0808b560
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_0808b560
	add		r0, r4, #0x0
	mov		r1, #0x5
	bl		sub_0808b560
	mov		r4, #0x0
	ldr		r1, _08002f6c
	mov		r9, r1
	ldr		r2, _08002f70
	mov		r8, r2
	ldrb	r0, [r6, #0x0]
	cmp		r4, r0
	bge		_08002edc
	add		r5, r6, #0x0
	ldr		r1, _08002f74
	add		r6, r7, r1
_08002ec0:
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x0
	ble		_08002ece
	ldr		r2, _08002f78
	add		r0, r0, r2
	bl		sub_08002268
_08002ece:
	mov		r0, #0x8c
	lsl		r0, r0, #0x1
	add		r6, r6, r0
	add		r4, #0x1
	ldrb	r1, [r5, #0x0]
	cmp		r4, r1
	blt		_08002ec0
_08002edc:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	ldr		r1, _08002f7c
	add		r4, r0, r1
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	ble		_08002ef8
	ldr		r2, _08002f78
	add		r0, r0, r2
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08002ef8
	strb	r0, [r4, #0x0]
_08002ef8:
	ldr		r0, _08002f80
	bl		sub_08002148
	add		r4, r0, #0x0
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
	mov		r0, r8
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_08002f84
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r2, _08002f54
	add		r1, r4, #0x0
	bl		sub_0808c818
	add		r0, r4, #0x0
	bl		sub_08002fd8
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08002f40:	.4byte 0x0000079E
_08002f44:	.4byte 0x000004B9
_08002f48:	.4byte 0x000003BB
_08002f4c:	.4byte 0x02004970
_08002f50:	.4byte 0x02000BAC
_08002f54:	.4byte 0x00003DC4
_08002f58:	.4byte 0x00000839
_08002f5c:	.4byte 0x000004F4
_08002f60:	.4byte 0x000036B0
_08002f64:	.4byte 0x00003BA4
_08002f68:	.4byte 0x00003DBC
_08002f6c:	.4byte 0x080c7c64
_08002f70:	.4byte 0x080c7c68
_08002f74:	.4byte 0x00000602
_08002f78:	.4byte 0x000003C5
_08002f7c:	.4byte 0x000004F2
_08002f80:	.4byte 0x080c7c50 @ script_clr_scenario
	thumb_func_end sub_08002dd8

	thumb_func_start sub_08002f84
sub_08002f84:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldrh	r0, [r5, #0x8]
	mvn		r0, r0
	strh	r0, [r5, #0xa]
	ldr		r0, _08002fd0
	sub		r7, r5, r0
	mov		r6, #0x0
	mov		r4, #0x0
	ldr		r0, PTR_PTR_s_Keyword_08002fd4
	mov		r12, r0
_08002f9a:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r0, r12
	ldr		r1, [r0, #0x4]
	add		r1, r1, r7
	ldr		r2, [r0, #0x8]
	mov		r3, #0x0
	sub		r2, #0x1
	add		r4, #0x1
	cmp		r2, #0x0
	blt		_08002fbe
_08002fb2:
	ldrb	r0, [r1, #0x0]
	add		r3, r3, r0
	add		r1, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08002fb2
_08002fbe:
	add		r6, r6, r3
	cmp		r4, #0x3a
	ble		_08002f9a
	strh	r6, [r5, #0x8]
	mvn		r0, r6
	strh	r0, [r5, #0xa]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08002fd0:	.4byte 0x02000BAC
PTR_PTR_s_Keyword_08002fd4:	.4byte 0x080c7634 @ Keyword
	thumb_func_end sub_08002f84

	thumb_func_start sub_08002fd8
sub_08002fd8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	ldr		r0, _08003014
	add		r5, r0, #0x0
	add		r5, #0x8
	ldr		r1, PTR_PTR_s_Keyword_08003018
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r2, _0800301c
	mov		r9, r2
	cmp		r1, r0
	bcs		_08003028
	ldr		r3, [r2, #0x0]
	add		r2, r0, #0x0
	mov		r4, #0x0
_08003000:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08003020
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_0800302c

.incbin "base.gba", 0x3012, 0x2

_08003014:	.4byte 0x02000BAC
PTR_PTR_s_Keyword_08003018:	.4byte 0x080c7634 @ Keyword
_0800301c:	.4byte 0x080c7c80

_08003020:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08003000
_08003028:
	mov		r4, #0x1
	neg		r4, r4
_0800302c:
	cmp		r4, #0x0
	bge		_0800303c
	ldr		r0, _080030ac
	ldr		r1, _080030b0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800303c:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	mov		r1, #0x0
	bl		sub_0808b4d0
	cmp		r0, #0x0
	beq		_0800304c
	mov		r0, #0x1
_0800304c:
	mov		r8, r0
	mov		r5, #0x0
	ldr		r1, _080030b4
	ldr		r0, _080030b8
	sub		r1, r1, r0
	mov		r10, r1
_08003058:
	mov		r2, r8
	cmp		r2, #0x0
	bne		_0800306e
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b4d0
	add		r6, r5, #0x1
	cmp		r0, #0x0
	beq		_080030dc
_0800306e:
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	lsl		r0, r0, #0x3
	ldr		r2, PTR_PTR_s_Keyword_080030bc
	add		r4, r0, r2
	ldr		r0, [r4, #0x4]
	ldr		r1, [r4, #0xc]
	ldr		r2, [r4, #0x8]
	ldr		r3, [r4, #0x14]
	bl		sub_080bbc7c
	ldr		r2, [r4, #0x4]
	ldr		r1, [r4, #0x8]
	mov		r3, #0x0
	sub		r1, #0x1
	add		r6, r5, #0x1
	cmp		r1, #0x0
	blt		_0800309e
_08003092:
	ldrb	r0, [r2, #0x0]
	add		r3, r3, r0
	add		r2, #0x1
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08003092
_0800309e:
	add		r5, r3, #0x0
	ldr		r0, [r4, #0x4]
	mov		r1, r10
	add		r2, r0, r1
	ldr		r1, [r4, #0x8]
	mov		r3, #0x0
	b		_080030c6

_080030ac:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080030b0:	.4byte 0x0000023A
_080030b4:	.4byte 0x02004970
_080030b8:	.4byte 0x02000BAC
PTR_PTR_s_Keyword_080030bc:	.4byte 0x080c7634 @ Keyword

_080030c0:
	ldrb	r0, [r2, #0x0]
	add		r3, r3, r0
	add		r2, #0x1
_080030c6:
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_080030c0
	cmp		r5, r3
	beq		_080030dc
	sub		r0, r5, r3
	ldrh	r2, [r7, #0x8]
	add		r0, r0, r2
	strh	r0, [r7, #0x8]
	mvn		r0, r0
	strh	r0, [r7, #0xa]
_080030dc:
	add		r5, r6, #0x0
	cmp		r5, #0x3a
	ble		_08003058
	mov		r7, #0x0
	ldr		r2, PTR_PTR_s_Keyword_0800318c
	ldr		r1, _08003190
	ldr		r0, _08003194
	sub		r5, r1, r0
	add		r6, r2, #0x4
	add		r4, r2, #0x0
_080030f0:
	mov		r0, r8
	cmp		r0, #0x0
	bne		_08003104
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r1, r7, #0x0
	bl		sub_0808b4d0
	cmp		r0, #0x0
	beq		_08003136
_08003104:
	mov		r2, r8
	cmp		r2, #0x0
	bne		_08003118
	ldr		r1, [r6, #0x0]
	add		r0, r1, r5
	ldr		r2, [r6, #0x4]
	bl		sub_080065bc
	cmp		r0, #0x0
	beq		_08003136
_08003118:
	ldr		r1, [r4, #0x4]
	add		r0, r1, r5
	ldr		r2, [r4, #0x8]
	bl		sub_0808c720
	ldr		r0, [r4, #0x4]
	add		r0, r0, r5
	ldr		r1, [r4, #0xc]
	mov		r2, #0xf8
	lsl		r2, r2, #0x6
	add		r1, r1, r2
	ldr		r2, [r4, #0x8]
	ldr		r3, [r4, #0x14]
	bl		sub_080bbc7c
_08003136:
	add		r6, #0x18
	add		r4, #0x18
	add		r7, #0x1
	cmp		r7, #0x3a
	ble		_080030f0
	mov		r4, #0x0
	ldr		r6, _08003198
	ldr		r5, PTR_PTR_s_Keyword_0800318c
_08003146:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r1, r4, #0x0
	bl		sub_0808b4d0
	cmp		r0, #0x0
	beq		_0800316a
	mov		r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp		r0, #0x0
	bne		_08003164
	ldr		r1, [r5, #0x0]
	ldr		r0, _0800319c
	bl		sub_0808c670
_08003164:
	mov		r0, r8
	cmp		r0, #0x0
	bne		_08003172
_0800316a:
	add		r5, #0x18
	add		r4, #0x1
	cmp		r4, #0x3a
	ble		_08003146
_08003172:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_0808c788
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

PTR_PTR_s_Keyword_0800318c:	.4byte 0x080c7634 @ Keyword
_08003190:	.4byte 0x02004970
_08003194:	.4byte 0x02000BAC
_08003198:	.4byte 0x0200CDBC
_0800319c:	.4byte 0x080c7c6c @ _SaveData.%s_Saved
	thumb_func_end sub_08002fd8

	thumb_func_start sub_080031a0
sub_080031a0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0xcc
	strb	r1, [r2, #0x0]
	ldr		r0, _080031e8
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	mov		r2, #0x1
	lsl		r2, r1
	mov		r1, #0x6
	bl		sub_080021c8
	add		r0, r4, #0x0
	bl		sub_080034b0
	ldr		r5, _080031ec
	ldr		r1, PTR_PTR_s_Keyword_080031f0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r6, _080031f4
	cmp		r1, r0
	bcs		_08003204
	ldr		r3, _080031f8
	add		r2, r0, #0x0
	mov		r4, #0x0
_080031d6:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080031fc
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08003208

_080031e8:	.4byte 0x00000876
_080031ec:	.4byte 0x02000C78
PTR_PTR_s_Keyword_080031f0:	.4byte 0x080c7634 @ Keyword
_080031f4:	.4byte 0x080c7c84
_080031f8:	.4byte 0x02008880

_080031fc:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080031d6
_08003204:
	mov		r4, #0x1
	neg		r4, r4
_08003208:
	cmp		r4, #0x0
	bge		_08003218
	ldr		r0, _08003240
	ldr		r1, _08003244
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08003218:
	ldr		r5, [r6, #0x0]
	ldr		r1, PTR_PTR_s_Keyword_08003248
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08003258
	ldr		r3, _0800324c
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800322c:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08003250
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_0800325c

.incbin "base.gba", 0x323E, 0x2

_08003240:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08003244:	.4byte 0x0000027E
PTR_PTR_s_Keyword_08003248:	.4byte 0x080c7634 @ Keyword
_0800324c:	.4byte 0x02008880

_08003250:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800322c
_08003258:
	mov		r4, #0x1
	neg		r4, r4
_0800325c:
	cmp		r4, #0x0
	bge		_0800326c
	ldr		r0, _08003274
	ldr		r1, _08003278
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800326c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3272, 0x2

_08003274:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08003278:	.4byte 0x0000027F
	thumb_func_end sub_080031a0

	thumb_func_start sub_0800327c
sub_0800327c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r8, r0
	add		r5, r1, #0x0
	add		r7, r3, #0x0
	cmp		r2, #0x4
	ble		_08003294
	mov		r2, #0x1
	add		r5, #0x1
_08003294:
	cmp		r5, #0x7
	ble		_0800329c
	mov		r5, #0x1
	add		r7, #0x1
_0800329c:
	cmp		r7, #0x64
	ble		_080032a2
	mov		r7, #0x64
_080032a2:
	mov		r0, r8
	add		r0, #0xd1
	mov		r1, #0xd0
	add		r1, r8
	mov		r9, r1
	mov		r1, #0xcf
	add		r1, r8
	mov		r10, r1
	ldrb	r1, [r0, #0x0]
	cmp		r2, r1
	beq		_0800331c
	strb	r2, [r0, #0x0]
	ldr		r0, _080032f0
	sub		r1, r2, #0x1
	mov		r2, #0x1
	lsl		r2, r1
	mov		r1, #0x4
	bl		sub_080021c8
	ldr		r6, _080032f4
	ldr		r1, PTR_PTR_s_Keyword_080032f8
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08003308
	ldr		r3, _080032fc
	add		r2, r0, #0x0
	mov		r4, #0x0
_080032dc:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_08003300
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_0800330c

.incbin "base.gba", 0x32EE, 0x2

_080032f0:	.4byte 0x0000026D
_080032f4:	.4byte 0x02000C7D
PTR_PTR_s_Keyword_080032f8:	.4byte 0x080c7634 @ Keyword
_080032fc:	.4byte 0x02008880

_08003300:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080032dc
_08003308:
	mov		r4, #0x1
	neg		r4, r4
_0800330c:
	cmp		r4, #0x0
	bge		_0800331c
	ldr		r0, _0800335c
	ldr		r1, _08003360
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800331c:
	mov		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	beq		_08003390
	mov		r1, r9
	strb	r5, [r1, #0x0]
	ldr		r0, _08003364
	sub		r1, r5, #0x1
	mov		r2, #0x1
	lsl		r2, r1
	mov		r1, #0x7
	bl		sub_080021c8
	ldr		r5, _08003368
	ldr		r1, PTR_PTR_s_Keyword_0800336c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_0800337c
	ldr		r3, _08003370
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800334a:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08003374
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08003380

_0800335c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08003360:	.4byte 0x00000289
_08003364:	.4byte 0x00000266
_08003368:	.4byte 0x02000C7C
PTR_PTR_s_Keyword_0800336c:	.4byte 0x080c7634 @ Keyword
_08003370:	.4byte 0x02008880

_08003374:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800334a
_0800337c:
	mov		r4, #0x1
	neg		r4, r4
_08003380:
	cmp		r4, #0x0
	bge		_08003390
	ldr		r0, _080033d8
	ldr		r1, _080033dc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08003390:
	mov		r0, r10
	ldrb	r0, [r0, #0x0]
	cmp		r7, r0
	beq		_08003414
	mov		r1, r10
	strb	r7, [r1, #0x0]
	ldr		r4, _080033e0
	add		r0, r4, #0x0
	mov		r1, #0x64
	mov		r2, #0x0
	bl		sub_080021c8
	add		r4, r7, r4
	add		r0, r4, #0x0
	bl		sub_08002268
	ldr		r5, _080033e4
	ldr		r1, PTR_PTR_s_Keyword_080033e8
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080033f8
	ldr		r3, _080033ec
	add		r2, r0, #0x0
	mov		r4, #0x0
_080033c4:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080033f0
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080033fc

.incbin "base.gba", 0x33D6, 0x2

_080033d8:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080033dc:	.4byte 0x0000028E
_080033e0:	.4byte 0x00000201
_080033e4:	.4byte 0x02000C7B
PTR_PTR_s_Keyword_080033e8:	.4byte 0x080c7634 @ Keyword
_080033ec:	.4byte 0x02008880

_080033f0:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080033c4
_080033f8:
	mov		r4, #0x1
	neg		r4, r4
_080033fc:
	cmp		r4, #0x0
	bge		_0800340e
	ldr		r0, _08003424
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800340e:
	mov		r0, r8
	bl		sub_08002634
_08003414:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3422, 0x2

_08003424:	.4byte 0x080c7bd0 @ system/savedata.cpp
	thumb_func_end sub_0800327c

	thumb_func_start sub_08003428
sub_08003428:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	ldr		r6, _08003454
	ldr		r1, PTR_PTR_s_Keyword_08003458
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08003468
	ldr		r3, _0800345c
	add		r2, r0, #0x0
	mov		r4, #0x0
_08003442:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_08003460
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_0800346c

_08003454:	.4byte 0x02000C80
PTR_PTR_s_Keyword_08003458:	.4byte 0x080c7634 @ Keyword
_0800345c:	.4byte 0x02008880

_08003460:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08003442
_08003468:
	mov		r4, #0x1
	neg		r4, r4
_0800346c:
	cmp		r4, #0x0
	bge		_0800347c
	ldr		r0, _08003490
	ldr		r1, _08003494
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800347c:
	add		r1, r7, #0x0
	add		r1, #0xd4
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	add		r5, r5, r0
	cmp		r5, #0x0
	bge		_08003498
	mov		r5, #0x0
	b		_080034a0

.incbin "base.gba", 0x348E, 0x2

_08003490:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08003494:	.4byte 0x0000029A

_08003498:
	ldr		r2, _080034ac
	cmp		r5, r2
	ble		_080034a0
	add		r5, r2, #0x0
_080034a0:
	strh	r5, [r1, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x34AA, 0x2

_080034ac:	.4byte 0x0000270F
	thumb_func_end sub_08003428

	thumb_func_start sub_080034b0
sub_080034b0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r10, r0
	ldr		r0, _080035a0
	bl		sub_0800f354
	str		r0, [sp, #0x0]
	ldr		r0, _080035a4
	bl		sub_0800f354
	mov		r9, r0
	ldr		r0, _080035a8
	bl		sub_0800f354
	mov		r8, r0
	ldr		r0, _080035ac
	bl		sub_0800f354
	add		r7, r0, #0x0
	ldr		r0, _080035b0
	bl		sub_0800f354
	add		r6, r0, #0x0
	ldr		r0, _080035b4
	bl		sub_0800f354
	add		r5, r0, #0x0
	ldr		r0, _080035b8
	bl		sub_0800f354
	add		r4, r0, #0x0
	ldr		r0, _080035bc
	bl		sub_0800f354
	add		r1, r0, #0x0
	ldr		r2, _080035c0
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_08003522
	ldr		r0, _080035c4
	ldr		r3, [sp, #0x0]
	str		r3, [r0, #0x0]
	mov		r3, r9
	str		r3, [r0, #0x4]
	mov		r3, r8
	str		r3, [r0, #0x8]
	str		r7, [r0, #0xc]
	str		r6, [r0, #0x10]
	str		r5, [r0, #0x14]
	str		r4, [r0, #0x18]
	str		r1, [r0, #0x1c]
	mov		r0, #0x1
	str		r0, [r2, #0x0]
_08003522:
	mov		r4, #0x0
	ldr		r0, _080035c8
	add		r0, r10
	str		r0, [sp, #0x4]
_0800352a:
	ldr		r1, [sp, #0x4]
	ldrh	r0, [r1, #0x0]
	asr		r0, r4
	mov		r3, #0x1
	and		r0, r3
	add		r1, r4, #0x1
	mov		r9, r1
	cmp		r0, #0x0
	bne		_080035ea
	lsl		r4, r4, #0x2
	ldr		r3, _080035c4
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r2, r0, #0x0
	ldr		r5, _080035cc
	ldr		r0, _080035d0
	add		r4, r4, r0
	ldr		r4, [r4, #0x0]
	add		r1, r2, #0x1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	add		r2, r2, r0
	add		r0, r5, #0x0
	bl		sub_0808ec54
	ldrb	r0, [r5, #0x1]
	strb	r0, [r4, #0x1]
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x1
	strb	r0, [r4, #0x0]
	mov		r3, #0x0
	ldrb	r1, [r5, #0x1]
	cmp		r3, r1
	bge		_080035ea
	mov		r6, r10
	add		r6, #0xcc
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	mov		r8, r0
	mov		r1, #0xa0
	lsl		r1, r1, #0x3
	mov		r12, r1
	ldr		r7, _080035d4
	add		r4, #0x2
	add		r2, r5, #0x2
_0800358a:
	ldrh	r1, [r2, #0x0]
	lsr		r0, r1, #0x8
	cmp		r0, #0x0
	bne		_080035da
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x0
	bne		_080035d8
	add		r1, r8
	b		_080035da

.incbin "base.gba", 0x359E, 0x2

_080035a0:	.4byte 0x080c7c88 @ ms_night_0200
_080035a4:	.4byte 0x080c7c98 @ ms_night_0201
_080035a8:	.4byte 0x080c7ca8 @ ms_night_0202
_080035ac:	.4byte 0x080c7cb8 @ ms_night_0203
_080035b0:	.4byte 0x080c7cc8 @ ms_night_0204
_080035b4:	.4byte 0x080c7cd8 @ ms_night_0205
_080035b8:	.4byte 0x080c7ce8 @ ms_night_0206
_080035bc:	.4byte 0x080c7cf8 @ ms_night_0207
_080035c0:	.4byte 0x02008950
_080035c4:	.4byte 0x02008930
_080035c8:	.4byte 0x00003BA6
_080035cc:	.4byte 0x03007560
_080035d0:	.4byte 0x080c7c08
_080035d4:	.4byte 0x0000FF21

_080035d8:
	add		r1, r12
_080035da:
	strh	r1, [r4, #0x2]
	strh	r7, [r4, #0x0]
	add		r4, #0x4
	add		r2, #0x2
	add		r3, #0x1
	ldrb	r0, [r5, #0x1]
	cmp		r3, r0
	blt		_0800358a
_080035ea:
	mov		r4, r9
	cmp		r4, #0x7
	bls		_0800352a
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080034b0

	thumb_func_start sub_08003600
sub_08003600:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r4, r0, #0x0
	mov		r8, r1
	mov		r9, r2
	ldr		r0, _08003780
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800361e
	b		_080037d4
_0800361e:
	ldr		r0, _08003784
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800362a
	b		_080037d4
_0800362a:
	ldr		r3, _08003788
	ldr		r2, [r3, #0x0]
	add		r1, r2, #0x0
	add		r0, r2, #0x0
	add		r0, #0x18
	ldmia	r0!, { r5, r6, r7 }
	stmia	r1!, {  r5, r6, r7 }
	ldmia	r0!, { r5, r6, r7 }
	stmia	r1!, {  r5, r6, r7 }
	str		r4, [sp, #0x4]
	mov		r0, r8
	str		r0, [sp, #0x8]
	mov		r1, r9
	str		r1, [sp, #0xC]
	mov		r6, #0x0
	add		r3, sp, #0x10
	mov		r8, r3
	ldr		r7, _0800378c
	ldr		r4, _08003790
	mov		r10, r4
	mov		r9, r2
	add		r5, sp, #0x4
_08003656:
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x13
	bls		_08003668
	add		r0, r7, #0x0
	mov		r1, #0xcb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08003668:
	mov		r1, r10
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, #0x8
	add		r0, r9
	add		r0, r0, r6
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r5, #0x4
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08003656
	mov		r1, r8
	ldr		r0, _08003794
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r3, _08003798
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, r8
	mov		r1, #0x0
	mov		r2, #0x4
	bl		sub_080b65dc
	mov		r2, #0x0
	ldr		r0, _0800379c
	mov		r5, #0xee
	lsl		r5, r5, #0x2
	add		r3, r0, r5
	mov		r4, r8
	mov		r6, #0xec
	lsl		r6, r6, #0x2
	add		r1, r0, r6
_080036b2:
	strb	r2, [r1, #0x0]
	ldmia	r4!, { r0 }
	sub		r0, r0, r3
	asr		r0, r0, #0x2
	strb	r0, [r1, #0x4]
	add		r1, #0x1
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_080036b2
	ldr		r0, _0800379c
	mov		r7, #0xec
	lsl		r7, r7, #0x2
	add		r5, r0, r7
	mov		r4, r8
	mov		r6, #0x2
_080036d0:
	ldr		r0, [r4, #0x4]
	ldr		r1, [r4, #0x0]
	mov		r2, #0x4
	bl		sub_080bda08
	cmp		r0, #0x0
	bne		_080036e2
	ldrb	r0, [r5, #0x0]
	strb	r0, [r5, #0x1]
_080036e2:
	add		r5, #0x1
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_080036d0
	ldr		r4, _0800379c
	add		r0, r4, #0x0
	add		r0, #0xd0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x7
	bne		_0800375a
	mov		r2, #0x0
	ldr		r1, [sp, #0x10]
	mov		r3, #0xee
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	cmp		r1, r0
	bne		_08003708
	mov		r2, #0x1
_08003708:
	ldr		r0, _080037a0
	add		r1, r2, #0x0
	bl		sub_08002250
	mov		r2, #0x0
	ldr		r1, [sp, #0x10]
	mov		r5, #0xef
	lsl		r5, r5, #0x2
	add		r0, r4, r5
	cmp		r1, r0
	bne		_08003720
	mov		r2, #0x1
_08003720:
	mov		r0, #0xa0
	lsl		r0, r0, #0x2
	add		r1, r2, #0x0
	bl		sub_08002250
	mov		r2, #0x0
	ldr		r1, [sp, #0x10]
	mov		r6, #0xf0
	lsl		r6, r6, #0x2
	add		r0, r4, r6
	cmp		r1, r0
	bne		_0800373a
	mov		r2, #0x1
_0800373a:
	ldr		r0, _080037a4
	add		r1, r2, #0x0
	bl		sub_08002250
	mov		r2, #0x0
	ldr		r1, [sp, #0x10]
	mov		r7, #0xf1
	lsl		r7, r7, #0x2
	add		r0, r4, r7
	cmp		r1, r0
	bne		_08003752
	mov		r2, #0x1
_08003752:
	ldr		r0, _080037a8
	add		r1, r2, #0x0
	bl		sub_08002250
_0800375a:
	ldr		r3, _080037ac
	ldr		r1, PTR_PTR_s_Keyword_080037b0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080037c0
	ldr		r5, _080037b4
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800376e:
	ldr		r0, [r1, #0x4]
	cmp		r3, r0
	bne		_080037b8
	asr		r4, r4, #0x3
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080037c4

_08003780:	.4byte 0x00000854
_08003784:	.4byte 0x00000842
_08003788:	.4byte 0x080c7da4
_0800378c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08003790:	.4byte 0x080c7bbc
_08003794:	.4byte 0x080c7d94
_08003798:	.4byte 0x08006199
_0800379c:	.4byte 0x02000BAC
_080037a0:	.4byte 0x000007A1
_080037a4:	.4byte 0x0000027E
_080037a8:	.4byte 0x0000027F
_080037ac:	.4byte 0x02000F5C
PTR_PTR_s_Keyword_080037b0:	.4byte 0x080c7634 @ Keyword
_080037b4:	.4byte 0x02008880

_080037b8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800376e
_080037c0:
	mov		r4, #0x1
	neg		r4, r4
_080037c4:
	cmp		r4, #0x0
	bge		_080037d4
	ldr		r0, _080037e4
	ldr		r1, _080037e8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080037d4:
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080037e4:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080037e8:	.4byte 0x000003F7
	thumb_func_end sub_08003600

	thumb_func_start sub_080037ec
sub_080037ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	ldrb	r0, [r6, #0x6]
	ldrb	r1, [r6, #0xe]
	ldrb	r2, [r6, #0x16]
	bl		sub_08003600
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _080038a0
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_08004268
	ldr		r0, _080038a4
	cmp		r6, r0
	bne		_08003880
	ldr		r0, _080038a8
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08003880
	ldr		r0, _080038ac
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08003880
	ldr		r7, _080038b0
	ldr		r0, _080038b4
	mov		r10, r0
	ldr		r1, _080038b8
	mov		r8, r1
	mov		r0, #0x1
	mov		r9, r0
	mov		r5, #0x3
_08003846:
	ldrb	r0, [r6, #0x6]
	add		r4, r0, #0x0
	cmp		r0, #0x13
	bls		_0800385a
	add		r0, r7, #0x0
	mov		r1, #0xcb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800385a:
	mov		r1, r10
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	ble		_08003878
	lsl		r0, r0, #0x1
	add		r0, r8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r2, r9
	ldrb	r1, [r6, #0x4]
	lsl		r2, r1
	mov		r1, #0x4
	bl		sub_080021c8
_08003878:
	sub		r5, #0x1
	add		r6, #0x8
	cmp		r5, #0x0
	bge		_08003846
_08003880:
	ldr		r0, _080038a8
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08003890
	ldr		r0, _080038bc
	bl		sub_08002fd8
_08003890:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080038a0:	.4byte 0x080c7f37
_080038a4:	.4byte 0x02000D1C
_080038a8:	.4byte 0x00000854
_080038ac:	.4byte 0x00000842
_080038b0:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080038b4:	.4byte 0x080c7bbc
_080038b8:	.4byte 0x080c7da8
_080038bc:	.4byte 0x02000BAC
	thumb_func_end sub_080037ec

	thumb_func_start sub_080038c0
sub_080038c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	ldr		r0, _08003bd8
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	mov		r1, #0x0
	bl		sub_0808c828
	ldr		r6, _08003bdc
	ldr		r4, [r6, #0x0]
	ldr		r0, _08003be0
	bl		sub_0800227c
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	strb	r1, [r4, #0x0]
	ldr		r5, _08003be4
	ldr		r4, [r5, #0x0]
	ldr		r0, _08003be8
	mov		r1, #0x0
	mov		r2, #0xc0
	bl		sub_0808c788
	add		r0, r4, #0x0
	mov		r1, #0x0
	ldr		r2, _08003bec
	bl		sub_0808c828
	mov		r7, #0xf8
	lsl		r7, r7, #0x6
	mov		r10, r5
	ldr		r0, _08003bf0
	add		r4, r0, #0x4
	mov		r5, #0x3a
_08003912:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x8]
	add		r1, r1, r7
	ldr		r2, [r4, #0x4]
	ldr		r3, [r4, #0xc]
	bl		sub_080bbc7c
	add		r4, #0x18
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08003912
	ldr		r0, _08003bf4
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_0808c788
	ldr		r0, _08003bf8
	mov		r1, r10
	ldr		r4, [r1, #0x0]
	ldr		r5, _08003bec
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808c818
	ldr		r0, _08003be8
	mov		r1, #0x0
	mov		r2, #0xc0
	bl		sub_0808c788
	add		r0, r4, #0x0
	mov		r1, #0x0
	add		r2, r5, #0x0
	bl		sub_0808c828
	mov		r7, #0x0
	ldr		r0, _08003bf0
	add		r4, r0, #0x4
	mov		r5, #0x3a
_0800395e:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x8]
	add		r1, r1, r7
	ldr		r2, [r4, #0x4]
	ldr		r3, [r4, #0xc]
	bl		sub_080bbc7c
	add		r4, #0x18
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0800395e
	ldr		r0, _08003bf4
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_0808c788
	mov		r2, r10
	ldr		r4, [r2, #0x0]
	ldr		r5, _08003bfc
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080bdb94
	cmp		r0, #0x0
	beq		_080039d4
	mov		r0, #0x1
	cmp		r0, #0x0
	beq		_080039d4
	ldr		r7, _08003bf8
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080bdb94
	cmp		r0, #0x0
	beq		_080039d4
	mov		r0, #0x1
	cmp		r0, #0x0
	beq		_080039d4
	ldr		r0, _08003c00
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	add		r0, r4, #0x0
	bl		sub_08002434
	ldr		r2, _08003bec
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_0808c818
_080039c0:
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x14
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	bl		sub_080bbc38
	cmp		r0, #0x0
	bne		_080039c0
_080039d4:
	mov		r0, #0xe0
	lsl		r0, r0, #0x14
	mov		r6, r8
	ldr		r4, [r6, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r1, r4, #0x0
	bl		sub_080bbb00
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r7, r4, r0
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	cmp		r0, #0x0
	beq		_08003a3c
	ldr		r5, _08003c04
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x0
	bne		_08003a3c
	ldr		r0, _08003c08
	bl		sub_0808c670
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r0, #0x0
	bne		_08003a3c
	ldr		r0, _08003c0c
	ldr		r0, [r0, #0x0]
	mov		r3, #0xa0
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	ldr		r2, [r1, #0x0]
	mov		r6, #0xa2
	lsl		r6, r6, #0x1
	add		r1, r4, r6
	ldr		r3, [r1, #0x0]
	add		r6, #0x4
	add		r1, r4, r6
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x0]
	add		r1, r7, #0x0
	bl		sub_0808c670
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x0
	bne		_08003a3c
	ldr		r0, _08003c10
	bl		sub_0808c670
_08003a3c:
	mov		r2, r10
	ldr		r2, [r2, #0x0]
	mov		r12, r2
	mov		r3, #0x0
	mov		r8, r3
	mov		r5, #0x0
	mov		r4, #0x0
	mov		r9, r12
	ldr		r6, _08003bf0
	mov		r0, r9
	ldrh	r7, [r0, #0x8]
_08003a52:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r0, r0, r6
	ldr		r2, [r0, #0x4]
	mov		r1, r8
	orr		r2, r1
	ldr		r1, [r0, #0x8]
	mov		r3, #0x0
	sub		r1, #0x1
	add		r4, #0x1
	cmp		r1, #0x0
	blt		_08003a78
_08003a6c:
	ldrb	r0, [r2, #0x0]
	add		r3, r3, r0
	add		r2, #0x1
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08003a6c
_08003a78:
	add		r5, r5, r3
	cmp		r4, #0x3a
	ble		_08003a52
	mov		r2, #0x0
	lsl		r0, r5, #0x10
	lsr		r0, r0, #0x10
	cmp		r7, r0
	bne		_08003a98
	mvn		r0, r5
	mov		r3, r12
	ldrh	r1, [r3, #0xa]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r1, r0
	bne		_08003a98
	mov		r2, #0x1
_08003a98:
	str		r2, [sp, #0x4]
	ldr		r6, _08003bf8
	mov		r0, r9
	sub		r7, r6, r0
	mov		r5, #0x0
	mov		r4, #0x0
	ldr		r1, _08003bf0
	mov		r12, r1
	ldrh	r2, [r6, #0x8]
	mov		r8, r2
_08003aac:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r0, r12
	ldr		r1, [r0, #0x4]
	add		r1, r1, r7
	ldr		r2, [r0, #0x8]
	mov		r3, #0x0
	sub		r2, #0x1
	add		r4, #0x1
	cmp		r2, #0x0
	blt		_08003ad0
_08003ac4:
	ldrb	r0, [r1, #0x0]
	add		r3, r3, r0
	add		r1, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08003ac4
_08003ad0:
	add		r5, r5, r3
	cmp		r4, #0x3a
	ble		_08003aac
	mov		r2, #0x0
	lsl		r0, r5, #0x10
	lsr		r0, r0, #0x10
	cmp		r8, r0
	bne		_08003aee
	mvn		r0, r5
	ldrh	r1, [r6, #0xa]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r1, r0
	bne		_08003aee
	mov		r2, #0x1
_08003aee:
	str		r2, [sp, #0x8]
	ldr		r0, _08003c14
	add		r5, r0, #0x0
	add		r5, #0xcc
	add		r4, sp, #0x4
	mov		r6, #0x1
_08003afa:
	ldr		r2, [r4, #0x0]
	cmp		r2, #0x1
	bne		_08003b14
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x5
	bhi		_08003b14
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl		r2, r0
	ldr		r0, _08003c18
	mov		r1, #0x6
	bl		sub_080021c8
_08003b14:
	ldr		r3, _08003bec
	add		r5, r5, r3
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08003afa
	add		r7, r3, #0x0
	mov		r5, #0xf2
	lsl		r5, r5, #0x4
	add		r0, r5, #0x0
	bl		sub_0800223c
	mov		r1, #0x0
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x1
	bne		_08003b36
	mov		r1, #0x1
_08003b36:
	lsl		r0, r1, #0x2
	add		r0, sp
	add		r0, #0x4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08003b44
	b		_08003c80
_08003b44:
	mov		r0, #0x1
	eor		r1, r0
	lsl		r0, r1, #0x2
	add		r0, sp
	add		r0, #0x4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08003b56
	b		_08003c58
_08003b56:
	ldr		r5, _08003c1c
	cmp		r1, #0x0
	bne		_08003b5e
	ldr		r5, _08003c20
_08003b5e:
	mov		r6, r10
	ldr		r4, [r6, #0x0]
	ldr		r0, _08003be8
	mov		r1, #0x0
	mov		r2, #0xc0
	bl		sub_0808c788
	add		r0, r4, #0x0
	mov		r1, #0x0
	add		r2, r7, #0x0
	bl		sub_0808c828
	ldr		r0, _08003c24
	add		r6, r5, r0
	ldr		r0, _08003bf0
	add		r4, r0, #0x4
	mov		r5, #0x3a
_08003b80:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x8]
	add		r1, r1, r6
	ldr		r2, [r4, #0x4]
	ldr		r3, [r4, #0xc]
	bl		sub_080bbc7c
	add		r4, #0x18
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08003b80
	ldr		r5, _08003bf4
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_0808c788
	ldr		r0, _08003bf8
	mov		r1, r10
	ldr		r4, [r1, #0x0]
	ldr		r2, _08003bec
	add		r1, r4, #0x0
	bl		sub_0808c818
	add		r6, r4, #0x0
	ldr		r1, _08003bf0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08003c30
	add		r3, r5, #0x0
	add		r2, r0, #0x0
	mov		r4, #0x0
_08003bc4:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_08003c28
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08003c34

.incbin "base.gba", 0x3BD6, 0x2

_08003bd8:	.4byte 0x080c7ddc
_08003bdc:	.4byte 0x080c7de0
_08003be0:	.4byte 0x00000836
_08003be4:	.4byte 0x080c7de4
_08003be8:	.4byte 0x0200CEDC
_08003bec:	.4byte 0x00003DC4
_08003bf0:	.4byte 0x080c7634 @ Keyword
_08003bf4:	.4byte 0x02008880
_08003bf8:	.4byte 0x02004970
_08003bfc:	.4byte 0x080c7c28 @ Hamtaro
_08003c00:	.4byte 0x0200D0A0
_08003c04:	.4byte 0x0200CDBC
_08003c08:	.4byte 0x080c7db0
_08003c0c:	.4byte 0x080c7110 @ DEADEND_@(%s_%d)_#($%08x,$%08x)
_08003c10:	.4byte 0x080c7dd4 @ ***
_08003c14:	.4byte 0x02000BAC
_08003c18:	.4byte 0x00000876
_08003c1c:	.4byte 0x0E004000
_08003c20:	.4byte 0x0E000200
_08003c24:	.4byte 0xF1FFFE00

_08003c28:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08003bc4
_08003c30:
	mov		r4, #0x1
	neg		r4, r4
_08003c34:
	cmp		r4, #0x0
	bge		_08003c44
	ldr		r0, _08003c50
	ldr		r1, _08003c54
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08003c44:
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	bl		sub_08002fd8
	b		_08003c80

.incbin "base.gba", 0x3C4E, 0x2

_08003c50:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08003c54:	.4byte 0x00000486

_08003c58:
	mov		r6, r10
	ldr		r4, [r6, #0x0]
	ldr		r0, _08003c90
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	add		r0, r4, #0x0
	bl		sub_08002434
	ldr		r0, _08003c94
	add		r1, r4, #0x0
	add		r2, r7, #0x0
	bl		sub_0808c818
	add		r0, r5, #0x0
	bl		sub_08002268
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	mov		r0, #0x1f
	strh	r0, [r1, #0x0]
_08003c80:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08003c90:	.4byte 0x0200D0A0
_08003c94:	.4byte 0x02004970
	push	{ r4, r5, r6, lr }
	cmp		r1, #0x4
	bls		_08003ca0
	b		_08003db8
_08003ca0:
	lsl		r0, r1, #0x2
	ldr		r1, _08003cac
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3CAA, 0x2

_08003cac:	.4byte 0x08003cb0
_08003cb0:	.4byte 0x08003cc4

.incbin "base.gba", 0x3CB4, 0x10
	thumb_func_end sub_080038c0


.incbin "base.gba", 0x3CC4, 0xF4

_08003db8:

.incbin "base.gba", 0x3DB8, 0xC
	thumb_func_start sub_08003dc4
sub_08003dc4:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	ldr		r1, _08003e3c
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	cmp		r5, #0x0
	beq		_08003ec0
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	cmp		r0, #0x0
	bge		_08003ec0
	ldr		r0, _08003e40
	bl		sub_08002268
	ldr		r0, _08003e44
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08003dfc
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_08002268
_08003dfc:
	mov		r2, #0x2
	ldrsh	r0, [r4, r2]
	bl		sub_08002268
	mov		r1, #0x4
	ldrsh	r0, [r4, r1]
	bl		sub_08002268
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x4
	bl		sub_0808c818
	ldr		r1, PTR_PTR_s_Keyword_08003e48
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r6, _08003e4c
	cmp		r1, r0
	bcs		_08003e5c
	ldr		r3, _08003e50
	add		r2, r0, #0x0
	mov		r4, #0x0
_08003e2a:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08003e54
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08003e60

_08003e3c:	.4byte 0x080c7eec
_08003e40:	.4byte 0x00000872
_08003e44:	.4byte 0x00000842
PTR_PTR_s_Keyword_08003e48:	.4byte 0x080c7634 @ Keyword
_08003e4c:	.4byte 0x080c7e1c
_08003e50:	.4byte 0x02008880

_08003e54:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08003e2a
_08003e5c:
	mov		r4, #0x1
	neg		r4, r4
_08003e60:
	cmp		r4, #0x0
	bge		_08003e72
	ldr		r0, _08003e98
	mov		r1, #0xd5
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08003e72:
	ldr		r5, [r6, #0x0]
	ldr		r1, _08003e9c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08003eac
	ldr		r3, _08003ea0
	add		r2, r0, #0x0
	mov		r4, #0x0
_08003e86:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08003ea4
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08003eb0

_08003e98:	.4byte 0x080c7e08 @ system/savedata.cpp
_08003e9c:	.4byte 0x080c7634 @ Keyword
_08003ea0:	.4byte 0x02008880

_08003ea4:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08003e86
_08003eac:
	mov		r4, #0x1
	neg		r4, r4
_08003eb0:
	cmp		r4, #0x0
	bge		_08003ec0
	ldr		r0, _08003ec8
	ldr		r1, _08003ecc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08003ec0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3EC6, 0x2

_08003ec8:	.4byte 0x080c7e08 @ system/savedata.cpp
_08003ecc:	.4byte 0x00000355
	thumb_func_end sub_08003dc4

	thumb_func_start sub_08003ed0
sub_08003ed0:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	ldr		r1, _08003f24
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	beq		_08003ef0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	cmp		r0, #0x0
	bge		_08003f50
_08003ef0:
	ldr		r0, _08003f28
	bl		sub_08002268
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	ldr		r1, _08003f2c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08003f3c
	ldr		r3, _08003f30
	add		r2, r0, #0x0
	mov		r4, #0x0
_08003f10:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08003f34
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08003f40

.incbin "base.gba", 0x3F22, 0x2

_08003f24:	.4byte 0x080c7eb0
_08003f28:	.4byte 0x00000873
_08003f2c:	.4byte 0x080c7634 @ Keyword
_08003f30:	.4byte 0x02008880

_08003f34:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08003f10
_08003f3c:
	mov		r4, #0x1
	neg		r4, r4
_08003f40:
	cmp		r4, #0x0
	bge		_08003f50
	ldr		r0, _08003f58
	ldr		r1, _08003f5c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08003f50:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3F56, 0x2

_08003f58:	.4byte 0x080c7e08 @ system/savedata.cpp
_08003f5c:	.4byte 0x0000035E
	thumb_func_end sub_08003ed0

	thumb_func_start sub_08003f60
sub_08003f60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	mov		r10, r3
	ldr		r5, [sp, #0x0+0x24]
	ldr		r0, _08003fa0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08003f8a
	ldr		r0, _08003fa4
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_08003f8a:
	ldr		r0, _08003fa8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08003f96
	b		_080041c2
_08003f96:
	mov		r4, #0x0
	ldr		r2, _08003fac
	mov		r9, r2
	lsl		r7, r5, #0x3
	b		_08003fb2

_08003fa0:	.4byte 0x0200CDBC
_08003fa4:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x 
_08003fa8:	.4byte 0x00000854
_08003fac:	.4byte 0x080c7e20

_08003fb0:
	add		r4, #0x1
_08003fb2:
	cmp		r4, #0xe
	bls		_08003fc4
	ldr		r0, _0800402c
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08003fc4:
	ldr		r0, _08004030
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	bne		_08003fb0
	add		r5, r4, #0x0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	ldr		r1, _08004034
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800405c
	lsl		r0, r2, #0x3
	add		r2, r6, #0x0
	add		r3, r0, r6
	sub		r4, r7, #0x1
	ldr		r7, [sp, #0x4+0x24]
	add		r7, r8
	mov		r0, #0x2
	add		r0, r10
	mov		r12, r0
	cmp		r4, #0x0
	blt		_08004012
_08004000:
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08004000
_08004012:
	ldrb	r0, [r7, #0x0]
	strb	r0, [r6, #0x5]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08003dc4
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08003ed0
	b		_0800409a

.incbin "base.gba", 0x402A, 0x2

_0800402c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08004030:	.4byte 0x080c7e74
_08004034:	.4byte 0x80808080

_08004038:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _08004058
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080040c4

_08004058:	.4byte 0x02008880

_0800405c:
	mov		r1, r9
	lsl		r0, r1, #0x3
	add		r0, r0, r6
	add		r3, r6, #0x0
	add		r2, r0, #0x0
	sub		r2, #0x8
	sub		r4, r7, #0x1
	ldr		r0, [sp, #0x4+0x24]
	ldrb	r5, [r0, #0x8]
	cmp		r4, #0x0
	blt		_08004084
_08004072:
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	strb	r1, [r2, #0x0]
	add		r2, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08004072
_08004084:
	strb	r5, [r6, #0x5]
	ldr		r0, _080040e4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800409a
	mov		r1, r10
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_0800409a:
	ldr		r0, _080040e4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080040f0
	ldr		r1, PTR_PTR_s_Keyword_080040e8
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_080040c0
	add		r2, r0, #0x0
_080040b4:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	beq		_08004038
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080040b4
_080040c0:
	mov		r4, #0x1
	neg		r4, r4
_080040c4:
	ldr		r0, _080040ec
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_080040e8
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_080041c2

_080040e4:	.4byte 0x00000842
PTR_PTR_s_Keyword_080040e8:	.4byte 0x080c7634 @ Keyword
_080040ec:	.4byte 0x02008880

_080040f0:
	mov		r0, r10
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r4, r9
	add		r4, #0x1
	ldr		r1, _08004110
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08004114
	mov		r2, #0x1
	mov		r0, r8
	lsl		r2, r0
	b		_0800411a

_08004110:	.4byte 0x80808080

_08004114:
	mov		r2, #0x1
	mov		r1, r9
	lsl		r2, r1
_0800411a:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _08004148
	ldr		r1, PTR_PTR_s_Keyword_0800414c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_0800415c
	ldr		r3, _08004150
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004136:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004154
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004160

_08004148:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_0800414c:	.4byte 0x080c7634 @ Keyword
_08004150:	.4byte 0x02008880

_08004154:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004136
_0800415c:
	mov		r4, #0x1
	neg		r4, r4
_08004160:
	cmp		r4, #0x0
	bge		_08004170
	ldr		r0, _08004194
	ldr		r1, _08004198
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004170:
	ldr		r1, PTR_PTR_s_Keyword_0800419c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080041ac
	ldr		r3, _080041a0
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004182:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_080041a4
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080041b0

_08004194:	.4byte 0x080c7e08 @ system/savedata.cpp
_08004198:	.4byte 0x000003C7
PTR_PTR_s_Keyword_0800419c:	.4byte 0x080c7634 @ Keyword
_080041a0:	.4byte 0x02008880

_080041a4:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004182
_080041ac:
	mov		r4, #0x1
	neg		r4, r4
_080041b0:
	cmp		r4, #0x0
	bge		_080041c2
	ldr		r0, _080041d4
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080041c2:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41D2, 0x2

_080041d4:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_08003f60

	thumb_func_start sub_080041d8
sub_080041d8:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	ldr		r1, _0800422c
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	beq		_080041f8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	cmp		r0, #0x0
	bge		_08004258
_080041f8:
	ldr		r0, _08004230
	bl		sub_08002268
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x4]
	str		r0, [r5, #0x0]
	str		r1, [r5, #0x4]
	ldr		r1, PTR_PTR_s_Keyword_08004234
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004244
	ldr		r3, _08004238
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004218:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_0800423c
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004248

.incbin "base.gba", 0x422A, 0x2

_0800422c:	.4byte 0x080c7eb0
_08004230:	.4byte 0x00000873
PTR_PTR_s_Keyword_08004234:	.4byte 0x080c7634 @ Keyword
_08004238:	.4byte 0x02008880

_0800423c:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004218
_08004244:
	mov		r4, #0x1
	neg		r4, r4
_08004248:
	cmp		r4, #0x0
	bge		_08004258
	ldr		r0, _08004260
	ldr		r1, _08004264
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004258:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x425E, 0x2

_08004260:	.4byte 0x080c7e08 @ system/savedata.cpp
_08004264:	.4byte 0x0000035E
	thumb_func_end sub_080041d8

	thumb_func_start sub_08004268
sub_08004268:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	mov		r10, r3
	ldr		r5, [sp, #0x0+0x24]
	ldr		r0, _080042a8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08004292
	ldr		r0, _080042ac
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_08004292:
	ldr		r0, _080042b0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800429e
	b		_080044ca
_0800429e:
	mov		r4, #0x0
	ldr		r2, _080042b4
	mov		r9, r2
	lsl		r7, r5, #0x3
	b		_080042ba

_080042a8:	.4byte 0x0200CDBC
_080042ac:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x
_080042b0:	.4byte 0x00000854
_080042b4:	.4byte 0x080c7e24

_080042b8:
	add		r4, #0x1
_080042ba:
	cmp		r4, #0xe
	bls		_080042cc
	ldr		r0, _08004334
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080042cc:
	ldr		r0, _08004338
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	bne		_080042b8
	add		r5, r4, #0x0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	ldr		r1, _0800433c
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08004364
	lsl		r0, r2, #0x3
	add		r2, r6, #0x0
	add		r3, r0, r6
	sub		r4, r7, #0x1
	ldr		r7, [sp, #0x4+0x24]
	add		r7, r8
	mov		r0, #0x2
	add		r0, r10
	mov		r12, r0
	cmp		r4, #0x0
	blt		_0800431a
_08004308:
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08004308
_0800431a:
	ldrb	r0, [r7, #0x0]
	strb	r0, [r6, #0x5]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08003dc4
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_080041d8
	b		_080043a2

.incbin "base.gba", 0x4332, 0x2

_08004334:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08004338:	.4byte 0x080c7e74
_0800433c:	.4byte 0x80808080

_08004340:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _08004360
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080043cc

_08004360:	.4byte 0x02008880

_08004364:
	mov		r1, r9
	lsl		r0, r1, #0x3
	add		r0, r0, r6
	add		r3, r6, #0x0
	add		r2, r0, #0x0
	sub		r2, #0x8
	sub		r4, r7, #0x1
	ldr		r0, [sp, #0x4+0x24]
	ldrb	r5, [r0, #0x8]
	cmp		r4, #0x0
	blt		_0800438c
_0800437a:
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	strb	r1, [r2, #0x0]
	add		r2, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800437a
_0800438c:
	strb	r5, [r6, #0x5]
	ldr		r0, _080043ec
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080043a2
	mov		r1, r10
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_080043a2:
	ldr		r0, _080043ec
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080043f8
	ldr		r1, PTR_PTR_s_Keyword_080043f0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_080043c8
	add		r2, r0, #0x0
_080043bc:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	beq		_08004340
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080043bc
_080043c8:
	mov		r4, #0x1
	neg		r4, r4
_080043cc:
	ldr		r0, _080043f4
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_080043f0
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_080044ca

_080043ec:	.4byte 0x00000842
PTR_PTR_s_Keyword_080043f0:	.4byte 0x080c7634 @ Keyword
_080043f4:	.4byte 0x02008880

_080043f8:
	mov		r0, r10
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r4, r9
	add		r4, #0x1
	ldr		r1, _08004418
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800441c
	mov		r2, #0x1
	mov		r0, r8
	lsl		r2, r0
	b		_08004422

_08004418:	.4byte 0x80808080

_0800441c:
	mov		r2, #0x1
	mov		r1, r9
	lsl		r2, r1
_08004422:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _08004450
	ldr		r1, PTR_PTR_s_Keyword_08004454
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004464
	ldr		r3, _08004458
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800443e:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_0800445c
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004468

_08004450:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_08004454:	.4byte 0x080c7634 @ Keyword
_08004458:	.4byte 0x02008880

_0800445c:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800443e
_08004464:
	mov		r4, #0x1
	neg		r4, r4
_08004468:
	cmp		r4, #0x0
	bge		_08004478
	ldr		r0, _0800449c
	ldr		r1, _080044a0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004478:
	ldr		r1, PTR_PTR_s_Keyword_080044a4
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080044b4
	ldr		r3, _080044a8
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800448a:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_080044ac
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080044b8

_0800449c:	.4byte 0x080c7e08 @ system/savedata.cpp
_080044a0:	.4byte 0x000003C7
PTR_PTR_s_Keyword_080044a4:	.4byte 0x080c7634 @ Keyword
_080044a8:	.4byte 0x02008880

_080044ac:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800448a
_080044b4:
	mov		r4, #0x1
	neg		r4, r4
_080044b8:
	cmp		r4, #0x0
	bge		_080044ca
	ldr		r0, _080044dc
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080044ca:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x44DA, 0x2

_080044dc:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_08004268

	thumb_func_start sub_080044e0
sub_080044e0:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	ldr		r1, _08004534
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	beq		_08004500
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	cmp		r0, #0x0
	bge		_08004560
_08004500:
	ldr		r0, _08004538
	bl		sub_08002268
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r1, PTR_PTR_s_Keyword_0800453c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_0800454c
	ldr		r3, _08004540
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004520:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004544
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004550

.incbin "base.gba", 0x4532, 0x2

_08004534:	.4byte 0x080c7eb0
_08004538:	.4byte 0x00000873
PTR_PTR_s_Keyword_0800453c:	.4byte 0x080c7634 @ Keyword
_08004540:	.4byte 0x02008880

_08004544:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004520
_0800454c:
	mov		r4, #0x1
	neg		r4, r4
_08004550:
	cmp		r4, #0x0
	bge		_08004560
	ldr		r0, _08004568
	ldr		r1, _0800456c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004560:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4566, 0x2

_08004568:	.4byte 0x080c7e08 @ system/savedata.cpp
_0800456c:	.4byte 0x0000035E
	thumb_func_end sub_080044e0

	thumb_func_start sub_08004570
sub_08004570:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	str		r3, [sp, #0x4]
	ldr		r0, [sp, #0x0+0x28]
	mov		r10, r0
	ldr		r0, _080045b4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800459c
	ldr		r0, _080045b8
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_0800459c:
	ldr		r0, _080045bc
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080045a8
	b		_080047ea
_080045a8:
	mov		r4, #0x0
	ldr		r2, _080045c0
	mov		r9, r2
	mov		r0, r10
	lsl		r5, r0, #0x1
	b		_080045c6

_080045b4:	.4byte 0x0200CDBC
_080045b8:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x
_080045bc:	.4byte 0x00000854
_080045c0:	.4byte 0x080c7e28

_080045c4:
	add		r4, #0x1
_080045c6:
	cmp		r4, #0xe
	bls		_080045d8
	ldr		r0, _08004648
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080045d8:
	ldr		r0, _0800464c
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	bne		_080045c4
	add		r7, r4, #0x0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, r7, r0
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	ldr		r1, _08004650
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08004678
	lsl		r0, r2, #0x1
	add		r0, r8
	lsl		r0, r0, #0x2
	mov		r2, r10
	add		r1, r5, r2
	add		r2, r6, #0x0
	add		r4, r0, r6
	lsl		r3, r1, #0x2
	sub		r3, #0x1
	ldr		r5, [sp, #0x4+0x28]
	add		r5, r8
	ldr		r0, [sp, #0x4]
	add		r0, #0x2
	mov		r12, r0
	cmp		r3, #0x0
	blt		_08004630
_0800461e:
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r4, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	strb	r1, [r4, #0x0]
	add		r4, #0x1
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0800461e
_08004630:
	ldrb	r0, [r5, #0x0]
	strb	r0, [r6, #0x5]
	add		r0, r7, #0x0
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08003dc4
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_080044e0
	b		_080046c0

_08004648:	.4byte 0x080c7bd0 @ system/savedata.cpp
_0800464c:	.4byte 0x080c7e74
_08004650:	.4byte 0x80808080

_08004654:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _08004674
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080046ea

_08004674:	.4byte 0x02008880

_08004678:
	mov		r1, r9
	lsl		r0, r1, #0x1
	add		r0, r9
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	mov		r2, r10
	add		r1, r5, r2
	add		r4, r6, #0x0
	add		r3, r0, #0x0
	sub		r3, #0xc
	lsl		r2, r1, #0x2
	sub		r2, #0x1
	ldr		r0, [sp, #0x4+0x28]
	ldrb	r5, [r0, #0x8]
	cmp		r2, #0x0
	blt		_080046aa
_08004698:
	ldrb	r1, [r4, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r4, #0x0]
	add		r4, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08004698
_080046aa:
	strb	r5, [r6, #0x5]
	ldr		r0, _0800470c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080046c0
	ldr		r1, [sp, #0x4]
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_080046c0:
	ldr		r0, _0800470c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08004718
	ldr		r1, PTR_PTR_s_Keyword_08004710
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_080046e6
	add		r2, r0, #0x0
_080046da:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	beq		_08004654
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080046da
_080046e6:
	mov		r4, #0x1
	neg		r4, r4
_080046ea:
	ldr		r0, _08004714
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_08004710
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_080047ea

.incbin "base.gba", 0x470A, 0x2

_0800470c:	.4byte 0x00000842
PTR_PTR_s_Keyword_08004710:	.4byte 0x080c7634 @ Keyword
_08004714:	.4byte 0x02008880

_08004718:
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r4, r9
	add		r4, #0x1
	ldr		r1, _08004738
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800473c
	mov		r2, #0x1
	mov		r0, r8
	lsl		r2, r0
	b		_08004742

_08004738:	.4byte 0x80808080

_0800473c:
	mov		r2, #0x1
	mov		r1, r9
	lsl		r2, r1
_08004742:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _08004770
	ldr		r1, PTR_PTR_s_Keyword_08004774
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004784
	ldr		r3, _08004778
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800475e:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_0800477c
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004788

_08004770:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_08004774:	.4byte 0x080c7634 @ Keyword
_08004778:	.4byte 0x02008880

_0800477c:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800475e
_08004784:
	mov		r4, #0x1
	neg		r4, r4
_08004788:
	cmp		r4, #0x0
	bge		_08004798
	ldr		r0, _080047bc
	ldr		r1, _080047c0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004798:
	ldr		r1, PTR_PTR_s_Keyword_080047c4
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080047d4
	ldr		r3, _080047c8
	add		r2, r0, #0x0
	mov		r4, #0x0
_080047aa:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_080047cc
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080047d8

_080047bc:	.4byte 0x080c7e08 @ system/savedata.cpp
_080047c0:	.4byte 0x000003C7
PTR_PTR_s_Keyword_080047c4:	.4byte 0x080c7634 @ Keyword
_080047c8:	.4byte 0x02008880

_080047cc:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080047aa
_080047d4:
	mov		r4, #0x1
	neg		r4, r4
_080047d8:
	cmp		r4, #0x0
	bge		_080047ea
	ldr		r0, _080047fc
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080047ea:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x47FA, 0x2

_080047fc:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_08004570

	thumb_func_start sub_08004800
sub_08004800:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	ldr		r1, _08004880
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	cmp		r5, #0x0
	beq		_08004904
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	mov		r1, #0x0
	cmp		r0, #0x0
	ble		_08004824
	mov		r1, #0x1
_08004824:
	cmp		r1, #0x0
	beq		_08004904
	ldr		r0, _08004884
	bl		sub_08002268
	ldr		r0, _08004888
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08004840
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_08002268
_08004840:
	mov		r2, #0x2
	ldrsh	r0, [r4, r2]
	bl		sub_08002268
	mov		r1, #0x4
	ldrsh	r0, [r4, r1]
	bl		sub_08002268
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x4
	bl		sub_0808c818
	ldr		r1, PTR_PTR_s_Keyword_0800488c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r6, _08004890
	cmp		r1, r0
	bcs		_080048a0
	ldr		r3, _08004894
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800486e:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004898
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080048a4

_08004880:	.4byte 0x080c7eec
_08004884:	.4byte 0x00000872
_08004888:	.4byte 0x00000842
PTR_PTR_s_Keyword_0800488c:	.4byte 0x080c7634 @ Keyword
_08004890:	.4byte 0x080c7e2c
_08004894:	.4byte 0x02008880

_08004898:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800486e
_080048a0:
	mov		r4, #0x1
	neg		r4, r4
_080048a4:
	cmp		r4, #0x0
	bge		_080048b6
	ldr		r0, _080048dc
	mov		r1, #0xd5
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080048b6:
	ldr		r5, [r6, #0x0]
	ldr		r1, PTR_PTR_s_Keyword_080048e0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080048f0
	ldr		r3, _080048e4
	add		r2, r0, #0x0
	mov		r4, #0x0
_080048ca:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080048e8
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080048f4

_080048dc:	.4byte 0x080c7e08 @ system/savedata.cpp
PTR_PTR_s_Keyword_080048e0:	.4byte 0x080c7634 @ Keyword
_080048e4:	.4byte 0x02008880

_080048e8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080048ca
_080048f0:
	mov		r4, #0x1
	neg		r4, r4
_080048f4:
	cmp		r4, #0x0
	bge		_08004904
	ldr		r0, _0800490c
	ldr		r1, _08004910
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004904:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x490A, 0x2

_0800490c:	.4byte 0x080c7e08 @ system/savedata.cpp
_08004910:	.4byte 0x00000355
	thumb_func_end sub_08004800

	thumb_func_start sub_08004914
sub_08004914:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	ldr		r1, _08004970
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	beq		_0800493c
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	mov		r1, #0x0
	cmp		r0, #0x0
	ble		_08004938
	mov		r1, #0x1
_08004938:
	cmp		r1, #0x0
	beq		_0800499c
_0800493c:
	ldr		r0, _08004974
	bl		sub_08002268
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	ldr		r1, PTR_PTR_s_Keyword_08004978
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004988
	ldr		r3, _0800497c
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800495c:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004980
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_0800498c

.incbin "base.gba", 0x496E, 0x2

_08004970:	.4byte 0x080c7eb0
_08004974:	.4byte 0x00000873
PTR_PTR_s_Keyword_08004978:	.4byte 0x080c7634 @ Keyword
_0800497c:	.4byte 0x02008880

_08004980:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800495c
_08004988:
	mov		r4, #0x1
	neg		r4, r4
_0800498c:
	cmp		r4, #0x0
	bge		_0800499c
	ldr		r0, _080049a4
	ldr		r1, _080049a8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800499c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x49A2, 0x2

_080049a4:	.4byte 0x080c7e08 @ system/savedata.cpp
_080049a8:	.4byte 0x0000035E
	thumb_func_end sub_08004914

	thumb_func_start sub_080049ac
sub_080049ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	mov		r10, r3
	ldr		r5, [sp, #0x0+0x24]
	ldr		r0, _080049ec
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080049d6
	ldr		r0, _080049f0
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_080049d6:
	ldr		r0, _080049f4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080049e2
	b		_08004c0e
_080049e2:
	mov		r4, #0x0
	ldr		r2, _080049f8
	mov		r9, r2
	lsl		r7, r5, #0x3
	b		_080049fe

_080049ec:	.4byte 0x0200CDBC
_080049f0:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x
_080049f4:	.4byte 0x00000854
_080049f8:	.4byte 0x080c7e30

_080049fc:
	add		r4, #0x1
_080049fe:
	cmp		r4, #0xe
	bls		_08004a10
	ldr		r0, _08004a78
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004a10:
	ldr		r0, _08004a7c
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	bne		_080049fc
	add		r5, r4, #0x0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	ldr		r1, _08004a80
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08004aa8
	lsl		r0, r2, #0x3
	add		r2, r6, #0x0
	add		r3, r0, r6
	sub		r4, r7, #0x1
	ldr		r7, [sp, #0x4+0x24]
	add		r7, r8
	mov		r0, #0x2
	add		r0, r10
	mov		r12, r0
	cmp		r4, #0x0
	blt		_08004a5e
_08004a4c:
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08004a4c
_08004a5e:
	ldrb	r0, [r7, #0x0]
	strb	r0, [r6, #0x5]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08004800
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08004914
	b		_08004ae6

.incbin "base.gba", 0x4A76, 0x2

_08004a78:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08004a7c:	.4byte 0x080c7e74
_08004a80:	.4byte 0x80808080

_08004a84:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _08004aa4
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004b10

_08004aa4:	.4byte 0x02008880

_08004aa8:
	mov		r1, r9
	lsl		r0, r1, #0x3
	add		r0, r0, r6
	add		r3, r6, #0x0
	add		r2, r0, #0x0
	sub		r2, #0x8
	sub		r4, r7, #0x1
	ldr		r0, [sp, #0x4+0x24]
	ldrb	r5, [r0, #0x8]
	cmp		r4, #0x0
	blt		_08004ad0
_08004abe:
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	strb	r1, [r2, #0x0]
	add		r2, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08004abe
_08004ad0:
	strb	r5, [r6, #0x5]
	ldr		r0, _08004b30
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08004ae6
	mov		r1, r10
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_08004ae6:
	ldr		r0, _08004b30
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08004b3c
	ldr		r1, PTR_PTR_s_Keyword_08004b34
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_08004b0c
	add		r2, r0, #0x0
_08004b00:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	beq		_08004a84
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004b00
_08004b0c:
	mov		r4, #0x1
	neg		r4, r4
_08004b10:
	ldr		r0, _08004b38
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_08004b34
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_08004c0e

_08004b30:	.4byte 0x00000842
PTR_PTR_s_Keyword_08004b34:	.4byte 0x080c7634 @ Keyword
_08004b38:	.4byte 0x02008880

_08004b3c:
	mov		r0, r10
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r4, r9
	add		r4, #0x1
	ldr		r1, _08004b5c
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08004b60
	mov		r2, #0x1
	mov		r0, r8
	lsl		r2, r0
	b		_08004b66

_08004b5c:	.4byte 0x80808080

_08004b60:
	mov		r2, #0x1
	mov		r1, r9
	lsl		r2, r1
_08004b66:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _08004b94
	ldr		r1, PTR_PTR_s_Keyword_08004b98
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004ba8
	ldr		r3, _08004b9c
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004b82:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004ba0
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004bac

_08004b94:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_08004b98:	.4byte 0x080c7634 @ Keyword
_08004b9c:	.4byte 0x02008880

_08004ba0:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004b82
_08004ba8:
	mov		r4, #0x1
	neg		r4, r4
_08004bac:
	cmp		r4, #0x0
	bge		_08004bbc
	ldr		r0, _08004be0
	ldr		r1, _08004be4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004bbc:
	ldr		r1, PTR_PTR_s_Keyword_08004be8
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004bf8
	ldr		r3, _08004bec
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004bce:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_08004bf0
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004bfc

_08004be0:	.4byte 0x080c7e08 @ system/savedata.cpp
_08004be4:	.4byte 0x000003C7
PTR_PTR_s_Keyword_08004be8:	.4byte 0x080c7634 @ Keyword
_08004bec:	.4byte 0x02008880

_08004bf0:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004bce
_08004bf8:
	mov		r4, #0x1
	neg		r4, r4
_08004bfc:
	cmp		r4, #0x0
	bge		_08004c0e
	ldr		r0, _08004c20
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004c0e:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4C1E, 0x2

_08004c20:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_080049ac

	thumb_func_start sub_08004c24
sub_08004c24:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	ldr		r1, _08004ca4
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	cmp		r5, #0x0
	beq		_08004d28
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	mov		r1, #0x0
	cmp		r0, #0x0
	ble		_08004c48
	mov		r1, #0x1
_08004c48:
	cmp		r1, #0x0
	beq		_08004d28
	ldr		r0, _08004ca8
	bl		sub_08002268
	ldr		r0, _08004cac
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08004c64
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_08002268
_08004c64:
	mov		r2, #0x2
	ldrsh	r0, [r4, r2]
	bl		sub_08002268
	mov		r1, #0x4
	ldrsh	r0, [r4, r1]
	bl		sub_08002268
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x4
	bl		sub_0808c818
	ldr		r1, PTR_PTR_s_Keyword_08004cb0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r6, _08004cb4
	cmp		r1, r0
	bcs		_08004cc4
	ldr		r3, _08004cb8
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004c92:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004cbc
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004cc8

_08004ca4:	.4byte 0x080c7eec
_08004ca8:	.4byte 0x00000872
_08004cac:	.4byte 0x00000842
PTR_PTR_s_Keyword_08004cb0:	.4byte 0x080c7634 @ Keyword
_08004cb4:	.4byte 0x080c7e34
_08004cb8:	.4byte 0x02008880

_08004cbc:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004c92
_08004cc4:
	mov		r4, #0x1
	neg		r4, r4
_08004cc8:
	cmp		r4, #0x0
	bge		_08004cda
	ldr		r0, _08004d00
	mov		r1, #0xd5
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004cda:
	ldr		r5, [r6, #0x0]
	ldr		r1, PTR_PTR_s_Keyword_08004d04
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004d14
	ldr		r3, _08004d08
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004cee:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004d0c
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004d18

_08004d00:	.4byte 0x080c7e08 @ system/savedata.cpp
PTR_PTR_s_Keyword_08004d04:	.4byte 0x080c7634 @ Keyword
_08004d08:	.4byte 0x02008880

_08004d0c:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004cee
_08004d14:
	mov		r4, #0x1
	neg		r4, r4
_08004d18:
	cmp		r4, #0x0
	bge		_08004d28
	ldr		r0, _08004d30
	ldr		r1, _08004d34
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004d28:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4D2E, 0x2

_08004d30:	.4byte 0x080c7e08 @ system/savedata.cpp
_08004d34:	.4byte 0x00000355
	thumb_func_end sub_08004c24

	thumb_func_start sub_08004d38
sub_08004d38:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	ldr		r1, _08004d94
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	beq		_08004d60
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	mov		r1, #0x0
	cmp		r0, #0x0
	ble		_08004d5c
	mov		r1, #0x1
_08004d5c:
	cmp		r1, #0x0
	beq		_08004dc0
_08004d60:
	ldr		r0, _08004d98
	bl		sub_08002268
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	ldr		r1, PTR_PTR_s_Keyword_08004d9c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004dac
	ldr		r3, _08004da0
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004d80:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004da4
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004db0

.incbin "base.gba", 0x4D92, 0x2

_08004d94:	.4byte 0x080c7eb0
_08004d98:	.4byte 0x00000873
PTR_PTR_s_Keyword_08004d9c:	.4byte 0x080c7634 @ Keyword
_08004da0:	.4byte 0x02008880

_08004da4:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004d80
_08004dac:
	mov		r4, #0x1
	neg		r4, r4
_08004db0:
	cmp		r4, #0x0
	bge		_08004dc0
	ldr		r0, _08004dc8
	ldr		r1, _08004dcc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004dc0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4DC6, 0x2

_08004dc8:	.4byte 0x080c7e08 @ system/savedata.cpp
_08004dcc:	.4byte 0x0000035E
	thumb_func_end sub_08004d38

	thumb_func_start sub_08004dd0
sub_08004dd0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	mov		r10, r3
	ldr		r5, [sp, #0x0+0x24]
	ldr		r0, _08004e10
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08004dfa
	ldr		r0, _08004e14
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_08004dfa:
	ldr		r0, _08004e18
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08004e06
	b		_08005032
_08004e06:
	mov		r4, #0x0
	ldr		r2, _08004e1c
	mov		r9, r2
	lsl		r7, r5, #0x3
	b		_08004e22

_08004e10:	.4byte 0x0200CDBC
_08004e14:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x
_08004e18:	.4byte 0x00000854
_08004e1c:	.4byte 0x080c7e38

_08004e20:
	add		r4, #0x1
_08004e22:
	cmp		r4, #0xe
	bls		_08004e34
	ldr		r0, _08004e9c
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004e34:
	ldr		r0, _08004ea0
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	bne		_08004e20
	add		r5, r4, #0x0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	ldr		r1, _08004ea4
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08004ecc
	lsl		r0, r2, #0x3
	add		r2, r6, #0x0
	add		r3, r0, r6
	sub		r4, r7, #0x1
	ldr		r7, [sp, #0x4+0x24]
	add		r7, r8
	mov		r0, #0x2
	add		r0, r10
	mov		r12, r0
	cmp		r4, #0x0
	blt		_08004e82
_08004e70:
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08004e70
_08004e82:
	ldrb	r0, [r7, #0x0]
	strb	r0, [r6, #0x5]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08004c24
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08004d38
	b		_08004f0a

.incbin "base.gba", 0x4E9A, 0x2

_08004e9c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08004ea0:	.4byte 0x080c7e74
_08004ea4:	.4byte 0x80808080

_08004ea8:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _08004ec8
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004f34

_08004ec8:	.4byte 0x02008880

_08004ecc:
	mov		r1, r9
	lsl		r0, r1, #0x3
	add		r0, r0, r6
	add		r3, r6, #0x0
	add		r2, r0, #0x0
	sub		r2, #0x8
	sub		r4, r7, #0x1
	ldr		r0, [sp, #0x4+0x24]
	ldrb	r5, [r0, #0x8]
	cmp		r4, #0x0
	blt		_08004ef4
_08004ee2:
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	strb	r1, [r2, #0x0]
	add		r2, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08004ee2
_08004ef4:
	strb	r5, [r6, #0x5]
	ldr		r0, _08004f54
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08004f0a
	mov		r1, r10
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_08004f0a:
	ldr		r0, _08004f54
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08004f60
	ldr		r1, PTR_PTR_s_Keyword_08004f58
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_08004f30
	add		r2, r0, #0x0
_08004f24:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	beq		_08004ea8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004f24
_08004f30:
	mov		r4, #0x1
	neg		r4, r4
_08004f34:
	ldr		r0, _08004f5c
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_08004f58
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_08005032

_08004f54:	.4byte 0x00000842
PTR_PTR_s_Keyword_08004f58:	.4byte 0x080c7634 @ Keyword
_08004f5c:	.4byte 0x02008880

_08004f60:
	mov		r0, r10
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r4, r9
	add		r4, #0x1
	ldr		r1, _08004f80
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08004f84
	mov		r2, #0x1
	mov		r0, r8
	lsl		r2, r0
	b		_08004f8a

_08004f80:	.4byte 0x80808080

_08004f84:
	mov		r2, #0x1
	mov		r1, r9
	lsl		r2, r1
_08004f8a:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _08004fb8
	ldr		r1, PTR_PTR_s_Keyword_08004fbc
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08004fcc
	ldr		r3, _08004fc0
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004fa6:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08004fc4
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08004fd0

_08004fb8:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_08004fbc:	.4byte 0x080c7634 @ Keyword
_08004fc0:	.4byte 0x02008880

_08004fc4:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004fa6
_08004fcc:
	mov		r4, #0x1
	neg		r4, r4
_08004fd0:
	cmp		r4, #0x0
	bge		_08004fe0
	ldr		r0, _08005004
	ldr		r1, _08005008
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08004fe0:
	ldr		r1, PTR_PTR_s_Keyword_0800500c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_0800501c
	ldr		r3, _08005010
	add		r2, r0, #0x0
	mov		r4, #0x0
_08004ff2:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_08005014
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005020

_08005004:	.4byte 0x080c7e08 @ system/savedata.cpp
_08005008:	.4byte 0x000003C7
PTR_PTR_s_Keyword_0800500c:	.4byte 0x080c7634 @ Keyword
_08005010:	.4byte 0x02008880

_08005014:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08004ff2
_0800501c:
	mov		r4, #0x1
	neg		r4, r4
_08005020:
	cmp		r4, #0x0
	bge		_08005032
	ldr		r0, _08005044
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005032:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5042, 0x2

_08005044:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_08004dd0

	thumb_func_start sub_08005048
sub_08005048:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	ldr		r1, _080050c0
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	cmp		r5, #0x0
	beq		_08005144
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	cmp		r0, #0x0
	bge		_08005144
	ldr		r0, _080050c4
	bl		sub_08002268
	ldr		r0, _080050c8
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08005080
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_08002268
_08005080:
	mov		r2, #0x2
	ldrsh	r0, [r4, r2]
	bl		sub_08002268
	mov		r3, #0x4
	ldrsh	r0, [r4, r3]
	bl		sub_08002268
	add		r1, r5, #0x0
	add		r0, r6, #0x0
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	ldr		r1, PTR_PTR_s_Keyword_080050cc
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r6, _080050d0
	cmp		r1, r0
	bcs		_080050e0
	ldr		r3, _080050d4
	add		r2, r0, #0x0
	mov		r4, #0x0
_080050ac:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080050d8
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080050e4

.incbin "base.gba", 0x50BE, 0x2

_080050c0:	.4byte 0x080c7eec
_080050c4:	.4byte 0x00000872
_080050c8:	.4byte 0x00000842
PTR_PTR_s_Keyword_080050cc:	.4byte 0x080c7634 @ Keyword
_080050d0:	.4byte 0x080c7e3c
_080050d4:	.4byte 0x02008880

_080050d8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080050ac
_080050e0:
	mov		r4, #0x1
	neg		r4, r4
_080050e4:
	cmp		r4, #0x0
	bge		_080050f6
	ldr		r0, _0800511c
	mov		r1, #0xd5
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080050f6:
	ldr		r5, [r6, #0x0]
	ldr		r1, PTR_PTR_s_Keyword_08005120
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08005130
	ldr		r3, _08005124
	add		r2, r0, #0x0
	mov		r4, #0x0
_0800510a:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08005128
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005134

_0800511c:	.4byte 0x080c7e08 @ system/savedata.cpp
PTR_PTR_s_Keyword_08005120:	.4byte 0x080c7634 @ Keyword
_08005124:	.4byte 0x02008880

_08005128:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800510a
_08005130:
	mov		r4, #0x1
	neg		r4, r4
_08005134:
	cmp		r4, #0x0
	bge		_08005144
	ldr		r0, _0800514c
	ldr		r1, _08005150
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005144:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x514A, 0x2

_0800514c:	.4byte 0x080c7e08 @ system/savedata.cpp
_08005150:	.4byte 0x00000355
	thumb_func_end sub_08005048

	thumb_func_start sub_08005154
sub_08005154:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	ldr		r1, _080051a8
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	beq		_08005174
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	cmp		r0, #0x0
	bge		_080051d4
_08005174:
	ldr		r0, _080051ac
	bl		sub_08002268
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	ldr		r1, PTR_PTR_s_Keyword_080051b0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080051c0
	ldr		r3, _080051b4
	add		r2, r0, #0x0
	mov		r4, #0x0
_08005194:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080051b8
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080051c4

.incbin "base.gba", 0x51A6, 0x2

_080051a8:	.4byte 0x080c7eb0
_080051ac:	.4byte 0x00000873
PTR_PTR_s_Keyword_080051b0:	.4byte 0x080c7634 @ Keyword
_080051b4:	.4byte 0x02008880

_080051b8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005194
_080051c0:
	mov		r4, #0x1
	neg		r4, r4
_080051c4:
	cmp		r4, #0x0
	bge		_080051d4
	ldr		r0, _080051dc
	ldr		r1, _080051e0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080051d4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x51DA, 0x2

_080051dc:	.4byte 0x080c7e08 @ system/savedata.cpp
_080051e0:	.4byte 0x0000035E
	thumb_func_end sub_08005154

	thumb_func_start sub_080051e4
sub_080051e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	mov		r10, r3
	ldr		r5, [sp, #0x0+0x24]
	ldr		r0, _08005224
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800520e
	ldr		r0, _08005228
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_0800520e:
	ldr		r0, _0800522c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800521a
	b		_08005446
_0800521a:
	mov		r4, #0x0
	ldr		r2, _08005230
	mov		r9, r2
	lsl		r7, r5, #0x3
	b		_08005236

_08005224:	.4byte 0x0200CDBC
_08005228:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x
_0800522c:	.4byte 0x00000854
_08005230:	.4byte 0x080c7e40

_08005234:
	add		r4, #0x1
_08005236:
	cmp		r4, #0xe
	bls		_08005248
	ldr		r0, _080052b0
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005248:
	ldr		r0, _080052b4
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	bne		_08005234
	add		r5, r4, #0x0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	ldr		r1, _080052b8
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080052e0
	lsl		r0, r2, #0x3
	add		r2, r6, #0x0
	add		r3, r0, r6
	sub		r4, r7, #0x1
	ldr		r7, [sp, #0x4+0x24]
	add		r7, r8
	mov		r0, #0x2
	add		r0, r10
	mov		r12, r0
	cmp		r4, #0x0
	blt		_08005296
_08005284:
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08005284
_08005296:
	ldrb	r0, [r7, #0x0]
	strb	r0, [r6, #0x5]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08005048
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08005154
	b		_0800531e

.incbin "base.gba", 0x52AE, 0x2

_080052b0:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080052b4:	.4byte 0x080c7e74
_080052b8:	.4byte 0x80808080

_080052bc:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _080052dc
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005348

_080052dc:	.4byte 0x02008880

_080052e0:
	mov		r1, r9
	lsl		r0, r1, #0x3
	add		r0, r0, r6
	add		r3, r6, #0x0
	add		r2, r0, #0x0
	sub		r2, #0x8
	sub		r4, r7, #0x1
	ldr		r0, [sp, #0x4+0x24]
	ldrb	r5, [r0, #0x8]
	cmp		r4, #0x0
	blt		_08005308
_080052f6:
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	strb	r1, [r2, #0x0]
	add		r2, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080052f6
_08005308:
	strb	r5, [r6, #0x5]
	ldr		r0, _08005368
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800531e
	mov		r1, r10
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_0800531e:
	ldr		r0, _08005368
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08005374
	ldr		r1, PTR_PTR_s_Keyword_0800536c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_08005344
	add		r2, r0, #0x0
_08005338:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	beq		_080052bc
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005338
_08005344:
	mov		r4, #0x1
	neg		r4, r4
_08005348:
	ldr		r0, _08005370
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_0800536c
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_08005446

_08005368:	.4byte 0x00000842
PTR_PTR_s_Keyword_0800536c:	.4byte 0x080c7634 @ Keyword
_08005370:	.4byte 0x02008880

_08005374:
	mov		r0, r10
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r4, r9
	add		r4, #0x1
	ldr		r1, _08005394
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08005398
	mov		r2, #0x1
	mov		r0, r8
	lsl		r2, r0
	b		_0800539e

_08005394:	.4byte 0x80808080

_08005398:
	mov		r2, #0x1
	mov		r1, r9
	lsl		r2, r1
_0800539e:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _080053cc
	ldr		r1, PTR_PTR_s_Keyword_080053d0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080053e0
	ldr		r3, _080053d4
	add		r2, r0, #0x0
	mov		r4, #0x0
_080053ba:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080053d8
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080053e4

_080053cc:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_080053d0:	.4byte 0x080c7634 @ Keyword
_080053d4:	.4byte 0x02008880

_080053d8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080053ba
_080053e0:
	mov		r4, #0x1
	neg		r4, r4
_080053e4:
	cmp		r4, #0x0
	bge		_080053f4
	ldr		r0, _08005418
	ldr		r1, _0800541c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080053f4:
	ldr		r1, PTR_PTR_s_Keyword_08005420
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08005430
	ldr		r3, _08005424
	add		r2, r0, #0x0
	mov		r4, #0x0
_08005406:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_08005428
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005434

_08005418:	.4byte 0x080c7e08 @ system/savedata.cpp
_0800541c:	.4byte 0x000003C7
PTR_PTR_s_Keyword_08005420:	.4byte 0x080c7634 @ Keyword
_08005424:	.4byte 0x02008880

_08005428:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005406
_08005430:
	mov		r4, #0x1
	neg		r4, r4
_08005434:
	cmp		r4, #0x0
	bge		_08005446
	ldr		r0, _08005458
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005446:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5456, 0x2

_08005458:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_080051e4

	thumb_func_start sub_0800545c
sub_0800545c:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	ldr		r1, _080054b8
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	beq		_08005484
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080065bc
	mov		r1, #0x0
	cmp		r0, #0x0
	ble		_08005480
	mov		r1, #0x1
_08005480:
	cmp		r1, #0x0
	beq		_080054e4
_08005484:
	ldr		r0, _080054bc
	bl		sub_08002268
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x4]
	str		r0, [r5, #0x0]
	str		r1, [r5, #0x4]
	ldr		r1, PTR_PTR_s_Keyword_080054c0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080054d0
	ldr		r3, _080054c4
	add		r2, r0, #0x0
	mov		r4, #0x0
_080054a4:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080054c8
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080054d4

.incbin "base.gba", 0x54B6, 0x2

_080054b8:	.4byte 0x080c7eb0
_080054bc:	.4byte 0x00000873
PTR_PTR_s_Keyword_080054c0:	.4byte 0x080c7634 @ Keyword
_080054c4:	.4byte 0x02008880

_080054c8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080054a4
_080054d0:
	mov		r4, #0x1
	neg		r4, r4
_080054d4:
	cmp		r4, #0x0
	bge		_080054e4
	ldr		r0, _080054ec
	ldr		r1, _080054f0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080054e4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54EA, 0x2

_080054ec:	.4byte 0x080c7e08 @ system/savedata.cpp
_080054f0:	.4byte 0x0000035E
	thumb_func_end sub_0800545c

	thumb_func_start sub_080054f4
sub_080054f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	mov		r10, r3
	ldr		r5, [sp, #0x0+0x24]
	ldr		r0, _08005534
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800551e
	ldr		r0, _08005538
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_0800551e:
	ldr		r0, _0800553c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800552a
	b		_08005756
_0800552a:
	mov		r4, #0x0
	ldr		r2, _08005540
	mov		r9, r2
	lsl		r7, r5, #0x3
	b		_08005546

_08005534:	.4byte 0x0200CDBC
_08005538:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x
_0800553c:	.4byte 0x00000854
_08005540:	.4byte 0x080c7e44

_08005544:
	add		r4, #0x1
_08005546:
	cmp		r4, #0xe
	bls		_08005558
	ldr		r0, _080055c0
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005558:
	ldr		r0, _080055c4
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	bne		_08005544
	add		r5, r4, #0x0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	ldr		r1, _080055c8
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080055f0
	lsl		r0, r2, #0x3
	add		r2, r6, #0x0
	add		r3, r0, r6
	sub		r4, r7, #0x1
	ldr		r7, [sp, #0x4+0x24]
	add		r7, r8
	mov		r0, #0x2
	add		r0, r10
	mov		r12, r0
	cmp		r4, #0x0
	blt		_080055a6
_08005594:
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08005594
_080055a6:
	ldrb	r0, [r7, #0x0]
	strb	r0, [r6, #0x5]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08004c24
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_0800545c
	b		_0800562e

.incbin "base.gba", 0x55BE, 0x2

_080055c0:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080055c4:	.4byte 0x080c7e74
_080055c8:	.4byte 0x80808080

_080055cc:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _080055ec
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005658

_080055ec:	.4byte 0x02008880

_080055f0:
	mov		r1, r9
	lsl		r0, r1, #0x3
	add		r0, r0, r6
	add		r3, r6, #0x0
	add		r2, r0, #0x0
	sub		r2, #0x8
	sub		r4, r7, #0x1
	ldr		r0, [sp, #0x4+0x24]
	ldrb	r5, [r0, #0x8]
	cmp		r4, #0x0
	blt		_08005618
_08005606:
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	strb	r1, [r2, #0x0]
	add		r2, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08005606
_08005618:
	strb	r5, [r6, #0x5]
	ldr		r0, _08005678
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800562e
	mov		r1, r10
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_0800562e:
	ldr		r0, _08005678
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08005684
	ldr		r1, PTR_PTR_s_Keyword_0800567c
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_08005654
	add		r2, r0, #0x0
_08005648:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	beq		_080055cc
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005648
_08005654:
	mov		r4, #0x1
	neg		r4, r4
_08005658:
	ldr		r0, _08005680
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_0800567c
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_08005756

_08005678:	.4byte 0x00000842
PTR_PTR_s_Keyword_0800567c:	.4byte 0x080c7634 @ Keyword
_08005680:	.4byte 0x02008880

_08005684:
	mov		r0, r10
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r4, r9
	add		r4, #0x1
	ldr		r1, _080056a4
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080056a8
	mov		r2, #0x1
	mov		r0, r8
	lsl		r2, r0
	b		_080056ae

_080056a4:	.4byte 0x80808080

_080056a8:
	mov		r2, #0x1
	mov		r1, r9
	lsl		r2, r1
_080056ae:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _080056dc
	ldr		r1, PTR_PTR_s_Keyword_080056e0
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080056f0
	ldr		r3, _080056e4
	add		r2, r0, #0x0
	mov		r4, #0x0
_080056ca:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080056e8
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080056f4

_080056dc:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_080056e0:	.4byte 0x080c7634 @ Keyword
_080056e4:	.4byte 0x02008880

_080056e8:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080056ca
_080056f0:
	mov		r4, #0x1
	neg		r4, r4
_080056f4:
	cmp		r4, #0x0
	bge		_08005704
	ldr		r0, _08005728
	ldr		r1, _0800572c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005704:
	ldr		r1, PTR_PTR_s_Keyword_08005730
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08005740
	ldr		r3, _08005734
	add		r2, r0, #0x0
	mov		r4, #0x0
_08005716:
	ldr		r0, [r1, #0x4]
	cmp		r6, r0
	bne		_08005738
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005744

_08005728:	.4byte 0x080c7e08 @ system/savedata.cpp
_0800572c:	.4byte 0x000003C7
PTR_PTR_s_Keyword_08005730:	.4byte 0x080c7634 @ Keyword
_08005734:	.4byte 0x02008880

_08005738:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005716
_08005740:
	mov		r4, #0x1
	neg		r4, r4
_08005744:
	cmp		r4, #0x0
	bge		_08005756
	ldr		r0, _08005768
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005756:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5766, 0x2

_08005768:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_080054f4

	thumb_func_start sub_0800576c
sub_0800576c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r9, r2
	str		r3, [sp, #0x4]
	ldr		r5, [sp, #0x0+0x28]
	ldr		r0, _080057ac
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08005796
	ldr		r0, _080057b0
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_08005796:
	ldr		r0, _080057b4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080057a2
	b		_08005a3a
_080057a2:
	mov		r4, #0x0
	ldr		r2, _080057b8
	mov		r10, r2
	lsl		r6, r5, #0x3
	b		_080057be

_080057ac:	.4byte 0x0200CDBC
_080057b0:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x
_080057b4:	.4byte 0x00000854
_080057b8:	.4byte 0x080c7e48

_080057bc:
	add		r4, #0x1
_080057be:
	cmp		r4, #0xe
	bls		_080057d0
	ldr		r0, _0800586c
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080057d0:
	ldr		r0, _08005870
	lsl		r5, r4, #0x2
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, r7
	bne		_080057bc
	mov		r8, r4
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	mov		r10, r0
	ldr		r1, _08005874
	mov		r0, r9
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080058d4
	mov		r1, r9
	lsl		r0, r1, #0x3
	add		r4, r7, #0x0
	add		r3, r0, r7
	sub		r2, r6, #0x1
	ldr		r6, [sp, #0x4+0x28]
	add		r6, r9
	ldr		r0, [sp, #0x4]
	add		r0, #0x2
	mov		r12, r0
	cmp		r2, #0x0
	blt		_08005820
_0800580e:
	ldrb	r1, [r4, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r4, #0x0]
	add		r4, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0800580e
_08005820:
	ldrb	r0, [r6, #0x0]
	strb	r0, [r7, #0x5]
	mov		r0, r8
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08004c24
	ldr		r0, _08005878
	add		r0, r5, r0
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	bne		_08005912
	ldr		r0, _0800587c
	bl		sub_08002268
	add		r1, r5, #0x0
	add		r0, r7, #0x0
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	ldr		r1, PTR_PTR_s_Keyword_08005880
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08005890
	add		r2, r0, #0x0
	mov		r4, #0x0
_08005858:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08005888
	asr		r4, r4, #0x3
	ldr		r0, _08005884
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005894

.incbin "base.gba", 0x586A, 0x2

_0800586c:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08005870:	.4byte 0x080c7e74
_08005874:	.4byte 0x80808080
_08005878:	.4byte 0x080c7eb0
_0800587c:	.4byte 0x00000873
PTR_PTR_s_Keyword_08005880:	.4byte 0x080c7634 @ Keyword
_08005884:	.4byte 0x02008880

_08005888:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005858
_08005890:
	mov		r4, #0x1
	neg		r4, r4
_08005894:
	cmp		r4, #0x0
	bge		_08005912
	ldr		r0, _080058a8
	ldr		r1, _080058ac
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_08005912

.incbin "base.gba", 0x58A6, 0x2

_080058a8:	.4byte 0x080c7e08 @ system/savedata.cpp
_080058ac:	.4byte 0x0000035E

_080058b0:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _080058d0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_0800593c

_080058d0:	.4byte 0x02008880

_080058d4:
	mov		r3, r10
	lsl		r0, r3, #0x3
	add		r0, r0, r7
	add		r3, r7, #0x0
	add		r2, r0, #0x0
	sub		r2, #0x8
	sub		r4, r6, #0x1
	ldr		r0, [sp, #0x4+0x28]
	ldrb	r5, [r0, #0x8]
	cmp		r4, #0x0
	blt		_080058fc
_080058ea:
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	strb	r1, [r2, #0x0]
	add		r2, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080058ea
_080058fc:
	strb	r5, [r7, #0x5]
	ldr		r0, _0800595c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08005912
	ldr		r1, [sp, #0x4]
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_08005912:
	ldr		r0, _0800595c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08005968
	ldr		r1, PTR_PTR_s_Keyword_08005960
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_08005938
	add		r2, r0, #0x0
_0800592c:
	ldr		r0, [r1, #0x4]
	cmp		r7, r0
	beq		_080058b0
	add		r1, #0x18
	cmp		r1, r2
	bcc		_0800592c
_08005938:
	mov		r4, #0x1
	neg		r4, r4
_0800593c:
	ldr		r0, _08005964
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_08005960
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_08005a3a

_0800595c:	.4byte 0x00000842
PTR_PTR_s_Keyword_08005960:	.4byte 0x080c7634 @ Keyword
_08005964:	.4byte 0x02008880

_08005968:
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r4, r10
	add		r4, #0x1
	ldr		r1, _08005988
	mov		r2, r9
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800598c
	mov		r2, #0x1
	mov		r0, r9
	lsl		r2, r0
	b		_08005992

_08005988:	.4byte 0x80808080

_0800598c:
	mov		r2, #0x1
	mov		r1, r10
	lsl		r2, r1
_08005992:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _080059c0
	ldr		r1, PTR_PTR_s_Keyword_080059c4
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_080059d4
	ldr		r3, _080059c8
	add		r2, r0, #0x0
	mov		r4, #0x0
_080059ae:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_080059cc
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_080059d8

_080059c0:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_080059c4:	.4byte 0x080c7634 @ Keyword
_080059c8:	.4byte 0x02008880

_080059cc:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080059ae
_080059d4:
	mov		r4, #0x1
	neg		r4, r4
_080059d8:
	cmp		r4, #0x0
	bge		_080059e8
	ldr		r0, _08005a0c
	ldr		r1, _08005a10
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080059e8:
	ldr		r1, PTR_PTR_s_Keyword_08005a14
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08005a24
	ldr		r3, _08005a18
	add		r2, r0, #0x0
	mov		r4, #0x0
_080059fa:
	ldr		r0, [r1, #0x4]
	cmp		r7, r0
	bne		_08005a1c
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005a28

_08005a0c:	.4byte 0x080c7e08 @ system/savedata.cpp
_08005a10:	.4byte 0x000003C7
PTR_PTR_s_Keyword_08005a14:	.4byte 0x080c7634 @ Keyword
_08005a18:	.4byte 0x02008880

_08005a1c:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_080059fa
_08005a24:
	mov		r4, #0x1
	neg		r4, r4
_08005a28:
	cmp		r4, #0x0
	bge		_08005a3a
	ldr		r0, _08005a4c
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005a3a:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5A4A, 0x2

_08005a4c:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_0800576c

	thumb_func_start sub_08005a50
sub_08005a50:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r2, #0x0
	mov		r3, #0x1
	mov		r4, #0x0
	mov		r0, #0x10
	ldrsh	r1, [r5, r0]
	mov		r6, #0x12
	ldrsh	r0, [r5, r6]
	cmp		r1, r0
	bge		_08005a6a
	mov		r2, #0x1
	mov		r3, #0x0
_08005a6a:
	mov		r0, #0x18
	ldrsh	r1, [r5, r0]
	mov		r6, #0x1a
	ldrsh	r0, [r5, r6]
	cmp		r1, r0
	bge		_08005a78
	mov		r4, #0x1
_08005a78:
	add		r1, r5, #0x0
	add		r1, #0x16
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	add		r1, r1, r3
	ldrb	r1, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x1e
	add		r2, r2, r4
	ldrb	r2, [r2, #0x0]
	bl		sub_08003600
	ldrb	r4, [r5, #0x16]
	cmp		r4, #0x13
	bls		_08005aa2
	ldr		r0, _08005ac0
	mov		r1, #0xcb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005aa2:
	ldr		r0, _08005ac4
	add		r0, r4, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08005ac8
	mov		r2, #0x0
	mov		r0, #0x10
	ldrsh	r1, [r5, r0]
	mov		r3, #0x12
	ldrsh	r0, [r5, r3]
	cmp		r1, r0
	bgt		_08005ad8
	mov		r2, #0x1
	b		_08005ad8

.incbin "base.gba", 0x5ABE, 0x2

_08005ac0:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08005ac4:	.4byte 0x080c7bbc

_08005ac8:
	mov		r6, #0x18
	ldrsh	r1, [r5, r6]
	mov		r2, #0x1a
	ldrsh	r0, [r5, r2]
	mov		r2, #0x3
	cmp		r1, r0
	ble		_08005ad8
	mov		r2, #0x2
_08005ad8:
	add		r0, r2, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08005a50

	thumb_func_start sub_08005ae0
sub_08005ae0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	str		r3, [sp, #0x4]
	ldr		r0, [sp, #0x0+0x2c]
	mov		r10, r0
	ldr		r0, _08005b20
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08005b0c
	ldr		r0, _08005b24
	lsl		r1, r2, #0x18
	lsr		r1, r1, #0x18
	bl		sub_0808c670
_08005b0c:
	ldr		r0, _08005b28
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08005b18
	b		_08005dbe
_08005b18:
	mov		r4, #0x0
	mov		r2, r10
	lsl		r6, r2, #0x1
	b		_08005b2e

_08005b20:	.4byte 0x0200CDBC
_08005b24:	.4byte 0x080c7df4 @ APPLYRECORD_R%02x
_08005b28:	.4byte 0x00000854

_08005b2c:
	add		r4, #0x1
_08005b2e:
	cmp		r4, #0xe
	bls		_08005b40
	ldr		r0, _08005be0
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005b40:
	ldr		r0, _08005be4
	lsl		r5, r4, #0x2
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, r7
	bne		_08005b2c
	mov		r9, r4
	ldr		r0, _08005be8
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x8]
	ldr		r1, _08005bec
	mov		r3, r8
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08005c4c
	lsl		r0, r3, #0x1
	add		r0, r8
	lsl		r0, r0, #0x2
	mov		r4, r10
	add		r1, r6, r4
	add		r2, r7, #0x0
	add		r4, r0, r7
	lsl		r3, r1, #0x2
	sub		r3, #0x1
	ldr		r6, [sp, #0x4+0x2c]
	add		r6, r8
	ldr		r0, [sp, #0x4]
	add		r0, #0x2
	mov		r12, r0
	cmp		r3, #0x0
	blt		_08005b96
_08005b84:
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r4, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	strb	r1, [r4, #0x0]
	add		r4, #0x1
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08005b84
_08005b96:
	ldrb	r0, [r6, #0x0]
	strb	r0, [r7, #0x5]
	mov		r0, r9
	ldr		r1, [sp, #0x0]
	mov		r2, r12
	bl		sub_08004c24
	ldr		r0, _08005bf0
	add		r0, r5, r0
	ldr		r5, [r0, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x4
	bne		_08005c94
	ldr		r0, _08005bf4
	bl		sub_08002268
	add		r1, r5, #0x0
	add		r0, r7, #0x0
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r1, PTR_PTR_s_Keyword_08005bf8
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08005c08
	add		r2, r0, #0x0
	mov		r4, #0x0
_08005bce:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08005c00
	asr		r4, r4, #0x3
	ldr		r0, _08005bfc
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005c0c

_08005be0:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08005be4:	.4byte 0x080c7e74
_08005be8:	.4byte 0x080c7f28
_08005bec:	.4byte 0x80808080
_08005bf0:	.4byte 0x080c7eb0
_08005bf4:	.4byte 0x00000873
PTR_PTR_s_Keyword_08005bf8:	.4byte 0x080c7634 @ Keyword
_08005bfc:	.4byte 0x02008880

_08005c00:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005bce
_08005c08:
	mov		r4, #0x1
	neg		r4, r4
_08005c0c:
	cmp		r4, #0x0
	bge		_08005c94
	ldr		r0, _08005c20
	ldr		r1, _08005c24
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_08005c94

.incbin "base.gba", 0x5C1E, 0x2

_08005c20:	.4byte 0x080c7e08 @ system/savedata.cpp
_08005c24:	.4byte 0x0000035E

_08005c28:
	sub		r0, r1, r3
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r0, r4, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	neg		r4, r4
	asr		r4, r4, #0x3
	ldr		r0, _08005c48
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005cbe

_08005c48:	.4byte 0x02008880

_08005c4c:
	ldr		r3, [sp, #0x8]
	lsl		r0, r3, #0x1
	add		r0, r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	mov		r4, r10
	add		r1, r6, r4
	add		r4, r7, #0x0
	add		r3, r0, #0x0
	sub		r3, #0xc
	lsl		r2, r1, #0x2
	sub		r2, #0x1
	ldr		r0, [sp, #0x4+0x2c]
	ldrb	r5, [r0, #0x8]
	cmp		r2, #0x0
	blt		_08005c7e
_08005c6c:
	ldrb	r1, [r4, #0x0]
	ldrb	r0, [r3, #0x0]
	strb	r0, [r4, #0x0]
	add		r4, #0x1
	strb	r1, [r3, #0x0]
	add		r3, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08005c6c
_08005c7e:
	strb	r5, [r7, #0x5]
	ldr		r0, _08005ce0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08005c94
	ldr		r1, [sp, #0x4]
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	bl		sub_0800223c
_08005c94:
	ldr		r0, _08005ce0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08005cec
	ldr		r1, PTR_PTR_s_Keyword_08005ce4
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	add		r3, r1, #0x0
	cmp		r3, r0
	bcs		_08005cba
	add		r2, r0, #0x0
_08005cae:
	ldr		r0, [r1, #0x4]
	cmp		r7, r0
	beq		_08005c28
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005cae
_08005cba:
	mov		r4, #0x1
	neg		r4, r4
_08005cbe:
	ldr		r0, _08005ce8
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_08005ce4
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	b		_08005dbe

.incbin "base.gba", 0x5CDE, 0x2

_08005ce0:	.4byte 0x00000842
PTR_PTR_s_Keyword_08005ce4:	.4byte 0x080c7634 @ Keyword
_08005ce8:	.4byte 0x02008880

_08005cec:
	ldr		r4, [sp, #0x4]
	mov		r0, #0x0
	ldrsh	r3, [r4, r0]
	ldr		r4, [sp, #0x8]
	add		r4, #0x1
	ldr		r1, _08005d0c
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08005d10
	mov		r2, #0x1
	mov		r0, r8
	lsl		r2, r0
	b		_08005d16

_08005d0c:	.4byte 0x80808080

_08005d10:
	mov		r2, #0x1
	ldr		r1, [sp, #0x8]
	lsl		r2, r1
_08005d16:
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080021c8
	ldr		r5, _08005d44
	ldr		r1, PTR_PTR_s_Keyword_08005d48
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	cmp		r1, r0
	bcs		_08005d58
	ldr		r3, _08005d4c
	add		r2, r0, #0x0
	mov		r4, #0x0
_08005d32:
	ldr		r0, [r1, #0x4]
	cmp		r5, r0
	bne		_08005d50
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005d5c

_08005d44:	.4byte 0x02000BB8
PTR_PTR_s_Keyword_08005d48:	.4byte 0x080c7634 @ Keyword
_08005d4c:	.4byte 0x02008880

_08005d50:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005d32
_08005d58:
	mov		r4, #0x1
	neg		r4, r4
_08005d5c:
	cmp		r4, #0x0
	bge		_08005d6c
	ldr		r0, _08005d90
	ldr		r1, _08005d94
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005d6c:
	ldr		r1, PTR_PTR_s_Keyword_08005d98
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_08005da8
	ldr		r3, _08005d9c
	add		r2, r0, #0x0
	mov		r4, #0x0
_08005d7e:
	ldr		r0, [r1, #0x4]
	cmp		r7, r0
	bne		_08005da0
	asr		r4, r4, #0x3
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08005dac

_08005d90:	.4byte 0x080c7e08 @ system/savedata.cpp
_08005d94:	.4byte 0x000003C7
PTR_PTR_s_Keyword_08005d98:	.4byte 0x080c7634 @ Keyword
_08005d9c:	.4byte 0x02008880

_08005da0:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r2
	bcc		_08005d7e
_08005da8:
	mov		r4, #0x1
	neg		r4, r4
_08005dac:
	cmp		r4, #0x0
	bge		_08005dbe
	ldr		r0, _08005dd0
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005dbe:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5DCE, 0x2

_08005dd0:	.4byte 0x080c7e08 @ system/savedata.cpp
	thumb_func_end sub_08005ae0

	thumb_func_start sub_08005dd4
sub_08005dd4:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	mov		r4, #0x0
	mov		r0, #0x18
	ldrsh	r1, [r5, r0]
	mov		r6, #0x1a
	ldrsh	r0, [r5, r6]
	cmp		r1, r0
	bge		_08005dee
	mov		r2, #0x2
	mov		r3, #0x0
_08005dee:
	mov		r0, #0x24
	ldrsh	r1, [r5, r0]
	mov		r6, #0x26
	ldrsh	r0, [r5, r6]
	cmp		r1, r0
	bge		_08005dfc
	mov		r4, #0x2
_08005dfc:
	add		r1, r5, #0x0
	add		r1, #0x1e
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	add		r1, r1, r3
	ldrb	r1, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x2a
	add		r2, r2, r4
	ldrb	r2, [r2, #0x0]
	bl		sub_08003600
	ldrb	r4, [r5, #0x1e]
	cmp		r4, #0x13
	bls		_08005e26
	ldr		r0, _08005e44
	mov		r1, #0xcb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08005e26:
	ldr		r0, _08005e48
	add		r0, r4, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08005e4c
	mov		r2, #0x0
	mov		r0, #0x18
	ldrsh	r1, [r5, r0]
	mov		r3, #0x1a
	ldrsh	r0, [r5, r3]
	cmp		r1, r0
	bgt		_08005e5c
	mov		r2, #0x1
	b		_08005e5c

.incbin "base.gba", 0x5E42, 0x2

_08005e44:	.4byte 0x080c7bd0 @ system/savedata.cpp
_08005e48:	.4byte 0x080c7bbc

_08005e4c:
	mov		r6, #0x24
	ldrsh	r1, [r5, r6]
	mov		r2, #0x26
	ldrsh	r0, [r5, r2]
	mov		r2, #0x3
	cmp		r1, r0
	ble		_08005e5c
	mov		r2, #0x2
_08005e5c:
	add		r0, r2, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08005dd4

	thumb_func_start sub_08005e64
sub_08005e64:
	push	{ r4, lr }
	ldr		r4, _08005eb8
	ldr		r0, _08005ebc
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	add		r0, r4, #0x0
	bl		sub_08002434
	ldr		r2, _08005ec0
	add		r1, r4, #0x0
	add		r1, #0xd4
	add		r0, r2, #0x0
	stmia	r0!, {  r1 }
	mov		r1, #0x0
	str		r1, [r2, #0x4]
	add		r0, #0x4
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	stmia	r0!, {  r1 }
	mov		r2, #0xb4
	lsl		r2, r2, #0x2
	add		r1, r4, r2
	stmia	r0!, {  r1 }
	add		r2, #0x2
	add		r1, r4, r2
	stmia	r0!, {  r1 }
	add		r2, #0x6
	add		r1, r4, r2
	stmia	r0!, {  r1 }
	ldr		r1, _08005ec4
	add		r4, r4, r1
	str		r4, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08005eb8:	.4byte 0x02000BAC
_08005ebc:	.4byte 0x0200D0A0
_08005ec0:	.4byte 0x02000B58
_08005ec4:	.4byte 0x000002DA
	thumb_func_end sub_08005e64

	thumb_func_start sub_08005ec8
sub_08005ec8:
	push	{ r4, r5, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	add		r5, r2, #0x0
	ldr		r1, _08005f34
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08005ee2
	mov		r0, #0x1
	eor		r3, r0
_08005ee2:
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r0, _08005f38
	str		r0, [sp, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	add		r2, r3, #0x0
	add		r3, r5, #0x0
	bl		sub_08005ae0
	ldr		r0, _08005f3c
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08005f2a
	ldr		r0, _08005f40
	bl		sub_0800227c
	ldr		r5, _08005f44
	cmp		r0, #0x0
	bne		_08005f24
	ldr		r0, [r5, #0x0]
	add		r0, #0xd0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_08005f24
	add		r0, r4, #0x0
	bl		sub_08005dd4
	ldr		r1, _08005f48
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	strb	r0, [r4, #0x5]
_08005f24:
	ldr		r0, [r5, #0x0]
	bl		sub_08002fd8
_08005f2a:
	add		sp, #0x8
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5F32, 0x2

_08005f34:	.4byte 0x80808080
_08005f38:	.4byte 0x080c7f40
_08005f3c:	.4byte 0x00000854
_08005f40:	.4byte 0x00000842
_08005f44:	.4byte 0x080c7e4c
_08005f48:	.4byte 0x080c7f37
	thumb_func_end sub_08005ec8

	thumb_func_start sub_08005f4c
sub_08005f4c:
	push	{ r4, r5, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	add		r5, r2, #0x0
	ldr		r1, _08005fb8
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08005f66
	mov		r0, #0x1
	eor		r3, r0
_08005f66:
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r0, _08005fbc
	str		r0, [sp, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	add		r2, r3, #0x0
	add		r3, r5, #0x0
	bl		sub_0800576c
	ldr		r0, _08005fc0
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08005fae
	ldr		r0, _08005fc4
	bl		sub_0800227c
	ldr		r5, _08005fc8
	cmp		r0, #0x0
	bne		_08005fa8
	ldr		r0, [r5, #0x0]
	add		r0, #0xd0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x4
	bne		_08005fa8
	add		r0, r4, #0x0
	bl		sub_08005a50
	ldr		r1, _08005fcc
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	strb	r0, [r4, #0x5]
_08005fa8:
	ldr		r0, [r5, #0x0]
	bl		sub_08002fd8
_08005fae:
	add		sp, #0x8
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5FB6, 0x2

_08005fb8:	.4byte 0x80808080
_08005fbc:	.4byte 0x080c7f40
_08005fc0:	.4byte 0x00000854
_08005fc4:	.4byte 0x00000842
_08005fc8:	.4byte 0x080c7e50
_08005fcc:	.4byte 0x080c7f37
	thumb_func_end sub_08005f4c

	thumb_func_start sub_08005fd0
sub_08005fd0:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldrb	r0, [r4, #0x6]
	ldrb	r1, [r4, #0xe]
	ldrb	r2, [r4, #0x16]
	bl		sub_08003600
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _08006010
	str		r0, [sp, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_080054f4
	ldr		r0, _08006014
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08006008
	ldr		r0, _08006018
	bl		sub_08002fd8
_08006008:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08006010:	.4byte 0x080c7f37
_08006014:	.4byte 0x00000854
_08006018:	.4byte 0x02000BAC
	thumb_func_end sub_08005fd0

	thumb_func_start sub_0800601c
sub_0800601c:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldrb	r0, [r4, #0x6]
	ldrb	r1, [r4, #0xe]
	ldrb	r2, [r4, #0x16]
	bl		sub_08003600
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _0800605c
	str		r0, [sp, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_080051e4
	ldr		r0, _08006060
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08006054
	ldr		r0, _08006064
	bl		sub_08002fd8
_08006054:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800605c:	.4byte 0x080c7f37
_08006060:	.4byte 0x00000854
_08006064:	.4byte 0x02000BAC
	thumb_func_end sub_0800601c

	thumb_func_start sub_08006068
sub_08006068:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldrb	r0, [r4, #0x6]
	ldrb	r1, [r4, #0xe]
	ldrb	r2, [r4, #0x16]
	bl		sub_08003600
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _080060a8
	str		r0, [sp, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_08004dd0
	ldr		r0, _080060ac
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080060a0
	ldr		r0, _080060b0
	bl		sub_08002fd8
_080060a0:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080060a8:	.4byte 0x080c7f37
_080060ac:	.4byte 0x00000854
_080060b0:	.4byte 0x02000BAC
	thumb_func_end sub_08006068

	thumb_func_start sub_080060b4
sub_080060b4:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldrb	r0, [r4, #0x6]
	ldrb	r1, [r4, #0xe]
	ldrb	r2, [r4, #0x16]
	bl		sub_08003600
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _080060f4
	str		r0, [sp, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_080049ac
	ldr		r0, _080060f8
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080060ec
	ldr		r0, _080060fc
	bl		sub_08002fd8
_080060ec:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080060f4:	.4byte 0x080c7f37
_080060f8:	.4byte 0x00000854
_080060fc:	.4byte 0x02000BAC
	thumb_func_end sub_080060b4

	thumb_func_start sub_08006100
sub_08006100:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldrb	r0, [r4, #0x6]
	ldrb	r1, [r4, #0x12]
	ldrb	r2, [r4, #0x1e]
	bl		sub_08003600
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _08006140
	str		r0, [sp, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_08004570
	ldr		r0, _08006144
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08006138
	ldr		r0, _08006148
	bl		sub_08002fd8
_08006138:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08006140:	.4byte 0x080c7f37
_08006144:	.4byte 0x00000854
_08006148:	.4byte 0x02000BAC
	thumb_func_end sub_08006100

	thumb_func_start sub_0800614c
sub_0800614c:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldrb	r0, [r4, #0x6]
	ldrb	r1, [r4, #0xe]
	ldrb	r2, [r4, #0x16]
	bl		sub_08003600
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _0800618c
	str		r0, [sp, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_08003f60
	ldr		r0, _08006190
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08006184
	ldr		r0, _08006194
	bl		sub_08002fd8
_08006184:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800618c:	.4byte 0x080c7f37
_08006190:	.4byte 0x00000854
_08006194:	.4byte 0x02000BAC
	push	{ lr }
	ldrb	r0, [r1, #0x0]
	ldrb	r3, [r2, #0x0]
	cmp		r0, r3
	bne		_080061aa
	ldrb	r0, [r1, #0x1]
	ldrb	r3, [r2, #0x1]
	cmp		r0, r3
	beq		_080061b6
_080061aa:
	mov		r1, #0x0
	cmp		r0, r3
	bhi		_080061b2
	mov		r1, #0x1
_080061b2:
	add		r0, r1, #0x0
	b		_080061ca
_080061b6:
	ldrb	r1, [r1, #0x2]
	ldrb	r2, [r2, #0x2]
	cmp		r1, r2
	beq		_080061c8
	mov		r0, #0x0
	cmp		r1, r2
	bhi		_080061ca
	mov		r0, #0x1
	b		_080061ca
_080061c8:
	mov		r0, #0x0
_080061ca:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x61CE, 0x22
	thumb_func_end sub_0800614c

	thumb_func_start sub_080061f0
sub_080061f0:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r7, r3, #0x0
	ldr		r0, _08006250
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800621a
	ldr		r0, _08006254
	ldr		r2, [sp, #0x8+0x1c]
	str		r2, [sp, #0x0]
	ldr		r1, [sp, #0xc+0x1c]
	str		r1, [sp, #0x4]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	ldr		r3, [sp, #0x0+0x1c]
	bl		sub_0808c670
_0800621a:
	ldr		r0, _08006258
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08006248
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	mov		r2, sp
	ldrh	r2, [r2, #0x8+0x1c]
	strh	r2, [r0, #0x0]
	mov		r1, sp
	ldrh	r1, [r1, #0xc+0x1c]
	strh	r1, [r0, #0x2]
	strb	r4, [r0, #0x4]
	strb	r5, [r0, #0x6]
	strb	r7, [r0, #0x7]
	mov		r2, sp
	ldrb	r2, [r2, #0x0+0x1c]
	strb	r2, [r0, #0x8]
	ldr		r1, [sp, #0x4+0x1c]
	strb	r1, [r0, #0x9]
_08006248:
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08006250:	.4byte 0x0200CDBC
_08006254:	.4byte 0x080c7d70 @ SETRECORD R%d N%02d N%02d %d-%d\n
_08006258:	.4byte 0x00000854
	thumb_func_end sub_080061f0

	thumb_func_start sub_0800625c
sub_0800625c:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	ldr		r0, _080062ac
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08006284
	ldr		r0, _080062b0
	ldr		r2, [sp, #0x0+0x1c]
	str		r2, [sp, #0x0]
	ldr		r1, [sp, #0x4+0x1c]
	str		r1, [sp, #0x4]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808c670
_08006284:
	ldr		r0, _080062b4
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080062a4
	lsl		r0, r4, #0x3
	add		r0, r0, r7
	mov		r2, sp
	ldrh	r2, [r2, #0x0+0x1c]
	strh	r2, [r0, #0x0]
	mov		r1, sp
	ldrh	r1, [r1, #0x4+0x1c]
	strh	r1, [r0, #0x2]
	strb	r4, [r0, #0x4]
	strb	r5, [r0, #0x6]
	strb	r6, [r0, #0x7]
_080062a4:
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080062ac:	.4byte 0x0200CDBC
_080062b0:	.4byte 0x080c7d70 @ SETRECORD R%d N%02d N%02d %d-%d\n
_080062b4:	.4byte 0x00000854
	thumb_func_end sub_0800625c

	thumb_func_start sub_080062b8
sub_080062b8:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r7, r3, #0x0
	ldr		r0, _08006308
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080062de
	ldr		r0, _0800630C
	ldr		r2, [sp, #0x4+0x18]
	str		r2, [sp, #0x0]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	ldr		r3, [sp, #0x0+0x18]
	bl		sub_0808c670
_080062de:
	ldr		r0, _08006310
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080062fe
	lsl		r0, r4, #0x3
	add		r0, r0, r6
	mov		r1, sp
	ldrh	r1, [r1, #0x4+0x18]
	strh	r1, [r0, #0x0]
	mov		r2, sp
	ldrh	r2, [r2, #0x0+0x18]
	strh	r2, [r0, #0x2]
	strb	r4, [r0, #0x4]
	strb	r5, [r0, #0x6]
	strb	r7, [r0, #0x7]
_080062fe:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6306, 0x2

_08006308:	.4byte 0x0200CDBC
_0800630C:	.4byte 0x080c7d54 @ SETRECORD R%d N%02d %d.%d\n
_08006310:	.4byte 0x00000854
	thumb_func_end sub_080062b8

	thumb_func_start sub_08006314
sub_08006314:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	add		r5, r3, #0x0
	ldr		r0, _0800635c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08006338
	ldr		r0, _08006360
	ldr		r2, [sp, #0x0+0x18]
	str		r2, [sp, #0x0]
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_0808c670
_08006338:
	ldr		r0, _08006364
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08006352
	lsl		r0, r4, #0x3
	add		r0, r0, r7
	mov		r1, sp
	ldrh	r1, [r1, #0x0+0x18]
	strh	r1, [r0, #0x0]
	strh	r5, [r0, #0x2]
	strb	r4, [r0, #0x4]
	strb	r6, [r0, #0x6]
_08006352:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x635A, 0x2

_0800635c:	.4byte 0x0200CDBC
_08006360:	.4byte 0x080c7d54 @ SETRECORD R%d N%02d %d.%d\n
_08006364:	.4byte 0x00000854
	thumb_func_end sub_08006314

	thumb_func_start sub_08006368
sub_08006368:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	add		r5, r3, #0x0
	ldr		r0, _080063b0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800638c
	ldr		r0, _080063b4
	ldr		r2, [sp, #0x0+0x18]
	str		r2, [sp, #0x0]
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_0808c670
_0800638c:
	ldr		r0, _080063b8
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080063a6
	lsl		r0, r4, #0x3
	add		r0, r0, r7
	mov		r1, sp
	ldrh	r1, [r1, #0x0+0x18]
	strh	r1, [r0, #0x0]
	strh	r5, [r0, #0x2]
	strb	r4, [r0, #0x4]
	strb	r6, [r0, #0x6]
_080063a6:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x63AE, 0x2

_080063b0:	.4byte 0x0200CDBC
_080063b4:	.4byte 0x080c7d54 @ SETRECORD R%d N%02d %d.%d\n
_080063b8:	.4byte 0x00000854
	thumb_func_end sub_08006368

	thumb_func_start sub_080063bc
sub_080063bc:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	add		r5, r3, #0x0
	ldr		r0, _08006404
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080063e0
	ldr		r0, _08006408
	ldr		r2, [sp, #0x0+0x18]
	str		r2, [sp, #0x0]
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_0808c670
_080063e0:
	ldr		r0, _0800640c
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080063fa
	lsl		r0, r4, #0x3
	add		r0, r0, r7
	mov		r1, sp
	ldrh	r1, [r1, #0x0+0x18]
	strh	r1, [r0, #0x0]
	strh	r5, [r0, #0x2]
	strb	r4, [r0, #0x4]
	strb	r6, [r0, #0x6]
_080063fa:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6402, 0x2

_08006404:	.4byte 0x0200CDBC
_08006408:	.4byte 0x080c7d54 @ SETRECORD R%d N%02d %d.%d\n
_0800640c:	.4byte 0x00000854
	thumb_func_end sub_080063bc

	thumb_func_start sub_08006410
sub_08006410:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	mov		r8, r3
	ldr		r7, [sp, #0x38]
	ldr		r0, _08006484
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08006442
	ldr		r0, _08006488
	ldr		r2, [sp, #0xc+0x24]
	str		r2, [sp, #0x0]
	ldr		r1, [sp, #0x10+0x24]
	str		r1, [sp, #0x4]
	str		r7, [sp, #0x8]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	ldr		r3, [sp, #0x8+0x24]
	bl		sub_0808c670
_08006442:
	ldr		r0, _0800648c
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08006478
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	strb	r7, [r0, #0x0]
	add		r2, sp, #0x34
	ldrb	r2, [r2, #0x0]
	strb	r2, [r0, #0x1]
	add		r1, sp, #0x30
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x2]
	add		r2, sp, #0x2c
	ldrb	r2, [r2, #0x0]
	strb	r2, [r0, #0x3]
	strb	r4, [r0, #0x4]
	strb	r5, [r0, #0x6]
	mov		r1, r8
	strb	r1, [r0, #0x7]
	ldr		r1, [sp, #0x0+0x24]
	strb	r1, [r0, #0x8]
	ldr		r1, [sp, #0x4+0x24]
	strb	r1, [r0, #0x9]
_08006478:
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08006484:	.4byte 0x0200CDBC
_08006488:	.4byte 0x080c7d08 @ SETRECORD R%d N%02d %d:%d:%d.%d\
_0800648c:	.4byte 0x00000854
	thumb_func_end sub_08006410

	thumb_func_start sub_08006490
sub_08006490:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	ldr		r0, _080064f4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080064c0
	ldr		r0, _080064f8
	ldr		r2, [sp, #0x0+0x24]
	str		r2, [sp, #0x0]
	ldr		r1, [sp, #0x4+0x24]
	str		r1, [sp, #0x4]
	ldr		r2, [sp, #0x8+0x24]
	str		r2, [sp, #0x8]
	ldr		r1, [sp, #0xc+0x24]
	str		r1, [sp, #0xC]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808c670
_080064c0:
	ldr		r0, _080064fc
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080064ec
	lsl		r0, r4, #0x3
	add		r0, r0, r7
	add		r2, sp, #0x30
	ldrb	r2, [r2, #0x0]
	strb	r2, [r0, #0x0]
	add		r1, sp, #0x2c
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x1]
	add		r2, sp, #0x28
	ldrb	r2, [r2, #0x0]
	strb	r2, [r0, #0x2]
	add		r1, sp, #0x24
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x3]
	strb	r4, [r0, #0x4]
	strb	r5, [r0, #0x6]
	strb	r6, [r0, #0x7]
_080064ec:
	add		sp, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080064f4:	.4byte 0x0200CDBC
_080064f8:	.4byte 0x080c7d2c @ SETRECORD R%d N%02d N%02d %d:%d:%d.%d\n
_080064fc:	.4byte 0x00000854
	thumb_func_end sub_08006490

	thumb_func_start sub_08006500
sub_08006500:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	add		r5, r3, #0x0
	ldr		r0, _0800655c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800652c
	ldr		r0, _08006560
	ldr		r2, [sp, #0x0+0x20]
	str		r2, [sp, #0x0]
	ldr		r1, [sp, #0x4+0x20]
	str		r1, [sp, #0x4]
	ldr		r2, [sp, #0x8+0x20]
	str		r2, [sp, #0x8]
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_0808c670
_0800652c:
	ldr		r0, _08006564
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08006552
	lsl		r0, r4, #0x3
	add		r0, r0, r7
	add		r1, sp, #0x28
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x0]
	add		r2, sp, #0x24
	ldrb	r2, [r2, #0x0]
	strb	r2, [r0, #0x1]
	add		r1, sp, #0x20
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x2]
	strb	r5, [r0, #0x3]
	strb	r4, [r0, #0x4]
	strb	r6, [r0, #0x6]
_08006552:
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x655A, 0x2

_0800655c:	.4byte 0x0200CDBC
_08006560:	.4byte 0x080c7d08 @ SETRECORD R%d N%02d %d:%d:%d.%d\
_08006564:	.4byte 0x00000854

.incbin "base.gba", 0x6568, 0x54
	thumb_func_end sub_08006500

	thumb_func_start sub_080065bc
sub_080065bc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	b		_080065de
_080065c4:
	add		r0, r5, r2
	add		r1, r4, r2
	ldrb	r3, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r3, r0
	bcs		_080065d6
	mov		r0, #0x1
	neg		r0, r0
	b		_080065e6
_080065d6:
	cmp		r3, r0
	bls		_080065de
	mov		r0, #0x1
	b		_080065e6
_080065de:
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080065c4
	mov		r0, #0x0
_080065e6:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080065bc

	thumb_func_start sub_080065ec
sub_080065ec:
	push	{ r4, lr }
	ldr		r2, PTR_PTR_s_Keyword_08006610
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r2, r3
	cmp		r2, r0
	bcs		_08006620
	add		r3, r0, #0x0
	mov		r4, #0x0
_080065fe:
	ldr		r0, [r2, #0x4]
	cmp		r1, r0
	bne		_08006618
	asr		r4, r4, #0x3
	ldr		r0, _08006614
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	b		_08006624

PTR_PTR_s_Keyword_08006610:	.4byte 0x080c7634 @ Keyword
_08006614:	.4byte 0x02008880

_08006618:
	add		r4, #0x8
	add		r2, #0x18
	cmp		r2, r3
	bcc		_080065fe
_08006620:
	mov		r4, #0x1
	neg		r4, r4
_08006624:
	ldr		r0, _08006648
	add		r1, r4, #0x0
	bl		sub_0808b560
	ldr		r0, PTR_PTR_s_Keyword_0800664c
	lsl		r3, r4, #0x1
	add		r3, r3, r4
	lsl		r3, r3, #0x3
	add		r3, r3, r0
	ldr		r0, [r3, #0x4]
	ldr		r1, [r3, #0xc]
	ldr		r2, [r3, #0x8]
	ldr		r3, [r3, #0x10]
	bl		sub_080bbc7c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08006648:	.4byte 0x02008880
PTR_PTR_s_Keyword_0800664c:	.4byte 0x080c7634 @ Keyword
	thumb_func_end sub_080065ec

	thumb_func_start sub_08006650
sub_08006650:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _0800669c
	mov		r1, #0x0
	mov		r2, #0xc0
	bl		sub_0808c788
	ldr		r2, _080066a0
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808c828
	ldr		r0, _080066a4
	add		r6, r5, r0
	ldr		r0, PTR_PTR_s_Keyword_080066a8
	add		r4, r0, #0x4
	mov		r5, #0x3a
_08006674:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x8]
	add		r1, r1, r6
	ldr		r2, [r4, #0x4]
	ldr		r3, [r4, #0xc]
	bl		sub_080bbc7c
	add		r4, #0x18
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08006674
	ldr		r0, _080066ac
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_0808c788
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x669A, 0x2

_0800669c:	.4byte 0x0200CEDC
_080066a0:	.4byte 0x00003DC4
_080066a4:	.4byte 0xF1FFFE00
PTR_PTR_s_Keyword_080066a8:	.4byte 0x080c7634 @ Keyword
_080066ac:	.4byte 0x02008880
	thumb_func_end sub_08006650

	thumb_func_start sub_080066b0
sub_080066b0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r0, _08006718
	sub		r7, r5, r0
	mov		r6, #0x0
	mov		r4, #0x0
	ldr		r0, PTR_PTR_s_Keyword_0800671c
	mov		r8, r0
	ldrh	r0, [r5, #0x8]
	mov		r12, r0
_080066c8:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r1, [r0, #0x4]
	add		r1, r1, r7
	ldr		r2, [r0, #0x8]
	mov		r3, #0x0
	sub		r2, #0x1
	add		r4, #0x1
	cmp		r2, #0x0
	blt		_080066ec
_080066e0:
	ldrb	r0, [r1, #0x0]
	add		r3, r3, r0
	add		r1, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080066e0
_080066ec:
	add		r6, r6, r3
	cmp		r4, #0x3a
	ble		_080066c8
	mov		r2, #0x0
	lsl		r0, r6, #0x10
	lsr		r0, r0, #0x10
	cmp		r12, r0
	bne		_0800670a
	mvn		r0, r6
	ldrh	r1, [r5, #0xa]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r1, r0
	bne		_0800670a
	mov		r2, #0x1
_0800670a:
	add		r0, r2, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6716, 0x2

_08006718:	.4byte 0x02000BAC
PTR_PTR_s_Keyword_0800671c:	.4byte 0x080c7634 @ Keyword
	thumb_func_end sub_080066b0

	thumb_func_start sub_08006720
sub_08006720:
	push	{ r4, r5, r6, r7, lr }
	ldr		r1, _08006760
	sub		r6, r0, r1
	mov		r5, #0x0
	mov		r4, #0x0
	ldr		r7, PTR_PTR_s_Keyword_08006764
_0800672c:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r0, r0, r7
	ldr		r1, [r0, #0x4]
	add		r1, r1, r6
	ldr		r2, [r0, #0x8]
	mov		r3, #0x0
	sub		r2, #0x1
	add		r4, #0x1
	cmp		r2, #0x0
	blt		_08006750
_08006744:
	ldrb	r0, [r1, #0x0]
	add		r3, r3, r0
	add		r1, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08006744
_08006750:
	add		r5, r5, r3
	cmp		r4, #0x3a
	ble		_0800672c
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x675E, 0x2

_08006760:	.4byte 0x02000BAC
PTR_PTR_s_Keyword_08006764:	.4byte 0x080c7634 @ Keyword
	thumb_func_end sub_08006720

	thumb_func_start sub_08006768
sub_08006768:
	push	{ lr }
	ldr		r1, PTR_s_Hamtaro_0800677c
	bl		sub_080bdb94
	cmp		r0, #0x0
	beq		_08006776
	mov		r0, #0x1
_08006776:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x677A, 0x2

PTR_s_Hamtaro_0800677c:	.4byte 0x080c7c28 @ Hamtaro
	thumb_func_end sub_08006768

	thumb_func_start sub_08006780
sub_08006780:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _080067c4
	add		r0, #0xcc
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl		r0, r1, #0x1
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	bge		_080067ac
	cmp		r1, #0x1
	ble		_0800679e
	mov		r1, #0x1
_0800679e:
	lsl		r0, r1, #0x1
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	bge		_080067ac
	mov		r1, #0x0
_080067ac:
	lsl		r0, r1, #0x1
	add		r0, r0, r2
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, _080067c8
	lsl		r1, r1, #0x3
	ldr		r0, [r0, #0x4]
	add		r0, r0, r1
	bl		sub_08000914
	pop		{ r1 }
	bx		r1

_080067c4:	.4byte 0x02000BAC
_080067c8:	.4byte 0x0200CDD4
	thumb_func_end sub_08006780

	thumb_func_start sub_080067cc
sub_080067cc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r4, #0x13
	bls		_080067e0
	ldr		r0, _080067ec
	mov		r1, #0xcb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080067e0:
	ldr		r0, _080067f0
	add		r0, r4, r0
	ldrb	r0, [r0, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_080067ec:	.4byte 0x080c7bd0 @ system/savedata.cpp
_080067f0:	.4byte 0x080c7bbc
	thumb_func_end sub_080067cc

	thumb_func_start sub_080067f4
sub_080067f4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	ldr		r1, _08006818
	mov		r2, #0xc0
	bl		sub_0808c818
_08006804:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_080bbc38
	cmp		r0, #0x0
	bne		_08006804
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08006818:	.4byte 0x0200CEDC
	thumb_func_end sub_080067f4

	thumb_func_start sub_0800681c
sub_0800681c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	bl		sub_080bbb00
	ldr		r0, _08006838
	add		r1, r4, #0x0
	mov		r2, #0xc0
	bl		sub_0808c818
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08006838:	.4byte 0x0200CEDC
	thumb_func_end sub_0800681c

	thumb_func_start sub_0800683c
sub_0800683c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
_08006844:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_080bbc38
	cmp		r0, #0x0
	bne		_08006844
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800683c

	thumb_func_start sub_08006858
sub_08006858:
	push	{ lr }
	add		r3, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	bl		sub_080bbb00
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08006858

	thumb_func_start sub_08006868
sub_08006868:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r3, #0x0
	b		_08006876
_08006870:
	ldrb	r0, [r2, #0x0]
	add		r3, r3, r0
	add		r2, #0x1
_08006876:
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08006870
	add		r0, r3, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6882, 0x2
	thumb_func_end sub_08006868

	thumb_func_start sub_08006884
sub_08006884:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r1, PTR_PTR_s_Keyword_080068ac
	mov		r3, #0xb1
	lsl		r3, r3, #0x3
	add		r0, r1, r3
	cmp		r1, r0
	bcs		_080068bc
	add		r3, r0, #0x0
	mov		r4, #0x0
_08006898:
	ldr		r0, [r1, #0x4]
	cmp		r2, r0
	bne		_080068b4
	asr		r4, r4, #0x3
	ldr		r0, _080068b0
	add		r1, r4, #0x0
	bl		sub_0808b4f8
	add		r0, r4, #0x0
	b		_080068c0

PTR_PTR_s_Keyword_080068ac:	.4byte 0x080c7634 @ Keyword
_080068b0:	.4byte 0x02008880

_080068b4:
	add		r4, #0x8
	add		r1, #0x18
	cmp		r1, r3
	bcc		_08006898
_080068bc:
	mov		r0, #0x1
	neg		r0, r0
_080068c0:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x68C6, 0x2
	thumb_func_end sub_08006884

	thumb_func_start sub_080068c8
sub_080068c8:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _080068dc
	lsl		r1, r1, #0x2
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	bl		sub_0800f33c
	pop		{ r1 }
	bx		r1

_080068dc:	.4byte 0x02000BA8
	thumb_func_end sub_080068c8

	thumb_func_start sub_080068e0
sub_080068e0:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _080068f4
	lsl		r1, r1, #0x2
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	bl		sub_0800f33c
	pop		{ r1 }
	bx		r1

_080068f4:	.4byte 0x02000BA4
	thumb_func_end sub_080068e0

	thumb_func_start sub_080068f8
sub_080068f8:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0800690c
	lsl		r1, r1, #0x2
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	bl		sub_0800f33c
	pop		{ r1 }
	bx		r1

_0800690c:	.4byte 0x02000BA0

.incbin "base.gba", 0x6910, 0x14
	thumb_func_end sub_080068f8

	thumb_func_start sub_08006924
sub_08006924:
	push	{ r4, r5, r6, lr }
	ldr		r5, _0800698c
	add		r0, r5, #0x0
	mov		r1, #0x50
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	ldr		r0, _08006990
	ldr		r1, [r0, #0x0]
	ldr		r2, _08006994
	add		r0, r4, #0x0
	bl		sub_0800d280
	ldr		r0, _08006998
	str		r0, [r4, #0xc]
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	ldrh	r0, [r1, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x4e
	mov		r6, #0x0
	strh	r0, [r2, #0x0]
	strh	r6, [r1, #0x0]
	ldr		r0, _0800699c
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	bl		sub_0800132c
	ldr		r1, _080069a0
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x40
	strh	r6, [r0, #0x0]
	mov		r0, #0x8c
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800698c:	.4byte 0x0200DA00
_08006990:	.4byte 0x020089C8
_08006994:	.4byte 0x0200895C
_08006998:	.4byte 0x080e048c
_0800699c:	.4byte 0x02000B18
_080069a0:	.4byte 0x0200DD2C
	thumb_func_end sub_08006924

	thumb_func_start sub_080069a4
sub_080069a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x24
	add		r6, r0, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08006a20
	str		r0, [r6, #0x4c]
	ldr		r0, _08006a24
	str		r0, [r6, #0xc]
	ldr		r0, _08006a28
	mov		r8, r0
	ldr		r5, [r0, #0x0]
	ldr		r7, _08006a2c
	cmp		r5, #0x0
	bne		_080069fe
	ldr		r4, [r7, #0x0]
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x24
	bl		sub_0808c828
	str		r5, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	str		r0, [sp, #0xC]
	str		r0, [sp, #0x10]
	str		r0, [sp, #0x14]
	str		r0, [sp, #0x18]
	str		r0, [sp, #0x1C]
	str		r0, [sp, #0x20]
	add		r0, r4, #0x0
	mov		r1, sp
	mov		r2, #0x24
	bl		sub_0808c818
	mov		r0, #0x1
	mov		r1, r8
	str		r0, [r1, #0x0]
_080069fe:
	ldr		r0, [r7, #0x0]
	str		r0, [r6, #0x54]
	ldr		r0, _08006a30
	ldr		r1, _08006a34
	str		r6, [r1, #0x0]
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r6, #0x0
	add		sp, #0x24
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6A1E, 0x2

_08006a20:	.4byte 0x080e044c
_08006a24:	.4byte 0x080e0464
_08006a28:	.4byte 0x020089C4
_08006a2c:	.4byte 0x080c7f4c
_08006a30:	.4byte 0x0200DC30
_08006a34:	.4byte 0x0200899C
	thumb_func_end sub_080069a4

	thumb_func_start sub_08006a38
sub_08006a38:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	mov		r10, r0
	add		r0, #0x58
	str		r0, [sp, #0xc]
	ldr		r1, _08006ac0
	str		r1, [sp, #0x18]
_08006a4e:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0808b0cc
	ldr		r2, _08006ac4
	ldr		r0, [r2, #0x0]
	add		r2, r0, #0x0
	cmp		r0, #0x0
	bge		_08006a62
	neg		r2, r0
_08006a62:
	asr		r2, r2, #0x10
	cmp		r0, #0x0
	bge		_08006a6a
	neg		r2, r2
_08006a6a:
	ldr		r3, _08006ac8
	ldr		r0, [r3, #0x0]
	add		r3, r0, #0x0
	cmp		r0, #0x0
	bge		_08006a76
	neg		r3, r0
_08006a76:
	asr		r3, r3, #0x10
	cmp		r0, #0x0
	bge		_08006a7e
	neg		r3, r3
_08006a7e:
	ldr		r0, [sp, #0xc]
	ldr		r1, _08006acc
	bl		sub_0808c63c
	ldr		r0, [sp, #0xc]
	bl		sub_080bdc3c
	add		r1, r0, #0x0
	ldr		r0, _08006ad0
	add		r1, r1, r0
	ldr		r0, [sp, #0xc]
	bl		sub_080bdac0
	bl		sub_0808b1f0
	mov		r1, #0x0
	str		r1, [sp, #0x10]
	mov		r2, #0x0
	str		r2, [sp, #0x14]
	ldr		r4, _08006ad4
_08006aa6:
	mov		r0, r10
	bl		sub_080b7650
	mov		r0, #0x0
	mov		r1, #0x4
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08006af0
	bl		sub_08006924
	b		_08006ade

.incbin "base.gba", 0x6ABE, 0x2

_08006ac0:	.4byte 0x0200E9AC
_08006ac4:	.4byte 0x0200CE30
_08006ac8:	.4byte 0x0200CE44
_08006acc:	.4byte 0x080c7f50 @ (%d, %d)
_08006ad0:	.4byte 0x080c707c @ ""
_08006ad4:	.4byte 0x02008958

_08006ad8:
	mov		r0, r10
	bl		sub_080b7690
_08006ade:
	ldr		r0, _08006aec
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08006ad8
	b		_08006aa6

.incbin "base.gba", 0x6AEA, 0x2

_08006aec:	.4byte 0x00000821

_08006af0:
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_08006bc4
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	cmp		r0, #0x1
	bne		_08006aa6
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08006b16
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [sp, #0x10]
_08006b16:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08006b26
	mov		r1, #0x1
	str		r1, [sp, #0x10]
_08006b26:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08006b38
	mov		r2, #0x1
	neg		r2, r2
	str		r2, [sp, #0x14]
_08006b38:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08006b48
	mov		r3, #0x1
	str		r3, [sp, #0x14]
_08006b48:
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x0
	bne		_08006b54
	ldr		r1, [sp, #0x14]
	cmp		r1, #0x0
	beq		_08006aa6
_08006b54:
	mov		r2, #0x1
	mov		r9, r2
	ldr		r3, _08006bbc
	add		r3, #0x4
	mov		r8, r3
	ldr		r7, _08006bc0
	add		r7, #0x4
	ldr		r6, [sp, #0x18]
	add		r6, #0x54
_08006b66:
	mov		r1, r10
	ldr		r0, [r1, #0x54]
	mov		r2, r9
	lsl		r1, r2, #0x3
	add		r1, r1, r0
	ldr		r0, [r1, #0x4]
	ldr		r3, [sp, #0x10]
	add		r2, r0, #0x0
	mul		r2, r3
	ldr		r0, [r7, #0x0]
	add		r5, r0, r2
	ldr		r0, [r1, #0x8]
	ldr		r2, [sp, #0x14]
	add		r1, r0, #0x0
	mul		r1, r2
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	add		r4, r0, r1
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	mov		r3, sp
	bl		sub_0808ce48
	cmp		r0, #0x0
	blt		_08006ba2
	ldr		r0, [sp, #0x4]
	sub		r5, r5, r0
	ldr		r0, [sp, #0x8]
	sub		r4, r4, r0
_08006ba2:
	stmia	r7!, {  r5 }
	mov		r0, r8
	add		r0, #0x4
	mov		r8, r0
	sub		r0, #0x4
	stmia	r0!, {  r4 }
	add		r6, #0x54
	mov		r1, #0x1
	add		r9, r1
	mov		r2, r9
	cmp		r2, #0x3
	ble		_08006b66
	b		_08006a4e

_08006bbc:	.4byte 0x0200CE38
_08006bc0:	.4byte 0x0200CE24

_08006bc4:
	ldr		r0, _08006bdc
	bl		sub_08002268
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6BDA, 0x2

_08006bdc:	.4byte 0x00000823
	push	{ r4, lr }
	cmp		r1, #0x0
	beq		_08006bfc
	cmp		r1, #0x1
	beq		_08006c1c
	ldr		r0, _08006bf8
	mov		r1, #0x90
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_08006c66

_08006bf8:	.4byte 0x080c7f58 @ a_toda/miscellaneous.cpp

_08006bfc:
	ldr		r1, _08006c14
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r0, _08006c18
	mov		r1, #0x98
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_080069a4
	b		_08006c66

_08006c14:	.4byte 0x02008958
_08006c18:	.4byte 0x0200DA00

_08006c1c:
	ldr		r0, _08006c6c
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08006c66
	ldr		r4, _08006c70
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08006c3e
	ldr		r0, _08006c74
	mov		r1, #0x89
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08006c3e:
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0x40]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	ldr		r0, _08006c78
	ldr		r0, [r0, #0x0]
	mov		r3, #0xf0
	lsl		r3, r3, #0xf
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	ldr		r0, _08006c7c
	ldr		r0, [r0, #0x0]
	mov		r2, #0xd0
	lsl		r2, r2, #0xf
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_08006c66:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08006c6c:	.4byte 0x02008958
_08006c70:	.4byte 0x0200B68C
_08006c74:	.4byte 0x080c7f58 @ a_toda/miscellaneous.cpp
_08006c78:	.4byte 0x0200CE30
_08006c7c:	.4byte 0x0200CE44
	thumb_func_end sub_08006a38

	thumb_func_start sub_08006c80
sub_08006c80:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	str		r0, [sp, #0x20]
	ldr		r0, _08006d84
	ldr		r1, [r0, #0x0]
	str		r1, [sp, #0x24]
	ldr		r1, [r0, #0x4]
	mov		r2, sp
	add		r2, #0x10
	str		r2, [sp, #0x30]
	ldr		r0, [sp, #0x24]
	cmp		r0, #0x0
	ble		_08006cb0
	ldr		r2, [sp, #0x20]
	add		r2, #0x40
_08006ca6:
	stmia	r2!, {  r1 }
	ldr		r1, [r1, #0x8]
	sub		r0, #0x1
	cmp		r0, #0x0
	bne		_08006ca6
_08006cb0:
	ldr		r1, _08006d88
	mov		r0, sp
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r1, _08006d8c
	ldr		r0, [sp, #0x30]
	mov		r2, #0x10
	bl		sub_0808c818
	mov		r1, #0x0
	mov		r9, r1
	mov		r2, #0x0
	str		r2, [sp, #0x28]
	ldr		r0, [sp, #0x20]
	add		r0, #0x40
	str		r0, [sp, #0x2c]
	ldr		r1, [sp, #0x24]
	sub		r1, #0x1
	str		r1, [sp, #0x34]
_08006cd8:
	mov		r2, r9
	lsl		r4, r2, #0x2
	ldr		r1, [sp, #0x2c]
	add		r0, r1, r4
	ldr		r5, [r0, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, _08006d90
	add		r6, r0, r1
	add		r2, #0x4
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, _08006d94
	add		r7, r0, r1
	ldr		r2, _08006d98
	ldr		r0, [r2, #0x0]
	sub		r0, r6, r0
	mov		r1, #0xf
	bl		sub_080bbcac
	mov		r8, r0
	ldr		r1, _08006d9c
	ldr		r0, [r1, #0x0]
	sub		r0, r7, r0
	mov		r1, #0xf
	bl		sub_080bbcac
	add		r1, r0, #0x0
	mov		r10, r4
	ldr		r2, [sp, #0x28]
	lsl		r4, r2, #0x2
	mov		r5, #0xe
_08006d1c:
	ldr		r2, _08006d98
	ldr		r0, [r2, #0x0]
	add		r0, r8
	str		r0, [r2, #0x0]
	ldr		r2, _08006da0
	str		r0, [r2, #0x0]
	ldr		r2, _08006da4
	str		r0, [r2, #0x0]
	ldr		r2, _08006d9c
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r2, _08006da8
	str		r0, [r2, #0x0]
	ldr		r2, _08006dac
	str		r0, [r2, #0x0]
	ldr		r0, [sp, #0x20]
	str		r1, [sp, #0x38]
	bl		sub_080b7690
	sub		r5, #0x1
	ldr		r1, [sp, #0x38]
	cmp		r5, #0x0
	bge		_08006d1c
	ldr		r0, _08006d98
	str		r6, [r0, #0x0]
	ldr		r1, _08006da0
	str		r6, [r1, #0x0]
	ldr		r2, _08006da4
	str		r6, [r2, #0x0]
	ldr		r0, _08006d9c
	str		r7, [r0, #0x0]
	ldr		r1, _08006da8
	str		r7, [r1, #0x0]
	ldr		r2, _08006dac
	str		r7, [r2, #0x0]
	ldr		r1, [sp, #0x2c]
	add		r0, r1, r4
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x8
	bl		sub_0800bdbc
	mov		r6, #0xe1
	lsl		r6, r6, #0x2
	ldr		r2, [sp, #0x2c]
	add		r2, r10
	mov		r8, r2
	mov		r7, #0x80
	lsl		r7, r7, #0x9
	b		_08006e30

.incbin "base.gba", 0x6D82, 0x2

_08006d84:	.4byte 0x0200A26C
_08006d88:	.4byte 0x080c7f71
_08006d8c:	.4byte 0x080c7f81
_08006d90:	.4byte 0xFF880000
_08006d94:	.4byte 0xFF980000
_08006d98:	.4byte 0x0200CE30
_08006d9c:	.4byte 0x0200CE44
_08006da0:	.4byte 0x0200CE2C
_08006da4:	.4byte 0x0200CE28
_08006da8:	.4byte 0x0200CE40
_08006dac:	.4byte 0x0200CE3C

_08006db0:
	ldr		r0, [sp, #0x20]
	bl		sub_080b7690
	mov		r0, r8
	ldr		r5, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0xf0
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08006e0e
	bl		sub_08015088
	add		r6, r0, #0x0
	add		r1, r7, #0x0
	bl		sub_0808c5a4
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	bl		sub_0808c588
	add		r3, r0, #0x0
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r0, [r1, #0x0]
	add		r0, r0, r4
	str		r0, [r1, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x20]
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08006e84
	add		r0, r6, #0x0
	mov		r1, #0xe1
	bl		sub_080bbcac
	ldr		r1, [sp, #0x30]
	add		r0, r1, r0
	b		_08006e18
_08006e0e:
	add		r0, r6, #0x0
	mov		r1, #0xe1
	bl		sub_080bbcac
	add		r0, sp
_08006e18:
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r1, r0
	beq		_08006e30
	add		r0, r5, #0x0
	bl		sub_0800bdbc
_08006e30:
	mov		r0, #0x0
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08006db0
	mov		r0, r9
	str		r0, [sp, #0x28]
	mov		r0, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08006e5e
	mov		r1, #0x1
	add		r9, r1
	ldr		r2, [sp, #0x24]
	cmp		r9, r2
	blt		_08006e5e
	mov		r0, #0x0
	mov		r9, r0
_08006e5e:
	mov		r0, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_08006e6e
	b		_08006cd8
_08006e6e:
	mov		r1, #0x1
	neg		r1, r1
	add		r9, r1
	mov		r2, r9
	cmp		r2, #0x0
	blt		_08006e7c
	b		_08006cd8
_08006e7c:
	ldr		r0, [sp, #0x34]
	mov		r9, r0
	b		_08006cd8

.incbin "base.gba", 0x6E82, 0x2
	thumb_func_end sub_08006c80

	thumb_func_start sub_08006e84
sub_08006e84:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	add		r2, r3, #0x0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	add		r1, r1, r4
	str		r1, [r0, #0x0]
	ldr		r3, _08006f28
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	sub		r5, r1, r0
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	add		r1, r1, r2
	str		r1, [r0, #0x0]
	ldr		r2, _08006f2c
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	sub		r6, r1, r0
	ldr		r0, _08006f30
	add		r4, r5, r0
	mov		r12, r2
	cmp		r4, #0x0
	blt		_08006eca
	ldr		r1, _08006f34
	add		r4, r5, r1
	cmp		r4, #0x0
	bgt		_08006eca
	mov		r4, #0x0
_08006eca:
	ldr		r0, _08006f38
	add		r2, r6, r0
	cmp		r2, #0x0
	blt		_08006edc
	ldr		r1, _08006f3c
	add		r2, r6, r1
	cmp		r2, #0x0
	bgt		_08006edc
	mov		r2, #0x0
_08006edc:
	cmp		r4, #0x0
	bne		_08006ee4
	cmp		r2, #0x0
	beq		_08006f1e
_08006ee4:
	ldr		r0, _08006f40
	ldr		r7, [r3, #0x0]
	ldr		r1, [r7, #0x0]
	add		r5, r1, r4
	mov		r1, r12
	ldr		r4, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	add		r6, r1, r2
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	mov		r3, sp
	bl		sub_0808ce48
	cmp		r0, #0x0
	blt		_08006f0a
	ldr		r0, [sp, #0x4]
	sub		r5, r5, r0
	ldr		r0, [sp, #0x8]
	sub		r6, r6, r0
_08006f0a:
	ldr		r1, _08006f44
	ldr		r0, _08006f48
	str		r5, [r7, #0x0]
	str		r5, [r0, #0x0]
	str		r5, [r1, #0x0]
	ldr		r1, _08006f4c
	ldr		r0, _08006f50
	str		r6, [r4, #0x0]
	str		r6, [r0, #0x0]
	str		r6, [r1, #0x0]
_08006f1e:
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6F26, 0x2

_08006f28:	.4byte 0x080c7f94
_08006f2c:	.4byte 0x080c7f98
_08006f30:	.4byte 0xFFA00000
_08006f34:	.4byte 0xFF700000
_08006f38:	.4byte 0xFFB00000
_08006f3c:	.4byte 0xFF900000
_08006f40:	.4byte 0x0200EAA8
_08006f44:	.4byte 0x0200CE28
_08006f48:	.4byte 0x0200CE2C
_08006f4c:	.4byte 0x0200CE3C
_08006f50:	.4byte 0x0200CE40
	thumb_func_end sub_08006e84

	thumb_func_start sub_08006f54
sub_08006f54:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r8, r0
	mov		r9, r1
	mov		r10, r2
	add		r7, r3, #0x0
	bl		sub_080b70cc
	add		r1, r0, #0x0
	ldr		r4, _08007060
	ldr		r5, [r4, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	bl		sub_0808c694
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, r8
	bl		sub_080bdbf0
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	mov		r1, r9
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r5, r2
	mov		r1, r10
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r5, r2
	str		r7, [r0, #0x0]
_08006fa0:
	ldr		r0, [r4, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x14
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	bl		sub_080bbc38
	cmp		r0, #0x0
	bne		_08006fa0
	ldr		r0, _08007064
	bl		sub_080007bc
	ldr		r1, _08007068
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x1
	bne		_08007016
	ldr		r4, _0800706c
	ldr		r5, _08007070
	ldr		r6, _08007074
	mov		r0, #0x0
	mov		r1, #0x9
	bl		sub_0808b0cc
	add		r0, r4, #0x0
	bl		sub_0808b240
	mov		r0, #0x0
	mov		r1, #0xa
	bl		sub_0808b0cc
	add		r0, r5, #0x0
	mov		r1, r8
	mov		r2, r9
	bl		sub_0808b240
	mov		r0, #0x0
	mov		r1, #0xb
	bl		sub_0808b0cc
	add		r0, r6, #0x0
	mov		r1, r10
	add		r2, r7, #0x0
	bl		sub_0808b240
	ldr		r0, _08007078
	ldrh	r0, [r0, #0x0]
	mov		r1, #0x81
	neg		r1, r1
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	orr		r0, r1
	bl		sub_0800132c
	ldr		r0, _08007064
	mov		r1, #0x80
	bl		sub_08000700
_08007016:
	ldr		r1, _08007068
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	bne		_0800704a
	ldr		r2, _0800707c
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x8
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _08007080
	bl		sub_0800045c
	ldr		r1, _08007068
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	bne		_0800704a
	ldr		r0, _08007084
	ldr		r0, [r0, #0x0]
	str		r7, [sp, #0x0]
	mov		r1, r8
	mov		r2, r9
	mov		r3, r10
	bl		sub_0808c670
_0800704a:
	ldr		r1, _08007088
	ldr		r0, _0800708c
	str		r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08007060:	.4byte 0x080c7fc0
_08007064:	.4byte 0x03005918
_08007068:	.4byte 0x0200CDBC
_0800706c:	.4byte 0x080c7f9c @ DEADEND
_08007070:	.4byte 0x080c7fa4 @ @(%s_%d)
_08007074:	.4byte 0x080c7fb0 @ #($%08x,$%08x)
_08007078:	.4byte 0x02000B18
_0800707c:	.4byte 0x04000004
_08007080:	.4byte 0x02000070
_08007084:	.4byte 0x080c7110 @ DEADEND_@(%s_%d)_#($%08x,$%08x)
_08007088:	.4byte 0x0200CDC8
_0800708c:	.4byte sub_08001478
	thumb_func_end sub_08006f54

	thumb_func_start sub_08007090
sub_08007090:
	push	{ r4, lr }
	ldr		r4, _080070a4
	ldr		r0, _080070a8
	bl		sub_08002148
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70A2, 0x2

_080070a4:	.4byte 0x020089C8
_080070a8:	.4byte 0x080c7fc4 @ script_debug_menu0
	push	{ lr }
	cmp		r1, #0x0
	bne		_080070b8
	bl		sub_0800c718
	b		_080070c6
_080070b8:
	ldr		r0, _080070cc
	mov		r1, #0x8d
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080070c6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70CA, 0x2

_080070cc:	.4byte 0x080c7f58 @ a_toda/miscellaneous.cpp
	push	{ r4, r5, lr }
	cmp		r1, #0x1
	beq		_08007118
	cmp		r1, #0x1
	bgt		_080070e0
	cmp		r1, #0x0
	beq		_080070ea
	b		_0800712a
_080070e0:
	cmp		r1, #0x2
	beq		_0800711e
	cmp		r1, #0x3
	beq		_08007124
	b		_0800712a
_080070ea:
	ldr		r5, _08007110
	add		r0, r5, #0x0
	sub		r0, #0x50
	mov		r1, #0xc0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _08007114
	str		r0, [r4, #0xc]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	b		_08007138

_08007110:	.4byte 0x0200DA50
_08007114:	.4byte 0x080e0424

_08007118:
	bl		sub_0800ed24
	b		_08007138
_0800711e:
	bl		sub_0800ddf4
	b		_08007138
_08007124:
	bl		sub_0800eae0
	b		_08007138
_0800712a:
	ldr		r0, _08007140
	mov		r1, #0x87
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007138:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x713E, 0x2

_08007140:	.4byte 0x080c7f58 @ a_toda/miscellaneous.cpp

.incbin "base.gba", 0x7144, 0x4
	thumb_func_end sub_08007090

	thumb_func_start sub_08007148
sub_08007148:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _08007190
	str		r0, [r5, #0xc]
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	add		r0, r5, #0x0
	add		r0, #0x4e
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x4c
	ldrh	r0, [r0, #0x0]
	bl		sub_0800132c
	ldr		r1, _08007194
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	ldr		r0, _08007198
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0800718a
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0800718a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08007190:	.4byte 0x080e048c
_08007194:	.4byte 0x0200DD2C
_08007198:	.4byte 0x080e067c
	thumb_func_end sub_08007148

	thumb_func_start sub_0800719c
sub_0800719c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r2, _080071ec
	bl		sub_0800d280
	ldr		r0, _080071f0
	str		r0, [r4, #0xc]
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	ldrh	r0, [r1, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x4e
	mov		r5, #0x0
	strh	r0, [r2, #0x0]
	strh	r5, [r1, #0x0]
	ldr		r0, _080071f4
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	bl		sub_0800132c
	ldr		r1, _080071f8
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x40
	strh	r5, [r0, #0x0]
	ldr		r0, _080071fc
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_080071ec:	.4byte 0x0200895C
_080071f0:	.4byte 0x080e048c
_080071f4:	.4byte 0x02000B18
_080071f8:	.4byte 0x0200DD2C
_080071fc:	.4byte 0x0200DC30
	thumb_func_end sub_0800719c

	thumb_func_start sub_08007200
sub_08007200:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, [r6, #0x10]
	add		r0, r0, r7
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	bne		_0800721c
	ldr		r0, _08007264
	mov		r1, #0x3a
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800721c:
	ldr		r0, [r6, #0x10]
	add		r0, r0, r7
	ldrb	r5, [r0, #0x0]
	ldr		r0, [r6, #0xc]
	lsl		r4, r5, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	bl		sub_080b5dc4
	mov		r3, #0x0
	str		r3, [r0, #0x10]
	ldr		r0, [r6, #0xc]
	add		r4, r4, r0
	ldrh	r1, [r6, #0x14]
	sub		r1, #0x1
	strh	r1, [r6, #0x14]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0xe
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	mov		r4, #0x14
	ldrsh	r2, [r0, r4]
	ldr		r0, [r6, #0x10]
	add		r0, r0, r2
	strb	r5, [r0, #0x0]
	ldr		r0, [r6, #0x10]
	add		r0, r0, r7
	mov		r2, #0xff
	strb	r2, [r0, #0x0]
	ldr		r0, [r6, #0xc]
	add		r1, r1, r0
	str		r3, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08007264:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_08007200

	thumb_func_start sub_08007268
sub_08007268:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	add		r5, r2, #0x0
	mov		r1, #0x0
	str		r1, [r4, #0x10]
	ldr		r0, _080072b8
	strh	r0, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	ldr		r0, _080072bc
	str		r0, [r4, #0xc]
	ldr		r0, _080072c0
	ldr		r0, [r0, #0x0]
	ldr		r1, [r5, #0x4]
	bl		sub_0808b7cc
	str		r0, [r4, #0x28]
	add		r0, r5, #0x0
	add		r0, #0x12
	bl		sub_08006780
	add		r6, r0, #0x0
	add		r0, r6, #0x4
	str		r0, [r4, #0x24]
	ldrh	r0, [r5, #0x8]
	strh	r0, [r4, #0x18]
	ldrh	r0, [r5, #0xa]
	strh	r0, [r4, #0x1a]
	mov		r0, #0xc
	ldrsh	r1, [r5, r0]
	ldr		r0, _080072c4
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080072c8
	ldrh	r0, [r5, #0xc]
	b		_080072ca

_080072b8:	.4byte 0x00007FFF
_080072bc:	.4byte 0x080e0544
_080072c0:	.4byte 0x0200BF08
_080072c4:	.4byte 0xFFFF8080

_080072c8:
	ldrh	r0, [r6, #0x2]
_080072ca:
	strh	r0, [r4, #0x1c]
	mov		r1, #0xe
	ldrsh	r0, [r5, r1]
	ldr		r1, _080072e0
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	bge		_080072e4
	ldrh	r0, [r5, #0xe]
	b		_080072e6

_080072e0:	.4byte 0xFFFF8080

_080072e4:
	ldrh	r0, [r6, #0x0]
_080072e6:
	mov		r2, #0x0
	strh	r0, [r4, #0x1e]
	mov		r3, #0x1c
	ldrsh	r1, [r4, r3]
	mov		r3, #0x2
	ldrsh	r0, [r6, r3]
	sub		r1, r1, r0
	lsl		r1, r1, #0x5
	ldr		r0, [r4, #0x24]
	add		r0, r0, r1
	str		r0, [r4, #0x24]
	ldrh	r0, [r5, #0x10]
	strh	r0, [r4, #0x20]
	add		r0, r4, #0x0
	add		r0, #0x22
	strb	r2, [r0, #0x0]
	ldr		r0, _08007374
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080074bc
	ldrh	r0, [r4, #0x1c]
	cmp		r0, #0xf
	bhi		_08007330
	mov		r5, #0x1e
	ldrsh	r1, [r4, r5]
	cmp		r1, #0x0
	ble		_08007330
	mov		r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp		r1, r0
	bgt		_08007330
	mov		r3, #0x1c
	ldrsh	r0, [r4, r3]
	add		r0, r0, r1
	cmp		r0, #0x10
	ble		_0800733c
_08007330:
	ldr		r0, _08007378
	mov		r1, #0x5e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800733c:
	mov		r1, #0x1a
	ldrsh	r0, [r4, r1]
	ldr		r1, _0800737c
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	bge		_0800736c
	ldrh	r0, [r4, #0x1c]
	ldrh	r2, [r4, #0x1a]
	add		r0, r0, r2
	strh	r0, [r4, #0x1a]
	mov		r3, #0x1a
	ldrsh	r2, [r4, r3]
	mov		r5, #0x1e
	ldrsh	r3, [r4, r5]
	add		r0, r2, r3
	cmp		r0, #0x10
	ble		_0800736c
	ldr		r0, _08007380
	mov		r5, #0x14
	ldrsh	r1, [r4, r5]
	bl		sub_08000268
_0800736c:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08007374:	.4byte 0x02009E1C
_08007378:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_0800737c:	.4byte 0xFFFF8080
_08007380:	.4byte 0x080c7ff0
	thumb_func_end sub_08007268

	thumb_func_start sub_08007384
sub_08007384:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r0, #0x20
	ldrsh	r2, [r5, r0]
	ldr		r1, _080073a8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080073b0
	ldr		r0, _080073ac
	add		r1, r2, #0x0
	bl		sub_08008df4
	add		r4, r0, #0x0
	b		_080073b2

_080073a8:	.4byte 0xFFFF8080
_080073ac:	.4byte 0x02009E1C

_080073b0:
	add		r4, r5, #0x0
_080073b2:
	mov		r1, #0x1a
	ldrsh	r2, [r4, r1]
	ldr		r1, _080073f0
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080073e8
	mov		r7, #0x1e
	ldrsh	r3, [r5, r7]
	add		r0, r2, r3
	cmp		r0, #0x10
	ble		_080073d6
	ldr		r0, _080073f4
	mov		r7, #0x14
	ldrsh	r1, [r5, r7]
	bl		sub_08000268
_080073d6:
	mov		r1, #0x18
	ldrsh	r0, [r4, r1]
	mov		r2, #0x1a
	ldrsh	r1, [r4, r2]
	mov		r3, #0x1e
	ldrsh	r2, [r5, r3]
	add		r3, r6, #0x0
	bl		sub_0808e8d8
_080073e8:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080073f0:	.4byte 0xFFFF8080
_080073f4:	.4byte 0x080c7ff0
	thumb_func_end sub_08007384

	thumb_func_start sub_080073f8
sub_080073f8:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x24]
	cmp		r0, #0x0
	bne		_08007412
	ldr		r0, _08007430
	mov		r2, #0x14
	ldrsh	r1, [r4, r2]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007412:
	mov		r3, #0x20
	ldrsh	r2, [r4, r3]
	ldr		r1, _08007434
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800743c
	ldr		r0, _08007438
	add		r1, r2, #0x0
	bl		sub_08008df4
	add		r2, r0, #0x0
	b		_0800743e

.incbin "base.gba", 0x742E, 0x2

_08007430:	.4byte 0x080c8020
_08007434:	.4byte 0xFFFF8080
_08007438:	.4byte 0x02009E1C

_0800743c:
	add		r2, r4, #0x0
_0800743e:
	mov		r6, #0x1a
	ldrsh	r5, [r2, r6]
	ldr		r1, _08007480
	eor		r1, r5
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800748c
	ldr		r0, [r4, #0x24]
	ldr		r3, _08007484
	mov		r6, #0x18
	ldrsh	r1, [r2, r6]
	lsl		r1, r1, #0x1
	ldr		r2, _08007488
	add		r1, r1, r2
	mov		r6, #0x0
	ldrsh	r2, [r1, r6]
	add		r2, r2, r5
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r1, r1, #0x4
	add		r1, r1, r3
	mov		r3, #0x1e
	ldrsh	r2, [r4, r3]
	lsl		r2, r2, #0x4
	bl		sub_0808e5ec
	add		r1, r4, #0x0
	add		r1, #0x22
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_080074a8

_08007480:	.4byte 0xFFFF8080
_08007484:	.4byte 0x03000800
_08007488:	.4byte 0x0200CE8C

_0800748c:
	ldr		r0, _080074b0
	mov		r5, #0x0
	ldrsh	r3, [r0, r5]
	cmp		r3, #0x0
	bne		_080074a8
	ldr		r0, _080074b4
	ldr		r0, [r0, #0x0]
	ldr		r1, _080074b8
	mov		r6, #0x14
	ldrsh	r2, [r4, r6]
	str		r3, [sp, #0x0]
	mov		r3, #0x0
	bl		sub_0808c670
_080074a8:
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080074b0:	.4byte 0x0200CDBC
_080074b4:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)
_080074b8:	.4byte 0x080c8004
	thumb_func_end sub_080073f8

	thumb_func_start sub_080074bc
sub_080074bc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, _080074ec
	cmp		r4, r0
	bls		_080074d6
	ldr		r0, _080074f0
	mov		r1, #0x95
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080074d6:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080074f4
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_080074f6

.incbin "base.gba", 0x74EA, 0x2

_080074ec:	.4byte 0x0000012B
_080074f0:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_080074f4:
	mov		r0, #0x0
_080074f6:
	cmp		r0, #0x0
	beq		_08007506
	ldr		r0, _08007564
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007506:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x9f
	ble		_08007518
	ldr		r0, _08007568
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007518:
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	bne		_08007528
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007534
_08007528:
	ldr		r0, _0800756c
	mov		r1, #0x28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007534:
	str		r5, [r6, #0x10]
	strh	r4, [r6, #0x14]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r2, [r5, #0x10]
	add		r2, r2, r0
	ldrh	r0, [r5, #0x14]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x14]
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	ldr		r1, [r5, #0xc]
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7562, 0x2

_08007564:	.4byte 0x080c803c
_08007568:	.4byte 0x080c8054
_0800756c:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_080074bc

	thumb_func_start sub_08007570
sub_08007570:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r9, r0
	mov		r8, r1
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_0800761c
	ldr		r0, _080075c8
	mov		r10, r0
_08007588:
	ldr		r7, [r4, #0x8]
	mov		r1, #0x20
	ldrsh	r2, [r4, r1]
	add		r1, r2, #0x0
	ldr		r0, _080075cc
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08007616
	add		r6, r2, #0x0
	ldr		r1, _080075d0
	cmp		r6, r1
	bls		_080075b0
	mov		r0, r10
	mov		r1, #0x9e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080075b0:
	mov		r2, r9
	ldr		r0, [r2, #0x10]
	add		r0, r0, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080075d4
	ldr		r1, [r2, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	b		_080075d6

.incbin "base.gba", 0x75C6, 0x2

_080075c8:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_080075cc:	.4byte 0xFFFF8080
_080075d0:	.4byte 0x0000012B

_080075d4:
	mov		r5, #0x0
_080075d6:
	cmp		r5, #0x0
	bne		_080075e6
	ldr		r0, _0800767c
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080075e6:
	mov		r0, r8
	cmp		r0, #0x3
	bgt		_080075f4
	mov		r1, #0x18
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x4
	beq		_08007616
_080075f4:
	mov		r2, r8
	cmp		r2, #0x4
	bne		_08007602
	mov		r1, #0x18
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x3
	ble		_08007616
_08007602:
	cmp		r4, #0x0
	beq		_08007616
	ldr		r1, [r4, #0xc]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08007616:
	add		r4, r7, #0x0
	cmp		r4, #0x0
	bne		_08007588
_0800761c:
	mov		r0, r9
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_0800766c
	ldr		r5, _08007680
_08007626:
	ldr		r7, [r4, #0x8]
	mov		r2, #0x20
	ldrsh	r1, [r4, r2]
	eor		r1, r5
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08007666
	mov		r0, r8
	cmp		r0, #0x3
	bgt		_08007644
	mov		r1, #0x18
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x4
	beq		_08007666
_08007644:
	mov		r2, r8
	cmp		r2, #0x4
	bne		_08007652
	mov		r1, #0x18
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x3
	ble		_08007666
_08007652:
	cmp		r4, #0x0
	beq		_08007666
	ldr		r1, [r4, #0xc]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08007666:
	add		r4, r7, #0x0
	cmp		r4, #0x0
	bne		_08007626
_0800766c:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x767A, 0x2

_0800767c:	.4byte 0x080c806c
_08007680:	.4byte 0xFFFF8080
	thumb_func_end sub_08007570

	thumb_func_start sub_08007684
sub_08007684:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	add		r5, r2, #0x0
	mov		r1, #0x0
	str		r1, [r4, #0x10]
	ldr		r0, _080076e8
	strh	r0, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	ldr		r0, _080076ec
	str		r0, [r4, #0xc]
	ldr		r0, _080076f0
	ldr		r0, [r0, #0x0]
	ldr		r1, [r5, #0x4]
	bl		sub_0808b7cc
	str		r0, [r4, #0x28]
	add		r0, r5, #0x0
	add		r0, #0x12
	bl		sub_08006780
	add		r6, r0, #0x0
	add		r0, r6, #0x4
	str		r0, [r4, #0x24]
	ldrh	r0, [r5, #0x8]
	strh	r0, [r4, #0x18]
	ldrh	r0, [r5, #0xa]
	strh	r0, [r4, #0x1a]
	mov		r0, #0xc
	ldrsh	r1, [r5, r0]
	ldr		r3, _080076f4
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	mov		r2, #0x0
	cmp		r0, #0x0
	bge		_080076d4
	ldrh	r2, [r5, #0xc]
_080076d4:
	strh	r2, [r4, #0x1c]
	mov		r0, #0xe
	ldrsh	r1, [r5, r0]
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080076f8
	ldrh	r0, [r5, #0xe]
	b		_080076fc

_080076e8:	.4byte 0x00007FFF
_080076ec:	.4byte 0x080e052c
_080076f0:	.4byte 0x0200BF08
_080076f4:	.4byte 0xFFFF8080

_080076f8:
	ldrh	r0, [r6, #0x0]
	sub		r0, r0, r2
_080076fc:
	strh	r0, [r4, #0x1e]
	ldrh	r0, [r5, #0x10]
	strh	r0, [r4, #0x20]
	ldr		r0, _0800774c
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0800784c
	ldrh	r1, [r4, #0x1c]
	ldr		r0, _08007750
	cmp		r1, r0
	bhi		_08007736
	mov		r2, #0x1e
	ldrsh	r1, [r4, r2]
	cmp		r1, #0x0
	ble		_08007736
	mov		r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp		r1, r0
	bgt		_08007736
	mov		r1, #0x1c
	ldrsh	r0, [r4, r1]
	mov		r2, #0x1e
	ldrsh	r1, [r4, r2]
	add		r0, r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	cmp		r0, r1
	ble		_08007742
_08007736:
	ldr		r0, _08007754
	mov		r1, #0xca
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007742:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x774A, 0x2

_0800774c:	.4byte 0x02009984
_08007750:	.4byte 0x000003FF
_08007754:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_08007684

	thumb_func_start sub_08007758
sub_08007758:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x24]
	cmp		r0, #0x0
	bne		_08007772
	ldr		r0, _08007790
	mov		r2, #0x14
	ldrsh	r1, [r6, r2]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007772:
	mov		r4, #0x20
	ldrsh	r2, [r6, r4]
	ldr		r1, _08007794
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800779c
	ldr		r0, _08007798
	add		r1, r2, #0x0
	bl		sub_08008cf4
	add		r2, r0, #0x0
	b		_0800779e

.incbin "base.gba", 0x778E, 0x2

_08007790:	.4byte 0x080c8080
_08007794:	.4byte 0xFFFF8080
_08007798:	.4byte 0x02009984

_0800779c:
	add		r2, r6, #0x0
_0800779e:
	mov		r0, #0x1a
	ldrsh	r4, [r2, r0]
	ldr		r5, _080077e0
	add		r1, r4, #0x0
	eor		r1, r5
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800781c
	mov		r1, #0x1c
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x5
	ldr		r1, [r6, #0x24]
	add		r7, r1, r0
	mov		r1, #0x18
	ldrsh	r0, [r2, r1]
	lsl		r0, r0, #0x2
	ldr		r1, _080077e4
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	mov		r2, #0x20
	ldrsh	r1, [r6, r2]
	eor		r1, r5
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080077e8
	mov		r1, #0x1a
	ldrsh	r0, [r6, r1]
	add		r0, r4, r0
	lsl		r0, r0, #0x5
	b		_080077ea

.incbin "base.gba", 0x77DE, 0x2

_080077e0:	.4byte 0xFFFF8080
_080077e4:	.4byte 0x0200CE5C

_080077e8:
	lsl		r0, r4, #0x5
_080077ea:
	add		r5, r3, r0
	mov		r2, #0x1e
	ldrsh	r4, [r6, r2]
	lsl		r4, r4, #0x5
	ldr		r0, _08007818
	add		r2, r5, r4
	add		r1, r3, #0x0
	bl		sub_0800ef60
	mov		r0, #0x24
	bl		sub_08000600
	str		r4, [sp, #0x0]
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	add		r3, r5, #0x0
	bl		sub_0800051c
	mov		r1, #0xd
	mov		r2, #0x0
	bl		sub_08000644
	b		_08007838

_08007818:	.4byte 0x0200ACB8

_0800781c:
	ldr		r0, _08007840
	mov		r4, #0x0
	ldrsh	r3, [r0, r4]
	cmp		r3, #0x0
	bne		_08007838
	ldr		r0, _08007844
	ldr		r0, [r0, #0x0]
	ldr		r1, _08007848
	mov		r4, #0x14
	ldrsh	r2, [r6, r4]
	str		r3, [sp, #0x0]
	mov		r3, #0x0
	bl		sub_0808c670
_08007838:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08007840:	.4byte 0x0200CDBC
_08007844:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)
_08007848:	.4byte 0x080c809c
	thumb_func_end sub_08007758

	thumb_func_start sub_0800784c
sub_0800784c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, _0800787c
	cmp		r4, r0
	bls		_08007866
	ldr		r0, _08007880
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007866:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007884
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08007886

.incbin "base.gba", 0x787A, 0x2

_0800787c:	.4byte 0x000001FF
_08007880:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08007884:
	mov		r0, #0x0
_08007886:
	cmp		r0, #0x0
	beq		_08007896
	ldr		r0, _080078f4
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007896:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x9f
	ble		_080078a8
	ldr		r0, _080078f8
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080078a8:
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	bne		_080078b8
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080078c4
_080078b8:
	ldr		r0, _080078fc
	mov		r1, #0x28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080078c4:
	str		r5, [r6, #0x10]
	strh	r4, [r6, #0x14]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r2, [r5, #0x10]
	add		r2, r2, r0
	ldrh	r0, [r5, #0x14]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x14]
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	ldr		r1, [r5, #0xc]
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x78F2, 0x2

_080078f4:	.4byte 0x080c80bc
_080078f8:	.4byte 0x080c80d4
_080078fc:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_0800784c

	thumb_func_start sub_08007900
sub_08007900:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r9, r0
	mov		r8, r1
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_080079ac
	ldr		r0, _08007958
	mov		r10, r0
_08007918:
	ldr		r7, [r4, #0x8]
	mov		r1, #0x20
	ldrsh	r2, [r4, r1]
	add		r1, r2, #0x0
	ldr		r0, _0800795c
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080079a6
	add		r6, r2, #0x0
	ldr		r1, _08007960
	cmp		r6, r1
	bls		_08007940
	mov		r0, r10
	mov		r1, #0xf8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007940:
	mov		r2, r9
	ldr		r0, [r2, #0x10]
	add		r0, r0, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007964
	ldr		r1, [r2, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	b		_08007966

.incbin "base.gba", 0x7956, 0x2

_08007958:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_0800795c:	.4byte 0xFFFF8080
_08007960:	.4byte 0x000001FF

_08007964:
	mov		r5, #0x0
_08007966:
	cmp		r5, #0x0
	bne		_08007976
	ldr		r0, _08007a0c
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007976:
	mov		r0, r8
	cmp		r0, #0x3
	bgt		_08007984
	mov		r1, #0x18
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x4
	beq		_080079a6
_08007984:
	mov		r2, r8
	cmp		r2, #0x4
	bne		_08007992
	mov		r1, #0x18
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x3
	ble		_080079a6
_08007992:
	cmp		r4, #0x0
	beq		_080079a6
	ldr		r1, [r4, #0xc]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_080079a6:
	add		r4, r7, #0x0
	cmp		r4, #0x0
	bne		_08007918
_080079ac:
	mov		r0, r9
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_080079fc
	ldr		r5, _08007a10
_080079b6:
	ldr		r7, [r4, #0x8]
	mov		r2, #0x20
	ldrsh	r1, [r4, r2]
	eor		r1, r5
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_080079f6
	mov		r0, r8
	cmp		r0, #0x3
	bgt		_080079d4
	mov		r1, #0x18
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x4
	beq		_080079f6
_080079d4:
	mov		r2, r8
	cmp		r2, #0x4
	bne		_080079e2
	mov		r1, #0x18
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x3
	ble		_080079f6
_080079e2:
	cmp		r4, #0x0
	beq		_080079f6
	ldr		r1, [r4, #0xc]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_080079f6:
	add		r4, r7, #0x0
	cmp		r4, #0x0
	bne		_080079b6
_080079fc:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A0A, 0x2

_08007a0c:	.4byte 0x080c80ec
_08007a10:	.4byte 0xFFFF8080
	thumb_func_end sub_08007900

	thumb_func_start sub_08007a14
sub_08007a14:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	add		r5, r0, #0x0
	mov		r9, r1
	mov		r8, r2
	mov		r1, #0x0
	str		r1, [r5, #0x10]
	ldr		r0, _08007a90
	strh	r0, [r5, #0x14]
	str		r1, [r5, #0x4]
	str		r1, [r5, #0x8]
	str		r1, [r5, #0x0]
	ldr		r0, _08007a94
	str		r0, [r5, #0xc]
	ldr		r0, _08007a98
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x4]
	bl		sub_0808b7cc
	str		r0, [r5, #0x20]
	mov		r0, r8
	add		r0, #0xa
	bl		sub_08006780
	add		r6, r0, #0x0
	ldrb	r4, [r6, #0x6]
	lsl		r4, r4, #0x2
	add		r4, #0xc
	ldrb	r0, [r6, #0x7]
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	add		r0, r4, #0x0
	bl		sub_0808afb8
	add		r1, r0, #0x0
	str		r1, [r5, #0x1c]
	ldr		r3, _08007a9c
	add		r0, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08000a2c
	ldr		r0, [r5, #0x1c]
	add		r1, r6, #0x0
	bl		sub_0808c0b0
	mov		r1, r8
	ldrh	r0, [r1, #0x8]
	strh	r0, [r5, #0x18]
	ldr		r0, _08007aa0
	mov		r1, r9
	add		r2, r5, #0x0
	bl		sub_08007aa4
	add		r0, r5, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08007a90:	.4byte 0x00007FFF
_08007a94:	.4byte 0x080e0514
_08007a98:	.4byte 0x0200BF08
_08007a9c:	.4byte 0x80000003
_08007aa0:	.4byte 0x020092EC
	thumb_func_end sub_08007a14

	thumb_func_start sub_08007aa4
sub_08007aa4:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, _08007ad4
	cmp		r4, r0
	bls		_08007ac0
	ldr		r0, _08007ad8
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007ac0:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007adc
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08007ade

_08007ad4:	.4byte 0x000003FF
_08007ad8:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08007adc:
	mov		r0, #0x0
_08007ade:
	cmp		r0, #0x0
	beq		_08007aee
	ldr		r0, _08007b4c
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007aee:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x9f
	ble		_08007b00
	ldr		r0, _08007b50
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007b00:
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	bne		_08007b10
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007b1c
_08007b10:
	ldr		r0, _08007b54
	mov		r1, #0x28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007b1c:
	str		r5, [r6, #0x10]
	strh	r4, [r6, #0x14]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r2, [r5, #0x10]
	add		r2, r2, r0
	ldrh	r0, [r5, #0x14]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x14]
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	ldr		r1, [r5, #0xc]
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7B4A, 0x2

_08007b4c:	.4byte 0x080c8100
_08007b50:	.4byte 0x080c8118
_08007b54:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_08007aa4

	thumb_func_start sub_08007b58
sub_08007b58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r8, r1
	mov		r1, #0x0
	str		r1, [r5, #0x10]
	ldr		r0, _08007bbc
	strh	r0, [r5, #0x14]
	str		r1, [r5, #0x4]
	str		r1, [r5, #0x8]
	str		r1, [r5, #0x0]
	ldr		r0, _08007bc0
	str		r0, [r5, #0xc]
	ldrh	r0, [r2, #0x4]
	strh	r0, [r5, #0x18]
	ldrh	r0, [r2, #0x6]
	strh	r0, [r5, #0x1a]
	ldrh	r0, [r2, #0x8]
	strh	r0, [r5, #0x1c]
	ldrh	r0, [r2, #0xa]
	strh	r0, [r5, #0x1e]
	ldr		r0, _08007bc4
	mov		r1, r8
	add		r2, r5, #0x0
	bl		sub_08007d60
	ldr		r6, _08007bc8
	mov		r0, #0x1a
	ldrsh	r4, [r5, r0]
	ldr		r0, _08007bcc
	cmp		r4, r0
	bls		_08007ba6
	ldr		r0, _08007bd0
	ldr		r1, _08007bd4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007ba6:
	ldr		r0, [r6, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007bd8
	ldr		r1, [r6, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08007bda

.incbin "base.gba", 0x7BBA, 0x2

_08007bbc:	.4byte 0x00007FFF
_08007bc0:	.4byte 0x080e04fc
_08007bc4:	.4byte 0x02008C54
_08007bc8:	.4byte 0x020092EC
_08007bcc:	.4byte 0x000003FF
_08007bd0:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_08007bd4:	.4byte 0x0000013D

_08007bd8:
	mov		r0, #0x0
_08007bda:
	cmp		r0, #0x0
	bne		_08007bea
	ldr		r0, _08007c18
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007bea:
	ldr		r4, _08007c1c
	mov		r1, #0x1c
	ldrsh	r6, [r5, r1]
	ldr		r0, _08007c20
	cmp		r6, r0
	bls		_08007c02
	ldr		r0, _08007c24
	mov		r1, #0xf8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007c02:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007c28
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_08007c2a

.incbin "base.gba", 0x7C16, 0x2

_08007c18:	.4byte 0x080c8130
_08007c1c:	.4byte 0x02009984
_08007c20:	.4byte 0x000001FF
_08007c24:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08007c28:
	mov		r4, #0x0
_08007c2a:
	cmp		r4, #0x0
	bne		_08007c3a
	ldr		r0, _08007c68
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007c3a:
	add		r7, r4, #0x0
	ldr		r4, _08007c6c
	mov		r2, #0x1e
	ldrsh	r6, [r5, r2]
	ldr		r0, _08007c70
	cmp		r6, r0
	bls		_08007c54
	ldr		r0, _08007c74
	mov		r1, #0x9e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007c54:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007c78
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_08007c7a

_08007c68:	.4byte 0x080c80ec
_08007c6c:	.4byte 0x02009E1C
_08007c70:	.4byte 0x0000012B
_08007c74:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08007c78:
	mov		r4, #0x0
_08007c7a:
	cmp		r4, #0x0
	bne		_08007c8a
	ldr		r0, _08007d20
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007c8a:
	mov		r3, #0x1a
	ldrsh	r0, [r4, r3]
	ldr		r1, _08007d24
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	blt		_08007cc2
	ldr		r6, _08007d28
	mov		r1, #0x2e
	ldrsh	r0, [r6, r1]
	cmp		r0, #0xf
	ble		_08007cb6
	ldr		r0, _08007d2c
	mov		r2, #0x1e
	ldrsh	r1, [r5, r2]
	mov		r3, #0x14
	ldrsh	r2, [r5, r3]
	mov		r3, #0x1
	neg		r3, r3
	bl		sub_08000268
_08007cb6:
	ldrh	r0, [r6, #0x2e]
	strh	r0, [r4, #0x1a]
	ldrh	r0, [r4, #0x1e]
	ldrh	r1, [r6, #0x2e]
	add		r0, r0, r1
	strh	r0, [r6, #0x2e]
_08007cc2:
	ldrh	r0, [r4, #0x1a]
	strh	r0, [r5, #0x20]
	mov		r2, #0x1a
	ldrsh	r1, [r7, r2]
	ldr		r0, _08007d24
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08007d38
	ldrh	r1, [r5, #0x18]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08007d4e
	ldr		r4, _08007d28
	mov		r3, #0x2c
	ldrsh	r1, [r4, r3]
	ldr		r0, _08007d30
	cmp		r1, r0
	ble		_08007cfc
	ldr		r0, _08007d34
	mov		r2, #0x1c
	ldrsh	r1, [r5, r2]
	mov		r3, #0x1
	neg		r3, r3
	mov		r2, r8
	bl		sub_08000268
_08007cfc:
	ldrh	r0, [r4, #0x2c]
	strh	r0, [r7, #0x1a]
	ldrh	r1, [r7, #0x1e]
	ldrh	r3, [r4, #0x2c]
	add		r1, r1, r3
	strh	r1, [r4, #0x2c]
	mov		r2, #0xea
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	add		r0, r3, #0x0
	sub		r0, r0, r1
	add		r2, #0x2
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	b		_08007d4e

_08007d20:	.4byte 0x080c806c
_08007d24:	.4byte 0xFFFF8080
_08007d28:	.4byte 0x0200BF14
_08007d2c:	.4byte 0x080c7ff0
_08007d30:	.4byte 0x000003FF
_08007d34:	.4byte 0x080c8144

_08007d38:
	ldrh	r1, [r5, #0x18]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08007d4e
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r5, #0x18]
_08007d4e:
	ldrh	r0, [r7, #0x1a]
	strh	r0, [r5, #0x22]
	add		r0, r5, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7D5E, 0x2
	thumb_func_end sub_08007b58

	thumb_func_start sub_08007d60
sub_08007d60:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, _08007d90
	cmp		r4, r0
	bls		_08007d7c
	ldr		r0, _08007d94
	mov		r1, #0xbb
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007d7c:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007d98
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08007d9a

_08007d90:	.4byte 0x000003FF
_08007d94:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08007d98:
	mov		r0, #0x0
_08007d9a:
	cmp		r0, #0x0
	beq		_08007daa
	ldr		r0, _08007e08
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007daa:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x9f
	ble		_08007dbc
	ldr		r0, _08007e0c
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007dbc:
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	bne		_08007dcc
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007dd8
_08007dcc:
	ldr		r0, _08007e10
	mov		r1, #0x28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007dd8:
	str		r5, [r6, #0x10]
	strh	r4, [r6, #0x14]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r2, [r5, #0x10]
	add		r2, r2, r0
	ldrh	r0, [r5, #0x14]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x14]
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	ldr		r1, [r5, #0xc]
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7E06, 0x2

_08007e08:	.4byte 0x080c8158
_08007e0c:	.4byte 0x080c8170
_08007e10:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_08007d60

	thumb_func_start sub_08007e14
sub_08007e14:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r4, r0, #0x0
	mov		r8, r1
	add		r5, r2, #0x0
	mov		r1, #0x0
	str		r1, [r4, #0x10]
	ldr		r0, _08007e80
	strh	r0, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	ldr		r0, _08007e84
	str		r0, [r4, #0xc]
	ldr		r0, _08007e88
	ldr		r0, [r0, #0x0]
	ldr		r1, [r5, #0x4]
	bl		sub_0808b7cc
	str		r0, [r4, #0x2c]
	add		r0, r5, #0x0
	add		r0, #0x10
	bl		sub_08006780
	add		r6, r4, #0x0
	add		r6, #0x18
	str		r0, [r4, #0x18]
	ldrh	r1, [r5, #0x8]
	strh	r1, [r4, #0x28]
	ldrh	r1, [r5, #0xe]
	ldrh	r0, [r0, #0x8]
	eor		r1, r0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	mov		r0, #0xa
	ldrsh	r2, [r5, r0]
	mov		r0, #0xc
	ldrsh	r3, [r5, r0]
	add		r0, r6, #0x0
	bl		sub_0808cf10
	ldr		r0, _08007e8c
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_08007f04
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7E7E, 0x2

_08007e80:	.4byte 0x00007FFF
_08007e84:	.4byte 0x080e04e4
_08007e88:	.4byte 0x0200BF08
_08007e8c:	.4byte 0x02008AD4
	thumb_func_end sub_08007e14

	thumb_func_start sub_08007e90
sub_08007e90:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r4, r0, #0x0
	mov		r8, r1
	add		r5, r2, #0x0
	mov		r1, #0x0
	str		r1, [r4, #0x10]
	ldr		r0, _08007ef4
	strh	r0, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	ldr		r0, _08007ef8
	str		r0, [r4, #0xc]
	ldr		r6, _08007efc
	ldr		r0, [r6, #0x0]
	ldr		r1, [r5, #0x8]
	bl		sub_0808b7cc
	str		r0, [r4, #0x2c]
	ldrh	r0, [r5, #0xc]
	strh	r0, [r4, #0x28]
	ldr		r0, [r6, #0x0]
	ldr		r1, [r5, #0x4]
	bl		sub_0808b7cc
	add		r6, r4, #0x0
	add		r6, #0x18
	str		r0, [r4, #0x18]
	mov		r2, #0x8
	ldrsh	r1, [r0, r2]
	mov		r0, #0xe
	ldrsh	r2, [r5, r0]
	mov		r0, #0x10
	ldrsh	r3, [r5, r0]
	add		r0, r6, #0x0
	bl		sub_0808cf10
	ldr		r0, _08007f00
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_08007f04
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08007ef4:	.4byte 0x00007FFF
_08007ef8:	.4byte 0x080e04e4
_08007efc:	.4byte 0x0200BF08
_08007f00:	.4byte 0x02008AD4
	thumb_func_end sub_08007e90

	thumb_func_start sub_08007f04
sub_08007f04:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	cmp		r4, #0x63
	bls		_08007f1c
	ldr		r0, _08007f30
	ldr		r1, _08007f34
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007f1c:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007f38
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08007f3a

_08007f30:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_08007f34:	.4byte 0x000001B1

_08007f38:
	mov		r0, #0x0
_08007f3a:
	cmp		r0, #0x0
	beq		_08007f4a
	ldr		r0, _08007fa8
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007f4a:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x3f
	ble		_08007f5c
	ldr		r0, _08007fac
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007f5c:
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	bne		_08007f6c
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08007f78
_08007f6c:
	ldr		r0, _08007fb0
	mov		r1, #0x28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08007f78:
	str		r5, [r6, #0x10]
	strh	r4, [r6, #0x14]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r2, [r5, #0x10]
	add		r2, r2, r0
	ldrh	r0, [r5, #0x14]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x14]
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	ldr		r1, [r5, #0xc]
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7FA6, 0x2

_08007fa8:	.4byte 0x080c81ac
_08007fac:	.4byte 0x080c81c4
_08007fb0:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_08007f04

	thumb_func_start sub_08007fb4
sub_08007fb4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	mov		r8, r0
	ldr		r2, [sp, #0x0]
	add		r2, #0x18
	str		r2, [sp, #0x4]
	ldr		r0, _08008098
	ldr		r2, _0800809c
	mov		r10, r2
	add		r7, r1, #0x0
	ldr		r1, _080080a0
	mov		r9, r1
_08007fd8:
	mov		r1, r9
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08007fe4
	neg		r1, r2
_08007fe4:
	asr		r5, r1, #0x10
	cmp		r2, #0x0
	bge		_08007fec
	neg		r5, r5
_08007fec:
	str		r5, [r7, #0x0]
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	add		r2, r1, #0x0
	cmp		r1, #0x0
	bge		_08007ffa
	neg		r2, r1
_08007ffa:
	asr		r4, r2, #0x10
	cmp		r1, #0x0
	bge		_08008002
	neg		r4, r4
_08008002:
	str		r4, [r7, #0x14]
	add		r6, r0, #0x0
	ldr		r0, [sp, #0x4]
	add		r0, r8
	ldrb	r3, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_0808cc34
	ldr		r1, [sp, #0x0]
	add		r1, #0x18
	str		r1, [sp, #0x8]
	cmp		r0, #0x0
	beq		_0800802a
	mov		r0, r8
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08001238
_0800802a:
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r2, #0x4
	add		r10, r2
	add		r7, #0x4
	add		r9, r2
	mov		r1, #0x1
	add		r8, r1
	mov		r2, r8
	cmp		r2, #0x3
	ble		_08007fd8
	ldr		r0, [sp, #0x0]
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_080080c4
	mov		r1, #0x54
	mov		r10, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r9, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	add		r7, r0, #0x0
	ldr		r1, _080080a4
	add		r5, r1, #0x0
_0800805c:
	mov		r0, #0x28
	ldrsh	r2, [r4, r0]
	mov		r8, r2
	mov		r1, r10
	mov		r0, r8
	mul		r0, r1
	ldr		r2, _08008098
	add		r6, r0, r2
	add		r2, r4, #0x0
	add		r2, #0x18
	ldrh	r1, [r4, #0x1c]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_080080b8
	ldr		r0, [sp, #0x8]
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800808c
	add		r0, r1, #0x0
	and		r0, r7
	cmp		r0, #0x0
	beq		_080080a8
_0800808c:
	add		r0, r2, #0x0
	add		r1, r6, #0x0
	bl		sub_0808cf4c
	b		_080080b8

.incbin "base.gba", 0x8096, 0x2

_08008098:	.4byte 0x0200E9AC
_0800809c:	.4byte 0x0200CE38
_080080a0:	.4byte 0x0200CE24
_080080a4:	.4byte 0xfffffdff

_080080a8:
	mov		r1, #0x2
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x0
	ble		_080080b8
	add		r0, r2, #0x0
	add		r1, r6, #0x0
	bl		sub_0808cf6c
_080080b8:
	ldrh	r0, [r4, #0x1c]
	and		r0, r5
	strh	r0, [r4, #0x1c]
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_0800805c
_080080c4:
	mov		r0, #0x0
	ldr		r2, [sp, #0x0]
	str		r0, [r2, #0x18]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80DA, 0x2
	thumb_func_end sub_08007fb4

	thumb_func_start sub_080080dc
sub_080080dc:
	push	{ r4, r5, r6, lr }
	mov		r6, r10
	mov		r5, r9
	mov		r4, r8
	push	{ r4, r5, r6 }
	add		r4, r0, #0x0
	mov		r10, r1
	mov		r9, r2
	bl		sub_08009050
	ldr		r0, _0800813c
	str		r0, [r4, #0xc]
	ldr		r6, _08008140
	ldr		r0, [r6, #0x0]
	mov		r2, r9
	ldr		r1, [r2, #0x8]
	bl		sub_0808b7cc
	str		r0, [r4, #0x2c]
	mov		r0, #0x0
	mov		r8, r0
	ldr		r5, _08008144
	strh	r5, [r4, #0x28]
	ldr		r0, [r6, #0x0]
	mov		r2, r9
	ldr		r1, [r2, #0x4]
	bl		sub_0808b7cc
	str		r0, [r4, #0x18]
	mov		r0, r8
	strh	r0, [r4, #0x1c]
	strh	r5, [r4, #0x24]
	strh	r5, [r4, #0x22]
	strh	r5, [r4, #0x20]
	strh	r5, [r4, #0x1e]
	ldr		r0, _08008148
	mov		r1, r10
	add		r2, r4, #0x0
	bl		sub_0800814c
	add		r0, r4, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800813c:	.4byte 0x080e04cc
_08008140:	.4byte 0x0200BF08
_08008144:	.4byte 0x00008080
_08008148:	.4byte 0x02008A88
	thumb_func_end sub_080080dc

	thumb_func_start sub_0800814c
sub_0800814c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	cmp		r4, #0x13
	bls		_08008166
	ldr		r0, _0800817c
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008166:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008180
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08008182

.incbin "base.gba", 0x817A, 0x2

_0800817c:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08008180:
	mov		r0, #0x0
_08008182:
	cmp		r0, #0x0
	beq		_08008192
	ldr		r0, _080081f0
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008192:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x7
	ble		_080081a4
	ldr		r0, _080081f4
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080081a4:
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	bne		_080081b4
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080081c0
_080081b4:
	ldr		r0, _080081f8
	mov		r1, #0x28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080081c0:
	str		r5, [r6, #0x10]
	strh	r4, [r6, #0x14]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r2, [r5, #0x10]
	add		r2, r2, r0
	ldrh	r0, [r5, #0x14]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x14]
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	ldr		r1, [r5, #0xc]
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x81EE, 0x2

_080081f0:	.4byte 0x080c81f0
_080081f4:	.4byte 0x080c8208
_080081f8:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_0800814c

	thumb_func_start sub_080081fc
sub_080081fc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r5, #0x0
	add		r6, #0x1c
	ldrh	r1, [r5, #0x2c]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08008210
	b		_0800837c
_08008210:
	add		r0, r6, #0x0
	bl		sub_0808b3d4
	add		r0, r6, #0x0
	bl		sub_0808b4ac
	add		r4, r0, #0x0
	mov		r1, #0x18
	ldrsh	r0, [r5, r1]
	cmp		r4, r0
	bne		_08008228
	b		_0800837c
_08008228:
	strh	r4, [r5, #0x18]
	mov		r2, #0x32
	ldrsh	r1, [r5, r2]
	ldr		r0, [r6, #0x4]
	lsl		r1, r1, #0x2
	add		r0, #0x7
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x2
	bne		_080082a0
	ldr		r5, _08008268
	ldr		r0, _0800826c
	cmp		r4, r0
	bls		_08008254
	ldr		r0, _08008270
	mov		r1, #0x9e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008254:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008274
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	b		_08008276

_08008268:	.4byte 0x02009E1C
_0800826c:	.4byte 0x0000012B
_08008270:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08008274:
	mov		r5, #0x0
_08008276:
	cmp		r5, #0x0
	bne		_08008286
	ldr		r0, _08008298
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008286:
	add		r0, r5, #0x0
	bl		sub_080073f8
	ldr		r1, _0800829c
	add		r0, r5, #0x0
	bl		sub_08007384
	b		_0800837c

.incbin "base.gba", 0x8296, 0x2

_08008298:	.4byte 0x080c806c
_0800829c:	.4byte 0x80808080

_080082a0:
	cmp		r0, #0x4
	bne		_080082f8
	ldr		r5, _080082cc
	ldr		r0, _080082d0
	cmp		r4, r0
	bls		_080082b8
	ldr		r0, _080082d4
	mov		r1, #0xf8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080082b8:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080082d8
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	b		_080082da

_080082cc:	.4byte 0x02009984
_080082d0:	.4byte 0x000001FF
_080082d4:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_080082d8:
	mov		r5, #0x0
_080082da:
	cmp		r5, #0x0
	bne		_080082ea
	ldr		r0, _080082f4
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080082ea:
	add		r0, r5, #0x0
	bl		sub_08007758
	b		_0800837c

.incbin "base.gba", 0x82F2, 0x2

_080082f4:	.4byte 0x080c80ec

_080082f8:
	cmp		r0, #0x8
	bne		_08008350
	ldr		r5, _08008324
	cmp		r4, #0x63
	bls		_08008310
	ldr		r0, _08008328
	mov		r1, #0xdd
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008310:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_0800832c
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	b		_0800832e

_08008324:	.4byte 0x02008AD4
_08008328:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_0800832c:
	mov		r5, #0x0
_0800832e:
	cmp		r5, #0x0
	bne		_0800833e
	ldr		r0, _0800834c
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800833e:
	ldrh	r1, [r5, #0x1c]
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r0, r2, #0x0
	orr		r0, r1
	strh	r0, [r5, #0x1c]
	b		_0800837c

_0800834c:	.4byte 0x080c81dc

_08008350:
	cmp		r0, #0x10
	bne		_08008370
	ldr		r0, _0800836c
	add		r1, r4, #0x0
	cmp		r4, #0x0
	bge		_0800835e
	neg		r1, r4
_0800835e:
	bl		sub_0800bcd0
	mvn		r1, r4
	lsr		r1, r1, #0x1f
	add		r0, #0x5c
	strb	r1, [r0, #0x0]
	b		_0800837c

_0800836c:	.4byte 0x0200A26C

_08008370:
	ldr		r0, _08008384
	ldr		r1, _08008388
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800837c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8382, 0x2

_08008384:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_08008388:	.4byte 0x00000236
	thumb_func_end sub_080081fc

	thumb_func_start sub_0800838c
sub_0800838c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	cmp		r4, #0x63
	bls		_080083a4
	ldr		r0, _080083b8
	ldr		r1, _080083bc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080083a4:
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080083c0
	ldr		r1, [r5, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_080083c2

_080083b8:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_080083bc:	.4byte 0x00000242

_080083c0:
	mov		r0, #0x0
_080083c2:
	cmp		r0, #0x0
	beq		_080083d2
	ldr		r0, _08008430
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080083d2:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0xf
	ble		_080083e4
	ldr		r0, _08008434
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080083e4:
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	bne		_080083f4
	ldr		r0, [r5, #0x10]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008400
_080083f4:
	ldr		r0, _08008438
	mov		r1, #0x28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008400:
	str		r5, [r6, #0x10]
	strh	r4, [r6, #0x14]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r2, [r5, #0x10]
	add		r2, r2, r0
	ldrh	r0, [r5, #0x14]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x14]
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	ldr		r1, [r5, #0xc]
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x842E, 0x2

_08008430:	.4byte 0x080c8234
_08008434:	.4byte 0x080c824c
_08008438:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_0800838c

	thumb_func_start sub_0800843c
sub_0800843c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r8, r1
	ldr		r7, [r0, #0x4]
	cmp		r7, #0x0
	bne		_08008452
	b		_08008662
_08008452:
	ldr		r0, [r7, #0x8]
	str		r0, [sp, #0x0]
	ldr		r1, [r7, #0x1c]
	str		r1, [sp, #0x4]
	mov		r2, #0x0
	str		r2, [sp, #0x8]
	ldrb	r0, [r1, #0x2]
	cmp		r2, r0
	blt		_08008466
	b		_0800865a
_08008466:
	ldr		r1, _080084b8
	mov		r10, r1
	ldr		r6, [sp, #0x4]
_0800846c:
	mov		r0, #0x7
	ldrsb	r0, [r6, r0]
	add		r1, r0, #0x0
	cmp		r0, #0x1
	bne		_08008478
	b		_08008648
_08008478:
	cmp		r0, #0x2
	bne		_08008538
	ldrb	r1, [r6, #0x4]
	ldrb	r0, [r6, #0x5]
	mov		r2, #0x1f
	and		r0, r2
	lsl		r0, r0, #0x8
	orr		r0, r1
	lsl		r0, r0, #0x13
	ldr		r4, _080084bc
	asr		r5, r0, #0x13
	ldr		r0, _080084c0
	mov		r9, r0
	ldr		r1, _080084c4
	cmp		r5, r1
	bls		_080084a4
	mov		r0, r10
	mov		r1, #0x9e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080084a4:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080084c8
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_080084ca

_080084b8:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_080084bc:	.4byte 0x02009E1C
_080084c0:	.4byte 0x080c8278
_080084c4:	.4byte 0x0000012B

_080084c8:
	mov		r4, #0x0
_080084ca:
	cmp		r4, #0x0
	bne		_080084da
	ldr		r0, _0800851c
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080084da:
	add		r3, r4, #0x0
	mov		r0, #0x20
	ldrsh	r2, [r3, r0]
	add		r1, r2, #0x0
	ldr		r0, _08008520
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_080084f0
	b		_080085f8
_080084f0:
	mov		r1, r9
	ldr		r4, [r1, #0x0]
	add		r5, r2, #0x0
	ldr		r2, _08008524
	cmp		r5, r2
	bls		_08008508
	mov		r0, r10
	mov		r1, #0x9e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008508:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008528
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_0800852a

_0800851c:	.4byte 0x080c806c
_08008520:	.4byte 0xFFFF8080
_08008524:	.4byte 0x0000012B

_08008528:
	mov		r4, #0x0
_0800852a:
	cmp		r4, #0x0
	bne		_080085f6
	ldr		r0, _08008534
	b		_080085ec

.incbin "base.gba", 0x8532, 0x2

_08008534:	.4byte 0x080c806c

_08008538:
	cmp		r0, #0x4
	bne		_0800861c
	ldrb	r1, [r6, #0x4]
	ldrb	r0, [r6, #0x5]
	mov		r2, #0x1f
	and		r0, r2
	lsl		r0, r0, #0x8
	orr		r0, r1
	lsl		r0, r0, #0x13
	ldr		r4, _08008578
	asr		r5, r0, #0x13
	ldr		r0, _0800857c
	mov		r9, r0
	ldr		r1, _08008580
	cmp		r5, r1
	bls		_08008564
	mov		r0, r10
	mov		r1, #0xf8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008564:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008584
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_08008586

_08008578:	.4byte 0x02009984
_0800857c:	.4byte 0x080c827c
_08008580:	.4byte 0x000001FF

_08008584:
	mov		r4, #0x0
_08008586:
	cmp		r4, #0x0
	bne		_08008596
	ldr		r0, _080085d8
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008596:
	add		r3, r4, #0x0
	mov		r0, #0x20
	ldrsh	r2, [r3, r0]
	add		r1, r2, #0x0
	ldr		r0, _080085dc
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080085f8
	mov		r1, r9
	ldr		r4, [r1, #0x0]
	add		r5, r2, #0x0
	ldr		r2, _080085e0
	cmp		r5, r2
	bls		_080085c2
	mov		r0, r10
	mov		r1, #0xf8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080085c2:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080085e4
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_080085e6

.incbin "base.gba", 0x85D6, 0x2

_080085d8:	.4byte 0x080c80ec
_080085dc:	.4byte 0xFFFF8080
_080085e0:	.4byte 0x000001FF

_080085e4:
	mov		r4, #0x0
_080085e6:
	cmp		r4, #0x0
	bne		_080085f6
	ldr		r0, _08008618
_080085ec:
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080085f6:
	add		r3, r4, #0x0
_080085f8:
	mov		r0, r8
	cmp		r0, #0x3
	bgt		_08008606
	mov		r1, #0x18
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x4
	beq		_08008648
_08008606:
	mov		r2, r8
	cmp		r2, #0x4
	bne		_08008632
	mov		r1, #0x18
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x3
	ble		_08008648
	b		_08008632

.incbin "base.gba", 0x8616, 0x2

_08008618:	.4byte 0x080c80ec

_0800861c:
	cmp		r0, #0x10
	bne		_08008628
	mov		r2, r8
	cmp		r2, #0x3
	ble		_08008648
	b		_08008632
_08008628:
	cmp		r1, #0x8
	bne		_08008632
	mov		r0, r8
	cmp		r0, #0x4
	beq		_08008648
_08008632:
	cmp		r7, #0x0
	beq		_0800865a
	ldr		r1, [r7, #0xc]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
	b		_0800865a
_08008648:
	add		r6, #0x4
	ldr		r0, [sp, #0x8]
	add		r0, #0x1
	str		r0, [sp, #0x8]
	ldr		r1, [sp, #0x4]
	ldrb	r1, [r1, #0x2]
	cmp		r0, r1
	bge		_0800865a
	b		_0800846c
_0800865a:
	ldr		r7, [sp, #0x0]
	cmp		r7, #0x0
	beq		_08008662
	b		_08008452
_08008662:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8672, 0x2
	push	{ r4, r5, r6, lr }
	ldr		r1, _080087a8
	mov		r5, #0xa6
	lsl		r5, r5, #0x2
	add		r6, r1, r5
	add		r0, r1, #0x0
	add		r0, #0x18
	str		r0, [r1, #0xc]
	str		r6, [r1, #0x10]
	mov		r4, #0x0
	strh	r4, [r1, #0x14]
	str		r4, [r1, #0x4]
	str		r4, [r1, #0x8]
	str		r4, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0xff
	mov		r2, #0x96
	lsl		r2, r2, #0x1
	bl		sub_0808c7e4
	ldr		r1, _080087ac
	add		r6, r1, r5
	add		r0, r1, #0x0
	add		r0, #0x18
	str		r0, [r1, #0xc]
	str		r6, [r1, #0x10]
	strh	r4, [r1, #0x14]
	str		r4, [r1, #0x4]
	str		r4, [r1, #0x8]
	str		r4, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	bl		sub_0808c7e4
	ldr		r1, _080087b0
	add		r6, r1, r5
	add		r0, r1, #0x0
	add		r0, #0x18
	str		r0, [r1, #0xc]
	str		r6, [r1, #0x10]
	strh	r4, [r1, #0x14]
	str		r4, [r1, #0x4]
	str		r4, [r1, #0x8]
	str		r4, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	bl		sub_0808c7e4
	ldr		r1, _080087b4
	add		r5, r1, r5
	add		r0, r1, #0x0
	add		r0, #0x18
	str		r0, [r1, #0xc]
	str		r5, [r1, #0x10]
	strh	r4, [r1, #0x14]
	str		r4, [r1, #0x4]
	str		r4, [r1, #0x8]
	str		r4, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	bl		sub_0808c7e4
	ldr		r6, _080087b8
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r5, r6, r0
	add		r0, r6, #0x0
	add		r0, #0x1c
	str		r0, [r6, #0xc]
	str		r5, [r6, #0x10]
	strh	r4, [r6, #0x14]
	str		r4, [r6, #0x4]
	str		r4, [r6, #0x8]
	str		r4, [r6, #0x0]
	mov		r1, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x64
	bl		sub_0808c7e4
	str		r4, [r6, #0x18]
	ldr		r1, _080087bc
	add		r5, r1, #0x0
	add		r5, #0x38
	add		r0, r1, #0x0
	add		r0, #0x18
	str		r0, [r1, #0xc]
	str		r5, [r1, #0x10]
	strh	r4, [r1, #0x14]
	str		r4, [r1, #0x4]
	str		r4, [r1, #0x8]
	str		r4, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x20
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x14
	bl		sub_0808c7e4
	ldr		r1, _080087c0
	add		r5, r1, #0x0
	add		r5, #0x58
	add		r0, r1, #0x0
	add		r0, #0x18
	str		r0, [r1, #0xc]
	str		r5, [r1, #0x10]
	strh	r4, [r1, #0x14]
	str		r4, [r1, #0x4]
	str		r4, [r1, #0x8]
	str		r4, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x40
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x64
	bl		sub_0808c7e4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080087a8:	.4byte 0x02009E1C
_080087ac:	.4byte 0x02009984
_080087b0:	.4byte 0x020092EC
_080087b4:	.4byte 0x02008C54
_080087b8:	.4byte 0x02008AD4
_080087bc:	.4byte 0x02008A88
_080087c0:	.4byte 0x020089CC
	thumb_func_end sub_0800843c

	thumb_func_start sub_080087c4
sub_080087c4:
	push	{ r4, r5, lr }
	sub		sp, #0x28
	ldr		r0, _08008828
	add		r5, r0, #0x0
	add		r5, #0xc
	mov		r4, #0x7
_080087d0:
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_0800082c
	add		r5, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080087d0
	ldr		r0, _0800882c
	mov		r1, sp
	bl		sub_08007fb4
	ldr		r0, _08008830
	bl		sub_0808d90c
	bl		sub_080014f4
	ldr		r4, _08008834
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_08000500
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08008808
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_08008808:
	ldr		r0, _08008828
	add		r5, r0, #0x0
	add		r5, #0x6c
	mov		r4, #0x7
_08008810:
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_0800082c
	add		r5, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08008810
	add		sp, #0x28
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08008828:	.4byte 0x03005918
_0800882c:	.4byte 0x02008AD4
_08008830:	.4byte 0x0200BF14
_08008834:	.4byte 0x02000A14
	thumb_func_end sub_080087c4

	thumb_func_start sub_08008838
sub_08008838:
	push	{ r4, lr }
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_0800884c
_08008840:
	add		r0, r4, #0x0
	bl		sub_080081fc
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_08008840
_0800884c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8852, 0x2
	thumb_func_end sub_08008838

	thumb_func_start sub_08008854
sub_08008854:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r5, #0x63
	bls		_0800886a
	ldr		r0, _08008880
	ldr		r1, _08008884
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800886a:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008888
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_0800888a

.incbin "base.gba", 0x887E, 0x2

_08008880:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_08008884:	.4byte 0x0000024B

_08008888:
	mov		r4, #0x0
_0800888a:
	cmp		r4, #0x0
	bne		_0800889a
	ldr		r0, _080088a4
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800889a:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x88A2, 0x2

_080088a4:	.4byte 0x080c8264
	thumb_func_end sub_08008854

	thumb_func_start sub_080088a8
sub_080088a8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x58
	add		r0, #0x18
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x10]
	mov		r1, #0x0
	strh	r1, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	mov		r2, #0x40
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x64
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080088a8

	thumb_func_start sub_080088d8
sub_080088d8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _080088f8
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_080088fc
	mov		r2, #0x14
	ldrsh	r1, [r4, r2]
	bl		sub_08007200
	mov		r0, #0x0
	str		r0, [r4, #0x10]
	b		_08008908

.incbin "base.gba", 0x88F6, 0x2

_080088f8:	.4byte 0x080e055c

_080088fc:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08008908
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_08008908:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08008916
	add		r0, r4, #0x0
	bl		sub_0808afac
_08008916:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080088d8

	thumb_func_start sub_0800891c
sub_0800891c:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r4, r0, #0x0
	mov		r8, r1
	add		r6, r2, #0x0
	mov		r1, #0x0
	str		r1, [r4, #0x10]
	ldr		r0, _0800896c
	strh	r0, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	ldr		r0, _08008970
	str		r0, [r4, #0xc]
	add		r5, r4, #0x0
	add		r5, #0x1c
	add		r0, r5, #0x0
	bl		sub_0808b374
	ldr		r0, _08008974
	strh	r0, [r4, #0x18]
	add		r6, #0x4
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x2
	bl		sub_0808b380
	ldr		r0, _08008978
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_0800838c
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x896A, 0x2

_0800896c:	.4byte 0x00007FFF
_08008970:	.4byte 0x080e04b4
_08008974:	.4byte 0x00008080
_08008978:	.4byte 0x020089CC
	thumb_func_end sub_0800891c

	thumb_func_start sub_0800897c
sub_0800897c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r5, #0x13
	bls		_08008992
	ldr		r0, _080089a8
	ldr		r1, _080089ac
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008992:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080089b0
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_080089b2

.incbin "base.gba", 0x89A6, 0x2

_080089a8:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_080089ac:	.4byte 0x00000205

_080089b0:
	mov		r4, #0x0
_080089b2:
	cmp		r4, #0x0
	bne		_080089c2
	ldr		r0, _080089cc
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080089c2:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x89CA, 0x2

_080089cc:	.4byte 0x080c8220
	thumb_func_end sub_0800897c

	thumb_func_start sub_080089d0
sub_080089d0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x38
	add		r0, #0x18
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x10]
	mov		r1, #0x0
	strh	r1, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	mov		r2, #0x20
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x14
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8A00, 0x4
	thumb_func_end sub_080089d0

	thumb_func_start sub_08008a04
sub_08008a04:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r5, #0x63
	bls		_08008a1c
	ldr		r0, _08008a30
	mov		r1, #0xdd
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008a1c:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008a34
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_08008a36

_08008a30:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08008a34:
	mov		r4, #0x0
_08008a36:
	cmp		r4, #0x0
	bne		_08008a46
	ldr		r0, _08008a50
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008a46:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8A4E, 0x2

_08008a50:	.4byte 0x080c81dc
	thumb_func_end sub_08008a04

	thumb_func_start sub_08008a54
sub_08008a54:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r6, r4, r0
	add		r0, r4, #0x0
	add		r0, #0x1c
	str		r0, [r4, #0xc]
	str		r6, [r4, #0x10]
	mov		r5, #0x0
	strh	r5, [r4, #0x14]
	str		r5, [r4, #0x4]
	str		r5, [r4, #0x8]
	str		r5, [r4, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r1, #0x0
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0xff
	mov		r2, #0x64
	bl		sub_0808c7e4
	str		r5, [r4, #0x18]
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8A8E, 0x2
	thumb_func_end sub_08008a54

	thumb_func_start sub_08008a90
sub_08008a90:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _08008ac8
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x18]
	bl		sub_0808af08
	cmp		r0, #0x0
	beq		_08008aae
	ldr		r0, [r4, #0x18]
	cmp		r0, #0x0
	beq		_08008aae
	bl		sub_0808afd0
_08008aae:
	mov		r5, #0x0
	str		r5, [r4, #0x18]
	ldr		r0, _08008acc
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_08008ad0
	mov		r2, #0x14
	ldrsh	r1, [r4, r2]
	bl		sub_08007200
	str		r5, [r4, #0x10]
	b		_08008adc

_08008ac8:	.4byte 0x080e04e4
_08008acc:	.4byte 0x080e055c

_08008ad0:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08008adc
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_08008adc:
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_08008aea
	add		r0, r4, #0x0
	bl		sub_0808afac
_08008aea:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08008a90

	thumb_func_start sub_08008af0
sub_08008af0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r6, [sp, #0x0+0x10]
	mov		r0, #0x0
	str		r0, [r4, #0x10]
	ldr		r5, _08008b24
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	str		r0, [r4, #0x0]
	ldr		r0, _08008b28
	str		r0, [r4, #0xc]
	strh	r5, [r4, #0x14]
	strh	r1, [r4, #0x28]
	ldr		r0, _08008b2c
	str		r0, [r4, #0x2c]
	add		r0, r4, #0x0
	add		r0, #0x18
	str		r6, [r4, #0x18]
	mov		r5, #0x8
	ldrsh	r1, [r6, r5]
	bl		sub_0808cf10
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08008b24:	.4byte 0x00007FFF
_08008b28:	.4byte 0x080e04e4
_08008b2c:	.4byte 0x080c81a4 @ DIRECT
	thumb_func_end sub_08008af0

	thumb_func_start sub_08008b30
sub_08008b30:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08008b5c
	cmp		r5, r0
	bls		_08008b48
	ldr		r0, _08008b60
	ldr		r1, _08008b64
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008b48:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008b68
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_08008b6a

_08008b5c:	.4byte 0x000003FF
_08008b60:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_08008b64:	.4byte 0x0000017F

_08008b68:
	mov		r4, #0x0
_08008b6a:
	cmp		r4, #0x0
	bne		_08008b7a
	ldr		r0, _08008b84
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008b7a:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8B82, 0x2

_08008b84:	.4byte 0x080c818c
	thumb_func_end sub_08008b30

	thumb_func_start sub_08008b88
sub_08008b88:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0xa6
	lsl		r0, r0, #0x2
	add		r5, r4, r0
	add		r0, r4, #0x0
	add		r0, #0x18
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x10]
	mov		r1, #0x0
	strh	r1, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08008b88

	thumb_func_start sub_08008bc0
sub_08008bc0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08008be0
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_08008be4
	mov		r2, #0x14
	ldrsh	r1, [r4, r2]
	bl		sub_08007200
	mov		r0, #0x0
	str		r0, [r4, #0x10]
	b		_08008bf0

.incbin "base.gba", 0x8BDE, 0x2

_08008be0:	.4byte 0x080e055c

_08008be4:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08008bf0
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_08008bf0:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08008bfe
	add		r0, r4, #0x0
	bl		sub_0808afac
_08008bfe:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08008bc0

	thumb_func_start sub_08008c04
sub_08008c04:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08008c30
	cmp		r5, r0
	bls		_08008c1c
	ldr		r0, _08008c34
	ldr		r1, _08008c38
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008c1c:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008c3c
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_08008c3e

_08008c30:	.4byte 0x000003FF
_08008c34:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_08008c38:	.4byte 0x0000013D

_08008c3c:
	mov		r4, #0x0
_08008c3e:
	cmp		r4, #0x0
	bne		_08008c4e
	ldr		r0, _08008c58
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008c4e:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C56, 0x2

_08008c58:	.4byte 0x080c8130
	thumb_func_end sub_08008c04

	thumb_func_start sub_08008c5c
sub_08008c5c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0xa6
	lsl		r0, r0, #0x2
	add		r5, r4, r0
	add		r0, r4, #0x0
	add		r0, #0x18
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x10]
	mov		r1, #0x0
	strh	r1, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08008c5c

	thumb_func_start sub_08008c94
sub_08008c94:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08008ccc
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x1c]
	bl		sub_0808af08
	cmp		r0, #0x0
	beq		_08008cb2
	ldr		r0, [r4, #0x1c]
	cmp		r0, #0x0
	beq		_08008cb2
	bl		sub_0808afd0
_08008cb2:
	ldr		r0, _08008cd0
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_08008cd4
	mov		r2, #0x14
	ldrsh	r1, [r4, r2]
	bl		sub_08007200
	mov		r0, #0x0
	str		r0, [r4, #0x10]
	b		_08008ce0

.incbin "base.gba", 0x8CCA, 0x2

_08008ccc:	.4byte 0x080e0514
_08008cd0:	.4byte 0x080e055c

_08008cd4:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08008ce0
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_08008ce0:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08008cee
	add		r0, r4, #0x0
	bl		sub_0808afac
_08008cee:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08008c94

	thumb_func_start sub_08008cf4
sub_08008cf4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08008d20
	cmp		r5, r0
	bls		_08008d0c
	ldr		r0, _08008d24
	mov		r1, #0xf8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008d0c:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008d28
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_08008d2a

_08008d20:	.4byte 0x000001FF
_08008d24:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08008d28:
	mov		r4, #0x0
_08008d2a:
	cmp		r4, #0x0
	bne		_08008d3a
	ldr		r0, _08008d44
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008d3a:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8D42, 0x2

_08008d44:	.4byte 0x080c80ec
	thumb_func_end sub_08008cf4

	thumb_func_start sub_08008d48
sub_08008d48:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0xa6
	lsl		r0, r0, #0x2
	add		r5, r4, r0
	add		r0, r4, #0x0
	add		r0, #0x18
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x10]
	mov		r1, #0x0
	strh	r1, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08008d48

	thumb_func_start sub_08008d80
sub_08008d80:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x24]
	bl		sub_0808af08
	cmp		r0, #0x0
	beq		_08008d98
	ldr		r0, [r4, #0x24]
	cmp		r0, #0x0
	beq		_08008d98
	bl		sub_0808afd0
_08008d98:
	mov		r0, #0x0
	str		r0, [r4, #0x24]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8DA2, 0x52
	thumb_func_end sub_08008d80

	thumb_func_start sub_08008df4
sub_08008df4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08008e20
	cmp		r5, r0
	bls		_08008e0c
	ldr		r0, _08008e24
	mov		r1, #0x9e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008e0c:
	ldr		r0, [r4, #0x10]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008e28
	ldr		r1, [r4, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	b		_08008e2a

_08008e20:	.4byte 0x0000012B
_08008e24:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp

_08008e28:
	mov		r4, #0x0
_08008e2a:
	cmp		r4, #0x0
	bne		_08008e3a
	ldr		r0, _08008e44
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008e3a:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8E42, 0x2

_08008e44:	.4byte 0x080c806c
	thumb_func_end sub_08008df4

	thumb_func_start sub_08008e48
sub_08008e48:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0xa6
	lsl		r0, r0, #0x2
	add		r5, r4, r0
	add		r0, r4, #0x0
	add		r0, #0x18
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x10]
	mov		r1, #0x0
	strh	r1, [r4, #0x14]
	str		r1, [r4, #0x4]
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x96
	lsl		r2, r2, #0x1
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08008e48

	thumb_func_start sub_08008e80
sub_08008e80:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r0, #0x22
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08008e98
	add		r0, r4, #0x0
	bl		sub_080073f8
_08008e98:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08007384
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8EA6, 0x76
	thumb_func_end sub_08008e80

	thumb_func_start sub_08008f1c
sub_08008f1c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	b		_08008f38
_08008f22:
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	beq		_08008f38
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08008f38:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bgt		_08008f22
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08008f1c

	thumb_func_start sub_08008f44
sub_08008f44:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x10]
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008f5c
	ldr		r1, [r2, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08008f5e
_08008f5c:
	mov		r0, #0x0
_08008f5e:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8F62, 0x2
	thumb_func_end sub_08008f44

	thumb_func_start sub_08008f64
sub_08008f64:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	bne		_08008f76
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08008f82
_08008f76:
	ldr		r0, _08008f9c
	mov		r1, #0x31
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008f82:
	mov		r0, #0x0
	str		r0, [r4, #0x10]
	ldr		r0, _08008fa0
	strh	r0, [r4, #0x14]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08008f9c:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
_08008fa0:	.4byte 0x00007FFF
	thumb_func_end sub_08008f64

	thumb_func_start sub_08008fa4
sub_08008fa4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	ldr		r0, [r5, #0x10]
	cmp		r0, #0x0
	bne		_08008fbc
	ldr		r0, [r4, #0x10]
	add		r0, r0, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_08008fc8
_08008fbc:
	ldr		r0, _08008ff8
	mov		r1, #0x28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08008fc8:
	str		r4, [r5, #0x10]
	strh	r6, [r5, #0x14]
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x10
	ldr		r2, [r4, #0x10]
	add		r2, r2, r0
	ldrh	r0, [r4, #0x14]
	add		r1, r0, #0x1
	strh	r1, [r4, #0x14]
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	ldr		r1, [r4, #0xc]
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	str		r5, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	add		r0, r5, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08008ff8:	.4byte 0x080c7fd8 @ a_toda/idcontrol.cpp
	thumb_func_end sub_08008fa4

	thumb_func_start sub_08008ffc
sub_08008ffc:
	str		r2, [r0, #0xc]
	str		r1, [r0, #0x10]
	mov		r1, #0x0
	strh	r1, [r0, #0x14]
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x8]
	str		r1, [r0, #0x0]
	bx		lr
	thumb_func_end sub_08008ffc

	thumb_func_start sub_0800900c
sub_0800900c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _0800902c
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_08009030
	mov		r2, #0x14
	ldrsh	r1, [r4, r2]
	bl		sub_08007200
	mov		r0, #0x0
	str		r0, [r4, #0x10]
	b		_0800903c

.incbin "base.gba", 0x902A, 0x2

_0800902c:	.4byte 0x080e055c

_08009030:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0800903c
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_0800903c:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0800904a
	add		r0, r4, #0x0
	bl		sub_0808afac
_0800904a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800900c

	thumb_func_start sub_08009050
sub_08009050:
	ldr		r1, _08009064
	str		r1, [r0, #0xc]
	mov		r2, #0x0
	str		r2, [r0, #0x10]
	ldr		r1, _08009068
	strh	r1, [r0, #0x14]
	str		r2, [r0, #0x4]
	str		r2, [r0, #0x8]
	str		r2, [r0, #0x0]
	bx		lr

_08009064:	.4byte 0x080e055c
_08009068:	.4byte 0x00007FFF
	thumb_func_end sub_08009050

	thumb_func_start sub_0800906c
sub_0800906c:
	push	{ lr }
	add		r2, r0, #0x0
	cmp		r1, #0x0
	beq		_08009080
	ldrh	r1, [r2, #0x1c]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r3, #0x0
	orr		r0, r1
	b		_08009086
_08009080:
	ldrh	r1, [r2, #0x1c]
	ldr		r0, _0800908c
	and		r0, r1
_08009086:
	strh	r0, [r2, #0x1c]
	pop		{ r0 }
	bx		r0

_0800908c:	.4byte 0xfffffeff

.incbin "base.gba", 0x9090, 0x10
	thumb_func_end sub_0800906c

	thumb_func_start sub_080090a0
sub_080090a0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08009050
	ldr		r0, _080090b4
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_080090b4:	.4byte 0x080e04e4

.incbin "base.gba", 0x90B8, 0x8
	thumb_func_end sub_080090a0

	thumb_func_start sub_080090c0
sub_080090c0:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r2, #0x0
	add		r4, r3, #0x0
	ldr		r0, _0800916c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080090da
	ldr		r0, _08009170
	add		r1, r4, #0x0
	bl		sub_0808c670
_080090da:
	mov		r0, #0x1
	bl		sub_080014c0
	ldr		r0, _08009174
	mov		r1, #0x11
	bl		sub_08000700
	ldr		r0, _08009178
	bl		sub_0800ed58
	ldr		r5, _0800917c
	add		r0, r5, #0x0
	bl		sub_0800ef28
	ldr		r0, _08009180
	mov		r1, #0x0
	bl		sub_0800843c
	ldr		r0, _08009184
	mov		r1, #0x0
	bl		sub_08007570
	ldr		r0, _08009188
	mov		r1, #0x0
	bl		sub_08007900
	ldr		r0, _0800918c
	bl		sub_08008f1c
	ldr		r0, _08009190
	bl		sub_08008f1c
	mov		r0, #0x0
	mov		r1, #0x19
	mov		r2, #0x0
	add		r3, r4, #0x0
	bl		sub_08009458
	ldr		r4, _08009194
	ldr		r3, _08009198
	ldr		r2, _0800919c
	ldr		r1, _080091a0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	bl		sub_0808d2d8
	add		r0, r5, #0x0
	mov		r1, #0x1
	ldr		r2, _080091a4
	bl		sub_080b7c30
	mov		r4, #0x0
	lsl		r5, r6, #0x2
_0800914a:
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001238
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0800914a
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	add		r0, r7, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800916c:	.4byte 0x0200CDBC
_08009170:	.4byte 0x080c8300
_08009174:	.4byte 0x03005918
_08009178:	.4byte 0x0200AA18
_0800917c:	.4byte 0x0200ACB8
_08009180:	.4byte 0x020089CC
_08009184:	.4byte 0x02009E1C
_08009188:	.4byte 0x02009984
_0800918c:	.4byte 0x02008AD4
_08009190:	.4byte 0x02008A88
_08009194:	.4byte 0x0200EB1C
_08009198:	.4byte 0x0200EB1E
_0800919c:	.4byte 0x0200EB20
_080091a0:	.4byte 0x0200EB22
_080091a4:	.4byte 0x000002FF
	thumb_func_end sub_080090c0

	thumb_func_start sub_080091a8
sub_080091a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	str		r0, [sp, #0x0]
	mov		r10, r2
	add		r7, r3, #0x0
	ldr		r0, _08009304
	mov		r1, #0x1
	strb	r1, [r0, #0x1a]
	ldr		r0, _08009308
	strb	r1, [r0, #0x1A]
	mov		r0, #0x1
	bl		sub_080014c0
	ldr		r0, _0800930c
	mov		r1, #0x15
	bl		sub_08000700
	ldr		r0, _08009310
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	orr		r0, r1
	bl		sub_0800132c
	ldr		r0, _08009314
	add		r5, r0, #0x0
	add		r5, #0x10
	mov		r4, #0x1e
_080091e6:
	add		r0, r5, #0x0
	bl		sub_080b78cc
	add		r5, #0x10
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080091e6
	ldr		r0, _08009318
	bl		sub_08008f1c
	ldr		r5, _0800930c
	add		r0, r5, #0x0
	mov		r1, #0x13
	bl		sub_08000700
	ldr		r0, _0800931c
	bl		sub_0808d878
	ldr		r0, _08009320
	mov		r9, r0
	mov		r1, #0x4
	bl		sub_0800843c
	ldr		r1, _08009324
	mov		r8, r1
	mov		r0, r8
	mov		r1, #0x4
	bl		sub_08007570
	ldr		r6, _08009328
	add		r0, r6, #0x0
	mov		r1, #0x4
	bl		sub_08007900
	ldr		r0, _0800932c
	bl		sub_08008f1c
	ldr		r0, _08009330
	bl		sub_08008f1c
	ldr		r0, _08009334
	bl		sub_08008f1c
	ldr		r0, _08009338
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	bl		sub_0808e534
	add		r0, r5, #0x0
	mov		r1, #0x11
	bl		sub_08000700
	ldr		r0, _0800933c
	bl		sub_0800ed58
	ldr		r5, _08009340
	add		r0, r5, #0x0
	bl		sub_0800ef28
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_0800843c
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_08007570
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_08007900
	ldr		r0, _08009344
	bl		sub_08008f1c
	ldr		r0, _08009348
	bl		sub_08008f1c
	mov		r0, #0x0
	mov		r1, #0x19
	mov		r2, #0x0
	add		r3, r7, #0x0
	bl		sub_08009458
	ldr		r3, _0800934c
	ldr		r2, _08009350
	ldr		r1, _08009354
	ldr		r0, _08009358
	strh	r4, [r0, #0x0]
	strh	r4, [r1, #0x0]
	strh	r4, [r2, #0x0]
	strh	r4, [r3, #0x0]
	bl		sub_0808d2d8
	add		r0, r5, #0x0
	mov		r1, #0x1
	ldr		r2, _0800935c
	bl		sub_080b7c30
	mov		r4, #0x0
	mov		r0, r10
	lsl		r5, r0, #0x2
_080092b0:
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001238
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_080092b0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r2, #0x0
	add		r1, r2, #0x0
	bl		sub_0808ea38
	bl		sub_08001794
	ldr		r0, _08009360
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080092f0
	ldr		r0, _08009364
	ldr		r1, _08009368
	ldr		r2, [r1, #0x0]
	add		r1, r7, #0x0
	bl		sub_0808c670
_080092f0:
	ldr		r1, [sp, #0x0]
	add		r0, r1, r5
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08009304:	.4byte 0x0200CDE4
_08009308:	.4byte 0x0200CE00
_0800930c:	.4byte 0x03005918
_08009310:	.4byte 0x02000B18
_08009314:	.4byte 0x0200DA40
_08009318:	.4byte 0x0200A604
_0800931c:	.4byte 0x0200BF14
_08009320:	.4byte 0x020089CC
_08009324:	.4byte 0x02009E1C
_08009328:	.4byte 0x02009984
_0800932c:	.4byte 0x020092EC
_08009330:	.4byte 0x02008C54
_08009334:	.4byte 0x0200A26C
_08009338:	.4byte 0x0200EB24
_0800933c:	.4byte 0x0200AA18
_08009340:	.4byte 0x0200ACB8
_08009344:	.4byte 0x02008AD4
_08009348:	.4byte 0x02008A88
_0800934c:	.4byte 0x0200EB1C
_08009350:	.4byte 0x0200EB1E
_08009354:	.4byte 0x0200EB20
_08009358:	.4byte 0x0200EB22
_0800935c:	.4byte 0x000002FF
_08009360:	.4byte 0x0200CDBC
_08009364:	.4byte 0x080c832c
_08009368:	.4byte 0x0200D9CC
	thumb_func_end sub_080091a8

	thumb_func_start sub_0800936c
sub_0800936c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r5, r2, #0x0
	add		r1, r3, #0x0
	ldr		r0, _080093cc
	bl		sub_08008a04
	mov		r1, #0x28
	ldrsh	r4, [r0, r1]
	ldr		r1, _080093d0
	lsl		r2, r4, #0x4
	add		r2, r2, r1
	mov		r1, #0x1
	str		r1, [r2, #0x0]
	strh	r4, [r2, #0x4]
	mov		r3, #0x1e
	ldrsh	r1, [r0, r3]
	ldr		r3, _080093d4
	add		r1, r1, r3
	lsl		r1, r1, #0x3
	strh	r1, [r2, #0x6]
	mov		r7, #0x20
	ldrsh	r1, [r0, r7]
	add		r1, r1, r3
	lsl		r1, r1, #0x3
	strh	r1, [r2, #0x8]
	mov		r7, #0x22
	ldrsh	r1, [r0, r7]
	add		r1, r1, r3
	lsl		r1, r1, #0x3
	strh	r1, [r2, #0xa]
	mov		r1, #0x24
	ldrsh	r0, [r0, r1]
	add		r0, r0, r3
	lsl		r0, r0, #0x3
	strh	r0, [r2, #0xc]
	mov		r0, #0x54
	mul		r0, r4
	ldr		r1, _080093d8
	add		r0, r0, r1
	str		r2, [r0, #0x18]
	lsl		r5, r5, #0x2
	add		r6, r6, r5
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x93CA, 0x2

_080093cc:	.4byte 0x02008AD4
_080093d0:	.4byte 0x0200A228
_080093d4:	.4byte 0xFFFFFC00
_080093d8:	.4byte 0x0200E9AC
	thumb_func_end sub_0800936c

	thumb_func_start sub_080093dc
sub_080093dc:
	push	{ r4, lr }
	ldr		r4, _08009440
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xf8
	and		r0, r1
	strb	r0, [r4, #0x0]
	ldr		r0, _08009444
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080093fa
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r4, #0x0]
_080093fa:
	ldr		r0, _08009448
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800940c
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x6
	orr		r0, r1
	strb	r0, [r4, #0x0]
_0800940c:
	ldr		r4, _0800944c
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xfc
	and		r0, r1
	strb	r0, [r4, #0x0]
	ldr		r0, _08009450
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08009428
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r4, #0x0]
_08009428:
	ldr		r0, _08009454
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800943a
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r4, #0x0]
_0800943a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08009440:	.4byte 0x0200DD29
_08009444:	.4byte 0x00000FF4
_08009448:	.4byte 0x00000FF5
_0800944c:	.4byte 0x0200DD28
_08009450:	.4byte 0x00000FF2
_08009454:	.4byte 0x00000FF3
	thumb_func_end sub_080093dc

	thumb_func_start sub_08009458
sub_08009458:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	cmp		r5, #0x39
	bhi		_0800946c
	ldr		r1, _08009468
	lsl		r0, r5, #0x2
	b		_0800948a

_08009468:	.4byte 0x080c83d0

_0800946c:
	ldr		r0, _08009498
	cmp		r5, r0
	bls		_080094a8
	ldr		r0, _0800949c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r4, #0xc0
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	cmp		r5, r0
	bcs		_080094a8
	ldr		r1, _080094a0
	ldr		r4, _080094a4
	add		r0, r5, r4
	lsl		r0, r0, #0x2
_0800948a:
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080bbc80
	b		_08009506

_08009498:	.4byte 0x0000017F
_0800949c:	.4byte 0x080d0868
_080094a0:	.4byte 0x080d07d4
_080094a4:	.4byte 0xFFFFFE80

_080094a8:
	ldr		r0, _080094b8
	cmp		r5, r0
	beq		_080094bc
	add		r0, #0x1
	cmp		r5, r0
	beq		_080094e8
	add		r0, r6, #0x0
	b		_08009506

_080094b8:	.4byte 0x00000F82

_080094bc:
	ldr		r0, _080094d8
	add		r3, r3, r0
	ldr		r0, _080094dc
	lsl		r1, r3, #0x2
	add		r0, r1, r0
	ldr		r2, [r0, #0x0]
	ldr		r3, _080094e0
	ldr		r0, [r3, #0x8]
	str		r0, [r2, #0x0]
	ldr		r0, _080094e4
	add		r1, r1, r0
	ldr		r0, [r3, #0x4]
	str		r0, [r1, #0x0]
	b		_08009504

_080094d8:	.4byte 0xFFFFF000
_080094dc:	.4byte 0x0200D0E8
_080094e0:	.4byte 0x0200BEFC
_080094e4:	.4byte 0x0200A1E0

_080094e8:
	ldr		r1, _0800950c
	add		r3, r3, r1
	ldr		r1, _08009510
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r2, _08009514
	mov		r3, #0x2
	ldrsh	r1, [r2, r3]
	mov		r4, #0x4
	ldrsh	r2, [r2, r4]
	ldr		r3, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_080bbc7c
_08009504:
	mov		r0, #0x0
_08009506:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800950c:	.4byte 0xFFFFE000
_08009510:	.4byte 0x080c83b0
_08009514:	.4byte 0x0200BEFC
	thumb_func_end sub_08009458

	thumb_func_start sub_08009518
sub_08009518:
	ldr		r1, _08009524
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x9522, 0x2

_08009524:	.4byte 0x0200A1E0
	thumb_func_end sub_08009518

	thumb_func_start sub_08009528
sub_08009528:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0800954c
	bl		sub_08008854
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009548
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08009548:
	pop		{ r0 }
	bx		r0

_0800954c:	.4byte 0x020089CC
	thumb_func_end sub_08009528

	thumb_func_start sub_08009550
sub_08009550:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08009574
	bl		sub_08008a04
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009570
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08009570:
	pop		{ r0 }
	bx		r0

_08009574:	.4byte 0x02008AD4
	thumb_func_end sub_08009550

	thumb_func_start sub_08009578
sub_08009578:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0800959c
	bl		sub_08008b30
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009598
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08009598:
	pop		{ r0 }
	bx		r0

_0800959c:	.4byte 0x02008C54
	thumb_func_end sub_08009578

	thumb_func_start sub_080095a0
sub_080095a0:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _080095c4
	bl		sub_08008c04
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_080095c0
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_080095c0:
	pop		{ r0 }
	bx		r0

_080095c4:	.4byte 0x020092EC
	thumb_func_end sub_080095a0

	thumb_func_start sub_080095c8
sub_080095c8:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _080095ec
	bl		sub_08008cf4
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_080095e8
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_080095e8:
	pop		{ r0 }
	bx		r0

_080095ec:	.4byte 0x02009984
	thumb_func_end sub_080095c8

	thumb_func_start sub_080095f0
sub_080095f0:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08009614
	bl		sub_08008df4
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009610
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08009610:
	pop		{ r0 }
	bx		r0

_08009614:	.4byte 0x02009E1C
	thumb_func_end sub_080095f0

	thumb_func_start sub_08009618
sub_08009618:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08009634
	bl		sub_08008a04
	ldrh	r2, [r0, #0x1c]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r1, r3, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x1c]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9632, 0x2

_08009634:	.4byte 0x02008AD4
	thumb_func_end sub_08009618

	thumb_func_start sub_08009638
sub_08009638:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0800964c
	bl		sub_08008cf4
	bl		sub_08007758
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x964A, 0x2

_0800964c:	.4byte 0x02009984
	thumb_func_end sub_08009638

	thumb_func_start sub_08009650
sub_08009650:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _08009678
	add		r1, r2, #0x0
	bl		sub_08008df4
	mov		r1, #0x1
	and		r4, r1
	eor		r4, r1
	add		r1, r0, #0x0
	add		r1, #0x22
	strb	r4, [r1, #0x0]
	ldr		r1, _0800967c
	bl		sub_08008e80
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9676, 0x2

_08009678:	.4byte 0x02009E1C
_0800967c:	.4byte 0x80808080
	thumb_func_end sub_08009650

	thumb_func_start sub_08009680
sub_08009680:
	push	{ lr }
	add		r3, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x14
	mov		r2, #0x0
	bl		sub_08009458
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9692, 0x42
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x2c
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08007268
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x96F6, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x2c
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08007684
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x971A, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x30
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08007e14
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x973E, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x30
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08007e90
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9762, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x30
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_080080dc
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9786, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x24
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08007a14
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x97AA, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x24
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08007b58
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x97CE, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x2c
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08007268
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x97F2, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x2c
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08007684
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9816, 0x2
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r10, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r7, _08009874
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080098b0
	ldr		r6, _08009878
	ldr		r1, _0800987c
	mov		r9, r1
	ldr		r2, _08009880
	mov		r8, r2
_08009844:
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	add		r0, r6, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_08009884
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	add		r0, r6, #0x0
	bl		sub_08008df4
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_080098a0
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
	b		_080098a0

_08009874:	.4byte 0xFFFF8080
_08009878:	.4byte 0x02009E1C
_0800987c:	.4byte 0x0200CDBC
_08009880:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)

_08009884:
	mov		r0, r9
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	cmp		r1, #0x0
	bne		_080098a0
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	mov		r3, #0x0
	ldrsh	r2, [r4, r3]
	str		r1, [sp, #0x0]
	ldr		r1, _080098c8
	mov		r3, #0x0
	bl		sub_0808c670
_080098a0:
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009844
_080098b0:
	mov		r1, r10
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x98C6, 0x2

_080098c8:	.4byte 0x080c8280
	thumb_func_end sub_08009680

	thumb_func_start sub_080098cc
sub_080098cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r10, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r7, _08009928
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08009964
	ldr		r6, _0800992c
	ldr		r1, _08009930
	mov		r9, r1
	ldr		r2, _08009934
	mov		r8, r2
_080098f8:
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	add		r0, r6, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_08009938
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	add		r0, r6, #0x0
	bl		sub_08008cf4
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009954
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
	b		_08009954

_08009928:	.4byte 0xFFFF8080
_0800992c:	.4byte 0x02009984
_08009930:	.4byte 0x0200CDBC
_08009934:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)

_08009938:
	mov		r0, r9
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	cmp		r1, #0x0
	bne		_08009954
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	mov		r3, #0x0
	ldrsh	r2, [r4, r3]
	str		r1, [sp, #0x0]
	ldr		r1, _0800997c
	mov		r3, #0x0
	bl		sub_0808c670
_08009954:
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_080098f8
_08009964:
	mov		r1, r10
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x997A, 0x2

_0800997c:	.4byte 0x080c8294
	thumb_func_end sub_080098cc

	thumb_func_start sub_08009980
sub_08009980:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r10, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r7, _080099dc
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08009a18
	ldr		r6, _080099e0
	ldr		r1, _080099e4
	mov		r9, r1
	ldr		r2, _080099e8
	mov		r8, r2
_080099ac:
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	add		r0, r6, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_080099ec
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	add		r0, r6, #0x0
	bl		sub_08008c04
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009a08
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
	b		_08009a08

_080099dc:	.4byte 0xFFFF8080
_080099e0:	.4byte 0x020092EC
_080099e4:	.4byte 0x0200CDBC
_080099e8:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)

_080099ec:
	mov		r0, r9
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	cmp		r1, #0x0
	bne		_08009a08
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	mov		r3, #0x0
	ldrsh	r2, [r4, r3]
	str		r1, [sp, #0x0]
	ldr		r1, _08009a30
	mov		r3, #0x0
	bl		sub_0808c670
_08009a08:
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_080099ac
_08009a18:
	mov		r1, r10
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9A2E, 0x2

_08009a30:	.4byte 0x080c82a8
	thumb_func_end sub_08009980

	thumb_func_start sub_08009a34
sub_08009a34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r10, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r7, _08009a90
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08009acc
	ldr		r6, _08009a94
	ldr		r1, _08009a98
	mov		r9, r1
	ldr		r2, _08009a9c
	mov		r8, r2
_08009a60:
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	add		r0, r6, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_08009aa0
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	add		r0, r6, #0x0
	bl		sub_08008b30
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009abc
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
	b		_08009abc

_08009a90:	.4byte 0xFFFF8080
_08009a94:	.4byte 0x02008C54
_08009a98:	.4byte 0x0200CDBC
_08009a9c:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)

_08009aa0:
	mov		r0, r9
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	cmp		r1, #0x0
	bne		_08009abc
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	mov		r3, #0x0
	ldrsh	r2, [r4, r3]
	str		r1, [sp, #0x0]
	ldr		r1, _08009ae4
	mov		r3, #0x0
	bl		sub_0808c670
_08009abc:
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009a60
_08009acc:
	mov		r1, r10
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9AE2, 0x2

_08009ae4:	.4byte 0x080c82bc
	thumb_func_end sub_08009a34

	thumb_func_start sub_08009ae8
sub_08009ae8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r10, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r7, _08009b44
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08009b80
	ldr		r6, _08009b48
	ldr		r1, _08009b4c
	mov		r9, r1
	ldr		r2, _08009b50
	mov		r8, r2
_08009b14:
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	add		r0, r6, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_08009b54
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	add		r0, r6, #0x0
	bl		sub_08008a04
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009b70
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
	b		_08009b70

_08009b44:	.4byte 0xFFFF8080
_08009b48:	.4byte 0x02008AD4
_08009b4c:	.4byte 0x0200CDBC
_08009b50:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)

_08009b54:
	mov		r0, r9
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	cmp		r1, #0x0
	bne		_08009b70
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	mov		r3, #0x0
	ldrsh	r2, [r4, r3]
	str		r1, [sp, #0x0]
	ldr		r1, _08009b98
	mov		r3, #0x0
	bl		sub_0808c670
_08009b70:
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009b14
_08009b80:
	mov		r1, r10
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9B96, 0x2

_08009b98:	.4byte 0x080c82d4
	thumb_func_end sub_08009ae8

	thumb_func_start sub_08009b9c
sub_08009b9c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r2, #0x0
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _08009bac
	b		_08009bc6

_08009bac:	.4byte 0xFFFF8080

_08009bb0:
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _08009bdc
	bl		sub_08008df4
	ldr		r1, _08009be0
	bl		sub_08008e80
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
_08009bc6:
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009bb0
	lsl		r0, r7, #0x2
	add		r0, r5, r0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9BDA, 0x2

_08009bdc:	.4byte 0x02009E1C
_08009be0:	.4byte 0x80808080
	thumb_func_end sub_08009b9c

	thumb_func_start sub_08009be4
sub_08009be4:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r2, #0x0
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _08009bf4
	b		_08009c0c

_08009bf4:	.4byte 0xFFFF8080

_08009bf8:
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _08009c20
	bl		sub_08008cf4
	bl		sub_08007758
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
_08009c0c:
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009bf8
	lsl		r0, r7, #0x2
	add		r0, r5, r0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08009c20:	.4byte 0x02009984
	thumb_func_end sub_08009be4

	thumb_func_start sub_08009c24
sub_08009c24:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r8, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _08009c7c
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08009c68
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	add		r7, r1, #0x0
_08009c48:
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _08009c80
	bl		sub_08008a04
	ldrh	r1, [r0, #0x1c]
	orr		r1, r7
	strh	r1, [r0, #0x1c]
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009c48
_08009c68:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9C7A, 0x2

_08009c7c:	.4byte 0xFFFF8080
_08009c80:	.4byte 0x02008AD4
	thumb_func_end sub_08009c24

	thumb_func_start sub_08009c84
sub_08009c84:
	push	{ r4, r5, lr }
	sub		sp, #0x28
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	ldr		r0, _08009cac
	mov		r1, sp
	bl		sub_08007fb4
	ldr		r0, _08009cb0
	mov		r1, #0x10
	bl		sub_08000700
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	add		sp, #0x28
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9CAA, 0x2

_08009cac:	.4byte 0x02008AD4
_08009cb0:	.4byte 0x03005918
	thumb_func_end sub_08009c84

	thumb_func_start sub_08009cb4
sub_08009cb4:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r2, #0x0
	add		r4, r3, #0x0
	cmp		r4, #0x7
	bls		_08009ccc
	ldr		r0, _08009ce0
	mov		r1, #0x81
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08009ccc:
	ldr		r0, _08009ce4
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	lsl		r0, r6, #0x2
	add		r0, r5, r0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9CDE, 0x2

_08009ce0:	.4byte 0x080c82e8 @ a_toda/scriptcmd0.cpp
_08009ce4:	.4byte 0x0200A208
	thumb_func_end sub_08009cb4

	thumb_func_start sub_08009ce8
sub_08009ce8:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r2, #0x0
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _08009cf8
	b		_08009d12

_08009cf8:	.4byte 0xFFFF8080

_08009cfc:
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _08009d28
	bl		sub_08008df4
	ldr		r1, _08009d2c
	bl		sub_08007384
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
_08009d12:
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009cfc
	lsl		r0, r7, #0x2
	add		r0, r5, r0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9D26, 0x2

_08009d28:	.4byte 0x02009E1C
_08009d2c:	.4byte 0x80808080
	thumb_func_end sub_08009ce8

	thumb_func_start sub_08009d30
sub_08009d30:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r2, #0x0
	add		r4, r3, #0x0
	cmp		r4, #0x7
	bls		_08009d48
	ldr		r0, _08009d64
	mov		r1, #0x8d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08009d48:
	ldr		r1, _08009d68
	lsl		r0, r4, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, _08009d6c
	mov		r1, #0x13
	mov		r2, #0x0
	bl		sub_08009458
	lsl		r0, r5, #0x2
	add		r0, r6, r0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08009d64:	.4byte 0x080c82e8 @ a_toda/scriptcmd0.cpp
_08009d68:	.4byte 0x0200A208
_08009d6c:	.4byte 0x80808080
	thumb_func_end sub_08009d30

	thumb_func_start sub_08009d70
sub_08009d70:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	ldr		r0, [r4, #0x4]
	ldr		r1, [r4, #0x8]
	ldr		r2, [r4, #0xc]
	bl		sub_0808ea38
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08009d70

	thumb_func_start sub_08009d8c
sub_08009d8c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r2, #0x0
	add		r4, r3, #0x0
	ldr		r0, _08009dfc
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08009da6
	ldr		r0, _08009e00
	add		r1, r4, #0x0
	bl		sub_0808c670
_08009da6:
	mov		r0, #0x1
	bl		sub_080014c0
	ldr		r0, _08009e04
	mov		r1, #0x13
	bl		sub_08000700
	ldr		r0, _08009e08
	bl		sub_0808d878
	ldr		r0, _08009e0c
	mov		r1, #0x4
	bl		sub_0800843c
	ldr		r0, _08009e10
	mov		r1, #0x4
	bl		sub_08007570
	ldr		r0, _08009e14
	mov		r1, #0x4
	bl		sub_08007900
	ldr		r0, _08009e18
	bl		sub_08008f1c
	ldr		r0, _08009e1c
	bl		sub_08008f1c
	cmp		r4, #0x1
	bne		_08009de8
	ldr		r0, _08009e20
	bl		sub_08008f1c
_08009de8:
	ldr		r1, _08009e24
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	bl		sub_0808e534
	lsl		r0, r5, #0x2
	add		r0, r6, r0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08009dfc:	.4byte 0x0200CDBC
_08009e00:	.4byte 0x080c8314
_08009e04:	.4byte 0x03005918
_08009e08:	.4byte 0x0200BF14
_08009e0c:	.4byte 0x020089CC
_08009e10:	.4byte 0x02009E1C
_08009e14:	.4byte 0x02009984
_08009e18:	.4byte 0x020092EC
_08009e1c:	.4byte 0x02008C54
_08009e20:	.4byte 0x0200A26C
_08009e24:	.4byte 0x0200EB24
	thumb_func_end sub_08009d8c

	thumb_func_start sub_08009e28
sub_08009e28:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	bl		sub_08000d3c
	ldr		r0, _08009e78
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	add		r0, #0xc
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	ldr		r0, _08009e7c
	ldr		r1, _08009e80
	bl		sub_08000c6c
	bl		sub_0808d35c
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9E76, 0x2

_08009e78:	.4byte 0x04000020
_08009e7c:	.4byte 0x02000B18
_08009e80:	.4byte 0x02000B1A
	thumb_func_end sub_08009e28

	thumb_func_start sub_08009e84
sub_08009e84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r8, r0
	mov		r9, r2
	ldr		r0, _08009ee0
	mov		r12, r0
	ldr		r7, _08009ee4
	ldr		r6, _08009ee8
	ldr		r4, [r0, #0x0]
	mov		r3, r8
	mov		r5, #0x3
_08009e9e:
	ldrh	r0, [r4, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r2, [r3, #0x4]
	add		r0, r6, #0x0
	and		r0, r2
	orr		r1, r0
	strh	r1, [r4, #0x0]
	add		r4, #0x2
	add		r3, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08009e9e
	mov		r1, r12
	ldr		r0, [r1, #0x0]
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08009eec
	ldrh	r1, [r1, #0x0]
	ldr		r2, _08009ef0
	ldrh	r2, [r2, #0x0]
	ldr		r3, _08009ef4
	ldrh	r3, [r3, #0x0]
	bl		sub_080012ac
	mov		r1, r9
	lsl		r0, r1, #0x2
	add		r0, r8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08009ee0:	.4byte 0x080c84b8
_08009ee4:	.4byte 0x0000DF3C
_08009ee8:	.4byte 0x000020C3
_08009eec:	.4byte 0x02000B1C
_08009ef0:	.4byte 0x02000B1E
_08009ef4:	.4byte 0x02000B20
	thumb_func_end sub_08009e84

	thumb_func_start sub_08009ef8
sub_08009ef8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	ldrh	r0, [r4, #0x4]
	ldrh	r1, [r4, #0x6]
	ldrh	r2, [r4, #0x8]
	bl		sub_08001090
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08009ef8

	thumb_func_start sub_08009f14
sub_08009f14:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	bl		sub_0800132c
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08009f14

	thumb_func_start sub_08009f2c
sub_08009f2c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	mov		r0, #0x1
	bl		sub_080014c0
	ldr		r0, _08009f60
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	orr		r0, r1
	bl		sub_0800132c
	ldr		r2, [r0, #0xc]
	mov		r3, #0x10
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r2, [r2, #0x14]
	mov		r1, #0x0
	bl		sub_080bbc78
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08009f60:	.4byte 0x02000B18
	thumb_func_end sub_08009f2c

	thumb_func_start sub_08009f64
sub_08009f64:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x38
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0800891c
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9F86, 0x2
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r2, #0x0
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _08009f98
	b		_08009fc2

_08009f98:	.4byte 0xFFFF8080

_08009f9c:
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	ldr		r0, _08009fd8
	bl		sub_08008854
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08009fbc
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08009fbc:
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
_08009fc2:
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009f9c
	lsl		r0, r7, #0x2
	add		r0, r5, r0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9FD6, 0x2

_08009fd8:	.4byte 0x020089CC
	thumb_func_end sub_08009f64

	thumb_func_start sub_08009fdc
sub_08009fdc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r8, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _0800a030
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800a01e
	mov		r1, #0x5
	neg		r1, r1
	add		r7, r1, #0x0
_08009ffe:
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _0800a034
	bl		sub_08008854
	ldrh	r1, [r0, #0x2c]
	and		r1, r7
	strh	r1, [r0, #0x2c]
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08009ffe
_0800a01e:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA02E, 0x2

_0800a030:	.4byte 0xFFFF8080
_0800a034:	.4byte 0x020089CC
	thumb_func_end sub_08009fdc

	thumb_func_start sub_0800a038
sub_0800a038:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r8, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _0800a088
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800a076
	mov		r7, #0x4
_0800a056:
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _0800a08c
	bl		sub_08008854
	ldrh	r1, [r0, #0x2c]
	eor		r1, r7
	strh	r1, [r0, #0x2c]
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_0800a056
_0800a076:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA086, 0x2

_0800a088:	.4byte 0xFFFF8080
_0800a08c:	.4byte 0x020089CC
	thumb_func_end sub_0800a038

	thumb_func_start sub_0800a090
sub_0800a090:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	mov		r8, r0
	mov		r9, r2
	add		r4, r3, #0x0
	mov		r1, #0x4
	ldrsh	r5, [r0, r1]
	mov		r1, #0x6
	ldrsh	r6, [r0, r1]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_08001238
	lsl		r5, r5, #0x10
	lsl		r4, r4, #0x2
	ldr		r0, _0800a0d8
	add		r0, r4, r0
	str		r5, [r0, #0x0]
	lsl		r6, r6, #0x10
	ldr		r0, _0800a0dc
	add		r4, r4, r0
	str		r6, [r4, #0x0]
	mov		r0, r9
	lsl		r0, r0, #0x2
	mov		r9, r0
	add		r8, r9
	mov		r0, r8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800a0d8:	.4byte 0x0200CE24
_0800a0dc:	.4byte 0x0200CE38
	thumb_func_end sub_0800a090

	thumb_func_start sub_0800a0e0
sub_0800a0e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r8, r0
	str		r2, [sp, #0x0]
	mov		r7, r8
	add		r7, #0x4
	sub		r3, #0x1
	cmp		r3, #0x0
	blt		_0800a134
	ldr		r0, _0800a14c
	mov		r10, r0
	ldr		r1, _0800a150
	mov		r9, r1
_0800a102:
	mov		r0, #0x0
	ldrsh	r4, [r7, r0]
	mov		r1, #0x2
	ldrsh	r5, [r7, r1]
	mov		r0, #0x4
	ldrsh	r6, [r7, r0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	str		r3, [sp, #0x4]
	bl		sub_08001238
	lsl		r5, r5, #0x10
	lsl		r4, r4, #0x2
	mov		r1, r10
	add		r0, r4, r1
	str		r5, [r0, #0x0]
	lsl		r6, r6, #0x10
	add		r4, r9
	str		r6, [r4, #0x0]
	add		r7, #0x8
	ldr		r3, [sp, #0x4]
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0800a102
_0800a134:
	ldr		r1, [sp, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r8
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA14A, 0x2

_0800a14c:	.4byte 0x0200CE24
_0800a150:	.4byte 0x0200CE38
	mov		r1, #0x4
	ldrsh	r3, [r0, r1]
	mov		r1, #0x54
	mul		r1, r3
	ldr		r3, _0800a168
	add		r1, r1, r3
	str		r0, [r1, #0x18]
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	bx		lr

_0800a168:	.4byte 0x0200E9AC
	thumb_func_end sub_0800a0e0

	thumb_func_start sub_0800a16c
sub_0800a16c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r8, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _0800a1c4
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800a1b0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r7, r1, #0x0
_0800a190:
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _0800a1c8
	bl		sub_08008a04
	ldrh	r1, [r0, #0x1c]
	orr		r1, r7
	strh	r1, [r0, #0x1c]
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_0800a190
_0800a1b0:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA1C2, 0x2

_0800a1c4:	.4byte 0xFFFF8080
_0800a1c8:	.4byte 0x02008AD4
	thumb_func_end sub_0800a16c

	thumb_func_start sub_0800a1cc
sub_0800a1cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r8, r2
	add		r4, r5, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r5, r0]
	ldr		r6, _0800a21c
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800a20c
	ldr		r1, _0800a220
	add		r7, r1, #0x0
_0800a1ec:
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _0800a224
	bl		sub_08008a04
	ldrh	r1, [r0, #0x1c]
	and		r1, r7
	strh	r1, [r0, #0x1c]
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_0800a1ec
_0800a20c:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800a21c:	.4byte 0xFFFF8080
_0800a220:	.4byte 0xfffffeff
_0800a224:	.4byte 0x02008AD4
	thumb_func_end sub_0800a1cc

	thumb_func_start sub_0800a228
sub_0800a228:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0xe8
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0800d8ec
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA24A, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0xec
	bl		sub_0808af94
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0800dbcc
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA26E, 0x2
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r1, r3, #0x0
	ldr		r0, _0800a290
	bl		sub_0800ed80
	add		r1, r4, #0x0
	bl		sub_0800d7c8
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0800a290:	.4byte 0x0200AA18
	thumb_func_end sub_0800a228

	thumb_func_start sub_0800a294
sub_0800a294:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r1, r3, #0x0
	ldr		r0, _0800a2bc
	bl		sub_0800ed80
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0800a2bc:	.4byte 0x0200AA18
	thumb_func_end sub_0800a294

	thumb_func_start sub_0800a2c0
sub_0800a2c0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r1, r3, #0x0
	ldr		r0, _0800a2e4
	bl		sub_0800ed80
	mov		r2, #0x4
	ldrsh	r1, [r4, r2]
	bl		sub_0800f0d0
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA2E2, 0x2

_0800a2e4:	.4byte 0x0200AA18
	thumb_func_end sub_0800a2c0

	thumb_func_start sub_0800a2e8
sub_0800a2e8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r1, r3, #0x0
	ldr		r0, _0800a30c
	bl		sub_0800ed80
	mov		r2, #0x4
	ldrsh	r1, [r4, r2]
	bl		sub_0800f024
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA30A, 0x2

_0800a30c:	.4byte 0x0200AA18
	thumb_func_end sub_0800a2e8

	thumb_func_start sub_0800a310
sub_0800a310:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r5, r2, #0x0
	add		r4, r3, #0x0
	ldr		r0, _0800a33c
	add		r1, r4, #0x0
	bl		sub_08008f44
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_0800a340
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
	b		_0800a35a

.incbin "base.gba", 0xA33A, 0x2

_0800a33c:	.4byte 0x0200AA18

_0800a340:
	ldr		r0, _0800a368
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	cmp		r2, #0x0
	bne		_0800a35a
	ldr		r0, _0800a36c
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800a370
	str		r2, [sp, #0x0]
	add		r2, r4, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800a35a:
	lsl		r0, r5, #0x2
	add		r0, r6, r0
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA366, 0x2

_0800a368:	.4byte 0x0200CDBC
_0800a36c:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)
_0800a370:	.4byte 0x080c834c
	thumb_func_end sub_0800a310

	thumb_func_start sub_0800a374
sub_0800a374:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r2
	add		r6, r3, #0x0
	ldr		r0, _0800a3cc
	add		r1, r6, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_0800a398
	ldr		r0, _0800a3d0
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800a398:
	ldr		r0, _0800a3d4
	ldr		r0, [r0, #0x0]
	add		r1, r7, #0x4
	bl		sub_0808b7e0
	add		r5, r0, #0x0
	mov		r0, #0x88
	bl		sub_0808af94
	add		r4, r0, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_0800a4fc
	ldr		r0, _0800a3d8
	str		r0, [r4, #0x50]
	ldr		r0, _0800a3dc
	str		r0, [r4, #0xc]
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r7, r0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800a3cc:	.4byte 0x0200A26C
_0800a3d0:	.4byte 0x080c8368
_0800a3d4:	.4byte 0x0200BF08
_0800a3d8:	.4byte 0x080e08bc
_0800a3dc:	.4byte 0x080e089c
	thumb_func_end sub_0800a374

	thumb_func_start sub_0800a3e0
sub_0800a3e0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r2, #0x0
	add		r4, r3, #0x0
	ldr		r0, _0800a41c
	add		r1, r4, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_0800a400
	ldr		r0, _0800a420
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800a400:
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	bl		sub_0808af94
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0800b060
	lsl		r0, r6, #0x2
	add		r0, r5, r0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA41A, 0x2

_0800a41c:	.4byte 0x0200A604
_0800a420:	.4byte 0x080c838c
	thumb_func_end sub_0800a3e0

	thumb_func_start sub_0800a424
sub_0800a424:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0x1
	mov		r1, #0xff
	bl		sub_0808f558
	mov		r0, #0x1
	add		r1, r6, #0x0
	bl		sub_0808f5cc
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800a424

	thumb_func_start sub_0800a448
sub_0800a448:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	mov		r0, #0x1
	bl		sub_0808f628
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800a448

	thumb_func_start sub_0800a460
sub_0800a460:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x1e
	bl		sub_0808f58c
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800a460

	thumb_func_start sub_0800a47c
sub_0800a47c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	bl		sub_0808f690
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800a47c

	thumb_func_start sub_0800a494
sub_0800a494:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	bl		sub_0808f71c
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA4AA, 0x2
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	mov		r0, #0x0
	bl		sub_080020f8
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800a494

	thumb_func_start sub_0800a4c4
sub_0800a4c4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	bl		sub_080093dc
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA4DA, 0x22
	thumb_func_end sub_0800a4c4

	thumb_func_start sub_0800a4fc
sub_0800a4fc:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_08009050
	add		r7, r4, #0x0
	add		r7, #0x18
	add		r0, r7, #0x0
	bl		sub_080020c0
	ldr		r0, _0800a57c
	str		r0, [r4, #0x50]
	ldr		r0, _0800a580
	str		r0, [r4, #0xc]
	cmp		r5, #0x0
	bne		_0800a52a
	ldr		r0, _0800a584
	mov		r1, #0x13
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800a52a:
	add		r1, r4, #0x0
	add		r1, #0x54
	mov		r2, #0x0
	ldr		r0, _0800a588
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x5a
	strh	r2, [r0, #0x0]
	add		r0, #0x4
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	str		r5, [r4, #0x60]
	mov		r1, #0x0
	cmp		r5, #0x0
	beq		_0800a552
	mov		r1, #0x5
_0800a552:
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0800223c
	ldr		r2, [r4, #0x60]
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_08002074
	ldr		r0, _0800a58c
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0800bfc4
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xA57A, 0x2

_0800a57c:	.4byte 0x080e05ac
_0800a580:	.4byte 0x080e05bc
_0800a584:	.4byte 0x080c84bc @ a_toda/gamescript.cpp
_0800a588:	.4byte 0x00008001
_0800a58c:	.4byte 0x0200A604
	thumb_func_end sub_0800a4fc

	thumb_func_start sub_0800a590
sub_0800a590:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r6, #0x0
	add		r7, #0x56
	ldrh	r1, [r7, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x6
	mov		r2, #0x0
	mov		r8, r2
	orr		r0, r1
	strh	r0, [r7, #0x0]
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r1, #0x28
	ldrsh	r0, [r6, r1]
	bl		sub_0800223c
	mov		r2, #0x28
	ldrsh	r1, [r6, r2]
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808ba04
	add		r0, r6, #0x0
	add		r0, #0x5a
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldrh	r1, [r7, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800a600
	add		r0, r6, #0x0
	add		r0, #0x5d
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800a600
	ldr		r0, _0800a614
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800a5f6
	add		r0, r6, #0x0
	add		r0, #0x5e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800a600
_0800a5f6:
	ldr		r1, [r6, #0x20]
	add		r0, r4, #0x0
	mov		r2, #0x1
	bl		sub_0808bed0
_0800a600:
	ldr		r0, _0800a618
	ldr		r1, [r0, #0x34]
	add		r0, r6, #0x0
	add		r0, #0x5a
	strh	r1, [r0, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800a614:	.4byte 0x0200006C
_0800a618:	.4byte 0x0200DA00
	thumb_func_end sub_0800a590

	thumb_func_start sub_0800a61c
sub_0800a61c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r6, #0x0
	add		r7, #0x56
	ldrh	r1, [r7, #0x0]
	mov		r0, #0x3
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x5
	mov		r2, #0x0
	mov		r8, r2
	orr		r0, r1
	strh	r0, [r7, #0x0]
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r1, #0x28
	ldrsh	r0, [r6, r1]
	bl		sub_0800223c
	mov		r2, #0x28
	ldrsh	r1, [r6, r2]
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808ba04
	add		r0, r6, #0x0
	add		r0, #0x5a
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldrh	r1, [r7, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800a68c
	add		r0, r6, #0x0
	add		r0, #0x5d
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800a68c
	ldr		r0, _0800a6a0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800a682
	add		r0, r6, #0x0
	add		r0, #0x5e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800a68c
_0800a682:
	ldr		r1, [r6, #0x20]
	add		r0, r4, #0x0
	mov		r2, #0x1
	bl		sub_0808bed0
_0800a68c:
	ldr		r0, _0800a6a4
	ldr		r1, [r0, #0x34]
	add		r0, r6, #0x0
	add		r0, #0x5a
	strh	r1, [r0, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800a6a0:	.4byte 0x0200006C
_0800a6a4:	.4byte 0x0200DA00
	thumb_func_end sub_0800a61c

	thumb_func_start sub_0800a6a8
sub_0800a6a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r5, r0, #0x0
	mov		r8, r1
	add		r7, r2, #0x0
	mov		r10, r3
	ldr		r0, [sp, #0x0+0x40]
	mov		r9, r0
	ldr		r1, _0800a6e0
	and		r1, r7
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0800a6ce
	b		_0800a922
_0800a6ce:
	cmp		r1, r0
	bhi		_0800a6e4
	cmp		r1, #0x0
	bne		_0800a6d8
	b		_0800a7f0
_0800a6d8:
	cmp		r1, #0x80
	bne		_0800a6de
	b		_0800a890
_0800a6de:
	b		_0800a984

_0800a6e0:	.4byte 0x0000FF80

_0800a6e4:
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0800a6ee
	b		_0800a970
_0800a6ee:
	mov		r0, #0xf8
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_0800a6f8
	b		_0800a984
_0800a6f8:
	ldr		r1, _0800a70c
	add		r0, r7, r1
	cmp		r0, #0x17
	bhi		_0800a7dc
	lsl		r0, r0, #0x2
	ldr		r1, _0800a710
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0xA70A, 0x2

_0800a70c:	.4byte 0xFFFFF07B
_0800a710:	.4byte 0x0800a714
_0800a714:	.4byte 0x0800a918

.incbin "base.gba", 0xA718, 0x5C
	thumb_func_end sub_0800a6a8


.incbin "base.gba", 0xA774, 0x1E

_0800a792:

.incbin "base.gba", 0xA792, 0x4A

_0800a7dc:

.incbin "base.gba", 0xA7DC, 0x14
_0800a7f0:

.incbin "base.gba", 0xA7F0, 0x22
_0800a812:

.incbin "base.gba", 0xA812, 0x1E
_0800a830:

.incbin "base.gba", 0xA830, 0x14
_0800a844:

.incbin "base.gba", 0xA844, 0x22
_0800a866:

.incbin "base.gba", 0xA866, 0xC
_0800a872:

.incbin "base.gba", 0xA872, 0x12
_0800a884:	.4byte 0x0200DA00
_0800a888.:	.4byte 0x080c84bc @ a_toda/gamescript.cpp
_0800a88c:	.4byte 0x0200A604

_0800a890:

.incbin "base.gba", 0xA890, 0x1C
_0800a8ac:

.incbin "base.gba", 0xA8AC, 0x14
_0800a8c0:	.4byte 0xFFFF8080
_0800a8c4:	.4byte 0x0200A604

_0800a8c8:

.incbin "base.gba", 0xA8C8, 0x24
_0800a8ec:	.4byte 0x0200A26C

_0800a8f0:

.incbin "base.gba", 0xA8F0, 0x24
_0800a914:	.4byte 0x0200A26C

_0800a918:

.incbin "base.gba", 0xA918, 0xA
_0800a922:

.incbin "base.gba", 0xA922, 0x36
_0800a958:

.incbin "base.gba", 0xA958, 0x10
_0800a968:	.4byte 0x0200A26C
_0800a96c:	.4byte 0x080c84d4

_0800a970:

.incbin "base.gba", 0xA970, 0x14
_0800a984:

.incbin "base.gba", 0xA984, 0x14
_0800a998:

.incbin "base.gba", 0xA998, 0xE
_0800a9a6:

.incbin "base.gba", 0xA9A6, 0x20
_0800a9c6:

.incbin "base.gba", 0xA9C6, 0xA
_0800a9d0:	.4byte 0x0200A26C

_0800a9d4:

.incbin "base.gba", 0xA9D4, 0x16
_0800a9ea:

.incbin "base.gba", 0xA9EA, 0xA
_0800a9f4:

.incbin "base.gba", 0xA9F4, 0xC
_0800aa00:	.4byte 0x080c84e8
_0800aa04:	.4byte 0x0800aa08
_0800aa08:	.4byte 0x0800aa40

.incbin "base.gba", 0xAA0C, 0x540

_0800af4c:

.incbin "base.gba", 0xAF4C, 0x4
_0800af50:

.incbin "base.gba", 0xAF50, 0x10
	thumb_func_start sub_0800af60
sub_0800af60:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r3, r1, #0x0
	add		r5, r2, #0x0
_0800af68:
	cmp		r3, #0x18
	bgt		_0800af7c
	cmp		r3, #0x17
	bge		_0800afd0
	ldr		r0, _0800af78
	cmp		r3, r0
	beq		_0800af9c
	b		_0800b034

_0800af78:	.4byte 0xFFFF8000

_0800af7c:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r3, r0
	beq		_0800b01c
	cmp		r3, r0
	bgt		_0800af8e
	cmp		r3, #0x81
	beq		_0800b01c
	b		_0800b034
_0800af8e:
	ldr		r0, _0800af98
	cmp		r3, r0
	beq		_0800b000
	b		_0800b034

.incbin "base.gba", 0xAF96, 0x2

_0800af98:	.4byte 0x00000185

_0800af9c:
	add		r1, r6, #0x0
	add		r1, #0x40
	strh	r3, [r1, #0x0]
	ldr		r0, _0800afc8
	ldr		r4, [r0, #0x4]
	add		r5, r1, #0x0
	cmp		r4, #0x0
	beq		_0800afc0
_0800afac:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_0800afac
_0800afc0:
	ldr		r0, _0800afcc
	bl		sub_0800bcac
	b		_0800b044

_0800afc8:	.4byte 0x0200A604
_0800afcc:	.4byte 0x0200A26C

_0800afd0:
	cmp		r5, #0x0
	beq		_0800afee
	mov		r0, #0x88
	bl		sub_0808af94
	add		r4, r0, #0x0
	mov		r1, #0xfa
	lsl		r1, r1, #0x1
	add		r2, r5, #0x0
	bl		sub_0800a4fc
	ldr		r0, _0800aff8
	str		r0, [r4, #0x50]
	ldr		r0, _0800affc
	str		r0, [r4, #0xc]
_0800afee:
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	b		_0800af68

_0800aff8:	.4byte 0x080e08bc
_0800affc:	.4byte 0x080e089c

_0800b000:
	cmp		r5, #0x0
	beq		_0800b01c
	mov		r0, #0x88
	bl		sub_0808af94
	add		r4, r0, #0x0
	ldr		r1, _0800b028
	add		r2, r5, #0x0
	bl		sub_0800a4fc
	ldr		r0, _0800b02c
	str		r0, [r4, #0x50]
	ldr		r0, _0800b030
	str		r0, [r4, #0xc]
_0800b01c:
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	b		_0800af68

.incbin "base.gba", 0xB026, 0x2

_0800b028:	.4byte 0x000001F9
_0800b02c:	.4byte 0x080e08bc
_0800b030:	.4byte 0x080e089c

_0800b034:
	ldr		r0, _0800b054
	ldr		r1, _0800b058
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	add		r5, r6, #0x0
	add		r5, #0x40
_0800b044:
	ldr		r0, _0800b05c
	strh	r0, [r5, #0x0]
_0800b048:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0800b048

.incbin "base.gba", 0xB052, 0x2

_0800b054:	.4byte 0x080c84bc @ a_toda/gamescript.cpp
_0800b058:	.4byte 0x00000173
_0800b05c:	.4byte 0x0000F004
	thumb_func_end sub_0800af60

	thumb_func_start sub_0800b060
sub_0800b060:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	bl		sub_08009050
	mov		r0, #0x18
	add		r0, r0, r5
	mov		r8, r0
	bl		sub_080020c0
	ldr		r0, _0800b1cc
	str		r0, [r5, #0x50]
	ldr		r0, _0800b1d0
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x5a
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x5e
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	sub		r1, #0x1
	strb	r0, [r1, #0x0]
	mov		r2, #0x5c
	add		r2, r2, r5
	mov		r9, r2
	strb	r0, [r2, #0x0]
	ldr		r0, _0800b1d4
	str		r0, [r5, #0x50]
	ldr		r0, _0800b1d8
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x88
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0xf8
	bl		sub_0808b374
	add		r0, r5, #0x0
	add		r0, #0xf4
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	ldr		r0, _0800b1dc
	str		r0, [r5, #0x50]
	ldr		r0, _0800b1e0
	str		r0, [r5, #0xc]
	mov		r1, #0xa2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r4, r5, r2
	str		r4, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x54
	ldr		r0, _0800b1e4
	strh	r0, [r1, #0x0]
	mov		r3, #0x8c
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, _0800b1e8
	ldr		r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x18
	bl		sub_0808b7e0
	str		r0, [r5, #0x60]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_0800b0fe
	mov		r1, #0x5
_0800b0fe:
	add		r0, r5, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_0800223c
	ldr		r2, [r5, #0x60]
	mov		r0, r8
	add		r1, r7, #0x0
	bl		sub_08002074
	ldr		r0, _0800b1ec
	add		r1, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_0800bd1c
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r2, r2, r5
	mov		r8, r2
	mov		r1, r8
	ldr		r0, _0800b1f0
	ldmia	r0!, { r2, r3, r7 }
	stmia	r1!, {  r2, r3, r7 }
	ldmia	r0!, { r2, r3, r7 }
	stmia	r1!, {  r2, r3, r7 }
	ldmia	r0!, { r2, r3, r7 }
	stmia	r1!, {  r2, r3, r7 }
	ldrb	r0, [r6, #0x15]
	mov		r3, r9
	strb	r0, [r3, #0x0]
	ldrb	r0, [r6, #0xe]
	ldr		r7, _0800b1f4
	add		r1, r5, r7
	strb	r0, [r1, #0x0]
	mov		r1, #0x8
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x10
	str		r0, [r4, #0x0]
	mov		r2, #0xa
	ldrsh	r0, [r6, r2]
	lsl		r0, r0, #0x10
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	ldrh	r0, [r6, #0xc]
	sub		r7, #0xf
	add		r1, r5, r7
	strh	r0, [r1, #0x0]
	ldrb	r0, [r6, #0xf]
	ldr		r2, _0800b1f8
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	ldrb	r1, [r6, #0x10]
	add		r3, #0x18
	add		r0, r5, r3
	strb	r1, [r0, #0x0]
	ldrb	r0, [r6, #0x11]
	add		r7, #0xb
	add		r1, r5, r7
	strb	r0, [r1, #0x0]
	ldrb	r0, [r6, #0x12]
	add		r2, #0x3
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	ldrb	r0, [r6, #0x13]
	add		r3, #0x3
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	ldrb	r1, [r6, #0x14]
	add		r7, #0x3
	add		r0, r5, r7
	strb	r1, [r0, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, _0800b1fc
	strh	r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	mov		r3, #0x4
	ldrsh	r1, [r6, r3]
	add		r0, r5, #0x0
	bl		sub_0800be54
	mov		r0, r8
	add		r1, r5, #0x0
	bl		sub_0800b87c
	mov		r7, #0x6
	ldrsh	r1, [r6, r7]
	add		r0, r5, #0x0
	bl		sub_0800bdbc
	add		r0, r5, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800b1cc:	.4byte 0x080e05ac
_0800b1d0:	.4byte 0x080e05bc
_0800b1d4:	.4byte 0x080e08bc
_0800b1d8:	.4byte 0x080e089c
_0800b1dc:	.4byte 0x080e0574
_0800b1e0:	.4byte 0x080e0584
_0800b1e4:	.4byte 0x00008002
_0800b1e8:	.4byte 0x0200BF08
_0800b1ec:	.4byte 0x0200A26C
_0800b1f0:	.4byte 0x080c85a0
_0800b1f4:	.4byte 0x0000013D
_0800b1f8:	.4byte 0x00000137
_0800b1fc:	.4byte 0x00008080
	thumb_func_end sub_0800b060

	thumb_func_start sub_0800b200
sub_0800b200:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, #0x5d
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b2a6
	ldr		r0, _0800b2ac
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b21e
	add		r0, r4, #0x0
	add		r0, #0x5e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800b2a6
_0800b21e:
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r5, _0800b2b0
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r3, #0x34
	ldrsh	r0, [r5, r3]
	cmp		r1, r0
	beq		_0800b256
	add		r2, r4, #0x0
	add		r2, #0xf8
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800b24c
	add		r0, r2, #0x0
	bl		sub_0808b3d4
_0800b24c:
	ldr		r1, [r5, #0x34]
	mov		r2, #0x8c
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
_0800b256:
	add		r1, r4, #0x0
	add		r1, #0x5a
	ldr		r0, _0800b2b0
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	mov		r3, #0x34
	ldrsh	r0, [r0, r3]
	add		r5, r1, #0x0
	cmp		r2, r0
	beq		_0800b2a6
	add		r0, r4, #0x0
	add		r0, #0x56
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800b2a0
	add		r0, r4, #0x0
	add		r0, #0x5d
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b2a0
	ldr		r0, _0800b2ac
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b294
	add		r0, r4, #0x0
	add		r0, #0x5e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800b2a0
_0800b294:
	add		r0, r4, #0x0
	add		r0, #0x18
	ldr		r1, [r4, #0x20]
	mov		r2, #0x1
	bl		sub_0808bed0
_0800b2a0:
	ldr		r0, _0800b2b0
	ldr		r0, [r0, #0x34]
	strh	r0, [r5, #0x0]
_0800b2a6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0800b2ac:	.4byte 0x0200006C
_0800b2b0:	.4byte 0x0200DA00
	thumb_func_end sub_0800b200

	thumb_func_start sub_0800b2b4
sub_0800b2b4:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	ldr		r1, _0800b31c
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsb	r3, [r0, r3]
	sub		r1, #0x21
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0800b2d0
	ldr		r1, _0800b320
	add		r0, r0, r1
_0800b2d0:
	asr		r1, r0, #0x10
	lsl		r0, r3, #0x2
	add		r3, r0, r4
	ldr		r0, [r3, #0x0]
	sub		r4, r1, r0
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0800b2ea
	ldr		r1, _0800b320
	add		r0, r0, r1
_0800b2ea:
	asr		r1, r0, #0x10
	ldr		r0, [r3, #0x14]
	sub		r3, r1, r0
	add		r1, r4, #0x0
	add		r1, #0x5f
	mov		r0, #0xd7
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_0800b324
	mov		r0, #0x40
	neg		r0, r0
	cmp		r3, r0
	ble		_0800b324
	cmp		r3, #0xdf
	bgt		_0800b324
	add		r0, r2, #0x0
	add		r0, #0x88
	add		r1, r2, #0x0
	add		r1, #0xdc
	strh	r4, [r1, #0x0]
	add		r1, #0x2
	strh	r3, [r1, #0x0]
	bl		sub_0808e4a0
	b		_0800b32c

_0800b31c:	.4byte 0x0000013D
_0800b320:	.4byte 0x0000FFFF

_0800b324:
	add		r0, r2, #0x0
	add		r0, #0x88
	bl		sub_0808e1ac
_0800b32c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB332, 0x2
	thumb_func_end sub_0800b2b4

	thumb_func_start sub_0800b334
sub_0800b334:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r2, #0x0
	mov		r10, r3
	ldr		r6, [sp, #0x0+0x24]
	ldr		r1, _0800b364
	and		r1, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0800b3cc
	cmp		r1, r0
	bhi		_0800b368
	cmp		r1, #0x0
	beq		_0800b388
	cmp		r1, #0x80
	beq		_0800b398
	b		_0800b3ba

_0800b364:	.4byte 0x0000FF80

_0800b368:
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0800b3a8
	mov		r0, #0xf8
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_0800b3ba
	str		r6, [sp, #0x0]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_0800f41c
	b		_0800b800
_0800b388:
	str		r6, [sp, #0x0]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_0800f41c
	b		_0800b800
_0800b398:
	str		r6, [sp, #0x0]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_0800f41c
	b		_0800b800
_0800b3a8:
	add		r0, r5, #0x0
	add		r0, #0x18
	str		r6, [sp, #0x0]
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_08001954
	b		_0800b800
_0800b3ba:
	add		r0, r5, #0x0
	add		r0, #0x18
	str		r6, [sp, #0x0]
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_08001954
	b		_0800b800
_0800b3cc:
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _0800b3fc
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	bge		_0800b404
	ldr		r0, _0800b400
	add		r1, r6, #0x0
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	cmp		r1, r5
	beq		_0800b404
	mov		r0, r10
	lsl		r4, r0, #0x2
	add		r0, r7, r4
	str		r0, [r5, #0x20]
	add		r0, r1, #0x0
	add		r1, r7, #0x0
	bl		sub_0800a590
	b		_0800b7fe

_0800b3fc:	.4byte 0xFFFF8080
_0800b400:	.4byte 0x0200A26C

_0800b404:
	ldr		r1, _0800b418
	add		r0, r4, r1
	cmp		r0, #0x17
	bls		_0800b40e
	b		_0800b7c4
_0800b40e:
	lsl		r0, r0, #0x2
	ldr		r1, _0800b41c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0800b418:	.4byte 0xFFFFFF00
_0800b41c:	.4byte 0x0800b420
_0800b420:	.4byte 0x0800b480

.incbin "base.gba", 0xB424, 0x5C
	thumb_func_end sub_0800b334


.incbin "base.gba", 0xB480, 0x344

_0800b7c4:

.incbin "base.gba", 0xB7C4, 0x3A
_0800b7fe:

.incbin "base.gba", 0xB7FE, 0x2
_0800b800:

.incbin "base.gba", 0xB800, 0x10
	thumb_func_start sub_0800b810
sub_0800b810:
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r2, _0800b878
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	add		r2, r3, #0x0
	add		r2, #0x21
	strb	r0, [r2, #0x0]
	mov		r2, #0x0
	cmp		r1, #0x0
	beq		_0800b82a
	add		r2, r1, #0x0
	add		r2, #0x88
_0800b82a:
	add		r0, r2, #0x0
	add		r0, #0x8c
	ldrh	r0, [r0, #0x0]
	strh	r0, [r3, #0xc]
	ldr		r0, [r2, #0x7c]
	str		r0, [r3, #0x8]
	add		r0, r2, #0x0
	add		r0, #0x54
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r0, r0, #0x10
	str		r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x56
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	str		r0, [r3, #0x4]
	mov		r4, #0x6a
	add		r4, r4, r2
	ldr		r0, [r2, #0x0]
	ldrh	r1, [r0, #0x20]
	ldrb	r0, [r4, #0x0]
	sub		r0, r0, r1
	add		r1, r3, #0x0
	add		r1, #0x20
	strb	r0, [r1, #0x0]
	sub		r1, #0x10
	add		r0, r2, #0x0
	add		r0, #0x58
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r2, [r0, #0x0]
	str		r2, [r1, #0x0]
	ldrh	r0, [r0, #0x4]
	strh	r0, [r1, #0x4]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0800b878:	.4byte 0x0000013D
	thumb_func_end sub_0800b810

	thumb_func_start sub_0800b87c
sub_0800b87c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r0, #0x21
	ldrb	r0, [r0, #0x0]
	ldr		r4, _0800b8f8
	add		r2, r1, r4
	strb	r0, [r2, #0x0]
	mov		r2, #0x0
	cmp		r1, #0x0
	beq		_0800b894
	add		r2, r1, #0x0
	add		r2, #0x88
_0800b894:
	ldr		r0, [r3, #0x8]
	str		r0, [r2, #0x7c]
	mov		r2, #0x0
	cmp		r1, #0x0
	beq		_0800b8a2
	add		r2, r1, #0x0
	add		r2, #0x88
_0800b8a2:
	ldr		r0, [r3, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0800b8ac
	neg		r1, r0
_0800b8ac:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0800b8b4
	neg		r1, r1
_0800b8b4:
	add		r0, r2, #0x0
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x4]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0800b8c4
	neg		r1, r0
_0800b8c4:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0800b8cc
	neg		r1, r1
_0800b8cc:
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x20
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	ldrh	r1, [r1, #0x20]
	add		r0, r0, r1
	add		r1, r2, #0x0
	add		r1, #0x6a
	strb	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x5a
	add		r1, r3, #0x0
	add		r1, #0x10
	mov		r2, #0x10
	bl		sub_0808c818
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0800b8f8:	.4byte 0x0000013D
	thumb_func_end sub_0800b87c

	thumb_func_start sub_0800b8fc
sub_0800b8fc:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x28
	ldr		r4, _0800b990
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800b914
	ldr		r0, _0800b994
	ldr		r1, _0800b998
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800b914:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0800b99c
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, _0800b9a0
	bl		sub_08008838
	ldr		r6, _0800b9a4
	ldr		r0, [r6, #0x0]
	add		r5, r0, #0x0
	add		r5, #0xc
	mov		r4, #0x3
_0800b930:
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_0800082c
	add		r5, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800b930
	ldr		r0, _0800b9a8
	mov		r1, sp
	bl		sub_08007fb4
	ldr		r1, _0800b9ac
	mov		r5, sp
	ldr		r0, _0800b9b0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0800b958
	ldr		r2, _0800b9b4
	add		r0, r0, r2
_0800b958:
	asr		r0, r0, #0x10
	str		r0, [sp, #0x10]
	ldr		r0, _0800b9b8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0800b968
	ldr		r2, _0800b9b4
	add		r0, r0, r2
_0800b968:
	asr		r0, r0, #0x10
	str		r0, [sp, #0x24]
	ldr		r4, [r1, #0x4]
	cmp		r4, #0x0
	beq		_0800b9ca
_0800b972:
	add		r0, r4, #0x0
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b9bc
	ldr		r1, [r4, #0xc]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r2, [r1, #0x24]
	add		r1, r5, #0x0
	bl		sub_080bbc78
	b		_0800b9c4

.incbin "base.gba", 0xB98E, 0x2

_0800b990:	.4byte 0x0200A85C
_0800b994:	.4byte 0x080c84bc @ a_toda/gamescript.cpp
_0800b998:	.4byte 0x000002E2
_0800b99c:	.4byte 0xFFFF8000
_0800b9a0:	.4byte 0x020089CC
_0800b9a4:	.4byte 0x080c85c4
_0800b9a8:	.4byte 0x02008AD4
_0800b9ac:	.4byte 0x0200A26C
_0800b9b0:	.4byte 0x0200CE34
_0800b9b4:	.4byte 0x0000FFFF
_0800b9b8:	.4byte 0x0200CE48

_0800b9bc:
	add		r0, r4, #0x0
	add		r0, #0x88
	bl		sub_0808e1ac
_0800b9c4:
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_0800b972
_0800b9ca:
	ldr		r1, _0800ba44
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, _0800ba48
	bl		sub_0808d90c
	ldr		r0, _0800ba4c
	mov		r1, #0x9
	mov		r2, #0x0
	bl		sub_08000644
	bl		sub_080014f4
	ldr		r4, [r6, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x6c
	mov		r1, #0x1
	bl		sub_0800082c
	add		r0, r4, #0x0
	add		r0, #0x9c
	mov		r1, #0x1
	bl		sub_0800082c
	add		r0, r4, #0x0
	add		r0, #0x84
	mov		r1, #0x1
	bl		sub_0800082c
	add		r0, r4, #0x0
	add		r0, #0x78
	mov		r1, #0x1
	bl		sub_0800082c
	add		r0, r4, #0x0
	add		r0, #0x90
	mov		r1, #0x1
	bl		sub_0800082c
	add		r0, r4, #0x0
	add		r0, #0xa8
	mov		r1, #0x1
	bl		sub_0800082c
	add		r0, r4, #0x0
	add		r0, #0xb4
	mov		r1, #0x1
	bl		sub_0800082c
	add		r0, r4, #0x0
	add		r0, #0xc0
	mov		r1, #0x1
	bl		sub_0800082c
	ldr		r0, _0800ba50
	bl		sub_080b6398
	add		sp, #0x28
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800ba44:	.4byte 0x0200CE20
_0800ba48:	.4byte 0x0200BF14
_0800ba4c:	.4byte 0x02000A14
_0800ba50:	.4byte 0x0200BDD4
	thumb_func_end sub_0800b8fc

	thumb_func_start sub_0800ba54
sub_0800ba54:
	push	{ r4, r5, lr }
	ldr		r0, _0800bad4
	add		r5, r0, #0x0
	add		r5, #0x58
	add		r4, r0, #0x0
	add		r4, #0x18
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08008ffc
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x40
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	bl		sub_0808c7e4
	ldr		r0, _0800bad8
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r5, r0, r1
	add		r4, r0, #0x0
	add		r4, #0x18
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08008ffc
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	bl		sub_0808c7e4
	ldr		r5, _0800badc
	ldr		r0, _0800bae0
	mov		r1, #0x44
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0800bae4
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x40
	ldr		r0, _0800bae8
	strh	r0, [r1, #0x0]
	str		r4, [r5, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBAD2, 0x2

_0800bad4:	.4byte 0x0200A604
_0800bad8:	.4byte 0x0200A26C
_0800badc:	.4byte 0x0200A85C
_0800bae0:	.4byte 0x0200DA00
_0800bae4:	.4byte 0x080e05dc
_0800bae8:	.4byte 0x0000F004
	thumb_func_end sub_0800ba54

	thumb_func_start sub_0800baec
sub_0800baec:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, [r3, #0x8]
	str		r0, [r2, #0x7c]
	ldr		r0, [r3, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0800bb00
	neg		r1, r0
_0800bb00:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0800bb08
	neg		r1, r1
_0800bb08:
	add		r0, r2, #0x0
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x4]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0800bb18
	neg		r1, r0
_0800bb18:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0800bb20
	neg		r1, r1
_0800bb20:
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x20
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	ldrh	r1, [r1, #0x20]
	add		r0, r0, r1
	add		r1, r2, #0x0
	add		r1, #0x6a
	strb	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x5a
	add		r1, r3, #0x0
	add		r1, #0x10
	mov		r2, #0x10
	bl		sub_0808c818
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBB4A, 0x162
	thumb_func_end sub_0800baec

	thumb_func_start sub_0800bcac
sub_0800bcac:
	push	{ r4, lr }
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_0800bcc8
_0800bcb4:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_0800bcb4
_0800bcc8:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBCCE, 0x2
	thumb_func_end sub_0800bcac

	thumb_func_start sub_0800bcd0
sub_0800bcd0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0800bd0c
	cmp		r4, r0
	bls		_0800bce8
	ldr		r0, _0800bd10
	ldr		r1, _0800bd14
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800bce8:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08008f44
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0800bd02
	ldr		r0, _0800bd18
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800bd02:
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xBD0A, 0x2

_0800bd0c:	.4byte 0x000001FF
_0800bd10:	.4byte 0x080c84bc @ a_toda/gamescript.cpp
_0800bd14:	.4byte 0x00000273
_0800bd18:	.4byte 0x080c8588
	thumb_func_end sub_0800bcd0

	thumb_func_start sub_0800bd1c
sub_0800bd1c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, _0800bd70
	cmp		r4, r0
	bls		_0800bd36
	ldr		r0, _0800bd74
	ldr		r1, _0800bd78
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800bd36:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_0800bd4e
	ldr		r0, _0800bd7c
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800bd4e:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x5f
	ble		_0800bd60
	ldr		r0, _0800bd80
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800bd60:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_08008fa4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800bd70:	.4byte 0x000001FF
_0800bd74:	.4byte 0x080c84bc @ a_toda/gamescript.cpp
_0800bd78:	.4byte 0x0000026A
_0800bd7c:	.4byte 0x080c8554
_0800bd80:	.4byte 0x080c856c
	thumb_func_end sub_0800bd1c

	thumb_func_start sub_0800bd84
sub_0800bd84:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r6, r4, r0
	add		r5, r4, #0x0
	add		r5, #0x18
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_08008ffc
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800bd84

	thumb_func_start sub_0800bdbc
sub_0800bdbc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x88
	ldr		r3, _0800bdfc
	add		r2, r4, r3
	ldrb	r2, [r2, #0x0]
	add		r3, r4, #0x0
	add		r3, #0xef
	strb	r2, [r3, #0x0]
	mov		r3, #0x9d
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r3, [r2, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xf0
	strb	r3, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r1, r4, #0x0
	add		r1, #0xe2
	ldr		r0, _0800be00
	strh	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBDFA, 0x2

_0800bdfc:	.4byte 0x00000139
_0800be00:	.4byte 0x00008080
	thumb_func_end sub_0800bdbc

	thumb_func_start sub_0800be04
sub_0800be04:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	mov		r1, #0x95
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	add		r4, r7, #0x0
	add		r4, #0x88
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0808e03c
	add		r0, r7, #0x0
	add		r0, #0xe2
	ldr		r1, _0800be50
	strh	r1, [r0, #0x0]
	mov		r2, #0x96
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	sub		r2, #0x18
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x14
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	bl		sub_0800b87c
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800be50:	.4byte 0x00008080
	thumb_func_end sub_0800be04

	thumb_func_start sub_0800be54
sub_0800be54:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	mov		r1, #0x95
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strh	r5, [r0, #0x0]
	add		r4, r6, #0x0
	add		r4, #0x88
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0808e03c
	add		r0, r6, #0x0
	add		r0, #0xe2
	ldr		r1, _0800be98
	strh	r1, [r0, #0x0]
	mov		r2, #0x96
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	sub		r2, #0x18
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x14
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBE96, 0x2

_0800be98:	.4byte 0x00008080
	thumb_func_end sub_0800be54

	thumb_func_start sub_0800be9c
sub_0800be9c:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _0800beb8
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	blt		_0800bebc
	add		r0, r3, #0x0
	b		_0800bec4

.incbin "base.gba", 0xBEB6, 0x2

_0800beb8:	.4byte 0xFFFF8080

_0800bebc:
	ldr		r0, _0800bec8
	add		r1, r2, #0x0
	bl		sub_0800bcd0
_0800bec4:
	pop		{ r1 }
	bx		r1

_0800bec8:	.4byte 0x0200A26C
	thumb_func_end sub_0800be9c

	thumb_func_start sub_0800becc
sub_0800becc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0xf8
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800beea
	add		r0, r2, #0x0
	bl		sub_0808b3d4
_0800beea:
	ldr		r0, _0800befc
	ldr		r1, [r0, #0x34]
	mov		r2, #0x8c
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0800befc:	.4byte 0x0200DA00
	thumb_func_end sub_0800becc

	thumb_func_start sub_0800bf00
sub_0800bf00:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _0800bf30
	str		r0, [r4, #0x50]
	ldr		r0, _0800bf34
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x88
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, _0800bf38
	str		r0, [r4, #0x50]
	ldr		r0, _0800bf3c
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0800900c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBF2E, 0x2

_0800bf30:	.4byte 0x080e0574
_0800bf34:	.4byte 0x080e0584
_0800bf38:	.4byte 0x080e05ac
_0800bf3c:	.4byte 0x080e05bc
	thumb_func_end sub_0800bf00

	thumb_func_start sub_0800bf40
sub_0800bf40:
	push	{ lr }
	add		r3, r1, #0x0
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0800bf50
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0800bf50:	.4byte 0xFFFFF001
	thumb_func_end sub_0800bf40

	thumb_func_start sub_0800bf54
sub_0800bf54:
	push	{ r4, lr }
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_0800bf70
_0800bf5c:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_0800bf5c
_0800bf70:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBF76, 0x4E
	thumb_func_end sub_0800bf54

	thumb_func_start sub_0800bfc4
sub_0800bfc4:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, _0800c01c
	cmp		r4, r0
	bls		_0800bfe0
	ldr		r0, _0800c020
	mov		r1, #0x9d
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800bfe0:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_0800bff8
	ldr		r0, _0800c024
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800bff8:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0xf
	ble		_0800c00a
	ldr		r0, _0800c028
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800c00a:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_08008fa4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC01A, 0x2

_0800c01c:	.4byte 0x000001FF
_0800c020:	.4byte 0x080c84bc @ a_toda/gamescript.cpp
_0800c024:	.4byte 0x080c8508
_0800c028:	.4byte 0x080c8520
	thumb_func_end sub_0800bfc4

	thumb_func_start sub_0800c02c
sub_0800c02c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r4, #0x0
	add		r6, #0x58
	add		r5, r4, #0x0
	add		r5, #0x18
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_08008ffc
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x40
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0xff
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xC05E, 0x2
	thumb_func_end sub_0800c02c

	thumb_func_start sub_0800c060
sub_0800c060:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0x5a
	ldr		r1, _0800c0c0
	ldr		r0, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	mov		r3, #0x34
	ldrsh	r0, [r0, r3]
	add		r5, r1, #0x0
	cmp		r2, r0
	beq		_0800c0ba
	add		r0, r4, #0x0
	add		r0, #0x56
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800c0b0
	add		r0, r4, #0x0
	add		r0, #0x5d
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800c0b0
	ldr		r0, _0800c0c4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800c0a4
	add		r0, r4, #0x0
	add		r0, #0x5e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800c0b0
_0800c0a4:
	add		r0, r4, #0x0
	add		r0, #0x18
	ldr		r1, [r4, #0x20]
	mov		r2, #0x1
	bl		sub_0808bed0
_0800c0b0:
	ldr		r0, [r5, #0x0]
	ldr		r1, [r0, #0x34]
	add		r0, r4, #0x0
	add		r0, #0x5a
	strh	r1, [r0, #0x0]
_0800c0ba:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0800c0c0:	.4byte 0x080c85c8
_0800c0c4:	.4byte 0x0200006C
	thumb_func_end sub_0800c060

	thumb_func_start sub_0800c0c8
sub_0800c0c8:
	push	{ lr }
	add		r3, r0, #0x0
	add		r3, #0x56
	ldrh	r2, [r3, #0x0]
	mov		r1, #0x5
	neg		r1, r1
	and		r1, r2
	strh	r1, [r3, #0x0]
	ldrh	r2, [r0, #0x2a]
	mov		r1, #0x1
	orr		r1, r2
	strh	r1, [r0, #0x2a]
	mov		r1, #0x28
	ldrsh	r0, [r0, r1]
	bl		sub_08002268
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800c0c8

	thumb_func_start sub_0800c0ec
sub_0800c0ec:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r5, #0x0
	add		r6, #0x18
	mov		r1, #0x28
	ldrsh	r0, [r5, r1]
	bl		sub_0800223c
	mov		r0, #0x28
	ldrsh	r1, [r5, r0]
	add		r0, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0808ba04
	add		r1, r5, #0x0
	add		r1, #0x5a
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x56
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800c146
	add		r0, r5, #0x0
	add		r0, #0x5d
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800c146
	ldr		r0, _0800c158
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800c13c
	add		r0, r5, #0x0
	add		r0, #0x5e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800c146
_0800c13c:
	ldr		r1, [r5, #0x20]
	add		r0, r6, #0x0
	mov		r2, #0x1
	bl		sub_0808bed0
_0800c146:
	ldr		r0, _0800c15c
	ldr		r1, [r0, #0x34]
	add		r0, r5, #0x0
	add		r0, #0x5a
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC156, 0x2

_0800c158:	.4byte 0x0200006C
_0800c15c:	.4byte 0x0200DA00
	thumb_func_end sub_0800c0ec

	thumb_func_start sub_0800c160
sub_0800c160:
	push	{ lr }
	ldr		r2, _0800c174
	str		r2, [r0, #0x50]
	ldr		r2, _0800c178
	str		r2, [r0, #0xc]
	bl		sub_0800900c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC172, 0x2

_0800c174:	.4byte 0x080e05ac
_0800c178:	.4byte 0x080e05bc
	thumb_func_end sub_0800c160

	thumb_func_start sub_0800c17c
sub_0800c17c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	str		r2, [r4, #0x60]
	mov		r1, #0x0
	cmp		r2, #0x0
	beq		_0800c18c
	mov		r1, #0x5
_0800c18c:
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0800223c
	add		r0, r4, #0x0
	add		r0, #0x18
	ldr		r2, [r4, #0x60]
	add		r1, r5, #0x0
	bl		sub_08002074
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC1AA, 0xA
	thumb_func_end sub_0800c17c

	thumb_func_start sub_0800c1b4
sub_0800c1b4:
	push	{ lr }
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r2, r0, r3
	bl		sub_0800be04
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC1C4, 0x10
	thumb_func_end sub_0800c1b4

	thumb_func_start sub_0800c1d4
sub_0800c1d4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0800c1f0
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x40
	ldr		r0, _0800c1f4
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0800c1f0:	.4byte 0x080e05dc
_0800c1f4:	.4byte 0x0000F004

.incbin "base.gba", 0xC1F8, 0x8
	thumb_func_end sub_0800c1d4

	thumb_func_start sub_0800c200
sub_0800c200:
	push	{ lr }
	add		r1, r0, #0x0
	mov		r2, #0x0
	ldr		r0, _0800c220
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800c21a
	add		r0, r1, #0x0
	add		r0, #0x5e
	ldrb	r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	lsr		r2, r0, #0x1f
_0800c21a:
	add		r0, r2, #0x0
	pop		{ r1 }
	bx		r1

_0800c220:	.4byte 0x0200006C
	thumb_func_end sub_0800c200

	thumb_func_start sub_0800c224
sub_0800c224:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08009050
	add		r0, r4, #0x0
	add		r0, #0x18
	bl		sub_080020c0
	ldr		r0, _0800c25c
	str		r0, [r4, #0x50]
	ldr		r0, _0800c260
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x5a
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x5e
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0800c25c:	.4byte 0x080e05ac
_0800c260:	.4byte 0x080e05bc
	thumb_func_end sub_0800c224

	thumb_func_start sub_0800c264
sub_0800c264:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, _0800c2c0
	ldr		r4, [r0, #0x4]
	add		r6, r5, #0x0
	add		r6, #0x54
	mov		r1, #0xae
	add		r1, r1, r5
	mov		r9, r1
	mov		r2, #0x1
	neg		r2, r2
	mov		r10, r2
	mov		r1, #0x58
	add		r1, r1, r5
	mov		r8, r1
	add		r7, r0, #0x0
_0800c28c:
	ldrh	r0, [r4, #0x14]
	strh	r0, [r6, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r6, r2]
	add		r0, r5, #0x0
	add		r0, #0x58
	bl		sub_0808e03c
	mov		r1, #0x70
	mov		r0, r9
	strh	r1, [r0, #0x0]
	ldr		r2, _0800c2c4
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	add		r0, r5, #0x0
	bl		sub_0800c5b8
	add		r0, r5, #0x0
	bl		sub_0800c2e4
	cmp		r0, r10
	beq		_0800c2c8
	cmp		r0, #0x1
	beq		_0800c2d2
	b		_0800c2da

.incbin "base.gba", 0xC2BE, 0x2

_0800c2c0:	.4byte 0x02008C54
_0800c2c4:	.4byte 0x0200D112

_0800c2c8:
	ldr		r4, [r4, #0x4]
	cmp		r4, #0x0
	bne		_0800c2da
	ldr		r4, [r7, #0x8]
	b		_0800c2da
_0800c2d2:
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_0800c2da
	ldr		r4, [r7, #0x4]
_0800c2da:
	mov		r0, r8
	bl		sub_0808e278
	b		_0800c28c

.incbin "base.gba", 0xC2E2, 0x2
	thumb_func_end sub_0800c264

	thumb_func_start sub_0800c2e4
sub_0800c2e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x34
	add		r5, r0, #0x0
	mov		r7, #0x0
	add		r0, #0xc0
	str		r0, [sp, #0x4]
	add		r1, r5, #0x0
	add		r1, #0xbf
	str		r1, [sp, #0x8]
	add		r2, r5, #0x0
	add		r2, #0x58
	str		r2, [sp, #0x10]
	add		r0, #0x4
	str		r0, [sp, #0x14]
	add		r1, #0x29
	str		r1, [sp, #0x18]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r2, r5, r2
	str		r2, [sp, #0x1C]
_0800c314:
	mov		r0, #0x0
	mov		r9, r0
	mov		r1, #0x1
	mov		r8, r1
	mov		r0, r9
	ldr		r2, [sp, #0x4]
	strb	r0, [r2, #0x0]
	ldr		r1, [sp, #0x8]
	strb	r0, [r1, #0x0]
	ldr		r0, [sp, #0x10]
	add		r1, r7, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	str		r0, [sp, #0xC]
	ldr		r2, [sp, #0x10]
	ldr		r1, [r2, #0x4]
	ldrb	r0, [r1, #0x6]
	lsl		r0, r0, #0x2
	add		r0, #0xc
	add		r1, r1, r0
	lsl		r0, r7, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldr		r2, [sp, #0x14]
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0800c350
	mov		r0, #0x5
	mov		r8, r0
_0800c350:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_0808b0cc
	ldr		r0, [sp, #0x18]
	bl		sub_080bdc3c
	add		r4, r0, #0x0
	neg		r4, r4
	add		r4, #0x1e
	lsr		r4, r4, #0x1
	ldr		r0, [sp, #0x1C]
	ldr		r1, _0800c3b0
	add		r2, r4, #0x0
	bl		sub_080bdd08
	add		r0, r0, r4
	mov		r1, r9
	strb	r1, [r0, #0x0]
	ldr		r0, [sp, #0x1C]
	ldr		r1, [sp, #0x18]
	bl		sub_080bdac0
	add		r4, r0, #0x0
	ldr		r0, [sp, #0x1C]
	bl		sub_080bdc3c
	add		r1, r0, #0x0
	ldr		r2, _0800c3b0
	add		r1, r1, r2
	add		r0, r4, #0x0
	bl		sub_080bdac0
	ldr		r0, [sp, #0x1C]
	bl		sub_0808b1f0
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0808b0cc
	ldr		r1, _0800c3b4
	mov		r0, r8
	mov		r2, #0x4
	and		r0, r2
	cmp		r0, #0x0
	beq		_0800c3bc
	ldr		r2, _0800c3b8
	b		_0800c3be

_0800c3b0:	.4byte 0x080c707c @ ""
_0800c3b4:	.4byte 0x080c85d8 @ _SEQ%2d%s_OBJxx,_OAMxx
_0800c3b8:	.4byte 0x080c85f4

_0800c3bc:
	ldr		r2, _0800c3e8
_0800c3be:
	add		r0, r1, #0x0
	add		r1, r7, #0x0
	bl		sub_0808b240
	ldr		r0, [sp, #0x10]
	mov		r10, r0
	add		r1, r5, #0x0
	add		r1, #0xb2
	str		r1, [sp, #0x20]
	add		r2, r5, #0x0
	add		r2, #0x58
	str		r2, [sp, #0x24]
	add		r0, r5, #0x0
	add		r0, #0xb8
	str		r0, [sp, #0x28]
	add		r1, #0x4
	str		r1, [sp, #0x2C]
	add		r2, #0x64
	str		r2, [sp, #0x30]
	b		_0800c4d8

.incbin "base.gba", 0xC3E6, 0x2

_0800c3e8:	.4byte 0x080c85f8

_0800c3ec:
	sub		r7, #0x1
_0800c3ee:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800c402
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0800c314
	add		r7, #0x1
_0800c402:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0800c41a
	ldr		r0, _0800c478
	bl		sub_08002268
	add		r0, r5, #0x0
	bl		sub_080b75b0
_0800c41a:
	mov		r0, #0x0
	mov		r1, #0x4
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0800c43a
	ldr		r0, _0800c47c
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	bl		sub_0800c5b8
_0800c43a:
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0800c44e
	mov		r0, r8
	mov		r1, #0x1
	eor		r0, r1
	mov		r8, r0
_0800c44e:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800c488
	mov		r0, r8
	mov		r2, #0x1
	and		r0, r2
	cmp		r0, #0x0
	beq		_0800c480
	add		r7, #0x1
	ldr		r1, [sp, #0x24]
	ldr		r0, [r1, #0x4]
	ldrb	r0, [r0, #0x7]
	cmp		r7, r0
	bge		_0800c472
	b		_0800c314
_0800c472:
	mov		r7, #0x0
	b		_0800c314

.incbin "base.gba", 0xC476, 0x2

_0800c478:	.4byte 0x00000823
_0800c47c:	.4byte 0x0200D112

_0800c480:
	mov		r2, r8
	mov		r0, #0x2
	orr		r2, r0
	mov		r8, r2
_0800c488:
	mov		r0, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800c4a8
	ldr		r2, _0800c534
	ldrh	r1, [r2, #0x0]
	add		r1, #0x1
	strh	r1, [r2, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	bl		sub_0800d644
_0800c4a8:
	mov		r0, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800c4d8
	mov		r0, #0x1
	add		r9, r0
	mov		r0, r9
	mov		r1, #0x5
	bl		sub_080bbd44
	lsl		r0, r0, #0x1
	ldr		r1, _0800c538
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldr		r2, [sp, #0x28]
	strh	r0, [r2, #0x0]
	ldr		r1, [sp, #0x2C]
	strh	r0, [r1, #0x0]
	mov		r0, #0x3
	ldr		r2, [sp, #0x30]
	strb	r0, [r2, #0x0]
_0800c4d8:
	ldr		r1, [sp, #0xC]
	cmp		r1, #0x0
	ble		_0800c554
	mov		r0, r8
	mov		r2, #0x3
	and		r0, r2
	cmp		r0, #0x0
	beq		_0800c4fe
	add		r0, r5, #0x0
	add		r0, #0xc8
	bl		sub_0808b3d4
	cmp		r0, #0x0
	beq		_0800c4fe
	mov		r0, r8
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	mov		r8, r0
_0800c4fe:
	mov		r0, r10
	bl		sub_0808e4a0
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0808b0cc
	ldr		r2, [sp, #0x20]
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	mov		r2, r10
	ldr		r1, [r2, #0x4]
	add		r1, #0xc
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrb	r4, [r0, #0x0]
	ldr		r6, _0800c53c
	mov		r0, r8
	mov		r1, #0x4
	and		r0, r1
	add		r1, r5, #0x0
	add		r1, #0xb2
	cmp		r0, #0x0
	beq		_0800c544
	ldr		r2, _0800c540
	b		_0800c546

_0800c534:	.4byte 0x0200D110
_0800c538:	.4byte 0x080c85cc
_0800c53c:	.4byte 0x080c85fc @ _SEQ%2d%s_OBJ%2d,_OAM%2d
_0800c540:	.4byte 0x080c85f4

_0800c544:
	ldr		r2, _0800c598
_0800c546:
	mov		r0, #0x0
	ldrsh	r3, [r1, r0]
	str		r4, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	bl		sub_0808b240
_0800c554:
	add		r0, r5, #0x0
	bl		sub_080b7650
	ldr		r1, _0800c59c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	ble		_0800c57a
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	bne		_0800c5a4
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	bne		_0800c5a0
_0800c57a:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_0800185c
	cmp		r0, #0x0
	bne		_0800c588
	b		_0800c3ee
_0800c588:
	add		r7, #0x1
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x4]
	ldrb	r0, [r0, #0x7]
	cmp		r7, r0
	blt		_0800c596
	b		_0800c3ec
_0800c596:
	b		_0800c314

_0800c598:	.4byte 0x080c85f8
_0800c59c:	.4byte 0x02008C54

_0800c5a0:
	mov		r0, #0x1
	b		_0800c5a8
_0800c5a4:
	mov		r0, #0x1
	neg		r0, r0
_0800c5a8:
	add		sp, #0x34
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800c2e4

	thumb_func_start sub_0800c5b8
sub_0800c5b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4c
	add		r6, r0, #0x0
	mov		r8, r1
	ldr		r0, _0800c6c0
	mov		r10, r0
	add		r7, r6, #0x0
	add		r7, #0x54
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	bl		sub_08008b30
	ldr		r3, _0800c6c4
	mov		r9, r3
	mov		r2, #0x1a
	ldrsh	r1, [r0, r2]
	mov		r0, r9
	bl		sub_08008c04
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x20]
	bl		sub_080bdc3c
	add		r4, r0, #0x0
	add		r6, #0xe8
	ldr		r1, [r5, #0x20]
	sub		r4, #0x4
	add		r0, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_080bdd08
	add		r0, r0, r4
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_080be914
	mov		r0, #0x0
	mov		r1, #0x11
	bl		sub_0808b0cc
	ldr		r4, _0800c6c8
	add		r0, r4, #0x0
	bl		sub_0808b1f0
	add		r0, r4, #0x0
	bl		sub_0808b1f0
	add		r0, r4, #0x0
	bl		sub_0808b1f0
	mov		r3, r8
	cmp		r3, #0x0
	beq		_0800c6dc
	cmp		r3, #0x1
	bne		_0800c700
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	mov		r0, r10
	bl		sub_08008b30
	add		r4, r0, #0x0
	mov		r2, #0x1a
	ldrsh	r1, [r4, r2]
	mov		r0, r9
	bl		sub_08008c04
	add		r6, r0, #0x0
	ldr		r0, _0800c6cc
	mov		r3, #0x1c
	ldrsh	r1, [r4, r3]
	bl		sub_08008cf4
	mov		r8, r0
	ldr		r0, _0800c6d0
	mov		r2, #0x1e
	ldrsh	r1, [r4, r2]
	bl		sub_08008df4
	mov		r9, r0
	ldr		r4, [r6, #0x1c]
	mov		r0, #0x0
	mov		r1, #0x11
	bl		sub_0808b0cc
	ldr		r5, _0800c6d4
	ldr		r1, [r6, #0x20]
	add		r0, sp, #0xc
	bl		sub_080bdbf0
	bl		sub_080be914
	add		r1, r0, #0x0
	ldrb	r2, [r4, #0x7]
	ldrb	r3, [r4, #0x6]
	add		r0, r5, #0x0
	bl		sub_0808b240
	ldr		r4, _0800c6d8
	mov		r3, r8
	ldr		r1, [r3, #0x28]
	add		r0, sp, #0xc
	bl		sub_080bdbf0
	bl		sub_080be914
	add		r1, r0, #0x0
	mov		r0, r8
	mov		r3, #0x1e
	ldrsh	r2, [r0, r3]
	add		r0, r4, #0x0
	bl		sub_0808b240
	mov		r0, r9
	ldr		r1, [r0, #0x28]
	add		r0, sp, #0xc
	bl		sub_080bdbf0
	bl		sub_080be914
	add		r1, r0, #0x0
	mov		r3, r9
	mov		r0, #0x1e
	ldrsh	r2, [r3, r0]
	add		r0, r4, #0x0
	bl		sub_0808b240
	b		_0800c700

_0800c6c0:	.4byte 0x02008C54
_0800c6c4:	.4byte 0x020092EC
_0800c6c8:	.4byte 0x080c707c @ ""
_0800c6cc:	.4byte 0x02009984
_0800c6d0:	.4byte 0x02009E1C
_0800c6d4:	.4byte 0x080c861c @ %s_%d,%d
_0800c6d8:	.4byte 0x080c8628 @ %s_%d

_0800c6dc:
	ldr		r0, _0800c710
	ldr		r5, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x13
	bl		sub_0808b0cc
	ldr		r0, _0800c714
	ldrb	r1, [r5, #0xc]
	ldrb	r2, [r5, #0xd]
	ldrb	r3, [r5, #0xf]
	ldrb	r4, [r5, #0x10]
	str		r4, [sp, #0x0]
	ldrb	r4, [r5, #0x11]
	str		r4, [sp, #0x4]
	ldrb	r4, [r5, #0x12]
	str		r4, [sp, #0x8]
	bl		sub_0808b240
_0800c700:
	add		sp, #0x4c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800c710:	.4byte 0x0200BF08
_0800c714:	.4byte 0x080c8630 @ BUILD_DATE_'%02d/%d/%d_%d:%d:%02
	thumb_func_end sub_0800c5b8

	thumb_func_start sub_0800c718
sub_0800c718:
	push	{ r4, r5, lr }
	ldr		r4, _0800c78c
	ldr		r1, _0800c790
	add		r0, r4, r1
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	ldr		r2, _0800c794
	bl		sub_080b73f8
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0800c798
	str		r0, [r5, #0x4c]
	ldr		r0, _0800c79c
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x58
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0xc8
	bl		sub_0808b374
	add		r1, r5, #0x0
	add		r1, #0xc4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r2, _0800c7a0
	ldr		r0, [r2, #0x0]
	ldr		r1, _0800c7a4
	orr		r0, r1
	str		r0, [r2, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x54
	ldr		r0, _0800c7a8
	strh	r0, [r1, #0x0]
	ldr		r0, _0800c7ac
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r5, #0x0
	bl		sub_0800d644
	ldr		r0, _0800c7b0
	bl		sub_0800223c
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0800c78c:	.4byte 0x0200DC30
_0800c790:	.4byte 0xFFFFFDD0
_0800c794:	.4byte 0x0000047F
_0800c798:	.4byte 0x080e072c
_0800c79c:	.4byte 0x080e0744
_0800c7a0:	.4byte 0x0200CE98
_0800c7a4:	.4byte 0x00000303
_0800c7a8:	.4byte 0x0000FFFF
_0800c7ac:	.4byte 0x0200D110
_0800c7b0:	.4byte 0x00000FEC
	thumb_func_end sub_0800c718

	thumb_func_start sub_0800c7b4
sub_0800c7b4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	str		r0, [sp, #0xc]
	add		r0, #0x58
	str		r0, [sp, #0x10]
	ldr		r1, _0800c8e8
	str		r1, [sp, #0x18]
_0800c7ca:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0808b0cc
	ldr		r2, _0800c8ec
	ldr		r0, [r2, #0x0]
	add		r2, r0, #0x0
	cmp		r0, #0x0
	bge		_0800c7de
	neg		r2, r0
_0800c7de:
	asr		r2, r2, #0x10
	cmp		r0, #0x0
	bge		_0800c7e6
	neg		r2, r2
_0800c7e6:
	ldr		r3, _0800c8f0
	ldr		r0, [r3, #0x0]
	add		r3, r0, #0x0
	cmp		r0, #0x0
	bge		_0800c7f2
	neg		r3, r0
_0800c7f2:
	asr		r3, r3, #0x10
	cmp		r0, #0x0
	bge		_0800c7fa
	neg		r3, r3
_0800c7fa:
	ldr		r0, [sp, #0x10]
	ldr		r1, _0800c8f4
	bl		sub_0808c63c
	ldr		r0, [sp, #0x10]
	bl		sub_080bdc3c
	add		r1, r0, #0x0
	ldr		r0, _0800c8f8
	add		r1, r1, r0
	ldr		r0, [sp, #0x10]
	bl		sub_080bdac0
	bl		sub_0808b1f0
	mov		r1, #0x0
	str		r1, [sp, #0x14]
	mov		r10, r1
_0800c81e:
	ldr		r0, [sp, #0xc]
	bl		sub_080b7650
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_0800c904
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0800c842
	mov		r2, #0x1
	neg		r2, r2
	str		r2, [sp, #0x14]
_0800c842:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0800c852
	mov		r3, #0x1
	str		r3, [sp, #0x14]
_0800c852:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0800c864
	mov		r0, #0x1
	neg		r0, r0
	mov		r10, r0
_0800c864:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0800c874
	mov		r1, #0x1
	mov		r10, r1
_0800c874:
	ldr		r2, [sp, #0x14]
	cmp		r2, #0x0
	bne		_0800c880
	mov		r3, r10
	cmp		r3, #0x0
	beq		_0800c81e
_0800c880:
	mov		r0, #0x1
	mov		r9, r0
	ldr		r1, _0800c8fc
	add		r1, #0x4
	mov		r8, r1
	ldr		r7, _0800c900
	add		r7, #0x4
	ldr		r6, [sp, #0x18]
	add		r6, #0x54
_0800c892:
	ldr		r2, [sp, #0xc]
	ldr		r0, [r2, #0x54]
	mov		r3, r9
	lsl		r1, r3, #0x3
	add		r1, r1, r0
	ldr		r0, [r1, #0x4]
	ldr		r3, [sp, #0x14]
	add		r2, r0, #0x0
	mul		r2, r3
	ldr		r0, [r7, #0x0]
	add		r5, r0, r2
	ldr		r0, [r1, #0x8]
	mov		r1, r10
	mul		r1, r0
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r4, r0, r1
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	mov		r3, sp
	bl		sub_0808ce48
	cmp		r0, #0x0
	blt		_0800c8cc
	ldr		r0, [sp, #0x4]
	sub		r5, r5, r0
	ldr		r0, [sp, #0x8]
	sub		r4, r4, r0
_0800c8cc:
	stmia	r7!, {  r5 }
	mov		r3, r8
	add		r3, #0x4
	mov		r8, r3
	sub		r3, #0x4
	stmia	r3!, {  r4 }
	add		r6, #0x54
	mov		r0, #0x1
	add		r9, r0
	mov		r1, r9
	cmp		r1, #0x3
	ble		_0800c892
	b		_0800c7ca

.incbin "base.gba", 0xC8E6, 0x2

_0800c8e8:	.4byte 0x0200E9AC
_0800c8ec:	.4byte 0x0200CE30
_0800c8f0:	.4byte 0x0200CE44
_0800c8f4:	.4byte 0x080c8660 @ (%d,%d)
_0800c8f8:	.4byte 0x080c707c @ ""
_0800c8fc:	.4byte 0x0200CE38
_0800c900:	.4byte 0x0200CE24

_0800c904:
	ldr		r0, _0800c91c
	bl		sub_08002268
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC91A, 0x2

_0800c91c:	.4byte 0x00000823
	thumb_func_end sub_0800c7b4

	thumb_func_start sub_0800c920
sub_0800c920:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	bl		sub_080b74f4
	add		r4, r7, #0x0
	add		r4, #0x40
	add		r0, r4, #0x0
	bl		sub_08009050
	add		r0, r7, #0x0
	add		r0, #0x58
	bl		sub_080020c0
	add		r2, r7, #0x0
	add		r2, #0x90
	ldr		r0, _0800c998
	str		r0, [r2, #0x0]
	ldr		r0, _0800c99c
	str		r0, [r7, #0x4c]
	add		r1, r7, #0x0
	add		r1, #0x9a
	mov		r5, #0x0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x9e
	add		r0, r0, r7
	mov		r8, r0
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x9d
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	ldr		r1, _0800c9a0
	str		r1, [r2, #0x0]
	ldr		r0, _0800c9a4
	str		r0, [r7, #0x4c]
	str		r1, [r2, #0x0]
	ldr		r0, _0800c9a8
	str		r0, [r7, #0x4c]
	ldr		r0, _0800c9ac
	str		r0, [r7, #0xc]
	ldr		r1, _0800c9b0
	add		r0, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_0800c17c
	mov		r0, r8
	strb	r5, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xC996, 0x2

_0800c998:	.4byte 0x080e05ac
_0800c99c:	.4byte 0x080e05bc
_0800c9a0:	.4byte 0x080e08bc
_0800c9a4:	.4byte 0x080e089c
_0800c9a8:	.4byte 0x080e0604
_0800c9ac:	.4byte 0x080e0624
_0800c9b0:	.4byte 0x00000802
	thumb_func_end sub_0800c920

	thumb_func_start sub_0800c9b4
sub_0800c9b4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	cmp		r1, #0x18
	bgt		_0800c9c6
	cmp		r1, #0x17
	bge		_0800c9de
	cmp		r1, #0x0
	beq		_0800ca00
	b		_0800c9f2
_0800c9c6:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0800ca00
	cmp		r1, r0
	bgt		_0800c9d8
	cmp		r1, #0x81
	beq		_0800ca00
	b		_0800c9f2
_0800c9d8:
	ldr		r0, _0800c9e4
	cmp		r1, r0
	bne		_0800c9f2
_0800c9de:
	str		r2, [r4, #0x60]
	b		_0800ca00

.incbin "base.gba", 0xC9E2, 0x2

_0800c9e4:	.4byte 0x00000185

_0800c9e8:
	ldr		r0, [r7, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	b		_0800ca3c
_0800c9f2:
	ldr		r0, _0800ca0c
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800ca00:
	ldr		r7, _0800ca10
	add		r6, r4, #0x0
	add		r6, #0x40
	add		r5, r4, #0x0
	add		r5, #0x96
	b		_0800ca24

_0800ca0c:	.4byte 0x080c8668 @ a_toda/testsub0.cpp
_0800ca10:	.4byte 0x080c867c

_0800ca14:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, _0800ca44
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0800c9e8
_0800ca24:
	add		r0, r6, #0x0
	bl		sub_0800c060
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_0800ca14
	ldr		r0, [r7, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
_0800ca3c:
	str		r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800ca44:	.4byte 0x00000802
	thumb_func_end sub_0800c9b4

	thumb_func_start sub_0800ca48
sub_0800ca48:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x48
	add		r6, r0, #0x0
	add		r2, r6, #0x0
	add		r2, #0x5e
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	add		r3, r6, #0x0
	add		r3, #0x60
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	sub		r1, r1, r0
	cmp		r1, #0x6
	ble		_0800ca72
	ldrh	r0, [r2, #0x0]
	sub		r0, #0x6
	strh	r0, [r3, #0x0]
_0800ca72:
	ldr		r4, _0800cad8
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0800ca92
	bl		sub_080bdc3c
	neg		r0, r0
	add		r0, #0x1e
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r1, #0x13
	bl		sub_0808b0cc
	ldr		r0, [r4, #0x0]
	bl		sub_0808b1f0
_0800ca92:
	mov		r5, #0x0
	mov		r9, r5
	add		r0, r6, #0x0
	add		r0, #0x60
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	add		r1, r6, #0x0
	add		r1, #0x62
	mov		r4, #0x0
	ldrsh	r2, [r1, r4]
	mov		r5, #0x5e
	add		r5, r5, r6
	mov		r8, r5
	add		r7, r0, #0x0
	mov		r10, r1
	sub		r0, #0x18
	str		r0, [sp, #0x44]
	cmp		r3, r2
	beq		_0800cb9e
	add		r5, r6, #0x0
	add		r5, #0x64
	sub		r1, #0x6
	str		r1, [sp, #0x40]
_0800cac0:
	ldr		r2, _0800cadc
	ldrh	r0, [r2, #0x0]
	strh	r0, [r5, #0x0]
	mov		r4, r8
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r3, r0
	bne		_0800cae4
	ldr		r2, _0800cae0
	ldrh	r0, [r2, #0x0]
	b		_0800cb16

.incbin "base.gba", 0xCAD6, 0x2

_0800cad8:	.4byte 0x0200A860
_0800cadc:	.4byte 0x080c8680
_0800cae0:	.4byte 0x080c8684

_0800cae4:
	mov		r4, r9
	cmp		r4, #0x0
	bne		_0800cafc
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x0
	ble		_0800cb18
	ldr		r2, _0800caf8
	ldrh	r0, [r2, #0x0]
	b		_0800cb16

_0800caf8:	.4byte 0x080c8688

_0800cafc:
	mov		r4, r9
	cmp		r4, #0x6
	bne		_0800cb18
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	mov		r2, r10
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	sub		r0, #0x7
	cmp		r1, r0
	bge		_0800cb18
	ldr		r1, _0800cc34
	ldrh	r0, [r1, #0x0]
_0800cb16:
	strh	r0, [r5, #0x0]
_0800cb18:
	lsl		r0, r3, #0x2
	ldr		r2, _0800cc38
	add		r4, r0, r2
	ldr		r1, [r4, #0x0]
	mov		r0, sp
	bl		sub_080bdbf0
	mov		r1, #0x0
	bl		sub_080b6ad8
	ldr		r3, [sp, #0x40]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x0
	ble		_0800cb52
	mov		r0, sp
	ldr		r1, _0800cc3c
	bl		sub_080bdd78
	cmp		r0, sp
	bne		_0800cb52
	ldr		r1, [r4, #0x0]
	add		r1, #0x7
	mov		r0, sp
	bl		sub_080bdbf0
	mov		r1, #0x0
	bl		sub_080b6ad8
_0800cb52:
	add		r0, r5, #0x0
	ldr		r1, _0800cc40
	bl		sub_080bdac0
	mov		r1, sp
	bl		sub_080bdac0
	mov		r1, r9
	add		r1, #0x6
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x1
	bl		sub_0808b0cc
	add		r0, r5, #0x0
	bl		sub_080bdc3c
	add		r1, r0, #0x0
	ldr		r2, _0800cc44
	add		r1, r1, r2
	add		r0, r5, #0x0
	bl		sub_080bdac0
	bl		sub_0808b1f0
	mov		r3, #0x1
	add		r9, r3
	mov		r4, r9
	cmp		r4, #0x6
	bgt		_0800cb9e
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	add		r3, r4, r0
	mov		r2, r10
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	cmp		r3, r0
	bne		_0800cac0
_0800cb9e:
	mov		r5, #0x5e
	add		r5, r5, r6
	mov		r9, r5
	mov		r4, r8
_0800cba6:
	ldr		r0, [sp, #0x44]
	mov		r1, #0xf
	mov		r2, #0x0
	bl		sub_0800067c
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x9
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0800cbd6
	ldr		r2, [r6, #0xc]
	mov		r1, #0x28
	ldrsh	r0, [r2, r1]
	add		r0, r6, r0
	mov		r3, r8
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	ldr		r2, [r2, #0x2c]
	bl		sub_080bbc78
_0800cbd6:
	mov		r0, #0x0
	mov		r1, #0x6
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0800cbf4
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r2, [r1, #0x2c]
	mov		r1, #0x1
	neg		r1, r1
	bl		sub_080bbc78
_0800cbf4:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800cc48
	mov		r3, r8
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	cmp		r0, #0x0
	ble		_0800cc48
	add		r1, r0, #0x0
	add		r2, r6, #0x0
	add		r2, #0x60
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	add		r0, #0x3
	cmp		r1, r0
	bgt		_0800cc28
	ldrh	r1, [r2, #0x0]
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	cmp		r0, #0x0
	ble		_0800cc28
	sub		r0, r1, #0x1
	strh	r0, [r2, #0x0]
_0800cc28:
	mov		r5, r9
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	strh	r0, [r5, #0x0]
	b		_0800ca72

.incbin "base.gba", 0xCC32, 0x2

_0800cc34:	.4byte 0x080c8688
_0800cc38:	.4byte 0x0200A920
_0800cc3c:	.4byte 0x080c868c @ SCRIPT_
_0800cc40:	.4byte 0x080c8694
_0800cc44:	.4byte 0x080c707c @ ""

_0800cc48:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800cba6
	mov		r0, r8
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, r10
	mov		r0, #0x0
	ldrsh	r3, [r5, r0]
	sub		r0, r3, #0x1
	cmp		r2, r0
	bge		_0800cba6
	mov		r5, #0x0
	ldrsh	r1, [r7, r5]
	add		r0, r1, #0x3
	cmp		r2, r0
	blt		_0800cc7c
	sub		r0, r3, #0x7
	cmp		r1, r0
	bge		_0800cc7c
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
_0800cc7c:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	b		_0800ca72
	thumb_func_end sub_0800ca48

	thumb_func_start sub_0800cc84
sub_0800cc84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	mov		r7, #0x0
	ldrh	r0, [r4, #0x2]
	lsr		r0, r0, #0x4
	ldr		r1, _0800cd08
	cmp		r0, r1
	beq		_0800ccf6
	mov		r6, #0xfe
	lsl		r6, r6, #0x7
	ldr		r5, _0800cd0c
	mov		r9, r1
	ldr		r1, _0800cd10
	mov		r10, r1
	ldr		r1, _0800cd14
	mov		r8, r1
_0800ccac:
	ldr		r1, _0800cd18
	cmp		r0, r1
	bne		_0800cce4
	ldrh	r1, [r4, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, r6
	bne		_0800cce4
	ldr		r0, [r5, #0x0]
	add		r1, r4, #0x4
	bl		sub_0808b7e0
	mov		r1, r8
	add		r1, #0x4
	mov		r8, r1
	sub		r1, #0x4
	stmia	r1!, { r0 }
	ldr		r2, [r5, #0x0]
	ldr		r1, [r0, #0x4]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	mov		r1, r10
	add		r1, #0x4
	mov		r10, r1
	sub		r1, #0x4
	stmia	r1!, { r0 }
	add		r7, #0x1
_0800cce4:
	ldrh	r0, [r4, #0x2]
	mov		r1, #0xf
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	ldrh	r0, [r4, #0x2]
	lsr		r0, r0, #0x4
	cmp		r0, r9
	bne		_0800ccac
_0800ccf6:
	add		r0, r7, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xCD06, 0x2

_0800cd08:	.4byte 0x00000F9C
_0800cd0c:	.4byte 0x0200BF08
_0800cd10:	.4byte 0x0200A920
_0800cd14:	.4byte 0x0200A868
_0800cd18:	.4byte 0x00000F84
	thumb_func_end sub_0800cc84

	thumb_func_start sub_0800cd1c
sub_0800cd1c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	str		r0, [sp, #0x8]
	str		r1, [sp, #0xC]
	mov		r9, r2
	mov		r0, #0x0
	bl		sub_08001424
	ldr		r4, _0800ce84
	add		r0, r4, #0x0
	sub		r0, #0x40
	mov		r1, #0xc8
	ldr		r2, _0800ce88
	bl		sub_080b73f8
	ldr		r1, [sp, #0xC]
	bl		sub_0800c920
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r1, _0800ce8c
	mov		r0, sp
	bl		sub_0808ad58
	mov		r0, #0xc0
	lsl		r0, r0, #0x13
	mov		r2, #0xc0
	lsl		r2, r2, #0x9
	mov		r1, #0x0
	bl		sub_0808c828
	mov		r0, #0xa0
	lsl		r0, r0, #0x13
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	mov		r1, #0x0
	bl		sub_0808c828
	bl		sub_0808aff4
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	bl		sub_0800132c
_0800cd82:
	ldr		r0, [sp, #0xC]
	bl		sub_0800cc84
	mov		r8, r0
	cmp		r0, #0x0
	bne		_0800cd90
	b		_0800ceac
_0800cd90:
	ldr		r0, _0800ce90
	mov		r10, r0
	ldr		r0, _0800ce94
	add		r0, r10
	mov		r1, #0xa4
	ldr		r2, _0800ce88
	bl		sub_080b73f8
	add		r6, r0, #0x0
	add		r4, sp, #0x4
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	add		r1, r4, #0x0
	bl		sub_080004f4
	add		r0, r6, #0x0
	add		r0, #0x48
	bl		sub_080006ec
	ldr		r0, _0800ce98
	str		r0, [r6, #0x54]
	ldr		r0, _0800ce9c
	str		r0, [r6, #0xc]
	ldr		r0, _0800cea0
	str		r6, [r0, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x5c
	mov		r0, #0x0
	mov		r1, sp
	ldrh	r1, [r1, #0x8]
	strh	r1, [r7, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x62
	mov		r2, r8
	strh	r2, [r1, #0x0]
	add		r5, r6, #0x0
	add		r5, #0x60
	strh	r0, [r5, #0x0]
	mov		r1, #0x5e
	add		r1, r1, r6
	mov		r8, r1
	strh	r0, [r1, #0x0]
	mov		r0, r10
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	lsl		r0, r1, #0x2
	mov		r2, #0x20
	add		r2, r9
	mov		r10, r2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	ldr		r2, [sp, #0xC]
	cmp		r0, r2
	bne		_0800ce22
	lsl		r0, r1, #0x1
	add		r0, r9
	ldrh	r0, [r0, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	lsl		r1, r1, #0x1
	mov		r0, r9
	add		r0, #0x10
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	strh	r0, [r5, #0x0]
_0800ce22:
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0800cea4
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, _0800ce8c
	mov		r0, sp
	bl		sub_0808ad58
	add		r4, r0, #0x0
	cmp		r4, #0x0
	blt		_0800ce66
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x1
	add		r0, r9
	mov		r2, r8
	ldrh	r1, [r2, #0x0]
	strh	r1, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x1
	mov		r1, r9
	add		r1, #0x10
	add		r1, r1, r0
	ldrh	r0, [r5, #0x0]
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r1, [sp, #0xC]
	str		r1, [r0, #0x0]
_0800ce66:
	add		r0, r6, #0x0
	bl		sub_080b75b0
	cmp		r4, #0x0
	blt		_0800ceac
	ldr		r0, [sp, #0x8]
	add		r0, #0x1
	ldr		r2, _0800cea8
	lsl		r1, r4, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	mov		r2, r9
	bl		sub_0800cd1c
	b		_0800cd82

_0800ce84:	.4byte 0x0200DA40
_0800ce88:	.4byte 0x0000047F
_0800ce8c:	.4byte 0x80808080
_0800ce90:	.4byte 0x0200DC30
_0800ce94:	.4byte 0xFFFFFDD0
_0800ce98:	.4byte 0x080e06a4
_0800ce9c:	.4byte 0x080e06bc
_0800cea0:	.4byte 0x0200A864
_0800cea4:	.4byte 0xFFFFF105
_0800cea8:	.4byte 0x0200A868

_0800ceac:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800cd1c

	thumb_func_start sub_0800cebc
sub_0800cebc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	str		r0, [sp, #0x8]
	mov		r10, r1
	ldr		r0, _0800d01c
	ldr		r1, [sp, #0x8]
	str		r1, [r0, #0x0]
	mov		r2, #0x0
	mov		r8, r2
	mov		r4, #0x0
	ldr		r1, _0800d020
	ldr		r0, [r1, #0x0]
	mov		r2, #0x6
	ldrsh	r0, [r0, r2]
	mov		r2, sp
	add		r2, #0x4
	str		r2, [sp, #0x10]
	cmp		r8, r0
	bge		_0800cf1a
	add		r5, r1, #0x0
	ldr		r7, _0800d024
	ldr		r6, _0800d028
_0800cef0:
	ldr		r0, [r5, #0x0]
	add		r1, r4, #0x0
	bl		sub_0808b798
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0800cf0e
	stmia	r6!, {  r1 }
	ldr		r0, [r5, #0x0]
	ldr		r1, [r1, #0x4]
	bl		sub_0808b7cc
	stmia	r7!, { r0 }
	mov		r0, #0x1
	add		r8, r0
_0800cf0e:
	add		r4, #0x1
	ldr		r0, [r5, #0x0]
	mov		r1, #0x6
	ldrsh	r0, [r0, r1]
	cmp		r4, r0
	blt		_0800cef0
_0800cf1a:
	mov		r0, #0x0
	bl		sub_08001424
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	bl		sub_0800132c
	ldr		r5, _0800d02c
	ldr		r2, _0800d030
	add		r0, r5, r2
	mov		r1, #0xa4
	ldr		r2, _0800d034
	bl		sub_080b73f8
	add		r6, r0, #0x0
	mov		r4, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, sp
	bl		sub_080004f4
	add		r0, r6, #0x0
	add		r0, #0x48
	bl		sub_080006ec
	ldr		r0, _0800d038
	str		r0, [r6, #0x54]
	ldr		r0, _0800d03c
	str		r0, [r6, #0xc]
	ldr		r0, _0800d040
	str		r6, [r0, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x5c
	strh	r4, [r7, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x62
	mov		r1, r8
	strh	r1, [r0, #0x0]
	mov		r2, #0x60
	add		r2, r2, r6
	mov		r9, r2
	strh	r4, [r2, #0x0]
	mov		r0, #0x5e
	add		r0, r0, r6
	mov		r8, r0
	strh	r4, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	lsl		r0, r1, #0x2
	mov		r2, r10
	add		r2, #0x20
	str		r2, [sp, #0xC]
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	mov		r5, r10
	add		r5, #0x10
	ldr		r2, [sp, #0x8]
	cmp		r0, r2
	bne		_0800cfb6
	lsl		r0, r1, #0x1
	add		r0, r10
	ldrh	r0, [r0, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	ldrh	r0, [r0, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
_0800cfb6:
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0800d044
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, _0800d048
	ldr		r0, [sp, #0x10]
	bl		sub_0808ad58
	add		r4, r0, #0x0
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	lsl		r0, r0, #0x1
	add		r0, r10
	mov		r2, r8
	ldrh	r1, [r2, #0x0]
	strh	r1, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r2, r9
	ldrh	r1, [r2, #0x0]
	strh	r1, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	ldr		r2, [sp, #0xC]
	add		r0, r2, r0
	ldr		r1, [sp, #0x8]
	str		r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_080b75b0
	ldr		r0, _0800d028
	lsl		r4, r4, #0x2
	add		r4, r4, r0
	ldr		r1, [r4, #0x0]
	mov		r0, #0x1
	mov		r2, r10
	bl		sub_0800cd1c
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800d01c:	.4byte 0x0200A860
_0800d020:	.4byte 0x0200BF08
_0800d024:	.4byte 0x0200A920
_0800d028:	.4byte 0x0200A868
_0800d02c:	.4byte 0x0200DC30
_0800d030:	.4byte 0xFFFFFDD0
_0800d034:	.4byte 0x0000047F
_0800d038:	.4byte 0x080e06a4
_0800d03c:	.4byte 0x080e06bc
_0800d040:	.4byte 0x0200A864
_0800d044:	.4byte 0xFFFFF105
_0800d048:	.4byte 0x80808080
	thumb_func_end sub_0800cebc

	thumb_func_start sub_0800d04c
sub_0800d04c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x44]
	mov		r8, r0
	mov		r1, #0x40
	add		r1, r1, r6
	mov		r9, r1
	ldr		r2, _0800d06c
	mov		r10, r2
	b		_0800d1cc

.incbin "base.gba", 0xD06A, 0x2

_0800d06c:	.4byte 0x0200DC30

_0800d070:
	mov		r0, #0x0
	bl		sub_08001424
	ldr		r0, _0800d170
	mov		r1, #0xa4
	ldr		r2, _0800d174
	bl		sub_080b73f8
	mov		r3, r9
	mov		r1, #0x0
	ldrsh	r2, [r3, r1]
	mov		r1, sp
	add		r3, r4, #0x0
	bl		sub_0800d220
	add		r4, r0, #0x0
	ldr		r3, [r6, #0x48]
	add		r5, r4, #0x0
	add		r5, #0x5c
	mov		r0, #0x0
	ldrsh	r2, [r5, r0]
	lsl		r1, r2, #0x2
	add		r0, r3, #0x0
	add		r0, #0x20
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x40
	cmp		r0, r8
	bne		_0800d0cc
	lsl		r0, r2, #0x1
	add		r0, r3, r0
	ldrh	r0, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x5e
	strh	r0, [r2, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	lsl		r1, r1, #0x1
	add		r0, r3, #0x0
	add		r0, #0x10
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x60
	strh	r1, [r0, #0x0]
_0800d0cc:
	ldr		r0, [r6, #0x1c]
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0800d178
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r3, _0800d17c
	str		r3, [sp, #0x0]
	add		r5, r3, #0x0
_0800d0e8:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x0]
	cmp		r0, r5
	beq		_0800d0e8
	cmp		r0, #0x0
	blt		_0800d142
	ldr		r2, [r6, #0x48]
	add		r3, r4, #0x0
	add		r3, #0x5c
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	lsl		r1, r1, #0x1
	add		r1, r2, r1
	add		r0, r4, #0x0
	add		r0, #0x5e
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	lsl		r0, r0, #0x1
	add		r1, r2, #0x0
	add		r1, #0x10
	add		r1, r1, r0
	add		r0, r4, #0x0
	add		r0, #0x60
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	lsl		r0, r0, #0x2
	add		r2, #0x20
	add		r2, r2, r0
	mov		r3, r8
	str		r3, [r2, #0x0]
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
	ldr		r0, [sp, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _0800d180
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
_0800d142:
	add		r0, r4, #0x0
	bl		sub_080b75b0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	blt		_0800d1b0
	ldr		r0, _0800d184
	add		r0, r10
	mov		r1, #0x80
	ldr		r2, _0800d174
	bl		sub_080b73f8
	ldr		r1, _0800d188
	mov		r2, r8
	ldr		r3, _0800d17c
	bl		sub_08001ef0
	add		r1, r0, #0x0
	mov		r0, r10
	mov		r2, #0x0
	bl		sub_080b781c
	b		_0800d192

_0800d170:	.4byte 0x0200DA00
_0800d174:	.4byte 0x0000047F
_0800d178:	.4byte 0xFFFFF105
_0800d17c:	.4byte 0x80808080
_0800d180:	.4byte 0x0200A868
_0800d184:	.4byte 0xFFFFFDD0
_0800d188:	.4byte 0x00000822

_0800d18c:
	add		r0, r6, #0x0
	bl		sub_080b7690
_0800d192:
	ldr		r0, _0800d1a8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800d18c
	ldr		r0, _0800d1ac
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0800d1e8
	b		_0800d1cc

_0800d1a8:	.4byte 0x00000822
_0800d1ac:	.4byte 0x00000821

_0800d1b0:
	ldrh	r0, [r7, #0x0]
	sub		r0, #0x1
	strh	r0, [r7, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_0800d1e8
	ldr		r1, [r6, #0x48]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	lsl		r0, r0, #0x2
	add		r1, #0x20
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	mov		r8, r1
_0800d1cc:
	mov		r0, r8
	bl		sub_0800cc84
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0800d1da
	b		_0800d070
_0800d1da:
	mov		r3, r9
	ldrh	r0, [r3, #0x0]
	sub		r0, #0x1
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800d1cc
_0800d1e8:
	mov		r0, #0x0
	bl		sub_08001424
	ldr		r0, _0800d204
	bl		sub_08002268
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800d204:	.4byte 0x00000821
	thumb_func_end sub_0800d04c

	thumb_func_start sub_0800d208
sub_0800d208:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	bl		sub_080004e8
_0800d216:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0800d216
	thumb_func_end sub_0800d208

	thumb_func_start sub_0800d220
sub_0800d220:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	add		r1, r4, #0x0
	bl		sub_080004f4
	add		r0, r7, #0x0
	add		r0, #0x48
	bl		sub_080006ec
	ldr		r2, _0800d270
	str		r2, [r7, #0x54]
	ldr		r0, _0800d274
	str		r0, [r7, #0xc]
	ldr		r0, _0800d278
	str		r7, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x5c
	mov		r1, #0x0
	strh	r5, [r0, #0x0]
	add		r0, #0x6
	strh	r6, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	str		r2, [r7, #0x54]
	ldr		r0, _0800d27c
	str		r0, [r7, #0xc]
	add		r0, r7, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xD26E, 0x2

_0800d270:	.4byte 0x080e06a4
_0800d274:	.4byte 0x080e06bc
_0800d278:	.4byte 0x0200A864
_0800d27c:	.4byte 0x080e064c
	thumb_func_end sub_0800d220

	thumb_func_start sub_0800d280
sub_0800d280:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080b74f4
	ldr		r0, _0800d2ac
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x40
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	str		r5, [r4, #0x48]
	str		r6, [r4, #0x44]
	ldr		r0, _0800d2b0
	bl		sub_0800223c
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xD2AA, 0x2

_0800d2ac:	.4byte 0x080e067c
_0800d2b0:	.4byte 0x00000821
	thumb_func_end sub_0800d280

	thumb_func_start sub_0800d2b4
sub_0800d2b4:
	push	{ lr }
	ldr		r1, _0800d2c0
	bl		sub_0800cebc
	pop		{ r0 }
	bx		r0

_0800d2c0:	.4byte 0x0200D114
	thumb_func_end sub_0800d2b4

	thumb_func_start sub_0800d2c4
sub_0800d2c4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0800d2e0
	cmp		r1, r0
	bne		_0800d2d4
	add		r0, r4, #0x0
	bl		sub_0800ca48
_0800d2d4:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0800d2d4

.incbin "base.gba", 0xD2DE, 0x2

_0800d2e0:	.4byte 0xFFFFF105

.incbin "base.gba", 0xD2E4, 0xD0
	thumb_func_end sub_0800d2c4

	thumb_func_start sub_0800d3b4
sub_0800d3b4:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x48
	ldr		r0, _0800d3f8
	str		r0, [r6, #0x54]
	ldr		r0, _0800d3fc
	str		r0, [r6, #0xc]
	ldr		r0, _0800d400
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r0, _0800d404
	str		r1, [r0, #0x0]
	bl		sub_080093dc
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0800d3f2
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0800d3f2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800d3f8:	.4byte 0x080e06a4
_0800d3fc:	.4byte 0x080e06bc
_0800d400:	.4byte 0x0200A860
_0800d404:	.4byte 0x0200A864
	thumb_func_end sub_0800d3b4

	thumb_func_start sub_0800d408
sub_0800d408:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	add		r1, r4, #0x0
	bl		sub_080004f4
	add		r0, r7, #0x0
	add		r0, #0x48
	bl		sub_080006ec
	ldr		r0, _0800d450
	str		r0, [r7, #0x54]
	ldr		r0, _0800d454
	str		r0, [r7, #0xc]
	ldr		r0, _0800d458
	str		r7, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x5c
	mov		r1, #0x0
	strh	r5, [r0, #0x0]
	add		r0, #0x6
	strh	r6, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800d450:	.4byte 0x080e06a4
_0800d454:	.4byte 0x080e06bc
_0800d458:	.4byte 0x0200A864
	thumb_func_end sub_0800d408

	thumb_func_start sub_0800d45c
sub_0800d45c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	add		r1, r6, #0x0
	add		r1, #0x44
	bl		sub_080004f4
	add		r0, r6, #0x0
	add		r0, #0x48
	bl		sub_080006ec
	ldr		r0, _0800d4a4
	str		r0, [r6, #0x54]
	ldr		r0, _0800d4a8
	str		r0, [r6, #0xc]
	ldr		r0, _0800d4ac
	str		r6, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x5c
	mov		r1, #0x0
	strh	r4, [r0, #0x0]
	add		r0, #0x6
	strh	r5, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800d4a4:	.4byte 0x080e06a4
_0800d4a8:	.4byte 0x080e06bc
_0800d4ac:	.4byte 0x0200A864

.incbin "base.gba", 0xD4B0, 0x24
	thumb_func_end sub_0800d45c

	thumb_func_start sub_0800d4d4
sub_0800d4d4:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r4, _0800d508
	add		r0, r4, #0x0
	sub		r0, #0x40
	mov		r1, #0xc8
	ldr		r2, _0800d50c
	bl		sub_080b73f8
	add		r1, r5, #0x0
	bl		sub_0800c920
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r1, _0800d510
	mov		r0, sp
	bl		sub_0808ad58
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0800d508:	.4byte 0x0200DA40
_0800d50c:	.4byte 0x0000047F
_0800d510:	.4byte 0x80808080
	thumb_func_end sub_0800d4d4

	thumb_func_start sub_0800d514
sub_0800d514:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r3, r5, #0x0
	add		r3, #0x90
	ldr		r2, _0800d554
	str		r2, [r3, #0x0]
	add		r0, #0x40
	ldr		r1, _0800d558
	str		r1, [r5, #0x4c]
	ldr		r1, _0800d55c
	str		r1, [r5, #0xc]
	str		r2, [r3, #0x0]
	ldr		r1, _0800d560
	str		r1, [r5, #0x4c]
	mov		r1, #0x0
	bl		sub_0800c160
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0800d54e
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0800d54e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0800d554:	.4byte 0x080e08bc
_0800d558:	.4byte 0x080e0604
_0800d55c:	.4byte 0x080e0624
_0800d560:	.4byte 0x080e089c
	thumb_func_end sub_0800d514

	thumb_func_start sub_0800d564
sub_0800d564:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r5, _0800d5a0
	ldr		r1, _0800d5a4
	add		r0, r5, r1
	mov		r1, #0x98
	ldr		r2, _0800d5a8
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0800d5ac
	str		r0, [r4, #0x4c]
	ldr		r0, _0800d5b0
	str		r0, [r4, #0xc]
	str		r6, [r4, #0x54]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xD59E, 0x2

_0800d5a0:	.4byte 0x0200DC30
_0800d5a4:	.4byte 0xFFFFFDD0
_0800d5a8:	.4byte 0x0000047F
_0800d5ac:	.4byte 0x080e06ec
_0800d5b0:	.4byte 0x080e0704
	thumb_func_end sub_0800d564

	thumb_func_start sub_0800d5b4
sub_0800d5b4:
	push	{ r4, r5, r6, lr }
	ldr		r1, _0800d604
	ldr		r0, _0800d608
	add		r6, r0, #0x4
	ldr		r4, _0800d60c
	add		r5, r1, #0x4
	mov		r1, #0x2
_0800d5c2:
	ldr		r3, [r5, #0x0]
	add		r2, r3, #0x0
	cmp		r3, #0x0
	bge		_0800d5cc
	neg		r2, r3
_0800d5cc:
	asr		r2, r2, #0x10
	cmp		r3, #0x0
	bge		_0800d5d4
	neg		r2, r2
_0800d5d4:
	ldr		r3, _0800d610
	add		r0, r3, #0x0
	and		r2, r0
	strh	r2, [r4, #0x0]
	ldr		r3, [r6, #0x0]
	add		r2, r3, #0x0
	cmp		r3, #0x0
	bge		_0800d5e6
	neg		r2, r3
_0800d5e6:
	asr		r2, r2, #0x10
	cmp		r3, #0x0
	bge		_0800d5ee
	neg		r2, r2
_0800d5ee:
	and		r2, r0
	strh	r2, [r4, #0x2]
	add		r6, #0x4
	add		r4, #0x4
	add		r5, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0800d5c2
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800d604:	.4byte 0x0200CE24
_0800d608:	.4byte 0x0200CE38
_0800d60c:	.4byte 0x04000014
_0800d610:	.4byte 0x000001FF
	thumb_func_end sub_0800d5b4

	thumb_func_start sub_0800d614
sub_0800d614:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0800d638
	str		r0, [r4, #0x4c]
	ldr		r0, _0800d63c
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x54]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0800d638:	.4byte 0x080e06ec
_0800d63c:	.4byte 0x080e0704

.incbin "base.gba", 0xD640, 0x4
	thumb_func_end sub_0800d614

	thumb_func_start sub_0800d644
sub_0800d644:
	push	{ r4, lr }
	add		r0, r1, #0x0
	ldr		r4, _0800d66c
	mov		r1, #0x7
	bl		sub_080bbd44
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x13
	strh	r1, [r0, #0x0]
	ldr		r2, _0800d670
	ldr		r3, _0800d674
	add		r0, r3, #0x0
	eor		r1, r0
	strh	r1, [r2, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0800d66c:	.4byte 0x080c8652
_0800d670:	.4byte 0x050001FE
_0800d674:	.4byte 0x00007FFF
	thumb_func_end sub_0800d644

	thumb_func_start sub_0800d678
sub_0800d678:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0800d6c4
	str		r0, [r6, #0x4c]
	ldr		r0, _0800d6c8
	str		r0, [r6, #0xc]
	ldr		r2, _0800d6cc
	ldr		r0, [r2, #0x0]
	ldr		r1, _0800d6d0
	and		r0, r1
	str		r0, [r2, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x58
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0800d6bc
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0800d6bc:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xD6C2, 0x2

_0800d6c4:	.4byte 0x080e072c
_0800d6c8:	.4byte 0x080e0744
_0800d6cc:	.4byte 0x0200CE98
_0800d6d0:	.4byte 0xfffffcfc
	thumb_func_end sub_0800d678

	thumb_func_start sub_0800d6d4
sub_0800d6d4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0800d730
	str		r0, [r4, #0x4c]
	ldr		r0, _0800d734
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x58
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0xc8
	bl		sub_0808b374
	add		r1, r4, #0x0
	add		r1, #0xc4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r2, _0800d738
	ldr		r0, [r2, #0x0]
	ldr		r1, _0800d73c
	orr		r0, r1
	str		r0, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x54
	ldr		r0, _0800d740
	strh	r0, [r1, #0x0]
	ldr		r0, _0800d744
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r4, #0x0
	bl		sub_0800d644
	ldr		r0, _0800d748
	bl		sub_0800223c
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0800d730:	.4byte 0x080e072c
_0800d734:	.4byte 0x080e0744
_0800d738:	.4byte 0x0200CE98
_0800d73c:	.4byte 0x00000303
_0800d740:	.4byte 0x0000FFFF
_0800d744:	.4byte 0x0200D110
_0800d748:	.4byte 0x00000FEC
	thumb_func_end sub_0800d6d4

	thumb_func_start sub_0800d74c
sub_0800d74c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_0800d760
	ldr		r0, _0800d7b8
	mov		r1, #0x45
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800d760:
	ldr		r0, _0800d7bc
	add		r0, #0xcc
	mov		r6, #0x0
	ldrsb	r6, [r0, r6]
	lsl		r0, r6, #0x1
	add		r0, r4, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r5, r4, r0
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0800d7a4
	cmp		r6, #0x1
	ble		_0800d784
	mov		r6, #0x1
	mov		r1, #0x2
	ldrsh	r0, [r4, r1]
	add		r5, r4, r0
_0800d784:
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0800d7a4
	mov		r6, #0x0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	add		r5, r4, r0
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0800d7a4
	ldr		r0, _0800d7b8
	mov		r1, #0x4c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800d7a4:
	ldr		r1, _0800d7c0
	ldr		r0, _0800d7c4
	cmp		r6, #0x0
	beq		_0800d7ae
	add		r0, #0x18
_0800d7ae:
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800d7b8:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800d7bc:	.4byte 0x02000BAC
_0800d7c0:	.4byte 0x0200EB34
_0800d7c4:	.4byte 0x0200D154
	thumb_func_end sub_0800d74c

	thumb_func_start sub_0800d7c8
sub_0800d7c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r10, r0
	mov		r9, r1
	ldr		r0, _0800d808
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0xc]
	bl		sub_0808b7cc
	bl		sub_0800d74c
	add		r5, r0, #0x0
	mov		r0, r9
	mov		r1, #0x8
	ldrsh	r2, [r0, r1]
	ldrb	r0, [r5, #0x0]
	sub		r7, r0, r2
	cmp		r7, #0x0
	ble		_0800d8d2
	mov		r0, r9
	ldrh	r1, [r0, #0xa]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800d80c
	mov		r7, #0x1
	b		_0800d812

.incbin "base.gba", 0xD806, 0x2

_0800d808:	.4byte 0x0200BF08

_0800d80c:
	cmp		r7, #0x3
	ble		_0800d812
	mov		r7, #0x3
_0800d812:
	mov		r1, r9
	mov		r0, #0x6
	ldrsh	r1, [r1, r0]
	str		r1, [sp, #0x0]
	mov		r0, r9
	ldrh	r1, [r0, #0xa]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800d834
	lsl		r0, r7, #0x1
	add		r0, r0, r7
	lsl		r0, r0, #0x1
	ldr		r1, [sp, #0x0]
	add		r1, r1, r0
	str		r1, [sp, #0x0]
_0800d834:
	add		r4, r2, #0x0
	cmp		r4, #0x0
	blt		_0800d840
	ldrb	r2, [r5, #0x0]
	cmp		r4, r2
	blt		_0800d84c
_0800d840:
	ldr		r0, _0800d850
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800d84c:
	add		r1, r5, #0x1
	b		_0800d85a

_0800d850:	.4byte 0x080d0548 @ a_toda/msgtext.cpp

_0800d854:
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	add		r1, r1, r0
_0800d85a:
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800d854
	add		r5, r1, #0x0
	ldr		r0, _0800d8e4
	mov		r8, r0
_0800d866:
	mov		r1, r9
	mov		r2, #0x4
	ldrsh	r6, [r1, r2]
	ldrh	r0, [r1, #0xa]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	and		r0, r1
	add		r4, r5, #0x1
	cmp		r0, #0x0
	beq		_0800d8b0
	mov		r2, #0x0
	mov		r0, r8
	str		r2, [r0, #0x4]
	mov		r1, #0x1e
	mov		r2, #0x14
	bl		sub_0808f054
	ldrb	r2, [r5, #0x0]
	add		r2, r4, r2
	mov		r0, r8
	add		r0, #0x18
	add		r1, r4, #0x0
	bl		sub_0808ec54
	mov		r1, r8
	ldrb	r2, [r1, #0x18]
	lsl		r2, r2, #0x1
	ldr		r0, _0800d8e8
	add		r2, r2, r0
	mov		r0, r8
	ldr		r1, _0800d8e8
	bl		sub_0808f1a8
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	sub		r6, r6, r0
_0800d8b0:
	ldrb	r2, [r5, #0x0]
	mov		r1, r10
	strh	r6, [r1, #0x28]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x2a]
	mov		r0, r10
	add		r1, r4, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	add		r5, r5, r0
	sub		r7, #0x1
	cmp		r7, #0x0
	bgt		_0800d866
_0800d8d2:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xD8E2, 0x2

_0800d8e4:	.4byte 0x03007548
_0800d8e8:	.4byte 0x03007562
	thumb_func_end sub_0800d7c8

	thumb_func_start sub_0800d8ec
sub_0800d8ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r7, r0, #0x0
	mov		r8, r1
	add		r4, r2, #0x0
	bl		sub_08009050
	ldr		r0, _0800dadc
	str		r0, [r7, #0xc]
	ldrh	r0, [r4, #0x4]
	add		r6, r7, #0x0
	add		r6, #0xd8
	strh	r0, [r6, #0x0]
	ldrh	r0, [r4, #0x6]
	add		r1, r7, #0x0
	add		r1, #0xda
	strh	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x8]
	add		r0, r7, #0x0
	add		r0, #0xdc
	strh	r1, [r0, #0x0]
	ldrh	r1, [r4, #0xa]
	sub		r0, #0x8
	strh	r1, [r0, #0x0]
	ldrh	r0, [r4, #0xc]
	add		r5, r7, #0x0
	add		r5, #0xde
	strh	r0, [r5, #0x0]
	ldrh	r1, [r4, #0xe]
	add		r0, r7, #0x0
	add		r0, #0xe0
	strh	r1, [r0, #0x0]
	ldrh	r0, [r4, #0x10]
	add		r1, r7, #0x0
	add		r1, #0xe2
	strh	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x12]
	add		r0, r7, #0x0
	add		r0, #0xe4
	strh	r1, [r0, #0x0]
	ldr		r0, _0800dae0
	mov		r1, r8
	add		r2, r7, #0x0
	bl		sub_0800edc4
	ldr		r0, _0800dae4
	mov		r2, #0x0
	ldrsh	r1, [r6, r2]
	bl		sub_08008a04
	str		r0, [sp, #0x4]
	ldr		r6, _0800dae8
	mov		r4, #0x3
_0800d95e:
	mov		r3, #0x0
	ldrsh	r2, [r5, r3]
	add		r1, r2, #0x0
	eor		r1, r6
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800d976
	ldr		r0, _0800daec
	add		r1, r2, #0x0
	bl		sub_08008cf4
_0800d976:
	add		r5, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800d95e
	mov		r5, #0x0
	mov		r9, r5
	mov		r10, r5
	ldr		r6, [sp, #0x4]
	ldr		r6, [r6, #0x18]
	mov		r8, r6
	add		r3, r7, #0x0
	add		r3, #0xda
	mov		r0, #0x0
	ldrsh	r2, [r3, r0]
	add		r4, r7, #0x0
	add		r4, #0xdc
	mov		r5, #0x0
	ldrsh	r1, [r4, r5]
	mov		r5, #0x4
	ldrsh	r0, [r6, r5]
	mul		r0, r1
	lsl		r0, r0, #0x1
	add		r0, #0xa
	add		r0, r8
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0800daf0
	and		r0, r1
	add		r1, r7, #0x0
	add		r1, #0xd6
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r6, [r3, r0]
	mov		r5, r8
	mov		r0, #0x4
	ldrsh	r2, [r5, r0]
	str		r3, [sp, #0x10]
	mov		r12, r4
	sub		r3, #0x6
	str		r3, [sp, #0x8]
	str		r1, [sp, #0xC]
	add		r5, r7, #0x0
	add		r5, #0x18
	str		r5, [sp, #0x14]
	cmp		r6, r2
	bge		_0800da06
	mov		r0, #0x0
	ldrsh	r4, [r1, r0]
	mov		r1, r12
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	add		r3, r2, #0x0
	mul		r0, r3
	lsl		r0, r0, #0x1
	add		r0, #0xa
	add		r0, r8
	lsl		r1, r6, #0x1
	add		r5, r1, r0
_0800d9ec:
	mov		r0, r9
	add		r2, r4, r0
	ldrh	r1, [r5, #0x0]
	ldr		r0, _0800daf0
	and		r0, r1
	cmp		r2, r0
	bne		_0800da06
	add		r5, #0x2
	add		r6, #0x1
	mov		r1, #0x1
	add		r9, r1
	cmp		r6, r3
	blt		_0800d9ec
_0800da06:
	mov		r2, r12
	mov		r3, #0x0
	ldrsh	r4, [r2, r3]
	mov		r5, r8
	mov		r0, #0x6
	ldrsh	r6, [r5, r0]
	cmp		r4, r6
	bge		_0800da5a
	ldr		r1, [sp, #0xC]
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	ldr		r5, [sp, #0x10]
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	mov		r5, r8
	mov		r1, #0x4
	ldrsh	r3, [r5, r1]
	ldr		r5, _0800daf0
	mov		r12, r5
	mov		r5, r9
	mov		r1, r10
	mul		r1, r5
	add		r5, r1, r2
	lsl		r1, r4, #0x1
	mul		r1, r3
	lsl		r0, r0, #0x1
	add		r0, #0xa
	add		r0, r8
	add		r2, r1, r0
	lsl		r3, r3, #0x1
_0800da42:
	ldrh	r1, [r2, #0x0]
	mov		r0, r12
	and		r0, r1
	cmp		r5, r0
	bne		_0800da5a
	add		r2, r2, r3
	add		r4, #0x1
	add		r5, r9
	mov		r0, #0x1
	add		r10, r0
	cmp		r4, r6
	blt		_0800da42
_0800da5a:
	mov		r1, r10
	mov		r0, r9
	mul		r0, r1
	cmp		r0, #0x1
	bgt		_0800da72
	ldr		r0, _0800daf4
	mov		r2, #0x14
	ldrsh	r1, [r7, r2]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800da72:
	ldr		r0, _0800daf8
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	bne		_0800da90
	ldr		r0, _0800dafc
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800db00
	mov		r5, #0x14
	ldrsh	r2, [r7, r5]
	mov		r6, r10
	str		r6, [sp, #0x0]
	mov		r3, r9
	bl		sub_0808c670
_0800da90:
	ldr		r0, [sp, #0x4]
	mov		r2, #0x28
	ldrsh	r1, [r0, r2]
	lsl		r1, r1, #0x2
	ldr		r0, _0800db04
	add		r1, r1, r0
	ldr		r3, [sp, #0xC]
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	lsl		r0, r0, #0x5
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	str		r0, [r7, #0x1c]
	ldr		r0, [sp, #0x14]
	mov		r1, r9
	mov		r2, r10
	bl		sub_0808f054
	ldr		r6, [sp, #0x8]
	mov		r0, #0x0
	ldrsh	r1, [r6, r0]
	ldr		r0, [sp, #0x14]
	bl		sub_0808f090
	ldr		r0, [sp, #0x14]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808f09c
	add		r0, r7, #0x0
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800dadc:	.4byte 0x080e07dc
_0800dae0:	.4byte 0x0200AA18
_0800dae4:	.4byte 0x02008AD4
_0800dae8:	.4byte 0xFFFF8080
_0800daec:	.4byte 0x02009984
_0800daf0:	.4byte 0x000003FF
_0800daf4:	.4byte 0x080d055c
_0800daf8:	.4byte 0x0200CDBC
_0800dafc:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)
_0800db00:	.4byte 0x080d057c
_0800db04:	.4byte 0x0200CE5C
	thumb_func_end sub_0800d8ec

	thumb_func_start sub_0800db08
sub_0800db08:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r6, r0, #0x0
	add		r0, #0xd6
	ldrh	r0, [r0, #0x0]
	lsr		r4, r0, #0x8
	lsl		r0, r4, #0x1
	add		r2, r6, #0x0
	add		r2, #0xde
	add		r0, r2, r0
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr		r3, _0800dbbc
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_0800db4c
	mov		r4, #0x0
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_0800db4c
	ldr		r0, _0800dbc0
	mov		r2, #0x14
	ldrsh	r1, [r6, r2]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800db4c:
	lsl		r1, r4, #0x1
	add		r0, r6, #0x0
	add		r0, #0xde
	add		r0, r0, r1
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr		r0, _0800dbc4
	bl		sub_08008cf4
	add		r1, r6, #0x0
	add		r1, #0xd6
	mov		r2, #0x0
	ldrsh	r5, [r1, r2]
	lsl		r1, r4, #0x8
	sub		r5, r5, r1
	lsl		r5, r5, #0x5
	ldr		r0, [r0, #0x24]
	add		r5, r5, r0
	mov		r3, #0x18
	add		r3, r3, r6
	mov		r8, r3
	mov		r0, #0x20
	bl		sub_08000600
	add		r4, r0, #0x0
	mov		r0, #0x18
	ldrsh	r1, [r6, r0]
	mov		r2, #0x1a
	ldrsh	r0, [r6, r2]
	add		r6, r1, #0x0
	mul		r6, r0
	mov		r3, r8
	ldr		r3, [r3, #0x4]
	mov		r8, r3
	lsl		r6, r6, #0x5
	add		r0, r4, #0x0
	bl		sub_080006ec
	ldr		r0, _0800dbc8
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x14]
	mov		r0, r8
	str		r0, [r4, #0x18]
	str		r6, [r4, #0x1c]
	add		r0, r4, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xDBBA, 0x2

_0800dbbc:	.4byte 0xFFFF8080
_0800dbc0:	.4byte 0x080d059c
_0800dbc4:	.4byte 0x02009984
_0800dbc8:	.4byte 0x080e0834
	thumb_func_end sub_0800db08

	thumb_func_start sub_0800dbcc
sub_0800dbcc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	bl		sub_08009050
	ldr		r0, _0800dd18
	str		r0, [r7, #0xc]
	ldrh	r0, [r4, #0x4]
	add		r6, r7, #0x0
	add		r6, #0xd8
	strh	r0, [r6, #0x0]
	ldrh	r0, [r4, #0x6]
	add		r1, r7, #0x0
	add		r1, #0xd4
	str		r1, [sp, #0x4]
	strh	r0, [r1, #0x0]
	ldrh	r0, [r4, #0x8]
	mov		r2, #0xda
	add		r2, r2, r7
	mov		r8, r2
	strh	r0, [r2, #0x0]
	ldr		r0, _0800dd1c
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	bl		sub_0800edc4
	ldr		r0, _0800dd20
	ldr		r0, [r0, #0x0]
	ldr		r1, [r4, #0xc]
	bl		sub_0808b7cc
	add		r5, r7, #0x0
	add		r5, #0xe4
	str		r0, [r5, #0x0]
	mov		r3, #0x6
	ldrsh	r1, [r0, r3]
	mov		r4, #0x4
	ldrsh	r0, [r0, r4]
	add		r4, r1, #0x0
	mul		r4, r0
	lsl		r4, r4, #0x1
	add		r4, #0xa
	add		r0, r4, #0x0
	bl		sub_0808afb8
	ldr		r1, [r5, #0x0]
	add		r2, r4, #0x0
	bl		sub_0808c818
	str		r0, [r5, #0x0]
	ldrh	r1, [r0, #0x4]
	ldrh	r0, [r0, #0x6]
	add		r2, r1, #0x0
	mul		r2, r0
	add		r0, r2, #0x0
	mov		r3, #0xde
	add		r3, r3, r7
	mov		r9, r3
	strh	r0, [r3, #0x0]
	ldr		r1, _0800dd24
	mov		r4, #0x14
	ldrsh	r0, [r7, r4]
	lsl		r4, r0, #0x1
	add		r4, r4, r0
	lsl		r4, r4, #0x3
	add		r4, r4, r1
	ldr		r0, _0800dd28
	mov		r2, #0x0
	ldrsh	r1, [r3, r2]
	add		r2, r4, #0x0
	bl		sub_080b7d10
	ldr		r1, [r4, #0x10]
	mov		r3, #0xd6
	add		r3, r3, r7
	mov		r10, r3
	strh	r1, [r3, #0x0]
	mov		r4, r8
	ldrh	r2, [r4, #0x0]
	mov		r0, #0xf0
	and		r0, r2
	lsl		r0, r0, #0x8
	orr		r1, r0
	add		r2, r7, #0x0
	add		r2, #0xdc
	strh	r1, [r2, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0xa
	mov		r3, r9
	mov		r4, #0x0
	ldrsh	r1, [r3, r4]
	ldrh	r2, [r2, #0x0]
	bl		sub_0808ebac
	add		r4, r7, #0x0
	add		r4, #0xe8
	mov		r0, #0x30
	bl		sub_0808af94
	mov		r2, #0x0
	ldrsh	r1, [r6, r2]
	ldr		r2, [r5, #0x0]
	str		r2, [sp, #0x0]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08008af0
	str		r0, [r4, #0x0]
	ldrh	r2, [r0, #0x1c]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r1, r3, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x1c]
	ldr		r0, _0800dd2c
	ldr		r1, [r4, #0x0]
	bl		sub_08008f64
	ldr		r0, [r5, #0x0]
	mov		r5, #0x4
	ldrsh	r1, [r0, r5]
	mov		r6, #0x6
	ldrsh	r2, [r0, r6]
	ldr		r0, [r4, #0x0]
	sub		r4, #0xd0
	mov		r5, #0x28
	ldrsh	r3, [r0, r5]
	lsl		r3, r3, #0x2
	ldr		r0, _0800dd30
	add		r3, r3, r0
	mov		r6, r10
	mov		r5, #0x0
	ldrsh	r0, [r6, r5]
	lsl		r0, r0, #0x5
	ldr		r3, [r3, #0x0]
	add		r0, r0, r3
	str		r0, [r7, #0x1c]
	add		r0, r4, #0x0
	bl		sub_0808f054
	ldr		r6, [sp, #0x4]
	mov		r0, #0x0
	ldrsh	r1, [r6, r0]
	add		r0, r4, #0x0
	bl		sub_0808f090
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808f09c
	add		r0, r7, #0x0
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800dd18:	.4byte 0x080e07bc
_0800dd1c:	.4byte 0x0200AA18
_0800dd20:	.4byte 0x0200BF08
_0800dd24:	.4byte 0x0200AA78
_0800dd28:	.4byte 0x0200ACB8
_0800dd2c:	.4byte 0x02008AD4
_0800dd30:	.4byte 0x0200CE5C
	thumb_func_end sub_0800dbcc

	thumb_func_start sub_0800dd34
sub_0800dd34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r8, r0
	bl		sub_080b74f4
	ldr		r0, _0800dddc
	mov		r1, r8
	str		r0, [r1, #0xc]
	ldr		r1, _0800dde0
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	str		r0, [r1, #0x0]
	mov		r6, #0x0
	mov		r0, #0x12
	mov		r9, r0
	ldr		r1, _0800dde4
	mov		r10, r1
	mov		r7, #0x3
_0800dd5e:
	cmp		r6, #0x17
	bls		_0800dd70
	ldr		r0, _0800dde8
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800dd70:
	ldr		r0, _0800ddec
	add		r1, r6, #0x0
	bl		sub_08008f44
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0800dd8a
	ldr		r0, _0800ddf0
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800dd8a:
	add		r0, r5, #0x0
	add		r0, #0xe8
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x18
	mov		r1, #0x0
	add		r2, r7, #0x0
	bl		sub_0808cf20
	ldrh	r0, [r4, #0x1c]
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x1c]
	mov		r0, r10
	add		r0, #0x4
	mov		r10, r0
	sub		r0, #0x4
	ldmia	r0!, { r1 }
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	mov		r0, #0x0
	strh	r0, [r5, #0x28]
	mov		r0, r9
	strh	r0, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r7, #0x3
	add		r6, #0x1
	cmp		r6, #0x4
	ble		_0800dd5e
	mov		r0, r8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800dddc:	.4byte 0x080e0794
_0800dde0:	.4byte 0x0200CE40
_0800dde4:	.4byte 0x0200AE78
_0800dde8:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800ddec:	.4byte 0x0200AA18
_0800ddf0:	.4byte 0x080d05fc
	thumb_func_end sub_0800dd34

	thumb_func_start sub_0800ddf4
sub_0800ddf4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x40
	ldr		r0, _0800e0d4
	ldr		r1, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	beq		_0800de0e
	b		_0800e020
_0800de0e:
	ldr		r5, _0800e0d8
	ldr		r0, _0800e0dc
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800de2c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800de2c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _0800e0e4
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800de4c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800de4c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x4]
	ldr		r0, _0800e0e8
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800de6c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800de6c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x8]
	ldr		r0, _0800e0ec
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800de8c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800de8c:
	add		r0, r4, #0x1
	str		r0, [sp, #0xC]
	ldr		r0, _0800e0f0
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800deac
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800deac:
	add		r0, r4, #0x1
	str		r0, [sp, #0x10]
	ldr		r0, _0800e0f4
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800decc
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800decc:
	add		r0, r4, #0x1
	str		r0, [sp, #0x14]
	ldr		r0, _0800e0f8
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800deec
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800deec:
	add		r0, r4, #0x1
	str		r0, [sp, #0x18]
	ldr		r0, _0800e0fc
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800df0c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800df0c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x1C]
	ldr		r0, _0800e100
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800df2c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800df2c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x20]
	ldr		r0, _0800e104
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800df4c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800df4c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x24]
	ldr		r0, _0800e108
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800df6c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800df6c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x28]
	ldr		r0, _0800e10c
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800df8c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800df8c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x2C]
	ldr		r0, _0800e110
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800dfac
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800dfac:
	add		r0, r4, #0x1
	str		r0, [sp, #0x30]
	ldr		r0, _0800e114
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800dfcc
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800dfcc:
	add		r0, r4, #0x1
	str		r0, [sp, #0x34]
	ldr		r0, _0800e118
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800dfec
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800dfec:
	add		r0, r4, #0x1
	str		r0, [sp, #0x38]
	ldr		r0, _0800e11c
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800e00c
	ldr		r0, _0800e0e0
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e00c:
	add		r0, r4, #0x1
	str		r0, [sp, #0x3C]
	add		r0, r5, #0x0
	mov		r1, sp
	mov		r2, #0x40
	bl		sub_0808c818
	ldr		r1, [r6, #0x0]
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_0800e020:
	ldr		r0, _0800e120
	mov		r1, #0x40
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r8, r0
	bl		sub_080b74f4
	ldr		r0, _0800e124
	mov		r1, r8
	str		r0, [r1, #0xc]
	ldr		r1, _0800e128
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	str		r0, [r1, #0x0]
	mov		r6, #0x0
	mov		r0, #0x12
	mov		r9, r0
	ldr		r1, _0800e0d8
	mov		r10, r1
	mov		r7, #0x3
_0800e04c:
	cmp		r6, #0x17
	bls		_0800e05e
	ldr		r0, _0800e0e0
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e05e:
	ldr		r0, _0800e12c
	add		r1, r6, #0x0
	bl		sub_08008f44
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0800e078
	ldr		r0, _0800e130
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e078:
	add		r0, r5, #0x0
	add		r0, #0xe8
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x18
	mov		r1, #0x0
	add		r2, r7, #0x0
	bl		sub_0808cf20
	ldrh	r0, [r4, #0x1c]
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x1c]
	mov		r0, r10
	add		r0, #0x4
	mov		r10, r0
	sub		r0, #0x4
	ldmia	r0!, { r1 }
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	mov		r0, #0x0
	strh	r0, [r5, #0x28]
	mov		r0, r9
	strh	r0, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r7, #0x3
	add		r6, #0x1
	cmp		r6, #0x4
	ble		_0800e04c
	ldr		r0, _0800e134
	mov		r1, r8
	mov		r2, #0x0
	bl		sub_080b781c
	add		sp, #0x40
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800e0d4:	.4byte 0x080d0618
_0800e0d8:	.4byte 0x0200AE78
_0800e0dc:	.4byte 0x0200AA14
_0800e0e0:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800e0e4:	.4byte 0x0200AA10
_0800e0e8:	.4byte 0x0200AA0C
_0800e0ec:	.4byte 0x0200AA08
_0800e0f0:	.4byte 0x0200AA04
_0800e0f4:	.4byte 0x0200AA00
_0800e0f8:	.4byte 0x0200A9FC
_0800e0fc:	.4byte 0x0200A9F8
_0800e100:	.4byte 0x0200A9F4
_0800e104:	.4byte 0x0200A9F0
_0800e108:	.4byte 0x0200A9EC
_0800e10c:	.4byte 0x0200A9E8
_0800e110:	.4byte 0x0200A9E4
_0800e114:	.4byte 0x0200A9E0
_0800e118:	.4byte 0x0200A9DC
_0800e11c:	.4byte 0x0200A9D8
_0800e120:	.4byte 0x0200DA00
_0800e124:	.4byte 0x080e0794
_0800e128:	.4byte 0x0200CE40
_0800e12c:	.4byte 0x0200AA18
_0800e130:	.4byte 0x080d05fc
_0800e134:	.4byte 0x0200DA50
	thumb_func_end sub_0800ddf4

	thumb_func_start sub_0800e138
sub_0800e138:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0800e208
	str		r0, [r7, #0xc]
	add		r0, r7, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r6, #0x0
	ldr		r1, _0800e20c
	mov		r8, r1
	mov		r9, r0
	mov		r2, #0xc
	mov		r10, r2
_0800e164:
	cmp		r6, #0x17
	bls		_0800e176
	mov		r0, r8
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e176:
	ldr		r0, _0800e210
	add		r1, r6, #0x0
	bl		sub_08008f44
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0800e190
	ldr		r0, _0800e214
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e190:
	mov		r1, r9
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	lsl		r0, r0, #0x2
	ldr		r1, _0800e218
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800e1ba
	ldr		r0, _0800e20c
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e1ba:
	ldrb	r2, [r4, #0x1]
	add		r1, r4, #0x2
	mov		r0, #0x0
	strh	r0, [r5, #0x28]
	mov		r0, r10
	strh	r0, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r6, #0x1
	cmp		r6, #0x4
	ble		_0800e164
	ldr		r1, _0800e21c
	mov		r2, #0x0
	mov		r0, #0x1
	strb	r0, [r1, #0x1a]
	add		r0, r7, #0x0
	add		r0, #0x44
	strh	r2, [r0, #0x0]
	add		r0, #0x4
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	mov		r1, #0x0
	bl		sub_0808c828
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_0800e3a4
	add		r0, r7, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xE206, 0x2

_0800e208:	.4byte 0x080e076c
_0800e20c:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800e210:	.4byte 0x0200AA18
_0800e214:	.4byte 0x080d05fc
_0800e218:	.4byte 0x080d06dc
_0800e21c:	.4byte 0x02008AD4
	thumb_func_end sub_0800e138

	thumb_func_start sub_0800e220
sub_0800e220:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r8, r0
	mov		r0, #0x40
	add		r0, r8
	mov		r10, r0
	mov		r1, #0x42
	add		r1, r8
	mov		r9, r1
_0800e238:
	mov		r7, #0x0
	b		_0800e242
_0800e23c:
	mov		r0, r8
	bl		sub_080b7690
_0800e242:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800e252
	mov		r7, #0x1
	neg		r7, r7
_0800e252:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800e260
	mov		r7, #0x1
_0800e260:
	mov		r0, #0x0
	mov		r1, #0xc0
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800e23c
	mov		r2, r10
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r7, #0x0
	bge		_0800e27a
	add		r0, #0x6
	b		_0800e27c
_0800e27a:
	add		r0, #0x5
_0800e27c:
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r6, r0, #0x0
	mov		r0, r9
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	cmp		r7, #0x0
	bge		_0800e29e
	add		r1, r2, #0x0
	add		r1, #0xf
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0800e2aa
	add		r0, r2, #0x0
	add		r0, #0x1e
	b		_0800e2aa
_0800e29e:
	add		r1, r2, #0x5
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0800e2aa
	add		r0, r2, #0x0
	add		r0, #0x14
_0800e2aa:
	asr		r4, r0, #0x4
	lsl		r0, r4, #0x4
	sub		r4, r1, r0
	ldr		r5, _0800e34c
	cmp		r6, #0x17
	bls		_0800e2c4
	ldr		r0, _0800e350
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e2c4:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08008f44
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0800e2de
	ldr		r0, _0800e354
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e2de:
	add		r0, r5, #0x0
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	lsl		r0, r4, #0x2
	ldr		r1, _0800e358
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0800e310
	ldr		r0, _0800e350
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800e310:
	ldrb	r2, [r4, #0x1]
	add		r1, r4, #0x2
	mov		r3, #0x0
	strh	r3, [r5, #0x28]
	mov		r0, #0xc
	strh	r0, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r4, r7, #0x0
	mov		r5, #0x16
_0800e328:
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_0800e3a4
	add		r4, r4, r7
	sub		r5, #0x1
	mov		r0, r8
	bl		sub_080b7690
	cmp		r5, #0x0
	bge		_0800e328
	mov		r1, r10
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r7, #0x0
	bge		_0800e35c
	add		r0, #0x6
	b		_0800e35e

_0800e34c:	.4byte 0x0200AA18
_0800e350:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800e354:	.4byte 0x080d05fc
_0800e358:	.4byte 0x080d06dc

_0800e35c:
	add		r0, #0x1
_0800e35e:
	mov		r1, #0x7
	bl		sub_080bbd44
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, r9
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	cmp		r7, #0x0
	bge		_0800e382
	add		r1, r2, #0x0
	add		r1, #0xf
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0800e38e
	add		r0, r2, #0x0
	add		r0, #0x1e
	b		_0800e38e
_0800e382:
	add		r1, r2, #0x1
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0800e38e
	add		r0, r2, #0x0
	add		r0, #0x10
_0800e38e:
	asr		r0, r0, #0x4
	lsl		r0, r0, #0x4
	sub		r0, r1, r0
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_0800e3a4
	b		_0800e238

.incbin "base.gba", 0xE3A2, 0x2
	thumb_func_end sub_0800e220

	thumb_func_start sub_0800e3a4
sub_0800e3a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r3, r0, #0x0
	add		r5, r1, #0x0
	add		r0, #0x44
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x7
	add		r1, #0x48
	add		r6, r3, r1
	neg		r5, r5
	mov		r1, #0x5f
	mov		r2, #0x9f
	lsl		r2, r2, #0x1
	add		r0, r6, r2
_0800e3ca:
	strh	r1, [r0, #0x0]
	add		r1, #0x1
	sub		r0, #0x2
	cmp		r0, r6
	bge		_0800e3ca
	mov		r4, #0x1
	neg		r4, r4
	add		r3, #0x40
	mov		r8, r3
	mov		r7, #0xff
_0800e3de:
	mov		r1, r8
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	add		r0, r0, r4
	add		r0, #0x7
	mov		r1, #0x7
	bl		sub_080bbd44
	lsl		r0, r0, #0x4
	sub		r0, #0x1
	add		r1, r5, #0x0
	add		r5, #0x17
	add		r4, #0x1
	sub		r3, r0, r1
	mov		r2, #0xb
_0800e3fc:
	add		r0, r1, #0x0
	and		r0, r7
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	strh	r3, [r0, #0x0]
	sub		r2, #0x1
	add		r1, #0x1
	cmp		r2, #0x0
	bge		_0800e3fc
	cmp		r4, #0x5
	ble		_0800e3de
	ldr		r1, _0800e428
	ldr		r3, _0800e42c
	add		r0, r6, #0x0
	mov		r2, #0x2
	bl		sub_08000a2c
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800e428:	.4byte 0x0400001A
_0800e42c:	.4byte 0xA2600000
	thumb_func_end sub_0800e3a4

	thumb_func_start sub_0800e430
sub_0800e430:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	ldr		r0, _0800e500
	ldr		r1, _0800e504
	mov		r4, #0x8
	str		r4, [sp, #0x0]
	mov		r2, #0x6
	mov		r3, #0xbf
	bl		sub_0808ebd8
	ldr		r0, _0800e508
	ldr		r1, _0800e50c
	str		r4, [sp, #0x0]
	mov		r2, #0x4
	mov		r3, #0x20
	bl		sub_0808ebd8
	ldr		r0, _0800e510
	ldr		r1, _0800e514
	str		r4, [sp, #0x0]
	mov		r2, #0x4
	mov		r3, #0x20
	bl		sub_0808ebd8
	ldr		r0, _0800e518
	ldr		r1, _0800e51c
	mov		r2, #0xc
	str		r2, [sp, #0x0]
	mov		r2, #0x0
	mov		r3, #0xff
	bl		sub_0808ebd8
	ldr		r4, _0800e520
	ldr		r0, _0800e524
	str		r0, [r4, #0x2c]
	add		r1, r4, #0x0
	add		r1, #0x30
	mov		r3, #0x7
	ldr		r0, _0800e528
	mov		r2, #0x1
	neg		r2, r2
_0800e482:
	str		r0, [r1, #0xc]
	str		r0, [r1, #0x1c]
	add		r1, #0x28
	sub		r3, #0x1
	cmp		r3, r2
	bne		_0800e482
	add		r0, r4, #0x0
	mov		r1, #0x1
	ldr		r2, _0800e52c
	bl		sub_080b7c30
	ldr		r0, _0800e530
	mov		r2, #0x17
	ldr		r4, _0800e528
	mov		r1, #0x0
	mov		r3, #0x1
	neg		r3, r3
_0800e4a4:
	str		r4, [r0, #0xc]
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x8]
	str		r1, [r0, #0x0]
	add		r0, #0x18
	sub		r2, #0x1
	cmp		r2, r3
	bne		_0800e4a4
	ldr		r0, _0800e534
	add		r5, r0, #0x0
	add		r5, #0x48
	add		r4, r0, #0x0
	add		r4, #0x18
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08008ffc
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x30
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x18
	bl		sub_0808c7e4
	ldr		r6, _0800e538
	ldr		r5, _0800e53c
	ldr		r4, _0800e540
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e544
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e560

_0800e500:	.4byte 0x0200AE64
_0800e504:	.4byte 0x080cb7a0
_0800e508:	.4byte 0x0200AE50
_0800e50c:	.4byte 0x080c9f1c
_0800e510:	.4byte 0x0200AE3C
_0800e514:	.4byte 0x080c8698
_0800e518:	.4byte 0x0200AE28
_0800e51c:	.4byte 0x080ce0a8
_0800e520:	.4byte 0x0200ACB8
_0800e524:	.4byte 0x080e081c
_0800e528:	.4byte 0x080e0864
_0800e52c:	.4byte 0x000002FF
_0800e530:	.4byte 0x0200AA78
_0800e534:	.4byte 0x0200AA18
_0800e538:	.4byte 0x0200AA14
_0800e53c:	.4byte 0x080d061c @ ms_ta_0043
_0800e540:	.4byte 0x0200BF08

_0800e544:
	ldr		r0, _0800e588
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e55e
	ldr		r0, _0800e58c
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e590
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e55e:
	mov		r0, #0x0
_0800e560:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e594
	ldr		r5, _0800e598
	ldr		r4, _0800e59c
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e5a0
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e5bc

_0800e588:	.4byte 0x0200CDBC
_0800e58c:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e590:	.4byte 0x080d052c
_0800e594:	.4byte 0x0200AA10
_0800e598:	.4byte 0x080d0628 @ ms_ta_0044
_0800e59c:	.4byte 0x0200BF08

_0800e5a0:
	ldr		r0, _0800e5e4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e5ba
	ldr		r0, _0800e5e8
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e5ec
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e5ba:
	mov		r0, #0x0
_0800e5bc:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e5f0
	ldr		r5, _0800e5f4
	ldr		r4, _0800e5f8
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e5fc
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e618

_0800e5e4:	.4byte 0x0200CDBC
_0800e5e8:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e5ec:	.4byte 0x080d052c
_0800e5f0:	.4byte 0x0200AA0C
_0800e5f4:	.4byte 0x080d0634 @ ms_ta_0045
_0800e5f8:	.4byte 0x0200BF08

_0800e5fc:
	ldr		r0, _0800e640
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e616
	ldr		r0, _0800e644
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e648
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e616:
	mov		r0, #0x0
_0800e618:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e64c
	ldr		r5, _0800e650
	ldr		r4, _0800e654
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e658
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e674

_0800e640:	.4byte 0x0200CDBC
_0800e644:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e648:	.4byte 0x080d052c
_0800e64c:	.4byte 0x0200AA08
_0800e650:	.4byte 0x080d0640 @ms_ta_0046
_0800e654:	.4byte 0x0200BF08

_0800e658:
	ldr		r0, _0800e69c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e672
	ldr		r0, _0800e6a0
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e6a4
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e672:
	mov		r0, #0x0
_0800e674:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e6a8
	ldr		r5, _0800e6ac
	ldr		r4, _0800e6b0
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e6b4
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e6d0

_0800e69c:	.4byte 0x0200CDBC
_0800e6a0:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e6a4:	.4byte 0x080d052c
_0800e6a8:	.4byte 0x0200AA04
_0800e6ac:	.4byte 0x080d064c @ ms_ta_0047
_0800e6b0:	.4byte 0x0200BF08

_0800e6b4:
	ldr		r0, _0800e6f8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e6ce
	ldr		r0, _0800e6fc
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e700
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e6ce:
	mov		r0, #0x0
_0800e6d0:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e704
	ldr		r5, _0800e708
	ldr		r4, _0800e70c
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e710
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e72c

_0800e6f8:	.4byte 0x0200CDBC
_0800e6fc:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e700:	.4byte 0x080d052c
_0800e704:	.4byte 0x0200AA00
_0800e708:	.4byte 0x080d0658 @ ms_ta_0048
_0800e70c:	.4byte 0x0200BF08

_0800e710:
	ldr		r0, _0800e754
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e72a
	ldr		r0, _0800e758
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e75c
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e72a:
	mov		r0, #0x0
_0800e72c:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e760
	ldr		r5, _0800e764
	ldr		r4, _0800e768
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e76c
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e788

_0800e754:	.4byte 0x0200CDBC
_0800e758:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e75c:	.4byte 0x080d052c
_0800e760:	.4byte 0x0200A9FC
_0800e764:	.4byte 0x080d0664 @ ms_ta_0049
_0800e768:	.4byte 0x0200BF08

_0800e76c:
	ldr		r0, _0800e7b0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e786
	ldr		r0, _0800e7b4
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e7b8
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e786:
	mov		r0, #0x0
_0800e788:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e7bc
	ldr		r5, _0800e7c0
	ldr		r4, _0800e7c4
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e7c8
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e7e4

_0800e7b0:	.4byte 0x0200CDBC
_0800e7b4:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e7b8:	.4byte 0x080d052c
_0800e7bc:	.4byte 0x0200A9F8
_0800e7c0:	.4byte 0x080d0670 @ ms_ta_0050
_0800e7c4:	.4byte 0x0200BF08

_0800e7c8:
	ldr		r0, _0800e80c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e7e2
	ldr		r0, _0800e810
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e814
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e7e2:
	mov		r0, #0x0
_0800e7e4:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e818
	ldr		r5, _0800e81c
	ldr		r4, _0800e820
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e824
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e840

_0800e80c:	.4byte 0x0200CDBC
_0800e810:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e814:	.4byte 0x080d052c
_0800e818:	.4byte 0x0200A9F4
_0800e81c:	.4byte 0x080d067c @ ms_ta_0051
_0800e820:	.4byte 0x0200BF08

_0800e824:
	ldr		r0, _0800e868
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e83e
	ldr		r0, _0800e86c
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e870
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e83e:
	mov		r0, #0x0
_0800e840:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e874
	ldr		r5, _0800e878
	ldr		r4, _0800e87c
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e880
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e89c

_0800e868:	.4byte 0x0200CDBC
_0800e86c:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e870:	.4byte 0x080d052c
_0800e874:	.4byte 0x0200A9F0
_0800e878:	.4byte 0x080d0688 @ ms_ta_0052
_0800e87c:	.4byte 0x0200BF08

_0800e880:
	ldr		r0, _0800e8c4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e89a
	ldr		r0, _0800e8c8
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e8cc
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e89a:
	mov		r0, #0x0
_0800e89c:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e8d0
	ldr		r5, _0800e8d4
	ldr		r4, _0800e8d8
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e8dc
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e8f8

_0800e8c4:	.4byte 0x0200CDBC
_0800e8c8:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e8cc:	.4byte 0x080d052c
_0800e8d0:	.4byte 0x0200A9EC
_0800e8d4:	.4byte 0x080d0694 @ ms_ta_0053
_0800e8d8:	.4byte 0x0200BF08

_0800e8dc:
	ldr		r0, _0800e920
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e8f6
	ldr		r0, _0800e924
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e928
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e8f6:
	mov		r0, #0x0
_0800e8f8:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e92c
	ldr		r5, _0800e930
	ldr		r4, _0800e934
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e938
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e954

_0800e920:	.4byte 0x0200CDBC
_0800e924:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e928:	.4byte 0x080d052c
_0800e92c:	.4byte 0x0200A9E8
_0800e930:	.4byte 0x080d06a0 @ ms_ta_0054
_0800e934:	.4byte 0x0200BF08

_0800e938:
	ldr		r0, _0800e97c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e952
	ldr		r0, _0800e980
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e984
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e952:
	mov		r0, #0x0
_0800e954:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e988
	ldr		r5, _0800e98c
	ldr		r4, _0800e990
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e994
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800e9b0

_0800e97c:	.4byte 0x0200CDBC
_0800e980:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e984:	.4byte 0x080d052c
_0800e988:	.4byte 0x0200A9E4
_0800e98c:	.4byte 0x080d06ac @ ms_ta_0055
_0800e990:	.4byte 0x0200BF08

_0800e994:
	ldr		r0, _0800e9d8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800e9ae
	ldr		r0, _0800e9dc
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800e9e0
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800e9ae:
	mov		r0, #0x0
_0800e9b0:
	str		r0, [r6, #0x0]
	ldr		r6, _0800e9e4
	ldr		r5, _0800e9e8
	ldr		r4, _0800e9ec
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800e9f0
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800ea0c

_0800e9d8:	.4byte 0x0200CDBC
_0800e9dc:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800e9e0:	.4byte 0x080d052c
_0800e9e4:	.4byte 0x0200A9E0
_0800e9e8:	.4byte 0x080d06b8 @ ms_ta_0056
_0800e9ec:	.4byte 0x0200BF08

_0800e9f0:
	ldr		r0, _0800ea34
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800ea0a
	ldr		r0, _0800ea38
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800ea3c
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800ea0a:
	mov		r0, #0x0
_0800ea0c:
	str		r0, [r6, #0x0]
	ldr		r6, _0800ea40
	ldr		r5, _0800ea44
	ldr		r4, _0800ea48
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800ea4c
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800ea68

_0800ea34:	.4byte 0x0200CDBC
_0800ea38:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800ea3c:	.4byte 0x080d052c
_0800ea40:	.4byte 0x0200A9DC
_0800ea44:	.4byte 0x080d06c4 @ ms_ta_0057
_0800ea48:	.4byte 0x0200BF08

_0800ea4c:
	ldr		r0, _0800ea90
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800ea66
	ldr		r0, _0800ea94
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800ea98
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800ea66:
	mov		r0, #0x0
_0800ea68:
	str		r0, [r6, #0x0]
	ldr		r6, _0800ea9c
	ldr		r5, _0800eaa0
	ldr		r4, _0800eaa4
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800eaa8
	ldr		r0, [r4, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800eac4

_0800ea90:	.4byte 0x0200CDBC
_0800ea94:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800ea98:	.4byte 0x080d052c
_0800ea9c:	.4byte 0x0200A9D8
_0800eaa0:	.4byte 0x080d06d0 @ ms_ta_0058
_0800eaa4:	.4byte 0x0200BF08

_0800eaa8:
	ldr		r0, _0800ead0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800eac2
	ldr		r0, _0800ead4
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800ead8
	str		r5, [sp, #0x0]
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800eac2:
	mov		r0, #0x0
_0800eac4:
	str		r0, [r6, #0x0]
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xEACE, 0x2

_0800ead0:	.4byte 0x0200CDBC
_0800ead4:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800ead8:	.4byte 0x080d052c

.incbin "base.gba", 0xEADC, 0x4
	thumb_func_end sub_0800e430

	thumb_func_start sub_0800eae0
sub_0800eae0:
	push	{ r4, lr }
	ldr		r4, _0800eb08
	add		r0, r4, #0x0
	mov		r1, #0x89
	lsl		r1, r1, #0x3
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0800e138
	add		r1, r0, #0x0
	add		r4, #0x50
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0800eb08:	.4byte 0x0200DA00
	thumb_func_end sub_0800eae0

	thumb_func_start sub_0800eb0c
sub_0800eb0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	mov		r9, r0
	mov		r8, r0
_0800eb20:
	mov		r7, #0x0
	b		_0800eb2a
_0800eb24:
	ldr		r0, [sp, #0x0]
	bl		sub_080b7690
_0800eb2a:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800eb3a
	mov		r7, #0x1
	neg		r7, r7
_0800eb3a:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800eb48
	mov		r7, #0x1
_0800eb48:
	mov		r0, #0x0
	mov		r1, #0xc0
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0800eb24
	cmp		r7, #0x0
	bge		_0800eb5e
	mov		r0, r9
	add		r0, #0x6
	b		_0800eb62
_0800eb5e:
	mov		r0, r9
	add		r0, #0x5
_0800eb62:
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r5, r0, #0x0
	cmp		r7, #0x0
	bge		_0800eb7e
	mov		r1, r8
	add		r1, #0xf
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0800eb8c
	mov		r0, r8
	add		r0, #0x1e
	b		_0800eb8c
_0800eb7e:
	mov		r1, r8
	add		r1, #0x5
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0800eb8c
	mov		r0, r8
	add		r0, #0x14
_0800eb8c:
	asr		r6, r0, #0x4
	lsl		r0, r6, #0x4
	sub		r6, r1, r0
	ldr		r4, _0800ec38
	cmp		r5, #0x17
	bls		_0800eba6
	ldr		r0, _0800ec3c
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800eba6:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08008f44
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_0800ebc0
	ldr		r0, _0800ec40
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800ebc0:
	add		r5, r4, #0x0
	add		r0, r5, #0x0
	add		r0, #0xe8
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x18
	mov		r2, #0x0
	cmp		r7, #0x0
	blt		_0800ebd4
	mov		r2, #0x12
_0800ebd4:
	mov		r1, #0x0
	bl		sub_0808cf20
	ldrh	r0, [r4, #0x1c]
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x1c]
	ldr		r1, [r5, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	lsl		r0, r6, #0x2
	ldr		r1, _0800ec44
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	mov		r0, #0x0
	strh	r0, [r5, #0x28]
	mov		r0, #0x12
	strh	r0, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	lsl		r6, r7, #0x11
	ldr		r5, _0800ec48
	mov		r4, #0xb
_0800ec14:
	ldr		r0, [r5, #0x0]
	add		r0, r0, r6
	str		r0, [r5, #0x0]
	sub		r4, #0x1
	ldr		r0, [sp, #0x0]
	bl		sub_080b7690
	cmp		r4, #0x0
	bge		_0800ec14
	mov		r1, #0xc0
	lsl		r1, r1, #0xc
	ldr		r2, _0800ec48
	str		r1, [r2, #0x0]
	cmp		r7, #0x0
	bge		_0800ec4c
	mov		r0, r9
	add		r0, #0x6
	b		_0800ec50

_0800ec38:	.4byte 0x0200AA18
_0800ec3c:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800ec40:	.4byte 0x080d05fc
_0800ec44:	.4byte 0x0200AE78
_0800ec48:	.4byte 0x0200CE40

_0800ec4c:
	mov		r0, r9
	add		r0, #0x1
_0800ec50:
	mov		r1, #0x7
	bl		sub_080bbd44
	mov		r9, r0
	cmp		r7, #0x0
	bge		_0800ec6c
	mov		r1, r8
	add		r1, #0xf
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0800ec7a
	mov		r0, r8
	add		r0, #0x1e
	b		_0800ec7a
_0800ec6c:
	mov		r1, r8
	add		r1, #0x1
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0800ec7a
	mov		r0, r8
	add		r0, #0x10
_0800ec7a:
	asr		r0, r0, #0x4
	lsl		r0, r0, #0x4
	sub		r1, r1, r0
	mov		r8, r1
	mov		r6, #0x1
	neg		r6, r6
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	mov		r10, r0
	mov		r7, #0x0
_0800ec8e:
	mov		r1, r9
	add		r0, r1, r6
	add		r0, #0x7
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r5, r0, #0x0
	cmp		r5, #0x17
	bls		_0800ecae
	ldr		r0, _0800ecec
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800ecae:
	ldr		r0, _0800ecf0
	add		r1, r5, #0x0
	bl		sub_08008f44
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_0800ecc8
	ldr		r0, _0800ecf4
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800ecc8:
	add		r0, r4, #0x0
	add		r0, #0xe8
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x18
	mov		r1, #0x0
	add		r2, r7, #0x0
	bl		sub_0808cf20
	ldrh	r0, [r4, #0x1c]
	mov		r2, r10
	orr		r0, r2
	strh	r0, [r4, #0x1c]
	add		r7, #0x3
	add		r6, #0x1
	cmp		r6, #0x5
	ble		_0800ec8e
	b		_0800eb20

_0800ecec:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800ecf0:	.4byte 0x0200AA18
_0800ecf4:	.4byte 0x080d05fc
	thumb_func_end sub_0800eb0c

	thumb_func_start sub_0800ecf8
sub_0800ecf8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0800ed20
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0800ed18
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0800ed18:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xED1E, 0x2

_0800ed20:	.4byte 0x080e0794
	thumb_func_end sub_0800ecf8

	thumb_func_start sub_0800ed24
sub_0800ed24:
	push	{ r4, r5, lr }
	ldr		r5, _0800ed50
	add		r0, r5, #0x0
	mov		r1, #0x40
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0800ed54
	str		r0, [r4, #0xc]
	add		r5, #0x50
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0800ed50:	.4byte 0x0200DA00
_0800ed54:	.4byte 0x080e0874
	thumb_func_end sub_0800ed24

	thumb_func_start sub_0800ed58
sub_0800ed58:
	push	{ r4, lr }
	add		r4, r0, #0x0
	b		_0800ed74
_0800ed5e:
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	beq		_0800ed74
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_0800ed74:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bgt		_0800ed5e
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800ed58

	thumb_func_start sub_0800ed80
sub_0800ed80:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x17
	bls		_0800ed98
	ldr		r0,_0800edbc
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800ed98:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08008f44
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0800edb2
	ldr		r0, _0800edc0
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800edb2:
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xEDBA, 0x2

_0800edbc:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800edc0:	.4byte 0x080d05fc
	thumb_func_end sub_0800ed80

	thumb_func_start sub_0800edc4
sub_0800edc4:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	cmp		r4, #0x17
	bls		_0800eddc
	ldr		r0, _0800ee18
	ldr		r1, _0800ee1c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800eddc:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_0800edf4
	ldr		r0, _0800ee20
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800edf4:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0xb
	ble		_0800ee06
	ldr		r0, _0800ee24
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800ee06:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_08008fa4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xEE16, 0x2

_0800ee18:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
_0800ee1c:	.4byte 0x0000013D
_0800ee20:	.4byte 0x080d05c0
_0800ee24:	.4byte 0x080d05dc
	thumb_func_end sub_0800edc4

	thumb_func_start sub_0800ee28
sub_0800ee28:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r4, #0x0
	add		r6, #0x48
	add		r5, r4, #0x0
	add		r5, #0x18
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_08008ffc
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x30
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0xff
	mov		r2, #0x18
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800ee28

	thumb_func_start sub_0800ee58
sub_0800ee58:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r6, r0, #0x0
	add		r0, #0xda
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r2, #0x18
	add		r2, r2, r6
	mov		r8, r2
	mov		r1, #0xf
	and		r0, r1
	lsl		r4, r0, #0x4
	add		r4, r4, r0
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	mov		r0, #0x20
	bl		sub_08000600
	add		r5, r0, #0x0
	mov		r0, #0x18
	ldrsh	r1, [r6, r0]
	mov		r2, #0x1a
	ldrsh	r0, [r6, r2]
	add		r6, r1, #0x0
	mul		r6, r0
	mov		r0, r8
	ldr		r0, [r0, #0x4]
	mov		r8, r0
	lsl		r6, r6, #0x5
	add		r0, r5, #0x0
	bl		sub_080006ec
	ldr		r0, _0800eec0
	str		r0, [r5, #0xc]
	str		r4, [r5, #0x14]
	mov		r1, r8
	str		r1, [r5, #0x18]
	str		r6, [r5, #0x1c]
	add		r0, r5, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800eec0:	.4byte 0x080e084c
	thumb_func_end sub_0800ee58

	thumb_func_start sub_0800eec4
sub_0800eec4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _0800ef18
	str		r0, [r4, #0xc]
	ldr		r2, _0800ef1c
	mov		r0, #0x14
	ldrsh	r1, [r4, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r0, r2
	ldr		r2, _0800ef20
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0800eeea
	add		r0, r2, #0x0
	bl		sub_080b7ea8
_0800eeea:
	add		r0, r4, #0x0
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0800ef04
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_0800ef04:
	ldr		r0, _0800ef24
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0800900c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xEF16, 0x2

_0800ef18:	.4byte 0x080e07bc
_0800ef1c:	.4byte 0x0200AA78
_0800ef20:	.4byte 0x0200ACB8
_0800ef24:	.4byte 0x080e07fc
	thumb_func_end sub_0800eec4

	thumb_func_start sub_0800ef28
sub_0800ef28:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	b		_0800ef48
_0800ef2e:
	add		r0, r4, #0x0
	add		r0, #0x10
	bl		sub_080b5dc4
	add		r0, r4, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	add		r0, #0x18
	mov		r2, #0x0
	bl		sub_080b5dfc
_0800ef48:
	ldr		r4, [r5, #0x4]
	cmp		r4, #0x0
	bne		_0800ef2e
	b		_0800ef54
_0800ef50:
	bl		sub_080b5dc4
_0800ef54:
	ldr		r0, [r5, #0x10]
	cmp		r0, #0x0
	bne		_0800ef50
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800ef28

	thumb_func_start sub_0800ef60
sub_0800ef60:
	push	{ lr }
	add		r3, r0, #0x0
	ldr		r0, [r3, #0x24]
	cmp		r0, #0x0
	bne		_0800ef96
	mov		r0, #0xc0
	lsl		r0, r0, #0x13
	cmp		r1, r0
	bne		_0800ef96
	mov		r0, #0xfa
	lsl		r0, r0, #0x18
	add		r1, r2, r0
	cmp		r1, #0x0
	bge		_0800ef80
	add		r0, #0x1f
	add		r1, r2, r0
_0800ef80:
	asr		r1, r1, #0x5
	ldr		r0, [r3, #0x10]
	ldr		r0, [r0, #0x10]
	cmp		r0, r1
	bge		_0800ef96
	mov		r2, #0xc0
	lsl		r2, r2, #0x2
	sub		r2, r2, r1
	add		r0, r3, #0x0
	bl		sub_080b7c30
_0800ef96:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xEF9A, 0x6
	thumb_func_end sub_0800ef60

	thumb_func_start sub_0800efa0
sub_0800efa0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0800efb6
	ldr		r0, _0800efe0
	mov		r1, #0xc7
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800efb6:
	add		r4, r5, #0x0
	add		r4, #0x30
	mov		r1, #0xb8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	cmp		r4, r0
	bcs		_0800efd8
	add		r6, r0, #0x0
_0800efc6:
	add		r0, r5, #0x0
	add		r0, #0x18
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	add		r4, #0x28
	cmp		r4, r6
	bcc		_0800efc6
_0800efd8:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xEFDE, 0x2

_0800efe0:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
	thumb_func_end sub_0800efa0

	thumb_func_start sub_0800efe4
sub_0800efe4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0800f018
	str		r0, [r4, #0x2c]
	add		r0, r4, #0x0
	add		r0, #0x30
	mov		r1, #0x7
	ldr		r2, _0800f01c
	mov		r3, #0x1
	neg		r3, r3
_0800eff8:
	str		r2, [r0, #0xc]
	str		r2, [r0, #0x1c]
	add		r0, #0x28
	sub		r1, #0x1
	cmp		r1, r3
	bne		_0800eff8
	add		r0, r4, #0x0
	mov		r1, #0x1
	ldr		r2, _0800f020
	bl		sub_080b7c30
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF016, 0x2

_0800f018:	.4byte 0x080e081c
_0800f01c:	.4byte 0x080e0864
_0800f020:	.4byte 0x000002FF
	thumb_func_end sub_0800efe4

	thumb_func_start sub_0800f024
sub_0800f024:
	bx		lr

.incbin "base.gba", 0xF026, 0x2
	thumb_func_end sub_0800f024

	thumb_func_start sub_0800f028
sub_0800f028:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	mov		r8, r1
	add		r6, r5, #0x0
	add		r6, #0x18
	mov		r0, #0x20
	bl		sub_08000600
	add		r4, r0, #0x0
	mov		r0, #0x18
	ldrsh	r1, [r5, r0]
	mov		r2, #0x1a
	ldrsh	r0, [r5, r2]
	add		r5, r1, #0x0
	mul		r5, r0
	ldr		r6, [r6, #0x4]
	lsl		r5, r5, #0x5
	add		r0, r4, #0x0
	bl		sub_080006ec
	ldr		r0, _0800f078
	str		r0, [r4, #0xc]
	mov		r0, r8
	str		r0, [r4, #0x14]
	str		r6, [r4, #0x18]
	str		r5, [r4, #0x1c]
	add		r0, r4, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF076, 0x2

_0800f078:	.4byte 0x080e0834
	thumb_func_end sub_0800f028

	thumb_func_start sub_0800f07c
sub_0800f07c:
	push	{ r4, lr }
	ldr		r4, [r0, #0x14]
	ldr		r1, [r0, #0x18]
	ldr		r2, [r0, #0x1c]
	ldr		r3, _0800f094
	add		r0, r4, #0x0
	bl		sub_08000a2c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xF092, 0x2

_0800f094:	.4byte 0x84000003
	thumb_func_end sub_0800f07c

	thumb_func_start sub_0800f098
sub_0800f098:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	bl		sub_080006ec
	ldr		r0, _0800f0cc
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x14]
	str		r6, [r4, #0x18]
	mov		r0, r8
	str		r0, [r4, #0x1c]
	add		r0, r4, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800f0cc:	.4byte 0x080e0834
	thumb_func_end sub_0800f098

	thumb_func_start sub_0800f0d0
sub_0800f0d0:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r6, r0, #0x0
	mov		r0, #0x18
	add		r0, r0, r6
	mov		r8, r0
	mov		r0, #0xf
	and		r1, r0
	lsl		r4, r1, #0x4
	add		r4, r4, r1
	lsl		r0, r4, #0x8
	add		r4, r4, r0
	lsl		r0, r4, #0x10
	add		r4, r4, r0
	mov		r0, #0x20
	bl		sub_08000600
	add		r5, r0, #0x0
	mov		r2, #0x18
	ldrsh	r1, [r6, r2]
	mov		r2, #0x1a
	ldrsh	r0, [r6, r2]
	add		r6, r1, #0x0
	mul		r6, r0
	mov		r0, r8
	ldr		r0, [r0, #0x4]
	mov		r8, r0
	lsl		r6, r6, #0x5
	add		r0, r5, #0x0
	bl		sub_080006ec
	ldr		r0, _0800f134
	str		r0, [r5, #0xc]
	str		r4, [r5, #0x14]
	mov		r1, r8
	str		r1, [r5, #0x18]
	str		r6, [r5, #0x1c]
	add		r0, r5, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF132, 0x2

_0800f134:	.4byte 0x080e084c
	thumb_func_end sub_0800f0d0

	thumb_func_start sub_0800f138
sub_0800f138:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r4, #0x14
	ldr		r1, [r0, #0x18]
	ldr		r2, [r0, #0x1c]
	ldr		r3, _0800f150
	add		r0, r4, #0x0
	bl		sub_08000a2c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0800f150:	.4byte 0x85000003
	thumb_func_end sub_0800f138

	thumb_func_start sub_0800f154
sub_0800f154:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	bl		sub_080006ec
	ldr		r0, _0800f188
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x14]
	str		r6, [r4, #0x18]
	mov		r0, r8
	str		r0, [r4, #0x1c]
	add		r0, r4, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800f188:	.4byte 0x080e084c
	thumb_func_end sub_0800f154

	thumb_func_start sub_0800f18c
sub_0800f18c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	mov		r8, r3
	add		r5, r4, #0x0
	add		r5, #0x18
	ldr		r0, _0800f218
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x20]
	add		r6, r4, #0x0
	add		r6, #0x30
	add		r2, r1, r2
	add		r0, r6, #0x0
	bl		sub_0808ec54
	ldr		r0, _0800f21c
	mov		r9, r0
	mov		r7, r9
	add		r0, r5, #0x0
	ldmia	r0!, { r1, r2, r3 }
	stmia	r7!, {  r1, r2, r3 }
	ldmia	r0!, { r1, r2, r3 }
	stmia	r7!, {  r1, r2, r3 }
	ldr		r0, [r4, #0x1c]
	mov		r1, r9
	str		r0, [r1, #0x4]
	add		r4, #0x32
	ldrb	r3, [r6, #0x0]
	lsl		r3, r3, #0x1
	add		r3, #0x1a
	add		r3, r5, r3
	mov		r2, r8
	str		r2, [sp, #0x0]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0808f248
	ldrb	r0, [r7, #0x0]
	lsl		r0, r0, #0x1
	add		r0, #0x2
	cmp		r0, #0xa1
	bls		_0800f1f4
	ldr		r0, _0800f220
	mov		r1, #0x80
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800f1f4:
	mov		r0, r9
	add		r1, r7, #0x0
	bl		sub_0808f3b0
	add		r4, r0, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF216, 0x2

_0800f218:	.4byte 0x0200EB34
_0800f21c:	.4byte 0x03007548
_0800f220:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
	thumb_func_end sub_0800f18c

	thumb_func_start sub_0800f224
sub_0800f224:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r4, #0x18
	mov		r0, #0x28
	ldrsh	r1, [r1, r0]
	lsl		r1, r1, #0x2
	ldr		r0, _0800f270
	add		r1, r1, r0
	add		r0, r5, #0x0
	add		r0, #0xd6
	mov		r6, #0x0
	ldrsh	r0, [r0, r6]
	lsl		r0, r0, #0x5
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	str		r0, [r5, #0x1c]
	add		r0, r4, #0x0
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	bl		sub_0808f054
	add		r0, r5, #0x0
	add		r0, #0xd4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r4, #0x0
	bl		sub_0808f090
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808f09c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xF26E, 0x2

_0800f270:	.4byte 0x0200CE5C
	thumb_func_end sub_0800f224

	thumb_func_start sub_0800f274
sub_0800f274:
	push	{ lr }
	ldr		r2, _0800f284
	str		r2, [r0, #0xc]
	bl		sub_0800900c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xF282, 0x2

_0800f284:	.4byte 0x080e07fc
	thumb_func_end sub_0800f274

	thumb_func_start sub_0800f288
sub_0800f288:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _0800f2c4
	mov		r0, #0x0
	str		r0, [r5, #0x4]
	add		r0, r5, #0x0
	mov		r1, #0x1e
	mov		r2, #0x14
	bl		sub_0808f054
	ldrb	r2, [r4, #0x0]
	add		r4, #0x1
	add		r0, r5, #0x0
	add		r0, #0x18
	add		r2, r4, r2
	add		r1, r4, #0x0
	bl		sub_0808ec54
	add		r1, r5, #0x0
	add		r1, #0x1a
	ldrb	r2, [r5, #0x18]
	lsl		r2, r2, #0x1
	add		r2, r2, r1
	add		r0, r5, #0x0
	bl		sub_0808f1a8
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF2C2, 0x2

_0800f2c4:	.4byte 0x03007548
	thumb_func_end sub_0800f288

	thumb_func_start sub_0800f2c8
sub_0800f2c8:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	bl		sub_0800d74c
	add		r5, r0, #0x0
	cmp		r4, #0x0
	blt		_0800f2dc
	ldrb	r0, [r5, #0x0]
	cmp		r4, r0
	blt		_0800f2e8
_0800f2dc:
	ldr		r0, _0800f2ec
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800f2e8:
	add		r1, r5, #0x1
	b		_0800f2f6

_0800f2ec:	.4byte 0x080d0548 @ a_toda/msgtext.cpp

_0800f2f0:
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	add		r1, r1, r0
_0800f2f6:
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800f2f0
	add		r0, r1, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800f2c8

	thumb_func_start sub_0800f304
sub_0800f304:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x0
	blt		_0800f314
	ldrb	r0, [r5, #0x0]
	cmp		r4, r0
	blt		_0800f320
_0800f314:
	ldr		r0, _0800f324
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800f320:
	add		r1, r5, #0x1
	b		_0800f32e

_0800f324:	.4byte 0x080d0548 @ a_toda/msgtext.cpp

_0800f328:
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	add		r1, r1, r0
_0800f32e:
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800f328
	add		r0, r1, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800f304

	thumb_func_start sub_0800f33c
sub_0800f33c:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0800f350
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	bl		sub_0808b7cc
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF34E, 0x2

_0800f350:	.4byte 0x0200BF08
	thumb_func_end sub_0800f33c

	thumb_func_start sub_0800f354
sub_0800f354:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r5, _0800f37c
	ldr		r0, [r5, #0x0]
	add		r1, r4, #0x0
	bl		sub_0808b97c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0800f380
	ldr		r0, [r5, #0x0]
	bl		sub_0808b8a4
	ldr		r2, [r5, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0808b7cc
	b		_0800f39c

_0800f37c:	.4byte 0x0200BF08

_0800f380:
	ldr		r0, _0800f3a4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800f39a
	ldr		r0, _0800f3a8
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800f3ac
	str		r4, [sp, #0x0]
	add		r2, r4, #0x0
	mov		r3, #0x0
	bl		sub_0808c670
_0800f39a:
	mov		r0, #0x0
_0800f39c:
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0800f3a4:	.4byte 0x0200CDBC
_0800f3a8:	.4byte 0x080c70e8 @ WARNING @(%s '%s') #($%08x,$%08x)\n
_0800f3ac:	.4byte 0x080d052c

.incbin "base.gba", 0xF3B0, 0x54
	thumb_func_end sub_0800f354

	thumb_func_start sub_0800f404
sub_0800f404:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08009050
	ldr		r0, _0800f418
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0800f418:	.4byte 0x080e07fc
	thumb_func_end sub_0800f404

	thumb_func_start sub_0800f41c
sub_0800f41c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x44
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	ldr		r5, [sp, #0x0+0x60]
	ldr		r1, _0800f44c
	and		r1, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0800f4a4
	cmp		r1, r0
	bhi		_0800f450
	cmp		r1, #0x0
	beq		_0800f470
	cmp		r1, #0x80
	beq		_0800f4d8
	b		_0800f4c6

.incbin "base.gba", 0xF44A, 0x2

_0800f44c:	.4byte 0x0000FF80

_0800f450:
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0800f4b4
	mov		r0, #0xf8
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_0800f4c6
	str		r5, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r8
	bl		sub_0800a6a8
	b		_0800f5c4
_0800f470:
	cmp		r4, #0x18
	bne		_0800f486
	ldr		r0, _0800f498
	bl		sub_08008f1c
	ldr		r0, _0800f49c
	bl		sub_08008f1c
	ldr		r0, _0800f4a0
	bl		sub_08008f1c
_0800f486:
	str		r5, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r8
	bl		sub_0800a6a8
	b		_0800f5c4

.incbin "base.gba", 0xF496, 0x2

_0800f498:	.4byte 0x0200B5D4
_0800f49c:	.4byte 0x0200B51C
_0800f4a0:	.4byte 0x0200B464

_0800f4a4:
	str		r5, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r8
	bl		sub_0800a6a8
	b		_0800f5c4
_0800f4b4:
	add		r0, r6, #0x0
	add		r0, #0x18
	str		r5, [sp, #0x0]
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r8
	bl		sub_08001954
	b		_0800f5c4
_0800f4c6:
	add		r0, r6, #0x0
	add		r0, #0x18
	str		r5, [sp, #0x0]
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r8
	bl		sub_08001954
	b		_0800f5c4
_0800f4d8:
	cmp		r4, #0x85
	beq		_0800f4f0
	cmp		r4, #0x86
	beq		_0800f560
	str		r5, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r8
	bl		sub_0800a6a8
	b		_0800f5c4
_0800f4f0:
	add		r1, sp, #0x4
	ldr		r0, _0800f54c
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
	mov		r0, #0x5
	add		r0, sp
	mov		r9, r0
	mov		r1, #0x0
	mov		r2, #0x3f
	bl		sub_0808c828
	add		r0, r7, #0x4
	bl		sub_0800f33c
	add		r4, r0, #0x0
	ldr		r0, _0800f550
	ldr		r0, [r0, #0x0]
	ldr		r1, [r7, #0x8]
	bl		sub_0808b7cc
	add		r5, r0, #0x0
	ldr		r0, _0800f554
	add		r1, r5, #0x0
	bl		sub_0808ed5c
	cmp		r4, #0x0
	beq		_0800f532
	add		r0, r4, #0x0
	bl		sub_0800d74c
	add		r1, sp, #0x4
	bl		sub_080126cc
_0800f532:
	ldr		r0, _0800f558
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800f5aa
	ldr		r0, _0800f55c
	mov		r2, #0x28
	ldrsh	r1, [r6, r2]
	add		r2, r5, #0x0
	mov		r3, r9
	bl		sub_0808c670
	b		_0800f5aa

_0800f54c:	.4byte 0x080d071c
_0800f550:	.4byte 0x0200BF08
_0800f554:	.4byte 0x02008888
_0800f558:	.4byte 0x0200CDBC
_0800f55c:	.4byte 0x080d0720 @ ID#_%4d_%s_[%s]

_0800f560:
	add		r0, r5, #0x0
	bl		sub_08002268
	ldr		r0, _0800f5d4
	bl		sub_08002268
	ldr		r0, _0800f5d8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800f59a
	ldr		r0, _0800f5dc
	add		r2, r0, #0x0
	add		r1, r0, #0x0
	sub		r1, #0x18
	ldmia	r1!, { r3, r4, r5 }
	stmia	r2!, {  r3, r4, r5 }
	ldmia	r1!, { r3, r4, r5 }
	stmia	r2!, {  r3, r4, r5 }
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0800f59a
	ldr		r0, _0800f5e0
	mov		r1, #0x3f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800f59a:
	mov		r0, #0x28
	ldrsh	r1, [r6, r0]
	ldr		r0, _0800f5e4
	cmp		r1, r0
	beq		_0800f5be
	add		r0, r6, #0x0
	bl		sub_0800c0c8
_0800f5aa:
	add		r0, r6, #0x0
	add		r0, #0x56
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800f5be
	add		r0, r6, #0x0
	bl		sub_0800c0c8
_0800f5be:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r7, r0
_0800f5c4:
	add		sp, #0x44
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF5D2, 0x2

_0800f5d4:	.4byte 0x00000835
_0800f5d8:	.4byte 0x00000845
_0800f5dc:	.4byte 0x02000F74
_0800f5e0:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp
_0800f5e4:	.4byte 0x00000802
	thumb_func_end sub_0800f41c

	thumb_func_start sub_0800f5e8
sub_0800f5e8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r2, [sp, #0x0]
	add		r7, r3, #0x0
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	bl		sub_0800223c
	add		r5, r6, #0x4
	mov		r0, #0x4
	ldrsh	r1, [r6, r0]
	ldr		r2, _0800f668
	mov		r8, r2
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_0800f65a
	mov		r0, #0xf
	mov		r9, r0
	mov		r1, #0xf
	mov		r10, r1
_0800f61e:
	ldrh	r2, [r5, #0x0]
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x14
	mov		r1, r9
	and		r0, r1
	ldr		r1, _0800f66c
	add		r0, r0, r1
	mov		r1, r10
	and		r1, r2
	mov		r2, #0x9b
	lsl		r2, r2, #0x2
	add		r4, r1, r2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800f648
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0800f670
_0800f648:
	add		r5, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, r8
	eor		r1, r2
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_0800f61e
_0800f65a:
	ldr		r1, [sp, #0x0]
	lsl		r0, r1, #0x2
	add		r6, r6, r0
	cmp		r7, #0x1
	beq		_0800f67e
_0800f664:
	add		r0, r6, #0x0
	b		_0800f6aa

_0800f668:	.4byte 0xFFFF8080
_0800f66c:	.4byte 0x00000265

_0800f670:
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	bl		sub_08002268
	mov		r0, #0x1
	eor		r7, r0
	b		_0800f65a
_0800f67e:
	ldrh	r0, [r6, #0x2]
	lsr		r2, r0, #0x4
	ldr		r1, _0800f694
	add		r3, r0, #0x0
	cmp		r2, r1
	bgt		_0800f69c
	ldr		r0, _0800f698
	cmp		r2, r0
	bge		_0800f664
	sub		r0, #0x2
	b		_0800f69e

_0800f694:	.4byte 0x00000F91
_0800f698:	.4byte 0x00000F8F

_0800f69c:
	ldr		r0, _0800f6bc
_0800f69e:
	cmp		r2, r0
	beq		_0800f664
	mov		r0, #0xf
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r6, r0
_0800f6aa:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF6BA, 0x2

_0800f6bc:	.4byte 0x00000F9C
	thumb_func_end sub_0800f5e8

	thumb_func_start sub_0800f6c0
sub_0800f6c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	mov		r9, r2
	add		r5, r3, #0x0
	mov		r7, #0xf
	and		r7, r5
	ldr		r2, _0800f714
	ldr		r1, [r2, #0x0]
	lsl		r0, r7, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r10, r2
	cmp		r0, #0x0
	beq		_0800f702
	ldr		r0, _0800f718
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0800f702
	ldr		r0, _0800f71c
	ldr		r0, [r0, #0x0]
	ldr		r1, _0800f720
	mov		r3, #0x1
	neg		r3, r3
	str		r3, [sp, #0x0]
	add		r2, r5, #0x0
	bl		sub_0808c670
_0800f702:
	lsl		r0, r7, #0x2
	mov		r8, r0
	cmp		r7, #0x8
	bhi		_0800f7f0
	ldr		r0, _0800f724
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0xF712, 0x2

_0800f714:	.4byte 0x080d0768
_0800f718:	.4byte 0x0200CDBC
_0800f71c:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)
_0800f720:	.4byte 0x080d0750
_0800f724:	.4byte 0x0800f728
_0800f728:	.4byte 0x0800f74c

.incbin "base.gba", 0xF72C, 0x20
	thumb_func_end sub_0800f6c0


.incbin "base.gba", 0xF74C, 0xA4

_0800f7f0:

.incbin "base.gba", 0xF7F0, 0x24
_0800f814:

.incbin "base.gba", 0xF814, 0x16
_0800f82a:

.incbin "base.gba", 0xF82A, 0x16
_0800f840:	.4byte 0x0200DAB0
_0800f844:	.4byte 0xFFFFF200
	thumb_func_start sub_0800f848
sub_0800f848:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r5, r0, #0x0
	mov		r8, r3
	ldr		r0, _0800f8b0
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_0800f8c2
	ldr		r0, _0800f8b4
	mov		r9, r0
	mov		r6, sp
	add		r6, #0xa
	lsl		r2, r2, #0x2
	mov		r10, r2
_0800f86c:
	mov		r1, #0x18
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x4
	bne		_0800f8bc
	mov		r2, #0x20
	ldrsh	r1, [r4, r2]
	mov		r3, r9
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_0800f8bc
	ldr		r0, [r4, #0x28]
	ldr		r1, _0800f8b8
	bl		sub_080bda50
	cmp		r0, #0x0
	bne		_0800f8bc
	mov		r1, sp
	add		r0, r5, #0x0
	ldmia	r0!, { r2, r3, r7 }
	stmia	r1!, {  r2, r3, r7 }
	ldrh	r0, [r4, #0x14]
	strh	r0, [r6, #0x0]
	mov		r0, #0x24
	bl		sub_0808af94
	mov		r1, r8
	mov		r2, sp
	bl		sub_08007b58
	mov		r7, r10
	add		r0, r5, r7
	b		_0800f8ce

_0800f8b0:	.4byte 0x02009E1C
_0800f8b4:	.4byte 0xFFFF8080
_0800f8b8:	.4byte 0x080d07a0 @ hamuribo.acl

_0800f8bc:
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_0800f86c
_0800f8c2:
	ldr		r0, _0800f8e0
	ldr		r1, _0800f8e4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800f8ce:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xF8DE, 0x2

_0800f8e0:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp
_0800f8e4:	.4byte 0x00000123
	thumb_func_end sub_0800f848

	thumb_func_start sub_0800f8e8
sub_0800f8e8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0800f93c
	mov		r1, #0x21
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	ldr		r0, _0800f940
	add		r0, #0xd8
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x0]
	ldr		r0, _0800f944
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x8]
	ldr		r0, _0800f948
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0xc]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x10]
	add		r2, #0x4
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x14]
	add		r2, #0xa
	add		r0, r1, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x2]
	sub		r2, #0x2
	add		r0, r1, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x4]
	ldr		r0, _0800f94c
	ldr		r0, [r0, #0x0]
	add		r0, #0x48
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x6]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0800f93c:	.4byte 0x0200A26C
_0800f940:	.4byte 0x02000BAC
_0800f944:	.4byte 0x0200CE30
_0800f948:	.4byte 0x0200CE44
_0800f94c:	.4byte 0x0200B68C
	thumb_func_end sub_0800f8e8

	thumb_func_start sub_0800f950
sub_0800f950:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x18
	mov		r8, r0
	add		r7, r2, #0x0
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	ldr		r0, _0800f990
	eor		r3, r0
	neg		r0, r3
	orr		r0, r3
	cmp		r0, #0x0
	bge		_0800f99c
	ldr		r4, _0800f994
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0800f986
	ldr		r0, _0800f998
	mov		r1, #0xad
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800f986:
	add		r0, r4, #0x0
	sub		r0, #0xc
	bl		sub_08002fd8
	b		_0800fad8

_0800f990:	.4byte 0xFFFF8080
_0800f994:	.4byte 0x02000BB8
_0800f998:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp

_0800f99c:
	ldr		r0, _0800f9d0
	ldr		r1, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	bne		_0800f9b4
	ldr		r0, _0800f9d4
	ldr		r1, _0800f9d8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800f9b4:
	ldr		r0, _0800f9dc
	mov		r1, #0x21
	bl		sub_0800bcd0
	add		r5, r0, #0x0
	mov		r4, #0x0
	ldr		r0, _0800f9e0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800f9e8
	ldr		r4, _0800f9e4
	b		_0800f9f4

.incbin "base.gba", 0xF9CE, 0x2

_0800f9d0:	.4byte 0x080d07b8
_0800f9d4:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp
_0800f9d8:	.4byte 0x0000015D
_0800f9dc:	.4byte 0x0200A26C
_0800f9e0:	.4byte 0x00000875
_0800f9e4:	.4byte 0x0200AEC8

_0800f9e8:
	ldr		r0, _0800fa54
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800f9f4
	ldr		r4, _0800fa58
_0800f9f4:
	cmp		r4, #0x0
	beq		_0800fa74
	ldr		r3, _0800fa5c
	ldr		r2, _0800fa60
	ldr		r1, _0800fa64
	ldr		r0, [r4, #0x8]
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	ldr		r3, _0800fa68
	ldr		r2, _0800fa6c
	ldr		r1, _0800fa70
	ldr		r0, [r4, #0xc]
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	mov		r0, #0x2
	ldrsh	r1, [r4, r0]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r2, r5, r3
	add		r0, r5, #0x0
	bl		sub_0800be04
	mov		r0, #0x4
	ldrsh	r1, [r4, r0]
	add		r0, r5, #0x0
	bl		sub_0800bdbc
	add		r0, r5, #0x0
	bl		sub_0800becc
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0x0]
	ldrh	r1, [r4, #0x6]
	add		r0, #0x48
	strh	r1, [r0, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r0, [r4, #0x10]
	str		r0, [r1, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	ldr		r0, [r4, #0x14]
	str		r0, [r1, #0x0]
	b		_0800face

_0800fa54:	.4byte 0x00000874
_0800fa58:	.4byte 0x02000C84
_0800fa5c:	.4byte 0x0200CE28
_0800fa60:	.4byte 0x0200CE2C
_0800fa64:	.4byte 0x0200CE30
_0800fa68:	.4byte 0x0200CE3C
_0800fa6c:	.4byte 0x0200CE40
_0800fa70:	.4byte 0x0200CE44

_0800fa74:
	ldr		r4, _0800fae8
	mov		r0, sp
	add		r1, r4, #0x0
	ldmia	r1!, { r2, r3, r5 }
	stmia	r0!, {  r2, r3, r5 }
	ldmia	r1!, { r2, r3, r5 }
	stmia	r0!, {  r2, r3, r5 }
	add		r0, r4, #0x0
	bl		sub_0800f8e8
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x18
	bl		sub_080bda08
	cmp		r0, #0x0
	beq		_0800faac
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0800faac
	ldr		r0, _0800faec
	ldr		r1, _0800faf0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800faac:
	ldr		r4, _0800faf4
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0800fac6
	ldr		r0, _0800faec
	mov		r1, #0xbb
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800fac6:
	add		r0, r4, #0x0
	sub		r0, #0xc
	bl		sub_08002fd8
_0800face:
	ldr		r1, _0800faf8
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
	strb	r0, [r1, #0x1a]
	strb	r0, [r1, #0x1b]
_0800fad8:
	lsl		r0, r7, #0x2
	add		r0, r8
	add		sp, #0x18
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800fae8:	.4byte 0x02000C84
_0800faec:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp
_0800faf0:	.4byte 0x00000175
_0800faf4:	.4byte 0x02000BB8
_0800faf8:	.4byte 0x02008AD4
	thumb_func_end sub_0800f950

	thumb_func_start sub_0800fafc
sub_0800fafc:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	ldr		r2, _0800fbb0
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0800fb56
	ldr		r1, _0800fbb4
	ldr		r3, _0800fbb8
	str		r3, [r1, #0x0]
	add		r0, r3, #0x2
	str		r0, [r1, #0x4]
	add		r0, #0x6
	str		r0, [r1, #0x8]
	add		r0, #0x2
	str		r0, [r1, #0xc]
	add		r0, r3, #0x0
	add		r0, #0x10
	str		r0, [r1, #0x10]
	add		r0, #0x2
	str		r0, [r1, #0x14]
	add		r0, #0x6
	str		r0, [r1, #0x18]
	add		r0, #0x2
	str		r0, [r1, #0x1c]
	add		r0, r3, #0x0
	add		r0, #0x20
	str		r0, [r1, #0x20]
	add		r0, #0x2
	str		r0, [r1, #0x24]
	add		r0, #0xa
	str		r0, [r1, #0x28]
	add		r0, #0x2
	str		r0, [r1, #0x2c]
	add		r0, r3, #0x0
	add		r0, #0x38
	str		r0, [r1, #0x30]
	add		r0, #0x2
	str		r0, [r1, #0x34]
	add		r0, #0xa
	str		r0, [r1, #0x38]
	add		r0, #0x2
	str		r0, [r1, #0x3c]
	mov		r0, #0x1
	str		r0, [r2, #0x0]
_0800fb56:
	ldr		r0, _0800fbbc
	add		r3, r0, #0x0
	add		r3, #0xd0
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x2
	bne		_0800fb6e
	ldr		r0, _0800fbc0
	ldr		r1, _0800fbb4
	ldmia	r1!, { r2, r6, r7 }
	stmia	r0!, {  r2, r6, r7 }
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
_0800fb6e:
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x4
	bne		_0800fb80
	ldr		r0, _0800fbc0
	ldr		r1, _0800fbc4
	ldmia	r1!, { r2, r6, r7 }
	stmia	r0!, {  r2, r6, r7 }
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
_0800fb80:
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x3
	bne		_0800fb92
	ldr		r0, _0800fbc0
	ldr		r1, _0800fbc8
	ldmia	r1!, { r2, r6, r7 }
	stmia	r0!, {  r2, r6, r7 }
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
_0800fb92:
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x6
	bne		_0800fba4
	ldr		r0, _0800fbc0
	ldr		r1, _0800fbcc
	ldmia	r1!, { r2, r3, r6 }
	stmia	r0!, {  r2, r3, r6 }
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
_0800fba4:
	lsl		r0, r4, #0x2
	add		r0, r5, r0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xFBAE, 0x2

_0800fbb0:	.4byte 0x0200AF28
_0800fbb4:	.4byte 0x0200AEE8
_0800fbb8:	.4byte 0x02000E6C
_0800fbbc:	.4byte 0x02000BAC
_0800fbc0:	.4byte 0x02000B88
_0800fbc4:	.4byte 0x0200AEF8
_0800fbc8:	.4byte 0x0200AF08
_0800fbcc:	.4byte 0x0200AF18
	thumb_func_end sub_0800fafc

	thumb_func_start sub_0800fbd0
sub_0800fbd0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	add		r6, r2, #0x0
	cmp		r3, #0x1
	beq		_0800fc90
	cmp		r3, #0x1
	bgt		_0800fbec
	cmp		r3, #0x0
	beq		_0800fbf8
	lsl		r6, r6, #0x2
	b		_0800fcfe
_0800fbec:
	cmp		r3, #0x2
	beq		_0800fcd8
	lsl		r6, r6, #0x2
	b		_0800fcfe
_0800fbf4:
	add		r1, r4, #0x0
	b		_0800fc24
_0800fbf8:
	mov		r0, #0x7
	bl		sub_08009518
	lsr		r5, r0, #0x4
	mov		r4, #0x0
	lsl		r6, r6, #0x2
	cmp		r4, r5
	bge		_0800fc22
	ldr		r7, _0800fc74
_0800fc0a:
	ldr		r1, [r7, #0x0]
	lsl		r0, r4, #0x4
	add		r0, r0, r1
	mov		r1, #0xe
	ldrsh	r0, [r0, r1]
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800fbf4
	add		r4, #0x1
	cmp		r4, r5
	blt		_0800fc0a
_0800fc22:
	sub		r1, r5, #0x1
_0800fc24:
	ldr		r0, _0800fc74
	lsl		r1, r1, #0x4
	ldr		r0, [r0, #0x0]
	add		r4, r0, r1
	mov		r2, #0x8
	ldrsh	r5, [r4, r2]
	ldr		r0, _0800fc78
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800fc3e
	mov		r0, #0x6
	ldrsh	r5, [r4, r0]
_0800fc3e:
	ldr		r0, _0800fc7c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800fc4c
	mov		r1, #0xa
	ldrsh	r5, [r4, r1]
_0800fc4c:
	ldr		r0, _0800fc80
	add		r0, #0xd4
	ldr		r1, _0800fc84
	strh	r5, [r1, #0x0]
	ldrh	r1, [r0, #0x0]
	sub		r1, r1, r5
	strh	r1, [r0, #0x0]
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0800fcfe
	ldr		r0, _0800fc88
	mov		r1, #0xfd
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_0800fcfe

.incbin "base.gba", 0xFC72, 0x2

_0800fc74:	.4byte 0x0200AEC4
_0800fc78:	.4byte 0x000003A2
_0800fc7c:	.4byte 0x000003A1
_0800fc80:	.4byte 0x02000BAC
_0800fc84:	.4byte 0x0200AEE4
_0800fc88:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp

_0800fc8c:
	add		r2, r4, #0x0
	b		_0800fcc0
_0800fc90:
	mov		r0, #0x7
	bl		sub_08009518
	lsr		r5, r0, #0x4
	mov		r4, #0x0
	ldr		r2, _0800fcd4
	mov		r8, r2
	lsl		r6, r6, #0x2
	cmp		r4, r5
	bge		_0800fcbe
	ldr		r7, [r2, #0x0]
_0800fca6:
	ldr		r1, [r7, #0x0]
	lsl		r0, r4, #0x4
	add		r0, r0, r1
	mov		r1, #0xe
	ldrsh	r0, [r0, r1]
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800fc8c
	add		r4, #0x1
	cmp		r4, r5
	blt		_0800fca6
_0800fcbe:
	sub		r2, r5, #0x1
_0800fcc0:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x0]
	lsl		r0, r2, #0x4
	add		r0, r0, r1
	mov		r2, #0xe
	ldrsh	r0, [r0, r2]
	bl		sub_08002268
	b		_0800fcfe

_0800fcd4:	.4byte 0x080d07d0

_0800fcd8:
	ldr		r0, _0800fd10
	add		r0, #0xd4
	ldr		r1, _0800fd14
	ldr		r1, [r1, #0x8]
	ldrh	r1, [r1, #0x0]
	ldrh	r2, [r0, #0x0]
	add		r1, r1, r2
	strh	r1, [r0, #0x0]
	bl		sub_08006884
	lsl		r6, r6, #0x2
	cmp		r0, #0x0
	bge		_0800fcfe
	ldr		r0, _0800fd18
	ldr		r1, _0800fd1c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800fcfe:
	mov		r1, r9
	add		r0, r1, r6
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xFD0E, 0x2

_0800fd10:	.4byte 0x02000BAC
_0800fd14:	.4byte 0x02000B58
_0800fd18:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp
_0800fd1c:	.4byte 0x00000201
	thumb_func_end sub_0800fbd0

	thumb_func_start sub_0800fd20
sub_0800fd20:
	push	{ r4, r5, r6, r7, lr }
	mov		r0, #0x7
	bl		sub_08009518
	lsr		r5, r0, #0x4
	mov		r4, #0x0
	ldr		r7, _0800fd4c
	cmp		r4, r5
	bge		_0800fd56
	ldr		r6, [r7, #0x0]
_0800fd34:
	ldr		r1, [r6, #0x0]
	lsl		r0, r4, #0x4
	add		r0, r0, r1
	mov		r1, #0xe
	ldrsh	r0, [r0, r1]
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0800fd50
	add		r1, r4, #0x0
	b		_0800fd58

.incbin "base.gba", 0xFD4A, 0x2

_0800fd4c:	.4byte 0x080d086c

_0800fd50:
	add		r4, #0x1
	cmp		r4, r5
	blt		_0800fd34
_0800fd56:
	sub		r1, r5, #0x1
_0800fd58:
	ldr		r0, [r7, #0x0]
	lsl		r1, r1, #0x4
	ldr		r0, [r0, #0x0]
	add		r4, r0, r1
	mov		r0, #0x8
	ldrsh	r5, [r4, r0]
	ldr		r0, _0800fd88
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800fd72
	mov		r1, #0x6
	ldrsh	r5, [r4, r1]
_0800fd72:
	ldr		r0, _0800fd8c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0800fd80
	mov		r0, #0xa
	ldrsh	r5, [r4, r0]
_0800fd80:
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800fd88:	.4byte 0x000003A2
_0800fd8c:	.4byte 0x000003A1
	thumb_func_end sub_0800fd20

	thumb_func_start sub_0800fd90
sub_0800fd90:
	push	{ r4, r5, r6, lr }
	mov		r0, #0x7
	bl		sub_08009518
	lsr		r5, r0, #0x4
	mov		r4, #0x0
	cmp		r4, r5
	bge		_0800fdc2
	ldr		r6, _0800fdb8
_0800fda2:
	ldr		r1, [r6, #0x0]
	lsl		r0, r4, #0x4
	add		r0, r0, r1
	mov		r1, #0xe
	ldrsh	r0, [r0, r1]
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0800fdbc
	add		r0, r4, #0x0
	b		_0800fdc4

_0800fdb8:	.4byte 0x0200AEC4

_0800fdbc:
	add		r4, #0x1
	cmp		r4, r5
	blt		_0800fda2
_0800fdc2:
	sub		r0, r5, #0x1
_0800fdc4:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xFDCA, 0x2
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	bl		sub_08016590
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800fd90

	thumb_func_start sub_0800fde4
sub_0800fde4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		sub_08016228
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xFDFE, 0x2
	thumb_func_end sub_0800fde4

	thumb_func_start sub_0800fe00
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		sub_0801601c
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xFE1A, 0x2
	thumb_func_end sub_0800fde4

	thumb_func_start sub_0800fe1c
sub_0800fe1c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r2, #0x0
	add		r1, r3, #0x0
	mov		r0, #0x6
	ldrsh	r6, [r4, r0]
	mov		r2, #0x4
	ldrsh	r5, [r4, r2]
	ldr		r0, _0800fe50
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_0800fe3e
	ldr		r0, _0800fe54
	add		r2, r5, #0x0
	bl		sub_0808c670
_0800fe3e:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_08015c34
	lsl		r0, r7, #0x2
	add		r0, r4, r0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800fe50:	.4byte 0x0200CDBC
_0800fe54:	.4byte 0x80d07bc @ _BGMPLAYER(%d,%d)
	thumb_func_end sub_0800fe1c

	thumb_func_start sub_0800fe58
sub_0800fe58:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r2, #0x0
	add		r5, r3, #0x0
	ldr		r0, _0800febc
	lsl		r4, r5, #0x2
	ldr		r0, [r0, #0x0]
	add		r0, r0, r4
	bl		sub_0800f33c
	ldr		r1, _0800fec0
	str		r0, [r1, #0x0]
	ldr		r1, _0800fec4
	ldr		r0, _0800fec8
	add		r4, r4, r0
	ldr		r0, [r4, #0x0]
	str		r0, [r1, #0x0]
	ldr		r1, _0800fecc
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _0800fed0
	mov		r0, #0xc
	strh	r0, [r1, #0x0]
	ldr		r1, _0800fed4
	mov		r0, #0x6c
	strh	r0, [r1, #0x0]
	ldr		r0, _0800fed8
	ldr		r1, _0800fedc
	add		r0, r0, r1
	mov		r1, #0x1
	lsl		r1, r5
	ldrh	r2, [r0, #0x0]
	orr		r1, r2
	strh	r1, [r0, #0x0]
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0800feb2
	ldr		r0, _0800fee0
	mov		r1, #0xdd
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0800feb2:
	lsl		r0, r6, #0x2
	add		r0, r7, r0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800febc:	.4byte 0x0200AEE0
_0800fec0:	.4byte 0x0200BA50
_0800fec4:	.4byte 0x0200BA54
_0800fec8:	.4byte 0x080c7c08
_0800fecc:	.4byte 0x0200BA58
_0800fed0:	.4byte 0x0200BA5A
_0800fed4:	.4byte 0x0200BA5C
_0800fed8:	.4byte 0x02000BAC
_0800fedc:	.4byte 0x00003BA6
_0800fee0:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp
	thumb_func_end sub_0800fe58

	thumb_func_start sub_0800fee4
sub_0800fee4:
	push	{ lr }
	ldr		r1, _0800ff04
	ldr		r0, _0800ff08
	add		r0, #0xd8
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x2
	ldr		r1, [r1, #0x0]
	add		r1, r1, r0
	ldr		r0, _0800ff0c
	ldr		r0, [r0, #0x0]
	bl		sub_0808b7e0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xFF02, 0x2

_0800ff04:	.4byte 0x0200AEC0
_0800ff08:	.4byte 0x02000BAC
_0800ff0c:	.4byte 0x0200BF08
	thumb_func_end sub_0800fee4

	thumb_func_start sub_0800ff10
sub_0800ff10:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r6, r0, #0x0
	add		r5, r2, #0x0
	add		r1, r3, #0x0
	ldr		r0, _0800ff60
	bl		sub_0800bcd0
	bl		sub_08012960
	bl		sub_0808c3ac
	mov		r8, r0
	mov		r0, #0xfa
	lsl		r0, r0, #0x4
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_080021c8
	ldr		r4, _0800ff64
	mov		r1, #0xe1
	lsl		r1, r1, #0x2
	mov		r0, r8
	bl		sub_080bbcac
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	bl		sub_08002268
	lsl		r5, r5, #0x2
	add		r6, r6, r5
	add		r0, r6, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0800ff60:	.4byte 0x0200A26C
_0800ff64:	.4byte 0x080d07ae
	thumb_func_end sub_0800ff10

	thumb_func_start sub_0800ff68
sub_0800ff68:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	bl		sub_08015794
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800ff68

	thumb_func_start sub_0800ff80
sub_0800ff80:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	bl		sub_080156b8
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	bx		lr

.incbin "base.gba", 0xFF9E, 0x2
	thumb_func_end sub_0800ff80

	thumb_func_start sub_0800ffa0
sub_0800ffa0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		sub_080131bc
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xFFBA, 0x2
	ldr		r1, _0800ffc8
	add		r1, #0xd8
	strh	r3, [r1, #0x0]
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	bx		lr

_0800ffc8:	.4byte 0x02000BAC
	thumb_func_end sub_0800ffa0

	thumb_func_start sub_0800ffcc
sub_0800ffcc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	ldr		r0, _0800fff0
	add		r1, r0, #0x0
	add		r1, #0xd0
	ldrb	r1, [r1, #0x0]
	add		r2, r0, #0x0
	add		r2, #0xd1
	ldrb	r2, [r2, #0x0]
	bl		sub_0800327c
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0800fff0:	.4byte 0x02000BAC
	thumb_func_end sub_0800ffcc

	thumb_func_start sub_0800fff4
sub_0800fff4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r2, r3, #0x0
	ldr		r0, _08010020
	asr		r1, r2, #0x8
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r3, r0, #0x0
	add		r3, #0xcf
	ldrb	r3, [r3, #0x0]
	bl		sub_0800327c
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1001E, 0x2

_08010020:	.4byte 0x02000BAC
	thumb_func_end sub_0800fff4

	thumb_func_start sub_08010024
sub_08010024:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r2, #0x0
	add		r4, r3, #0x0
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08010088
	add		r0, r4, #0x0
	bl		sub_08002268
	ldr		r1, _08010058
	ldr		r0, _0801005c
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x15
	beq		_08010060
	cmp		r0, #0x32
	beq		_0801006c
	b		_08010072

.incbin "base.gba", 0x10056, 0x2

_08010058:	.4byte 0x02000BAC
_0801005c:	.4byte 0x000003E1

_08010060:
	ldr		r0, _08010068
	bl		sub_08002268
	b		_08010072

_08010068:	.4byte 0x0000041B

_0801006c:
	ldr		r0, _08010094
	bl		sub_08002268
_08010072:
	ldr		r0, _08010098
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_08010088
	ldr		r0, _0801009c
	ldr		r1, _080100a0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08010088:
	lsl		r0, r5, #0x2
	add		r0, r6, r0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x10092, 0x2

_08010094:	.4byte 0x00000444
_08010098:	.4byte 0x02000F8D
_0801009c:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp
_080100a0:	.4byte 0x00000109
	thumb_func_end sub_08010024

	thumb_func_start sub_080100a4
sub_080100a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r7, r2, #0x0
	add		r5, r3, #0x0
	ldr		r0, _080100ec
	mov		r1, #0x21
	bl		sub_0800bcd0
	add		r6, r0, #0x0
	ldr		r4, _080100f0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080100ce
	ldr		r0, _080100f4
	mov		r1, #0xf8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080100ce:
	ldr		r4, [r4, #0x0]
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _080100f8
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	bge		_08010100
	ldr		r1, _080100fc
	lsl		r0, r5, #0x1
	add		r0, r0, r1
	ldrh	r3, [r0, #0x0]
	b		_0801010c

.incbin "base.gba", 0x100EA, 0x2

_080100ec:	.4byte 0x0200A26C
_080100f0:	.4byte 0x0200B68C
_080100f4:	.4byte 0x080d0734 @ a_toda/game/ham5script.cpp
_080100f8:	.4byte 0xFFFF8080
_080100fc:	.4byte 0x080d08fc

_08010100:
	add		r0, r6, #0x0
	bl		sub_08012960
	bl		sub_0808c3ac
	add		r3, r0, #0x0
_0801010c:
	add		r0, r4, #0x0
	add		r0, #0x48
	strh	r3, [r0, #0x0]
	lsl		r0, r7, #0x2
	add		r0, r8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080100a4

	thumb_func_start sub_08010120
sub_08010120:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r2, #0x0
	ldr		r0, _0801017c
	mov		r1, #0x21
	bl		sub_08008f44
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08010144
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08010144:
	ldr		r0, _08010180
	bl		sub_0800223c
	ldr		r0, _08010184
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08010170
	ldr		r4, _08010188
	add		r0, r4, #0x0
	sub		r0, #0x80
	mov		r1, #0x50
	mov		r2, #0x90
	lsl		r2, r2, #0x4
	bl		sub_080b73f8
	bl		sub_0801500c
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
_08010170:
	lsl		r0, r5, #0x2
	add		r0, r6, r0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1017A, 0x2

_0801017c:	.4byte 0x0200A26C
_08010180:	.4byte 0x00000804
_08010184:	.4byte 0x0200B68C
_08010188:	.4byte 0x0200DA80
	ldr		r1, _08010198
	strh	r3, [r1, #0x0]
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	bx		lr

.incbin "base.gba", 0x10196, 0x2

_08010198:	.4byte 0x0200AF2C
	thumb_func_end sub_08010120

	thumb_func_start sub_0801019c
sub_0801019c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r2
	add		r7, r3, #0x0
	mov		r5, #0x0
	ldr		r4, _080101b0
	b		_080101b8

.incbin "base.gba", 0x101AE, 0x2

_080101b0:	.4byte 0x080d0794

_080101b4:
	add		r4, #0x4
	add		r5, #0x1
_080101b8:
	cmp		r5, #0x2
	bgt		_080101ce
	ldr		r0, [r4, #0x0]
	add		r1, r7, #0x0
	bl		sub_08008f44
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_080101b4
	ldrh	r0, [r6, #0x6]
	strh	r0, [r1, #0x22]
_080101ce:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r6, r0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x101DE, 0x2
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0xa8
	bl		sub_0808af94
	ldr		r1, _08010204
	add		r2, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_0801401c
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08010204:	.4byte 0x0200B464
	thumb_func_end sub_0801019c

	thumb_func_start sub_08010208
sub_08010208:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0xa8
	bl		sub_0808af94
	ldr		r1, _0801022c
	add		r2, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_0801401c
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0801022c:	.4byte 0x0200B51C
	thumb_func_end sub_08010208

	thumb_func_start sub_08010230
sub_08010230:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, #0xa8
	bl		sub_0808af94
	ldr		r1, _08010254
	add		r2, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_0801401c
	lsl		r5, r5, #0x2
	add		r4, r4, r5
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08010254:	.4byte 0x0200B5D4
	thumb_func_end sub_08010230

	thumb_func_start sub_08010258
sub_08010258:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r7, r2, #0x0
	ldr		r0, _080102a0
	add		r6, r0, #0x0
	add		r6, #0xd0
	ldrb	r1, [r6, #0x0]
	add		r5, r0, #0x0
	add		r5, #0xd1
	ldrb	r2, [r5, #0x0]
	add		r2, #0x1
	add		r4, r0, #0x0
	add		r4, #0xcf
	ldrb	r3, [r4, #0x0]
	bl		sub_0800327c
	ldr		r0, _080102a4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08010292
	ldr		r0, _080102a8
	ldrb	r1, [r4, #0x0]
	ldrb	r2, [r6, #0x0]
	ldrb	r3, [r5, #0x0]
	bl		sub_0808c670
_08010292:
	lsl		r0, r7, #0x2
	add		r0, r8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080102a0:	.4byte 0x02000BAC
_080102a4:	.4byte 0x0200CDBC
_080102a8:	.4byte 0x080d0780 @ LAP%d_DAY%d_TIME%d
	thumb_func_end sub_08010258

	thumb_func_start sub_080102ac
sub_080102ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r2
	add		r5, r6, #0x4
	add		r4, r5, #0x0
	mov		r0, #0x4
	ldrsh	r1, [r6, r0]
	ldr		r7, _080102c4
	b		_080102d6

.incbin "base.gba", 0x102C2, 0x2

_080102c4:	.4byte 0xFFFF8080

_080102c8:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_0800223c
	add		r4, #0x2
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
_080102d6:
	eor		r1, r7
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_080102c8
	ldr		r0, _08010308
	sub		r1, r4, r5
	asr		r1, r1, #0x1
	bl		sub_080b63dc
	lsl		r0, r0, #0x1
	add		r0, r0, r5
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	bl		sub_08002268
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r6, r0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x10306, 0x2

_08010308:	.4byte 0x0200BDD4
	thumb_func_end sub_080102ac

	thumb_func_start sub_0801030c
sub_0801030c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r1, r3, #0x0
	ldr		r0, _08010328
	bl		sub_08003428
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x10326, 0x2

_08010328:	.4byte 0x02000BAC
	thumb_func_end sub_0801030c

	thumb_func_start sub_0801032c
sub_0801032c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	ldr		r0, _0801034c
	add		r0, #0xd4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r2, #0x6
	ldrsh	r0, [r4, r2]
	cmp		r1, r0
	bge		_08010350
	add		r0, r3, #0x0
	bl		sub_0800223c
	b		_08010356

.incbin "base.gba", 0x1034A, 0x2

_0801034c:	.4byte 0x02000BAC

_08010350:
	add		r0, r3, #0x0
	bl		sub_08002268
_08010356:
	lsl		r0, r5, #0x2
	add		r0, r4, r0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0801032c

	thumb_func_start sub_08010360
sub_08010360:
	push	{ r4, r5, lr }
	ldr		r5, _08010390
	ldr		r4, _08010394
	mov		r3, #0x6
	ldrsh	r1, [r0, r3]
	lsl		r1, r1, #0x10
	ldr		r3, _08010398
	str		r1, [r3, #0x0]
	str		r1, [r4, #0x0]
	str		r1, [r5, #0x0]
	ldr		r5, _0801039c
	ldr		r4, _080103a0
	mov		r3, #0x4
	ldrsh	r1, [r0, r3]
	lsl		r1, r1, #0x10
	ldr		r3, _080103a4
	str		r1, [r3, #0x0]
	str		r1, [r4, #0x0]
	str		r1, [r5, #0x0]
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08010390:	.4byte 0x0200CE28
_08010394:	.4byte 0x0200CE2C
_08010398:	.4byte 0x0200CE30
_0801039c:	.4byte 0x0200CE3C
_080103a0:	.4byte 0x0200CE40
_080103a4:	.4byte 0x0200CE44
	thumb_func_end sub_08010360

	thumb_func_start sub_080103a8
sub_080103a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	mov		r8, r0
	add		r7, r2, #0x0
	add		r5, r3, #0x0
	mov		r4, #0xf
	and		r4, r5
	ldr		r2, _08010400
	ldr		r1, [r2, #0x0]
	lsl		r0, r4, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r0, #0x0
	bne		_080103e6
	ldr		r0, _08010404
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080103e6
	ldr		r0, _08010408
	ldr		r0, [r0, #0x0]
	ldr		r1, _0801040c
	mov		r3, #0x1
	neg		r3, r3
	str		r3, [sp, #0x0]
	add		r2, r5, #0x0
	bl		sub_0808c670
_080103e6:
	ldr		r1, [r6, #0x0]
	lsl		r0, r4, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08010410
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	add		r0, r4, r0
	bl		sub_08002268
	b		_0801041a

.incbin "base.gba", 0x103FE, 0x2

_08010400:	.4byte 0x080d0870
_08010404:	.4byte 0x0200CDBC
_08010408:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)
_0801040c:	.4byte 0x080d076c

_08010410:
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0801042c
	mov		r3, #0x0
	bl		sub_080b7724
_0801041a:
	lsl		r0, r7, #0x2
	add		r0, r8
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1042A, 0x2

_0801042c:	.4byte 0xFFFFF201
	thumb_func_end sub_080103a8

	thumb_func_start sub_08010430
sub_08010430:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	mov		r8, r2
	add		r4, r3, #0x0
	mov		r5, #0xf
	and		r5, r4
	ldr		r2, _08010488
	ldr		r1, [r2, #0x0]
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r7, r2, #0x0
	cmp		r0, #0x0
	bne		_0801046e
	ldr		r0, _0801048c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0801046e
	ldr		r0, _08010490
	ldr		r0, [r0, #0x0]
	ldr		r1, _08010494
	mov		r3, #0x1
	neg		r3, r3
	str		r3, [sp, #0x0]
	add		r2, r4, #0x0
	bl		sub_0808c670
_0801046e:
	ldr		r1, [r7, #0x0]
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	bne		_08010498
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	add		r0, r5, r0
	bl		sub_08002268
	b		_080104b6

.incbin "base.gba", 0x10486, 0x2

_08010488:	.4byte 0x080d0874
_0801048c:	.4byte 0x0200CDBC
_08010490:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)
_08010494:	.4byte 0x080d076c

_08010498:
	add		r0, r6, #0x4
	bl		sub_0800f33c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_080104aa
	add		r0, r4, #0x0
	bl		sub_0801269c
_080104aa:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _080104c8
	mov		r3, #0x0
	bl		sub_080b7724
_080104b6:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r6, r0
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080104c8:	.4byte 0xFFFFF206
	thumb_func_end sub_08010430

	thumb_func_start sub_080104cc
sub_080104cc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		sub_08013200
	lsl		r4, r4, #0x2
	add		r5, r5, r4
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x104E6, 0xA
	thumb_func_end sub_080104cc

	thumb_func_start sub_080104f0
sub_080104f0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0800a4fc
	ldr		r0, _08010508
	str		r0, [r4, #0x50]
	ldr		r0, _0801050c
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08010508:	.4byte 0x080e08bc
_0801050c:	.4byte 0x080e089c
	thumb_func_end sub_080104f0

	thumb_func_start sub_08010510
sub_08010510:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08009050
	add		r0, r4, #0x0
	add		r0, #0x18
	bl		sub_080020c0
	ldr		r0, _08010550
	str		r0, [r4, #0x50]
	ldr		r0, _08010554
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x5a
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x5e
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, _08010558
	str		r0, [r4, #0x50]
	ldr		r0, _0801055c
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08010550:	.4byte 0x080e05ac
_08010554:	.4byte 0x080e05bc
_08010558:	.4byte 0x080e08bc
_0801055c:	.4byte 0x080e089c
	thumb_func_end sub_08010510

	thumb_func_start sub_08010560
sub_08010560:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	str		r0, [sp, #0x0]
	add		r6, r1, #0x0
	mov		r10, r2
	str		r3, [sp, #0x4]
	add		r0, r3, #0x0
	sub		r0, #0x1
	cmp		r0, #0x1
	ble		_080105da
	lsl		r0, r2, #0x6
	lsl		r1, r2, #0x5
	ldr		r2, [sp, #0x0]
	add		r2, r2, r1
	mov		r8, r2
	add		r2, r1, #0x0
	add		r2, #0x20
	ldr		r3, [sp, #0x0]
	add		r7, r2, r3
	mov		r9, r1
	ldr		r4, [sp, #0x4]
	sub		r4, #0x2
	sub		r0, #0x20
	add		r5, r0, r3
_08010598:
	add		r0, r7, #0x0
	mov		r2, #0xa4
	lsl		r2, r2, #0x4
	add		r1, r6, r2
	mov		r2, r10
	sub		r2, #0x2
	mov		r3, #0x20
	bl		sub_0808c844
	mov		r0, r8
	mov		r3, #0xaa
	lsl		r3, r3, #0x4
	add		r1, r6, r3
	mov		r2, #0x1
	mov		r3, #0x20
	bl		sub_0808c844
	add		r0, r5, #0x0
	mov		r2, #0xac
	lsl		r2, r2, #0x4
	add		r1, r6, r2
	mov		r2, #0x1
	mov		r3, #0x20
	bl		sub_0808c844
	mov		r3, r10
	lsl		r0, r3, #0x5
	add		r5, r5, r0
	add		r8, r9
	add		r7, r9
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08010598
_080105da:
	ldr		r0, [sp, #0x4]
	sub		r0, #0x1
	mov		r9, r0
	mov		r1, r10
	sub		r1, #0x2
	str		r1, [sp, #0x14]
	mov		r2, #0x1
	neg		r2, r2
	add		r2, r10
	mov		r8, r2
	add		r3, r6, #0x0
	add		r3, #0xa0
	str		r3, [sp, #0x8]
	add		r0, r6, #0x0
	add		r0, #0x60
	str		r0, [sp, #0x10]
	mov		r1, r10
	lsl		r1, r1, #0x5
	str		r1, [sp, #0xC]
	ldr		r2, [sp, #0x4]
	sub		r2, #0x2
	str		r2, [sp, #0x18]
	mov		r3, r8
	cmp		r3, #0x1
	ble		_0801064a
	mov		r1, r10
	mov		r0, r9
	mul		r0, r1
	lsl		r0, r0, #0x5
	ldr		r2, [sp, #0x0]
	add		r0, r0, r2
	add		r5, r0, #0x0
	add		r5, #0x20
	add		r4, r2, #0x0
	add		r4, #0x20
	mov		r7, r10
	sub		r7, #0x2
_08010624:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	add		r1, #0x40
	mov		r2, #0x1
	mov		r3, #0x20
	bl		sub_0808c844
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r1, #0xe0
	mov		r2, #0x1
	mov		r3, #0x20
	bl		sub_0808c844
	add		r5, #0x20
	add		r4, #0x20
	sub		r7, #0x1
	cmp		r7, #0x0
	bne		_08010624
_0801064a:
	ldr		r0, [sp, #0x0]
	add		r1, r6, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808c844
	mov		r3, r10
	mov		r4, r9
	mul		r4, r3
	lsl		r0, r4, #0x5
	ldr		r1, [sp, #0x0]
	add		r0, r1, r0
	ldr		r1, [sp, #0x8]
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808c844
	ldr		r2, [sp, #0x14]
	lsl		r0, r2, #0x5
	ldr		r3, [sp, #0x0]
	add		r0, r3, r0
	ldr		r1, [sp, #0x10]
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808c844
	ldr		r0, [sp, #0x14]
	add		r4, r4, r0
	lsl		r4, r4, #0x5
	ldr		r1, [sp, #0x0]
	add		r4, r1, r4
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808c844
	ldr		r3, [sp, #0x0]
	ldr		r1, [sp, #0xC]
	add		r0, r3, r1
	mov		r2, #0xa6
	lsl		r2, r2, #0x4
	add		r1, r6, r2
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_0808c844
	mov		r0, r10
	add		r0, r8
	lsl		r0, r0, #0x5
	ldr		r3, [sp, #0x0]
	add		r0, r3, r0
	mov		r2, #0xa8
	lsl		r2, r2, #0x4
	add		r1, r6, r2
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_0808c844
	ldr		r3, [sp, #0x18]
	mov		r4, r10
	mul		r4, r3
	lsl		r0, r4, #0x5
	ldr		r1, [sp, #0x0]
	add		r0, r1, r0
	mov		r2, #0xae
	lsl		r2, r2, #0x4
	add		r1, r6, r2
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_0808c844
	add		r4, r8
	lsl		r4, r4, #0x5
	ldr		r3, [sp, #0x0]
	add		r4, r3, r4
	mov		r0, #0xb0
	lsl		r0, r0, #0x4
	add		r1, r6, r0
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_0808c844
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x10706, 0x2
	thumb_func_end sub_08010560

	thumb_func_start sub_08010708
sub_08010708:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r8, r0
	add		r4, r1, #0x0
	mov		r9, r2
	add		r7, r3, #0x0
	ldr		r5, _080107b0
	add		r0, r5, #0x0
	mov		r1, #0x1e
	mov		r2, #0x14
	bl		sub_0808f054
	mov		r0, #0x0
	strb	r0, [r5, #0xe]
	mov		r1, #0xc
	strb	r1, [r5, #0xf]
	strh	r0, [r5, #0x10]
	mov		r0, #0xc
	strh	r0, [r5, #0x12]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	mov		r10, r0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r1, [sp, #0x0]
	cmp		r1, r0
	bge		_080107de
	mov		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	bge		_080107de
	add		r6, r4, #0x0
_08010754:
	mov		r0, r8
	add		r1, r6, #0x0
	bl		sub_0800f304
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	add		r2, r1, r2
	add		r0, r5, #0x0
	add		r0, #0x18
	bl		sub_0808ec54
	ldrb	r0, [r5, #0x18]
	lsl		r0, r0, #0x1
	ldr		r1, _080107b4
	add		r4, r1, r0
	add		r0, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_0808f1a8
	add		r2, r0, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, r2
	bge		_08010786
	str		r2, [sp, #0x0]
_08010786:
	mov		r1, #0x12
	ldrsh	r0, [r5, r1]
	add		r0, #0xc
	mov		r1, #0x0
	strh	r1, [r5, #0x10]
	strh	r0, [r5, #0x12]
	ldr		r0, [sp, #0x4]
	add		r0, #0x1
	str		r0, [sp, #0x4]
	cmp		r7, #0x0
	beq		_080107bc
	add		r0, r7, #0x0
	ldr		r1, _080107b8
	bl		sub_0808c63c
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080bdb08
	add		r7, r0, #0x0
	b		_080107c8

_080107b0:	.4byte 0x03007548
_080107b4:	.4byte 0x03007562
_080107b8:	.4byte 0x080d0878

_080107bc:
	sub		r0, r4, #0x2
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xff
	lsl		r1, r1, #0x8
	cmp		r0, r1
	beq		_080107de
_080107c8:
	add		r6, #0x1
	mov		r0, #0x1
	add		r10, r0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	cmp		r10, r0
	bge		_080107de
	mov		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_08010754
_080107de:
	ldr		r1, [sp, #0x4]
	mov		r0, r9
	str		r1, [r0, #0x0]
	mov		r1, sp
	ldrh	r1, [r1, #0x0]
	strh	r1, [r5, #0x10]
	ldrh	r0, [r5, #0x12]
	mov		r1, #0xc
	sub		r0, r0, r1
	strh	r0, [r5, #0x12]
	add		r0, r5, #0x0
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08010708

	thumb_func_start sub_08010804
sub_08010804:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x3c
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _080109ac
	str		r0, [r6, #0x4c]
	ldr		r0, _080109b0
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x74
	bl		sub_0808e21c
	add		r0, r6, #0x0
	add		r0, #0xe4
	bl		sub_0808b374
	add		r0, r6, #0x0
	add		r0, #0xe0
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	bl		sub_0808e21c
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	bl		sub_0808b374
	mov		r3, #0xb8
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	str		r4, [r0, #0x0]
	mov		r1, #0xf
	add		r0, r7, #0x0
	and		r0, r1
	add		r1, r6, #0x0
	add		r1, #0x54
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x56
	strh	r4, [r0, #0x0]
	str		r5, [r6, #0x58]
	str		r4, [r6, #0x5c]
	ldr		r4, _080109b4
	add		r0, r4, #0x0
	mov		r1, #0x7
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_0801089e
	add		r0, r4, #0x0
	mov		r1, #0x7
	bl		sub_08008df4
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_0801089e
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_0801089e:
	ldr		r0, _080109b8
	bl		sub_08002148
	add		r4, r0, #0x0
	ldr		r0, _080109bc
	mov		r8, r0
	mov		r0, sp
	mov		r1, r8
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r5, _080109c0
	ldr		r0, [r5, #0x0]
	mov		r2, #0xf0
	and		r2, r7
	add		r1, r4, #0x0
	bl		sub_0808b814
	add		r1, r0, #0x0
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	ldr		r0, _080109c4
	mov		r1, #0x7
	bl		sub_08008f44
	cmp		r0, #0x0
	bne		_080108f4
	ldr		r0, _080109c8
	bl		sub_08002148
	add		r4, r0, #0x0
	mov		r0, sp
	mov		r1, r8
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
_080108f4:
	ldr		r0, _080109cc
	mov		r1, #0x54
	add		r1, r1, r6
	mov		r9, r1
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	add		r1, #0xa
	bl		sub_08008f44
	cmp		r0, #0x0
	bne		_08010932
	ldr		r0, _080109d0
	bl		sub_08002148
	add		r4, r0, #0x0
	mov		r0, sp
	mov		r1, r8
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, [r5, #0x0]
	mov		r2, #0xf
	and		r2, r7
	add		r1, r4, #0x0
	bl		sub_0808b814
	add		r1, r0, #0x0
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_08010932:
	ldr		r5, _080109d4
	add		r0, r5, #0x0
	mov		r1, #0x9
	bl		sub_08008f44
	cmp		r0, #0x0
	bne		_0801095c
	ldr		r0, _080109d8
	bl		sub_08002148
	add		r4, r0, #0x0
	mov		r0, sp
	mov		r1, r8
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
_0801095c:
	add		r0, r5, #0x0
	mov		r1, #0x9
	bl		sub_08008f44
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	add		r0, r6, #0x0
	add		r0, #0x70
	strb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801098e
	mov		r3, #0x82
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	add		r0, r6, #0x0
	mov		r2, #0x0
	bl		sub_0801266c
	add		r1, r6, #0x0
	add		r1, #0x74
	add		r0, r6, #0x0
	mov		r2, #0x1
	bl		sub_0801266c
_0801098e:
	ldr		r1, _080109dc
	mov		r2, r9
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r0, r6, #0x0
	add		sp, #0x3c
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080109ac:	.4byte 0x080e09a4
_080109b0:	.4byte 0x080e09bc
_080109b4:	.4byte 0x02009E1C
_080109b8:	.4byte 0x080d087c @ script_wndacl
_080109bc:	.4byte 0x00000803
_080109c0:	.4byte 0x0200BF08
_080109c4:	.4byte 0x02009984
_080109c8:	.4byte 0x080d088c @ script_wndacg
_080109cc:	.4byte 0x0200AA18
_080109d0:	.4byte 0x080d089c @ script_wndbound
_080109d4:	.4byte 0x02008C54
_080109d8:	.4byte 0x080d08ac @ script_wndcursor
_080109dc:	.4byte 0x0200AF30
	thumb_func_end sub_08010804

	thumb_func_start sub_080109e0
sub_080109e0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	add		r6, r4, #0x0
	add		r6, #0x40
	ldr		r0, _08010a7c
	str		r0, [r4, #0x4c]
	ldr		r0, _08010a80
	str		r0, [r4, #0xc]
	ldr		r1, _08010a84
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _08010a88
	add		r5, r4, #0x0
	add		r5, #0x54
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r0, _08010a8c
	mov		r3, #0x0
	ldrsh	r1, [r5, r3]
	add		r1, #0xa
	bl		sub_0800ed80
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08010a2c
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_08010a2c:
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	mov		r2, #0xf0
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	bl		sub_08002268
	ldr		r0, _08010a90
	bl		sub_0800223c
	mov		r3, #0x82
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	add		r0, #0x74
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_08010a74
	add		r0, r4, #0x0
	bl		sub_080b74c8
_08010a74:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x10A7A, 0x2

_08010a7c:	.4byte 0x080e09a4
_08010a80:	.4byte 0x080e09bc
_08010a84:	.4byte 0x0200AF2C
_08010a88:	.4byte 0x0200AF30
_08010a8c:	.4byte 0x0200AA18
_08010a90:	.4byte 0x00000885
	thumb_func_end sub_080109e0

	thumb_func_start sub_08010a94
sub_08010a94:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r4, r0, #0x0
	str		r1, [sp, #0x0]
	str		r2, [sp, #0x4]
	add		r6, r3, #0x0
	ldr		r5, [sp, #0x0+0x34]
	ldr		r0, _08010b14
	add		r1, r4, #0x0
	add		r1, #0x54
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	add		r1, #0xa
	bl		sub_0800ed80
	add		r7, r0, #0x0
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r3, #0x0
	str		r3, [sp, #0x8]
	mov		r0, #0x0
	ldrsh	r3, [r6, r0]
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	add		r2, r3, #0x0
	mul		r2, r0
	mov		r9, r2
	add		r2, r7, #0x0
	add		r2, #0xde
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r9, r0
	ble		_08010ae4
	mov		r0, #0x1
	str		r0, [sp, #0x8]
_08010ae4:
	mov		r1, #0xa
	add		r1, r8
	mov		r10, r1
	mov		r0, #0xdc
	add		r0, r0, r7
	mov		r9, r0
	add		r1, r7, #0x0
	add		r1, #0xe8
	str		r1, [sp, #0x10]
	add		r0, r4, #0x0
	add		r0, #0x40
	str		r0, [sp, #0xC]
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x0
	beq		_08010b3e
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	add		r1, r3, #0x0
	mul		r1, r0
	b		_08010b28

.incbin "base.gba", 0x10B12, 0x2

_08010b14:	.4byte 0x0200AA18

_08010b18:
	mov		r0, #0x0
	ldrsh	r1, [r6, r0]
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mul		r1, r0
_08010b28:
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r1, r0
	bgt		_08010b18
	ldr		r0, _08010bac
	bl		sub_0800f354
	str		r0, [r4, #0x5c]
	bl		sub_0800d74c
	str		r0, [r4, #0x60]
_08010b3e:
	mov		r0, #0x0
	ldrsh	r1, [r6, r0]
	mov		r3, #0x0
	ldrsh	r2, [r5, r3]
	mov		r0, r9
	ldrh	r3, [r0, #0x0]
	mov		r0, r10
	bl		sub_0808ebc0
	ldr		r1, [sp, #0x10]
	ldr		r4, [r1, #0x0]
	ldrh	r0, [r6, #0x0]
	mov		r2, r8
	strh	r0, [r2, #0x4]
	mov		r3, #0x0
	ldrsh	r2, [r6, r3]
	ldrh	r0, [r5, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x6]
	mov		r0, #0x0
	ldrsh	r3, [r5, r0]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_0800f224
	add		r0, r4, #0x0
	add		r0, #0x18
	ldr		r1, [sp, #0x0]
	ldr		r2, [sp, #0x4]
	bl		sub_0808cf20
	ldrh	r1, [r4, #0x1c]
	mov		r2, #0xc0
	lsl		r2, r2, #0x2
	add		r0, r2, #0x0
	orr		r0, r1
	strh	r0, [r4, #0x1c]
	ldr		r0, [sp, #0xC]
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, #0x0
	ldr		r3, [sp, #0x8]
	cmp		r3, #0x0
	bne		_08010b9c
	mov		r0, #0x1
_08010b9c:
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08010bac:	.4byte 0x080d08c0 @ ms_Message_ERR
	thumb_func_end sub_08010a94

	thumb_func_start sub_08010bb0
sub_08010bb0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, _08010c14
	add		r1, r5, #0x0
	add		r1, #0x54
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	add		r1, #0xa
	bl		sub_0800ed80
	add		r4, r0, #0x0
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	mov		r3, #0x4
	ldrsh	r2, [r0, r3]
	mov		r3, #0x6
	ldrsh	r1, [r0, r3]
	mul		r2, r1
	add		r0, #0xa
	lsl		r2, r2, #0x1
	mov		r1, #0x0
	bl		sub_0808c7b0
	add		r4, #0xe8
	ldr		r2, [r4, #0x0]
	ldrh	r1, [r2, #0x1c]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x1c]
	ldr		r0, _08010c18
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08010c08
	ldr		r1, _08010c1c
	mov		r0, #0x1
	strb	r0, [r1, #0x1A]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
_08010c08:
	add		r0, r5, #0x0
	bl		sub_080b7690
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08010c14:	.4byte 0x0200AA18
_08010c18:	.4byte 0x00000885
_08010c1c:	.4byte 0x0200CE00
	thumb_func_end sub_08010bb0

	thumb_func_start sub_08010c20
sub_08010c20:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	add		r6, r1, #0x0
	mov		r9, r2
	ldr		r0, _08010cc8
	str		r3, [sp, #0x0]
	bl		sub_0800227c
	ldr		r3, [sp, #0x0]
	cmp		r0, #0x0
	bne		_08010cba
	ldr		r1, _08010ccc
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r1, #0x1
	add		r7, r1, #0x0
	and		r7, r0
	lsl		r4, r7, #0x2
	add		r4, r4, r7
	lsl		r4, r4, #0x7
	ldr		r0, _08010cd0
	mov		r8, r0
	ldr		r5, [r0, #0x0]
	add		r0, r4, r5
	add		r2, r7, #0x0
	eor		r2, r1
	lsl		r1, r2, #0x2
	add		r1, r1, r2
	lsl		r1, r1, #0x7
	add		r1, r1, r5
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	str		r3, [sp, #0x0]
	bl		sub_0808c818
	ldr		r1, _08010cd4
	mov		r12, r1
	lsl		r0, r6, #0x2
	add		r0, r0, r6
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r1, r0, #0x1
	mov		r2, r9
	lsl		r0, r2, #0x2
	add		r0, r0, r5
	add		r2, r4, r0
	ldr		r3, [sp, #0x0]
	sub		r3, #0x1
	mov		r6, r8
	cmp		r3, #0x0
	ble		_08010ca6
	mov		r0, #0x10
	sub		r0, r0, r1
	lsl		r0, r0, #0x8
	orr		r0, r1
_08010c98:
	mov		r1, r12
	strh	r1, [r2, #0x0]
	strh	r0, [r2, #0x2]
	add		r2, #0x4
	sub		r3, #0x1
	cmp		r3, #0x0
	bgt		_08010c98
_08010ca6:
	ldr		r1, [r6, #0x0]
	lsl		r0, r7, #0x2
	add		r0, r0, r7
	lsl		r0, r0, #0x7
	add		r0, r0, r1
	ldr		r1, _08010cd8
	ldr		r3, _08010cdc
	mov		r2, #0x4
	bl		sub_08000a2c
_08010cba:
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08010cc8:	.4byte 0x00000885
_08010ccc:	.4byte 0x0200AF58
_08010cd0:	.4byte 0x080d08d0
_08010cd4:	.4byte 0x00003E41
_08010cd8:	.4byte 0x04000050
_08010cdc:	.4byte 0xA2600003
	thumb_func_end sub_08010c20

	thumb_func_start sub_08010ce0
sub_08010ce0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x38
	add		r5, r0, #0x0
	str		r1, [sp, #0x4]
	add		r4, r5, #0x0
	add		r4, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r2, #0xf0
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	bl		sub_0800223c
	ldr		r3, _08010d50
	ldr		r7, [sp, #0x4]
	cmp		r7, r3
	beq		_08010d58
	add		r6, r4, #0x0
	mov		r0, #0x66
	add		r0, r0, r5
	mov		r10, r0
	mov		r1, #0x6a
	add		r1, r1, r5
	mov		r9, r1
	add		r2, r5, #0x0
	add		r2, #0x64
	str		r2, [sp, #0x1C]
	add		r4, #0x14
	str		r4, [sp, #0x20]
	add		r7, r5, #0x0
	add		r7, #0x70
	str		r7, [sp, #0x24]
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	str		r0, [sp, #0x28]
	mov		r1, #0xad
	lsl		r1, r1, #0x1
	add		r1, r5, r1
	str		r1, [sp, #0x2C]
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r2, r5, r2
	str		r2, [sp, #0x30]
	ldr		r4, [sp, #0x4]
	cmp		r4, r3
	bgt		_08010d48
	b		_08010f3c
_08010d48:
	ldr		r0, _08010d54
	cmp		r4, r0
	beq		_08010d92
	b		_08010f3c

_08010d50:	.4byte 0xFFFFF201
_08010d54:	.4byte 0xFFFFF206

_08010d58:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r7, sp
	ldrh		r7, [r7, #0x4]
	strh	r7, [r0, #0x0]
	mov		r4, #0x5
	mov		r0, #0x66
	add		r0, r0, r5
	mov		r10, r0
	mov		r1, #0x6a
	add		r1, r1, r5
	mov		r9, r1
_08010d70:
	mov		r3, r10
	mov		r7, #0x0
	ldrsh	r2, [r3, r7]
	mov		r0, r9
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08010c20
	sub		r4, #0x1
	add		r0, r5, #0x0
	bl		sub_080b7690
	cmp		r4, #0x0
	bge		_08010d70
	b		_08010f46
_08010d92:
	add		r0, r5, #0x0
	add		r0, #0x56
	ldrh	r2, [r0, #0x0]
	ldr		r1, _08010e94
	str		r0, [sp, #0x18]
	cmp		r2, r1
	bne		_08010daa
	add		r0, r5, #0x0
	add		r1, r3, #0x0
	mov		r2, #0x0
	bl		sub_08010ce0
_08010daa:
	mov		r2, #0x0
	str		r2, [sp, #0xC]
	ldr		r0, [r5, #0x60]
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	blt		_08010db8
	b		_08010f2e
_08010db8:
	ldr		r3, [sp, #0x1C]
	mov		r8, r3
	mov		r7, r10
	add		r4, r7, #0x0
	str		r4, [sp, #0x34]
	ldr		r0, [sp, #0x20]
	str		r0, [sp, #0x10]
	mov		r1, r9
	str		r1, [sp, #0x14]
_08010dca:
	ldr		r2, [sp, #0xC]
	cmp		r2, #0x0
	ble		_08010de0
	add		r0, r5, #0x0
	ldr		r1, _08010e98
	mov		r2, #0x0
	bl		sub_08010ce0
	add		r0, r5, #0x0
	bl		sub_080b7690
_08010de0:
	ldr		r0, [r5, #0x58]
	ldrh	r0, [r0, #0x8]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	ldr		r0, [r5, #0x58]
	ldrh	r0, [r0, #0xa]
	ldr		r4, [sp, #0x34]
	strh	r0, [r4, #0x0]
	mov		r7, sp
	ldrh		r0, [r7, #0x4]
	ldr		r7, [sp, #0x18]
	strh	r0, [r7, #0x0]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0xC]
	bl		sub_08010f5c
	str		r0, [sp, #0x8]
	ldr		r3, [r5, #0xc]
	mov		r1, #0x28
	ldrsh	r0, [r3, r1]
	add		r0, r5, r0
	mov		r2, r8
	mov		r4, #0x0
	ldrsh	r1, [r2, r4]
	ldr		r7, [sp, #0x34]
	mov		r4, #0x0
	ldrsh	r2, [r7, r4]
	ldr		r7, [sp, #0x14]
	str		r7, [sp, #0x0]
	ldr		r4, [r3, #0x2c]
	ldr		r3, [sp, #0x10]
	bl		sub_080bbc80
	mov		r1, r8
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x3
	strh	r0, [r1, #0x0]
	ldr		r3, [sp, #0x34]
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	lsl		r0, r0, #0x3
	strh	r0, [r3, #0x0]
	ldr		r7, [sp, #0x10]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x3
	strh	r0, [r7, #0x0]
	ldr		r2, [sp, #0x14]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x3
	strh	r0, [r2, #0x0]
	mov		r4, #0x1
_08010e4c:
	mov		r7, r10
	mov		r0, #0x0
	ldrsh	r2, [r7, r0]
	mov		r1, r9
	mov		r7, #0x0
	ldrsh	r3, [r1, r7]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08010c20
	add		r4, #0x1
	add		r0, r5, #0x0
	bl		sub_080b7690
	cmp		r4, #0x6
	ble		_08010e4c
	ldr		r1, _08010e9c
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	mov		r2, #0xe
	cmp		r0, #0x0
	bne		_08010e7a
	mov		r2, #0xf
_08010e7a:
	mov		r3, #0x0
	ldrsh	r0, [r6, r3]
	mov		r4, #0x7
	eor		r0, r4
	neg		r3, r0
	orr		r3, r0
	lsr		r3, r3, #0x1f
	add		r0, r5, #0x0
	ldr		r1, [sp, #0xC]
	bl		sub_0801107c
	b		_08010eb2

.incbin "base.gba", 0x10E92, 0x2

_08010e94:	.4byte 0x0000F206
_08010e98:	.4byte 0xFFFFF201
_08010e9c:	.4byte 0x02000C78

_08010ea0:
	mov		r7, #0x0
	ldrsh	r0, [r6, r7]
	cmp		r0, #0x7
	bne		_08010eb2
	mov		r2, #0xf0
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	bl		sub_08002268
_08010eb2:
	mov		r3, #0x0
	ldrsh	r0, [r6, r3]
	cmp		r0, #0x2
	bne		_08010efc
	ldr		r4, [sp, #0x1C]
	mov		r7, #0x0
	ldrsh	r2, [r4, r7]
	ldr		r1, [sp, #0x20]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	mov		r4, r10
	mov		r7, #0x0
	ldrsh	r3, [r4, r7]
	mov		r4, r9
	mov		r7, #0x0
	ldrsh	r1, [r4, r7]
	mov		r7, #0x82
	lsl		r7, r7, #0x1
	add		r4, r5, r7
	add		r2, r2, r0
	sub		r2, #0xf
	add		r3, r3, r1
	sub		r3, #0xf
	ldr		r1, [sp, #0x24]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08010efc
	ldr		r7, [sp, #0x28]
	strh	r2, [r7, #0x0]
	ldr		r0, [sp, #0x2C]
	strh	r3, [r0, #0x0]
	ldr		r0, [sp, #0x30]
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_08010efc:
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x2
	bne		_08010ea0
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08010ea0
	mov		r0, #0x57
	bl		sub_0808f690
	ldr		r2, [sp, #0xC]
	ldr		r3, [sp, #0x8]
	add		r2, r2, r3
	str		r2, [sp, #0xC]
	ldr		r0, [r5, #0x60]
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	bge		_08010f2e
	b		_08010dca
_08010f2e:
	mov		r4, #0x0
	ldrsh	r0, [r6, r4]
	mov		r7, #0xf0
	lsl		r7, r7, #0x4
	add		r0, r0, r7
	bl		sub_08002268
_08010f3c:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08010f3c
_08010f46:
	add		r0, r5, #0x0
	bl		sub_08010bb0
	add		sp, #0x38
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08010ce0

	thumb_func_start sub_08010f5c
sub_08010f5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	mov		r8, r0
	mov		r0, #0x8
	str		r0, [sp, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x60]
	mov		r2, sp
	mov		r3, #0x0
	bl		sub_08010708
	ldr		r1, [sp, #0x0]
	mov		r4, #0x10
	ldrsh	r3, [r0, r4]
	sub		r1, #0x1
	mov		r4, #0x12
	ldrsh	r2, [r0, r4]
	ldr		r0, _08010f98
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08010f9c
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	b		_08010f9e

_08010f98:	.4byte 0x02000BAC

_08010f9c:
	lsl		r0, r1, #0x1
_08010f9e:
	add		r2, r2, r0
	add		r1, r2, #0x0
	add		r1, #0x19
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08010fae
	add		r0, r2, #0x0
	add		r0, #0x20
_08010fae:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	sub		r0, r1, r0
	sub		r0, #0x19
	sub		r7, r2, r0
	add		r1, r3, #0x7
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08010fc4
	add		r0, r3, #0x0
	add		r0, #0xe
_08010fc4:
	asr		r0, r0, #0x3
	lsl		r1, r0, #0x3
	mov		r0, r8
	add		r0, #0x54
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	add		r5, r1, #0x0
	add		r5, #0x18
	cmp		r0, #0x2
	bne		_08010fde
	add		r5, #0x10
	cmp		r0, #0x2
	beq		_08010fe8
_08010fde:
	sub		r0, r5, r3
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	lsr		r1, r0, #0x1
	b		_08010fea
_08010fe8:
	mov		r1, #0xc
_08010fea:
	mov		r0, r8
	add		r0, #0x6c
	strh	r1, [r0, #0x0]
	sub		r0, r7, r2
	add		r0, #0x1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r2, r8
	add		r2, #0x6e
	strh	r0, [r2, #0x0]
	asr		r5, r5, #0x3
	asr		r7, r7, #0x3
	mov		r3, r8
	add		r3, #0x64
	ldrh	r1, [r3, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x13
	lsr		r0, r5, #0x1f
	add		r0, r5, r0
	asr		r0, r0, #0x1
	sub		r6, r1, r0
	add		r0, r6, r5
	mov		r9, r0
	sub		r2, #0x8
	ldrh	r1, [r2, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x13
	lsr		r0, r7, #0x1f
	add		r0, r7, r0
	asr		r0, r0, #0x1
	sub		r4, r1, r0
	add		r0, r4, r7
	mov		r12, r0
	cmp		r6, #0x0
	blt		_08011044
	mov		r0, r9
	cmp		r0, #0x1e
	ble		_08011040
	neg		r0, r5
	add		r1, r0, #0x0
	add		r1, #0x1e
	b		_08011046
_08011040:
	add		r1, r6, #0x0
	b		_08011046
_08011044:
	mov		r1, #0x0
_08011046:
	cmp		r4, #0x0
	blt		_0801105a
	mov		r0, r12
	cmp		r0, #0x14
	ble		_08011056
	neg		r0, r7
	add		r0, #0x14
	b		_0801105c
_08011056:
	add		r0, r4, #0x0
	b		_0801105c
_0801105a:
	mov		r0, #0x0
_0801105c:
	strh	r1, [r3, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, r8
	add		r0, #0x68
	strh	r5, [r0, #0x0]
	add		r0, #0x2
	strh	r7, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1107A, 0x2
	thumb_func_end sub_08010f5c

	thumb_func_start sub_0801107c
sub_0801107c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r8, r0
	str		r1, [sp, #0x0]
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	ldr		r0, _080110e8
	mov		r1, r8
	add		r1, #0x54
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	add		r1, #0xa
	bl		sub_0800ed80
	str		r0, [sp, #0x4]
	add		r7, r0, #0x0
	add		r7, #0x18
	mov		r3, r8
	add		r3, #0x6c
	mov		r0, #0x0
	ldrsh	r4, [r3, r0]
	mov		r0, r8
	add		r0, #0x6e
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	ldr		r0, _080110ec
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r1, r2, #0x0
	add		r1, #0xb
	cmp		r0, #0x0
	bne		_080110ca
	add		r1, #0x1
_080110ca:
	ldr		r2, [sp, #0x4]
	strh	r4, [r2, #0x28]
	strh	r1, [r2, #0x2a]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	add		r1, r2, #0x0
	add		r1, #0x26
	strb	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x27
	strb	r5, [r0, #0x0]
	mov		r10, r6
	mov		r2, #0x0
	str		r2, [sp, #0x8]
	b		_08011190

_080110e8:	.4byte 0x0200AA18
_080110ec:	.4byte 0x02000BAC

_080110f0:
	mov		r1, r8
	ldr		r0, [r1, #0x5c]
	add		r1, r4, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	add		r2, r1, r2
	add		r0, r7, #0x0
	add		r0, #0x18
	bl		sub_0808ec54
	add		r5, r7, #0x0
	add		r5, #0x1a
	ldrb	r0, [r7, #0x18]
	lsl		r0, r0, #0x1
	add		r6, r5, r0
	cmp		r5, r6
	bcs		_08011170
	mov		r2, #0x54
	add		r2, r8
	mov		r9, r2
_0801111e:
	mov		r0, r9
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r1, #0xa
	ldr		r0, _080111b4
	bl		sub_0800ed80
	ldr		r1, [sp, #0x4]
	cmp		r1, r0
	beq		_08011140
	ldr		r0, _080111b8
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08011140:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	mov		r3, r10
	bl		sub_0808f35c
	add		r5, r0, #0x0
	mov		r4, #0x2
_08011150:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08011160
	mov		r2, #0x0
	mov		r10, r2
_08011160:
	mov		r0, r8
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08011150
	cmp		r5, r6
	bcc		_0801111e
_08011170:
	sub		r0, r6, #0x2
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xff
	lsl		r1, r1, #0x8
	cmp		r0, r1
	beq		_080111a4
	ldrb	r1, [r7, #0xe]
	mov		r2, #0x12
	ldrsh	r0, [r7, r2]
	ldrb	r2, [r7, #0xf]
	add		r0, r0, r2
	strh	r1, [r7, #0x10]
	strh	r0, [r7, #0x12]
	ldr		r0, [sp, #0x8]
	add		r0, #0x1
	str		r0, [sp, #0x8]
_08011190:
	ldr		r1, [sp, #0x8]
	ldr		r2, [sp, #0x0]
	add		r4, r1, r2
	mov		r1, r8
	ldr		r0, [r1, #0x5c]
	bl		sub_0800d74c
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_080110f0
_080111a4:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080111b4:	.4byte 0x0200AA18
_080111b8:	.4byte 0x080d08d4 @ a_toda/game/windowx.cpp
	thumb_func_end sub_0801107c

	thumb_func_start sub_080111bc
sub_080111bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x38
	add		r5, r0, #0x0
	mov		r10, r1
	add		r4, r5, #0x0
	add		r4, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r2, #0xf0
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	bl		sub_0800223c
	ldr		r3, _080111f0
	cmp		r10, r3
	beq		_08011274
	cmp		r10, r3
	bgt		_080111f8
	ldr		r0, _080111f4
	cmp		r10, r0
	beq		_08011204
	b		_0801148c

_080111f0:	.4byte 0xFFFFF201
_080111f4:	.4byte 0xFFFFF200

_080111f8:
	ldr		r0, _08011200
	cmp		r10, r0
	beq		_080112c2
	b		_0801148c

_08011200:	.4byte 0xFFFFF206

_08011204:
	ldr		r0, _08011268
	ldr		r1, [r5, #0x58]
	mov		r3, #0x6
	ldrsh	r1, [r1, r3]
	bl		sub_0800bcd0
	add		r4, r0, #0x0
	mov		r6, #0x8e
	lsl		r6, r6, #0x1
	add		r0, r4, r6
	ldr		r1, _0801126c
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r2, r2, r0
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08011228
	neg		r0, r2
_08011228:
	asr		r3, r0, #0x10
	cmp		r2, #0x0
	bge		_08011230
	neg		r3, r3
_08011230:
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, _08011270
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r0, r2, r0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08011246
	neg		r1, r0
_08011246:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0801124e
	neg		r1, r1
_0801124e:
	add		r0, r3, #0x4
	asr		r0, r0, #0x3
	mov		r3, #0xcb
	lsl		r3, r3, #0x1
	add		r2, r5, r3
	strh	r0, [r2, #0x0]
	asr		r1, r1, #0x3
	mov		r4, #0xcc
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	strh	r1, [r0, #0x0]
	b		_0801148c

.incbin "base.gba", 0x11266, 0x2

_08011268:	.4byte 0x0200A26C
_0801126c:	.4byte 0x0200CE30
_08011270:	.4byte 0x0200CE44

_08011274:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r6, r10
	strh	r6, [r0, #0x0]
	mov		r4, #0x5
	add		r7, r5, #0x0
	add		r7, #0x66
	mov		r0, #0x6a
	add		r0, r0, r5
	mov		r8, r0
	mov		r1, #0x40
	add		r1, r1, r5
	mov		r9, r1
	mov		r2, #0xcf
	lsl		r2, r2, #0x1
	add		r6, r5, r2
_08011294:
	mov		r3, #0x0
	ldrsh	r0, [r6, r3]
	lsl		r0, r0, #0x3
	mov		r1, #0x0
	ldrsh	r2, [r7, r1]
	cmp		r2, r0
	ble		_080112a4
	add		r2, r0, #0x0
_080112a4:
	mov		r0, r8
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	add		r3, #0x10
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08010c20
	sub		r4, #0x1
	add		r0, r5, #0x0
	bl		sub_080b7690
	cmp		r4, #0x0
	bge		_08011294
	b		_080114a4
_080112c2:
	add		r0, r5, #0x0
	add		r0, #0x56
	ldrh	r2, [r0, #0x0]
	ldr		r1, _08011498
	str		r0, [sp, #0x1C]
	cmp		r2, r1
	bne		_080112da
	add		r0, r5, #0x0
	add		r1, r3, #0x0
	mov		r2, #0x0
	bl		sub_080111bc
_080112da:
	mov		r2, #0x0
	mov		r9, r2
	ldr		r0, [r5, #0x60]
	str		r4, [sp, #0x18]
	add		r7, r5, #0x0
	add		r7, #0x66
	mov		r3, #0x6a
	add		r3, r3, r5
	mov		r8, r3
	add		r4, r5, #0x0
	add		r4, #0x64
	str		r4, [sp, #0x24]
	add		r6, r5, #0x0
	add		r6, #0x68
	str		r6, [sp, #0x28]
	add		r1, r5, #0x0
	add		r1, #0x70
	str		r1, [sp, #0x2C]
	mov		r2, #0xac
	lsl		r2, r2, #0x1
	add		r2, r5, r2
	str		r2, [sp, #0x30]
	mov		r3, #0xad
	lsl		r3, r3, #0x1
	add		r3, r5, r3
	str		r3, [sp, #0x34]
	mov		r4, #0xba
	lsl		r4, r4, #0x1
	add		r4, r5, r4
	str		r4, [sp, #0x20]
	ldrb	r0, [r0, #0x0]
	cmp		r9, r0
	blt		_0801131e
	b		_0801147c
_0801131e:
	ldr		r6, [sp, #0x24]
	str		r6, [sp, #0x8]
	str		r7, [sp, #0xC]
	ldr		r0, [sp, #0x28]
	str		r0, [sp, #0x10]
	mov		r1, r8
	str		r1, [sp, #0x14]
_0801132c:
	mov		r2, r9
	cmp		r2, #0x0
	ble		_08011342
	add		r0, r5, #0x0
	ldr		r1, _0801149c
	mov		r2, #0x0
	bl		sub_080111bc
	add		r0, r5, #0x0
	bl		sub_080b7690
_08011342:
	mov		r4, r10
	ldr		r3, [sp, #0x1C]
	strh	r4, [r3, #0x0]
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_080114c4
	str		r0, [sp, #0x4]
	ldr		r1, [r5, #0x58]
	mov		r6, #0x4
	ldrsh	r0, [r1, r6]
	cmp		r0, #0x1
	bne		_08011370
	ldrh	r0, [r1, #0x8]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x13
	ldr		r1, [sp, #0x24]
	strh	r0, [r1, #0x0]
	ldr		r0, [r5, #0x58]
	ldrh	r0, [r0, #0xa]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x13
	strh	r0, [r7, #0x0]
_08011370:
	add		r0, r5, #0x0
	bl		sub_080115c0
	ldr		r3, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r3, r2]
	add		r0, r5, r0
	ldr		r4, [sp, #0x8]
	mov		r6, #0x0
	ldrsh	r1, [r4, r6]
	ldr		r4, [sp, #0xC]
	mov		r6, #0x0
	ldrsh	r2, [r4, r6]
	ldr		r4, [sp, #0x14]
	str		r4, [sp, #0x0]
	ldr		r4, [r3, #0x2c]
	ldr		r3, [sp, #0x10]
	bl		sub_080bbc80
	ldr		r6, [sp, #0x8]
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x3
	strh	r0, [r6, #0x0]
	ldr		r2, [sp, #0xC]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x3
	strh	r0, [r2, #0x0]
	ldr		r4, [sp, #0x10]
	mov		r6, #0x0
	ldrsh	r0, [r4, r6]
	lsl		r0, r0, #0x3
	strh	r0, [r4, #0x0]
	ldr		r1, [sp, #0x14]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x3
	strh	r0, [r1, #0x0]
	mov		r4, #0x1
	mov		r3, #0xcf
	lsl		r3, r3, #0x1
	add		r6, r5, r3
_080113c6:
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x3
	mov		r3, #0x0
	ldrsh	r2, [r7, r3]
	cmp		r2, r0
	ble		_080113d6
	add		r2, r0, #0x0
_080113d6:
	mov		r0, r8
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	add		r3, #0x10
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08010c20
	add		r4, #0x1
	add		r0, r5, #0x0
	bl		sub_080b7690
	cmp		r4, #0x6
	ble		_080113c6
	ldr		r2, _080114a0
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	mov		r2, #0xe
	cmp		r0, #0x0
	bne		_08011400
	mov		r2, #0xf
_08011400:
	ldr		r3, [sp, #0x18]
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	mov		r6, #0x9
	eor		r0, r6
	neg		r3, r0
	orr		r3, r0
	lsr		r3, r3, #0x1f
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_0801107c
_08011418:
	ldr		r0, [sp, #0x24]
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	ldr		r3, [sp, #0x28]
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	mov		r6, #0x0
	ldrsh	r3, [r7, r6]
	mov		r4, r8
	mov		r6, #0x0
	ldrsh	r1, [r4, r6]
	add		r2, r2, r0
	sub		r2, #0xf
	add		r3, r3, r1
	sub		r3, #0xf
	ldr		r1, [sp, #0x2C]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08011456
	ldr		r4, [sp, #0x30]
	strh	r2, [r4, #0x0]
	ldr		r6, [sp, #0x34]
	strh	r3, [r6, #0x0]
	ldr		r0, [sp, #0x20]
	bl		sub_0808b3d4
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808e4a0
_08011456:
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08011418
	mov		r0, #0x57
	bl		sub_0808f690
	ldr		r2, [sp, #0x4]
	add		r9, r2
	ldr		r0, [r5, #0x60]
	ldrb	r0, [r0, #0x0]
	cmp		r9, r0
	bge		_0801147c
	b		_0801132c
_0801147c:
	ldr		r3, [sp, #0x18]
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	mov		r6, #0xf0
	lsl		r6, r6, #0x4
	add		r0, r0, r6
	bl		sub_08002268
_0801148c:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0801148c

.incbin "base.gba", 0x11496, 0x2

_08011498:	.4byte 0x0000F206
_0801149c:	.4byte 0xFFFFF201
_080114a0:	.4byte 0x02000C78

_080114a4:
	mov		r0, r9
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_08010bb0
	add		sp, #0x38
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080111bc

	thumb_func_start sub_080114c4
sub_080114c4:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r0, #0x8
	str		r0, [sp, #0x0]
	ldr		r0, [r5, #0x60]
	mov		r2, sp
	mov		r3, #0x0
	bl		sub_08010708
	ldr		r1, [sp, #0x0]
	mov		r2, #0x10
	ldrsh	r3, [r0, r2]
	sub		r1, #0x1
	mov		r4, #0x12
	ldrsh	r2, [r0, r4]
	ldr		r0, _080114f8
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_080114fc
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	b		_080114fe

_080114f8:	.4byte 0x02000BAC

_080114fc:
	lsl		r0, r1, #0x1
_080114fe:
	add		r2, r2, r0
	add		r1, r2, #0x0
	add		r1, #0x19
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0801150e
	add		r0, r2, #0x0
	add		r0, #0x20
_0801150e:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	sub		r0, r1, r0
	sub		r0, #0x19
	sub		r4, r2, r0
	add		r1, r3, #0x7
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08011524
	add		r0, r3, #0x0
	add		r0, #0xe
_08011524:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	sub		r0, r1, r0
	sub		r0, r3, r0
	add		r3, r0, #0x0
	add		r3, #0x2f
	add		r1, r5, #0x0
	add		r1, #0x6c
	mov		r0, #0xc
	strh	r0, [r1, #0x0]
	sub		r0, r4, r2
	add		r0, #0x1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r5, #0x0
	add		r2, #0x6e
	strh	r0, [r2, #0x0]
	asr		r3, r3, #0x3
	asr		r4, r4, #0x3
	mov		r6, #0xcb
	lsl		r6, r6, #0x1
	add		r0, r5, r6
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsr		r0, r3, #0x1f
	add		r0, r3, r0
	asr		r0, r0, #0x1
	sub		r0, r1, r0
	add		r1, r0, r3
	cmp		r0, #0x0
	blt		_08011574
	cmp		r1, #0x1e
	ble		_08011570
	neg		r0, r3
	add		r1, r0, #0x0
	add		r1, #0x1e
	b		_08011576
_08011570:
	add		r1, r0, #0x0
	b		_08011576
_08011574:
	mov		r1, #0x0
_08011576:
	mov		r6, #0xcc
	lsl		r6, r6, #0x1
	add		r2, r5, r6
	mov		r6, #0x0
	ldrsh	r0, [r2, r6]
	cmp		r0, #0xc
	bgt		_08011592
	add		r2, r0, #0x3
	add		r0, r2, r4
	cmp		r0, #0x14
	ble		_080115a0
	neg		r0, r4
	add		r0, #0x14
	b		_080115a2
_08011592:
	mov		r6, #0x0
	ldrsh	r0, [r2, r6]
	sub		r0, r0, r4
	sub		r2, r0, #0x6
	mov		r0, #0x0
	cmp		r2, #0x0
	blt		_080115a2
_080115a0:
	add		r0, r2, #0x0
_080115a2:
	add		r2, r0, #0x0
	add		r0, r5, #0x0
	add		r0, #0x64
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080114c4

	thumb_func_start sub_080115c0
sub_080115c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x34
	mov		r12, r0
	mov		r0, #0xcb
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	str		r1, [sp, #0x0]
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0xc
	bgt		_080115f6
	mov		r1, r12
	add		r1, #0x66
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	sub		r2, r0, #0x2
	str		r1, [sp, #0x28]
	b		_0801160c
_080115f6:
	mov		r0, r12
	add		r0, #0x66
	mov		r7, #0x0
	ldrsh	r1, [r0, r7]
	mov		r2, r12
	add		r2, #0x6a
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	add		r1, r1, r2
	add		r2, r1, #0x1
	str		r0, [sp, #0x28]
_0801160c:
	ldr		r0, _08011684
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08011618
	neg		r1, r0
_08011618:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08011620
	neg		r1, r1
_08011620:
	lsl		r0, r2, #0x3
	add		r0, r0, r1
	mov		r9, r0
	ldr		r4, _08011688
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08011632
	neg		r1, r0
_08011632:
	asr		r3, r1, #0x10
	cmp		r0, #0x0
	bge		_0801163a
	neg		r3, r3
_0801163a:
	mov		r0, #0xcb
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r5, #0x0
	ldrsh	r2, [r0, r5]
	lsl		r1, r2, #0x3
	add		r1, r1, r3
	str		r1, [sp, #0x4]
	mov		r7, #0x0
	str		r7, [sp, #0x8]
	mov		r1, #0x1
	mov		r8, r1
	mov		r3, r12
	add		r3, #0x64
	str		r3, [sp, #0x24]
	mov		r5, r12
	add		r5, #0x68
	str		r5, [sp, #0x2C]
	mov		r7, r12
	add		r7, #0x54
	str		r7, [sp, #0x20]
	str		r0, [sp, #0x10]
	str		r2, [sp, #0xC]
	str		r3, [sp, #0x14]
	str		r5, [sp, #0x18]
_0801166c:
	mov		r0, r8
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0801168c
	mov		r2, r8
	lsr		r0, r2, #0x1f
	add		r0, r8
	asr		r0, r0, #0x1
	ldr		r3, [sp, #0xC]
	sub		r0, r3, r0
	b		_08011698

_08011684:	.4byte 0x0200CE44
_08011688:	.4byte 0x0200CE30

_0801168c:
	mov		r5, r8
	lsr		r0, r5, #0x1f
	add		r0, r8
	asr		r0, r0, #0x1
	ldr		r7, [sp, #0xC]
	add		r0, r7, r0
_08011698:
	add		r4, r0, #0x0
	ldr		r1, [sp, #0x10]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	sub		r1, r4, r0
	cmp		r1, #0x0
	blt		_080116ac
	cmp		r1, #0x2
	bgt		_080116b2
	b		_080116c2
_080116ac:
	sub		r0, r0, r4
	cmp		r0, #0x2
	ble		_080116c2
_080116b2:
	ldr		r3, [sp, #0x10]
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	mov		r1, #0x2
	cmp		r4, r0
	bge		_080116c4
	mov		r1, #0x1
	b		_080116c4
_080116c2:
	mov		r1, #0x0
_080116c4:
	ldr		r7, _08011780
	add		r0, r1, r7
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r3, r4, r0
	ldr		r0, [sp, #0x14]
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r1, #0x1
	cmp		r3, r0
	bgt		_080116de
	b		_08011878
_080116de:
	ldr		r5, [sp, #0x18]
	mov		r7, #0x0
	ldrsh	r0, [r5, r7]
	add		r0, r1, r0
	sub		r0, #0x3
	cmp		r3, r0
	blt		_080116ee
	b		_08011878
_080116ee:
	ldr		r1, _08011784
	ldr		r0, [r1, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080116fa
	neg		r1, r0
_080116fa:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08011702
	neg		r1, r1
_08011702:
	lsl		r0, r4, #0x3
	add		r5, r0, r1
	ldr		r2, [sp, #0x4]
	add		r0, r5, r2
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r6, r0, #0x1
	sub		r0, r2, r5
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	cmp		r0, #0x0
	bge		_0801171e
	neg		r0, r0
_0801171e:
	sub		r0, #0x18
	str		r0, [sp, #0x30]
	mov		r3, #0x0
	str		r3, [sp, #0x1C]
	ldr		r7, _08011788
	ldr		r2, [r7, #0x4]
	cmp		r2, #0x0
	bne		_08011730
	b		_08011886
_08011730:
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	mov		r10, r0
_08011736:
	add		r0, r2, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	cmp		r0, r3
	beq		_08011748
	b		_0801186a
_08011748:
	mov		r7, r10
	add		r0, r2, r7
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08011756
	neg		r0, r1
_08011756:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_0801175e
	neg		r0, r0
_0801175e:
	sub		r0, r6, r0
	cmp		r0, #0x0
	bge		_0801178c
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0801176c
	neg		r0, r1
_0801176c:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_08011774
	neg		r0, r0
_08011774:
	sub		r0, r0, r6
	ldr		r1, [sp, #0x30]
	cmp		r1, r0
	bgt		_080117a4
	b		_080117aa

.incbin "base.gba", 0x1177E, 0x2

_08011780:	.4byte 0x080d08ec
_08011784:	.4byte 0x0200CE30
_08011788:	.4byte 0x0200A26C

_0801178c:
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08011794
	neg		r0, r1
_08011794:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_0801179c
	neg		r0, r0
_0801179c:
	sub		r0, r6, r0
	ldr		r3, [sp, #0x30]
	cmp		r3, r0
	ble		_080117aa
_080117a4:
	mov		r7, #0x1
	str		r7, [sp, #0x1C]
	b		_0801186a
_080117aa:
	mov		r1, r10
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_080117b8
	neg		r0, r1
_080117b8:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_080117c0
	neg		r0, r0
_080117c0:
	sub		r0, r5, r0
	cmp		r0, #0x0
	bge		_080117da
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_080117ce
	neg		r0, r1
_080117ce:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_080117d6
	neg		r0, r0
_080117d6:
	sub		r3, r0, r5
	b		_080117ec
_080117da:
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_080117e2
	neg		r0, r1
_080117e2:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_080117ea
	neg		r0, r0
_080117ea:
	sub		r3, r5, r0
_080117ec:
	mov		r7, #0x90
	lsl		r7, r7, #0x1
	add		r0, r2, r7
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_080117fc
	neg		r0, r1
_080117fc:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_08011804
	neg		r0, r0
_08011804:
	mov		r7, r9
	sub		r0, r7, r0
	add		r0, #0x18
	cmp		r0, #0x0
	bge		_08011828
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08011816
	neg		r0, r1
_08011816:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_0801181e
	neg		r0, r0
_0801181e:
	mov		r1, r9
	sub		r0, r1, r0
	add		r0, #0x18
	neg		r0, r0
	b		_0801183e
_08011828:
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08011830
	neg		r0, r1
_08011830:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_08011838
	neg		r0, r0
_08011838:
	mov		r7, r9
	sub		r0, r7, r0
	add		r0, #0x18
_0801183e:
	cmp		r3, #0xd
	bgt		_08011854
	cmp		r0, #0x9
	bgt		_08011854
	ldr		r0, [sp, #0x8]
	cmp		r0, #0x0
	bgt		_08011878
	str		r4, [sp, #0x0]
	mov		r1, #0x1
	str		r1, [sp, #0x8]
	b		_08011878
_08011854:
	cmp		r3, #0x1b
	bgt		_0801186a
	cmp		r0, #0x13
	bgt		_0801186a
	ldr		r2, [sp, #0x8]
	cmp		r2, #0x1
	bgt		_08011878
	str		r4, [sp, #0x0]
	mov		r3, #0x2
	str		r3, [sp, #0x8]
	b		_08011878
_0801186a:
	ldr		r2, [r2, #0x8]
	cmp		r2, #0x0
	beq		_08011872
	b		_08011736
_08011872:
	ldr		r5, [sp, #0x1C]
	cmp		r5, #0x0
	beq		_08011886
_08011878:
	mov		r7, #0x1
	add		r8, r7
	mov		r0, r8
	cmp		r0, #0x3f
	bgt		_08011884
	b		_0801166c
_08011884:
	ldr		r4, [sp, #0x0]
_08011886:
	ldr		r2, [sp, #0x24]
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	add		r0, r1, #0x1
	cmp		r4, r0
	bgt		_08011894
	add		r4, r1, #0x2
_08011894:
	ldr		r5, [sp, #0x2C]
	mov		r7, #0x0
	ldrsh	r0, [r5, r7]
	add		r1, r1, r0
	sub		r0, r1, #0x1
	cmp		r4, r0
	blt		_080118a4
	sub		r4, r1, #0x2
_080118a4:
	mov		r0, #0xcb
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	sub		r1, r4, r0
	cmp		r1, #0x0
	blt		_080118ba
	cmp		r1, #0x2
	bgt		_080118c0
	b		_080118d4
_080118ba:
	sub		r0, r0, r4
	cmp		r0, #0x2
	ble		_080118d4
_080118c0:
	mov		r0, #0xcb
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	mov		r2, #0x2
	cmp		r4, r0
	bge		_080118d6
	mov		r2, #0x1
	b		_080118d6
_080118d4:
	mov		r2, #0x0
_080118d6:
	ldr		r0, _08011900
	add		r0, r2, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r0, r0, r4
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r1, r12
	strh	r0, [r1, #0x0]
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0xc
	bgt		_08011904
	ldr		r5, [sp, #0x28]
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x2
	b		_08011912

_08011900:	.4byte 0x080d08ec

_08011904:
	mov		r0, r12
	add		r0, #0x6a
	ldrh	r0, [r0, #0x0]
	ldr		r7, [sp, #0x28]
	ldrh	r7, [r7, #0x0]
	add		r0, r0, r7
	sub		r0, #0x1
_08011912:
	mov		r1, #0xcf
	lsl		r1, r1, #0x1
	add		r1, r12
	strh	r0, [r1, #0x0]
	add		r1, r2, #0x0
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0xc
	ble		_0801192c
	add		r1, #0x3
_0801192c:
	ldr		r3, [sp, #0x20]
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	cmp		r0, #0x0
	beq		_08011938
	add		r1, #0x6
_08011938:
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r0, r12
	strh	r1, [r0, #0x0]
	add		sp, #0x34
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080115c0

	thumb_func_start sub_08011950
sub_08011950:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	add		r0, #0x56
	ldrh	r1, [r0, #0x0]
	ldr		r0, _080119b8
	cmp		r1, r0
	bne		_080119c0
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bge		_08011976
	b		_08011a9c
_08011976:
	ldr		r1, _080119bc
	mov		r3, #0xcf
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r0, r0, #0x6
	ldr		r1, [r1, #0x0]
	add		r1, r1, r0
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x1
	add		r3, r1, r0
	add		r2, r3, #0x0
	add		r2, #0x40
	add		r5, r3, #0x0
	add		r5, #0x42
	add		r1, r3, #0x0
	add		r1, #0x80
	add		r4, r3, #0x0
	add		r4, #0x82
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	strh	r0, [r1, #0x0]
	strh	r0, [r5, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x2]
	strh	r0, [r3, #0x0]
	b		_08011a9c

.incbin "base.gba", 0x119B6, 0x2

_080119b8:	.4byte 0x0000F201
_080119bc:	.4byte 0x0200CE4C

_080119c0:
	ldr		r4, _08011aac
	mov		r10, r4
	add		r6, r7, #0x0
	add		r6, #0x54
	mov		r0, #0x0
	ldrsh	r1, [r6, r0]
	add		r1, #0xa
	mov		r0, r10
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x1c]
	ldr		r1, _08011ab0
	mov		r9, r1
	mov		r0, r9
	mov		r1, #0x7
	bl		sub_08008cf4
	ldr		r1, [r0, #0x24]
	add		r4, #0xe4
	ldr		r0, [r4, #0x0]
	mov		r3, #0x4
	ldrsh	r2, [r0, r3]
	mov		r4, #0x6
	ldrsh	r3, [r0, r4]
	add		r0, r5, #0x0
	bl		sub_08010560
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r0, r0, r7
	mov		r8, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	blt		_08011a9c
	mov		r2, #0x0
	ldrsh	r1, [r6, r2]
	add		r1, #0xa
	mov		r0, r10
	bl		sub_0800ed80
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x1c]
	mov		r0, r9
	mov		r1, #0x7
	bl		sub_08008cf4
	ldr		r1, [r0, #0x24]
	add		r0, r5, #0x0
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	mov		r3, #0x6
	ldrsh	r2, [r0, r3]
	mov		r3, #0x4
	ldrsh	r0, [r0, r3]
	add		r6, r2, #0x0
	mul		r6, r0
	lsl		r0, r6, #0x5
	add		r4, r4, r0
	mov		r9, r4
	ldr		r2, _08011ab4
	mov		r4, r8
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x5
	add		r1, r1, r0
	mov		r0, r9
	mov		r2, #0x6
	mov		r3, #0x0
	bl		sub_0808c844
	ldr		r1, _08011ab8
	mov		r4, #0xcf
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x6
	ldr		r1, [r1, #0x0]
	add		r1, r1, r0
	mov		r3, #0xce
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r0, r0, #0x1
	add		r3, r1, r0
	add		r5, #0xdc
	ldrh	r0, [r5, #0x0]
	add		r0, r0, r6
	strh	r0, [r3, #0x0]
	add		r1, r0, #0x1
	strh	r1, [r3, #0x2]
	add		r2, r3, #0x0
	add		r2, #0x40
	add		r1, r0, #0x2
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	add		r1, r0, #0x3
	strh	r1, [r2, #0x0]
	add		r2, #0x3e
	add		r1, r0, #0x4
	strh	r1, [r2, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x82
	add		r0, #0x5
	strh	r0, [r1, #0x0]
_08011a9c:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x11AAA, 0x2

_08011aac:	.4byte 0x0200AA18
_08011ab0:	.4byte 0x02009984
_08011ab4:	.4byte 0x080d08ef
_08011ab8:	.4byte 0x0200CE4C
	thumb_func_end sub_08011950

	thumb_func_start sub_08011abc
sub_08011abc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0x54
	add		r0, r0, r7
	mov		r10, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r2, #0xf0
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	bl		sub_0800223c
	ldr		r0, _08011af4
	cmp		r4, r0
	beq		_08011b28
	cmp		r4, r0
	bgt		_08011af8
	sub		r0, #0x1
	cmp		r4, r0
	beq		_08011b04
	b		_08011d04

.incbin "base.gba", 0x11AF2, 0x2

_08011af4:	.4byte 0xFFFFF201

_08011af8:
	ldr		r0, _08011b00
	cmp		r4, r0
	beq		_08011b54
	b		_08011d04

_08011b00:	.4byte 0xFFFFF206

_08011b04:
	ldr		r0, _08011b24
	mov		r1, #0x8
	mov		r2, #0x0
	bl		sub_080021c8
	ldr		r0, [r7, #0x58]
	ldrh	r1, [r0, #0x8]
	add		r0, r7, #0x0
	add		r0, #0x64
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	ldrh	r0, [r0, #0xa]
	add		r1, r7, #0x0
	add		r1, #0x66
	strh	r0, [r1, #0x0]
	b		_08011d04

_08011b24:	.4byte 0x00000272

_08011b28:
	mov		r4, #0x5
	mov		r3, #0x66
	add		r3, r3, r7
	mov		r8, r3
	add		r6, r7, #0x0
	add		r6, #0x6a
_08011b34:
	mov		r5, r8
	mov		r0, #0x0
	ldrsh	r2, [r5, r0]
	mov		r1, #0x0
	ldrsh	r3, [r6, r1]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08010c20
	sub		r4, #0x1
	add		r0, r7, #0x0
	bl		sub_080b7690
	cmp		r4, #0x0
	bge		_08011b34
	b		_08011d0e
_08011b54:
	add		r0, r7, #0x0
	bl		sub_08011d24
	add		r0, r7, #0x0
	bl		sub_08011ef4
	ldr		r3, [r7, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r3, r2]
	add		r0, r7, r0
	mov		r4, #0x64
	add		r4, r4, r7
	mov		r9, r4
	mov		r5, #0x0
	ldrsh	r1, [r4, r5]
	mov		r6, #0x66
	add		r6, r6, r7
	mov		r8, r6
	mov		r4, #0x0
	ldrsh	r2, [r6, r4]
	add		r4, r7, #0x0
	add		r4, #0x68
	add		r6, r7, #0x0
	add		r6, #0x6a
	str		r6, [sp, #0x0]
	ldr		r5, [r3, #0x2c]
	add		r3, r4, #0x0
	bl		sub_080bbc84
	mov		r5, r9
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r0, r0, #0x3
	strh	r0, [r5, #0x0]
	mov		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x3
	strh	r0, [r2, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r4, r5]
	lsl		r0, r0, #0x3
	strh	r0, [r4, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x3
	strh	r0, [r6, #0x0]
	add		r0, r7, #0x0
	bl		sub_08011e04
	mov		r4, #0x1
	mov		r2, r10
	str		r2, [sp, #0x4]
	mov		r3, r9
	str		r3, [sp, #0xc]
	add		r5, r7, #0x0
	add		r5, #0x6e
	str		r5, [sp, #0x10]
	add		r0, r7, #0x0
	add		r0, #0x74
	str		r0, [sp, #0x18]
	add		r1, r7, #0x0
	add		r1, #0x70
	str		r1, [sp, #0x14]
	add		r2, r7, #0x0
	add		r2, #0xc8
	str		r2, [sp, #0x8]
	mov		r3, #0xca
	add		r3, r3, r7
	mov		r10, r3
	mov		r5, #0xe4
	add		r5, r5, r7
	mov		r9, r5
_08011be6:
	mov		r0, r8
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x0
	ldrsh	r3, [r6, r5]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08010c20
	add		r4, #0x1
	add		r0, r7, #0x0
	bl		sub_080b7690
	cmp		r4, #0x6
	ble		_08011be6
	ldr		r0, [r7, #0x60]
	ldrb	r1, [r0, #0x0]
	ldr		r0, _08011c4c
	mov		r6, #0x0
	ldrsh	r4, [r0, r6]
	cmp		r4, #0x0
	blt		_08011c16
	cmp		r4, r1
	blt		_08011c18
_08011c16:
	mov		r4, #0x0
_08011c18:
	sub		r1, #0x1
	str		r1, [sp, #0x1c]
	mov		r0, #0xd
	add		r5, r4, #0x0
	mul		r5, r0
_08011c22:
	ldr		r0, [sp, #0xc]
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r2, r8
	mov		r6, #0x0
	ldrsh	r0, [r2, r6]
	ldr		r2, [sp, #0x10]
	mov		r6, #0x0
	ldrsh	r1, [r2, r6]
	add		r1, r0, r1
	ldr		r2, _08011c50
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	bne		_08011c54
	lsl		r0, r4, #0x3
	sub		r0, r0, r4
	lsl		r0, r0, #0x1
	add		r0, r1, r0
	b		_08011c56

.incbin "base.gba", 0x11C4A, 0x2

_08011c4c:	.4byte 0x0200AF2C
_08011c50:	.4byte 0x02000C78

_08011c54:
	add		r0, r1, r5
_08011c56:
	add		r2, r0, #0x4
	add		r1, r3, #0x0
	add		r1, #0x9
	ldr		r3, [sp, #0x14]
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_08011c78
	ldr		r6, [sp, #0x8]
	strh	r1, [r6, #0x0]
	mov		r0, r10
	strh	r2, [r0, #0x0]
	mov		r0, r9
	bl		sub_0808b3d4
	ldr		r0, [sp, #0x18]
	bl		sub_0808e4a0
_08011c78:
	mov		r2, #0x1
	lsl		r2, r4
	ldr		r0, _08011d00
	mov		r1, #0x8
	bl		sub_080021c8
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08011ca4
	mov		r0, #0x55
	bl		sub_0808f690
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_080124d8
_08011ca4:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08011cc8
	ldr		r1, [sp, #0x4]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x3
	bne		_08011cc8
	mov		r0, #0x56
	bl		sub_0808f690
	add		r0, r7, #0x0
	mov		r1, #0x1
	bl		sub_080124d8
_08011cc8:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08011ce2
	cmp		r4, #0x0
	ble		_08011ce2
	mov		r0, #0x54
	bl		sub_0808f690
	sub		r5, #0xd
	sub		r4, #0x1
_08011ce2:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08011c22
	ldr		r3, [sp, #0x1c]
	cmp		r4, r3
	bge		_08011c22
	mov		r0, #0x54
	bl		sub_0808f690
	add		r5, #0xd
	add		r4, #0x1
	b		_08011c22

_08011d00:	.4byte 0x00000272

_08011d04:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08011d04
_08011d0e:
	add		r0, r7, #0x0
	bl		sub_08010bb0
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08011abc

	thumb_func_start sub_08011d24
sub_08011d24:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x60]
	mov		r1, #0xff
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, sp
	mov		r3, #0x0
	bl		sub_08010708
	ldr		r1, [r5, #0x60]
	ldrb	r1, [r1, #0x0]
	mov		r2, #0x10
	ldrsh	r3, [r0, r2]
	sub		r1, #0x1
	mov		r4, #0x12
	ldrsh	r2, [r0, r4]
	ldr		r0, _08011d5c
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08011d60
	lsl		r0, r1, #0x1
	add		r2, r2, r0
	b		_08011d62

_08011d5c:	.4byte 0x02000BAC

_08011d60:
	add		r2, r2, r1
_08011d62:
	add		r1, r2, #0x0
	add		r1, #0x19
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08011d70
	add		r0, r2, #0x0
	add		r0, #0x20
_08011d70:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	sub		r0, r1, r0
	sub		r0, #0x19
	sub		r7, r2, r0
	add		r1, r3, #0x7
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08011d86
	add		r0, r3, #0x0
	add		r0, #0xe
_08011d86:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	sub		r0, r1, r0
	sub		r0, r3, r0
	add		r6, r0, #0x0
	add		r6, #0x27
	add		r1, r5, #0x0
	add		r1, #0x6c
	mov		r0, #0x14
	strh	r0, [r1, #0x0]
	sub		r0, r7, r2
	add		r0, #0x1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r5, #0x0
	add		r2, #0x6e
	strh	r0, [r2, #0x0]
	asr		r6, r6, #0x3
	asr		r7, r7, #0x3
	sub		r2, #0xa
	ldrh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r3, r0, #0x13
	add		r0, r3, r6
	mov		r12, r0
	add		r1, r5, #0x0
	add		r1, #0x66
	ldrh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r4, r0, #0x13
	cmp		r3, #0x0
	blt		_08011dd6
	mov		r0, r12
	cmp		r0, #0x1e
	ble		_08011dd8
	neg		r0, r6
	add		r3, r0, #0x0
	add		r3, #0x1e
	b		_08011dd8
_08011dd6:
	mov		r3, #0x0
_08011dd8:
	cmp		r4, #0x0
	blt		_08011dea
	cmp		r4, #0x14
	ble		_08011de6
	neg		r0, r7
	add		r0, #0x14
	b		_08011dec
_08011de6:
	add		r0, r4, #0x0
	b		_08011dec
_08011dea:
	mov		r0, #0x0
_08011dec:
	strh	r3, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r6, [r0, #0x0]
	add		r0, #0x2
	strh	r7, [r0, #0x0]
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x11E02, 0x2
	thumb_func_end sub_08011d24

	thumb_func_start sub_08011e04
sub_08011e04:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r8, r0
	ldr		r0, _08011eec
	mov		r7, r8
	add		r7, #0x54
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	add		r1, #0xa
	bl		sub_0800ed80
	add		r2, r0, #0x0
	mov		r4, r8
	add		r4, #0x6c
	mov		r3, #0x0
	ldrsh	r5, [r4, r3]
	mov		r0, r8
	add		r0, #0x6e
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	ldr		r0, _08011ef0
	add		r6, r0, #0x0
	add		r6, #0xcc
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	add		r1, r3, #0x0
	add		r1, #0xb
	cmp		r0, #0x0
	bne		_08011e46
	add		r1, #0x1
_08011e46:
	strh	r5, [r2, #0x28]
	strh	r1, [r2, #0x2a]
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	mov		r3, #0xd
	cmp		r0, #0x0
	bne		_08011e5a
	mov		r3, #0xe
_08011e5a:
	add		r0, r2, #0x0
	add		r0, #0x26
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	strb	r3, [r0, #0x0]
	mov		r0, #0x0
	mov		r9, r0
	mov		r1, r8
	ldr		r0, [r1, #0x60]
	ldrb	r0, [r0, #0x0]
	cmp		r9, r0
	bge		_08011edc
	mov		r10, r7
_08011e74:
	mov		r2, r8
	ldr		r0, [r2, #0x60]
	mov		r1, r9
	bl		sub_0800f304
	add		r4, r0, #0x0
	mov		r3, r10
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	add		r1, #0xa
	ldr		r0, _08011eec
	bl		sub_0800ed80
	add		r7, r0, #0x0
	add		r6, r7, #0x0
	add		r6, #0x18
	ldrb	r2, [r4, #0x0]
	add		r4, #0x1
	add		r5, r7, #0x0
	add		r5, #0x30
	add		r2, r4, r2
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0808ec54
	add		r1, r7, #0x0
	add		r1, #0x32
	ldrb	r2, [r5, #0x0]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	add		r0, r7, #0x0
	add		r0, #0x26
	ldrb	r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x27
	mov		r3, #0x2a
	ldrsh	r0, [r7, r3]
	ldrb	r2, [r2, #0x0]
	add		r0, r0, r2
	strh	r1, [r7, #0x28]
	strh	r0, [r7, #0x2a]
	mov		r0, #0x1
	add		r9, r0
	mov		r1, r8
	ldr		r0, [r1, #0x60]
	ldrb	r0, [r0, #0x0]
	cmp		r9, r0
	blt		_08011e74
_08011edc:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x11EEA, 0x2

_08011eec:	.4byte 0x0200AA18
_08011ef0:	.4byte 0x02000BAC
	thumb_func_end sub_08011e04

	thumb_func_start sub_08011ef4
sub_08011ef4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r12, r0
	mov		r1, r12
	add		r1, #0x66
	mov		r0, #0x0
	ldrsh	r4, [r1, r0]
	mov		r0, r12
	add		r0, #0x6a
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r6, r4, r0
	mov		r5, #0x0
	mov		r3, #0xcf
	lsl		r3, r3, #0x1
	mov		r9, r3
	mov		r10, r1
	ldr		r7, _08011f58
	mov		r8, r7
_08011f20:
	mov		r0, r8
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_08011f7e
	cmp		r12, r3
	beq		_08011f7e
	add		r0, r3, #0x0
	add		r0, #0x66
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x13
	add		r0, r3, #0x0
	add		r0, #0x6a
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x13
	add		r2, r1, r0
	cmp		r5, #0x1
	bhi		_08011f5e
	mov		r7, r9
	add		r0, r3, r7
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, r1
	bge		_08011f5c
	sub		r1, #0x1
	b		_08011f5e

.incbin "base.gba", 0x11F56, 0x2

_08011f58:	.4byte 0x0200AF30

_08011f5c:
	add		r2, #0x1
_08011f5e:
	cmp		r4, r2
	bgt		_08011f7e
	cmp		r6, r1
	blt		_08011f7e
	add		r0, r6, r2
	sub		r0, r0, r4
	cmp		r0, #0x13
	bgt		_08011f74
	mov		r7, r10
	strh	r2, [r7, #0x0]
	b		_08011f88
_08011f74:
	add		r0, r4, r1
	sub		r0, r0, r6
	mov		r1, r10
	strh	r0, [r1, #0x0]
	b		_08011f88
_08011f7e:
	mov		r2, #0x4
	add		r8, r2
	add		r5, #0x1
	cmp		r5, #0x9
	ble		_08011f20
_08011f88:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x11F96, 0x542
	thumb_func_end sub_08011ef4

	thumb_func_start sub_080124d8
sub_080124d8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	ldr		r5, _08012510
	add		r0, r5, #0x0
	mov		r1, #0x8
	mov		r2, #0x0
	bl		sub_080021c8
	add		r4, r4, r5
	add		r0, r4, #0x0
	bl		sub_08002268
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	bl		sub_08002268
_08012504:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08012504

.incbin "base.gba", 0x1250E, 0x2

_08012510:	.4byte 0x00000272
	thumb_func_end sub_080124d8

	thumb_func_start sub_08012514
sub_08012514:
	push	{ r4, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, [sp, #0xc]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	bl		sub_08010a94
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bne		_08012534
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldr		r1, _0801253c
	strh	r1, [r2, #0x0]
_08012534:
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0801253c:	.4byte 0x0000FFFF
	thumb_func_end sub_08012514

	thumb_func_start sub_08012540
sub_08012540:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x60]
	bl		sub_0800f304
	add		r5, r0, #0x0
	ldr		r0, _080125a0
	add		r4, #0x54
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	add		r1, #0xa
	bl		sub_0800ed80
	add		r7, r0, #0x0
	add		r6, r7, #0x0
	add		r6, #0x18
	ldrb	r2, [r5, #0x0]
	add		r5, #0x1
	add		r4, r7, #0x0
	add		r4, #0x30
	add		r2, r5, r2
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0808ec54
	add		r1, r7, #0x0
	add		r1, #0x32
	ldrb	r2, [r4, #0x0]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	add		r0, r7, #0x0
	add		r0, #0x26
	ldrb	r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x27
	mov		r3, #0x2a
	ldrsh	r0, [r7, r3]
	ldrb	r2, [r2, #0x0]
	add		r0, r0, r2
	strh	r1, [r7, #0x28]
	strh	r0, [r7, #0x2a]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080125a0:	.4byte 0x0200AA18
	thumb_func_end sub_08012540

	thumb_func_start sub_080125a4
sub_080125a4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r1, #0x0
	ldr		r2, _08012600
	add		r0, #0x54
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r1, #0xa
	add		r0, r2, #0x0
	bl		sub_0800ed80
	add		r7, r0, #0x0
	add		r6, r7, #0x0
	add		r6, #0x18
	ldrb	r2, [r4, #0x0]
	add		r4, #0x1
	add		r5, r7, #0x0
	add		r5, #0x30
	add		r2, r4, r2
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0808ec54
	add		r1, r7, #0x0
	add		r1, #0x32
	ldrb	r2, [r5, #0x0]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	add		r0, r7, #0x0
	add		r0, #0x26
	ldrb	r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x27
	mov		r3, #0x2a
	ldrsh	r0, [r7, r3]
	ldrb	r2, [r2, #0x0]
	add		r0, r0, r2
	strh	r1, [r7, #0x28]
	strh	r0, [r7, #0x2a]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x125FE, 0x2

_08012600:	.4byte 0x0200AA18
	thumb_func_end sub_080125a4

	thumb_func_start sub_08012604
sub_08012604:
	push	{ r4, r5, lr }
	ldr		r2, _0801263c
	add		r0, #0x54
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r1, #0xa
	add		r0, r2, #0x0
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x1c]
	ldr		r0, _08012640
	mov		r1, #0x7
	bl		sub_08008cf4
	ldr		r1, [r0, #0x24]
	add		r4, #0xe4
	ldr		r0, [r4, #0x0]
	mov		r4, #0x4
	ldrsh	r2, [r0, r4]
	mov		r4, #0x6
	ldrsh	r3, [r0, r4]
	add		r0, r5, #0x0
	bl		sub_08010560
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0801263c:	.4byte 0x0200AA18
_08012640:	.4byte 0x02009984
	thumb_func_end sub_08012604

	thumb_func_start sub_08012644
sub_08012644:
	push	{ r4, lr }
	add		r4, r1, #0x0
	add		r0, #0x70
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08012666
	add		r0, r4, #0x0
	add		r0, #0x54
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	add		r0, #0x1a
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_08012666:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08012644

	thumb_func_start sub_0801266c
sub_0801266c:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_0808e03c
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r1, r4, #0x0
	add		r1, #0x69
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r4, #0x5c
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	strh	r0, [r4, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1269A, 0x2
	thumb_func_end sub_0801266c

	thumb_func_start sub_0801269c
sub_0801269c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	str		r0, [r4, #0x5c]
	bl		sub_0800d74c
	str		r0, [r4, #0x60]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801269c

	thumb_func_start sub_080126b0
sub_080126b0:
	push	{ lr }
	ldr		r2, _080126c8
	add		r0, #0x54
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r1, #0xa
	add		r0, r2, #0x0
	bl		sub_0800ed80
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x126C6, 0x2

_080126c8:	.4byte 0x0200AA18
	thumb_func_end sub_080126b0

	thumb_func_start sub_080126cc
sub_080126cc:
	push	{ lr }
	sub		sp, #0x4
	add		r3, r1, #0x0
	mov		r1, #0xff
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, sp
	bl		sub_08010708
	add		sp, #0x4
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080126cc

	thumb_func_start sub_080126e4
sub_080126e4:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldrb	r4, [r5, #0x0]
	mov		r6, #0x0
	b		_08012700
_080126ee:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0800f304
	bl		sub_0800f288
	cmp		r6, r0
	bge		_08012700
	add		r6, r0, #0x0
_08012700:
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080126ee
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1270E, 0xEE
	thumb_func_end sub_080126e4

	thumb_func_start sub_080127fc
sub_080127fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r0, [sp, #0x0]
	mov		r10, r1
	mov		r0, #0x4
	mov		r9, r0
	ldr		r0, _080128c0
	ldr		r0, [r0, #0x4]
	mov		r8, r0
	cmp		r0, #0x0
	beq		_080128ae
_0801281a:
	mov		r2, r8
	mov		r7, #0x14
	ldrsh	r1, [r2, r7]
	ldr		r0, _080128c4
	bl		sub_08008f44
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_080128a4
	ldrh	r0, [r4, #0x1c]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080128a4
	ldr		r5, [sp, #0x0]
	mov		r6, r10
	sub		r6, #0x1
	cmp		r6, #0x0
	blt		_080128a4
	mov		r7, #0x1e
	ldrsh	r2, [r4, r7]
	str		r2, [sp, #0x4]
	mov		r0, #0x3
	mov		r12, r0
_0801284c:
	ldr		r3, [r5, #0x0]
	ldr		r1, [sp, #0x4]
	cmp		r3, r1
	blt		_0801289c
	mov		r2, #0x22
	ldrsh	r0, [r4, r2]
	cmp		r3, r0
	bge		_0801289c
	mov		r7, #0x20
	ldrsh	r1, [r4, r7]
	ldr		r2, [r5, #0x4]
	cmp		r2, r1
	blt		_0801289c
	mov		r7, #0x24
	ldrsh	r0, [r4, r7]
	cmp		r2, r0
	bge		_0801289c
	ldr		r0, [sp, #0x4]
	sub		r3, r3, r0
	sub		r2, r2, r1
	lsr		r3, r3, #0x1
	lsr		r2, r2, #0x1
	mov		r7, r8
	ldr		r1, [r7, #0x18]
	mov		r7, #0x4
	ldrsh	r0, [r1, r7]
	mul		r0, r2
	lsl		r0, r0, #0x1
	add		r0, #0xa
	add		r1, r1, r0
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	ldrh	r0, [r1, #0x0]
	lsr		r0, r0, #0xa
	mov		r1, r12
	and		r0, r1
	add		r0, #0x1
	cmp		r0, r9
	bcs		_0801289c
	mov		r9, r0
_0801289c:
	add		r5, #0x8
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0801284c
_080128a4:
	mov		r2, r8
	ldr		r2, [r2, #0x8]
	mov		r8, r2
	cmp		r2, #0x0
	bne		_0801281a
_080128ae:
	mov		r0, r9
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080128c0:	.4byte 0x02008A88
_080128c4:	.4byte 0x02008AD4
	thumb_func_end sub_080127fc

	thumb_func_start sub_080128c8
sub_080128c8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	bl		sub_0800b060
	ldr		r0, _0801294c
	str		r0, [r5, #0x50]
	ldr		r0, _08012950
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	strh	r4, [r0, #0x0]
	mov		r2, #0xa4
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	str		r1, [r4, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	mov		r0, #0x1
	strb	r0, [r2, #0x0]
	ldr		r0, _08012954
	add		r1, r5, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x4
	bne		_0801291e
	mov		r0, #0x0
	strb	r0, [r2, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_08013244
_0801291e:
	ldrh	r0, [r5, #0x14]
	sub		r0, #0x21
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x34
	bhi		_08012944
	ldr		r0, _08012958
	ldr		r0, [r0, #0x0]
	mov		r2, #0x14
	ldrsh	r1, [r5, r2]
	ldr		r2, _0801295c
	ldr		r2, [r2, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	sub		r1, #0x84
	ldr		r1, [r1, #0x0]
	bl		sub_0808b7cc
	str		r0, [r4, #0x0]
_08012944:
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0801294c:	.4byte 0x080e09ec
_08012950:	.4byte 0x080e09fc
_08012954:	.4byte 0x0000013D
_08012958:	.4byte 0x0200BF08
_0801295c:	.4byte 0x0200B460
	thumb_func_end sub_080128c8

	thumb_func_start sub_08012960
sub_08012960:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r12, r0
	mov		r0, #0x0
	mov		r8, r0
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r1, #0x95
	lsl		r1, r1, #0x1
	add		r1, r12
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	str		r2, [sp, #0x0]
	mov		r7, #0x0
	ldr		r6, [r0, #0x0]
	mov		r10, r0
	mov		r0, #0x94
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r9, r0
_08012992:
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	ldr		r2, [sp, #0x0]
	cmp		r0, r2
	bne		_080129ca
	mov		r2, #0x0
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	add		r0, r7, r0
	add		r4, r0, #0x2
	mov		r0, r9
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r1, #0x0
	mov		r5, #0xe1
	lsl		r5, r5, #0x2
_080129b2:
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r3
	bne		_080129c2
	add		r0, r1, #0x0
	b		_080129f2
_080129c2:
	add		r1, r1, r5
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_080129b2
_080129ca:
	add		r7, #0x6
	add		r6, #0x6
	mov		r2, #0x1
	add		r8, r2
	mov		r3, r8
	cmp		r3, #0x5
	ble		_08012992
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080129f0
	ldr		r0, _08012a04
	mov		r1, #0x5f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080129f0:
	ldr		r0, _08012a08
_080129f2:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x12A02, 0x2

_08012a04:	.4byte 0x080d090c @ a_toda/game/fieldobject.cpp
_08012a08:	.4byte 0xFFFFF1F0
	thumb_func_end sub_08012960

	thumb_func_start sub_08012a0c
sub_08012a0c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	add		r4, r2, #0x0
	mov		r1, #0xe1
	lsl		r1, r1, #0x2
	bl		sub_080bbcac
	add		r3, r0, #0x0
	add		r6, r3, #0x0
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x1
	ldr		r1, [r1, #0x0]
	add		r2, r1, r0
	add		r0, r2, #0x2
	add		r0, r0, r3
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r4, #0x80
	neg		r4, r4
	eor		r1, r4
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_08012a5a
	add		r2, #0x6
	add		r0, r2, #0x2
	add		r0, r0, r3
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	eor		r1, r4
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08012a9a
_08012a5a:
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	add		r0, r2, #0x2
	add		r0, r0, r6
	mov		r4, #0x0
	ldrsb	r4, [r0, r4]
	mov		r2, #0x95
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldrh	r2, [r0, #0x0]
	mov		r3, #0xa0
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	strh	r2, [r0, #0x0]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	add		r0, r5, #0x0
	bl		sub_0800be04
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrh	r0, [r0, #0x0]
	mov		r2, #0x9f
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0800bdbc
_08012a9a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08012a0c

	thumb_func_start sub_08012aa0
sub_08012aa0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r2, #0x0
	mov		r10, r3
	ldr		r5, [sp, #0x28]
	ldr		r1, _08012ad0
	and		r1, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08012b38
	cmp		r1, r0
	bhi		_08012ad4
	cmp		r1, #0x0
	beq		_08012af4
	cmp		r1, #0x80
	beq		_08012b04
	b		_08012b26

_08012ad0:	.4byte 0x0000FF80

_08012ad4:
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08012b14
	mov		r0, #0xf8
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_08012b26
	str		r5, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_0800a6a8
	b		_08012ff6
_08012af4:
	str		r5, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_0800f41c
	b		_08012ff6
_08012b04:
	str		r5, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_0800f41c
	b		_08012ff6
_08012b14:
	add		r0, r6, #0x0
	add		r0, #0x18
	str		r5, [sp, #0x0]
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_08001954
	b		_08012ff6
_08012b26:
	add		r0, r6, #0x0
	add		r0, #0x18
	str		r5, [sp, #0x0]
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_08001954
	b		_08012ff6
_08012b38:
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _08012b68
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	bge		_08012b70
	ldr		r0, _08012b6c
	add		r1, r5, #0x0
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	cmp		r1, r6
	beq		_08012b70
	mov		r0, r10
	lsl		r4, r0, #0x2
	add		r0, r7, r4
	str		r0, [r6, #0x20]
	add		r0, r1, #0x0
	add		r1, r7, #0x0
	bl		sub_0800a590
	b		_08012ff4

_08012b68:	.4byte 0xFFFF8080
_08012b6c:	.4byte 0x0200A26C

_08012b70:
	ldr		r1, _08012b84
	add		r0, r4, r1
	cmp		r0, #0x13
	bhi		_08012bdc
	lsl		r0, r0, #0x2
	ldr		r1, _08012b88
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x12B82, 0x2

_08012b84:	.4byte 0xFFFFFEF9
_08012b88:	.4byte 0x08012b8c
_08012b8c:	.4byte 0x08012c78

.incbin "base.gba", 0x12B90, 0x4C

_08012bdc:
	str		r5, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, r10
	bl		sub_0800b334
	b		_08012ff6
_08012bec:
.incbin "base.gba", 0x12BEC, 0x4
.incbin "base.gba", 0x12BF0, 0x4

.incbin "base.gba", 0x12BF4, 0x60
	thumb_func_end sub_08012aa0


.incbin "base.gba", 0x12C54, 0x3A0

_08012ff4:

.incbin "base.gba", 0x12FF4, 0x2
_08012ff6:

.incbin "base.gba", 0x12FF6, 0x12
	thumb_func_start sub_08013008
sub_08013008:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r6, r0, #0x0
	mov		r1, #0xca
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08013024
	b		_08013192
_08013024:
	cmp		r0, #0x1
	ble		_0801302a
	b		_080131a8
_0801302a:
	cmp		r0, #0x0
	beq		_08013030
	b		_080131a8
_08013030:
	ldr		r0, _08013170
	mov		r2, #0x14
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bgt		_0801303c
	b		_08013192
_0801303c:
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0801304e
	neg		r1, r0
_0801304e:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08013056
	neg		r1, r1
_08013056:
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0801305e
	add		r0, #0x7
_0801305e:
	asr		r5, r0, #0x3
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r7, r6, r1
	ldr		r0, [r7, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08013070
	neg		r1, r0
_08013070:
	asr		r4, r1, #0x10
	cmp		r0, #0x0
	bge		_08013078
	neg		r4, r4
_08013078:
	cmp		r4, #0x0
	bge		_0801307e
	add		r4, #0x7
_0801307e:
	asr		r4, r4, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r4, r4, r2
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_0808c828
	ldr		r1, _08013174
	add		r0, r5, r1
	str		r0, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r0, sp, #0x8
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_0808c828
	ldr		r2, _08013178
	add		r0, r5, r2
	str		r0, [sp, #0x8]
	str		r4, [sp, #0xC]
	mov		r0, sp
	mov		r1, #0x2
	bl		sub_080127fc
	add		r5, r0, #0x0
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080130c0
	neg		r1, r0
_080130c0:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_080130c8
	neg		r1, r1
_080130c8:
	mov		r8, r1
	ldr		r0, [r7, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080130d4
	neg		r1, r0
_080130d4:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_080130dc
	neg		r1, r1
_080130dc:
	add		r7, r1, #0x0
	ldr		r4, [r6, #0x4]
	cmp		r4, #0x0
	beq		_0801318c
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r10, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	mov		r9, r0
_080130f0:
	add		r0, r4, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, r10
	beq		_08013100
	cmp		r0, r9
	bne		_08013186
_08013100:
	mov		r2, #0xca
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08013186
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0801311c
	neg		r1, r0
_0801311c:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08013124
	neg		r1, r1
_08013124:
	mov		r2, r8
	sub		r0, r2, r1
	cmp		r0, #0x0
	bge		_0801312e
	neg		r0, r0
_0801312e:
	cmp		r0, #0x2c
	bgt		_08013186
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08013142
	neg		r0, r2
_08013142:
	asr		r0, r0, #0x10
	cmp		r2, #0x0
	bge		_0801314a
	neg		r0, r0
_0801314a:
	sub		r0, r7, r0
	cmp		r0, #0x0
	bge		_08013152
	neg		r0, r0
_08013152:
	cmp		r0, #0x2c
	bgt		_08013186
	ldr		r1, _0801317c
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r5
	ble		_08013180
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08013244
	b		_08013186

.incbin "base.gba", 0x1316E, 0x2

_08013170:	.4byte 0x02008A88
_08013174:	.4byte 0x000003FD
_08013178:	.4byte 0x00000403
_0801317c:	.4byte 0x0000013B

_08013180:
	cmp		r0, r5
	bge		_08013186
	add		r5, r0, #0x0
_08013186:
	ldr		r4, [r4, #0x4]
	cmp		r4, #0x0
	bne		_080130f0
_0801318c:
	ldr		r2, _080131b8
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
_08013192:
	ldr		r1, _080131b8
	add		r0, r6, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r2, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08013244
_080131a8:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080131b8:	.4byte 0x0000013B
	thumb_func_end sub_08013008

	thumb_func_start sub_080131bc
sub_080131bc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0xcb
	lsl		r0, r0, #0x2
	bl		sub_0808af94
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	add		r2, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_080128c8
	add		r4, r0, #0x0
	ldr		r1, [r4, #0x60]
	cmp		r1, #0x0
	beq		_080131f6
	ldr		r0, _080131fc
	ldr		r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	bl		sub_0808b814
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_080131f6
	add		r0, r4, #0x0
	bl		sub_0800a61c
_080131f6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080131fc:	.4byte 0x0200BF08
	thumb_func_end sub_080131bc

	thumb_func_start sub_08013200
sub_08013200:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0xcb
	lsl		r0, r0, #0x2
	bl		sub_0808af94
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_080128c8
	add		r4, r0, #0x0
	ldr		r1, [r4, #0x60]
	cmp		r1, #0x0
	beq		_0801323a
	ldr		r0, _08013240
	ldr		r0, [r0, #0x0]
	add		r2, r6, #0x0
	bl		sub_0808b814
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0801323a
	add		r0, r4, #0x0
	bl		sub_0800a61c
_0801323a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08013240:	.4byte 0x0200BF08
	thumb_func_end sub_08013200

	thumb_func_start sub_08013244
sub_08013244:
	push	{ lr }
	mov		r12, r0
	mov		r3, r12
	add		r3, #0xf1
	strb	r1, [r3, #0x0]
	ldr		r3, _0801327c
	add		r3, r12
	strb	r1, [r3, #0x0]
	add		r3, r2, #0x0
	cmp		r2, #0x0
	bge		_0801325c
	neg		r3, r2
_0801325c:
	asr		r3, r3, #0x10
	cmp		r2, #0x0
	bge		_08013264
	neg		r3, r3
_08013264:
	lsl		r0, r1, #0xd
	mov		r2, #0xc0
	lsl		r2, r2, #0x5
	add		r1, r2, #0x0
	sub		r1, r1, r3
	orr		r0, r1
	mov		r1, r12
	add		r1, #0xe4
	strh	r0, [r1, #0x0]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1327A, 0x2

_0801327c:	.4byte 0x0000013B
	thumb_func_end sub_08013244

	thumb_func_start sub_08013280
sub_08013280:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0800b2b4
	add		r0, r4, #0x0
	bl		sub_08013008
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08013280

	thumb_func_start sub_08013294
sub_08013294:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r1, [r4, #0x60]
	cmp		r1, #0x0
	beq		_080132b6
	ldr		r0, _080132bc
	ldr		r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	bl		sub_0808b814
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_080132b6
	add		r0, r4, #0x0
	bl		sub_0800a61c
_080132b6:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080132bc:	.4byte 0x0200BF08
	thumb_func_end sub_08013294

	thumb_func_start sub_080132c0
sub_080132c0:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	ldr		r2, _080132e4
	mov		r1, #0x54
	mul		r0, r1
	add		r0, r0, r2
	ldr		r1, [r4, #0x0]
	ldr		r2, [r5, #0x0]
	mov		r3, sp
	bl		sub_0808ce48
	cmp		r0, #0x0
	bge		_080132e8
	mov		r0, #0x0
	b		_080132fa

.incbin "base.gba", 0x132E2, 0x2

_080132e4:	.4byte 0x0200E9AC

_080132e8:
	ldr		r0, [r4, #0x0]
	ldr		r1, [sp, #0x4]
	sub		r0, r0, r1
	str		r0, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	ldr		r1, [sp, #0x8]
	sub		r0, r0, r1
	str		r0, [r5, #0x0]
	mov		r0, #0x1
_080132fa:
	add		sp, #0xc
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x13302, 0x66
	thumb_func_end sub_080132c0

	thumb_func_start sub_08013368
sub_08013368:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x134
	str		r0, [sp, #0xC0]
	str		r2, [sp, #0xC4]
	str		r3, [sp, #0xC8]
	add		r0, r1, #0x4
	str		r0, [sp, #0xCC]
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	sub		r2, #0x1
	str		r2, [sp, #0xD0]
	cmp		r2, #0x0
	bge		_0801338c
	b		_0801395c
_0801338c:
	mov		r0, sp
	add		r0, #0x30
	str		r0, [sp, #0xD4]
	mov		r1, sp
	add		r1, #0x38
	str		r1, [sp, #0xD8]
	mov		r2, sp
	add		r2, #0x40
	str		r2, [sp, #0xDC]
	mov		r3, sp
	add		r3, #0x48
	str		r3, [sp, #0xE0]
_080133a4:
	ldr		r1, [sp, #0xCC]
	add		r1, #0x10
	ldr		r0, [sp, #0xC4]
	mov		r2, #0x10
	bl		sub_0808c930
	cmp		r0, #0x0
	bgt		_080133b6
	b		_0801394a
_080133b6:
	ldr		r0, [sp, #0xC0]
	ldr		r2, [r0, #0x0]
	ldr		r1, [sp, #0xCC]
	ldr		r0, [r1, #0x0]
	add		r0, r2, r0
	str		r0, [sp, #0x30]
	ldr		r3, [sp, #0xC0]
	ldr		r1, [r3, #0x4]
	ldr		r3, [sp, #0xCC]
	ldr		r0, [r3, #0x4]
	add		r0, r1, r0
	ldr		r3, [sp, #0xD4]
	str		r0, [r3, #0x4]
	ldr		r3, [sp, #0xCC]
	ldr		r0, [r3, #0x8]
	add		r2, r2, r0
	str		r2, [sp, #0x38]
	ldr		r0, [r3, #0xc]
	add		r1, r1, r0
	ldr		r0, [sp, #0xD8]
	str		r1, [r0, #0x4]
	ldr		r0, [sp, #0x30]
	ldr		r1, [sp, #0xC4]
	ldr		r2, [r1, #0x0]
	add		r0, r0, r2
	str		r0, [sp, #0x40]
	ldr		r3, [sp, #0xD4]
	ldr		r0, [r3, #0x4]
	ldr		r1, [r1, #0x4]
	add		r0, r0, r1
	ldr		r3, [sp, #0xDC]
	str		r0, [r3, #0x4]
	ldr		r0, [sp, #0x38]
	add		r0, r0, r2
	str		r0, [sp, #0x48]
	ldr		r2, [sp, #0xD8]
	ldr		r0, [r2, #0x4]
	add		r0, r0, r1
	ldr		r3, [sp, #0xE0]
	str		r0, [r3, #0x4]
	ldr		r0, [sp, #0x0+0x154]
	add		r0, #0x4
	mov		r10, r0
	ldr		r1, [sp, #0x0+0x154]
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	sub		r1, #0x1
	str		r1, [sp, #0xE4]
	mov		r3, sp
	add		r3, #0x30
	str		r3, [sp, #0x114]
	mov		r0, sp
	add		r0, #0x38
	str		r0, [sp, #0x118]
	mov		r1, sp
	add		r1, #0x40
	str		r1, [sp, #0x11C]
	mov		r2, sp
	add		r2, #0x48
	str		r2, [sp, #0x120]
	ldr		r3, [sp, #0xE4]
	cmp		r3, #0x0
	bge		_08013436
	b		_0801394a
_08013436:
	add		r0, #0x40
	str		r0, [sp, #0xF4]
	add		r1, #0x40
	str		r1, [sp, #0xEC]
	add		r2, #0x40
	str		r2, [sp, #0x104]
	mov		r3, sp
	add		r3, #0x90
	str		r3, [sp, #0x108]
	add		r0, #0x20
	str		r0, [sp, #0xF8]
	add		r1, #0x20
	str		r1, [sp, #0xFC]
	add		r2, #0x28
	str		r2, [sp, #0x10C]
	add		r3, #0x18
	str		r3, [sp, #0x100]
	add		r0, #0x20
	str		r0, [sp, #0x110]
_0801345c:
	mov		r1, r10
	add		r1, #0x10
	ldr		r0, [sp, #0xC4]
	mov		r2, #0x10
	bl		sub_0808c930
	cmp		r0, #0x0
	blt		_0801346e
	b		_0801393a
_0801346e:
	add		r6, sp, #0x50
	ldr		r1, [sp, #0xC8]
	ldr		r0, [r1, #0x0]
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [sp, #0x50]
	ldr		r3, [sp, #0xC8]
	ldr		r0, [r3, #0x4]
	ldr		r1, [r2, #0x4]
	add		r0, r0, r1
	str		r0, [r6, #0x4]
	mov		r1, #0x18
	ldrsh	r0, [r2, r1]
	str		r0, [sp, #0xE8]
	bl		sub_0808c46c
	str		r0, [sp, #0x0]
	str		r0, [sp, #0xC]
	ldr		r0, [sp, #0xE8]
	bl		sub_0808c410
	str		r0, [sp, #0x8]
	neg		r0, r0
	str		r0, [sp, #0x4]
	add		r4, sp, #0x58
	ldr		r0, [sp, #0x40]
	ldr		r1, [sp, #0x50]
	sub		r0, r0, r1
	str		r0, [sp, #0x58]
	ldr		r2, [sp, #0x11C]
	ldr		r0, [r2, #0x4]
	ldr		r1, [r6, #0x4]
	sub		r0, r0, r1
	str		r0, [r4, #0x4]
	add		r5, sp, #0x60
	ldr		r0, [sp, #0x48]
	ldr		r1, [sp, #0x50]
	sub		r0, r0, r1
	str		r0, [sp, #0x60]
	ldr		r3, [sp, #0x120]
	ldr		r0, [r3, #0x4]
	ldr		r1, [r6, #0x4]
	sub		r0, r0, r1
	str		r0, [r5, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	mov		r2, sp
	bl		sub_0808c964
	add		r0, r5, #0x0
	add		r1, r5, #0x0
	mov		r2, sp
	bl		sub_0808c964
	ldr		r0, [r4, #0x4]
	mov		r8, r5
	cmp		r0, #0x0
	blt		_080134ec
	ldr		r0, [r5, #0x4]
	cmp		r0, #0x0
	blt		_080134ec
	b		_0801393a
_080134ec:
	add		r4, sp, #0x68
	ldr		r0, [sp, #0x30]
	ldr		r1, [sp, #0x50]
	sub		r0, r0, r1
	str		r0, [sp, #0x68]
	ldr		r1, [sp, #0x114]
	ldr		r0, [r1, #0x4]
	ldr		r1, [r6, #0x4]
	sub		r0, r0, r1
	str		r0, [r4, #0x4]
	add		r5, sp, #0x70
	ldr		r0, [sp, #0x38]
	ldr		r1, [sp, #0x50]
	sub		r0, r0, r1
	str		r0, [sp, #0x70]
	ldr		r2, [sp, #0x118]
	ldr		r0, [r2, #0x4]
	ldr		r1, [r6, #0x4]
	sub		r0, r0, r1
	str		r0, [r5, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	mov		r2, sp
	bl		sub_0808c964
	add		r0, r5, #0x0
	add		r1, r5, #0x0
	mov		r2, sp
	bl		sub_0808c964
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bge		_08013536
	ldr		r0, [r5, #0x4]
	cmp		r0, #0x0
	bge		_08013536
	b		_0801393a
_08013536:
	mov		r3, #0x0
	ldr		r0, [sp, #0xF4]
	str		r3, [r0, #0x4]
	str		r3, [sp, #0x78]
	mov		r1, r10
	ldr		r0, [r1, #0x8]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	ldr		r2, [sp, #0xEC]
	str		r0, [r2, #0x0]
	mov		r3, r10
	ldr		r0, [r3, #0xc]
	ldr		r1, [r3, #0x4]
	sub		r0, r0, r1
	str		r0, [r2, #0x4]
	ldr		r0, [sp, #0xEC]
	add		r1, r0, #0x0
	mov		r2, sp
	bl		sub_0808c964
	add		r0, sp, #0x68
	str		r0, [sp, #0x20]
	str		r5, [sp, #0x24]
	add		r1, sp, #0x58
	str		r1, [sp, #0x28]
	mov		r2, r8
	str		r2, [sp, #0x2C]
	add		r0, sp, #0x10
	add		r1, sp, #0x20
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r1, [sp, #0x6C]
	ldr		r0, [r5, #0x4]
	eor		r0, r1
	mov		r3, sp
	add		r3, #0x78
	str		r3, [sp, #0x124]
	mov		r2, sp
	add		r2, #0x80
	str		r2, [sp, #0x128]
	add		r3, sp, #0x10
	mov		r9, r3
	cmp		r0, #0x0
	bge		_0801359a
	mov		r7, #0x2
	cmp		r1, #0x0
	bge		_0801359c
	mov		r7, #0x1
	b		_0801359c
_0801359a:
	mov		r7, #0x0
_0801359c:
	ldr		r4, [sp, #0x5C]
	mov		r1, r8
	ldr		r0, [r1, #0x4]
	eor		r0, r4
	cmp		r0, #0x0
	bge		_080135b2
	mov		r1, #0x2
	cmp		r4, #0x0
	bge		_080135b4
	mov		r1, #0x1
	b		_080135b4
_080135b2:
	mov		r1, #0x0
_080135b4:
	lsl		r1, r1, #0x2
	lsl		r2, r7, #0x1
	add		r0, r2, r7
	lsl		r0, r0, #0x2
	add		r5, r1, r0
	ldr		r3, _08013660
	add		r0, r5, r3
	ldrb	r4, [r0, #0x0]
	str		r1, [sp, #0x130]
	str		r2, [sp, #0x12C]
	cmp		r4, #0x80
	bne		_080135d8
	ldr		r0, _08013664
	mov		r1, #0x50
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080135d8:
	lsl		r0, r4, #0x2
	add		r0, r9
	ldr		r6, [r0, #0x0]
	ldr		r1, _08013668
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r2, [r0, #0x0]
	add		r3, sp, #0x88
	ldr		r1, [r2, #0x0]
	ldr		r0, [r6, #0x0]
	sub		r1, r1, r0
	ldr		r0, [sp, #0x104]
	str		r1, [r0, #0x0]
	ldr		r1, [r2, #0x4]
	ldr		r0, [r6, #0x4]
	sub		r1, r1, r0
	str		r1, [r3, #0x4]
	mov		r8, r3
	cmp		r1, #0x0
	bne		_08013610
	ldr		r0, _08013664
	mov		r1, #0x55
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08013610:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08013638
	ldr		r1, [r6, #0x4]
	neg		r1, r1
	mov		r2, #0x8
	bl		sub_0808c118
	mov		r2, r8
	ldr		r1, [r2, #0x4]
	cmp		r1, #0x0
	bge		_0801362c
	add		r1, #0xf
_0801362c:
	asr		r1, r1, #0x4
	bl		sub_0808c344
	lsl		r0, r0, #0x4
	mov		r3, r8
	str		r0, [r3, #0x0]
_08013638:
	ldr		r1, [sp, #0x104]
	ldr		r0, [r1, #0x0]
	ldr		r1, [r6, #0x0]
	add		r0, r0, r1
	ldr		r2, [sp, #0x104]
	str		r0, [r2, #0x0]
	mov		r3, #0x0
	mov		r0, r8
	str		r3, [r0, #0x4]
	mov		r2, #0x0
	cmp		r7, #0x0
	bne		_08013652
	mov		r2, #0x80
_08013652:
	mov		r3, r8
	ldr		r1, [r3, #0x0]
	cmn		r1, r2
	bge		_0801366c
	ldr		r6, [sp, #0x124]
	b		_08013678

.incbin "base.gba", 0x1365E, 0x2

_08013660:	.4byte 0x080d0928
_08013664:	.4byte 0x080d094c @ a_toda/game/collision.cpp
_08013668:	.4byte 0x080d0929

_0801366c:
	ldr		r3, [sp, #0x128]
	ldr		r0, [r3, #0x0]
	sub		r0, r1, r0
	cmp		r0, r2
	ble		_0801367e
	add		r6, r3, #0x0
_08013678:
	ldr		r0, [sp, #0xCC]
	str		r0, [sp, #0xF0]
	b		_0801368a
_0801367e:
	cmp		r7, #0x0
	beq		_08013684
	b		_0801393a
_08013684:
	mov		r6, r8
	mov		r1, r10
	str		r1, [sp, #0xF0]
_0801368a:
	ldr		r2, [sp, #0x12C]
	add		r1, r2, r7
	lsl		r1, r1, #0x2
	ldr		r3, [sp, #0x130]
	add		r1, r3, r1
	ldr		r2, _08013720
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r5, [r0, #0x0]
	ldr		r3, _08013724
	add		r1, r1, r3
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r2, [r0, #0x0]
	add		r3, sp, #0x90
	ldr		r1, [r2, #0x0]
	ldr		r0, [r5, #0x0]
	sub		r1, r1, r0
	ldr		r0, [sp, #0x108]
	str		r1, [r0, #0x0]
	ldr		r1, [r2, #0x4]
	ldr		r0, [r5, #0x4]
	sub		r1, r1, r0
	str		r1, [r3, #0x4]
	add		r4, r3, #0x0
	cmp		r1, #0x0
	bne		_080136d2
	ldr		r0, _08013728
	mov		r1, #0x66
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080136d2:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080136f4
	ldr		r1, [r5, #0x4]
	neg		r1, r1
	mov		r2, #0x8
	bl		sub_0808c118
	ldr		r1, [r4, #0x4]
	cmp		r1, #0x0
	bge		_080136ea
	add		r1, #0xf
_080136ea:
	asr		r1, r1, #0x4
	bl		sub_0808c344
	lsl		r0, r0, #0x4
	str		r0, [r4, #0x0]
_080136f4:
	add		r0, r4, #0x0
	ldr		r2, [sp, #0x108]
	ldr		r1, [r2, #0x0]
	ldr		r2, [r5, #0x0]
	add		r1, r1, r2
	ldr		r3, [sp, #0x108]
	str		r1, [r3, #0x0]
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	ldr		r0, [r3, #0x0]
	sub		r1, #0x80
	cmp		r0, r1
	bge		_0801372c
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	bge		_08013718
	b		_0801393a
_08013718:
	ldr		r5, [sp, #0x124]
	ldr		r7, [sp, #0xCC]
	b		_0801374c

.incbin "base.gba", 0x1371E, 0x2

_08013720:	.4byte 0x080d092a
_08013724:	.4byte 0x080d092b
_08013728:	.4byte 0x080d094c @ a_toda/game/collision.cpp

_0801372c:
	ldr		r1, [sp, #0x128]
	ldr		r3, [r1, #0x0]
	sub		r0, r0, r3
	cmp		r0, #0x80
	ble		_08013748
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	sub		r0, r0, r3
	cmp		r0, #0x80
	ble		_08013742
	b		_0801393a
_08013742:
	add		r5, r1, #0x0
	ldr		r7, [sp, #0xCC]
	b		_0801374c
_08013748:
	add		r5, r4, #0x0
	mov		r7, r10
_0801374c:
	ldr		r3, [sp, #0xCC]
	mov		r0, #0x18
	ldrsh	r3, [r3, r0]
	mov		r8, r3
	ldr		r1, [sp, #0xE8]
	sub		r0, r3, r1
	bl		sub_0808c3ac
	add		r4, r0, #0x0
	bl		sub_0808c46c
	str		r0, [sp, #0x0]
	str		r0, [sp, #0xC]
	add		r0, r4, #0x0
	bl		sub_0808c410
	str		r0, [sp, #0x8]
	neg		r0, r0
	str		r0, [sp, #0x4]
	ldr		r0, [r6, #0x0]
	ldr		r1, [sp, #0x68]
	sub		r0, r0, r1
	ldr		r2, [sp, #0xF8]
	str		r0, [r2, #0x0]
	ldr		r0, [r6, #0x4]
	ldr		r1, [sp, #0x6C]
	sub		r0, r0, r1
	str		r0, [r2, #0x4]
	ldr		r0, [sp, #0xF8]
	add		r1, r0, #0x0
	mov		r2, sp
	bl		sub_0808c964
	ldr		r0, [r5, #0x0]
	ldr		r1, [sp, #0x68]
	sub		r0, r0, r1
	ldr		r3, [sp, #0xFC]
	str		r0, [r3, #0x0]
	ldr		r0, [r5, #0x4]
	ldr		r1, [sp, #0x6C]
	sub		r0, r0, r1
	str		r0, [r3, #0x4]
	ldr		r0, [sp, #0xFC]
	add		r1, r0, #0x0
	mov		r2, sp
	bl		sub_0808c964
	ldr		r0, _080137d0
	mov		r9, r0
	ldr		r2, [sp, #0xF8]
	ldr		r1, [r2, #0x4]
	ldr		r3, [sp, #0xFC]
	ldr		r0, [r3, #0x4]
	add		r3, sp, #0x98
	add		r2, sp, #0xa0
	cmp		r1, r0
	bgt		_080137d4
	ldr		r0, [r3, #0x0]
	ldr		r1, [r3, #0x4]
	ldr		r2, [sp, #0x10C]
	str		r0, [r2, #0x0]
	str		r1, [r2, #0x4]
	ldr		r3, [sp, #0xF0]
	mov		r0, r9
	str		r3, [r0, #0x10]
	b		_080137e2

_080137d0:	.4byte 0x0200D19C

_080137d4:
	ldr		r0, [r2, #0x0]
	ldr		r1, [r2, #0x4]
	ldr		r2, [sp, #0x10C]
	str		r0, [r2, #0x0]
	str		r1, [r2, #0x4]
	mov		r3, r9
	str		r7, [r3, #0x10]
_080137e2:
	add		r5, sp, #0xb0
	mov		r0, r8
	bl		sub_0808c46c
	str		r0, [sp, #0x0]
	str		r0, [sp, #0xC]
	mov		r0, r8
	bl		sub_0808c410
	str		r0, [sp, #0x8]
	neg		r0, r0
	str		r0, [sp, #0x4]
	ldr		r0, [sp, #0x100]
	ldr		r1, [sp, #0xC4]
	mov		r2, sp
	bl		sub_0808c964
	ldr		r1, [sp, #0x10C]
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x100]
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r5, #0x4]
	ldr		r1, [r2, #0x4]
	sub		r0, r0, r1
	str		r0, [r2, #0x4]
	ldr		r0, [sp, #0x8]
	neg		r0, r0
	str		r0, [sp, #0x8]
	ldr		r0, [sp, #0x4]
	neg		r0, r0
	str		r0, [sp, #0x4]
	add		r2, sp, #0xb8
	ldr		r3, [sp, #0x100]
	ldr		r1, [r3, #0x0]
	ldr		r3, [sp, #0x10C]
	ldr		r0, [r3, #0x0]
	sub		r1, r1, r0
	ldr		r0, [sp, #0x110]
	str		r1, [r0, #0x0]
	ldr		r3, [sp, #0x100]
	ldr		r1, [r3, #0x4]
	ldr		r0, [r5, #0x4]
	sub		r1, r1, r0
	str		r1, [r2, #0x4]
	add		r6, sp, #0xa8
	add		r4, r2, #0x0
	cmp		r1, #0x0
	bne		_08013852
	ldr		r0, _0801390c
	mov		r1, #0x88
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08013852:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0801387a
	ldr		r1, [r5, #0x4]
	neg		r1, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	mov		r2, #0x8
	bl		sub_0808c118
	ldr		r1, [r4, #0x4]
	cmp		r1, #0x0
	bge		_08013870
	add		r1, #0xf
_08013870:
	asr		r1, r1, #0x4
	bl		sub_0808c344
	lsl		r0, r0, #0x4
	str		r0, [r4, #0x0]
_0801387a:
	ldr		r3, [sp, #0x110]
	ldr		r0, [r3, #0x0]
	ldr		r2, [sp, #0x10C]
	ldr		r1, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	str		r3, [r4, #0x4]
	ldr		r1, [sp, #0x110]
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x100]
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	ldr		r3, [sp, #0x110]
	str		r0, [r3, #0x0]
	ldr		r0, [r4, #0x4]
	ldr		r1, [r6, #0x4]
	sub		r0, r0, r1
	str		r0, [r4, #0x4]
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x10
	bl		sub_0808c930
	mov		r1, #0x6
	mov		r2, #0x0
	bl		sub_0808c5c0
	add		r6, r0, #0x0
	ldr		r0, [sp, #0xC4]
	add		r1, r0, #0x0
	mov		r2, #0x10
	bl		sub_0808c930
	mov		r1, #0x6
	mov		r2, #0x0
	bl		sub_0808c5c0
	add		r4, r0, #0x0
	cmp		r6, r4
	bge		_08013910
	ldr		r1, [sp, #0xC4]
	ldr		r0, [r1, #0x0]
	add		r1, r6, #0x0
	mov		r2, #0x8
	bl		sub_0808c118
	add		r1, r4, #0x0
	cmp		r4, #0x0
	bge		_080138e2
	add		r1, #0xf
_080138e2:
	asr		r5, r1, #0x4
	add		r1, r5, #0x0
	bl		sub_0808c344
	lsl		r0, r0, #0x4
	mov		r2, r9
	str		r0, [r2, #0x0]
	ldr		r3, [sp, #0xC4]
	ldr		r0, [r3, #0x4]
	add		r1, r6, #0x0
	mov		r2, #0x8
	bl		sub_0808c118
	add		r1, r5, #0x0
	bl		sub_0808c344
	lsl		r0, r0, #0x4
	mov		r1, r9
	str		r0, [r1, #0x4]
	b		_0801391c

.incbin "base.gba", 0x1390A, 0x2

_0801390c:	.4byte 0x080d094c @ a_toda/game/collision.cpp

_08013910:
	ldr		r2, [sp, #0xC4]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r2, #0x4]
	mov		r3, r9
	str		r0, [r3, #0x0]
	str		r1, [r3, #0x4]
_0801391c:
	ldr		r0, [sp, #0xCC]
	mov		r1, r9
	str		r0, [r1, #0x14]
	mov		r2, r10
	str		r2, [r1, #0x18]
	ldr		r3, [sp, #0xC8]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r3, #0x4]
	mov		r2, r9
	str		r0, [r2, #0x8]
	str		r1, [r2, #0xc]
	ldr		r3, [sp, #0x0+0x154]
	str		r3, [r2, #0x1c]
	mov		r0, #0x1
	b		_0801395e
_0801393a:
	mov		r0, #0x1c
	add		r10, r0
	ldr		r1, [sp, #0xE4]
	sub		r1, #0x1
	str		r1, [sp, #0xE4]
	cmp		r1, #0x0
	blt		_0801394a
	b		_0801345c
_0801394a:
	ldr		r2, [sp, #0xCC]
	add		r2, #0x1c
	str		r2, [sp, #0xCC]
	ldr		r3, [sp, #0xD0]
	sub		r3, #0x1
	str		r3, [sp, #0xD0]
	cmp		r3, #0x0
	blt		_0801395c
	b		_080133a4
_0801395c:
	mov		r0, #0x0
_0801395e:
	add		sp, #0x134
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1396E, 0x2
	thumb_func_end sub_08013368

	thumb_func_start sub_08013970
sub_08013970:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	sub		sp, #0x30
	mov		r8, r0
	add		r4, r1, #0x0
	add		r6, sp, #0x10
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_0808c828
	ldr		r0, [r4, #0x0]
	str		r0, [sp, #0x10]
	ldr		r0, [r4, #0x8]
	str		r0, [sp, #0x14]
	mov		r0, sp
	add		r1, r6, #0x0
	mov		r2, #0x10
	bl		sub_0808c818
	add		r5, sp, #0x20
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_0808c828
	ldr		r0, [r4, #0x4]
	str		r0, [sp, #0x20]
	ldr		r0, [r4, #0xc]
	str		r0, [sp, #0x24]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r1, _08013a0c
	mov		r0, r8
	mov		r2, #0x74
	bl		sub_0808c818
	mov		r0, #0x4
	mov		r1, r8
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r2, _08013a10
	mov		r3, #0x3
_080139ce:
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x2
	add		r0, sp
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldrb	r0, [r2, #0x1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x4]
	ldrb	r0, [r2, #0x2]
	lsl		r0, r0, #0x2
	add		r0, sp
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x8]
	ldrb	r0, [r2, #0x3]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0xc]
	add		r2, #0x4
	sub		r3, #0x1
	add		r1, #0x1c
	cmp		r3, #0x0
	bge		_080139ce
	add		sp, #0x30
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08013a0c:	.4byte 0x080d0ac8
_08013a10:	.4byte 0x080d0966
	thumb_func_end sub_08013970

	thumb_func_start sub_08013a14
sub_08013a14:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x30
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	ldr		r2, [r6, #0x8]
	ldr		r3, [r6, #0x0]
	sub		r5, r2, r3
	ldr		r1, [r6, #0xc]
	ldr		r0, [r6, #0x4]
	sub		r1, r1, r0
	cmp		r1, r5
	ble		_08013a30
	add		r1, r5, #0x0
_08013a30:
	mul		r1, r4
	cmp		r1, #0x0
	bge		_08013a38
	add		r1, #0xf
_08013a38:
	asr		r4, r1, #0x4
	str		r3, [sp, #0x10]
	add		r0, r3, r4
	str		r0, [sp, #0x14]
	sub		r0, r2, r4
	str		r0, [sp, #0x18]
	str		r2, [sp, #0x1c]
	add		r5, sp, #0x10
	mov		r0, sp
	add		r1, r5, #0x0
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r0, [r6, #0x4]
	str		r0, [sp, #0x20]
	add		r0, r0, r4
	str		r0, [sp, #0x24]
	ldr		r0, [r6, #0xc]
	sub		r4, r0, r4
	str		r4, [sp, #0x28]
	str		r0, [sp, #0x2c]
	add		r1, sp, #0x20
	add		r0, r5, #0x0
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r1, _08013ac0
	add		r0, r7, #0x0
	mov		r2, #0xe4
	bl		sub_0808c818
	mov		r0, #0x8
	strh	r0, [r7, #0x0]
	add		r1, r7, #0x4
	mov		r3, #0x0
	ldr		r2, _08013ac4
_08013a80:
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x2
	add		r0, sp
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldrb	r0, [r2, #0x1]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x4]
	ldrb	r0, [r2, #0x2]
	lsl		r0, r0, #0x2
	add		r0, sp
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x8]
	ldrb	r0, [r2, #0x3]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0xc]
	add		r2, #0x4
	add		r3, #0x1
	add		r1, #0x1c
	mov		r4, #0x0
	ldrsh	r0, [r7, r4]
	cmp		r3, r0
	blt		_08013a80
	add		sp, #0x30
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x13ABE, 0x2

_08013ac0:	.4byte 0x080d09e4
_08013ac4:	.4byte 0x080d0976
	thumb_func_end sub_08013a14

	thumb_func_start sub_08013ac8
sub_08013ac8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r9, r2
	ldr		r0, _08013b44
	ldr		r4, [r0, #0x4]
	cmp		r4, #0x0
	beq		_08013b52
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r8, r0
_08013ae4:
	mov		r2, #0x14
	ldrsh	r1, [r4, r2]
	ldr		r0, _08013b48
	bl		sub_08008f44
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_08013b4c
	ldrh	r0, [r1, #0x1c]
	mov		r7, r8
	and		r0, r7
	cmp		r0, #0x0
	beq		_08013b4c
	mov		r0, #0x1e
	ldrsh	r3, [r1, r0]
	cmp		r5, r3
	blt		_08013b4c
	mov		r2, #0x22
	ldrsh	r0, [r1, r2]
	cmp		r5, r0
	bge		_08013b4c
	mov		r7, #0x20
	ldrsh	r2, [r1, r7]
	cmp		r6, r2
	blt		_08013b4c
	mov		r7, #0x24
	ldrsh	r0, [r1, r7]
	cmp		r6, r0
	bge		_08013b4c
	sub		r3, r5, r3
	sub		r2, r6, r2
	asr		r3, r3, #0x1
	asr		r2, r2, #0x1
	ldr		r1, [r4, #0x18]
	mov		r4, #0x4
	ldrsh	r0, [r1, r4]
	mul		r0, r2
	lsl		r0, r0, #0x1
	add		r0, #0xa
	add		r1, r1, r0
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	ldrh	r0, [r1, #0x0]
	mov		r7, r9
	str		r0, [r7, #0x0]
	mov		r0, #0x1
	b		_08013b54

.incbin "base.gba", 0x13B42, 0x2

_08013b44:	.4byte 0x02008A88
_08013b48:	.4byte 0x02008AD4

_08013b4c:
	ldr		r4, [r4, #0x8]
	cmp		r4, #0x0
	bne		_08013ae4
_08013b52:
	mov		r0, #0x0
_08013b54:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08013ac8

	thumb_func_start sub_08013b60
sub_08013b60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x64
	str		r0, [sp, #0x30]
	str		r1, [sp, #0x34]
	str		r3, [sp, #0x38]
	ldr		r3, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, r3, r0
	str		r0, [sp, #0x4]
	ldr		r0, [sp, #0x30]
	ldr		r1, [r0, #0x4]
	ldr		r0, [r2, #0x4]
	add		r0, r1, r0
	str		r0, [sp, #0x8]
	add		r4, sp, #0xc
	ldr		r0, [r2, #0x8]
	add		r3, r3, r0
	str		r3, [sp, #0xc]
	ldr		r0, [r2, #0xc]
	add		r1, r1, r0
	str		r1, [r4, #0x4]
	add		r6, sp, #0x14
	ldr		r0, [sp, #0x4]
	ldr		r1, [sp, #0x34]
	ldr		r2, [r1, #0x0]
	add		r0, r0, r2
	str		r0, [sp, #0x14]
	ldr		r0, [sp, #0x8]
	ldr		r1, [r1, #0x4]
	add		r0, r0, r1
	str		r0, [r6, #0x4]
	ldr		r0, [sp, #0xc]
	add		r0, r0, r2
	str		r0, [sp, #0x1c]
	ldr		r0, [r4, #0x4]
	add		r7, r0, r1
	str		r7, [sp, #0x20]
	ldr		r0, [sp, #0x14]
	ldr		r1, [sp, #0x4]
	cmp		r0, r1
	ble		_08013bbc
	add		r0, r1, #0x0
_08013bbc:
	cmp		r0, #0x0
	bge		_08013bc4
	ldr		r2, _08013d24
	add		r0, r0, r2
_08013bc4:
	asr		r0, r0, #0x10
	mov		r5, #0x10
	neg		r5, r5
	and		r0, r5
	cmp		r0, #0x0
	bge		_08013bd2
	add		r0, #0x7
_08013bd2:
	asr		r0, r0, #0x3
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	add		r0, r0, r3
	str		r0, [sp, #0x3c]
	ldr		r0, [r6, #0x4]
	ldr		r1, [sp, #0x8]
	cmp		r0, r1
	ble		_08013be6
	add		r0, r1, #0x0
_08013be6:
	cmp		r0, #0x0
	bge		_08013bee
	ldr		r6, _08013d24
	add		r0, r0, r6
_08013bee:
	asr		r0, r0, #0x10
	and		r0, r5
	cmp		r0, #0x0
	bge		_08013bf8
	add		r0, #0x7
_08013bf8:
	asr		r0, r0, #0x3
	add		r1, r0, r3
	ldr		r0, [sp, #0x1c]
	ldr		r2, [sp, #0xc]
	cmp		r0, r2
	bge		_08013c06
	add		r0, r2, #0x0
_08013c06:
	cmp		r0, #0x0
	bge		_08013c0e
	ldr		r2, _08013d24
	add		r0, r0, r2
_08013c0e:
	asr		r0, r0, #0x10
	and		r0, r5
	cmp		r0, #0x0
	bge		_08013c18
	add		r0, #0x7
_08013c18:
	asr		r0, r0, #0x3
	add		r0, r0, r3
	str		r0, [sp, #0x40]
	add		r0, r7, #0x0
	ldr		r2, [r4, #0x4]
	cmp		r0, r2
	bge		_08013c28
	add		r0, r2, #0x0
_08013c28:
	cmp		r0, #0x0
	bge		_08013c30
	ldr		r4, _08013d24
	add		r0, r0, r4
_08013c30:
	asr		r0, r0, #0x10
	and		r0, r5
	cmp		r0, #0x0
	bge		_08013c3a
	add		r0, #0x7
_08013c3a:
	asr		r0, r0, #0x3
	add		r0, r0, r3
	str		r0, [sp, #0x44]
	mov		r10, r1
	cmp		r10, r0
	ble		_08013c48
	b		_08013e18
_08013c48:
	ldr		r5, [sp, #0x3c]
	str		r5, [sp, #0x5c]
	ldr		r6, [sp, #0x40]
	cmp		r5, r6
	ble		_08013c54
	b		_08013e0c
_08013c54:
	mov		r7, sp
	add		r7, #0x24
	str		r7, [sp, #0x50]
	ldr		r0, _08013d28
	mov		r2, r10
	lsl		r1, r2, #0x3
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	str		r1, [sp, #0x48]
	mov		r3, sp
	add		r3, #0x28
	str		r3, [sp, #0x4c]
	lsl		r1, r5, #0x13
	lsl		r0, r0, #0x10
	add		r1, r1, r0
	str		r1, [sp, #0x58]
_08013c74:
	ldr		r0, [sp, #0x5c]
	mov		r1, r10
	add		r2, sp, #0x24
	bl		sub_08013ac8
	cmp		r0, #0x0
	bne		_08013c84
	b		_08013df4
_08013c84:
	ldr		r0, [sp, #0x24]
	mov		r4, #0xf
	and		r0, r4
	sub		r0, #0x7
	str		r0, [sp, #0x24]
	cmp		r0, #0x0
	bge		_08013c94
	b		_08013df4
_08013c94:
	lsl		r0, r0, #0x2
	ldr		r5, _08013d2c
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x60]
	mov		r6, #0x0
	mov		r8, r6
	mov		r9, r6
	add		r5, r0, #0x0
	add		r5, #0x4
	ldr		r7, _08013d30
	str		r7, [sp, #0x54]
_08013cac:
	ldr		r0, [r5, #0x10]
	cmp		r0, #0x0
	bge		_08013cb6
	ldr		r1, _08013d24
	add		r0, r0, r1
_08013cb6:
	asr		r0, r0, #0x10
	ldr		r1, [r5, #0x14]
	cmp		r1, #0x0
	bge		_08013cc2
	ldr		r2, _08013d24
	add		r1, r1, r2
_08013cc2:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bne		_08013ccc
	cmp		r1, #0x0
	beq		_08013d76
_08013ccc:
	lsl		r0, r0, #0x1
	ldr		r3, [sp, #0x5c]
	add		r0, r3, r0
	lsl		r1, r1, #0x1
	add		r1, r10
	ldr		r2, [sp, #0x50]
	bl		sub_08013ac8
	cmp		r0, #0x0
	beq		_08013d5c
	ldr		r0, [sp, #0x24]
	mov		r4, #0xf
	and		r0, r4
	sub		r0, #0x7
	str		r0, [sp, #0x24]
	cmp		r0, #0x0
	blt		_08013d5c
	lsl		r0, r0, #0x2
	ldr		r6, _08013d2c
	add		r0, r0, r6
	ldr		r2, [r0, #0x0]
	mov		r1, r9
	mov		r7, #0x1
	eor		r1, r7
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, #0x4
	add		r4, r2, r0
	ldr		r1, [r5, #0x0]
	ldr		r0, [r5, #0x8]
	sub		r3, r1, r0
	cmp		r3, #0x0
	bge		_08013d12
	sub		r3, r0, r1
_08013d12:
	ldr		r2, [r4, #0x0]
	ldr		r0, [r4, #0x8]
	sub		r1, r2, r0
	cmp		r1, #0x0
	blt		_08013d34
	cmp		r3, r1
	beq		_08013d3a
	b		_08013d5c

.incbin "base.gba", 0x13D22, 0x2

_08013d24:	.4byte 0x0000FFFF
_08013d28:	.4byte 0xFFFFE000
_08013d2c:	.4byte 0x0200D1BC
_08013d30:	.4byte 0x03006384

_08013d34:
	sub		r0, r0, r2
	cmp		r3, r0
	bne		_08013d5c
_08013d3a:
	ldr		r1, [r5, #0x4]
	ldr		r0, [r5, #0xc]
	sub		r3, r1, r0
	cmp		r3, #0x0
	bge		_08013d46
	sub		r3, r0, r1
_08013d46:
	ldr		r2, [r4, #0x4]
	ldr		r0, [r4, #0xc]
	sub		r1, r2, r0
	cmp		r1, #0x0
	blt		_08013d56
	cmp		r3, r1
	beq		_08013d76
	b		_08013d5c
_08013d56:
	sub		r0, r0, r2
	cmp		r3, r0
	beq		_08013d76
_08013d5c:
	ldr		r0, [sp, #0x54]
	add		r1, r5, #0x0
	ldmia	r1!, { r2, r3, r4 }
	stmia	r0!, {  r2, r3, r4 }
	ldmia	r1!, { r2, r6, r7 }
	stmia	r0!, {  r2, r6, r7 }
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
	ldr		r3, [sp, #0x54]
	add		r3, #0x1c
	str		r3, [sp, #0x54]
	mov		r4, #0x1
	add		r8, r4
_08013d76:
	add		r5, #0x1c
	mov		r6, #0x1
	add		r9, r6
	mov		r7, r9
	cmp		r7, #0x3
	ble		_08013cac
	mov		r4, #0x4
	ldr		r1, [sp, #0x60]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r4, r0
	bge		_08013dc2
	add		r3, r1, #0x0
	add		r3, #0x74
	mov		r5, r8
	lsl		r0, r5, #0x3
	sub		r0, r0, r5
	lsl		r0, r0, #0x2
	ldr		r6, _08013dec
	add		r2, r0, r6
_08013d9e:
	add		r1, r2, #0x0
	add		r0, r3, #0x0
	ldmia	r0!, { r5, r6, r7 }
	stmia	r1!, {  r5, r6, r7 }
	ldmia	r0!, { r5, r6, r7 }
	stmia	r1!, {  r5, r6, r7 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r2, #0x1c
	mov		r7, #0x1
	add		r8, r7
	add		r3, #0x1c
	add		r4, #0x1
	ldr		r1, [sp, #0x60]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r4, r0
	blt		_08013d9e
_08013dc2:
	mov		r6, r8
	cmp		r6, #0x0
	beq		_08013df4
	ldr		r7, _08013df0
	strh	r6, [r7, #0x0]
	ldr		r0, [sp, #0x58]
	str		r0, [sp, #0x28]
	ldr		r1, [sp, #0x48]
	ldr		r2, [sp, #0x4c]
	str		r1, [r2, #0x4]
	str		r7, [sp, #0x0]
	ldr		r0, [sp, #0x30]
	ldr		r1, [sp, #0x38]
	ldr		r2, [sp, #0x34]
	ldr		r3, [sp, #0x4c]
	bl		sub_08013368
	cmp		r0, #0x0
	beq		_08013df4
	mov		r0, #0x1
	b		_08013e1a

_08013dec:	.4byte 0x03006384
_08013df0:	.4byte 0x03006380

_08013df4:
	ldr		r3, [sp, #0x58]
	mov		r4, #0x80
	lsl		r4, r4, #0xd
	add		r3, r3, r4
	str		r3, [sp, #0x58]
	ldr		r5, [sp, #0x5c]
	add		r5, #0x2
	str		r5, [sp, #0x5c]
	ldr		r6, [sp, #0x40]
	cmp		r5, r6
	bgt		_08013e0c
	b		_08013c74
_08013e0c:
	mov		r7, #0x2
	add		r10, r7
	ldr		r0, [sp, #0x44]
	cmp		r10, r0
	bgt		_08013e18
	b		_08013c48
_08013e18:
	mov		r0, #0x0
_08013e1a:
	add		sp, #0x64
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x13E2A, 0x1F2
	thumb_func_end sub_08013b60

	thumb_func_start sub_0801401c
sub_0801401c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	add		r4, r3, #0x0
	bl		sub_08009050
	ldr		r0, _08014094
	str		r0, [r5, #0xc]
	add		r0, r4, #0x4
	str		r0, [r5, #0x18]
	ldr		r0, _08014098
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x10
	bl		sub_0808b7e0
	str		r0, [r5, #0x1c]
	ldrh	r0, [r4, #0xc]
	strh	r0, [r5, #0x20]
	mov		r0, #0x1
	strh	r0, [r5, #0x22]
	add		r1, r5, #0x0
	add		r1, #0x24
	ldr		r2, [r5, #0x18]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x10
	str		r0, [r5, #0x24]
	mov		r3, #0x2
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x10
	str		r0, [r5, #0x28]
	mov		r3, #0x4
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x10
	str		r0, [r5, #0x2c]
	mov		r3, #0x6
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x10
	str		r0, [r5, #0x30]
	add		r0, r5, #0x0
	add		r0, #0x34
	bl		sub_08013970
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	ldr		r0, _0801409c
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080140a0
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_08008fa4
	b		_080140a8

.incbin "base.gba", 0x14092, 0x2

_08014094:	.4byte 0x080e0a24
_08014098:	.4byte 0x0200BF08
_0801409c:	.4byte 0xFFFF8080

_080140a0:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_08008f64
_080140a8:
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0801401c

	thumb_func_start sub_080140b0
sub_080140b0:
	push	{ r4, r5, lr }
	ldr		r0, _0801412c
	add		r5, r0, #0x0
	add		r5, #0x98
	add		r4, r0, #0x0
	add		r4, #0x18
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08008ffc
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x80
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x20
	bl		sub_0808c7e4
	ldr		r0, _08014130
	add		r5, r0, #0x0
	add		r5, #0x98
	add		r4, r0, #0x0
	add		r4, #0x18
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08008ffc
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x80
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x20
	bl		sub_0808c7e4
	ldr		r0, _08014134
	add		r5, r0, #0x0
	add		r5, #0x98
	add		r4, r0, #0x0
	add		r4, #0x18
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08008ffc
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x80
	bl		sub_0808c828
	add		r0, r5, #0x0
	mov		r1, #0xff
	mov		r2, #0x20
	bl		sub_0808c7e4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1412A, 0x2

_0801412c:	.4byte 0x0200B5D4
_08014130:	.4byte 0x0200B51C
_08014134:	.4byte 0x0200B464
	thumb_func_end sub_080140b0

	thumb_func_start sub_08014138
sub_08014138:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x1f
	bls		_08014150
	ldr		r0, _08014174
	mov		r1, #0x82
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08014150:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08008f44
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0801416a
	ldr		r0, _08014178
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0801416a:
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x14172, 0x2

_08014174:	.4byte 0x080d094c @ a_toda/game/collision.cpp
_08014178:	.4byte 0x080d09d0
	thumb_func_end sub_08014138

	thumb_func_start sub_0801417c
sub_0801417c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	cmp		r4, #0x1f
	bls		_08014194
	ldr		r0, _080141d0
	ldr		r1, _080141d4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08014194:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08008f44
	cmp		r0, #0x0
	beq		_080141ac
	ldr		r0, _080141d8
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080141ac:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x1f
	ble		_080141be
	ldr		r0, _080141dc
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080141be:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_08008fa4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x141CE, 0x2

_080141d0:	.4byte 0x080d094c @ a_toda/game/collision.cpp
_080141d4:	.4byte 0x000001FF
_080141d8:	.4byte 0x080d09a0
_080141dc:	.4byte 0x080d09b8
	thumb_func_end sub_0801417c

	thumb_func_start sub_080141e0
sub_080141e0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r4, #0x0
	add		r6, #0x98
	add		r5, r4, #0x0
	add		r5, #0x18
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_08008ffc
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x80
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0xff
	mov		r2, #0x20
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080141e0

	thumb_func_start sub_08014210
sub_08014210:
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r0, _08014248
	ldr		r2, [r0, #0x4]
	cmp		r2, #0x0
	beq		_08014252
	mov		r4, #0x1
_0801421e:
	ldrh	r1, [r2, #0x22]
	add		r0, r4, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0801424c
	ldr		r1, [r3, #0x0]
	ldr		r0, [r2, #0x24]
	cmp		r1, r0
	blt		_0801424c
	ldr		r0, [r2, #0x2c]
	cmp		r1, r0
	bgt		_0801424c
	ldr		r1, [r3, #0x4]
	ldr		r0, [r2, #0x28]
	cmp		r1, r0
	blt		_0801424c
	ldr		r0, [r2, #0x30]
	cmp		r1, r0
	bgt		_0801424c
	add		r0, r2, #0x0
	b		_08014254

_08014248:	.4byte 0x0200B464

_0801424c:
	ldr		r2, [r2, #0x8]
	cmp		r2, #0x0
	bne		_0801421e
_08014252:
	mov		r0, #0x0
_08014254:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1425A, 0xC02
	push	{ lr }
	cmp		r1, #0x0
	beq		_08014e70
	ldr		r0, _08014e74
	mov		r1, #0xd9
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08014e70:
	pop		{ r0 }
	bx		r0

_08014e74:	.4byte 0x080d0f8c @ a_toda/game/player.cpp
	thumb_func_end sub_08014210

	thumb_func_start sub_08014e78
sub_08014e78:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r2, #0x0
	ldr		r3, [r0, #0x40]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08014e92
	neg		r1, r0
_08014e92:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08014e9a
	neg		r1, r1
_08014e9a:
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_08014ea2
	add		r0, #0x7
_08014ea2:
	asr		r0, r0, #0x3
	mov		r5, #0x80
	lsl		r5, r5, #0x3
	add		r2, r0, r5
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	ldr		r0, [r0, #0x0]
	add		r0, r0, r4
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08014ebc
	neg		r1, r0
_08014ebc:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08014ec4
	neg		r1, r1
_08014ec4:
	cmp		r1, #0x0
	bge		_08014eca
	add		r1, #0x7
_08014eca:
	asr		r1, r1, #0x3
	add		r1, r1, r5
	add		r0, r2, #0x0
	mov		r2, sp
	bl		sub_08013ac8
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08014ede
	ldr		r1, [sp, #0x0]
_08014ede:
	add		r0, r1, #0x0
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08014e78

	thumb_func_start sub_08014ee8
sub_08014ee8:
	push	{ r4, r5, lr }
	sub		sp, #0x3c
	add		r5, r0, #0x0
	ldr		r0, _08014f2c
	bl		sub_08002148
	add		r4, r0, #0x0
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
	ldr		r0, _08014f30
	bl		sub_0800f8e8
	ldr		r0, _08014f34
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_08014f48
	ldr		r0, _08014f38
	mov		r1, #0xab
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_08014f48

.incbin "base.gba", 0x14F2A, 0x2

_08014f2c:	.4byte 0x080d0f74 @ script_goto_fieldmenu
_08014f30:	.4byte 0x0200AEC8
_08014f34:	.4byte 0x02000BB8
_08014f38:	.4byte 0x080d0f8c @ a_toda/game/player.cpp

_08014f3c:
	ldr		r0, [r5, #0x4c]
	add		r0, #0x1
	str		r0, [r5, #0x4c]
	add		r0, r5, #0x0
	bl		sub_080b7690
_08014f48:
	ldr		r0, _08014f64
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08014f3c
	ldr		r0, _08014f68
	bl		sub_08002268
_08014f58:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08014f58

.incbin "base.gba", 0x14F62, 0x2

_08014f64:	.4byte 0x00000FB2
_08014f68:	.4byte 0x00000835
	thumb_func_end sub_08014ee8

	thumb_func_start sub_08014f6c
sub_08014f6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	add		r5, r1, #0x0
	add		r0, #0x46
	ldrh	r0, [r0, #0x0]
	add		r2, r5, #0x0
	bic		r2, r0
	cmp		r2, #0x0
	bne		_08014f8c
	mov		r0, r12
	add		r0, #0x44
	ldrh	r2, [r0, #0x0]
	and		r2, r5
	cmp		r2, #0x0
	bne		_08014f8c
	add		r2, r5, #0x0
_08014f8c:
	mov		r4, #0x4
	ldr		r1, _08014fc4
	ldrh	r3, [r1, #0x8]
	add		r0, r2, #0x0
	and		r0, r3
	mov		r7, r12
	add		r7, #0x46
	mov		r6, r12
	add		r6, #0x44
	cmp		r0, #0x0
	bne		_08014fb6
	add		r1, #0x8
_08014fa4:
	add		r1, #0x2
	add		r4, #0x1
	cmp		r4, #0x7
	bgt		_08014fb6
	ldrh	r3, [r1, #0x0]
	add		r0, r2, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_08014fa4
_08014fb6:
	strh	r3, [r6, #0x0]
	strh	r5, [r7, #0x0]
	add		r0, r2, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x14FC2, 0x2

_08014fc4:	.4byte 0x080d0f4c
	thumb_func_end sub_08014f6c

	thumb_func_start sub_08014fc8
sub_08014fc8:
	push	{ lr }
	ldr		r1, [r0, #0x4c]
	add		r1, #0x1
	str		r1, [r0, #0x4c]
	bl		sub_080b7690
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08014fc8

	thumb_func_start sub_08014fd8
sub_08014fd8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _08015004
	str		r0, [r5, #0xc]
	ldr		r1, _08015008
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08014ffe
	add		r0, r5, #0x0
	bl		sub_080b74c8
_08014ffe:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08015004:	.4byte 0x080e0a3c
_08015008:	.4byte 0x0200B68C
	thumb_func_end sub_08014fd8

	thumb_func_start sub_0801500c
sub_0801500c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _08015030
	str		r0, [r4, #0xc]
	ldr		r0, _08015034
	str		r4, [r0, #0x0]
	mov		r1, #0xe1
	lsl		r1, r1, #0x2
	add		r0, r4, #0x0
	add		r0, #0x48
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1502E, 0x2

_08015030:	.4byte 0x080e0a3c
_08015034:	.4byte 0x0200B68C
	thumb_func_end sub_0801500c

	thumb_func_start sub_08015038
sub_08015038:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _0801507c
	add		r1, r5, #0x0
	bl		sub_08008f44
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_0801505c
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_0801505c:
	mov		r0, #0x88
	bl		sub_0808af94
	add		r4, r0, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_0800a4fc
	ldr		r0, _08015080
	str		r0, [r4, #0x50]
	ldr		r0, _08015084
	str		r0, [r4, #0xc]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1507A, 0x2

_0801507c:	.4byte 0x0200A604
_08015080:	.4byte 0x080e08bc
_08015084:	.4byte 0x080e089c
	thumb_func_end sub_08015038

	thumb_func_start sub_08015088
sub_08015088:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r3, #0x0
	ldr		r2, _08015094
	ldrh	r1, [r2, #0x0]
	b		_080150a4

_08015094:	.4byte 0x080d0f4c

_08015098:
	add		r2, #0x2
	add		r3, #0x1
	cmp		r3, #0x7
	bgt		_080150aa
	ldrh	r1, [r2, #0x0]
	add		r0, r4, #0x0
_080150a4:
	and		r0, r1
	cmp		r0, r1
	bne		_08015098
_080150aa:
	ldr		r1, _080150c0
	mov		r0, #0x7
	and		r3, r0
	lsl		r0, r3, #0x1
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x150BE, 0x2

_080150c0:	.4byte 0x080d0f5c
	thumb_func_end sub_08015088

	thumb_func_start sub_080150c4
sub_080150c4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r8, r0
	bl		sub_080b74f4
	ldr		r0, _08015134
	mov		r1, r8
	str		r0, [r1, #0xc]
	mov		r5, #0xa
	mov		r7, #0x0
	ldr		r6, _08015138
	mov		r0, #0x80
	mov		r9, r0
	ldr		r4, _0801513c
_080150e4:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_0800bcd0
	add		r2, r0, #0x0
	add		r0, #0x5c
	strb	r7, [r0, #0x0]
	ldrb	r1, [r4, #0x0]
	add		r0, r6, #0x0
	bl		sub_0800bcd0
	add		r2, r0, #0x0
	add		r0, #0x5d
	strb	r7, [r0, #0x0]
	ldrb	r1, [r4, #0x8]
	mov		r0, r9
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r1, r0, #0x1f
	cmp		r1, #0x0
	bne		_08015116
	add		r0, r2, #0x0
	add		r0, #0x5c
	strb	r1, [r0, #0x0]
_08015116:
	add		r4, #0x1
	add		r5, #0x1
	cmp		r5, #0x11
	ble		_080150e4
	ldr		r0, _08015140
	add		r0, #0xd1
	ldrb	r4, [r0, #0x0]
	cmp		r4, #0x2
	beq		_08015160
	cmp		r4, #0x2
	bgt		_08015144
	cmp		r4, #0x1
	beq		_0801514e
	b		_08015186

.incbin "base.gba", 0x15132, 0x2

_08015134:	.4byte 0x080e0a64
_08015138:	.4byte 0x0200A26C
_0801513c:	.4byte 0x080d1002
_08015140:	.4byte 0x02000BAC

_08015144:
	cmp		r4, #0x3
	beq		_0801516c
	cmp		r4, #0x4
	beq		_08015178
	b		_08015186
_0801514e:
	ldr		r0, _0801515c
	mov		r1, #0x1e
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r4, [r0, #0x0]
	b		_08015186

_0801515c:	.4byte 0x0200A26C

_08015160:
	ldr		r0, _08015168
	mov		r1, #0x1f
	b		_0801517c

.incbin "base.gba", 0x15166, 0x2

_08015168:	.4byte 0x0200A26C

_0801516c:
	ldr		r0, _08015174
	mov		r1, #0x20
	b		_0801517c

.incbin "base.gba", 0x15172, 0x2

_08015174:	.4byte 0x0200A26C

_08015178:
	ldr		r0, _08015194
	mov		r1, #0x21
_0801517c:
	bl		sub_0800bcd0
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
_08015186:
	mov		r0, r8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08015194:	.4byte 0x0200A26C
	thumb_func_end sub_080150c4

	thumb_func_start sub_08015198
sub_08015198:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4c
	str		r0, [sp, #0x3c]
	ldr		r0, _08015308
	bl		sub_08002148
	str		r0, [sp, #0x40]
	mov		r0, #0x4
	bl		sub_08009518
	lsr		r0, r0, #0x2
	str		r0, [sp, #0x44]
	ldr		r1, _0801530c
	ldr		r0, _08015310
	add		r0, #0xd8
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
_080151c8:
	mov		r4, #0x1
	ldr		r5, _08015314
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r4, [r0, #0x0]
	ldr		r0, _08015318
	mov		r6, r9
	sub		r6, #0xa
	add		r0, r6, r0
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r1, #0x5d
	strb	r4, [r1, #0x0]
	add		r0, #0x5c
	strb	r4, [r0, #0x0]
	ldr		r1, _0801531c
	mov		r0, sp
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _08015320
	ldr		r0, [r0, #0x0]
	ldr		r1, [sp, #0x40]
	mov		r2, r9
	bl		sub_0808b814
	add		r1, r0, #0x0
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	str		r6, [sp, #0x48]
_08015214:
	mov		r7, #0xa
	ldr		r6, _08015318
_08015218:
	ldrb	r5, [r6, #0x0]
	ldr		r0, _08015314
	add		r1, r5, #0x0
	bl		sub_0800bcd0
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	cmp		r7, r9
	beq		_0801527c
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0801527c
	ldr		r0, _08015314
	add		r1, r7, #0x0
	bl		sub_0800bcd0
	add		r2, r0, #0x0
	add		r0, #0x5c
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	ldr		r0, _08015314
	add		r1, r5, #0x0
	bl		sub_0800bcd0
	add		r2, r0, #0x0
	add		r0, #0x5d
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldrb	r1, [r6, #0x8]
	mov		r0, #0x80
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r1, r0, #0x1f
	cmp		r1, #0x0
	bne		_0801527c
	add		r0, r2, #0x0
	add		r0, #0x5c
	strb	r1, [r0, #0x0]
_0801527c:
	add		r6, #0x1
	add		r7, #0x1
	cmp		r7, #0x11
	ble		_08015218
	ldr		r0, [sp, #0x3c]
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080152a4
	mov		r0, #0x55
	bl		sub_0808f690
	ldr		r0, [sp, #0x3c]
	ldr		r1, [sp, #0x48]
	bl		sub_08015360
_080152a4:
	mov		r0, #0x0
	mov		r1, #0xfc
	lsl		r1, r1, #0x2
	bl		sub_0800185c
	add		r3, r0, #0x0
	mov		r2, #0x0
	ldr		r1, [sp, #0x44]
	cmp		r2, r1
	bge		_08015214
	ldr		r6, _08015324
	mov		r10, r2
	mov		r5, #0x1
	ldr		r7, _08015314
	ldr		r0, _08015318
	mov		r8, r0
_080152c4:
	lsl		r0, r2, #0x2
	ldr		r1, [r6, #0x0]
	add		r4, r1, r0
	ldrb	r0, [r4, #0x2]
	cmp		r0, r9
	bne		_08015328
	ldrh	r0, [r4, #0x0]
	cmp		r0, r3
	bne		_08015328
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_0800bcd0
	add		r0, #0x5c
	mov		r1, r10
	strb	r1, [r0, #0x0]
	mov		r0, r9
	sub		r0, #0xa
	add		r0, r8
	ldrb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r1, #0x5d
	strb	r5, [r1, #0x0]
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
	ldrb	r4, [r4, #0x3]
	mov		r9, r4
	mov		r0, #0x54
	bl		sub_0808f690
	b		_080151c8

_08015308:	.4byte 0x080d0fcc @ script_worldmap_name
_0801530c:	.4byte 0x080d0fe1
_08015310:	.4byte 0x02000BAC
_08015314:	.4byte 0x0200A26C
_08015318:	.4byte 0x080d1002
_0801531c:	.4byte 0x00000803
_08015320:	.4byte 0x0200BF08
_08015324:	.4byte 0x0200B690

_08015328:
	add		r2, #0x1
	ldr		r0, [sp, #0x44]
	cmp		r2, r0
	blt		_080152c4
	b		_08015214

.incbin "base.gba", 0x15332, 0x2
	push	{ r4, lr }
	ldr		r4, _0801535c
	add		r0, r4, #0x0
	sub		r0, #0x50
	mov		r1, #0x40
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_080150c4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1535A, 0x2

_0801535c:	.4byte 0x0200DA50
	thumb_func_end sub_08015198

	thumb_func_start sub_08015360
sub_08015360:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r2, _08015380
	add		r0, r1, r2
	bl		sub_08002268
	mov		r0, #0xfc
	lsl		r0, r0, #0x4
	bl		sub_08002268
_08015374:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08015374

.incbin "base.gba", 0x1537E, 0x2

_08015380:	.4byte 0x0000086A
	thumb_func_end sub_08015360

	thumb_func_start sub_08015384
sub_08015384:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	ldr		r5, _080153c8
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	add		r2, r0, #0x0
	add		r0, #0x5c
	strb	r6, [r0, #0x0]
	ldr		r6, _080153cc
	sub		r4, #0xa
	add		r0, r4, r6
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0800bcd0
	add		r2, r0, #0x0
	add		r0, #0x5d
	mov		r1, r8
	strb	r1, [r0, #0x0]
	mov		r0, r8
	cmp		r0, #0x0
	beq		_080153d0
	add		r1, r2, #0x0
	add		r1, #0x5c
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_080153ec

.incbin "base.gba", 0x153C6, 0x2

_080153c8:	.4byte 0x0200A26C
_080153cc:	.4byte 0x080d1002

_080153d0:
	add		r0, r6, #0x0
	add		r0, #0x8
	add		r0, r4, r0
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r1, r0, #0x1f
	cmp		r1, #0x0
	bne		_080153ec
	add		r0, r2, #0x0
	add		r0, #0x5c
	strb	r1, [r0, #0x0]
_080153ec:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x153F6, 0x2C2
	thumb_func_end sub_08015384

	thumb_func_start sub_080156b8
sub_080156b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	cmp		r0, #0x0
	beq		_0801575c
	ldr		r4, _08015740
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080156d6
	ldr		r0, _08015744
	mov		r1, #0x7c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080156d6:
	ldr		r0, _08015748
	mov		r8, r0
	sub		r0, #0x50
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r5, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0801574c
	str		r0, [r5, #0xc]
	str		r5, [r4, #0x0]
	ldr		r0, _08015750
	add		r0, #0xd4
	ldrh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x40
	strh	r1, [r0, #0x0]
	mov		r4, #0x0
	ldr		r7, _08015754
	add		r6, r5, #0x0
	add		r6, #0x44
_08015706:
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	str		r0, [r6, #0x0]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08007200
	ldmia	r6!, { r1 }
	add		r0, r7, #0x0
	bl		sub_08008f64
	add		r4, #0x1
	cmp		r4, #0x9
	ble		_08015706
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08015758
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, r8
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	b		_0801577c

.incbin "base.gba", 0x1573E, 0x2

_08015740:	.4byte 0x0200B694
_08015744:	.4byte 0x080d103c
_08015748:	.4byte 0x0200DA50
_0801574c:	.4byte 0x080e0a8c
_08015750:	.4byte 0x02000BAC
_08015754:	.4byte 0x0200A26C
_08015758:	.4byte 0xFFFFF200

_0801575c:
	ldr		r4, _08015788
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08015770
	ldr		r0, _0801578c
	mov		r1, #0x7f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08015770:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08015790
	mov		r3, #0x0
	bl		sub_080b7724
_0801577c:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x15786, 0x2

_08015788:	.4byte 0x0200B694
_0801578c:	.4byte 0x080d103c
_08015790:	.4byte 0xFFFFF201
	thumb_func_end sub_080156b8

	thumb_func_start sub_08015794
sub_08015794:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, _080157c0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080157ac
	ldr		r0, _080157c4
	mov		r1, #0x85
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080157ac:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _080157c8
	add		r3, r5, #0x0
	bl		sub_080b7724
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x157BE, 0x2

_080157c0:	.4byte 0x0200B694
_080157c4:	.4byte 0x080d103c
_080157c8:	.4byte 0xFFFF8000
	thumb_func_end sub_08015794

	thumb_func_start sub_080157cc
sub_080157cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	mov		r4, #0x1d
_080157d6:
	mov		r1, r8
	ldr		r0, [r1, #0x60]
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	mov		r5, #0x9
	cmp		r0, #0x0
	bne		_080157e6
	mov		r5, #0x5
_080157e6:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	sub		r0, r0, r4
	lsl		r0, r0, #0x11
	mov		r1, #0x1e
	bl		sub_080bbcac
	add		r6, r0, #0x0
	mov		r2, #0x0
	sub		r7, r4, #0x1
	cmp		r2, r5
	bgt		_08015822
	ldr		r3, _08015838
	mov		r4, r8
	add		r4, #0x44
	add		r2, r5, #0x1
_08015808:
	ldmia	r4!, { r1 }
	mov		r5, #0x90
	lsl		r5, r5, #0x1
	add		r1, r1, r5
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	lsl		r0, r0, #0x10
	add		r0, r6, r0
	str		r0, [r1, #0x0]
	add		r3, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_08015808
_08015822:
	mov		r0, r8
	bl		sub_080b7690
	add		r4, r7, #0x0
	cmp		r4, #0x0
	bge		_080157d6
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08015838:	.4byte 0x080d1014
	thumb_func_end sub_080157cc

	thumb_func_start sub_0801583c
sub_0801583c:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r2, #0x0
	add		r5, r3, #0x0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x11
	mov		r1, #0x1e
	bl		sub_080bbcac
	add		r6, r0, #0x0
	cmp		r4, r5
	bgt		_08015882
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	mov		r12, r0
	ldr		r1, _08015888
	lsl		r0, r4, #0x1
	add		r2, r0, r1
	lsl		r0, r4, #0x2
	add		r0, #0x44
	add		r3, r0, r7
_0801586c:
	ldmia	r3!, { r1 }
	add		r1, r12
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	lsl		r0, r0, #0x10
	add		r0, r6, r0
	str		r0, [r1, #0x0]
	add		r2, #0x2
	add		r4, #0x1
	cmp		r4, r5
	ble		_0801586c
_08015882:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08015888:	.4byte 0x080d1014
	thumb_func_end sub_0801583c

	thumb_func_start sub_0801588c
sub_0801588c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r1, r2, #0x0
	add		r6, r3, #0x0
	mov		r0, sp
	add		r2, r4, #0x0
	bl		sub_0808c63c
	mov		r0, sp
	bl		sub_080bdc3c
	sub		r5, r0, #0x1
	cmp		r5, #0x0
	blt		_080158f8
	mov		r0, #0x1
	mov		r9, r0
	mov		r1, #0x0
	mov		r8, r1
	lsl		r0, r5, #0x2
	lsl		r1, r6, #0x2
	add		r2, r7, #0x0
	add		r2, #0x44
	add		r1, r1, r2
	add		r4, r0, r1
_080158c6:
	mov		r0, sp
	add		r1, r0, r5
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x2f
	ble		_080158e8
	ldr		r0, [r4, #0x0]
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	sub		r1, #0x30
	bl		sub_0800bdbc
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, r9
	b		_080158ee
_080158e8:
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, r8
_080158ee:
	strb	r1, [r0, #0x0]
	sub		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080158c6
_080158f8:
	add		sp, #0x10
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x15906, 0x156
	thumb_func_end sub_0801588c

	thumb_func_start sub_08015a5c
sub_08015a5c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _08015a70
	cmp		r1, r0
	beq		_08015a74
	add		r0, #0x2
	cmp		r1, r0
	beq		_08015ab8
	b		_08015afc

.incbin "base.gba", 0x15A6E, 0x2

_08015a70:	.4byte 0xFFFFF004

_08015a74:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	bne		_08015afc
	mov		r0, #0x2
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	b		_08015a94
_08015a8e:
	add		r0, r4, #0x0
	bl		sub_080b7690
_08015a94:
	ldr		r0, _08015ab4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08015a8e
	mov		r0, #0x1
	strh	r0, [r5, #0x0]
_08015aa2:
	add		r0, r4, #0x0
	bl		sub_080b7690
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x1
	beq		_08015aa2
	b		_08015afc

.incbin "base.gba", 0x15AB2, 0x2

_08015ab4:	.4byte 0x00000FB2

_08015ab8:
	mov		r0, #0x1
	bl		sub_0808f628
	add		r0, r4, #0x0
	add		r0, #0x42
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r5, r4, #0x0
	add		r5, #0x40
	cmp		r0, #0x0
	blt		_08015af8
	mov		r0, #0x2
	mov		r1, #0x0
	bl		sub_0808f558
	mov		r0, #0x2
	bl		sub_0808f670
	mov		r0, #0x2
	mov		r1, #0xff
	mov		r2, #0x14
	bl		sub_0808f58c
	b		_08015aee
_08015ae8:
	add		r0, r4, #0x0
	bl		sub_080b7690
_08015aee:
	ldr		r0, _08015b04
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08015ae8
_08015af8:
	mov		r0, #0x0
	strh	r0, [r5, #0x0]
_08015afc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x15B02, 0x2

_08015b04:	.4byte 0x00000FB2
	thumb_func_end sub_08015a5c

	thumb_func_start sub_08015b08
sub_08015b08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	mov		r0, #0x1
	bl		sub_0808f628
	mov		r4, #0x1
	neg		r4, r4
	ldr		r0, _08015b30
	cmp		r6, r0
	beq		_08015b58
	cmp		r6, r0
	bgt		_08015b34
	sub		r0, #0x1
	cmp		r6, r0
	beq		_08015b40
	b		_08015b7c

_08015b30:	.4byte 0xFFFF8001

_08015b34:
	ldr		r0, _08015b3c
	cmp		r6, r0
	beq		_08015b7a
	b		_08015b7c

_08015b3c:	.4byte 0xFFFF8002

_08015b40:
	add		r0, r5, #0x0
	bl		sub_08015d0c
	add		r4, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0x42
	ldr		r0, _08015b54
	strh	r0, [r1, #0x0]
	add		r6, r1, #0x0
	b		_08015b80

_08015b54:	.4byte 0x0000FFFF

_08015b58:
	mov		r0, #0x2
	mov		r1, #0xff
	bl		sub_0808f558
	add		r1, r5, #0x0
	add		r1, #0x42
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
	mov		r0, #0x2
	mov		r1, #0x3
	bl		sub_0808f5cc
_08015b70:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08015b70
_08015b7a:
	add		r4, r7, #0x0
_08015b7c:
	add		r6, r5, #0x0
	add		r6, #0x42
_08015b80:
	add		r1, r5, #0x0
	add		r1, #0x40
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r7, r6, #0x0
	mov		r0, #0x4
	mov		r8, r0
_08015b8e:
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_08015bc4
_08015b96:
	mov		r0, #0xe7
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08015bbc
	ldr		r0, _08015bb8
	mov		r1, #0x64
	bl		sub_080b63dc
	cmp		r0, #0x3b
	bgt		_08015bbc
	add		r0, r5, #0x0
	bl		sub_08015d0c
	b		_08015bc2

.incbin "base.gba", 0x15BB6, 0x2

_08015bb8:	.4byte 0x0200BDD4

_08015bbc:
	add		r0, r5, #0x0
	bl		sub_08015d40
_08015bc2:
	add		r4, r0, #0x0
_08015bc4:
	cmp		r4, #0x0
	blt		_08015b96
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r4, r0
	beq		_08015b96
	strh	r4, [r7, #0x0]
	mov		r0, #0x2
	mov		r1, #0xff
	bl		sub_0808f558
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	mov		r0, #0x2
	bl		sub_0808f5cc
	mov		r4, #0xe1
	lsl		r4, r4, #0x4
_08015be8:
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08015be8
	bl		sub_0809658c
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08015c2a
	mov		r0, #0x2
	mov		r1, #0x0
	mov		r2, #0x28
	bl		sub_0808f58c
	b		_08015c12
_08015c0c:
	add		r0, r5, #0x0
	bl		sub_080b7690
_08015c12:
	ldr		r0, _08015c30
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08015c0c
	mov		r4, #0x13
_08015c1e:
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08015c1e
_08015c2a:
	mov		r0, #0x0
	ldrsh	r4, [r6, r0]
	b		_08015b8e

_08015c30:	.4byte 0x00000FB2
	thumb_func_end sub_08015b08

	thumb_func_start sub_08015c34
sub_08015c34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r9, r1
	ldr		r0, _08015ca4
	ldr		r1, [r0, #0x0]
	mov		r8, r1
	ldr		r7, [r1, #0x0]
	mov		r10, r0
	cmp		r7, #0x0
	bne		_08015c92
	ldr		r5, _08015ca8
	add		r0, r5, #0x0
	sub		r0, #0x40
	mov		r1, #0x44
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _08015cac
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x40
	strh	r7, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x42
	ldr		r0, _08015cb0
	strh	r0, [r1, #0x0]
	mov		r0, r8
	str		r4, [r0, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08015cb4
	mov		r3, #0x0
	bl		sub_080b7724
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
_08015c92:
	ldr		r0, _08015cb8
	cmp		r6, r0
	beq		_08015cdc
	cmp		r6, r0
	bgt		_08015cbc
	sub		r0, #0x2
	cmp		r6, r0
	beq		_08015cdc
	b		_08015cec

_08015ca4:	.4byte 0x080d1054
_08015ca8:	.4byte 0x0200DA40
_08015cac:	.4byte 0x080e0ab4
_08015cb0:	.4byte 0x0000FFFF
_08015cb4:	.4byte 0xFFFFF104
_08015cb8:	.4byte 0xFFFFF006

_08015cbc:
	ldr		r0, _08015cd8
	cmp		r6, r0
	beq		_08015cfc
	add		r0, #0x1
	cmp		r6, r0
	bne		_08015cec
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08015cfc
	bl		sub_080b75b0
	b		_08015cfc

.incbin "base.gba", 0x15CD6, 0x2

_08015cd8:	.4byte 0xFFFFF100

_08015cdc:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b7778
	b		_08015cfc
_08015cec:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	add		r2, r6, #0x0
	mov		r3, r9
	bl		sub_080b7724
_08015cfc:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x15D0A, 0x2
	thumb_func_end sub_08015c34

	thumb_func_start sub_08015d0c
sub_08015d0c:
	push	{ r4, r5, r6, lr }
	mov		r6, #0xa
	mov		r5, #0x0
	ldr		r4, _08015d28
_08015d14:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08015d2c
	mov		r1, #0x2
	ldrsh	r0, [r4, r1]
	b		_08015d38

.incbin "base.gba", 0x15D26, 0x2

_08015d28:	.4byte 0x080d105c

_08015d2c:
	add		r4, #0x4
	add		r5, #0x1
	cmp		r5, r6
	blt		_08015d14
	mov		r0, #0x1
	neg		r0, r0
_08015d38:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x15D3E, 0x2
	thumb_func_end sub_08015d0c

	thumb_func_start sub_08015d40
sub_08015d40:
	push	{ r4, r5, lr }
	ldr		r5, _08015d74
	ldr		r0, _08015d78
	bl		sub_0800227c
	ldr		r4, _08015d7c
	cmp		r0, #0x0
	beq		_08015d5e
	ldr		r0, [r4, #0x0]
	mov		r1, #0x64
	bl		sub_080b63dc
	cmp		r0, #0x18
	bgt		_08015d5e
	ldr		r5, _08015d80
_08015d5e:
	ldr		r0, [r4, #0x0]
	mov		r1, #0xf
	bl		sub_080b63dc
	lsl		r0, r0, #0x1
	add		r0, r0, r5
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08015d74:	.4byte 0x080d1084
_08015d78:	.4byte 0x00000416
_08015d7c:	.4byte 0x080d1058
_08015d80:	.4byte 0x080d10a2
	thumb_func_end sub_08015d40

	thumb_func_start sub_08015d84
sub_08015d84:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _08015db8
	str		r0, [r5, #0xc]
	mov		r0, #0x2
	bl		sub_0808f628
	ldr		r1, _08015dbc
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08015db0
	add		r0, r5, #0x0
	bl		sub_080b74c8
_08015db0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x15DB6, 0x2

_08015db8:	.4byte 0x080e0ab4
_08015dbc:	.4byte 0x0200B698
	thumb_func_end sub_08015d84

	thumb_func_start sub_08015dc0
sub_08015dc0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _08015df4
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x40
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldr		r0, _08015df8
	strh	r0, [r1, #0x0]
	ldr		r0, _08015dfc
	str		r4, [r0, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08015e00
	mov		r3, #0x0
	bl		sub_080b7724
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x15DF2, 0x2

_08015df4:	.4byte 0x080e0ab4
_08015df8:	.4byte 0x0000FFFF
_08015dfc:	.4byte 0x0200B698
_08015e00:	.4byte 0xFFFFF104
	thumb_func_end sub_08015dc0

	thumb_func_start sub_08015e04
sub_08015e04:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	mov		r8, r0
	mov		r0, #0x0
	str		r0, [sp, #0x8]
	mov		r1, #0x0
	str		r1, [sp, #0xC]
	mov		r2, #0x0
	str		r2, [sp, #0x10]
	mov		r3, r8
	add		r3, #0x58
	str		r3, [sp, #0x14]
	mov		r0, r8
	add		r0, #0x5a
	str		r0, [sp, #0x18]
	b		_08015e38
_08015e2c:
	mov		r0, r8
	bl		sub_080b7690
	ldr		r1, [sp, #0x10]
	add		r1, #0x1
	str		r1, [sp, #0x10]
_08015e38:
	ldr		r1, [sp, #0x10]
	mov		r2, #0x1
	and		r1, r2
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x6
	add		r0, #0x74
	add		r0, r8
	mov		r10, r0
	mov		r1, #0xff
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	bl		sub_0808c828
	mov		r3, r8
	ldr		r0, [r3, #0x6c]
	ldr		r4, [r3, #0x64]
	sub		r0, r0, r4
	ldr		r1, [sp, #0x8]
	mul		r0, r1
	ldr		r2, [sp, #0x14]
	mov		r3, #0x0
	ldrsh	r5, [r2, r3]
	add		r1, r5, #0x0
	bl		sub_080bbcac
	add		r0, r0, r4
	str		r0, [sp, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x70]
	ldr		r4, [r1, #0x68]
	sub		r0, r0, r4
	ldr		r2, [sp, #0x8]
	mul		r0, r2
	add		r1, r5, #0x0
	bl		sub_080bbcac
	add		r0, r0, r4
	str		r0, [sp, #0x4]
	mov		r3, r8
	ldr		r0, [r3, #0x60]
	ldr		r4, [r3, #0x5c]
	sub		r0, r0, r4
	ldr		r1, [sp, #0xC]
	mul		r0, r1
	ldr		r2, [sp, #0x18]
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	bl		sub_080bbcac
	add		r0, r0, r4
	mov		r9, r0
	mov		r1, r9
	mov		r2, #0x10
	bl		sub_0808c118
	str		r0, [sp, #0x1C]
	mov		r7, #0x0
	cmp		r7, r9
	bge		_08015f52
_08015eb0:
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	mov		r2, #0x10
	bl		sub_0808c118
	ldr		r1, [sp, #0x1C]
	sub		r0, r1, r0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808c5c0
	lsl		r4, r0, #0x8
	ldr		r2, [sp, #0x4]
	sub		r0, r2, r7
	cmp		r0, #0x0
	bge		_08015ed4
	ldr		r3, _08015fa0
	add		r0, r0, r3
_08015ed4:
	asr		r0, r0, #0x10
	sub		r5, r0, #0x1
	ldr		r1, [sp, #0x4]
	add		r0, r7, r1
	cmp		r0, #0x0
	bge		_08015ee4
	ldr		r2, _08015fa0
	add		r0, r0, r2
_08015ee4:
	asr		r0, r0, #0x10
	sub		r6, r0, #0x1
	mvn		r0, r5
	lsr		r3, r0, #0x1f
	mov		r0, #0x0
	mov		r12, r0
	cmp		r6, #0x9f
	bgt		_08015ef8
	mov		r1, #0x1
	mov		r12, r1
_08015ef8:
	cmp		r3, #0x0
	bne		_08015f02
	mov		r2, r12
	cmp		r2, #0x0
	beq		_08015f52
_08015f02:
	ldr		r0, [sp, #0x0]
	sub		r1, r0, r4
	cmp		r1, #0x0
	bge		_08015f0e
	ldr		r2, _08015fa0
	add		r1, r1, r2
_08015f0e:
	asr		r2, r1, #0x10
	ldr		r1, [sp, #0x0]
	add		r0, r4, r1
	cmp		r0, #0x0
	bge		_08015f1c
	ldr		r1, _08015fa0
	add		r0, r0, r1
_08015f1c:
	asr		r1, r0, #0x10
	cmp		r2, #0x0
	bge		_08015f24
	mov		r2, #0x0
_08015f24:
	cmp		r1, #0xef
	ble		_08015f2a
	mov		r1, #0xf0
_08015f2a:
	cmp		r2, r1
	beq		_08015f48
	cmp		r3, #0x0
	beq		_08015f3a
	lsl		r0, r5, #0x1
	add		r0, r10
	strb	r2, [r0, #0x1]
	strb	r1, [r0, #0x0]
_08015f3a:
	mov		r3, r12
	cmp		r3, #0x0
	beq		_08015f48
	lsl		r0, r6, #0x1
	add		r0, r10
	strb	r2, [r0, #0x1]
	strb	r1, [r0, #0x0]
_08015f48:
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	add		r7, r7, r0
	cmp		r7, r9
	blt		_08015eb0
_08015f52:
	mov		r0, r10
	ldr		r1, _08015fa4
	mov		r2, #0x2
	ldr		r3, _08015fa8
	bl		sub_08000a2c
	ldr		r2, [sp, #0x14]
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	ldr		r0, [sp, #0x8]
	cmp		r0, r1
	bgt		_08015f6e
	add		r0, #0x1
	str		r0, [sp, #0x8]
_08015f6e:
	ldr		r2, [sp, #0x18]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	ldr		r2, [sp, #0xC]
	cmp		r2, r0
	bgt		_08015f7e
	add		r2, #0x1
	str		r2, [sp, #0xC]
_08015f7e:
	ldr		r3, [sp, #0x8]
	cmp		r3, r1
	bgt		_08015f86
	b		_08015e2c
_08015f86:
	ldr		r1, [sp, #0xC]
	cmp		r1, r0
	bgt		_08015f8e
	b		_08015e2c
_08015f8e:
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x15F9E, 0x2

_08015fa0:	.4byte 0x0000FFFF
_08015fa4:	.4byte 0x04000040
_08015fa8:	.4byte 0xA2600003
	thumb_func_end sub_08015e04

	thumb_func_start sub_08015fac
sub_08015fac:
	push	{ r4, lr }
	mov		r12, r0
	ldrh	r0, [r1, #0x4]
	mov		r2, r12
	add		r2, #0x56
	strh	r0, [r2, #0x0]
	ldrh	r2, [r1, #0x6]
	mov		r0, r12
	add		r0, #0x58
	strh	r2, [r0, #0x0]
	ldrh	r0, [r1, #0x8]
	mov		r2, r12
	add		r2, #0x5a
	strh	r0, [r2, #0x0]
	mov		r2, #0xa
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x10
	mov		r3, r12
	str		r0, [r3, #0x5c]
	mov		r4, #0xc
	ldrsh	r0, [r1, r4]
	lsl		r0, r0, #0x10
	str		r0, [r3, #0x60]
	mov		r2, #0xe
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x10
	ldr		r2, _08016014
	ldr		r3, [r2, #0x0]
	sub		r0, r0, r3
	mov		r4, r12
	str		r0, [r4, #0x64]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x10
	ldr		r2, _08016018
	ldr		r2, [r2, #0x0]
	sub		r0, r0, r2
	str		r0, [r4, #0x68]
	mov		r4, #0x12
	ldrsh	r0, [r1, r4]
	lsl		r0, r0, #0x10
	sub		r0, r0, r3
	mov		r3, r12
	str		r0, [r3, #0x6c]
	mov		r4, #0x14
	ldrsh	r0, [r1, r4]
	lsl		r0, r0, #0x10
	sub		r0, r0, r2
	str		r0, [r3, #0x70]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08016014:	.4byte 0x0200CE30
_08016018:	.4byte 0x0200CE44
	thumb_func_end sub_08015fac

	thumb_func_start sub_0801601c
sub_0801601c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	ldr		r7, _08016070
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_08016062
	ldr		r5, _08016074
	ldr		r1, _08016078
	add		r0, r5, r1
	mov		r1, #0xbd
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0801607c
	str		r0, [r4, #0x4c]
	ldr		r0, _08016080
	str		r0, [r4, #0xc]
	str		r4, [r7, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
_08016062:
	ldr		r0, _08016084
	cmp		r6, r0
	beq		_0801608c
	ldr		r0, _08016088
	cmp		r6, r0
	beq		_080160a2
	b		_080160ae

_08016070:	.4byte 0x0200B69C
_08016074:	.4byte 0x0200DC30
_08016078:	.4byte 0xFFFFFDD0
_0801607c:	.4byte 0x080e0b1c
_08016080:	.4byte 0x080e0b34
_08016084:	.4byte 0xFFFF8000
_08016088:	.4byte 0xFFFFF101

_0801608c:
	ldr		r0, [r7, #0x0]
	mov		r1, r8
	bl		sub_08015fac
	ldr		r0, [r7, #0x0]
	ldr		r1, [r0, #0x2c]
	add		r2, r6, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	b		_080160ae
_080160a2:
	ldr		r0, [r7, #0x0]
	ldr		r1, [r0, #0x2c]
	add		r2, r6, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_080160ae:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801601c

	thumb_func_start sub_080160b8
sub_080160b8:
	push	{ r4, lr }
	mov		r12, r0
	ldrh	r2, [r1, #0x4]
	add		r0, #0x54
	mov		r3, #0x0
	strh	r2, [r0, #0x0]
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x10
	mov		r4, r12
	str		r0, [r4, #0x5c]
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x10
	str		r0, [r4, #0x60]
	ldrh	r2, [r1, #0xa]
	mov		r0, r12
	add		r0, #0x64
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r4, #0xc
	ldrsh	r0, [r1, r4]
	lsl		r0, r0, #0x10
	mov		r2, r12
	str		r0, [r2, #0x6c]
	mov		r4, #0xe
	ldrsh	r0, [r1, r4]
	lsl		r0, r0, #0x10
	str		r0, [r2, #0x70]
	ldrh	r2, [r1, #0x10]
	mov		r0, r12
	add		r0, #0x74
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r2, #0x12
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x10
	mov		r4, r12
	str		r0, [r4, #0x7c]
	mov		r2, r12
	add		r2, #0x80
	mov		r4, #0x14
	ldrsh	r0, [r1, r4]
	lsl		r0, r0, #0x10
	str		r0, [r2, #0x0]
	ldrh	r2, [r1, #0x16]
	mov		r0, r12
	add		r0, #0x84
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r2, r12
	add		r2, #0x8c
	mov		r4, #0x18
	ldrsh	r0, [r1, r4]
	lsl		r0, r0, #0x10
	str		r0, [r2, #0x0]
	add		r2, #0x4
	mov		r4, #0x1a
	ldrsh	r0, [r1, r4]
	lsl		r0, r0, #0x10
	str		r0, [r2, #0x0]
	ldrh	r1, [r1, #0x1c]
	mov		r0, r12
	add		r0, #0x94
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1614A, 0xDE
	thumb_func_end sub_080160b8

	thumb_func_start sub_08016228
sub_08016228:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r1
	ldr		r6, _08016290
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0801626c
	ldr		r5, _08016294
	ldr		r1, _08016298
	add		r0, r5, r1
	mov		r1, #0x98
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0801629c
	str		r0, [r4, #0x4c]
	ldr		r0, _080162a0
	str		r0, [r4, #0xc]
	str		r4, [r6, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
_0801626c:
	ldr		r0, _080162a4
	cmp		r7, r0
	bne		_08016286
	ldr		r0, [r6, #0x0]
	mov		r1, r8
	bl		sub_080160b8
	ldr		r0, [r6, #0x0]
	ldr		r1, [r0, #0x2c]
	add		r2, r7, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_08016286:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08016290:	.4byte 0x0200B6A0
_08016294:	.4byte 0x0200DC30
_08016298:	.4byte 0xFFFFFDD0
_0801629c:	.4byte 0x080e0adc
_080162a0:	.4byte 0x080e0af4
_080162a4:	.4byte 0xFFFF8000

.incbin "base.gba", 0x162A8, 0xE0
	thumb_func_end sub_08016228

	thumb_func_start sub_08016388
sub_08016388:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r4, #0x0
	add		r6, #0x56
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	bl		sub_0800223c
	ldr		r0, _080163a8
	cmp		r5, r0
	beq		_080163b0
	ldr		r0, _080163ac
	cmp		r5, r0
	beq		_080163f0
	b		_080163e2

_080163a8:	.4byte 0xFFFF8000
_080163ac:	.4byte 0xFFFFF101

_080163b0:
	add		r1, r4, #0x0
	add		r1, #0x54
	mov		r0, #0x1f
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, _080163ec
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r0, r2, #0x0
	orr		r0, r1
	bl		sub_0800132c
	add		r0, r4, #0x0
	bl		sub_08015e04
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	bl		sub_08002268
_080163e2:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_080163e2

_080163ec:	.4byte 0x02000B18

_080163f0:
	add		r1, r4, #0x0
	add		r1, #0x54
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, _0801641c
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08016420
	and		r0, r1
	bl		sub_0800132c
	add		r0, r4, #0x0
	bl		sub_080b7690
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0801641c:	.4byte 0x02000B18
_08016420:	.4byte 0xffffdfff

.incbin "base.gba", 0x16424, 0x16C
	thumb_func_end sub_08016388

	thumb_func_start sub_08016590
sub_08016590:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	ldr		r7, _08016620
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_08016608
	ldr		r6, _08016624
	ldr		r1, _08016628
	add		r0, r6, r1
	mov		r1, #0xc8
	lsl		r1, r1, #0x3
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0801662c
	str		r0, [r4, #0xc]
	ldr		r0, _08016630
	bl		sub_08002268
	ldr		r5, _08016634
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_08008df4
	ldr		r2, [r0, #0x24]
	mov		r12, r2
	add		r1, r4, #0x0
	add		r1, #0x40
	mov		r3, #0x1e
	ldrsh	r2, [r0, r3]
	lsl		r2, r2, #0x4
	mov		r0, r12
	bl		sub_0808e5ec
	add		r0, r5, #0x0
	mov		r1, #0x2
	bl		sub_08008df4
	ldr		r3, [r0, #0x24]
	mov		r5, #0xd0
	lsl		r5, r5, #0x2
	add		r1, r4, r5
	mov		r5, #0x1e
	ldrsh	r2, [r0, r5]
	lsl		r2, r2, #0x4
	add		r0, r3, #0x0
	bl		sub_0808e5ec
	str		r4, [r7, #0x0]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
_08016608:
	ldr		r0, [r7, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08016638
	mov		r3, r8
	bl		sub_080b7724
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1661E, 0x2

_08016620:	.4byte 0x0200B6A4
_08016624:	.4byte 0x0200DC30
_08016628:	.4byte 0xFFFFFDD0
_0801662c:	.4byte 0x080e0b5c
_08016630:	.4byte 0x000007B1
_08016634:	.4byte 0x02009E1C
_08016638:	.4byte 0xFFFF8000
	thumb_func_end sub_08016590

	thumb_func_start sub_0801663c
sub_0801663c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _08016668
	str		r0, [r5, #0xc]
	ldr		r1, _0801666c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08016662
	add		r0, r5, #0x0
	bl		sub_080b74c8
_08016662:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08016668:	.4byte 0x080e0b5c
_0801666c:	.4byte 0x0200B6A4
	thumb_func_end sub_0801663c

	thumb_func_start sub_08016670
sub_08016670:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _080166c8
	str		r0, [r4, #0xc]
	ldr		r0, _080166cc
	bl		sub_08002268
	ldr		r5, _080166d0
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_08008df4
	ldr		r3, [r0, #0x24]
	add		r1, r4, #0x0
	add		r1, #0x40
	mov		r6, #0x1e
	ldrsh	r2, [r0, r6]
	lsl		r2, r2, #0x4
	add		r0, r3, #0x0
	bl		sub_0808e5ec
	add		r0, r5, #0x0
	mov		r1, #0x2
	bl		sub_08008df4
	ldr		r3, [r0, #0x24]
	mov		r2, #0xd0
	lsl		r2, r2, #0x2
	add		r1, r4, r2
	mov		r5, #0x1e
	ldrsh	r2, [r0, r5]
	lsl		r2, r2, #0x4
	add		r0, r3, #0x0
	bl		sub_0808e5ec
	ldr		r0, _080166d4
	str		r4, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x166C6, 0x2

_080166c8:	.4byte 0x080e0b5c
_080166cc:	.4byte 0x000007B1
_080166d0:	.4byte 0x02009E1C
_080166d4:	.4byte 0x0200B6A4
	thumb_func_end sub_08016670

	thumb_func_start sub_080166d8
sub_080166d8:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, _08016700
	cmp		r1, r0
	beq		_0801675a
	cmp		r1, r0
	bhi		_08016704
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08016744
	cmp		r1, r0
	bhi		_0801674e
	sub		r0, #0x1
	cmp		r1, r0
	beq		_08016724
	b		_080169a4

.incbin "base.gba", 0x166FE, 0x2

_08016700:	.4byte 0x00000203

_08016704:
	ldr		r0, _0801671c
	cmp		r1, r0
	beq		_080167b4
	cmp		r1, r0
	bcc		_08016790
	add		r0, #0x1
	cmp		r1, r0
	beq		_080167c0
	ldr		r0, _08016720
	cmp		r1, r0
	beq		_080167e4
	b		_080169a4

_0801671c:	.4byte 0x00000205
_08016720:	.4byte 0x00000F83

_08016724:
	ldr		r0, _0801673c
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08016740
	and		r0, r1
	bl		sub_0800132c
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	b		_080169a8

_0801673c:	.4byte 0x02000B18
_08016740:	.4byte 0xFFFFE0FF

_08016744:
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	b		_08016786
_0801674e:
	mov		r1, #0x80
	lsl		r1, r1, #0x13
	ldrh	r0, [r1, #0x0]
	bic		r0, r3
	strh	r0, [r1, #0x0]
	b		_080169a8
_0801675a:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0801676c
	ldr		r2, _08016768
	b		_08016774

.incbin "base.gba", 0x16766, 0x2

_08016768:	.4byte 0x04000040

_0801676c:
	cmp		r0, #0x1
	beq		_08016772
	b		_080169a8
_08016772:
	ldr		r2, _0801678c
_08016774:
	ldrh	r0, [r5, #0x4]
	lsl		r0, r0, #0x8
	ldrh	r1, [r5, #0x8]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r2, #0x4
	ldrh	r0, [r5, #0x6]
	lsl		r0, r0, #0x8
	ldrh	r1, [r5, #0xa]
_08016786:
	orr		r0, r1
	strh	r0, [r2, #0x0]
	b		_080169a8

_0801678c:	.4byte 0x04000042

_08016790:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_080167a0
	ldr		r1, _0801679c
	b		_080167a8

_0801679c:	.4byte 0x04000048

_080167a0:
	cmp		r0, #0x1
	beq		_080167a6
	b		_080169a8
_080167a6:
	ldr		r1, _080167b0
_080167a8:
	ldrh	r0, [r5, #0x4]
	strb	r0, [r1, #0x0]
	b		_080169a8

.incbin "base.gba", 0x167AE, 0x2

_080167b0:	.4byte 0x04000049

_080167b4:
	ldr		r1, _080167bc
	ldrh	r0, [r5, #0x4]
	strh	r0, [r1, #0x0]
	b		_080169a8

_080167bc:	.4byte 0x0400004A

_080167c0:
	lsl		r1, r3, #0x10
	asr		r1, r1, #0xf
	ldr		r0, _080167dc
	add		r1, r1, r0
	ldrh	r2, [r1, #0x0]
	ldr		r0, _080167e0
	and		r0, r2
	strh	r0, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	ldrh	r2, [r5, #0x4]
	orr		r0, r2
	strh	r0, [r1, #0x0]
	b		_080169a8

.incbin "base.gba", 0x167DA, 0x2

_080167dc:	.4byte 0x04000008
_080167e0:	.4byte 0x0000FFFC

_080167e4:
	lsl		r0, r3, #0x10
	mov		r1, #0xdf
	lsl		r1, r1, #0x18
	add		r0, r0, r1
	asr		r0, r0, #0x10
	cmp		r0, #0xb
	bls		_080167f4
	b		_080169a8
_080167f4:
	lsl		r0, r0, #0x2
	ldr		r1, _08016800
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x167FE, 0x2

_08016800:	.4byte 0x08016804
_08016804:	.4byte 0x08016834

.incbin "base.gba", 0x16808, 0x2C
	thumb_func_end sub_080166d8


.incbin "base.gba", 0x16834, 0x170

_080169a4:

.incbin "base.gba", 0x169A4, 0x4
_080169a8:

.incbin "base.gba", 0x169A8, 0x4
_080169ac:

.incbin "base.gba", 0x169AC, 0xA0
_08016a4c:	.4byte 0x0200B6EC
_08016a50:	.4byte 0x080d119c @ script_k_koyano
	thumb_func_start sub_08016a54
sub_08016a54:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0xb
	bhi		_08016ab6
	lsl		r0, r4, #0x2
	ldr		r1, _08016a68
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08016a68:	.4byte 0x08016a6c
_08016a6c:	.4byte 0x08016aa0

.incbin "base.gba", 0x16A70, 0x2C
	thumb_func_end sub_08016a54


.incbin "base.gba", 0x16A9C, 0x1A

_08016ab6:

.incbin "base.gba", 0x16AB6, 0x22
	thumb_func_start sub_08016ad8
sub_08016ad8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r3, #0x0
	ldr		r2, _08016b00
_08016ae2:
	ldr		r1, [r2, #0x0]
	cmp		r5, r1
	bne		_08016aee
	ldr		r1, [r2, #0x4]
	cmp		r4, r1
	bge		_08016afa
_08016aee:
	ldr		r1, [r2, #0x8]
	cmp		r5, r1
	bne		_08016b04
	ldr		r1, [r2, #0xc]
	cmp		r4, r1
	bgt		_08016b04
_08016afa:
	add		r0, r3, #0x0
	b		_08016b0c

.incbin "base.gba", 0x16AFE, 0x2

_08016b00:	.4byte 0x080d10dc

_08016b04:
	add		r2, #0x10
	add		r3, #0x1
	cmp		r3, #0xb
	ble		_08016ae2
_08016b0c:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x16B12, 0x32
	thumb_func_end sub_08016ad8

	thumb_func_start sub_08016b44
sub_08016b44:
	push	{ lr }
	ldr		r1, _08016b54
	str		r0, [r1, #0x0]
	bl		sub_0808f690
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x16B52, 0x2

_08016b54:	.4byte 0x0200D1E8
	thumb_func_end sub_08016b44

	thumb_func_start sub_08016b58
sub_08016b58:
	push	{ lr }
	ldr		r2, _08016b6c
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r2, #0x0]
	bl		sub_0808f628
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x16B6A, 0x2

_08016b6c:	.4byte 0x0200D1E4
	thumb_func_end sub_08016b58

	thumb_func_start sub_08016b70
sub_08016b70:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_0809658c
	asr		r0, r5
	mov		r1, #0x1
	and		r1, r0
	ldr		r2, _08016ba0
	cmp		r1, #0x0
	beq		_08016b8e
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r0, r4
	beq		_08016b9a
_08016b8e:
	ldr		r0, [r2, #0x0]
	str		r4, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0808f5cc
_08016b9a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08016ba0:	.4byte 0x080d11ac

.incbin "base.gba", 0x16BA4, 0x20
	thumb_func_end sub_08016b70

	thumb_func_start sub_08016bc4
sub_08016bc4:
	push	{ r4, lr }
	sub		sp, #0x3c
	add		r4, r0, #0x0
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
	add		sp, #0x3c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x16BE6, 0x2
	thumb_func_end sub_08016bc4

	thumb_func_start sub_08016be8
sub_08016be8:
	push	{ r4, r5, lr }
	sub		sp, #0x3c
	add		r5, r0, #0x0
	ldr		r0, _08016c2c
	ldr		r0, [r0, #0x0]
	ldr		r1, _08016c30
	ldr		r1, [r1, #0x0]
	add		r2, r5, #0x0
	bl		sub_0808b814
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_08016c0e
	ldr		r0, _08016c34
	mov		r1, #0xa8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08016c0e:
	mov		r0, sp
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
	add		sp, #0x3c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x16C2A, 0x2

_08016c2c:	.4byte 0x0200BF08
_08016c30:	.4byte 0x0200B6EC
_08016c34:	.4byte 0x080d10c0 @ k_koyano/Common/cmnkoya.cpp
	thumb_func_end sub_08016be8

	thumb_func_start sub_08016c38
sub_08016c38:
	ldr		r2, _08016c48
	ldr		r1, _08016c4c
	strh	r1, [r2, #0x4]
	ldr		r1, _08016c50
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	bx		lr

_08016c48:	.4byte 0x0200B6A8
_08016c4c:	.4byte 0x00008080
_08016c50:	.4byte 0x0200A208
	thumb_func_end sub_08016c38

	thumb_func_start sub_08016c54
sub_08016c54:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	bl		sub_080b74f4
	ldr		r0, _08016c88
	str		r0, [r4, #0xc]
	ldr		r0, _08016c8c
	str		r0, [r4, #0x40]
	ldr		r0, _08016c90
	str		r0, [r4, #0x44]
	str		r5, [r4, #0x48]
	str		r6, [r4, #0x4c]
	mov		r0, r8
	str		r0, [r4, #0x50]
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x16C86, 0x2

_08016c88:	.4byte 0x080e0b84
_08016c8c:	.4byte 0x0200CE24
_08016c90:	.4byte 0x0200CE38
	thumb_func_end sub_08016c54

	thumb_func_start sub_08016c94
sub_08016c94:
	push	{ r4, lr }
	ldr		r4, _08016cac
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08016ca6
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r4, #0x0]
_08016ca6:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08016cac:	.4byte 0x0200D1E0
	thumb_func_end sub_08016c94

	thumb_func_start sub_08016cb0
sub_08016cb0:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	bl		sub_08016c94
	ldr		r0, _08016cfc
	mov		r9, r0
	ldr		r4, _08016d00
	add		r0, r4, #0x0
	mov		r1, #0x54
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	mov		r3, r8
	bl		sub_08016c54
	add		r1, r0, #0x0
	mov		r0, r9
	str		r1, [r0, #0x0]
	add		r4, #0x50
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x16CFA, 0x2

_08016cfc:	.4byte 0x0200D1E0
_08016d00:	.4byte 0x0200DA00
	thumb_func_end sub_08016cb0

	thumb_func_start sub_08016d04
sub_08016d04:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_08016c94
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08016d1c
	add		r0, r5, #0x0
	bl		sub_0808afac
_08016d1c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x16D22, 0x2
	thumb_func_end sub_08016d04

	thumb_func_start sub_08016d24
sub_08016d24:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08016c94
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08016d24

	thumb_func_start sub_08016d34
sub_08016d34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	ldr		r4, [sp, #0x4+0x18]
	add		r5, r3, #0x0
	ldr		r6, [sp, #0x0+0x18]
	bl		sub_0800f2c8
	add		r7, r0, #0x0
	bl		sub_0800f288
	add		r1, r0, #0x0
	mov		r0, #0xf
	and		r0, r4
	cmp		r0, #0x1
	beq		_08016d64
	cmp		r0, #0x1
	ble		_08016d70
	cmp		r0, #0x2
	beq		_08016d68
	b		_08016d70
_08016d64:
	sub		r5, r5, r1
	b		_08016d70
_08016d68:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r5, r5, r0
_08016d70:
	mov		r0, #0xf0
	and		r0, r4
	cmp		r0, #0x10
	beq		_08016d8e
	cmp		r0, #0x10
	bgt		_08016d82
	cmp		r0, #0x0
	beq		_08016d88
	b		_08016d8e
_08016d82:
	cmp		r0, #0x20
	beq		_08016d8c
	b		_08016d8e
_08016d88:
	add		r6, #0xc
	b		_08016d8e
_08016d8c:
	add		r6, #0x6
_08016d8e:
	ldr		r4, _08016dc8
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0800ed80
	ldrb	r2, [r7, #0x0]
	add		r1, r7, #0x1
	strh	r5, [r0, #0x28]
	strh	r6, [r0, #0x2a]
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0800ed80
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	ldrh	r1, [r2, #0x1c]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x1c]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08016dc8:	.4byte 0x0200AA18
	thumb_func_end sub_08016d34

	thumb_func_start sub_08016dcc
sub_08016dcc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	str		r2, [sp, #0x8]
	mov		r9, r3
	ldr		r4, _08016e38
	add		r0, r4, #0x0
	ldr		r1, [sp, #0x0]
	bl		sub_0800ed80
	add		r1, r0, #0x0
	add		r1, #0x27
	ldrb	r0, [r1, #0x0]
	mov		r2, #0xc
	str		r2, [sp, #0xc]
	cmp		r0, #0x0
	beq		_08016dfc
	ldrb	r1, [r1, #0x0]
	str		r1, [sp, #0xc]
_08016dfc:
	ldr		r0, [sp, #0x4]
	bl		sub_0801798c
	mov		r10, r0
	mov		r7, #0x0
	cmp		r7, r10
	bge		_08016e88
	mov		r0, #0xf
	ldr		r1, [sp, #0x30]
	and		r1, r0
	mov		r8, r1
_08016e12:
	ldr		r4, [sp, #0x8]
	mov		r5, r9
	ldr		r0, [sp, #0x4]
	add		r1, r7, #0x0
	bl		sub_0800f2c8
	add		r6, r0, #0x0
	bl		sub_0800f288
	add		r1, r0, #0x0
	mov		r2, r8
	cmp		r2, #0x1
	beq		_08016e3c
	cmp		r2, #0x1
	ble		_08016e48
	cmp		r2, #0x2
	beq		_08016e40
	b		_08016e48

.incbin "base.gba", 0x16E36, 0x2

_08016e38:	.4byte 0x0200AA18

_08016e3c:
	sub		r4, r4, r1
	b		_08016e48
_08016e40:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r4, r4, r0
_08016e48:
	ldr		r0, [sp, #0x30]
	mov		r1, #0xf0
	and		r0, r1
	cmp		r0, #0x10
	beq		_08016e68
	cmp		r0, #0x10
	bgt		_08016e5c
	cmp		r0, #0x0
	beq		_08016e62
	b		_08016e68
_08016e5c:
	cmp		r0, #0x20
	beq		_08016e66
	b		_08016e68
_08016e62:
	add		r5, #0xc
	b		_08016e68
_08016e66:
	add		r5, #0x6
_08016e68:
	ldr		r0, _08016e98
	ldr		r1, [sp, #0x0]
	bl		sub_0800ed80
	ldrb	r2, [r6, #0x0]
	add		r1, r6, #0x1
	strh	r4, [r0, #0x28]
	strh	r5, [r0, #0x2a]
	mov		r3, #0x0
	bl		sub_0800f18c
	ldr		r2, [sp, #0xc]
	add		r9, r2
	add		r7, #0x1
	cmp		r7, r10
	blt		_08016e12
_08016e88:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08016e98:	.4byte 0x0200AA18
	thumb_func_end sub_08016dcc

	thumb_func_start sub_08016e9c
sub_08016e9c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	ldr		r6, [sp, #0x0+0x20]
	ldr		r7, [sp, #0x4+0x20]
	ldr		r0, _08016ef4
	mov		r1, r9
	bl		sub_0800ed80
	add		r3, r0, #0x0
	add		r3, #0x18
	lsl		r4, r4, #0x1
	add		r4, #0x2
	add		r5, r5, r4
	mov		r1, r8
	lsl		r0, r1, #0x1
	add		r4, r5, r0
	cmp		r5, r4
	bcs		_08016f34
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	str		r3, [sp, #0x0]
	bl		sub_0808f1a8
	add		r1, r0, #0x0
	mov		r0, #0xf
	ldr		r2, [sp, #0x8+0x20]
	and		r0, r2
	ldr		r3, [sp, #0x0]
	cmp		r0, #0x1
	beq		_08016ef8
	cmp		r0, #0x1
	ble		_08016f04
	cmp		r0, #0x2
	beq		_08016efc
	b		_08016f04

.incbin "base.gba", 0x16EF2, 0x2

_08016ef4:	.4byte 0x0200AA18

_08016ef8:
	sub		r6, r6, r1
	b		_08016f04
_08016efc:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r6, r6, r0
_08016f04:
	mov		r0, #0xf0
	ldr		r1, [sp, #0x8+0x20]
	and		r0, r1
	cmp		r0, #0x10
	beq		_08016f24
	cmp		r0, #0x10
	bgt		_08016f18
	cmp		r0, #0x0
	beq		_08016f1e
	b		_08016f24
_08016f18:
	cmp		r0, #0x20
	beq		_08016f22
	b		_08016f24
_08016f1e:
	add		r7, #0xc
	b		_08016f24
_08016f22:
	add		r7, #0x6
_08016f24:
	strh	r6, [r3, #0x10]
	strh	r7, [r3, #0x12]
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	mov		r3, r8
	bl		sub_0808f35c
_08016f34:
	ldr		r0, _08016f5c
	mov		r1, r9
	bl		sub_0800ed80
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	ldrh	r1, [r2, #0x1c]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x1c]
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x16F5A, 0x2

_08016f5c:	.4byte 0x0200AA18
	thumb_func_end sub_08016e9c

	thumb_func_start sub_08016f60
sub_08016f60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	ldr		r7, [sp, #0x0+0x18]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	ldr		r1, _08016f9c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	add		r4, r2, #0x0
	add		r5, r3, #0x0
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r6, r0, #0x0
	bl		sub_0800f288
	add		r1, r0, #0x0
	mov		r0, #0xf
	and		r0, r7
	cmp		r0, #0x1
	beq		_08016fa0
	cmp		r0, #0x1
	ble		_08016fac
	cmp		r0, #0x2
	beq		_08016fa4
	b		_08016fac

_08016f9c:	.4byte 0x080d136c

_08016fa0:
	sub		r4, r4, r1
	b		_08016fac
_08016fa4:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r4, r4, r0
_08016fac:
	mov		r0, #0xf0
	and		r0, r7
	cmp		r0, #0x10
	beq		_08016fca
	cmp		r0, #0x10
	bgt		_08016fbe
	cmp		r0, #0x0
	beq		_08016fc4
	b		_08016fca
_08016fbe:
	cmp		r0, #0x20
	beq		_08016fc8
	b		_08016fca
_08016fc4:
	add		r5, #0xc
	b		_08016fca
_08016fc8:
	add		r5, #0x6
_08016fca:
	ldr		r0, _08016fec
	mov		r1, r8
	bl		sub_0800ed80
	ldrb	r2, [r6, #0x0]
	add		r1, r6, #0x1
	strh	r4, [r0, #0x28]
	strh	r5, [r0, #0x2a]
	mov		r3, #0x0
	bl		sub_0800f18c
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x16FEA, 0x2

_08016fec:	.4byte 0x0200AA18
	thumb_func_end sub_08016f60

	thumb_func_start sub_08016ff0
sub_08016ff0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	ldr		r4, [sp, #0x0+0x18]
	ldr		r0, _08017028
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r7, r0, #0x0
	bl		sub_0800f288
	add		r1, r0, #0x0
	mov		r0, #0xf
	and		r0, r4
	cmp		r0, #0x1
	beq		_0801702c
	cmp		r0, #0x1
	ble		_08017038
	cmp		r0, #0x2
	beq		_08017030
	b		_08017038

_08017028:	.4byte 0x0200D1EC

_0801702c:
	sub		r5, r5, r1
	b		_08017038
_08017030:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r5, r5, r0
_08017038:
	mov		r0, #0xf0
	and		r0, r4
	cmp		r0, #0x10
	beq		_08017056
	cmp		r0, #0x10
	bgt		_0801704a
	cmp		r0, #0x0
	beq		_08017050
	b		_08017056
_0801704a:
	cmp		r0, #0x20
	beq		_08017054
	b		_08017056
_08017050:
	add		r6, #0xc
	b		_08017056
_08017054:
	add		r6, #0x6
_08017056:
	ldr		r4, _08017090
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0800ed80
	ldrb	r2, [r7, #0x0]
	add		r1, r7, #0x1
	strh	r5, [r0, #0x28]
	strh	r6, [r0, #0x2a]
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0800ed80
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	ldrh	r1, [r2, #0x1c]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x1c]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08017090:	.4byte 0x0200AA18
	thumb_func_end sub_08016ff0

	thumb_func_start sub_08017094 @ Format score??
sub_08017094:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c4
	str		r0, [sp, #0x1BC]
	mov		r8, r1
	mov		r9, r2
	str		r3, [sp, #0x1C0]
	mov		r6, #0x0
	add		r4, sp, #0xd0
	ldr		r0, _080170d4
	ldrb	r0, [r0, #0x0]
	strb	r0, [r4, #0x0]
	mov		r0, sp
	add		r0, #0xd1
	mov		r1, #0x0
	mov		r2, #0x1f
	bl		sub_0808c828
	add		r0, sp, #0xf0
	mov		r10, r0
	add		r5, sp, #0x134
	ldr		r0, _080170d8
	bl		sub_0800227c
	add		r7, r4, #0x0
	cmp		r0, #0x0
	beq		_080170e0
	ldr		r0, _080170dc
	b		_080170e2

_080170d4:	.4byte 0x080d11b0
_080170d8:	.4byte 0x00000836
_080170dc:	.4byte 0x080d11b4 @ %d'%02d\"%02d                                                      @

_080170e0:
	ldr		r0, _080170f4
_080170e2:
	str		r0, [r5, #0x0]                            @
	add		r4, sp, #0x138
	ldr		r0, _080170f8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017100
	ldr		r0, _080170fc
	b		_08017102

_080170f4:	.4byte 0x080d11c4 @ %d:%02d.%02d
_080170f8:	.4byte 0x00000836
_080170fc:	.4byte 0x080d11d4 @ %d,%02d

_08017100:
	ldr		r0, _08017114
_08017102:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x13c
	ldr		r0, _08017118
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017120
	ldr		r0, _0801711c
	b		_08017122

_08017114:	.4byte 0x080d11dc @ %d.%02d
_08017118:	.4byte 0x00000836
_0801711c:	.4byte 0x080d11d4 @ %d,%02d

_08017120:
	ldr		r0, _08017134
_08017122:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x140
	ldr		r0, _08017138
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017140
	ldr		r0, _0801713c
	b		_08017142

_08017134:	.4byte 0x080d11dc @ %d.%02d
_08017138:	.4byte 0x00000836
_0801713c:	.4byte 0x080d11d4 @ %d,%02d

_08017140:
	ldr		r0, _08017154
_08017142:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x144
	ldr		r0, _08017158
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017160
	ldr		r0, _0801715c                                           @
	b		_08017162

_08017154:	.4byte 0x080d11dc @ %d.%02d
_08017158:	.4byte 0x00000836
_0801715c:	.4byte 0x080d11b4 @ %d'%02d%02d                                                         @

_08017160:
	ldr		r0, _08017174
_08017162:
	str		r0, [r4, #0x0]                            @
	add		r4, sp, #0x148
	ldr		r0, _08017178
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017180
	ldr		r0, _0801717c
	b		_08017182

_08017174:	.4byte 0x080d11c4 @ %d:%02d.%02d
_08017178:	.4byte 0x00000836
_0801717c:	.4byte 0x080d11d4 @ %d,%02d

_08017180:
	ldr		r0, _08017194
_08017182:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x14c
	ldr		r0, _08017198
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080171a0
	ldr		r0, _0801719c
	b		_080171a2

_08017194:	.4byte 0x080d11dc @ %d.%02d
_08017198:	.4byte 0x00000836
_0801719c:	.4byte 0x080d11e4 @ %d,%03d

_080171a0:
	ldr		r0, _080171b4
_080171a2:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x150
	ldr		r0, _080171b8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080171c0
	ldr		r0, _080171bc                                           @
	b		_080171c2

_080171b4:	.4byte 0x080d11ec @ %d.%03d
_080171b8:	.4byte 0x00000836
_080171bc:	.4byte 0x080d11b4 @ %d'%02d%02d                                                         @

_080171c0:
	ldr		r0, _080171e0
_080171c2:
	str		r0, [r4, #0x0]                            @
	add		r0, sp, #0x154
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, sp, #0x158
	str		r1, [r0, #0x0]
	add		r4, sp, #0x15c
	ldr		r0, _080171e4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080171ec
	ldr		r0, _080171e8
	b		_080171ee

.incbin "base.gba", 0x171DE, 0x2

_080171e0:	.4byte 0x080d11c4 @ %d:%02d.%02d
_080171e4:	.4byte 0x00000836
_080171e8:	.4byte 0x080d11d4 @ %d,%02d

_080171ec:
	ldr		r0, _0801720c
_080171ee:
	str		r0, [r4, #0x0]
	add		r0, sp, #0x160
	ldr		r1, _08017210
	str		r1, [r0, #0x0]
	add		r0, sp, #0x164
	str		r1, [r0, #0x0]
	add		r4, sp, #0x168
	ldr		r0, _08017214
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801721c
	ldr		r0, _08017218                                           @
	b		_0801721e

.incbin "base.gba", 0x1720A, 0x2

_0801720c:	.4byte 0x080d11dc @ %d.%02d
_08017210:	.4byte 0x080d11f4
_08017214:	.4byte 0x00000836
_08017218:	.4byte 0x080d11b4 @ %d'%02d%02d                                                         @

_0801721c:
	ldr		r0, _08017250
_0801721e:
	str		r0, [r4, #0x0]                            @
	add		r0, sp, #0x16c
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, sp, #0x170
	str		r1, [r0, #0x0]
	add		r1, sp, #0x174
	ldr		r0, _08017254
	str		r0, [r1, #0x0]
	add		r4, sp, #0x134
	mov		r0, r10
	add		r1, r4, #0x0
	mov		r2, #0x44
	bl		sub_0808c818
	add		r5, r4, #0x0
	add		r4, sp, #0x178
	ldr		r0, _08017258
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017260
	ldr		r0, _0801725c                                                @
	b		_08017262

.incbin "base.gba", 0x1724E, 0x2

_08017250:	.4byte 0x080d11c4 @ %d:%02d.%02d
_08017254:	.4byte 0x080d11f8 @ %d:%02d:%02d 
_08017258:	.4byte 0x00000836
_0801725c:	.4byte 0x080d1208 @ -'----                                                              @

_08017260:
	ldr		r0, _08017274
_08017262:
	str		r0, [r4, #0x0]                                 @
	add		r4, sp, #0x17c
	ldr		r0, _08017278
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017280
	ldr		r0, _0801727c
	b		_08017282

_08017274:	.4byte 0x080d1210 @ -:--.--
_08017278:	.4byte 0x00000836
_0801727c:	.4byte 0x080d1218

_08017280:
	ldr		r0, _08017294
_08017282:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x180
	ldr		r0, _08017298
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080172a0
	ldr		r0, _0801729c
	b		_080172a2

_08017294:	.4byte 0x080d1220
_08017298:	.4byte 0x00000836
_0801729c:	.4byte 0x080d1228 @ --,--

_080172a0:
	ldr		r0, _080172b4
_080172a2:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x184
	ldr		r0, _080172b8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080172c0
	ldr		r0, _080172bc
	b		_080172c2

_080172b4:	.4byte 0x080d1230 @ --.--
_080172b8:	.4byte 0x00000836
_080172bc:	.4byte 0x080d1228 @ --,--

_080172c0:
	ldr		r0, _080172d4
_080172c2:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x188
	ldr		r0, _080172d8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080172e0
	ldr		r0, _080172dc                                                @
	b		_080172e2

_080172d4:	.4byte 0x080d1230 @ --.--
_080172d8:	.4byte 0x00000836
_080172dc:	.4byte 0x080d1208 @ -'----                                                              @

_080172e0:
	ldr		r0, _080172f4
_080172e2:
	str		r0, [r4, #0x0]                                 @
	add		r4, sp, #0x18c
	ldr		r0, _080172f8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017300
	ldr		r0, _080172fc
	b		_08017302

_080172f4:	.4byte 0x080d1210 @ -:--.--
_080172f8:	.4byte 0x00000836
_080172fc:	.4byte 0x080d1238 @ ---,--

_08017300:
	ldr		r0, _08017314
_08017302:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x190
	ldr		r0, _08017318
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017320
	ldr		r0, _0801731c
	b		_08017322

_08017314:	.4byte 0x080d1240 @ ---.--
_08017318:	.4byte 0x00000836
_0801731c:	.4byte 0x080d1248 @ ---,---

_08017320:
	ldr		r0, _08017334
_08017322:
	str		r0, [r4, #0x0]
	add		r4, sp, #0x194
	ldr		r0, _08017338
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08017340
	ldr		r0, _0801733c                                                @
	b		_08017342

_08017334:	.4byte 0x080d1250 @ ---.---
_08017338:	.4byte 0x00000836
_0801733c:	.4byte 0x080d1208 @ -'----                                                              @

_08017340:
	ldr		r0, _08017360
_08017342:
	str		r0, [r4, #0x0]                                 @
	add		r0, sp, #0x198
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, sp, #0x19c
	str		r1, [r0, #0x0]
	add		r4, sp, #0x1a0
	ldr		r0, _08017364
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801736c
	ldr		r0, _08017368
	b		_0801736e

.incbin "base.gba", 0x1735E, 0x2

_08017360:	.4byte 0x080d1210 @ -:--.--
_08017364:	.4byte 0x00000836
_08017368:	.4byte 0x080d1228 @ --,--

_0801736c:
	ldr		r0, _0801738c
_0801736e:
	str		r0, [r4, #0x0]
	add		r1, sp, #0x1a4
	ldr		r0, _08017390
	str		r0, [r1, #0x0]
	add		r1, sp, #0x1a8
	ldr		r0, _08017394
	str		r0, [r1, #0x0]
	add		r4, sp, #0x1ac
	ldr		r0, _08017398
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080173a0
	ldr		r0, _0801739c                                                @
	b		_080173a2

_0801738c:	.4byte 0x080d1230 @ --.--
_08017390:	.4byte 0x080d1258
_08017394:	.4byte 0x080d125c
_08017398:	.4byte 0x00000836
_0801739c:	.4byte 0x080d1208 @ -'----                                                              @

_080173a0:
	ldr		r0, _080174e4
_080173a2:
	str		r0, [r4, #0x0]                                 @
	add		r0, sp, #0x1b0
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r0, sp, #0x1b4
	str		r4, [r0, #0x0]
	add		r1, sp, #0x1b8
	ldr		r0, _080174e8
	str		r0, [r1, #0x0]
	add		r1, sp, #0x178
	add		r0, r5, #0x0
	mov		r2, #0x44
	bl		sub_0808c818
	ldr		r2, _080174ec
	str		r2, [sp, #0x14]
	add		r0, r2, #0x0
	add		r0, #0x20
	str		r0, [sp, #0x4]
	add		r0, #0x20
	str		r0, [sp, #0x44]
	add		r0, #0x40
	str		r0, [sp, #0x38]
	add		r0, #0x20
	str		r0, [sp, #0x20]
	add		r0, #0x30
	str		r0, [sp, #0x10]
	add		r0, #0x20
	str		r0, [sp, #0x8]
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	str		r0, [sp, #0xC]
	mov		r3, #0x98
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	str		r0, [sp, #0x18]
	mov		r5, #0xc8
	lsl		r5, r5, #0x1
	add		r0, r2, r5
	str		r0, [sp, #0x2C]
	add		r1, #0x40
	add		r0, r2, r1
	str		r0, [sp, #0x30]
	add		r3, #0x40
	add		r0, r2, r3
	str		r0, [sp, #0x34]
	add		r5, #0x20
	add		r0, r2, r5
	str		r0, [sp, #0x1C]
	str		r4, [sp, #0x24]
	str		r4, [sp, #0x28]
	str		r4, [sp, #0x3C]
	str		r4, [sp, #0x40]
	add		r0, sp, #0x48
	mov		r10, r0
	add		r1, #0xd0
	add		r0, r2, r1
	str		r0, [sp, #0x58]
	add		r3, #0xb8
	add		r0, r2, r3
	str		r0, [sp, #0x48]
	add		r1, sp, #0x88
	add		r5, #0x80
	add		r0, r2, r5
	str		r0, [r1, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r0, r2, r1
	str		r0, [sp, #0x7C]
	add		r3, #0x18
	add		r0, r2, r3
	str		r0, [sp, #0x64]
	add		r5, #0x1c
	add		r0, r2, r5
	str		r0, [sp, #0x54]
	add		r1, #0x1c
	add		r0, r2, r1
	str		r0, [sp, #0x4C]
	add		r3, #0x1c
	add		r0, r2, r3
	str		r0, [sp, #0x50]
	add		r5, #0x18
	add		r0, r2, r5
	str		r0, [sp, #0x5C]
	add		r1, #0x28
	add		r0, r2, r1
	str		r0, [sp, #0x70]
	add		r3, #0x10
	add		r0, r2, r3
	str		r0, [sp, #0x74]
	add		r5, #0x10
	add		r0, r2, r5
	str		r0, [sp, #0x78]
	add		r1, #0x8
	add		r0, r2, r1
	str		r0, [sp, #0x60]
	str		r4, [sp, #0x68]
	str		r4, [sp, #0x6C]
	str		r4, [sp, #0x80]
	add		r0, sp, #0x84
	str		r4, [r0, #0x0]
	add		r3, sp, #0x8c
	add		r1, sp, #0x9c
	add		r5, #0x2c
	add		r0, r2, r5
	str		r0, [r1, #0x0]
	mov		r1, #0xa9
	lsl		r1, r1, #0x2
	add		r0, r2, r1
	str		r0, [r3, #0x0]
	add		r1, sp, #0xcc
	add		r5, #0x8
	add		r0, r2, r5
	str		r0, [r1, #0x0]
	add		r0, sp, #0xc0
	str		r4, [r0, #0x0]
	add		r1, sp, #0xa8
	add		r5, #0x4
	add		r0, r2, r5
	str		r0, [r1, #0x0]
	add		r1, sp, #0x98
	add		r5, #0x4
	add		r0, r2, r5
	str		r0, [r1, #0x0]
	add		r1, sp, #0x90
	add		r5, #0x4
	add		r0, r2, r5
	str		r0, [r1, #0x0]
	add		r1, sp, #0x94
	add		r5, #0x4
	add		r0, r2, r5
	str		r0, [r1, #0x0]
	add		r0, sp, #0xa0
	str		r4, [r0, #0x0]
	add		r0, sp, #0xb4
	str		r4, [r0, #0x0]
	add		r1, sp, #0xb8
	add		r5, #0x4
	add		r0, r2, r5
	str		r0, [r1, #0x0]
	add		r0, sp, #0xbc
	str		r4, [r0, #0x0]
	add		r0, sp, #0xa4
	str		r4, [r0, #0x0]
	add		r0, sp, #0xac
	str		r4, [r0, #0x0]
	add		r0, sp, #0xb0
	str		r4, [r0, #0x0]
	add		r0, sp, #0xc4
	str		r4, [r0, #0x0]
	add		r0, sp, #0xc8
	str		r4, [r0, #0x0]
	mov		r0, r9
	cmp		r0, #0x1
	beq		_08017514
	cmp		r0, #0x1
	bgt		_080174f0
	cmp		r0, #0x0
	beq		_080174f8
	b		_08017538

_080174e4:	.4byte 0x080d1210 @ -:--.--
_080174e8:	.4byte 0x080d1260 @ -:--:--
_080174ec:	.4byte 0x02000C9C

_080174f0:
	mov		r1, r9
	cmp		r1, #0x2
	beq		_0801752a
	b		_08017538
_080174f8:
	mov		r2, r8
	lsl		r0, r2, #0x2
	mov		r1, sp
	add		r1, r1, r0
	add		r1, #0x4
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08017538
	ldrb	r0, [r0, #0x5]
	cmp		r0, #0x4
	beq		_08017538
	cmp		r0, #0x5
	beq		_08017538
	b		_08017536
_08017514:
	mov		r3, r8
	lsl		r0, r3, #0x2
	mov		r4, r10
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08017538
	ldrb	r0, [r0, #0x5]
	cmp		r0, #0x4
	beq		_08017538
	b		_08017536
_0801752a:
	mov		r5, r8
	lsl		r0, r5, #0x2
	add		r1, r3, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08017538
_08017536:
	add		r6, r1, #0x0
_08017538:
	mov		r0, r8
	cmp		r0, #0x10
	bhi		_08017620
	lsl		r0, r0, #0x2
	ldr		r1, _0801754c
	add		r1, r0, r1
	ldr		r1, [r1, #0x0]
	add		r2, r0, #0x0
	mov		pc, r1

.incbin "base.gba", 0x1754A, 0x2

_0801754c:	.4byte 0x08017550
_08017550:	.4byte 0x08017594

.incbin "base.gba", 0x17554, 0x40

_08017594:
.incbin "base.gba", 0x17594, 0x4
.incbin "base.gba", 0x17598, 0x4
.incbin "base.gba", 0x1759C, 0x4
.incbin "base.gba", 0x175A0, 0x4
.incbin "base.gba", 0x175A4, 0x4
.incbin "base.gba", 0x175A8, 0x4
.incbin "base.gba", 0x175AC, 0x4
.incbin "base.gba", 0x175B0, 0x4
.incbin "base.gba", 0x175B4, 0x4
.incbin "base.gba", 0x175B8, 0x4
.incbin "base.gba", 0x175BC, 0x4
.incbin "base.gba", 0x175C0, 0x4
.incbin "base.gba", 0x175C4, 0x4

.incbin "base.gba", 0x175C8, 0x2
_080175ca:
.incbin "base.gba", 0x175CA, 0x4
.incbin "base.gba", 0x175CE, 0x4
.incbin "base.gba", 0x175D2, 0x4
.incbin "base.gba", 0x175D6, 0x4
.incbin "base.gba", 0x175DA, 0x4
.incbin "base.gba", 0x175DE, 0x4
.incbin "base.gba", 0x175E2, 0x4
.incbin "base.gba", 0x175E6, 0x4
_080175ea:
.incbin "base.gba", 0x175EA, 0x4
_080175ee:
.incbin "base.gba", 0x175EE, 0x4
.incbin "base.gba", 0x175F2, 0x4
_080175f6:
.incbin "base.gba", 0x175F6, 0x4
.incbin "base.gba", 0x175FA, 0x4
.incbin "base.gba", 0x175FE, 0x4
.incbin "base.gba", 0x17602, 0x4
.incbin "base.gba", 0x17606, 0x4
.incbin "base.gba", 0x1760A, 0x4
.incbin "base.gba", 0x1760E, 0x4

.incbin "base.gba", 0x17612, 0xE
_08017620:
	ldr		r6, [sp, #0x1C0]
	ldr		r7, [sp, #0x0+0x1e4]
	ldr		r0, _08017668
	ldr		r1, [sp, #0x1BC]
	bl		sub_0800ed80
	add		r4, r0, #0x0
	mov		r5, #0x18
	add		r5, r5, r4
	mov		r8, r5
	add		r5, r4, #0x0
	add		r5, #0x30
	add		r0, r5, #0x0
	add		r1, sp, #0xd0
	bl		sub_0808ed5c
	add		r4, #0x32
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	mov		r0, r8
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808f1a8
	add		r1, r0, #0x0
	mov		r0, #0xf
	ldr		r2, [sp, #0x4+0x1e4]
	and		r0, r2
	cmp		r0, #0x1
	beq		_0801766c
	cmp		r0, #0x1
	ble		_08017678
	cmp		r0, #0x2
	beq		_08017670
	b		_08017678

_08017668:	.4byte 0x0200AA18

_0801766c:
	sub		r6, r6, r1
	b		_08017678
_08017670:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r6, r6, r0
_08017678:
	mov		r0, #0xf0
	ldr		r3, [sp, #0x4+0x1e4]
	and		r0, r3
	cmp		r0, #0x10
	beq		_08017698
	cmp		r0, #0x10
	bgt		_0801768c
	cmp		r0, #0x0
	beq		_08017692
	b		_08017698
_0801768c:
	cmp		r0, #0x20
	beq		_08017696
	b		_08017698
_08017692:
	add		r7, #0xc
	b		_08017698
_08017696:
	add		r7, #0x6
_08017698:
	mov		r0, r8
	strh	r6, [r0, #0x10]
	strh	r7, [r0, #0x12]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	add		sp, #0x1c4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08017094

	thumb_func_start sub_080176b8
sub_080176b8:
	push	{ r4, lr }
	ldr		r4, _08017794
	ldr		r0, _08017798
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801779c
	ldr		r0, _080177a0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177a4
	ldr		r0, _080177a8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177ac
	ldr		r0, _080177b0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177b4
	ldr		r0, _080177b8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177bc
	ldr		r0, _080177c0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177c4
	ldr		r0, _080177c8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177cc
	ldr		r0, _080177d0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177d4
	ldr		r0, _080177d8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177dc
	ldr		r0, _080177e0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177e4
	ldr		r0, _080177e8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177ec
	ldr		r0, _080177f0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177f4
	ldr		r0, _080177f8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080177fc
	ldr		r0, _08017800
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017804
	ldr		r0, _08017808
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801780c
	ldr		r0, _08017810
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017814
	ldr		r0, _08017818
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801781c
	ldr		r0, _08017820
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017824
	ldr		r0, _08017828
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801782c
	ldr		r0, _08017830
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017834
	ldr		r0, _08017838
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17792, 0x2

_08017794:	.4byte 0x0200B740
_08017798:	.4byte 0x080d1268 @ ms_K_num_0
_0801779c:	.4byte 0x0200B73C
_080177a0:	.4byte 0x080d1274 @ ms_K_num_1
_080177a4:	.4byte 0x0200B738
_080177a8:	.4byte 0x080d1280 @ ms_K_num_2
_080177ac:	.4byte 0x0200B734
_080177b0:	.4byte 0x080d128c @ ms_K_num_3
_080177b4:	.4byte 0x0200B730
_080177b8:	.4byte 0x080d1298 @ ms_K_num_4
_080177bc:	.4byte 0x0200B72C
_080177c0:	.4byte 0x080d12a4 @ ms_K_num_5
_080177c4:	.4byte 0x0200B728
_080177c8:	.4byte 0x080d12b0 @ ms_K_num_6
_080177cc:	.4byte 0x0200B724
_080177d0:	.4byte 0x080d12bc @ ms_K_num_7
_080177d4:	.4byte 0x0200B720
_080177d8:	.4byte 0x080d12c8 @ ms_K_num_8
_080177dc:	.4byte 0x0200B71C
_080177e0:	.4byte 0x080d12d4 @ ms_K_num_9
_080177e4:	.4byte 0x0200B718
_080177e8:	.4byte 0x080d12e0 @ ms_K_num_hyphen
_080177ec:	.4byte 0x0200B714
_080177f0:	.4byte 0x080d12f0 @ ms_K_num_slash
_080177f4:	.4byte 0x0200B710
_080177f8:	.4byte 0x080d1300 @ ms_K_num_colon
_080177fc:	.4byte 0x0200B70C
_08017800:	.4byte 0x080d1310 @ ms_K_period
_08017804:	.4byte 0x0200B708
_08017808:	.4byte 0x080d131c @ ms_K_yes
_0801780c:	.4byte 0x0200B704
_08017810:	.4byte 0x080d1328 @ ms_K_no
_08017814:	.4byte 0x0200B700
_08017818:	.4byte 0x080d1330 @ ms_ta_0108
_0801781c:	.4byte 0x0200B6FC
_08017820:	.4byte 0x080d133c @ ms_ta_0109
_08017824:	.4byte 0x0200B6F8
_08017828:	.4byte 0x080d1348 @ ms_ta_0110
_0801782c:	.4byte 0x0200B6F4
_08017830:	.4byte 0x080d1354 @ ms_ta_0111
_08017834:	.4byte 0x0200B6F0
_08017838:	.4byte 0x080d1360 @ ms_ta_0911
	thumb_func_end sub_080176b8

	thumb_func_start sub_0801783c
sub_0801783c:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _08017854
	add		r1, r2, #0x0
	bl		sub_0800ed80
	strh	r4, [r0, #0x2c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17852, 0x2

_08017854:	.4byte 0x0200AA18
	thumb_func_end sub_0801783c

	thumb_func_start sub_08017858
sub_08017858:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	ldr		r7, [sp, #0x18]
	ldr		r0, _08017890
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r4, r2, #0x0
	add		r5, r3, #0x0
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r6, r0, #0x0
	bl		sub_0800f288
	add		r1, r0, #0x0
	mov		r0, #0xf
	and		r0, r7
	cmp		r0, #0x1
	beq		_08017894
	cmp		r0, #0x1
	ble		_080178a0
	cmp		r0, #0x2
	beq		_08017898
	b		_080178a0

_08017890:	.4byte 0x0200D1EC

_08017894:
	sub		r4, r4, r1
	b		_080178a0
_08017898:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r4, r4, r0
_080178a0:
	mov		r0, #0xf0
	and		r0, r7
	cmp		r0, #0x10
	beq		_080178be
	cmp		r0, #0x10
	bgt		_080178b2
	cmp		r0, #0x0
	beq		_080178b8
	b		_080178be
_080178b2:
	cmp		r0, #0x20
	beq		_080178bc
	b		_080178be
_080178b8:
	add		r5, #0xc
	b		_080178be
_080178bc:
	add		r5, #0x6
_080178be:
	ldr		r0, _080178e0
	mov		r1, r8
	bl		sub_0800ed80
	ldrb	r2, [r6, #0x0]
	add		r1, r6, #0x1
	strh	r4, [r0, #0x28]
	strh	r5, [r0, #0x2a]
	mov		r3, #0x0
	bl		sub_0800f18c
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x178DE, 0x2

_080178e0:	.4byte 0x0200AA18
	thumb_func_end sub_08017858

	thumb_func_start sub_080178e4
sub_080178e4:
	push	{ r4, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, [sp, #0xc]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	bl		sub_08016f60
	ldr		r0, _08017914
	add		r1, r4, #0x0
	bl		sub_0800ed80
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	ldrh	r1, [r2, #0x1c]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x1c]
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08017914:	.4byte 0x0200AA18
	thumb_func_end sub_080178e4

	thumb_func_start sub_08017918
sub_08017918:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r6, r0, #0x0
	mov		r8, r1
	add		r4, r2, #0x0
	add		r5, r3, #0x0
	ldr		r0, _08017954
	add		r1, r6, #0x0
	bl		sub_0800ed80
	add		r3, r0, #0x0
	add		r3, #0x18
	lsl		r4, r4, #0x1
	add		r4, #0x2
	mov		r0, r8
	add		r1, r0, r4
	lsl		r5, r5, #0x1
	add		r2, r1, r5
	mov		r0, #0x0
	cmp		r1, r2
	bcs		_0801794a
	add		r0, r3, #0x0
	bl		sub_0808f1a8
_0801794a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08017954:	.4byte 0x0200AA18
	thumb_func_end sub_08017918

	thumb_func_start sub_08017958
sub_08017958:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	bl		sub_0800d74c
	ldrb	r5, [r0, #0x0]
	mov		r6, #0x0
	mov		r4, #0x0
	cmp		r6, r5
	bge		_08017982
_0801796a:
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_0800f2c8
	bl		sub_0800f288
	cmp		r6, r0
	bge		_0801797c
	add		r6, r0, #0x0
_0801797c:
	add		r4, #0x1
	cmp		r4, r5
	blt		_0801796a
_08017982:
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1798A, 0x2
	thumb_func_end sub_08017958

	thumb_func_start sub_0801798c
sub_0801798c:
	push	{ lr }
	bl		sub_0800d74c
	ldrb	r0, [r0, #0x0]
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0801798c

	thumb_func_start sub_08017998
sub_08017998:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	mov		r8, r3
	ldr		r0, _080179ec
	add		r1, r4, #0x0
	bl		sub_0800ed80
	add		r4, r0, #0x0
	mov		r0, #0x18
	add		r0, r0, r4
	mov		r9, r0
	add		r5, r4, #0x0
	add		r5, #0x30
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_0808ed5c
	add		r4, #0x32
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	mov		r0, r9
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808f1a8
	add		r1, r0, #0x0
	mov		r0, #0xf
	ldr		r2, [sp, #0x0+0x1c]
	and		r0, r2
	cmp		r0, #0x1
	beq		_080179f0
	cmp		r0, #0x1
	ble		_080179fc
	cmp		r0, #0x2
	beq		_080179f4
	b		_080179fc

_080179ec:	.4byte 0x0200AA18

_080179f0:
	sub		r7, r7, r1
	b		_080179fc
_080179f4:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r7, r7, r0
_080179fc:
	mov		r0, #0xf0
	ldr		r1, [sp, #0x0+0x1c]
	and		r0, r1
	cmp		r0, #0x10
	beq		_08017a20
	cmp		r0, #0x10
	bgt		_08017a10
	cmp		r0, #0x0
	beq		_08017a16
	b		_08017a20
_08017a10:
	cmp		r0, #0x20
	beq		_08017a1c
	b		_08017a20
_08017a16:
	mov		r2, #0xc
	add		r8, r2
	b		_08017a20
_08017a1c:
	mov		r0, #0x6
	add		r8, r0
_08017a20:
	mov		r1, r9
	strh	r7, [r1, #0x10]
	mov		r2, r8
	strh	r2, [r1, #0x12]
	mov		r0, r9
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08017998

	thumb_func_start sub_08017a40
sub_08017a40:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r9, r3
	ldr		r7, [sp, #0x1c]
	ldr		r0, [sp, #0x20]
	mov		r8, r0
	ldr		r0, _08017a94
	add		r1, r5, #0x0
	bl		sub_0800ed80
	add		r5, r0, #0x0
	add		r5, #0x18
	lsl		r4, r4, #0x1
	add		r4, #0x2
	add		r6, r6, r4
	mov		r1, r9
	lsl		r0, r1, #0x1
	add		r4, r6, r0
	cmp		r6, r4
	bcs		_08017ada
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0808f1a8
	add		r1, r0, #0x0
	mov		r0, #0xf
	ldr		r2, [sp, #0x24]
	and		r0, r2
	cmp		r0, #0x1
	beq		_08017a98
	cmp		r0, #0x1
	ble		_08017aa4
	cmp		r0, #0x2
	beq		_08017a9c
	b		_08017aa4

.incbin "base.gba", 0x17A92, 0x2

_08017a94:	.4byte 0x0200AA18

_08017a98:
	sub		r7, r7, r1
	b		_08017aa4
_08017a9c:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r7, r7, r0
_08017aa4:
	mov		r0, #0xf0
	ldr		r1, [sp, #0x24]
	and		r0, r1
	cmp		r0, #0x10
	beq		_08017ac8
	cmp		r0, #0x10
	bgt		_08017ab8
	cmp		r0, #0x0
	beq		_08017abe
	b		_08017ac8
_08017ab8:
	cmp		r0, #0x20
	beq		_08017ac4
	b		_08017ac8
_08017abe:
	mov		r2, #0xc
	add		r8, r2
	b		_08017ac8
_08017ac4:
	mov		r0, #0x6
	add		r8, r0
_08017ac8:
	strh	r7, [r5, #0x10]
	mov		r1, r8
	strh	r1, [r5, #0x12]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	mov		r3, r9
	bl		sub_0808f35c
_08017ada:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17AE6, 0x2
	thumb_func_end sub_08017a40

	thumb_func_start sub_08017ae8
sub_08017ae8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	str		r0, [sp, #0x8]
	mov		r10, r1
	mov		r8, r2
	add		r5, r3, #0x0
	ldr		r6, [sp, #0x0+0x2c]
	mov		r0, r10
	bl		sub_0801798c
	mov		r9, r0
	mov		r0, r10
	bl		sub_08017958
	add		r1, r0, #0x0
	mov		r0, #0xf
	and		r0, r6
	cmp		r0, #0x1
	beq		_08017b20
	cmp		r0, #0x1
	ble		_08017b34
	cmp		r0, #0x2
	beq		_08017b28
	b		_08017b34
_08017b20:
	mov		r0, r8
	sub		r0, r0, r1
	mov		r8, r0
	b		_08017b34
_08017b28:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	mov		r1, r8
	sub		r1, r1, r0
	mov		r8, r1
_08017b34:
	mov		r0, #0x10
	neg		r0, r0
	and		r6, r0
	mov		r0, #0x3
	orr		r6, r0
	mov		r1, r9
	lsl		r0, r1, #0x1
	add		r0, r9
	lsl		r2, r0, #0x2
	mov		r0, #0xf0
	and		r0, r6
	cmp		r0, #0x10
	beq		_08017b62
	cmp		r0, #0x10
	bgt		_08017b58
	cmp		r0, #0x0
	beq		_08017b5e
	b		_08017b72
_08017b58:
	cmp		r0, #0x20
	beq		_08017b6a
	b		_08017b72
_08017b5e:
	add		r5, #0xc
	b		_08017b72
_08017b62:
	add		r0, r5, #0x0
	add		r0, #0xc
	sub		r5, r0, r2
	b		_08017b72
_08017b6a:
	add		r1, r5, #0x0
	add		r1, #0xc
	asr		r0, r2, #0x1
	sub		r5, r1, r0
_08017b72:
	mov		r0, #0xf1
	neg		r0, r0
	and		r6, r0
	mov		r0, #0x30
	orr		r6, r0
	ldr		r0, _08017bc0
	ldr		r1, [sp, #0x8]
	bl		sub_0800ed80
	add		r1, r0, #0x0
	add		r1, #0x27
	ldrb	r0, [r1, #0x0]
	mov		r7, #0xc
	cmp		r0, #0x0
	beq		_08017b92
	add		r7, r0, #0x0
_08017b92:
	mov		r4, #0x0
	cmp		r4, r9
	bge		_08017bb0
_08017b98:
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	ldr		r0, [sp, #0x8]
	mov		r1, r10
	add		r2, r4, #0x0
	mov		r3, r8
	bl		sub_08016d34
	add		r5, r5, r7
	add		r4, #0x1
	cmp		r4, r9
	blt		_08017b98
_08017bb0:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08017bc0:	.4byte 0x0200AA18
	thumb_func_end sub_08017ae8

	thumb_func_start sub_08017bc4
sub_08017bc4:
	push	{ r4, lr }
	sub		sp, #0x8
	add		r4, r2, #0x0
	ldr		r2, [sp, #0x0+0x10]
	str		r3, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r2, #0x0
	add		r3, r4, #0x0
	bl		sub_08016d34
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08017bc4

	thumb_func_start sub_08017be0
sub_08017be0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r0, r1, #0x0
	ldr		r7, [sp, #0x0+0x18]
	add		r4, r2, #0x0
	add		r5, r3, #0x0
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r6, r0, #0x0
	bl		sub_0800f288
	add		r1, r0, #0x0
	mov		r0, #0xf
	and		r0, r7
	cmp		r0, #0x1
	beq		_08017c10
	cmp		r0, #0x1
	ble		_08017c1c
	cmp		r0, #0x2
	beq		_08017c14
	b		_08017c1c
_08017c10:
	sub		r4, r4, r1
	b		_08017c1c
_08017c14:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r4, r4, r0
_08017c1c:
	mov		r0, #0xf0
	and		r0, r7
	cmp		r0, #0x10
	beq		_08017c3a
	cmp		r0, #0x10
	bgt		_08017c2e
	cmp		r0, #0x0
	beq		_08017c34
	b		_08017c3a
_08017c2e:
	cmp		r0, #0x20
	beq		_08017c38
	b		_08017c3a
_08017c34:
	add		r5, #0xc
	b		_08017c3a
_08017c38:
	add		r5, #0x6
_08017c3a:
	ldr		r0, _08017c5c
	mov		r1, r8
	bl		sub_0800ed80
	ldrb	r2, [r6, #0x0]
	add		r1, r6, #0x1
	strh	r4, [r0, #0x28]
	strh	r5, [r0, #0x2a]
	mov		r3, #0x0
	bl		sub_0800f18c
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17C5A, 0x2

_08017c5c:	.4byte 0x0200AA18
	thumb_func_end sub_08017be0

	thumb_func_start sub_08017c60
sub_08017c60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	add		r4, r3, #0x0
	ldr		r5, [sp, #0x0+0x18]
	ldr		r7, [sp, #0x4+0x18]
	bl		sub_0800f2c8
	add		r6, r0, #0x0
	bl		sub_0800f288
	add		r1, r0, #0x0
	mov		r0, #0xf
	and		r0, r7
	cmp		r0, #0x1
	beq		_08017c90
	cmp		r0, #0x1
	ble		_08017c9c
	cmp		r0, #0x2
	beq		_08017c94
	b		_08017c9c
_08017c90:
	sub		r4, r4, r1
	b		_08017c9c
_08017c94:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	sub		r4, r4, r0
_08017c9c:
	mov		r0, #0xf0
	and		r0, r7
	cmp		r0, #0x10
	beq		_08017cba
	cmp		r0, #0x10
	bgt		_08017cae
	cmp		r0, #0x0
	beq		_08017cb4
	b		_08017cba
_08017cae:
	cmp		r0, #0x20
	beq		_08017cb8
	b		_08017cba
_08017cb4:
	add		r5, #0xc
	b		_08017cba
_08017cb8:
	add		r5, #0x6
_08017cba:
	ldr		r0, _08017cdc
	mov		r1, r8
	bl		sub_0800ed80
	ldrb	r2, [r6, #0x0]
	add		r1, r6, #0x1
	strh	r4, [r0, #0x28]
	strh	r5, [r0, #0x2a]
	mov		r3, #0x0
	bl		sub_0800f18c
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17CDA, 0x2

_08017cdc:	.4byte 0x0200AA18
	thumb_func_end sub_08017c60

	thumb_func_start sub_08017ce0
sub_08017ce0:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08017cfc
	bl		sub_0800ed80
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	pop		{ r0 }
	bx		r0

_08017cfc:	.4byte 0x0200AA18
	thumb_func_end sub_08017ce0

	thumb_func_start sub_08017d00
sub_08017d00:
	mov		r3, #0x97
	lsl		r3, r3, #0x1
	add		r2, r0, r3
	strh	r1, [r2, #0x0]
	add		r0, #0xe4
	strh	r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x17D0E, 0x2
	thumb_func_end sub_08017d00

	thumb_func_start sub_08017d10
sub_08017d10:
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0x3
	mov		r0, #0x1
	bic		r0, r1
	bx		lr
	thumb_func_end sub_08017d10

	thumb_func_start sub_08017d20
sub_08017d20:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	bl		sub_0800bdbc
	add		r4, #0x88
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_0808e3c0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x17D3E, 0x22
	push	{ r4, lr }
	ldr		r4, _08017e3c
	ldr		r0, _08017e40
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e44
	ldr		r0, _08017e48
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e4c
	ldr		r0, _08017e50
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e54
	ldr		r0, _08017e58
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e5c
	ldr		r0, _08017e60
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e64
	ldr		r0, _08017e68
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e6c
	ldr		r0, _08017e70
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e74
	ldr		r0, _08017e78
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e7c
	ldr		r0, _08017e80
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e84
	ldr		r0, _08017e88
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e8c
	ldr		r0, _08017e90
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e94
	ldr		r0, _08017e98
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017e9c
	ldr		r0, _08017ea0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017ea4
	ldr		r0, _08017ea8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017eac
	ldr		r0, _08017eb0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017eb4
	ldr		r0, _08017eb8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017ebc
	ldr		r0, _08017ec0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017ec4
	ldr		r0, _08017ec8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017ecc
	ldr		r0, _08017ed0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017ed4
	ldr		r0, _08017ed8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08017edc
	ldr		r0, _08017ee0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17E3A, 0x2

_08017e3c:	.4byte 0x0200B794
_08017e40:	.4byte 0x080d16b4 @ ms_Gname_1
_08017e44:	.4byte 0x0200B790
_08017e48:	.4byte 0x080d16c0 @ ms_Gname_2
_08017e4c:	.4byte 0x0200B78C
_08017e50:	.4byte 0x080d16cc @ ms_Gname_3
_08017e54:	.4byte 0x0200B788
_08017e58:	.4byte 0x080d16d8 @ ms_Gname_4
_08017e5c:	.4byte 0x0200B784
_08017e60:	.4byte 0x080d16e4 @ ms_ta_0113
_08017e64:	.4byte 0x0200B780
_08017e68:	.4byte 0x080d16f0 @ ms_ta_0114
_08017e6c:	.4byte 0x0200B77C
_08017e70:	.4byte 0x080d16fc @ ms_ta_0115
_08017e74:	.4byte 0x0200B778
_08017e78:	.4byte 0x080d1708 @ ms_ta_0116
_08017e7c:	.4byte 0x0200B774
_08017e80:	.4byte 0x080d1714 @ ms_ta_0117
_08017e84:	.4byte 0x0200B770
_08017e88:	.4byte 0x080d1720 @ ms_ta_0118
_08017e8c:	.4byte 0x0200B76C
_08017e90:	.4byte 0x080d172c @ ms_ta_0119
_08017e94:	.4byte 0x0200B768
_08017e98:	.4byte 0x080d1738 @ ms_ta_0120
_08017e9c:	.4byte 0x0200B764
_08017ea0:	.4byte 0x080d1744 @ ms_ta_0121
_08017ea4:	.4byte 0x0200B760
_08017ea8:	.4byte 0x080d1750 @ ms_ta_0122
_08017eac:	.4byte 0x0200B75C
_08017eb0:	.4byte 0x080d175c @ ms_ta_0123
_08017eb4:	.4byte 0x0200B758
_08017eb8:	.4byte 0x080d1768 @ ms_ta_0124
_08017ebc:	.4byte 0x0200B754
_08017ec0:	.4byte 0x080d1774 @ ms_ta_0125
_08017ec4:	.4byte 0x0200B750
_08017ec8:	.4byte 0x080d1780 @ ms_ta_0126
_08017ecc:	.4byte 0x0200B74C
_08017ed0:	.4byte 0x080d178c @ ms_ta_0127
_08017ed4:	.4byte 0x0200B748
_08017ed8:	.4byte 0x080d1798 @ ms_ta_0145
_08017edc:	.4byte 0x0200B744
_08017ee0:	.4byte 0x080d17a4
	thumb_func_end sub_08017d20

	thumb_func_start sub_08017ee4
sub_08017ee4:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r3, #0x0
	mov		r5, #0x2d
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_08017f06
	ldr		r0, _08017f2c
	lsl		r1, r2, #0x2
	add		r1, r1, r2
	lsl		r1, r1, #0x3
	add		r1, r1, r0
	ldr		r0, [r1, #0xc]
	add		r5, r0, #0x0
	add		r5, #0x2d
_08017f06:
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_0800bdbc
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0800be04
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0800bdbc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17F2A, 0x2

_08017f2c:	.4byte 0x080d136c
	thumb_func_end sub_08017ee4

	thumb_func_start sub_08017f30
sub_08017f30:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	mov		r1, #0x1b
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_08017f50
	ldr		r0, _08017f6c
	lsl		r1, r2, #0x2
	add		r1, r1, r2
	lsl		r1, r1, #0x3
	add		r1, r1, r0
	ldr		r0, [r1, #0x8]
	add		r1, r0, #0x0
	add		r1, #0x1b
_08017f50:
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	add		r0, r4, #0x0
	bl		sub_0800be04
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800bdbc
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17F6A, 0x2

_08017f6c:	.4byte 0x080d136c
	thumb_func_end sub_08017f30

	thumb_func_start sub_08017f70
sub_08017f70:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	mov		r1, #0xb
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_08017f90
	ldr		r0, _08017fac
	lsl		r1, r2, #0x2
	add		r1, r1, r2
	lsl		r1, r1, #0x3
	add		r1, r1, r0
	ldr		r0, [r1, #0x8]
	add		r1, r0, #0x0
	add		r1, #0xb
_08017f90:
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	add		r0, r4, #0x0
	bl		sub_0800be04
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800bdbc
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x17FAA, 0x2

_08017fac:	.4byte 0x080d136c
	thumb_func_end sub_08017f70

	thumb_func_start sub_08017fb0
sub_08017fb0:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_08017fd0
	ldr		r0, _08017fd4
	lsl		r1, r2, #0x2
	add		r1, r1, r2
	lsl		r1, r1, #0x3
	add		r1, r1, r0
	ldr		r1, [r1, #0x4]
	add		r0, r3, #0x0
	bl		sub_0800bdbc
_08017fd0:
	pop		{ r0 }
	bx		r0

_08017fd4:	.4byte 0x080d136c
	thumb_func_end sub_08017fb0

	thumb_func_start sub_08017fd8
sub_08017fd8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0x42
	bl		sub_0808afb8
	add		r6, r0, #0x0
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r2, r0, #0x0
	add		r1, r2, #0x1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	add		r2, r2, r0
	add		r0, r6, #0x0
	bl		sub_0808ec54
	ldrb	r0, [r6, #0x1]
	cmp		r0, #0x10
	bls		_08018006
	mov		r0, #0x10
_08018006:
	strb	r0, [r5, #0x1]
	ldrb	r0, [r5, #0x1]
	lsl		r0, r0, #0x1
	strb	r0, [r5, #0x0]
	ldrb	r0, [r5, #0x0]
	sub		r1, r0, #0x1
	cmp		r1, #0x0
	blt		_08018036
	add		r3, r6, #0x2
	ldr		r4, _08018048
	lsl		r0, r1, #0x1
	add		r2, r0, r5
_0801801e:
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r3, r0
	ldrh	r0, [r0, #0x0]
	strh	r0, [r2, #0x2]
	strh	r4, [r2, #0x0]
	sub		r2, #0x4
	sub		r1, #0x2
	cmp		r1, #0x0
	bge		_0801801e
_08018036:
	add		r0, r6, #0x0
	bl		sub_0808afac
	add		r0, r5, #0x0
	bl		sub_08018280
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08018048:	.4byte 0x0000FF21
	thumb_func_end sub_08017fd8

	thumb_func_start sub_0801804c
sub_0801804c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r10, r0
	mov		r8, r1
	mov		r5, #0x0
	mov		r0, #0x62
	mov		r9, r0
_08018062:
	mov		r0, #0x42
	bl		sub_0808afb8
	add		r4, r0, #0x0
	mov		r0, r10
	add		r1, r5, #0x0
	bl		sub_0800f2c8
	add		r2, r0, #0x0
	add		r1, r2, #0x1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	add		r2, r2, r0
	add		r0, r4, #0x0
	bl		sub_0808ec54
	mov		r0, r9
	mul		r0, r5
	mov		r2, r8
	add		r1, r2, r0
	ldrb	r0, [r4, #0x1]
	cmp		r0, #0x18
	bls		_08018092
	mov		r0, #0x18
_08018092:
	strb	r0, [r1, #0x1]
	ldrb	r0, [r1, #0x1]
	lsl		r0, r0, #0x1
	strb	r0, [r1, #0x0]
	ldrb	r0, [r1, #0x0]
	sub		r2, r0, #0x1
	add		r7, r5, #0x1
	str		r7, [sp, #0x0]
	cmp		r2, #0x0
	blt		_080180ce
	add		r3, r4, #0x2
	ldr		r6, _080180f4
	lsl		r1, r2, #0x1
	mov		r7, #0x62
	add		r0, r5, #0x0
	mul		r0, r7
	add		r0, r8
	add		r1, r1, r0
_080180b6:
	lsr		r0, r2, #0x1f
	add		r0, r2, r0
	asr		r0, r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r3, r0
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x2]
	strh	r6, [r1, #0x0]
	sub		r1, #0x4
	sub		r2, #0x2
	cmp		r2, #0x0
	bge		_080180b6
_080180ce:
	add		r0, r4, #0x0
	bl		sub_0808afac
	mov		r0, r9
	mul		r0, r5
	add		r0, r8
	bl		sub_08018280
	ldr		r5, [sp, #0x0]
	cmp		r5, #0x1
	ble		_08018062
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080180f4:	.4byte 0x0000FF21
	thumb_func_end sub_0801804c

	thumb_func_start sub_080180f8
sub_080180f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _08018174
	bl		sub_0800f354
	add		r4, r0, #0x0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	add		r0, r4, r0
	mov		r1, #0x0
	bl		sub_0800f304
	add		r5, r0, #0x0
	mov		r2, #0x2
	ldrsh	r0, [r4, r2]
	add		r4, r4, r0
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800f304
	ldrb	r5, [r5, #0x1]
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r1, r2, #0x0
	orr		r5, r1
	ldrb	r4, [r0, #0x1]
	mov		r1, #0xa0
	lsl		r1, r1, #0x3
	add		r0, r1, #0x0
	orr		r4, r0
	add		r0, r6, #0x2
	add		r1, r7, #0x2
	mov		r2, #0x60
	bl		sub_0808c6b8
	add		r0, r6, #0x0
	add		r0, #0x64
	add		r1, r7, #0x0
	add		r1, #0x62
	mov		r2, #0x60
	bl		sub_0808c6b8
	ldrb	r1, [r7, #0x1]
	add		r0, r1, #0x0
	cmp		r0, #0x0
	beq		_080181aa
	mov		r2, #0x2f
	add		r0, r6, #0x0
	add		r0, #0x60
	ldrh	r0, [r0, #0x0]
	mov		r8, r1
	mov		r1, #0x63
	add		r1, r1, r6
	mov		r12, r1
	ldrb	r3, [r7, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x62
	b		_08018186

.incbin "base.gba", 0x18172, 0x2

_08018174:	.4byte 0x080d1874 @ ms_K_blank

_08018178:
	sub		r2, #0x2
	cmp		r2, #0x0
	blt		_0801818e
	lsl		r1, r2, #0x1
	add		r0, r6, #0x2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
_08018186:
	cmp		r0, r5
	beq		_08018178
	cmp		r0, r4
	beq		_08018178
_0801818e:
	add		r1, r2, #0x1
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	strb	r0, [r6, #0x1]
	strb	r1, [r6, #0x0]
	mov		r0, r8
	sub		r0, #0x18
	mov		r2, r12
	strb	r0, [r2, #0x0]
	add		r0, r3, #0x0
	sub		r0, #0x30
	strb	r0, [r7, #0x0]
	b		_080181b8
_080181aa:
	add		r1, r6, #0x0
	add		r1, #0x63
	strb	r0, [r1, #0x0]
	strb	r0, [r6, #0x1]
	sub		r1, #0x1
	strb	r0, [r1, #0x0]
	strb	r0, [r6, #0x0]
_080181b8:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x181C2, 0x2
	thumb_func_end sub_080180f8

	thumb_func_start sub_080181c4
sub_080181c4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_08018224
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r5, #0x2
	add		r1, r4, #0x2
	mov		r2, #0x60
	bl		sub_0808c6b8
	add		r0, r5, #0x0
	add		r0, #0x62
	add		r1, r4, #0x0
	add		r1, #0x64
	mov		r2, #0x60
	bl		sub_0808c6b8
	ldrb	r1, [r4, #0x0]
	cmp		r1, #0x2f
	bgt		_08018204
	ldr		r2, _08018220
	lsl		r0, r1, #0x1
	add		r0, #0x2
	add		r0, r0, r5
_080181f8:
	strh	r2, [r0, #0x0]
	strh	r6, [r0, #0x2]
	add		r0, #0x4
	add		r1, #0x2
	cmp		r1, #0x2f
	ble		_080181f8
_08018204:
	add		r0, r4, #0x0
	add		r0, #0x63
	ldrb	r0, [r0, #0x0]
	add		r0, #0x18
	strb	r0, [r5, #0x1]
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r0, [r0, #0x0]
	add		r0, #0x30
	strb	r0, [r5, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1821E, 0x2

_08018220:	.4byte 0x0000FF21
	thumb_func_end sub_080181c4

	thumb_func_start sub_08018224
sub_08018224:
	push	{ lr }
	sub		sp, #0x4
	ldr		r0, PTR_s_ms_K_blank_08018264
	bl		sub_0800f354
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r2, r0, #0x0
	add		r1, r2, #0x1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	add		r2, r2, r0
	mov		r0, sp
	bl		sub_0808ec54
	mov		r1, sp
	add		r1, #0x2
	ldrb	r2, [r1, #0x0]
	mov		r3, #0x0
	strh	r2, [r1, #0x0]
	ldr		r0, _08018268
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0801826c
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	b		_08018270

.incbin "base.gba", 0x18262, 0x2

PTR_s_ms_K_blank_08018264:	.4byte 0x080d1874 @ ms_K_blank
_08018268:	.4byte 0x02000BAC

_0801826c:
	mov		r3, #0xa0
	lsl		r3, r3, #0x3
_08018270:
	add		r0, r3, #0x0
	orr		r2, r0
	strh	r2, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1827E, 0x2
	thumb_func_end sub_08018224

	thumb_func_start sub_08018280
sub_08018280:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	ldr		r0, _080182cc
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_080182d0
	mov		r3, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r3, r0
	bge		_08018322
	mov		r7, #0xff
	lsl		r7, r7, #0x8
	mov		r6, #0xff
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r5, r0, #0x0
	add		r2, r4, #0x2
_080182ae:
	ldrh	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_080182c0
	add		r0, r6, #0x0
	and		r0, r1
	orr		r0, r5
	strh	r0, [r2, #0x0]
_080182c0:
	add		r2, #0x2
	add		r3, #0x1
	ldrb	r1, [r4, #0x0]
	cmp		r3, r1
	blt		_080182ae
	b		_08018322

_080182cc:	.4byte 0x02000BAC

_080182d0:
	mov		r3, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r3, r0
	bge		_08018322
	mov		r6, #0xff
	lsl		r6, r6, #0x8
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	mov		r8, r1
	mov		r5, #0xff
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	mov		r12, r1
	mov		r0, #0xa0
	lsl		r0, r0, #0x3
	add		r7, r0, #0x0
	add		r2, r4, #0x2
_080182f2:
	ldrh	r1, [r2, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, r8
	bne		_08018306
	add		r0, r5, #0x0
	and		r0, r1
	mov		r1, r12
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08018306:
	ldrh	r1, [r2, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08018318
	add		r0, r5, #0x0
	and		r0, r1
	orr		r0, r7
	strh	r0, [r2, #0x0]
_08018318:
	add		r2, #0x2
	add		r3, #0x1
	ldrb	r0, [r4, #0x0]
	cmp		r3, r0
	blt		_080182f2
_08018322:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1832E, 0x2
	thumb_func_end sub_08018280

	thumb_func_start sub_08018330
sub_08018330:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, PTR_s_ms_K_blank_080183fc
	bl		sub_0800f354
	add		r4, r0, #0x0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	add		r0, r4, r0
	mov		r1, #0x0
	bl		sub_0800f304
	add		r7, r0, #0x0
	mov		r1, #0x2
	ldrsh	r0, [r4, r1]
	add		r4, r4, r0
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800f304
	add		r6, r0, #0x0
	ldr		r0, _08018400
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_080183ba
	mov		r3, #0x0
	ldrb	r0, [r5, #0x0]
	cmp		r3, r0
	bge		_080183ba
	mov		r0, #0xa0
	lsl		r0, r0, #0x3
	add		r4, r0, #0x0
	mov		r1, #0xff
	lsl		r1, r1, #0x8
	mov		r9, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r12, r0
	mov		r1, #0xff
	mov		r8, r1
	add		r2, r5, #0x2
_08018390:
	ldrh	r0, [r2, #0x0]
	ldrb	r1, [r7, #0x1]
	cmp		r0, r1
	bne		_0801839e
	ldrb	r0, [r6, #0x1]
	orr		r0, r4
	strh	r0, [r2, #0x0]
_0801839e:
	ldrh	r1, [r2, #0x0]
	mov		r0, r9
	and		r0, r1
	cmp		r0, r12
	bne		_080183b0
	mov		r0, r8
	and		r0, r1
	orr		r0, r4
	strh	r0, [r2, #0x0]
_080183b0:
	add		r2, #0x2
	add		r3, #0x1
	ldrb	r0, [r5, #0x0]
	cmp		r3, r0
	blt		_08018390
_080183ba:
	mov		r3, #0x0
	ldrb	r1, [r5, #0x0]
	cmp		r3, r1
	bge		_080183ec
	mov		r7, #0xff
	lsl		r7, r7, #0x8
	mov		r6, #0xff
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r4, r1, #0x0
	add		r2, r5, #0x2
_080183d0:
	ldrh	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_080183e2
	add		r0, r6, #0x0
	and		r0, r1
	orr		r0, r4
	strh	r0, [r2, #0x0]
_080183e2:
	add		r2, #0x2
	add		r3, #0x1
	ldrb	r0, [r5, #0x0]
	cmp		r3, r0
	blt		_080183d0
_080183ec:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x183FA, 0x2

PTR_s_ms_K_blank_080183fc:	.4byte 0x080d1874 @ ms_K_blank
_08018400:	.4byte 0x02000BAC
	thumb_func_end sub_08018330

	thumb_func_start sub_08018404
sub_08018404:
	push	{ r4, lr }
	sub		sp, #0xc4
	add		r4, r1, #0x0
	mov		r1, sp
	bl		sub_0801804c
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080181c4
	add		sp, #0xc4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08018404

	thumb_func_start sub_08018420
sub_08018420:
	push	{ r4, lr }
	ldr		r2, _08018448
	ldr		r1, _0801844c
	add		r3, r2, r1
	ldr		r4, _08018450
	add		r1, r4, #0x0
	ldrb	r3, [r3, #0x0]
	add		r1, r1, r3
	strh	r1, [r0, #0x0]
	ldr		r3, _08018454
	add		r1, r2, r3
	ldrb	r1, [r1, #0x0]
	strh	r1, [r0, #0x2]
	ldr		r4, _08018458
	add		r2, r2, r4
	ldrb	r1, [r2, #0x0]
	strh	r1, [r0, #0x4]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08018448:	.4byte 0x02000BAC
_0801844c:	.4byte 0x0000042A
_08018450:	.4byte 0x0000076C
_08018454:	.4byte 0x0000042B
_08018458:	.4byte 0x0000042C
	thumb_func_end sub_08018420

	thumb_func_start sub_0801845c
sub_0801845c:
	push	{ r4, r5, lr }
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x2
	ldrsh	r3, [r0, r5]
	mov		r1, #0x4
	ldrsh	r4, [r0, r1]
	ldr		r1, _08018488
	sub		r2, #0x6c
	ldr		r5, _0801848c
	add		r0, r1, r5
	strb	r2, [r0, #0x0]
	ldr		r2, _08018490
	add		r0, r1, r2
	strb	r3, [r0, #0x0]
	add		r5, #0x2
	add		r1, r1, r5
	strb	r4, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x18486, 0x2

_08018488:	.4byte 0x02000BAC
_0801848c:	.4byte 0x0000042A
_08018490:	.4byte 0x0000042B
	thumb_func_end sub_0801845c

	thumb_func_start sub_08018494
sub_08018494:
	push	{ r4, r5, lr }
	ldr		r4, _080184b4
	sub		r0, #0x6c
	ldr		r5, _080184b8
	add		r3, r4, r5
	strb	r0, [r3, #0x0]
	ldr		r3, _080184bc
	add		r0, r4, r3
	strb	r1, [r0, #0x0]
	add		r5, #0x2
	add		r4, r4, r5
	strb	r2, [r4, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x184B2, 0x2

_080184b4:	.4byte 0x02000BAC
_080184b8:	.4byte 0x0000042A
_080184bc:	.4byte 0x0000042B
	thumb_func_end sub_08018494

	thumb_func_start sub_080184c0
sub_080184c0:
	push	{ lr }
	ldr		r1, _080184d0
	mov		r2, #0x42
	bl		sub_0808c818
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x184CE, 0x2

_080184d0:	.4byte 0x02000F94
	thumb_func_end sub_080184c0

	thumb_func_start sub_080184d4
sub_080184d4:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _080184e4
	mov		r2, #0x42
	bl		sub_0808c818
	pop		{ r0 }
	bx		r0

_080184e4:	.4byte 0x02000F94

.incbin "base.gba", 0x184E8, 0x20
	thumb_func_end sub_080184d4

	thumb_func_start sub_08018508
sub_08018508:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	lsl		r0, r5, #0x10
	asr		r4, r0, #0x10
	cmp		r4, #0x1
	ble		_08018524
	ldr		r0, _08018520
	mov		r1, #0xff
	bl		sub_080b63dc
	lsl		r2, r0, #0x10
	b		_08018538

_08018520:	.4byte 0x0200BDD4

_08018524:
	ldr		r0, _08018548
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	bl		sub_080b63dc
	add		r2, r0, #0x0
	lsl		r1, r4, #0x3
	mov		r0, #0xff
	lsl		r0, r1
	and		r2, r0
_08018538:
	ldr		r1, _0801854c
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x18546, 0x2

_08018548:	.4byte 0x0200BDD4
_0801854c:	.4byte 0x0200B798
	thumb_func_end sub_08018508

	thumb_func_start sub_08018550
sub_08018550:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	mov		r7, #0x0
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	mov		r5, #0x7
_0801855e:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0801856a
	bl		sub_0808afac
	str		r7, [r4, #0x0]
_0801856a:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0801855e
	mov		r1, #0xda
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	add		r1, #0x2
	add		r0, r6, r1
	strh	r5, [r0, #0x0]
	mov		r0, #0xdc
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	mov		r1, #0xde
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0801859e
	bl		sub_0808afac
	str		r5, [r4, #0x0]
_0801859e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08018550

	thumb_func_start sub_080185a4
sub_080185a4:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r7, r6, #0x0
	add		r7, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	mov		r2, #0xf0
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	bl		sub_0800223c
	add		r0, r6, #0x0
	add		r0, #0x56
	strh	r4, [r0, #0x0]
	ldr		r0, _080185d8
	cmp		r4, r0
	beq		_080185f0
	cmp		r4, r0
	bgt		_080185dc
	sub		r0, #0xfb
	cmp		r4, r0
	beq		_0801864c
	b		_08018652

.incbin "base.gba", 0x185D6, 0x2

_080185d8:	.4byte 0xFFFFF200

_080185dc:
	ldr		r0, _080185ec
	cmp		r4, r0
	beq		_08018644
	add		r0, #0x5
	cmp		r4, r0
	beq		_0801863c
	b		_08018652

.incbin "base.gba", 0x185EA, 0x2

_080185ec:	.4byte 0xFFFFF201

_080185f0:
	ldr		r5, [r6, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r5, r3]
	add		r0, r6, r0
	add		r1, r6, #0x0
	add		r1, #0x64
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	sub		r1, #0x1e
	add		r2, r6, #0x0
	add		r2, #0x66
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	sub		r2, #0x14
	add		r3, r6, #0x0
	add		r3, #0x68
	add		r4, r6, #0x0
	add		r4, #0x6a
	str		r4, [sp, #0x0]
	ldr		r4, [r5, #0x2c]
	bl		sub_080bbc80
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	mov		r2, #0xf0
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	bl		sub_08002268
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _08018638
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08018652

_08018638:	.4byte 0xFFFFF206

_0801863c:
	add		r0, r6, #0x0
	bl		sub_08018b88
	b		_08018652
_08018644:
	add		r0, r6, #0x0
	bl		sub_08010bb0
	b		_08018652
_0801864c:
	add		r0, r6, #0x0
	bl		sub_08018c4c
_08018652:
	add		r1, r6, #0x0
	add		r1, #0x56
	ldr		r0, _08018664
	strh	r0, [r1, #0x0]
_0801865a:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0801865a

_08018664:	.4byte 0x0000F002
	thumb_func_end sub_080185a4

	thumb_func_start sub_08018668
sub_08018668:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r6, r0, #0x0
	ldr		r0, [sp, #0x0+0x38]
	ldr		r4, [sp, #0x4+0x38]
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	mov		r8, r3
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r9, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	str		r4, [sp, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x64
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r2, r9
	strh	r2, [r0, #0x0]
	mov		r3, #0x0
	str		r3, [sp, #0x4]
	mov		r5, #0x0
	mov		r4, #0xda
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r3, r0
	bge		_080186e4
	add		r7, r6, r4
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r4, r6, r0
_080186be:
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x4]
	bl		sub_0800d74c
	mov		r1, #0x0
	bl		sub_080126cc
	mov		r1, #0x10
	ldrsh	r0, [r0, r1]
	ldr		r2, [sp, #0x4]
	cmp		r2, r0
	bge		_080186d8
	str		r0, [sp, #0x4]
_080186d8:
	add		r4, #0x4
	add		r5, #0x1
	mov		r3, #0x0
	ldrsh	r0, [r7, r3]
	cmp		r5, r0
	blt		_080186be
_080186e4:
	mov		r4, r8
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _08018774
	mov		r7, #0x68
	add		r7, r7, r6
	mov		r10, r7
	cmp		r0, r1
	bne		_08018716
	ldr		r1, [sp, #0x4]
	add		r1, #0x7
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08018704
	ldr		r0, [sp, #0x4]
	add		r0, #0xe
_08018704:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	sub		r0, r1, r0
	ldr		r1, [sp, #0x4]
	sub		r0, r1, r0
	add		r0, #0x27
	asr		r0, r0, #0x3
	mov		r2, r10
	strh	r0, [r2, #0x0]
_08018716:
	mov		r3, r9
	lsl		r0, r3, #0x10
	asr		r1, r0, #0x10
	ldr		r0, _08018774
	add		r3, r6, #0x0
	add		r3, #0x64
	mov		r4, #0x66
	add		r4, r4, r6
	mov		r8, r4
	ldr		r7, [sp, #0x0]
	lsl		r7, r7, #0x10
	str		r7, [sp, #0xC]
	cmp		r1, r0
	bne		_080187c8
	mov		r5, #0x0
	mov		r7, #0x0
	mov		r2, #0xda
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	add		r2, r6, #0x0
	add		r2, #0x6a
	str		r2, [sp, #0x8]
	cmp		r5, r0
	bge		_08018788
	mov		r4, #0xda
	lsl		r4, r4, #0x1
	add		r4, r4, r6
	mov		r9, r4
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r4, r6, r0
_08018758:
	ldr		r1, [r4, #0x0]
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	ldr		r2, _08018774
	cmp		r0, r2
	bne		_08018778
	ldr		r0, [r1, #0x4]
	str		r3, [sp, #0x10]
	bl		sub_0801798c
	add		r5, r5, r0
	ldr		r3, [sp, #0x10]
	b		_0801877a

.incbin "base.gba", 0x18772, 0x2

_08018774:	.4byte 0xFFFF8001

_08018778:
	add		r5, #0x1
_0801877a:
	add		r4, #0x4
	add		r7, #0x1
	mov		r1, r9
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r7, r0
	blt		_08018758
_08018788:
	sub		r2, r5, #0x1
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	lsl		r1, r0, #0x2
	ldr		r0, _080187a4
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_080187a8
	lsl		r0, r2, #0x1
	add		r2, r1, r0
	b		_080187aa

_080187a4:	.4byte 0x02000BAC

_080187a8:
	add		r2, r1, r2
_080187aa:
	add		r1, r2, #0x0
	add		r1, #0x19
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_080187b8
	add		r0, r2, #0x0
	add		r0, #0x20
_080187b8:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	sub		r0, r1, r0
	sub		r0, #0x19
	sub		r0, r2, r0
	asr		r0, r0, #0x3
	ldr		r4, [sp, #0x8]
	strh	r0, [r4, #0x0]
_080187c8:
	mov		r0, #0xf0
	lsl		r0, r0, #0xc
	ldr		r7, [sp, #0xC]
	and		r0, r7
	asr		r0, r0, #0x10
	cmp		r0, #0x1
	beq		_080187e0
	cmp		r0, #0x1
	ble		_080187fe
	cmp		r0, #0x2
	beq		_080187ec
	b		_080187fe
_080187e0:
	ldrh	r0, [r3, #0x0]
	mov		r2, r10
	ldrh	r1, [r2, #0x0]
	sub		r0, r0, r1
	strh	r0, [r3, #0x0]
	b		_080187fe
_080187ec:
	mov		r4, r10
	mov		r7, #0x0
	ldrsh	r0, [r4, r7]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	ldrh	r1, [r3, #0x0]
	sub		r1, r1, r0
	strh	r1, [r3, #0x0]
_080187fe:
	mov		r0, #0xf0
	lsl		r0, r0, #0x10
	ldr		r1, [sp, #0xC]
	and		r0, r1
	asr		r0, r0, #0x10
	cmp		r0, #0x10
	beq		_08018816
	cmp		r0, #0x10
	ble		_0801883c
	cmp		r0, #0x20
	beq		_08018826
	b		_0801883c
_08018816:
	add		r1, r6, #0x0
	add		r1, #0x6a
	mov		r2, r8
	ldrh	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	strh	r0, [r2, #0x0]
	b		_0801883c
_08018826:
	add		r0, r6, #0x0
	add		r0, #0x6a
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r7, r8
	ldrh	r1, [r7, #0x0]
	sub		r1, r1, r0
	strh	r1, [r7, #0x0]
_0801883c:
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	mov		r2, r10
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	add		r1, r1, r0
	cmp		r1, #0x0
	blt		_0801885c
	cmp		r1, #0x1e
	ble		_08018858
	ldrh	r0, [r2, #0x0]
	neg		r0, r0
	add		r0, #0x1e
	b		_0801885e
_08018858:
	ldrh	r0, [r3, #0x0]
	b		_0801885e
_0801885c:
	mov		r0, #0x0
_0801885e:
	strh	r0, [r3, #0x0]
	mov		r7, r8
	ldrh	r0, [r7, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	cmp		r1, #0x0
	blt		_0801887c
	cmp		r1, #0x14
	ble		_0801887e
	add		r0, r6, #0x0
	add		r0, #0x6a
	ldrh	r0, [r0, #0x0]
	neg		r0, r0
	add		r0, #0x14
	b		_0801887e
_0801887c:
	mov		r0, #0x0
_0801887e:
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r5, #0x0
	mov		r4, #0xda
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r5, r0
	bge		_08018966
	ldr		r0, _080188bc
	mov		r8, r0
	mov		r1, #0xf
	mov		r9, r1
	add		r2, r4, #0x0
	add		r2, r6, r2
	str		r2, [sp, #0x14]
	mov		r3, #0xca
	lsl		r3, r3, #0x1
	add		r4, r6, r3
_080188a6:
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	beq		_08018958
	mov		r7, #0x8
	ldrsh	r0, [r1, r7]
	cmp		r0, r8
	bne		_080188c0
	ldr		r0, [r1, #0x4]
	bl		sub_08017958
	b		_080188ce

_080188bc:	.4byte 0xFFFF8001

_080188c0:
	ldr		r0, [r1, #0x4]
	mov		r2, #0x8
	ldrsh	r1, [r1, r2]
	bl		sub_0800f2c8
	bl		sub_0800f288
_080188ce:
	add		r3, r0, #0x0
	ldr		r2, [r4, #0x0]
	ldrh	r0, [r2, #0xe]
	mov		r1, r9
	and		r1, r0
	cmp		r1, #0x1
	beq		_08018904
	cmp		r1, #0x1
	ble		_080188e4
	cmp		r1, #0x2
	beq		_0801891c
_080188e4:
	mov		r3, r10
	mov		r7, #0x0
	ldrsh	r0, [r3, r7]
	lsl		r0, r0, #0x3
	ldr		r1, [sp, #0x4]
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	ldrh	r3, [r2, #0xa]
	add		r0, r0, r3
	strh	r0, [r2, #0xa]
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r1, #0xa]
	strh	r0, [r1, #0x10]
	b		_08018938
_08018904:
	mov		r7, r10
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x3
	ldrh	r7, [r2, #0xa]
	add		r0, r0, r7
	strh	r0, [r2, #0xa]
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r1, #0xa]
	sub		r0, r0, r3
	strh	r0, [r1, #0x10]
	b		_08018938
_0801891c:
	mov		r1, r10
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	lsl		r0, r0, #0x2
	ldrh	r1, [r2, #0xa]
	add		r0, r0, r1
	strh	r0, [r2, #0xa]
	ldr		r2, [r4, #0x0]
	lsr		r1, r3, #0x1f
	add		r1, r3, r1
	asr		r1, r1, #0x1
	ldrh	r0, [r2, #0xa]
	sub		r0, r0, r1
	strh	r0, [r2, #0x10]
_08018938:
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x4]
	bl		sub_0801798c
	add		r1, r0, #0x0
	sub		r1, #0x1
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x4]
	bl		sub_0800f2c8
	bl		sub_0800f288
	ldr		r2, [r4, #0x0]
	ldrh	r1, [r2, #0x10]
	add		r1, r1, r0
	strh	r1, [r2, #0x14]
_08018958:
	add		r4, #0x4
	add		r5, #0x1
	ldr		r2, [sp, #0x14]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r5, r0
	blt		_080188a6
_08018966:
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _08018984
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x18982, 0x2

_08018984:	.4byte 0xFFFFF200
	thumb_func_end sub_08018668

	thumb_func_start sub_08018988
sub_08018988:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	mov		r4, #0x0
	mov		r5, #0x0
	mov		r1, #0xda
	lsl		r1, r1, #0x1
	add		r1, r12
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r4, r0
	bge		_080189d2
	mov		r7, #0xde
	lsl		r7, r7, #0x1
	add		r7, r12
	add		r6, r1, #0x0
	mov		r3, #0xca
	lsl		r3, r3, #0x1
	add		r3, r12
_080189ac:
	ldr		r2, [r3, #0x0]
	cmp		r2, #0x0
	beq		_080189c6
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, #0x1
	bne		_080189c6
	ldr		r0, [r7, #0x0]
	lsl		r1, r5, #0x2
	add		r0, #0xc
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	add		r5, #0x1
_080189c6:
	add		r3, #0x4
	add		r4, #0x1
	mov		r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp		r4, r0
	blt		_080189ac
_080189d2:
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r1, _080189f0
	strh	r1, [r0, #0x0]
	mov		r0, r12
	ldr		r1, [r0, #0x2c]
	ldr		r2, _080189f4
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x189EE, 0x2

_080189f0:	.4byte 0x00008080
_080189f4:	.4byte 0xFFFFF105
	thumb_func_end sub_08018988

	thumb_func_start sub_080189f8
sub_080189f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	mov		r10, r1
	mov		r9, r2
	mov		r8, r3
	mov		r0, #0xda
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x8
	bne		_08018a34
	ldr		r0, _08018a2c
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	beq		_08018a24
	b		_08018b7a
_08018a24:
	ldr		r0, _08018a30
	bl		sub_0808c670
	b		_08018b7a

_08018a2c:	.4byte 0x0200CDBC
_08018a30:	.4byte 0x080d1880 @ AddTextLine Entry Over!!

_08018a34:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	mov		r2, #0xca
	lsl		r2, r2, #0x1
	add		r6, r7, r2
	add		r5, r6, r0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08018a50
	mov		r0, #0x18
	bl		sub_0808af94
	str		r0, [r5, #0x0]
_08018a50:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r4, [r0, #0x0]
	mov		r2, r10
	strh	r2, [r4, #0x0]
	mov		r0, r9
	str		r0, [r4, #0x4]
	mov		r1, r8
	strh	r1, [r4, #0x8]
	mov		r2, sp
	ldrh	r2, [r2, #0x0+0x20]
	strh	r2, [r4, #0xa]
	mov		r0, sp
	ldrh	r0, [r0, #0x4+0x20]
	strh	r0, [r4, #0xc]
	ldr		r0, [sp, #0x8+0x20]
	strh	r0, [r4, #0xe]
	mov		r6, #0x1
	mov		r1, r8
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	ldr		r5, _08018af0
	cmp		r0, r5
	bne		_08018a8c
	mov		r0, r9
	bl		sub_0801798c
	add		r6, r0, #0x0
_08018a8c:
	ldr		r2, [sp, #0x0+0x20]
	cmp		r2, r5
	bne		_08018aae
	mov		r0, #0xdb
	lsl		r0, r0, #0x1
	add		r5, r7, r0
	ldrh	r0, [r5, #0x0]
	strh	r0, [r4, #0xa]
	ldr		r0, [r4, #0x4]
	sub		r1, r6, #0x1
	bl		sub_0800f2c8
	bl		sub_0800f288
	ldrh	r1, [r5, #0x0]
	add		r1, r1, r0
	strh	r1, [r5, #0x0]
_08018aae:
	ldr		r1, [sp, #0x4+0x20]
	ldr		r2, _08018af4
	add		r0, r1, r2
	ldr		r3, _08018af8
	cmp		r0, #0x1
	bhi		_08018b0e
	mov		r0, #0xdc
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	ldrh	r0, [r2, #0x0]
	strh	r0, [r4, #0xc]
	ldr		r0, _08018afc
	cmp		r1, r0
	beq		_08018b0e
	mov		r0, #0xdb
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08018b00
	lsl		r0, r6, #0x3
	sub		r0, r0, r6
	lsl		r0, r0, #0x1
	b		_08018b04

.incbin "base.gba", 0x18AEE, 0x2

_08018af0:	.4byte 0xFFFF8001
_08018af4:	.4byte 0x00007FFF
_08018af8:	.4byte 0x080d189c
_08018afc:	.4byte 0xFFFF8002

_08018b00:
	mov		r0, #0xd
	mul		r0, r6
_08018b04:
	add		r1, r1, r0
	mov		r2, #0xdc
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
_08018b0e:
	ldr		r0, [r3, #0x0]
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08018b24
	lsl		r0, r6, #0x3
	sub		r0, r0, r6
	lsl		r2, r0, #0x1
	b		_08018b2a
_08018b24:
	mov		r0, #0xd
	add		r2, r6, #0x0
	mul		r2, r0
_08018b2a:
	ldrh	r0, [r4, #0xe]
	mov		r1, #0xf0
	and		r1, r0
	cmp		r1, #0x10
	beq		_08018b40
	cmp		r1, #0x10
	ble		_08018b3c
	cmp		r1, #0x20
	beq		_08018b46
_08018b3c:
	ldrh	r0, [r4, #0xc]
	b		_08018b50
_08018b40:
	ldrh	r0, [r4, #0xc]
	sub		r0, r0, r2
	b		_08018b50
_08018b46:
	lsr		r1, r2, #0x1f
	add		r1, r2, r1
	asr		r1, r1, #0x1
	ldrh	r0, [r4, #0xc]
	sub		r0, r0, r1
_08018b50:
	strh	r0, [r4, #0x12]
	mov		r1, #0x12
	ldrsh	r0, [r4, r1]
	add		r1, r0, r2
	ldr		r0, [r3, #0x0]
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r2, r1, #0x0
	sub		r2, #0xd
	cmp		r0, #0x0
	bne		_08018b6c
	sub		r2, #0x1
_08018b6c:
	strh	r2, [r4, #0x16]
	mov		r2, #0xda
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
_08018b7a:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080189f8

	thumb_func_start sub_08018b88
sub_08018b88:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x8
	add		r4, r0, #0x0
	ldr		r0, _08018c08
	mov		r1, #0xf
	bl		sub_0800ed80
	add		r2, r0, #0x0
	ldr		r0, _08018c0c
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r3, #0xd
	cmp		r0, #0x0
	bne		_08018bb0
	mov		r3, #0xe
_08018bb0:
	mov		r0, #0x14
	add		r1, r2, #0x0
	add		r1, #0x26
	strb	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x27
	strb	r3, [r0, #0x0]
	mov		r6, #0x0
	mov		r1, #0xda
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r6, r0
	bge		_08018c3e
	ldr		r7, _08018c10
	mov		r8, r7
	add		r0, r1, #0x0
	add		r0, r0, r4
	mov		r9, r0
	sub		r1, #0x20
	add		r5, r4, r1
_08018bdc:
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	beq		_08018c30
	ldr		r4, [r1, #0x4]
	cmp		r4, #0x0
	beq		_08018c30
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp		r0, r8
	bne		_08018c14
	mov		r7, #0xa
	ldrsh	r2, [r1, r7]
	mov		r0, #0xc
	ldrsh	r3, [r1, r0]
	mov		r7, #0xe
	ldrsh	r0, [r1, r7]
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	add		r1, r4, #0x0
	bl		sub_08017ae8
	b		_08018c30

_08018c08:	.4byte 0x0200AA18
_08018c0c:	.4byte 0x02000BAC
_08018c10:	.4byte 0xFFFF8001

_08018c14:
	mov		r0, #0x8
	ldrsh	r2, [r1, r0]
	mov		r7, #0xa
	ldrsh	r3, [r1, r7]
	mov		r7, #0xc
	ldrsh	r0, [r1, r7]
	str		r0, [sp, #0x0]
	mov		r7, #0xe
	ldrsh	r0, [r1, r7]
	str		r0, [sp, #0x4]
	mov		r0, #0xf
	add		r1, r4, #0x0
	bl		sub_08016d34
_08018c30:
	add		r5, #0x4
	add		r6, #0x1
	mov		r1, r9
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r6, r0
	blt		_08018bdc
_08018c3e:
	add		sp, #0x8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08018b88

	thumb_func_start sub_08018c4c
sub_08018c4c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r8, r0
	mov		r0, #0xde
	lsl		r0, r0, #0x1
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r5, [r0, r1]
	mov		r3, #0x2
	ldrsh	r4, [r0, r3]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080bbd44
	add		r7, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080bbcac
	add		r6, r0, #0x0
	mov		r4, #0xde
	lsl		r4, r4, #0x1
	add		r4, r8
	mov		r9, r4
	mov		r0, r8
	add		r0, #0x64
	str		r0, [sp, #0x0]
	mov		r1, r8
	add		r1, #0x66
	str		r1, [sp, #0x4]
	b		_08018df4
_08018c94:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08018ca8
	mov		r0, #0x55
	bl		sub_08016b44
	b		_08018e54
_08018ca8:
	mov		r4, #0x0
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	mov		r1, #0x4
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x1
	ble		_08018cd4
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	neg		r1, r0
	orr		r1, r0
	lsr		r4, r1, #0x1f
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08018cd4
	mov		r3, #0x2
	orr		r4, r3
_08018cd4:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	mov		r3, #0x2
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x1
	ble		_08018d00
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08018cf0
	mov		r0, #0x4
	orr		r4, r0
_08018cf0:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08018d00
	mov		r1, #0x8
	orr		r4, r1
_08018d00:
	cmp		r4, #0x0
	beq		_08018df4
	mov		r0, #0x54
	bl		sub_08016b44
	mov		r3, #0x1
	mov		r12, r3
	mov		r2, #0xde
	lsl		r2, r2, #0x1
	add		r2, r8
	mov		r3, #0x4
	mov		r0, #0x9
	neg		r0, r0
	mov		r10, r0
_08018d1c:
	add		r0, r4, #0x0
	mov		r1, r12
	and		r0, r1
	cmp		r0, #0x0
	beq		_08018d50
	mov		r5, #0x2
	neg		r5, r5
	and		r4, r5
	cmp		r6, #0x0
	ble		_08018d34
	sub		r6, #0x1
	b		_08018d3c
_08018d34:
	ldr		r0, [r2, #0x0]
	mov		r1, #0x4
	ldrsh	r0, [r0, r1]
	sub		r6, r0, #0x1
_08018d3c:
	ldr		r1, [r2, #0x0]
	mov		r5, #0x2
	ldrsh	r0, [r1, r5]
	mul		r0, r6
	add		r5, r0, r7
	mov		r0, #0x6
	ldrsh	r1, [r1, r0]
	cmp		r5, r1
	blt		_08018d50
	orr		r4, r3
_08018d50:
	add		r0, r4, #0x0
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08018d86
	mov		r5, #0x3
	neg		r5, r5
	and		r4, r5
	ldr		r0, [r2, #0x0]
	mov		r1, #0x4
	ldrsh	r0, [r0, r1]
	sub		r0, #0x1
	cmp		r6, r0
	bge		_08018d70
	add		r6, #0x1
	b		_08018d72
_08018d70:
	mov		r6, #0x0
_08018d72:
	ldr		r1, [r2, #0x0]
	mov		r5, #0x2
	ldrsh	r0, [r1, r5]
	mul		r0, r6
	add		r5, r0, r7
	mov		r0, #0x6
	ldrsh	r1, [r1, r0]
	cmp		r5, r1
	blt		_08018d86
	orr		r4, r3
_08018d86:
	add		r0, r4, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_08018dba
	mov		r1, #0x5
	neg		r1, r1
	and		r4, r1
	cmp		r7, #0x0
	ble		_08018d9c
	sub		r7, #0x1
	b		_08018da4
_08018d9c:
	ldr		r0, [r2, #0x0]
	mov		r5, #0x2
	ldrsh	r0, [r0, r5]
	sub		r7, r0, #0x1
_08018da4:
	ldr		r1, [r2, #0x0]
	mov		r5, #0x2
	ldrsh	r0, [r1, r5]
	mul		r0, r6
	add		r5, r0, r7
	mov		r0, #0x6
	ldrsh	r1, [r1, r0]
	cmp		r5, r1
	blt		_08018dba
	mov		r1, r12
	orr		r4, r1
_08018dba:
	add		r0, r4, #0x0
	mov		r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08018df0
	mov		r5, r10
	and		r4, r5
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	ldrsh	r0, [r0, r1]
	sub		r0, #0x1
	cmp		r7, r0
	bge		_08018dd8
	add		r7, #0x1
	b		_08018dda
_08018dd8:
	mov		r7, #0x0
_08018dda:
	ldr		r1, [r2, #0x0]
	mov		r5, #0x2
	ldrsh	r0, [r1, r5]
	mul		r0, r6
	add		r5, r0, r7
	mov		r0, #0x6
	ldrsh	r1, [r1, r0]
	cmp		r5, r1
	blt		_08018df0
	mov		r1, r12
	orr		r4, r1
_08018df0:
	cmp		r4, #0x0
	bne		_08018d1c
_08018df4:
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	lsl		r1, r5, #0x2
	add		r0, #0xc
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldr		r4, [sp, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r4, r0]
	lsl		r2, r2, #0x3
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r2, r2, r0
	sub		r2, #0xb
	ldr		r4, [sp, #0x4]
	mov		r0, #0x0
	ldrsh	r3, [r4, r0]
	lsl		r3, r3, #0x3
	mov		r4, #0x12
	ldrsh	r0, [r1, r4]
	add		r3, r3, r0
	add		r3, #0x5
	mov		r0, r8
	mov		r1, r8
	add		r1, #0x74
	bl		sub_08012644
	mov		r0, r8
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_08018e3e
	b		_08018c94
_08018e3e:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x8]
	cmp		r0, #0x1
	beq		_08018e4a
	b		_08018c94
_08018e4a:
	mov		r0, #0x56
	bl		sub_08016b44
	mov		r5, #0x1
	neg		r5, r5
_08018e54:
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r0, r8
	strh	r5, [r0, #0x0]
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08018c4c

	thumb_func_start sub_08018e6c
sub_08018e6c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r1, #0x0
	ldr		r0, _08018f14
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	add		r7, r0, #0x0
	cmp		r1, #0x0
	bne		_08018f0c
	ldr		r0, _08018f18
	mov		r1, #0xf
	bl		sub_08008f44
	cmp		r0, #0x0
	bne		_08018e8e
	mov		r0, #0x0
	bl		sub_08016be8
_08018e8e:
	ldr		r0, _08018f1c
	mov		r1, #0x9
	bl		sub_08008f44
	cmp		r0, #0x0
	bne		_08018ea0
	mov		r0, #0x1
	bl		sub_08016be8
_08018ea0:
	lsl		r4, r4, #0x4
	mov		r0, #0x5
	orr		r4, r0
	add		r6, r5, #0x0
	ldr		r0, _08018f20
	mov		r1, #0xe2
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r5, r0, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_08010804
	ldr		r0, _08018f24
	str		r0, [r5, #0x4c]
	ldr		r0, _08018f28
	str		r0, [r5, #0xc]
	mov		r2, #0x0
	mov		r1, #0x7
	mov		r3, #0xd8
	lsl		r3, r3, #0x1
	add		r0, r5, r3
_08018ed2:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08018ed2
	mov		r2, #0x0
	mov		r1, #0xda
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r2, [r0, #0x0]
	mov		r3, #0xdb
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	strh	r2, [r0, #0x0]
	mov		r0, #0xdc
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	mov		r1, #0xde
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	str		r2, [r0, #0x0]
	str		r5, [r6, #0x0]
	ldr		r0, _08018f2c
	ldr		r1, [r7, #0x0]
	ldr		r1, [r1, #0x0]
	bl		sub_080b781c
_08018f0c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x18F12, 0x2

_08018f14:	.4byte 0x080d18a0
_08018f18:	.4byte 0x0200AA18
_08018f1c:	.4byte 0x02008C54
_08018f20:	.4byte 0x0200DA00
_08018f24:	.4byte 0x080e09a4
_08018f28:	.4byte 0x080e0bd4
_08018f2c:	.4byte 0x0200DAB0
	thumb_func_end sub_08018e6c

	thumb_func_start sub_08018f30
sub_08018f30:
	push	{ r4, lr }
	ldr		r4, _08018f48
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08018f42
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r4, #0x0]
_08018f42:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08018f48:	.4byte 0x0200B7A4
	thumb_func_end sub_08018f30

	thumb_func_start sub_08018f4c
sub_08018f4c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_08018f30
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08018f64
	add		r0, r5, #0x0
	bl		sub_0808afac
_08018f64:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x18F6A, 0x2
	thumb_func_end sub_08018f4c

	thumb_func_start sub_08018f6c
sub_08018f6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r4, [sp, #0x0+0x18]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r8, r1
	lsl		r2, r2, #0x10
	lsr		r7, r2, #0x10
	lsl		r3, r3, #0x10
	lsr		r6, r3, #0x10
	lsl		r4, r4, #0x10
	lsr		r5, r4, #0x10
	mov		r1, #0xde
	lsl		r1, r1, #0x1
	add		r4, r0, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08018f9a
	mov		r0, #0x2c
	bl		sub_0808af94
	str		r0, [r4, #0x0]
_08018f9a:
	ldr		r0, [r4, #0x0]
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	strh	r7, [r0, #0x2]
	ldr		r0, [r4, #0x0]
	strh	r6, [r0, #0x4]
	ldr		r0, [r4, #0x0]
	strh	r5, [r0, #0x6]
	ldr		r1, [r4, #0x0]
	ldr		r0, [sp, #0x4+0x18]
	str		r0, [r1, #0x8]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08018f6c

	thumb_func_start sub_08018fbc
sub_08018fbc:
	mov		r2, #0xdc
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldrh	r2, [r0, #0x0]
	add		r2, r2, r1
	strh	r2, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x18FCA, 0x2
	thumb_func_end sub_08018fbc

	thumb_func_start sub_08018fcc
sub_08018fcc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0xf
	bl		sub_08017ce0
	add		r0, r4, #0x0
	bl		sub_08018550
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08018ff0
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x18FEE, 0x2

_08018ff0:	.4byte 0xFFFFF201
	thumb_func_end sub_08018fcc

	thumb_func_start sub_08018ff4
sub_08018ff4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _08019024
	str		r0, [r5, #0x4c]
	ldr		r0, _08019028
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	bl		sub_08018550
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080109e0
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0801901e
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0801901e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08019024:	.4byte 0x080e09a4
_08019028:	.4byte 0x080e0bd4
	thumb_func_end sub_08018ff4

	thumb_func_start sub_0801902c
sub_0801902c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08010804
	ldr		r0, _0801907c
	str		r0, [r4, #0x4c]
	ldr		r0, _08019080
	str		r0, [r4, #0xc]
	mov		r2, #0x0
	mov		r1, #0x7
	mov		r3, #0xd8
	lsl		r3, r3, #0x1
	add		r0, r4, r3
_08019046:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08019046
	mov		r2, #0x0
	mov		r1, #0xda
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	strh	r2, [r0, #0x0]
	mov		r3, #0xdb
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	strh	r2, [r0, #0x0]
	mov		r0, #0xdc
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	mov		r1, #0xde
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	str		r2, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0801907c:	.4byte 0x080e09a4
_08019080:	.4byte 0x080e0bd4

.incbin "base.gba", 0x19084, 0xAC
	thumb_func_end sub_0801902c

	thumb_func_start sub_08019130
sub_08019130:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	add		r0, r4, #0x0
	add		r0, #0x58
	bl		sub_0801deb0
	ldr		r0, _0801922c
	str		r0, [r4, #0x4c]
	ldr		r0, _08019230
	str		r0, [r4, #0xc]
	add		r5, r4, #0x0
	add		r5, #0x5c
	mov		r0, #0x0
	strh	r0, [r5, #0x0]
	ldr		r6, _08019234
	add		r0, r6, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08019176
	add		r0, r6, #0x0
	bl		sub_0800223c
	mov		r1, #0x1
	strh	r1, [r5, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
_08019176:
	ldr		r6, _08019238
	add		r0, r6, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08019196
	add		r0, r6, #0x0
	bl		sub_0800223c
	mov		r0, #0x1
	strh	r0, [r5, #0x0]
	mov		r0, #0x94
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
_08019196:
	ldr		r0, _0801923c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080191ae
	mov		r0, #0x5
	strh	r0, [r5, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
_080191ae:
	mov		r0, #0x90
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080191c8
	mov		r0, #0x5
	strh	r0, [r5, #0x0]
	mov		r0, #0x94
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
_080191c8:
	ldr		r0, _08019240
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080191e0
	mov		r0, #0x5
	strh	r0, [r5, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
_080191e0:
	ldr		r0, _08019244
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080191f6
	mov		r1, #0x5
	strh	r1, [r5, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
_080191f6:
	ldr		r0, _08019248
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801920c
	mov		r1, #0x5
	strh	r1, [r5, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
_0801920c:
	ldr		r0, _0801924c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08019222
	mov		r1, #0x5
	strh	r1, [r5, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
_08019222:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1922A, 0x2

_0801922c:	.4byte 0x080e0c04
_08019230:	.4byte 0x080e0c1c
_08019234:	.4byte 0x00000902
_08019238:	.4byte 0x00000903
_0801923c:	.4byte 0x00000904
_08019240:	.4byte 0x00000901
_08019244:	.4byte 0x00000905
_08019248:	.4byte 0x00000906
_0801924c:	.4byte 0x00000907
	thumb_func_end sub_08019130

	thumb_func_start sub_08019250
sub_08019250:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r0, #0x5c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0xb
	bls		_0801926c
	b		_080199c8
_0801926c:
	lsl		r0, r0, #0x2
	ldr		r1, _0801927c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x58
	mov		pc, r0

.incbin "base.gba", 0x1927A, 0x2

_0801927c:	.4byte 0x08019280
_08019280:	.4byte 0x080192b0

.incbin "base.gba", 0x19284, 0x2C
	thumb_func_end sub_08019250


.incbin "base.gba", 0x192B0, 0x1DE

_0801948e:

.incbin "base.gba", 0x1948E, 0x62
_080194f0:	.4byte 0x08019508

.incbin "base.gba", 0x194F4, 0x410
_08019904:	.4byte 0x080199a0

.incbin "base.gba", 0x19908, 0x30

_08019938:

.incbin "base.gba", 0x19938, 0xC
_08019944:

.incbin "base.gba", 0x19944, 0xC
_08019950:

.incbin "base.gba", 0x19950, 0xC
_0801995c:

.incbin "base.gba", 0x1995C, 0xC
_08019968:

.incbin "base.gba", 0x19968, 0xC
_08019974:

.incbin "base.gba", 0x19974, 0xC
_08019980:

.incbin "base.gba", 0x19980, 0xC
_0801998c:

.incbin "base.gba", 0x1998C, 0x14
_080199a0:

.incbin "base.gba", 0x199A0, 0x14
_080199b4:

.incbin "base.gba", 0x199B4, 0x14
_080199c8:

.incbin "base.gba", 0x199C8, 0x10
_080199d8:

.incbin "base.gba", 0x199D8, 0x6
_080199de:

.incbin "base.gba", 0x199DE, 0xA
_080199e8:

.incbin "base.gba", 0x199E8, 0x1824
_0801b20c:	.4byte 0x0200B804
_0801b210:	.4byte 0x080d18e4 @ script_tmenu_titlelogo
_0801b214:	.4byte 0x0200B800
_0801b218:	.4byte 0x080d18fc @ script_tmenu_titlemenu
_0801b21c:	.4byte 0x0200B7FC
_0801b220:	.4byte 0x080d1914 @ script_tmenu_present
_0801b224:	.4byte 0x0200B7F8
_0801b228:	.4byte 0x080d192c @ ms_K_help_0000
_0801b22c:	.4byte 0x0200B7F4
_0801b230:	.4byte 0x080d193c @ ms_K_help_0001
_0801b234:	.4byte 0x0200B7F0
_0801b238:	.4byte 0x080d194c @ ms_K_help_0001b
_0801b23c:	.4byte 0x0200B7EC
_0801b240:	.4byte 0x080d195c  @ ms_K_help_0002
_0801b244:	.4byte 0x0200B7E8
_0801b248:	.4byte 0x080d196c @ ms_K_help_0003
_0801b24c:	.4byte 0x0200B7E4
_0801b250:	.4byte 0x080d197c @ ms_K_help_0004
_0801b254:	.4byte 0x0200B7E0
_0801b258:	.4byte 0x080d198c @ ms_K_help_0005
_0801b25c:	.4byte 0x0200B7DC
_0801b260:	.4byte 0x080d199c @ ms_K_help_0006
_0801b264:	.4byte 0x0200B7D8
_0801b268:	.4byte 0x080d19ac @ ms_K_help_0007
_0801b26c:	.4byte 0x0200B7D4
_0801b270:	.4byte 0x080d19bc @ ms_K_help_0008
_0801b274:	.4byte 0x0200B7D0
_0801b278:	.4byte 0x080d19cc @ ms_K_help_0010
_0801b27c:	.4byte 0x0200B7CC
_0801b280:	.4byte 0x080d19dc @ ms_K_help_0011
_0801b284:	.4byte 0x0200B7C8
_0801b288:	.4byte 0x080d19ec @ ms_K_help_0012
_0801b28c:	.4byte 0x0200B7C4
_0801b290:	.4byte 0x080d19fc @ ms_K_help_gameB
_0801b294:	.4byte 0x0200B7C0
_0801b298:	.4byte 0x080d1a0c  @ ms_50_Friends
_0801b29c:	.4byte 0x0200B7BC
_0801b2a0:	.4byte 0x080d1a1c @ ms_K_help_80
_0801b2a4:	.4byte 0x0200B7B8
_0801b2a8:	.4byte 0x080d1a2c @ ms_K_keshite_1
_0801b2ac:	.4byte 0x0200B7B4
_0801b2b0:	.4byte 0x080d1a3c @ ms_K_keshite_2
_0801b2b4:	.4byte 0x0200B7B0
_0801b2b8:	.4byte 0x080d1a4c @ ms_K_keshite_3
_0801b2bc:	.4byte 0x0200B7AC
_0801b2c0:	.4byte 0x080d1a5c @ ms_K_keshite_4
_0801b2c4:	.4byte 0x0200B7A8
_0801b2c8:	.4byte 0x080d1a6c @ ms_K_keshite_5
	thumb_func_start sub_0801b2cc
sub_0801b2cc:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r2, #0x0
	cmp		r1, #0x0
	ble		_0801b2fc
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	add		r5, r6, r0
	add		r4, r1, #0x0
_0801b2de:
	ldr		r0, [r5, #0x0]
	add		r0, r0, r7
	str		r0, [r5, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0801b2de
_0801b2fc:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1B302, 0x7EE

_0801baf0:	.4byte 0x0801bb04

.incbin "base.gba", 0x1BAF4, 0x10
	thumb_func_end sub_0801b2cc


.incbin "base.gba", 0x1BB04, 0x120
_0801bc24:	.4byte 0x0801bc38

.incbin "base.gba", 0x1BC28, 0x748
_0801c370:	.4byte 0x0200B83C
_0801c374:	.4byte 0x080d1a88 @ ms_langslct_J
_0801c378:	.4byte 0x0200B838
_0801c37c:	.4byte 0x080d1a98 @ ms_langslct_E
_0801c380:	.4byte 0x0200B834
_0801c384:	.4byte 0x080d1aa8 @ ms_langslct_F
_0801c388:	.4byte 0x0200B830
_0801c38c:	.4byte 0x080d1ab8 @ ms_langslct_G1
_0801c390:	.4byte 0x0200B82C
_0801c394:	.4byte 0x080d1ac8 @ ms_langslct_I
_0801c398:	.4byte 0x0200B828
_0801c39c:	.4byte 0x080d1ad8 @ ms_langslct_S
_0801c3a0:	.4byte 0x0200B824
_0801c3a4:	.4byte 0x080d1ae8 @ ms_lang_Japanese
_0801c3a8:	.4byte 0x0200B820
_0801c3ac:	.4byte 0x080d1afc @ ms_lang_English
_0801c3b0:	.4byte 0x0200B81C
_0801c3b4:	.4byte 0x080d1b0c @ ms_lang_French
_0801c3b8:	.4byte 0x0200B818
_0801c3bc:	.4byte 0x080d1b1c @ ms_lang_German
_0801c3c0:	.4byte 0x0200B814
_0801c3c4:	.4byte 0x080d1b2c @ ms_lang_Italian
_0801c3c8:	.4byte 0x0200B810
_0801c3cc:	.4byte 0x080d1b3c @ ms_lang_Spanish
_0801c3d0:	.4byte 0x0200B80C
_0801c3d4:	.4byte 0x080d1b4c @ ms_K_option_019
_0801c3d8:	.4byte 0x0200B808
_0801c3dc:	.4byte 0x080d1b5c @ ms_K_option_020

	thumb_func_start sub_0801c3e0
sub_0801c3e0:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	add		r0, r2, #0x0
	ldr		r1, [sp, #0x10]
	ldr		r4, [sp, #0x14]
	lsl		r3, r3, #0x10
	lsr		r6, r3, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	str		r0, [r5, #0x0]
	strh	r6, [r5, #0x4]
	strh	r1, [r5, #0x6]
	strh	r4, [r5, #0x8]
	mov		r1, #0x0
	bl		sub_0800f2c8
	bl		sub_0800f288
	add		r3, r0, #0x0
	mov		r0, #0xf
	and		r0, r4
	cmp		r0, #0x1
	beq		_0801c422
	cmp		r0, #0x1
	bgt		_0801c418
	cmp		r0, #0x0
	beq		_0801c41e
	b		_0801c438
_0801c418:
	cmp		r0, #0x2
	beq		_0801c42a
	b		_0801c438
_0801c41e:
	strh	r6, [r5, #0xa]
	b		_0801c438
_0801c422:
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x10
	sub		r0, r0, r3
	b		_0801c436
_0801c42a:
	lsr		r1, r3, #0x1f
	add		r1, r3, r1
	asr		r1, r1, #0x1
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x10
	sub		r0, r0, r1
_0801c436:
	strh	r0, [r5, #0xa]
_0801c438:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1C43E, 0x92
	thumb_func_end sub_0801c3e0

	thumb_func_start sub_0801c4d0
sub_0801c4d0:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	mov		r0, #0x4
	bl		sub_08016be8
	add		r0, r5, #0x0
	add		r0, #0x48
	mov		r1, #0x1
	bl		sub_08018e6c
	ldr		r4, _0801c54c
	add		r0, r4, #0x0
	mov		r1, #0x24
	bl		sub_08008df4
	ldrh	r1, [r0, #0x1a]
	add		r0, r5, #0x0
	add		r0, #0x7c
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xd
	bl		sub_08008df4
	ldrh	r0, [r0, #0x1a]
	add		r1, r5, #0x0
	add		r1, #0x7e
	strh	r0, [r1, #0x0]
	mov		r4, #0x0
	ldr		r6, _0801c550
	add		r7, r5, #0x0
	add		r7, #0x50
_0801c50e:
	add		r1, r4, #0x2
	ldr		r0, [r6, #0x0]
	bl		sub_0800bcd0
	stmia	r7!, { r0 }
	add		r4, #0x1
	cmp		r4, #0x8
	ble		_0801c50e
	ldr		r0, [r6, #0x0]
	mov		r1, #0xc
	bl		sub_0800bcd0
	str		r0, [r5, #0x78]
	mov		r4, #0x90
	lsl		r4, r4, #0x4
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0801c544
	ldr		r4, _0801c554
	add		r0, r4, #0x0
	bl		sub_0800227c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0801c558
_0801c544:
	add		r0, r4, #0x0
	bl		sub_0800223c
	b		_0801c55c

_0801c54c:	.4byte 0x02009E1C
_0801c550:	.4byte 0x080d1cd4
_0801c554:	.4byte 0x00000901

_0801c558:
	ldr		r0, _0801c594
	strh	r1, [r0, #0x0]
_0801c55c:
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r0, r5, #0x0
	bl		sub_0801cc50
	add		r0, r5, #0x0
	bl		sub_0801ccf0
	add		r0, r5, #0x0
	add		r0, #0x4c
	ldr		r3, _0801c598
	mov		r1, #0x8
	add		r2, r3, #0x0
	bl		sub_08016cb0
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x1
	bl		sub_08016b70
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1C592, 0x2

_0801c594:	.4byte 0x0200B854
_0801c598:	.4byte 0xFFFFC000
	thumb_func_end sub_0801c4d0

	thumb_func_start sub_0801c59c
sub_0801c59c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	bl		sub_0801c4d0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x10
	ldr		r0, _0801c608
	mov		r10, r0
	ldr		r1, _0801c60c
	mov		r9, r1
	ldr		r2, _0801c610
	mov		r8, r2
	ldr		r7, _0801c614
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_0801c5cc:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_0801c5d4
	add		r0, #0xf
_0801c5d4:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0801c5cc
	add		r3, r6, #0x0
	add		r3, #0x40
	str		r3, [sp, #0x0]
	mov		r0, #0x80
	add		r0, r0, r6
	mov		r8, r0
	b		_0801c822

.incbin "base.gba", 0x1C606, 0x2

_0801c608:	.4byte 0x0200EB24
_0801c60c:	.4byte 0x0200EB1E
_0801c610:	.4byte 0x0200EB20
_0801c614:	.4byte 0x0200EB22

_0801c618:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_0801c626
	b		_0801c74c
_0801c626:
	mov		r0, #0x55
	bl		sub_08016b44
	add		r0, r6, #0x0
	bl		sub_0801c914
	cmp		r0, #0x0
	beq		_0801c63c
	cmp		r0, #0x1
	beq		_0801c6c8
	b		_0801c822
_0801c63c:
	ldr		r1, _0801c6a8
	mov		r10, r1
	ldr		r2, _0801c6ac
	mov		r9, r2
	ldr		r3, _0801c6b0
	mov		r8, r3
	ldr		r7, _0801c6b4
	mov		r5, #0x0
	mov		r4, #0x1e
_0801c64e:
	add		r0, r5, #0x0
	mov		r1, #0x1e
	bl		sub_080bbcac
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0801c64e
	ldr		r2, _0801c6b8
	ldr		r0, _0801c6bc
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r2, #0x4
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08002268
	ldr		r0, _0801c6c0
	bl		sub_0800223c
	ldr		r0, _0801c6c4
	bl		sub_0800223c
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x4
	bl		sub_080004e8
	b		_0801c898

_0801c6a8:	.4byte 0x0200EB24
_0801c6ac:	.4byte 0x0200EB1E
_0801c6b0:	.4byte 0x0200EB20
_0801c6b4:	.4byte 0x0200EB22
_0801c6b8:	.4byte 0x080d1b6c
_0801c6bc:	.4byte 0x0200B854
_0801c6c0:	.4byte 0x00000282
_0801c6c4:	.4byte 0x00000283

_0801c6c8:
	ldr		r0, _0801c734
	mov		r10, r0
	ldr		r1, _0801c738
	mov		r9, r1
	ldr		r2, _0801c73c
	mov		r8, r2
	ldr		r7, _0801c740
	mov		r5, #0x0
	mov		r4, #0x10
_0801c6da:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_0801c6e2
	add		r0, #0xf
_0801c6e2:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0801c6da
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r2, _0801c744
	ldr		r0, _0801c748
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r2, #0x4
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08002268
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x5
	bl		sub_080004e8
	b		_0801c898

_0801c734:	.4byte 0x0200EB24
_0801c738:	.4byte 0x0200EB1E
_0801c73c:	.4byte 0x0200EB20
_0801c740:	.4byte 0x0200EB22
_0801c744:	.4byte 0x080d1b6c
_0801c748:	.4byte 0x0200B854

_0801c74c:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0801c79a
	mov		r0, #0x54
	bl		sub_08016b44
	ldr		r1, _0801c770
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	ble		_0801c774
	sub		r0, r2, #0x1
	b		_0801c776

.incbin "base.gba", 0x1C76E, 0x2

_0801c770:	.4byte 0x0200B854

_0801c774:
	mov		r0, #0xe
_0801c776:
	strh	r0, [r1, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0xa
	mov		r0, #0x10
	mov		r2, r8
	strh	r0, [r2, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x84
	str		r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0801ccf0
	ldr		r1, [r6, #0x60]
	add		r0, r6, #0x0
	add		r0, #0x7c
	ldrh	r0, [r0, #0x0]
	add		r1, #0xf2
	strb	r0, [r1, #0x0]
_0801c79a:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0801c7e4
	mov		r0, #0x54
	bl		sub_08016b44
	ldr		r1, _0801c7bc
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0xd
	bgt		_0801c7c0
	add		r0, r2, #0x1
	b		_0801c7c2

_0801c7bc:	.4byte 0x0200B854

_0801c7c0:
	mov		r0, #0x0
_0801c7c2:
	strh	r0, [r1, #0x0]
	mov		r0, #0x10
	mov		r1, r8
	strh	r0, [r1, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x84
	ldr		r0, _0801c8f0
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0801ccf0
	ldr		r1, [r6, #0x60]
	add		r0, r6, #0x0
	add		r0, #0x7c
	ldrh	r0, [r0, #0x0]
	add		r1, #0xf2
	strb	r0, [r1, #0x0]
_0801c7e4:
	mov		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	ble		_0801c822
	mov		r7, #0x8e
	lsl		r7, r7, #0x1
	add		r4, r6, #0x0
	add		r4, #0x84
	add		r5, r6, #0x0
	add		r5, #0x50
	mov		r3, #0x8
_0801c7fc:
	ldmia	r5!, { r0 }
	add		r0, r0, r7
	ldr		r1, [r0, #0x0]
	ldr		r2, [r4, #0x0]
	add		r1, r1, r2
	str		r1, [r0, #0x0]
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0801c7fc
	mov		r1, r8
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0801c822
	add		r0, r6, #0x0
	bl		sub_0801cc50
_0801c822:
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	bne		_0801c7e4
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_0801c840
	b		_0801c618
_0801c840:
	mov		r0, #0x56
	bl		sub_08016b44
	ldr		r0, _0801c8f4
	mov		r10, r0
	ldr		r1, _0801c8f8
	mov		r9, r1
	ldr		r2, _0801c8fc
	mov		r8, r2
	ldr		r7, _0801c900
	mov		r5, #0x0
	mov		r4, #0x10
_0801c858:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_0801c860
	add		r0, #0xf
_0801c860:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0801c858
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_0801c898:
	ldr		r0, _0801c904
	mov		r3, #0x1
	neg		r3, r3
	mov		r8, r3
	add		r7, r0, #0x0
	add		r7, #0x8
	mov		r5, #0xe
_0801c8a6:
	ldr		r4, [r7, #0x0]
	cmp		r4, r8
	beq		_0801c8bc
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801c8bc
	add		r0, r4, #0x0
	bl		sub_0800223c
_0801c8bc:
	add		r7, #0x18
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0801c8a6
	ldr		r4, _0801c908
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0801c8dc
	ldr		r0, _0801c90a
	ldr		r1, _0801c910
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0801c8dc:
	add		r0, r4, #0x0
	sub		r0, #0xc
	bl		sub_08002fd8
_0801c8e4:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0801c8e4

.incbin "base.gba", 0x1C8EE, 0x2

_0801c8f0:	.4byte 0xFFFD8000
_0801c8f4:	.4byte 0x0200EB24
_0801c8f8:	.4byte 0x0200EB1E
_0801c8fc:	.4byte 0x0200EB20
_0801c900:	.4byte 0x0200EB22
_0801c904:	.4byte 0x080d1b6c
_0801c908:	.4byte 0x02000BB8
_0801c90a:	.4byte 0x080d1cd8 @ k_koyano/TitleMenu/TMenuFreePlay
_0801c910:	.4byte 0x00000101
	thumb_func_end sub_0801c59c

	thumb_func_start sub_0801c914
sub_0801c914:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r9, r0
	b		_0801cb42
_0801c924:
	ldr		r0, [r6, #0x0]
	ldr		r5, _0801c98c
	ldr		r2, [r5, #0x0]
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	ldr		r4, _0801c990
	str		r4, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r6, #0x0]
	ldr		r2, [r5, #0x0]
	str		r7, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x1
	bl		sub_080189f8
	ldr		r0, [r6, #0x0]
	ldr		r2, [r5, #0x0]
	str		r7, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x2
	bl		sub_080189f8
	mov		r0, #0x0
	mov		r10, r0
	ldr		r5, _0801c994
	ldr		r6, [r5, #0x0]
	ldr		r4, _0801c998
	ldr		r1, [r4, #0x0]
	mov		r8, r1
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r6, #0x0
	add		r1, #0xc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801c99c
	mov		r10, r7
	b		_0801c9de

_0801c98c:	.4byte 0x0200B844
_0801c990:	.4byte 0xFFFF8001
_0801c994:	.4byte 0x080d1d00
_0801c998:	.4byte 0x080d1d04

_0801c99c:
	mov		r0, r8
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r6, #0x0
	add		r1, #0x10
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801c9be
	mov		r0, #0x1
	mov		r10, r0
	b		_0801c9de
_0801c9be:
	mov		r2, r8
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r6, #0x0
	add		r1, #0x14
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801c9de
	mov		r1, #0x2
	mov		r10, r1
_0801c9de:
	ldr		r4, _0801ca64
	ldr		r0, [r4, #0x0]
	ldr		r3, _0801ca68
	str		r3, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	bl		sub_08018668
	ldr		r0, [r4, #0x0]
	mov		r1, r10
	mov		r2, #0x3
	str		r2, [sp, #0x0]
	mov		r2, #0x1
	str		r2, [sp, #0x4]
	mov		r3, #0x3
	bl		sub_08018f6c
	ldr		r0, [r4, #0x0]
	bl		sub_08018988
	ldr		r0, [r4, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, _0801ca6c
	cmp		r1, r0
	bne		_0801ca36
	add		r6, r4, #0x0
	add		r4, r1, #0x0
_0801ca20:
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r6, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, r4
	beq		_0801ca20
_0801ca36:
	ldr		r4, _0801ca64
	ldr		r0, [r4, #0x0]
	bl		sub_08018fcc
	mov		r0, r9
	bl		sub_080b7690
	mov		r0, r9
	bl		sub_0801ccf0
	ldr		r0, [r4, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x1
	beq		_0801cab0
	cmp		r0, #0x1
	bgt		_0801ca70
	cmp		r0, #0x0
	beq		_0801ca76
	b		_0801cb42

_0801ca64:	.4byte 0x0200B7A4
_0801ca68:	.4byte 0xFFFF8001
_0801ca6c:	.4byte 0xFFFF8080

_0801ca70:
	cmp		r0, #0x2
	beq		_0801cafc
	b		_0801cb42
_0801ca76:
	ldr		r5, [r5, #0x0]
	ldr		r4, _0801caac
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0xc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_08002268
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0x10
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0800223c
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	b		_0801cae4

_0801caac:	.4byte 0x0200B854

_0801cab0:
	ldr		r5, [r5, #0x0]
	ldr		r4, _0801caf8
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0xc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0800223c
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0x10
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_08002268
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
_0801cae4:
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0x14
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0800223c
	b		_0801cb42

_0801caf8:	.4byte 0x0200B854

_0801cafc:
	ldr		r5, [r5, #0x0]
	ldr		r4, _0801cc30
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0xc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0800223c
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0x10
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0800223c
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0x14
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_08002268
_0801cb42:
	ldr		r6, _0801cc34
	ldr		r0, [r6, #0x0]
	ldr		r1, _0801cc38
	ldr		r2, [r1, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	ldr		r5, _0801cc3c
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r6, #0x0]
	ldr		r1, _0801cc40
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r6, #0x0]
	ldr		r1, _0801cc44
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r6, #0x0]
	ldr		r1, _0801cc48
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r6, #0x0]
	str		r5, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	add		r3, r5, #0x0
	bl		sub_08018668
	ldr		r0, [r6, #0x0]
	mov		r1, #0x4
	str		r1, [sp, #0x0]
	mov		r1, #0x1
	str		r1, [sp, #0x4]
	mov		r1, #0x0
	mov		r2, #0x1
	mov		r3, #0x4
	bl		sub_08018f6c
	ldr		r0, [r6, #0x0]
	bl		sub_08018988
	ldr		r0, [r6, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, _0801cc4c
	cmp		r1, r0
	bne		_0801cbf0
	add		r5, r6, #0x0
	add		r4, r1, #0x0
_0801cbda:
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, r4
	beq		_0801cbda
_0801cbf0:
	ldr		r6, _0801cc34
	ldr		r0, [r6, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	mov		r2, #0x0
	ldrsh	r4, [r1, r2]
	bl		sub_08018fcc
	mov		r0, r9
	bl		sub_080b7690
	mov		r0, r9
	bl		sub_0801ccf0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	bne		_0801cc18
	mov		r4, #0x3
_0801cc18:
	cmp		r4, #0x2
	bne		_0801cc1e
	b		_0801c924
_0801cc1e:
	add		r0, r4, #0x0
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0801cc30:	.4byte 0x0200B854
_0801cc34:	.4byte 0x0200B7A4
_0801cc38:	.4byte 0x0200B850
_0801cc3c:	.4byte 0xFFFF8001
_0801cc40:	.4byte 0x0200B84C
_0801cc44:	.4byte 0x0200B848
_0801cc48:	.4byte 0x0200B840
_0801cc4c:	.4byte 0xFFFF8080
	thumb_func_end sub_0801c914

	thumb_func_start sub_0801cc50
sub_0801cc50:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r8, r0
	ldr		r0, _0801cce0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	sub		r5, r0, #0x4
	cmp		r5, #0x0
	bge		_0801cc6c
	add		r5, #0xf
_0801cc6c:
	mov		r2, #0x7c
	add		r2, r8
	mov		r9, r2
	mov		r3, #0x7e
	add		r3, r8
	mov		r10, r3
	ldr		r1, _0801cce4
	mov		r6, r8
	add		r6, #0x50
	ldr		r2, _0801cce8
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	lsl		r0, r0, #0x3
	add		r4, r0, r1
	mov		r7, #0x8
_0801cc8a:
	cmp		r5, #0xe
	ble		_0801cc94
	ldr		r0, _0801ccec
	add		r4, r4, r0
	sub		r5, #0xf
_0801cc94:
	ldr		r0, [r6, #0x0]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r1, r0, r3
	str		r2, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	str		r2, [sp, #0x0]
	bl		sub_08017f70
	ldmia	r6!, { r0 }
	mov		r3, r9
	ldrh	r1, [r3, #0x0]
	add		r0, #0xf2
	strb	r1, [r0, #0x0]
	ldr		r2, [sp, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0xe
	add		r2, r2, r0
	sub		r7, #0x1
	add		r4, #0x18
	add		r5, #0x1
	cmp		r7, #0x0
	bge		_0801cc8a
	mov		r1, r8
	ldr		r0, [r1, #0x60]
	mov		r2, r10
	ldrh	r1, [r2, #0x0]
	add		r0, #0xf2
	strb	r1, [r0, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1CCDE, 0x2

_0801cce0:	.4byte 0x0200B854
_0801cce4:	.4byte 0x080d1b6c
_0801cce8:	.4byte 0xFFD80000
_0801ccec:	.4byte 0xFFFFFE98
	thumb_func_end sub_0801cc50

	thumb_func_start sub_0801ccf0
sub_0801ccf0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r4, _0801cd58
	ldr		r7, _0801cd5c
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	ldr		r6, [r0, #0x0]
	ldr		r0, _0801cd60
	mov		r1, #0xb
	bl		sub_0800bcd0
	str		r0, [r5, #0x74]
	add		r1, r6, #0x0
	bl		sub_08017f30
	mov		r0, #0x0
	bl		sub_08017ce0
	mov		r1, #0x0
	mov		r8, r1
	str		r1, [sp, #0x0]
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x4
	mov		r3, #0x6
	bl		sub_08016f60
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r4, #0x8
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0801cd64
	ldr		r0, [r5, #0x78]
	add		r0, #0x5c
	mov		r1, r8
	strb	r1, [r0, #0x0]
	b		_0801cd98

.incbin "base.gba", 0x1CD56, 0x2

_0801cd58:	.4byte 0x080d1b6c
_0801cd5c:	.4byte 0x0200B854
_0801cd60:	.4byte 0x0200A26C

_0801cd64:
	ldr		r0, [r5, #0x78]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801cd8e
	ldr		r0, [r5, #0x78]
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_08017d20
	b		_0801cd98
_0801cd8e:
	ldr		r0, [r5, #0x78]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
_0801cd98:
	mov		r0, #0x1
	bl		sub_08017ce0
	add		r0, r6, #0x0
	sub		r0, #0x8
	cmp		r0, #0xb
	bhi		_0801cde4
	lsl		r0, r0, #0x2
	ldr		r1, _0801cdb0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0801cdb0:	.4byte 0x0801cdb4

.incbin "base.gba", 0x1CDB4, 0x30

_0801cde4:
	ldr		r0, _0801ce1c
	bl		sub_0800f354
	add		r4, r0, #0x0
	mov		r0, #0x1
	mov		r1, #0x1
	bl		sub_0801783c
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0x1
	add		r1, r4, #0x0
	mov		r2, #0x6
	mov		r3, #0x16
	bl		sub_08017be0
	mov		r0, #0x1
	mov		r1, #0x7
	bl		sub_0801783c
	sub		r0, r6, #0x5
	cmp		r0, #0xe
	bhi		_0801ce60
	lsl		r0, r0, #0x2
	ldr		r1, _0801ce20
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0801ce1c:	.4byte 0x080d1d08 @ ms_K_best_score
_0801ce20:	.4byte 0x0801ce24

.incbin "base.gba", 0x1CE24, 0x3C

_0801ce60:
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	add		r1, r6, #0x0
	mov		r2, #0x2
	mov		r3, #0x90
	bl		sub_08017094
	mov		r0, #0x16
	str		r0, [sp, #0x0]
	mov		r0, #0x1
	str		r0, [sp, #0x4]
	add		r1, r6, #0x0
	mov		r2, #0x1
	mov		r3, #0x90
	bl		sub_08017094
	add		sp, #0x8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1CE8E, 0x2
	push	{ r4, lr }
	ldr		r4, _0801cecc
	ldr		r0, _0801ced0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801ced4
	ldr		r0, _0801ced8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801cedc
	ldr		r0, _0801cee0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801cee4
	ldr		r0, _0801cee8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801ceec
	ldr		r0, _0801cef0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1CECA, 0x2

_0801cecc:	.4byte 0x0200B850
_0801ced0:	.4byte 0x080d1d18 @ ms_freeplay_00
_0801ced4:	.4byte 0x0200B84C
_0801ced8:	.4byte 0x080d1d28 @ ms_freeplay_01
_0801cedc:	.4byte 0x0200B848
_0801cee0:	.4byte 0x080d1d38 @ ms_freeplay_02
_0801cee4:	.4byte 0x0200B844
_0801cee8:	.4byte 0x080d1d48 @ ms_freeplay_03
_0801ceec:	.4byte 0x0200B840
_0801cef0:	.4byte 0x080d1d58 @ ms_freeplay_04
	thumb_func_end sub_0801ccf0

	thumb_func_start sub_0801cef4
sub_0801cef4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	add		r1, r4, #0x0
	bl		sub_080004f4
	ldr		r0, _0801cf28
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x4c
	bl		sub_08016d24
	add		r0, r5, #0x0
	add		r0, #0x80
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0801cf28:	.4byte 0x080e0c84
	thumb_func_end sub_0801cef4

	thumb_func_start sub_0801cf2c
sub_0801cf2c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x68
	ldr		r0, _0801cfc0
	ldr		r1, _0801cfc4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0801cfd8
	mov		r0, sp
	bl		sub_08018420
	mov		r0, sp
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, _0801cfc8
	cmp		r1, r0
	bne		_0801cfd8
	mov		r0, sp
	add		r0, #0x2
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r0, #0x1
	bne		_0801cfd8
	add		r0, sp, #0x4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x1
	bne		_0801cfd8
	add		r0, sp, #0x24
	bl		sub_080184c0
	mov		r5, #0x0
	add		r2, sp, #0x8
	mov		r8, r2
	mov		r7, #0x9
	add		r7, sp
	mov		r9, r7
	ldr		r6, _0801cfcc
_0801cf7e:
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r2, r0, #0x0
	add		r1, r2, #0x1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	add		r2, r2, r0
	mov		r0, r8
	bl		sub_0808ec54
	mov		r3, #0x0
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	cmp		r3, r0
	bge		_0801cfbc
	add		r4, r0, #0x0
	mov		r2, sp
	add		r2, #0xa
	add		r1, sp, #0x28
_0801cfaa:
	ldrh	r0, [r1, #0x0]
	ldrh	r7, [r2, #0x0]
	cmp		r0, r7
	bne		_0801cfd0
	add		r2, #0x2
	add		r1, #0x4
	add		r3, #0x1
	cmp		r3, r4
	blt		_0801cfaa
_0801cfbc:
	add		r0, r5, #0x0
	b		_0801cfdc

_0801cfc0:	.4byte 0x02000BAC
_0801cfc4:	.4byte 0x0000042D
_0801cfc8:	.4byte 0x000007D4
_0801cfcc:	.4byte 0x0200D230

_0801cfd0:
	add		r6, #0x4
	add		r5, #0x1
	cmp		r5, #0x13
	ble		_0801cf7e
_0801cfd8:
	mov		r0, #0x1
	neg		r0, r0
_0801cfdc:
	add		sp, #0x68
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1CFEA, 0x3E6
	push	{ r4, lr }
	ldr		r4, _0801d4b4
	ldr		r0, _0801d4b8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4bc
	ldr		r0, _0801d4c0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4c4
	ldr		r0, _0801d4c8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4cc
	ldr		r0, _0801d4d0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4d4
	ldr		r0, _0801d4d8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4dc
	ldr		r0, _0801d4e0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4e4
	ldr		r0, _0801d4e8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4ec
	ldr		r0, _0801d4f0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4f4
	ldr		r0, _0801d4f8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d4fc
	ldr		r0, _0801d500
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d504
	ldr		r0, _0801d508
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d50c
	ldr		r0, _0801d510
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d514
	ldr		r0, _0801d518
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d51c
	ldr		r0, _0801d520
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d524
	ldr		r0, _0801d528
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d52c
	ldr		r0, _0801d530
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d534
	ldr		r0, _0801d538
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d53c
	ldr		r0, _0801d540
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d544
	ldr		r0, _0801d548
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d54c
	ldr		r0, _0801d550
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d554
	ldr		r0, _0801d558
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801d55c
	ldr		r0, _0801d560
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0801d4b4:	.4byte 0x0200B8AC
_0801d4b8:	.4byte 0x080d1d88 @ ms_present_ERR
_0801d4bc:	.4byte 0x0200B8A8
_0801d4c0:	.4byte 0x080d1d98 @ ms_present_Reset
_0801d4c4:	.4byte 0x0200B8A4
_0801d4c8:	.4byte 0x080d1dac @ ms_K_wa_00
_0801d4cc:	.4byte 0x0200B8A0
_0801d4d0:	.4byte 0x080d1db8  @ ms_K_wa_01
_0801d4d4:	.4byte 0x0200B89C
_0801d4d8:	.4byte 0x080d1dc4  @ ms_K_wa_02
_0801d4dc:	.4byte 0x0200B898
_0801d4e0:	.4byte 0x080d1dd0  @ ms_K_wa_03
_0801d4e4:	.4byte 0x0200B894
_0801d4e8:	.4byte 0x080d1ddc  @ ms_K_wa_04
_0801d4ec:	.4byte 0x0200B890
_0801d4f0:	.4byte 0x080d1de8  @ ms_K_wa_05
_0801d4f4:	.4byte 0x0200B88C
_0801d4f8:	.4byte 0x080d1df4  @ ms_K_wa_06
_0801d4fc:	.4byte 0x0200B888
_0801d500:	.4byte 0x080d1e00  @ ms_K_wa_07
_0801d504:	.4byte 0x0200B884
_0801d508:	.4byte 0x080d1e0c  @ ms_K_wa_08
_0801d50c:	.4byte 0x0200B880
_0801d510:	.4byte 0x080d1e18  @ ms_K_wa_09
_0801d514:	.4byte 0x0200B87C
_0801d518:	.4byte 0x080d1e24  @ ms_K_wa_10
_0801d51c:	.4byte 0x0200B878
_0801d520:	.4byte 0x080d1e30  @ ms_K_wa_11
_0801d524:	.4byte 0x0200B874
_0801d528:	.4byte 0x080d1e3c  @ ms_K_wa_12
_0801d52c:	.4byte 0x0200B870
_0801d530:	.4byte 0x080d1e48  @ ms_K_wa_13
_0801d534:	.4byte 0x0200B86C
_0801d538:	.4byte 0x080d1e54  @ ms_K_wa_14
_0801d53c:	.4byte 0x0200B868
_0801d540:	.4byte 0x080d1e60  @ ms_K_wa_15
_0801d544:	.4byte 0x0200B864
_0801d548:	.4byte 0x080d1e6c  @ ms_K_wa_16
_0801d54c:	.4byte 0x0200B860
_0801d550:	.4byte 0x080d1e78  @ ms_K_wa_17
_0801d554:	.4byte 0x0200B85C
_0801d558:	.4byte 0x080d1e84  @ ms_K_wa_18
_0801d55c:	.4byte 0x0200B858
_0801d560:	.4byte 0x080d1e90  @ ms_K_wa_19
	thumb_func_end sub_0801cf2c

	thumb_func_start sub_0801d564
sub_0801d564:
	push	{ r4, r5, lr }
	sub		sp, #0x84
	add		r5, r0, #0x0
	mov		r0, #0x0
	bl		sub_08017ce0
	ldr		r1, _0801d5b0
	mov		r4, #0x2
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x78
	mov		r3, #0x0
	bl		sub_08017998
	ldr		r1, _0801d5b4
	ldr		r2, [r5, #0x48]
	add		r0, sp, #0x4
	bl		sub_0808c63c
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	add		r1, sp, #0x4
	mov		r2, #0x78
	mov		r3, #0x18
	bl		sub_08017998
	ldr		r0, _0801d5b8
	ldr		r1, [r0, #0x0]
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x78
	mov		r3, #0x38
	bl		sub_08017ae8
	add		sp, #0x84
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0801d5b0:	.4byte 0x080d1d6c @ PRESENT-MODE
_0801d5b4:	.4byte 0x080d1d7c @ SET-%02d
_0801d5b8:	.4byte 0x0200B8A8
	thumb_func_end sub_0801d564

	thumb_func_start sub_0801d5bc
sub_0801d5bc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	bl		sub_0801cf2c
	str		r0, [r5, #0x48]
	mov		r0, #0x6
	bl		sub_08016be8
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x3
	bl		sub_08018e6c
	add		r0, r5, #0x0
	add		r0, #0x44
	add		r1, r5, #0x0
	mov		r2, #0x2
	bl		sub_0801de54
	ldr		r6, _0801d5e8
	b		_0801d5f2

.incbin "base.gba", 0x1D5E6, 0x2

_0801d5e8:	.4byte 0x080d1e9c

_0801d5ec:
	add		r0, r5, #0x0
	bl		sub_080b7690
_0801d5f2:
	add		r4, r5, #0x0
	add		r4, #0x44
	add		r0, r4, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_0801d5ec
	add		r0, r4, #0x0
	bl		sub_0801ddc4
	add		r0, r4, #0x0
	bl		sub_0801de20
	b		_0801d614
_0801d60e:
	add		r0, r5, #0x0
	bl		sub_080b7690
_0801d614:
	add		r0, r4, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_0801d60e
	ldr		r0, [r6, #0x0]
	mov		r1, #0x0
	bl		sub_0800bcd0
	str		r0, [r5, #0x4c]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0801d564
	mov		r0, #0x88
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1D64A, 0x2CA
	thumb_func_end sub_0801d5bc

	thumb_func_start sub_0801d914
sub_0801d914:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x68]
	cmp		r0, #0x0
	beq		_0801d972
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0801d942
	ldr		r0, _0801d978
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801d942
	ldr		r0, [r4, #0x68]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r4, #0x68]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
_0801d942:
	ldr		r1, [r4, #0x68]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_0801d972
	ldr		r0, _0801d97c
	mov		r2, #0xf8
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x32
	bne		_0801d972
	add		r0, r1, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r4, #0x68]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
_0801d972:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0801d978:	.4byte 0x0000093F
_0801d97c:	.4byte 0x02000BAC
	thumb_func_end sub_0801d914

	thumb_func_start sub_0801d980
sub_0801d980:
	push	{ r4, lr }
	ldr		r4, _0801da8c
	ldr		r0, _0801da90
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801da94
	ldr		r0, _0801da98
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801da9c
	ldr		r0, _0801daa0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801daa4
	ldr		r0, _0801daa8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801daac
	ldr		r0, _0801dab0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801dab4
	ldr		r0, _0801dab8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801dabc
	ldr		r0, _0801dac0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801dac4
	ldr		r0, _0801dac8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801dacc
	ldr		r0, _0801dad0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801dad4
	ldr		r0, _0801dad8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801dadc
	ldr		r0,_0801dae0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801dae4
	ldr		r0, _0801dae8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801daec
	ldr		r0, _0801daf0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801daf4
	ldr		r0, _0801daf8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801dafc
	ldr		r0, _0801db00
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db04
	ldr		r0, _0801db08
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db0c
	ldr		r0, _0801db10
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db14
	ldr		r0, _0801db18
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db1c
	ldr		r0, _0801db20
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db24
	ldr		r0, _0801db28
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db2c
	ldr		r0, _0801db30
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db34
	ldr		r0, _0801db38
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db3c
	ldr		r0, _0801db40
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db44
	ldr		r0, _0801db48
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db4c
	ldr		r0, _0801db50
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801db54
	ldr		r0, _0801db58
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0801da8c:	.4byte 0x0200B914
_0801da90:	.4byte 0x080d1f24 @ ms_comm_menu_0
_0801da94:	.4byte 0x0200B910
_0801da98:	.4byte 0x080d1f34 @ ms_comm_menu_1
_0801da9c:	.4byte 0x0200B90C
_0801daa0:	.4byte 0x080d1f44 @ ms_comm_menu_2
_0801daa4:	.4byte 0x0200B908
_0801daa8:	.4byte 0x080d1f54 @ ms_comm_menu_3
_0801daac:	.4byte 0x0200B904
_0801dab0:	.4byte 0x080d1f64 @ ms_comm_menu_4
_0801dab4:	.4byte 0x0200B900
_0801dab8:	.4byte 0x080d1f74 @ ms_comm_menu_5
_0801dabc:	.4byte 0x0200B8FC
_0801dac0:	.4byte 0x080d1f84 @ ms_comm_menu_6
_0801dac4:	.4byte 0x0200B8F8
_0801dac8:	.4byte 0x080d1f94 @ ms_comm_menu_7
_0801dacc:	.4byte 0x0200B8F4
_0801dad0:	.4byte 0x080d1fa4 @ ms_comm_help_0
_0801dad4:	.4byte 0x0200B8F0
_0801dad8:	.4byte 0x080d1fb4 @ ms_comm_help_1
_0801dadc:	.4byte 0x0200B8EC
_0801dae0:	.4byte 0x080d1fc4 @ ms_comm_help_2
_0801dae4:	.4byte 0x0200B8E8
_0801dae8:	.4byte 0x080d1fd4 @ ms_comm_help_3
_0801daec:	.4byte 0x0200B8E4
_0801daf0:	.4byte 0x080d1fe4 @ ms_comm_help_4
_0801daf4:	.4byte 0x0200B8E0
_0801daf8:	.4byte 0x080d1ff4 @ ms_comm_help_5
_0801dafc:	.4byte 0x0200B8DC
_0801db00:	.4byte 0x080d2004 @ ms_comm_help_6
_0801db04:	.4byte 0x0200B8D8
_0801db08:	.4byte 0x080d2014 @ ms_comm_help_7
_0801db0c:	.4byte 0x0200B8D4
_0801db10:	.4byte 0x080d2024 @ ms_comm_help_8
_0801db14:	.4byte 0x0200B8D0
_0801db18:	.4byte 0x080d2034 @ ms_comm_help_9
_0801db1c:	.4byte 0x0200B8CC
_0801db20:	.4byte 0x080d2044 @ ms_comm_help_10
_0801db24:	.4byte 0x0200B8C8
_0801db28:	.4byte 0x080d2054 @ ms_comm_help_11
_0801db2c:	.4byte 0x0200B8C4
_0801db30:	.4byte 0x080d2064 @ ms_comm_help_12
_0801db34:	.4byte 0x0200B8C0
_0801db38:	.4byte 0x080d2074 @ ms_comm_help_20
_0801db3c:	.4byte 0x0200B8BC
_0801db40:	.4byte 0x080d2084 @ ms_comm_help_21
_0801db44:	.4byte 0x0200B8B8
_0801db48:	.4byte 0x080d2094 @ ms_comm_help_99
_0801db4c:	.4byte 0x0200B8B4
_0801db50:	.4byte 0x080d20a4 @ ms_GW_gameover
_0801db54:	.4byte 0x0200B8B0
_0801db58:	.4byte 0x080d20b4 @ ms_GW_countStop
	thumb_func_end sub_0801d980

	thumb_func_start sub_0801db5c
sub_0801db5c:
	push	{ r4, lr }
	ldr		r0, [r0, #0x6c]
	cmp		r0, #0x0
	beq		_0801db8a
	add		r4, r0, #0x0
	ldr		r0, _0801db7c
	ldr		r0, [r0, #0x0]
	add		r0, #0x6c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0801db80
	bl		sub_080661f4
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	b		_0801db82

_0801db7c:	.4byte 0x0200D280

_0801db80:
	mov		r1, #0x0
_0801db82:
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
_0801db8a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801db5c

	thumb_func_start sub_0801db90
sub_0801db90:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, _0801dbc0
	ldr		r4, [r0, #0x0]
	ldr		r2, [r4, #0x0]
	add		r6, r0, #0x0
	cmp		r2, #0x0
	beq		_0801dbe2
	ldr		r1, [r5, #0x50]
	cmp		r1, #0x0
	bne		_0801dbe2
	mov		r0, #0x1
	str		r0, [r5, #0x50]
	add		r0, r2, #0x0
	add		r0, #0x6e
	strb	r1, [r0, #0x0]
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x14
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0801dbca

.incbin "base.gba", 0x1DBBE, 0x2

_0801dbc0:	.4byte 0x080d20c4

_0801dbc4:
	add		r0, r5, #0x0
	bl		sub_080b7690
_0801dbca:
	ldr		r0, [r4, #0x0]
	add		r0, #0x6e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0801dbc4
	ldr		r4, [r6, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	str		r0, [r5, #0x50]
_0801dbe2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801db90

	thumb_func_start sub_0801dbe8
sub_0801dbe8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r5, _0801dc38
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0801dc32
	ldr		r4, _0801dc3c
	add		r0, r4, #0x0
	mov		r1, #0x70
	mov		r2, #0x90
	lsl		r2, r2, #0x4
	bl		sub_080b73f8
	bl		sub_08064284
	add		r1, r0, #0x0
	str		r1, [r5, #0x0]
	mov		r0, #0x98
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, [r5, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r4, #0x9
_0801dc26:
	sub		r4, #0x1
	add		r0, r6, #0x0
	bl		sub_080b7690
	cmp		r4, #0x0
	bge		_0801dc26
_0801dc32:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0801dc38:	.4byte 0x0200D280
_0801dc3c:	.4byte 0x0200DA00
	thumb_func_end sub_0801dbe8

	thumb_func_start sub_0801dc40
sub_0801dc40:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r7, #0x0
	add		r4, #0x40
	add		r0, r4, #0x0
	bl		sub_08018f30
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_08018e6c
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r5, _0801dca8
	ldr		r0, [r5, #0x0]
	ldr		r4, _0801dcac
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r4, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	add		r2, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	str		r4, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	add		r3, r4, #0x0
	bl		sub_08018668
_0801dc8c:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0801dc8c
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DCA6, 0x2

_0801dca8:	.4byte 0x0200B7A4
_0801dcac:	.4byte 0xFFFF8001
	thumb_func_end sub_0801dc40

	thumb_func_start sub_0801dcb0
sub_0801dcb0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	bl		sub_080b74f4
	ldr		r0, _0801dcd0
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x44]
	str		r6, [r4, #0x48]
	mov		r0, #0x0
	str		r0, [r4, #0x50]
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0801dcd0:	.4byte 0x080e0cd4
	thumb_func_end sub_0801dcb0

	thumb_func_start sub_0801dcd4
sub_0801dcd4:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0801dcf0
	mov		r2, #0x0
	ldr		r1, [r0, #0x4c]
	ldr		r0, _0801dcec
	cmp		r1, r0
	bne		_0801dce8
	mov		r2, #0x1
_0801dce8:
	add		r0, r2, #0x0
	b		_0801dcf2

_0801dcec:	.4byte 0xFFFFF002

_0801dcf0:
	mov		r0, #0x1
_0801dcf2:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1DCF6, 0x2
	thumb_func_end sub_0801dcd4

	thumb_func_start sub_0801dcf8
sub_0801dcf8:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0801dd0a
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0801dd10
	mov		r3, #0x0
	bl		sub_080b7724
_0801dd0a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DD0E, 0x2

_0801dd10:	.4byte 0xFFFFF005
	thumb_func_end sub_0801dcf8

	thumb_func_start sub_0801dd14
sub_0801dd14:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0801dd26
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0801dd2c
	mov		r3, #0x0
	bl		sub_080b7724
_0801dd26:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DD2A, 0x2

_0801dd2c:	.4byte 0xFFFFF204
	thumb_func_end sub_0801dd14

	thumb_func_start sub_0801dd30
sub_0801dd30:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0801dd3e
	str		r1, [r0, #0x6c]
	bl		sub_0801db5c
_0801dd3e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DD42, 0x2
	thumb_func_end sub_0801dd30

	thumb_func_start sub_0801dd44
sub_0801dd44:
	push	{ lr }
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0801dd5e
	str		r1, [r2, #0x68]
	add		r0, r1, #0x0
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r2, #0x68]
	mov		r2, #0x2
	bl		sub_08017d20
_0801dd5e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DD62, 0x12
	thumb_func_end sub_0801dd44

	thumb_func_start sub_0801dd74
sub_0801dd74:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801dd80
	mov		r0, #0x1
	str		r0, [r1, #0x64]
_0801dd80:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801dd74

	thumb_func_start sub_0801dd84
sub_0801dd84:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801dd90
	mov		r0, #0x0
	str		r0, [r1, #0x60]
_0801dd90:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801dd84

	thumb_func_start sub_0801dd94
sub_0801dd94:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801dda0
	mov		r0, #0x1
	str		r0, [r1, #0x60]
_0801dda0:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801dd94

	thumb_func_start sub_0801dda4
sub_0801dda4:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801ddb0
	mov		r0, #0x0
	str		r0, [r1, #0x5c]
_0801ddb0:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801dda4

	thumb_func_start sub_0801ddb4
sub_0801ddb4:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801ddc0
	mov		r0, #0x1
	str		r0, [r1, #0x5c]
_0801ddc0:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801ddb4

	thumb_func_start sub_0801ddc4
sub_0801ddc4:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801ddd0
	mov		r0, #0x0
	str		r0, [r1, #0x58]
_0801ddd0:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801ddc4

	thumb_func_start sub_0801ddd4
sub_0801ddd4:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801dde0
	mov		r0, #0x1
	str		r0, [r1, #0x58]
_0801dde0:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801ddd4

	thumb_func_start sub_0801dde4
sub_0801dde4:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801ddf0
	mov		r0, #0x0
	str		r0, [r1, #0x54]
_0801ddf0:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801dde4

	thumb_func_start sub_0801ddf4
sub_0801ddf4:
	push	{ lr }
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0801de00
	mov		r0, #0x1
	str		r0, [r1, #0x54]
_0801de00:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801ddf4

	thumb_func_start sub_0801de04
sub_0801de04:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0801de16
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0801de1c
	mov		r3, #0x0
	bl		sub_080b7724
_0801de16:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DE1A, 0x2

_0801de1c:	.4byte 0xFFFFF107
	thumb_func_end sub_0801de04

	thumb_func_start sub_0801de20
sub_0801de20:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0801de32
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0801de38
	mov		r3, #0x0
	bl		sub_080b7724
_0801de32:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DE36, 0x2

_0801de38:	.4byte 0xFFFFF100
	thumb_func_end sub_0801de20

	thumb_func_start sub_0801de3c
sub_0801de3c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0801de4e
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r4, #0x0]
_0801de4e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801de3c

	thumb_func_start sub_0801de54
sub_0801de54:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0801de86
	ldr		r4, _0801de8c
	add		r0, r4, #0x0
	mov		r1, #0x74
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	bl		sub_0801dcb0
	add		r1, r0, #0x0
	str		r1, [r5, #0x0]
	add		r4, #0x50
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
_0801de86:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0801de8c:	.4byte 0x0200DA00
	thumb_func_end sub_0801de54

	thumb_func_start sub_0801de90
sub_0801de90:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_0801de3c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0801dea8
	add		r0, r5, #0x0
	bl		sub_0808afac
_0801dea8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DEAE, 0x2
	thumb_func_end sub_0801de90

	thumb_func_start sub_0801deb0
sub_0801deb0:
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x1DEB6, 0x2
	thumb_func_end sub_0801deb0

	thumb_func_start sub_0801deb8
sub_0801deb8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	mov		r0, #0x0
	mov		r9, r0
	ldr		r7, _0801dee4
	ldr		r0, _0801dee8
	mov		r8, r0
	mov		r0, #0x2
	mov		r10, r0
_0801ded4:
	ldr		r0, [r6, #0x48]
	cmp		r0, #0x1
	beq		_0801df38
	cmp		r0, #0x1
	bgt		_0801deec
	cmp		r0, #0x0
	beq		_0801def2
	b		_0801dfc0

_0801dee4:	.4byte 0x0200DA00
_0801dee8:	.4byte 0x80808080

_0801deec:
	cmp		r0, #0x2
	beq		_0801df80
	b		_0801dfc0
_0801def2:
	add		r0, r7, #0x0
	mov		r1, #0x54
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, sp
	bl		sub_0801e880
	add		r4, r0, #0x0
	add		r0, r7, #0x0
	add		r0, #0x50
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, r8
	str		r0, [sp, #0x0]
	ldr		r5, _0801df34
_0801df18:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x0]
	cmp		r0, r5
	beq		_0801df18
	add		r0, r4, #0x0
	bl		sub_080b75b0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bne		_0801dfc6
	str		r0, [r6, #0x48]
	b		_0801dfc0

_0801df34:	.4byte 0x80808080

_0801df38:
	add		r0, r7, #0x0
	mov		r1, #0x60
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, sp
	bl		sub_0801ecf8
	add		r4, r0, #0x0
	add		r0, r7, #0x0
	add		r0, #0x50
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, r8
	str		r0, [sp, #0x0]
	ldr		r5, _0801df7c
_0801df5e:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x0]
	cmp		r0, r5
	beq		_0801df5e
	add		r0, r4, #0x0
	bl		sub_080b75b0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bne		_0801dfc6
	mov		r0, r10
	str		r0, [r6, #0x48]
	b		_0801dfc0

_0801df7c:	.4byte 0x80808080

_0801df80:
	add		r0, r7, #0x0
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x1
	neg		r1, r1
	mov		r2, sp
	bl		sub_0801f2d8
	add		r4, r0, #0x0
	add		r0, r7, #0x0
	add		r0, #0x50
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, r8
	str		r0, [sp, #0x0]
	ldr		r5, _0801dfd8
_0801dfaa:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x0]
	cmp		r0, r5
	beq		_0801dfaa
	add		r0, r4, #0x0
	bl		sub_080b75b0
	mov		r0, #0x1
	mov		r9, r0
_0801dfc0:
	mov		r0, r9
	cmp		r0, #0x0
	beq		_0801ded4
_0801dfc6:
	ldr		r0, [sp, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0801dfd8:	.4byte 0x80808080
	thumb_func_end sub_0801deb8

	thumb_func_start sub_0801dfdc
sub_0801dfdc:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r7, #0x0
_0801dfe4:
	ldr		r0, [r5, #0x48]
	cmp		r0, #0xd
	bls		_0801dfec
	b		_0801e448
_0801dfec:
	lsl		r0, r0, #0x2
	ldr		r1, _0801dff8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x1DFF6, 0x2

_0801dff8:	.4byte 0x0801dffc
_0801dffc:	.4byte 0x0801e034

.incbin "base.gba", 0x1E000, 0x34
	thumb_func_end sub_0801dfdc


.incbin "base.gba", 0x1E034, 0x30C

_0801e340:

.incbin "base.gba", 0x1E340, 0x108

_0801e448:

.incbin "base.gba", 0x1E448, 0x6
_0801e44e:

.incbin "base.gba", 0x1E44E, 0x37A
_0801e7c8:	.4byte 0x0200B918
_0801e7cc:	.4byte 0x080d20cc @ ms_comm_card_0
	thumb_func_start sub_0801e7d0
sub_0801e7d0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r0, #0x80
	bl		sub_0800132c
	mov		r0, #0x0
	bl		sub_08016c38
	ldr		r0, [r5, #0x4c]
	cmp		r0, #0x0
	beq		_0801e7ea
	bl		sub_080b75b0
_0801e7ea:
	ldr		r4, _0801e834
	add		r0, r4, #0x0
	ldr		r1, _0801e838
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0805fd80
	add		r1, r0, #0x0
	str		r1, [r5, #0x4c]
	add		r4, #0x50
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, #0xa
	bl		sub_08016be8
	ldr		r0, _0801e83c
	mov		r1, #0x0
	bl		sub_0800bcd0
	str		r0, [r5, #0x50]
	add		r0, r5, #0x0
	add		r0, #0x48
	mov		r1, #0x1
	bl		sub_08018e6c
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1E832, 0x2

_0801e834:	.4byte 0x0200DA00
_0801e838:	.4byte 0x00000FA8
_0801e83c:	.4byte 0x0200A26C
	thumb_func_end sub_0801e7d0

	thumb_func_start sub_0801e840
sub_0801e840:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _0801e87c
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x4c]
	cmp		r0, #0x0
	beq		_0801e854
	bl		sub_080b75b0
_0801e854:
	add		r0, r4, #0x0
	add		r0, #0x48
	mov		r1, #0x0
	bl		sub_08018f4c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0801e874
	add		r0, r4, #0x0
	bl		sub_080b74c8
_0801e874:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1E87A, 0x2

_0801e87c:	.4byte 0x080e0d24
	thumb_func_end sub_0801e840

	thumb_func_start sub_0801e880
sub_0801e880:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	ldr		r0, _0801e8a4
	str		r0, [r4, #0xc]
	mov		r0, #0x0
	str		r0, [r4, #0x4c]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0801e8a4:	.4byte 0x080e0d24
	thumb_func_end sub_0801e880

	thumb_func_start sub_0801e8a8
sub_0801e8a8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r0, #0x4c
	add		r1, r6, #0x0
	mov		r2, #0x1
	bl		sub_0801de54
	ldr		r5, _0801e8bc
	ldr		r4, _0801e8c0
	b		_0801e8ca

_0801e8bc:	.4byte 0x080d20dc
_0801e8c0:	.4byte 0x080d20e0

_0801e8c4:
	add		r0, r6, #0x0
	bl		sub_080b7690
_0801e8ca:
	add		r0, r6, #0x0
	add		r0, #0x4c
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_0801e8c4
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0xc
	mov		r3, #0x0
	bl		sub_080b7724
	bl		sub_08064ea0
	lsl		r0, r0, #0x10
	asr		r5, r0, #0x10
	str		r5, [r6, #0x54]
	cmp		r5, #0x1
	bne		_0801e908
	mov		r0, #0xf
	bl		sub_08016be8
	ldr		r0, [r4, #0x0]
	mov		r1, #0x6
	bl		sub_0800bcd0
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	b		_0801e91e
_0801e908:
	cmp		r5, #0x0
	bne		_0801e91e
	mov		r0, #0x10
	bl		sub_08016be8
	ldr		r0, [r4, #0x0]
	mov		r1, #0x7
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
_0801e91e:
	ldr		r4, [r4, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_0800bcd0
	mov		r1, #0xe
	mov		r2, #0x2
	bl		sub_08017d20
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_0800bcd0
	add		r0, #0x5c
	mov		r5, #0x0
	strb	r5, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0800bcd0
	str		r0, [r6, #0x58]
	add		r0, r4, #0x0
	mov		r1, #0xd
	bl		sub_0800bcd0
	str		r0, [r6, #0x5c]
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x48
	mov		r1, #0x2
	bl		sub_08018e6c
	add		r0, r6, #0x0
	add		r0, #0x50
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_08016cb0
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1E986, 0x372
	thumb_func_end sub_0801e8a8

	thumb_func_start sub_0801ecf8
sub_0801ecf8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	add		r0, r4, #0x0
	add		r0, #0x4c
	bl		sub_0801deb0
	ldr		r0, _0801ed28
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x50
	bl		sub_08016d24
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0801ed28:	.4byte 0x080e0d4c
	thumb_func_end sub_0801ecf8

	thumb_func_start sub_0801ed2c
sub_0801ed2c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _0801ed60
	cmp		r1, r0
	beq		_0801ed6c
	cmp		r1, r0
	bgt		_0801ed8c
	sub		r0, #0x1
	cmp		r1, r0
	bne		_0801ed8c
	ldr		r5, _0801ed64
_0801ed42:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r1, [r4, #0x40]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r2, _0801ed68
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	cmp		r0, r5
	bge		_0801ed42
	b		_0801ed8c

.incbin "base.gba", 0x1ED5E, 0x2

_0801ed60:	.4byte 0xFFFF8001
_0801ed64:	.4byte 0xFFC00000
_0801ed68:	.4byte 0xffff0000

_0801ed6c:
	mov		r5, #0x98
	lsl		r5, r5, #0x11
_0801ed70:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r1, [r4, #0x40]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	cmp		r0, r5
	ble		_0801ed70
_0801ed8c:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0801ed8c

.incbin "base.gba", 0x1ED96, 0x542
	thumb_func_end sub_0801ed2c

	thumb_func_start sub_0801f2d8
sub_0801f2d8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	add		r0, r4, #0x0
	add		r0, #0x4c
	bl		sub_0801deb0
	ldr		r0, _0801f310
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x50
	bl		sub_08016d24
	str		r6, [r4, #0x68]
	mov		r0, #0x0
	str		r0, [r4, #0x64]
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0801f310:	.4byte 0x080e0d74
	thumb_func_end sub_0801f2d8

	thumb_func_start sub_0801f314
sub_0801f314:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0801f324
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0801f324:	.4byte 0xFFFFF002
	thumb_func_end sub_0801f314

	thumb_func_start sub_0801f328
sub_0801f328:
	push	{ r4, r5, lr }
	ldr		r1, [r0, #0x40]
	add		r1, #0x5c
	mov		r4, #0x1
	mov		r2, #0x1
	strb	r2, [r1, #0x0]
	ldr		r3, _0801f358
	ldr		r2, [r0, #0x40]
	mov		r5, #0x8e
	lsl		r5, r5, #0x1
	add		r1, r2, r5
	str		r3, [r1, #0x0]
	add		r2, #0xef
	ldrb	r1, [r2, #0x0]
	eor		r1, r4
	strb	r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0801f35c
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0801f358:	.4byte 0xFFC00000
_0801f35c:	.4byte 0xFFFF8001
	thumb_func_end sub_0801f328

	thumb_func_start sub_0801f360
sub_0801f360:
	push	{ lr }
	ldr		r1, [r0, #0x40]
	add		r1, #0x5c
	mov		r2, #0x1
	strb	r2, [r1, #0x0]
	mov		r2, #0x98
	lsl		r2, r2, #0x11
	ldr		r1, [r0, #0x40]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	str		r2, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0801f388
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1F386, 0x2

_0801f388:	.4byte 0xFFFF8000
	thumb_func_end sub_0801f360

	thumb_func_start sub_0801f38c
sub_0801f38c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	ldr		r0, _0801f3a4
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x40]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0801f3a4:	.4byte 0x080e0d9c
	thumb_func_end sub_0801f38c

	thumb_func_start sub_0801f3a8
sub_0801f3a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r7, r0, #0x0
	mov		r0, #0xb
	bl		sub_08016be8
	add		r0, r7, #0x0
	add		r0, #0x48
	add		r1, r7, #0x0
	mov		r2, #0x2
	bl		sub_0801de54
	ldr		r5, _0801f3cc
	b		_0801f3d6

_0801f3cc:	.4byte 0x080d20f0

_0801f3d0:
	add		r0, r7, #0x0
	bl		sub_080b7690
_0801f3d6:
	add		r4, r7, #0x0
	add		r4, #0x48
	add		r0, r4, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_0801f3d0
	add		r0, r4, #0x0
	bl		sub_0801ddc4
	ldr		r4, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0800bcd0
	str		r0, [r7, #0x70]
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0800bcd0
	str		r0, [r7, #0x74]
	mov		r5, #0x0
	add		r0, r7, #0x0
	add		r0, #0x50
	str		r0, [sp, #0x4]
	add		r1, r7, #0x0
	add		r1, #0x60
	str		r1, [sp, #0x8]
	add		r6, r7, #0x0
	add		r6, #0x80
	add		r2, r7, #0x0
	add		r2, #0x78
	str		r2, [sp, #0xC]
	mov		r3, #0x82
	add		r3, r3, r7
	mov		r10, r3
	sub		r0, #0x4
	str		r0, [sp, #0x0]
	mov		r9, r4
	mov		r8, r5
	str		r1, [sp, #0x10]
	ldr		r1, [sp, #0x4]
	str		r1, [sp, #0x14]
_0801f42c:
	add		r4, r5, #0x1
	mov		r0, r9
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	ldr		r2, [sp, #0x14]
	stmia	r2!, { r0 }
	str		r2, [sp, #0x14]
	add		r0, #0x5c
	mov		r3, r8
	strb	r3, [r0, #0x0]
	add		r1, r5, #0x5
	mov		r0, r9
	bl		sub_0800bcd0
	ldr		r5, [sp, #0x10]
	stmia	r5!, { r0 }
	str		r5, [sp, #0x10]
	add		r0, #0x5c
	mov		r1, r8
	strb	r1, [r0, #0x0]
	add		r5, r4, #0x0
	cmp		r5, #0x3
	ble		_0801f42c
	mov		r5, #0x0
	mov		r2, #0x1
	mov		r8, r2
	mov		r3, r8
	strh	r3, [r6, #0x0]
	ldr		r0, [sp, #0xC]
	strh	r5, [r0, #0x0]
	ldr		r0, _0801f5a4
	mov		r1, #0xd
	bl		sub_0808b4d0
	cmp		r0, #0x0
	beq		_0801f488
	ldrh	r0, [r6, #0x0]
	add		r1, r0, #0x1
	strh	r1, [r6, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0xf
	ldr		r1, [sp, #0xC]
	add		r0, r1, r0
	mov		r2, r8
	strh	r2, [r0, #0x0]
_0801f488:
	ldrh	r0, [r6, #0x0]
	add		r1, r0, #0x1
	strh	r1, [r6, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0xf
	ldr		r3, [sp, #0xC]
	add		r0, r3, r0
	mov		r1, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r0, [r6, #0x0]
	add		r1, r0, #0x1
	strh	r1, [r6, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0xf
	add		r0, r3, r0
	mov		r2, #0x3
	mov		r9, r2
	mov		r3, r9
	strh	r3, [r0, #0x0]
	mov		r0, r10
	strh	r5, [r0, #0x0]
	ldr		r4, _0801f5a8
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801f4c8
	add		r0, r4, #0x0
	bl		sub_0800223c
	mov		r1, r10
	strh	r5, [r1, #0x0]
_0801f4c8:
	ldr		r4, _0801f5ac
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801f4e0
	add		r0, r4, #0x0
	bl		sub_0800223c
	mov		r3, r8
	mov		r2, r10
	strh	r3, [r2, #0x0]
_0801f4e0:
	ldr		r4, _0801f5b0
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801f4f8
	add		r0, r4, #0x0
	bl		sub_0800223c
	mov		r0, #0x2
	mov		r5, r10
	strh	r0, [r5, #0x0]
_0801f4f8:
	ldr		r4, _0801f5b4
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0801f510
	add		r0, r4, #0x0
	bl		sub_0800223c
	mov		r2, r9
	mov		r1, r10
	strh	r2, [r1, #0x0]
_0801f510:
	mov		r2, #0x0
	mov		r3, #0x0
	ldrsh	r0, [r6, r3]
	cmp		r2, r0
	bge		_0801f534
	mov		r5, r10
	mov		r1, #0x0
	ldrsh	r4, [r5, r1]
	add		r3, r0, #0x0
	ldr		r1, [sp, #0xC]
_0801f524:
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r0, r4
	beq		_0801f5b8
	add		r1, #0x2
	add		r2, #0x1
	cmp		r2, r3
	blt		_0801f524
_0801f534:
	mov		r8, r6
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x4
	bne		_0801f5be
	mov		r3, #0x0
	cmp		r3, r0
	bge		_0801f620
	ldr		r4, [sp, #0x4]
	mov		r5, #0x1
	mov		r12, r5
	ldr		r6, [sp, #0x8]
	str		r6, [sp, #0x18]
	ldr		r1, [sp, #0xC]
	mov		r2, #0x90
	lsl		r2, r2, #0xe
	mov		r0, #0xe0
	lsl		r0, r0, #0xe
	mov		r9, r0
_0801f55a:
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	mov		r6, #0x8e
	lsl		r6, r6, #0x1
	add		r0, r0, r6
	str		r2, [r0, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r6, r12
	strb	r6, [r0, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	lsl		r0, r0, #0x2
	ldr		r6, [sp, #0x18]
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	mov		r5, #0x8e
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	str		r2, [r0, #0x0]
	add		r1, #0x2
	add		r2, r9
	add		r3, #0x1
	mov		r6, r8
	mov		r5, #0x0
	ldrsh	r0, [r6, r5]
	cmp		r3, r0
	blt		_0801f55a
	b		_0801f620

.incbin "base.gba", 0x1F5A2, 0x2

_0801f5a4:	.4byte 0x02004968
_0801f5a8:	.4byte 0x0000090A
_0801f5ac:	.4byte 0x0000090B
_0801f5b0:	.4byte 0x0000090C
_0801f5b4:	.4byte 0x0000090D

_0801f5b8:
	mov		r0, r10
	strh	r2, [r0, #0x0]
	b		_0801f534
_0801f5be:
	mov		r3, #0x0
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r3, r0
	bge		_0801f620
	ldr		r4, [sp, #0x4]
	mov		r2, #0x1
	mov		r12, r2
	ldr		r5, [sp, #0x8]
	mov		r8, r5
	str		r6, [sp, #0x18]
	ldr		r1, [sp, #0xC]
	mov		r2, #0xf0
	lsl		r2, r2, #0xe
	mov		r9, r2
_0801f5dc:
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	mov		r5, #0x8e
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	str		r2, [r0, #0x0]
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r5, r12
	strb	r5, [r0, #0x0]
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r5, #0x8e
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	str		r2, [r0, #0x0]
	add		r1, #0x2
	add		r2, r9
	add		r3, #0x1
	ldr		r6, [sp, #0x18]
	mov		r5, #0x0
	ldrsh	r0, [r6, r5]
	cmp		r3, r0
	blt		_0801f5dc
_0801f620:
	mov		r6, r10
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x1
	ldr		r2, [sp, #0xC]
	add		r0, r2, r0
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x2
	ldr		r5, [sp, #0x4]
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x1
	add		r0, r2, r0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x2
	ldr		r3, [sp, #0x8]
	add		r0, r3, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_0801fa60
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	ldr		r0, [sp, #0x0]
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_08016cb0
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801f3a8

	thumb_func_start sub_0801f68c
sub_0801f68c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r6, r0, #0x0
	ldr		r0, _0801f7a0
	cmp		r1, r0
	bne		_0801f6a2
	b		_0801f9b6
_0801f6a2:
	cmp		r1, #0x0
	beq		_0801f6a8
	b		_0801fa50
_0801f6a8:
	add		r0, r6, #0x0
	bl		sub_0801f3a8
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x10
	mov		r0, #0x48
	add		r0, r0, r6
	mov		r9, r0
	add		r1, r6, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x0]
	add		r2, r6, #0x0
	add		r2, #0x82
	str		r2, [sp, #0xc]
	add		r3, r6, #0x0
	add		r3, #0x78
	str		r3, [sp, #0x4]
	mov		r0, #0x50
	add		r0, r0, r6
	mov		r8, r0
	add		r7, r6, #0x0
	add		r7, #0x60
	add		r1, #0x40
	str		r1, [sp, #0x8]
	ldr		r2, _0801f7a4
	mov		r10, r2
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_0801f6e8:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_0801f6f0
	add		r0, #0xf
_0801f6f0:
	asr		r0, r0, #0x4
	mov		r3, r10
	strh	r0, [r3, #0x0]
	ldr		r1, _0801f7a8
	strh	r0, [r1, #0x0]
	ldr		r2, _0801f7ac
	strh	r0, [r2, #0x0]
	ldr		r3, _0801f7b0
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0801f6e8
	mov		r0, r9
	bl		sub_0801dd14
	ldr		r4, [sp, #0xc]
	ldr		r5, [sp, #0x4]
	mov		r0, #0x1
	mov		r10, r0
_0801f724:
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0801f7b4
	mov		r0, #0x56
	bl		sub_08016b44
	mov		r0, r9
	bl		sub_0801dcf8
	ldr		r1, _0801f7b0
	mov		r10, r1
	ldr		r2, _0801f7ac
	mov		r9, r2
	ldr		r3, _0801f7a8
	mov		r8, r3
	ldr		r7, _0801f7a4
	mov		r5, #0x0
	mov		r4, #0x10
_0801f754:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_0801f75c
	add		r0, #0xf
_0801f75c:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0801f754
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_0801f794:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0801f794

.incbin "base.gba", 0x1F79E, 0x2

_0801f7a0:	.4byte 0xFFFF8000
_0801f7a4:	.4byte 0x0200EB22
_0801f7a8:	.4byte 0x0200EB20
_0801f7ac:	.4byte 0x0200EB1E
_0801f7b0:	.4byte 0x0200EB24

_0801f7b4:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0801f886
	mov		r0, #0x55
	bl		sub_08016b44
	mov		r0, r9
	bl		sub_0801dcf8
	ldr		r0, _0801f834
	mov		r10, r0
	ldr		r1, _0801f838
	mov		r9, r1
	ldr		r2, _0801f83c
	mov		r8, r2
	ldr		r7, _0801f840
	mov		r5, #0x0
	mov		r4, #0x10
_0801f7de:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_0801f7e6
	add		r0, #0xf
_0801f7e6:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0801f7de
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r3, [sp, #0xc]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	lsl		r0, r0, #0x1
	ldr		r2, [sp, #0x4]
	add		r0, r2, r0
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x1
	beq		_0801f85a
	cmp		r0, #0x1
	bgt		_0801f844
	cmp		r0, #0x0
	beq		_0801f84e
	b		_0801f87c

.incbin "base.gba", 0x1F832, 0x2

_0801f834:	.4byte 0x0200EB24
_0801f838:	.4byte 0x0200EB1E
_0801f83c:	.4byte 0x0200EB20
_0801f840:	.4byte 0x0200EB22

_0801f844:
	cmp		r0, #0x2
	beq		_0801f866
	cmp		r0, #0x3
	beq		_0801f872
	b		_0801f87c
_0801f84e:
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x6
	bl		sub_080004e8
	b		_0801f87c
_0801f85a:
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x7
	bl		sub_080004e8
	b		_0801f87c
_0801f866:
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_080004e8
	b		_0801f87c
_0801f872:
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x9
	bl		sub_080004e8
_0801f87c:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0801f87c
_0801f886:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0801f91a
	mov		r0, #0x54
	bl		sub_08016b44
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r3, r10
	strb	r3, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
	ldrh	r1, [r4, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	ble		_0801f8da
	sub		r0, r1, #0x1
	ldr		r3, [sp, #0xc]
	strh	r0, [r3, #0x0]
	b		_0801f8e4
_0801f8da:
	ldr		r1, [sp, #0x8]
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	ldr		r2, [sp, #0xc]
	strh	r0, [r2, #0x0]
_0801f8e4:
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r2, r10
	strb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0801fa60
_0801f91a:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_0800185c
	cmp		r0, #0x0
	bne		_0801f928
	b		_0801f724
_0801f928:
	mov		r0, #0x54
	bl		sub_08016b44
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r2, #0x0
	mov		r3, r10
	strb	r3, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	strb	r2, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r12, r0
	ldr		r3, [sp, #0x8]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	sub		r0, #0x1
	cmp		r12, r0
	bge		_0801f97a
	ldr		r2, [sp, #0xc]
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	b		_0801f97e
_0801f97a:
	ldr		r3, [sp, #0xc]
	strh	r2, [r3, #0x0]
_0801f97e:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r3, r10
	strb	r3, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0801fa60
	b		_0801f724
_0801f9b6:
	mov		r0, #0x0
	bl		sub_08017ce0
	ldr		r0, [r6, #0x70]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r0, #0x48
	add		r0, r0, r6
	mov		r9, r0
	add		r1, r6, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x0]
	b		_0801f9d8
_0801f9d2:
	add		r0, r6, #0x0
	bl		sub_080b7690
_0801f9d8:
	mov		r0, r9
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_0801f9d2
	ldr		r2, _0801fa40
	mov		r10, r2
	ldr		r3, _0801fa44
	mov		r9, r3
	ldr		r0, _0801fa48
	mov		r8, r0
	ldr		r7, _0801fa4c
	mov		r5, #0x0
	mov		r4, #0x10
_0801f9f4:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_0801f9fc
	add		r0, #0xf
_0801f9fc:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0801f9f4
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0xc
	bl		sub_080004e8
_0801fa34:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0801fa34

.incbin "base.gba", 0x1FA3E, 0x2

_0801fa40:	.4byte 0x0200EB24
_0801fa44:	.4byte 0x0200EB1E
_0801fa48:	.4byte 0x0200EB20
_0801fa4c:	.4byte 0x0200EB22

_0801fa50:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801f68c

	thumb_func_start sub_0801fa60
sub_0801fa60:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x34
	add		r4, r0, #0x0
	ldr		r0, _0801fb14
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x14]
	ldr		r0, _0801fb18
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x18]
	ldr		r0, _0801fb1c
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x1C]
	ldr		r0, _0801fb20
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x20]
	add		r7, sp, #0x14
	add		r0, sp, #0x4
	add		r1, r7, #0x0
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r0, _0801fb24
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x24]
	ldr		r0, _0801fb28
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x28]
	ldr		r0, _0801fb2c
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x2C]
	ldr		r0, _0801fb30
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x30]
	add		r1, sp, #0x24
	add		r0, r7, #0x0
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r0, _0801fb34
	mov		r1, #0xd
	bl		sub_0808b4d0
	cmp		r0, #0x0
	beq		_0801fabe
	ldr		r0, _0801fb38
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x4]
_0801fabe:
	mov		r0, #0x0
	bl		sub_08017ce0
	add		r6, r4, #0x0
	add		r6, #0x82
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x1
	add		r4, #0x78
	add		r0, r4, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x2
	add		r0, sp
	add		r0, #0x4
	ldr		r1, [r0, #0x0]
	mov		r5, #0x2
	str		r5, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x68
	mov		r3, #0x2
	bl		sub_08017ae8
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r1, [r0, #0x0]
	str		r5, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x68
	mov		r3, #0x12
	bl		sub_08017ae8
	add		sp, #0x34
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1FB12, 0x2

_0801fb14:	.4byte 0x0200B8F8
_0801fb18:	.4byte 0x0200B910
_0801fb1c:	.4byte 0x0200B90C
_0801fb20:	.4byte 0x0200B908
_0801fb24:	.4byte 0x0200B8F4
_0801fb28:	.4byte 0x0200B8F0
_0801fb2c:	.4byte 0x0200B8EC
_0801fb30:	.4byte 0x0200B8E8
_0801fb34:	.4byte 0x02004968
_0801fb38:	.4byte 0x0200B914

.incbin "base.gba", 0x1FB3C, 0x464
	push	{ r4, lr }
	ldr		r4, _0801ffe4
	ldr		r0, _0801ffe8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801ffec
	ldr		r0, _0801fff0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801fff4
	ldr		r0, _0801fff8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0801fffc
	ldr		r0, _08020000
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08020004
	ldr		r0, _08020008
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0802000c
	ldr		r0, _08020010
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0801ffe4:	.4byte 0x0200B930
_0801ffe8:	.4byte 0x080d20f8 @ ms_comm_mode_0
_0801ffec:	.4byte 0x0200B92C
_0801fff0:	.4byte 0x080d2108 @ ms_comm_mode_1
_0801fff4:	.4byte 0x0200B928
_0801fff8:	.4byte 0x080d2118 @ ms_comm_mode_2
_0801fffc:	.4byte 0x0200B924
_08020000:	.4byte 0x080d2128 @ ms_comm_mode_3
_08020004:	.4byte 0x0200B920
_08020008:	.4byte 0x080d2138 @ ms_comm_mode_4
_0802000c:	.4byte 0x0200B91C
_08020010:	.4byte 0x080d2148 @ ms_comm_mode_5
	thumb_func_end sub_0801fa60

	thumb_func_start sub_08020014
sub_08020014:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_08017ce0
	ldr		r1, _08020060
	add		r4, #0x60
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r5, #0x2
	str		r5, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x68
	mov		r3, #0x2
	bl		sub_08017ae8
	ldr		r1, _08020064
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	str		r5, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x68
	mov		r3, #0x12
	bl		sub_08017ae8
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08020060:	.4byte 0x0200D288
_08020064:	.4byte 0x0200D294
	thumb_func_end sub_08020014

	thumb_func_start sub_08020068
sub_08020068:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	add		r0, r4, #0x0
	add		r0, #0x48
	bl		sub_0801deb0
	ldr		r0, _08020090
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08020090:	.4byte 0x080e0dec
	thumb_func_end sub_08020068

	thumb_func_start sub_08020094
sub_08020094:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r6, r0, #0x0
	mov		r0, #0x12
	bl		sub_08016be8
	add		r0, r6, #0x0
	add		r0, #0x44
	add		r1, r6, #0x0
	mov		r2, #0x2
	bl		sub_0801de54
	ldr		r4, _080200b4
	ldr		r7, _080200b8
	b		_080200c2

.incbin "base.gba", 0x200B2, 0x2

_080200b4:	.4byte 0x080d2158
_080200b8:	.4byte 0x080d215c

_080200bc:
	add		r0, r6, #0x0
	bl		sub_080b7690
_080200c2:
	add		r5, r6, #0x0
	add		r5, #0x44
	add		r0, r5, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_080200bc
	add		r0, r5, #0x0
	bl		sub_0801ddc4
	ldr		r4, [r4, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0801dd44
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0801dd30
	add		r0, r4, #0x0
	mov		r1, #0x5
	bl		sub_0800bcd0
	str		r0, [r6, #0x4c]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x2
	bl		sub_08018e6c
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_0800bcd0
	str		r0, [r6, #0x48]
	ldr		r1, [r7, #0x0]
	add		r1, #0xcd
	ldrb	r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r4, #0x0
	ldr		r6, _08020138
	mov		r7, #0x2
	mov		r5, #0x0
	b		_08020150

_08020138:	.4byte 0x0200B8E4

_0802013c:
	ldr		r1, [r6, #0x0]
	str		r5, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r0, #0x0
	add		r2, r4, #0x0
	mov		r3, #0x78
	bl		sub_08017c60
	add		r5, #0xe
	add		r4, #0x1
_08020150:
	ldr		r0, [r6, #0x0]
	bl		sub_0801798c
	cmp		r4, r0
	blt		_0802013c
	mov		r0, #0xe8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x20172, 0x396

_08020508:	.4byte 0x080205cc

.incbin "base.gba", 0x2050C, 0x10
	thumb_func_end sub_08020094


.incbin "base.gba", 0x2051C, 0x4DC
_080209f8:	.4byte 0x0200B938
_080209fc:	.4byte 0x080d216c @ ms_parent_or_child_0
_08020a00:	.4byte 0x0200B934
_08020a04:	.4byte 0x080d2184 @ ms_parent_or_child_1
	thumb_func_start sub_08020a08
sub_08020a08:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	add		r0, r4, #0x0
	add		r0, #0x48
	bl		sub_0801deb0
	ldr		r0, _08020a38
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x4c
	bl		sub_08016d24
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08020a38:	.4byte 0x080e0e3c
	thumb_func_end sub_08020a08

	thumb_func_start sub_08020a3c
sub_08020a3c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	mov		r0, #0xf
	bl		sub_08016be8
	add		r0, r6, #0x0
	add		r0, #0x4c
	add		r1, r6, #0x0
	mov		r2, #0x2
	bl		sub_0801de54
	ldr		r4, _08020a58
	b		_08020a62

.incbin "base.gba", 0x20A56, 0x2

_08020a58:	.4byte 0x080d219c

_08020a5c:
	add		r0, r6, #0x0
	bl		sub_080b7690
_08020a62:
	add		r5, r6, #0x0
	add		r5, #0x4c
	add		r0, r5, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08020a5c
	ldr		r4, [r4, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0801dd30
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0800bcd0
	str		r0, [r6, #0x54]
	add		r0, r4, #0x0
	mov		r1, #0xd
	bl		sub_0800bcd0
	str		r0, [r6, #0x58]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x48
	mov		r1, #0x2
	bl		sub_08018e6c
	add		r0, r6, #0x0
	add		r0, #0x50
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_08016cb0
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08020a3c

	thumb_func_start sub_08020acc
sub_08020acc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r7, r0, #0x0
	ldr		r0, _08020af8
	cmp		r1, r0
	bne		_08020ae2
	b		_08020ee0
_08020ae2:
	cmp		r1, r0
	bgt		_08020afc
	sub		r0, #0x3
	cmp		r1, r0
	bne		_08020aee
	b		_08020f5c
_08020aee:
	add		r0, #0x1
	cmp		r1, r0
	bne		_08020af6
	b		_08021008
_08020af6:
	b		_08021094

_08020af8:	.4byte 0xFFFF8003

_08020afc:
	ldr		r4, _08020d74
	cmp		r1, r4
	beq		_08020b20
	cmp		r1, #0x0
	beq		_08020b08
	b		_08021094
_08020b08:
	add		r0, r7, #0x0
	bl		sub_08020a3c
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	add		r2, r4, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_08020b20:
	add		r0, r7, #0x0
	add		r0, #0x4c
	str		r0, [sp, #0x14]
	add		r1, r7, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x10]
	ldr		r6, _08020d78
	str		r0, [sp, #0xc]
_08020b30:
	ldr		r2, _08020d7c
	ldr		r0, [r2, #0x0]
	ldr		r1, _08020d80
	ldr		r2, [r1, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r6, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	add		r3, r6, #0x0
	bl		sub_080189f8
	ldr		r2, _08020d7c
	ldr		r0, [r2, #0x0]
	ldr		r1, _08020d84
	ldr		r2, [r1, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r6, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	add		r3, r6, #0x0
	bl		sub_080189f8
	ldr		r2, _08020d7c
	ldr		r0, [r2, #0x0]
	str		r6, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0x14
	mov		r2, #0xe
	add		r3, r6, #0x0
	bl		sub_08018668
	mov		r0, #0x1
	bl		sub_08017ce0
	ldr		r2, _08020d88
	ldr		r1, [r2, #0x0]
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x1
	mov		r2, #0x48
	mov		r3, #0xa
	bl		sub_08017bc4
	mov		r0, #0x2
	bl		sub_08017ce0
	ldr		r1, [r7, #0x54]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	mov		r2, #0xd4
	lsl		r2, r2, #0x10
	str		r2, [r0, #0x0]
	add		r1, #0x5c
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r7, #0x5c]
	cmp		r0, #0x1
	bne		_08020c02
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x10
	ldr		r2, _08020d8c
	mov		r10, r2
	ldr		r0, _08020d90
	mov		r9, r0
	ldr		r1, _08020d94
	mov		r8, r1
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_08020bd4:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_08020bdc
	add		r0, #0xf
_08020bdc:
	asr		r0, r0, #0x4
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r1, _08020d98
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08020bd4
_08020c02:
	ldr		r0, [sp, #0xc]
	bl		sub_0801dd14
	ldr		r0, [sp, #0xc]
	bl		sub_0801ddd4
	ldr		r0, [r7, #0x5c]
	cmp		r0, #0x1
	bne		_08020c32
	mov		r2, #0x0
	str		r2, [r7, #0x5c]
	ldr		r0, _08020d9c
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x6c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08020c32
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x4
	mov		r3, #0x0
	bl		sub_080b7724
_08020c32:
	ldr		r5, _08020da0
_08020c34:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	mov		r4, #0x0
	cmp		r0, #0x0
	beq		_08020c44
	add		r4, r0, #0x4
_08020c44:
	cmp		r4, #0x0
	beq		_08020c34
	ldr		r0, [sp, #0xc]
	bl		sub_0801dd94
	mov		r0, #0x2
	mov		r1, #0x8
	bl		sub_0801783c
	ldrb	r3, [r4, #0x0]
	mov		r1, #0x48
	str		r1, [sp, #0x0]
	mov		r2, #0xa
	str		r2, [sp, #0x4]
	mov		r0, #0x2
	str		r0, [sp, #0x8]
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_08016e9c
	ldr		r1, _08020d7c
	ldr		r0, [r1, #0x0]
	bl		sub_08018fcc
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0xc]
	bl		sub_0801ddc4
	ldr		r0, [r7, #0x54]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r1, #0xa0
	lsl		r1, r1, #0x10
	str		r1, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x5c
	mov		r2, #0x1
	strb	r2, [r0, #0x0]
	ldr		r1, _08020d7c
	ldr		r0, [r1, #0x0]
	ldr		r1, _08020da4
	ldr		r2, [r1, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r6, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	add		r3, r6, #0x0
	bl		sub_080189f8
	ldr		r2, _08020d7c
	ldr		r0, [r2, #0x0]
	mov		r1, #0xa
	bl		sub_08018fbc
	ldr		r1, _08020d7c
	ldr		r0, [r1, #0x0]
	ldr		r1, _08020da8
	ldr		r2, [r1, #0x0]
	mov		r1, #0x20
	neg		r1, r1
	str		r1, [sp, #0x0]
	ldr		r1, _08020dac
	str		r1, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x1
	add		r3, r6, #0x0
	bl		sub_080189f8
	ldr		r2, _08020d7c
	ldr		r0, [r2, #0x0]
	ldr		r1, _08020db0
	ldr		r2, [r1, #0x0]
	mov		r1, #0x20
	str		r1, [sp, #0x0]
	str		r6, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x1
	add		r3, r6, #0x0
	bl		sub_080189f8
	ldr		r2, _08020d7c
	ldr		r0, [r2, #0x0]
	str		r6, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0x14
	mov		r2, #0xe
	mov		r3, #0x11
	bl		sub_08018668
	ldr		r2, _08020d7c
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	str		r1, [sp, #0x0]
	mov		r2, #0x1
	str		r2, [sp, #0x4]
	mov		r1, #0x1
	mov		r2, #0x2
	mov		r3, #0x1
	bl		sub_08018f6c
	ldr		r1, _08020d7c
	ldr		r0, [r1, #0x0]
	bl		sub_08018988
	ldr		r2, _08020d7c
	ldr		r0, [r2, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	ldr		r1, _08020db4
	cmp		r0, r1
	bne		_08020d52
	ldr		r5, _08020d7c
	add		r4, r1, #0x0
_08020d3c:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, r4
	beq		_08020d3c
_08020d52:
	ldr		r5, _08020d7c
	ldr		r0, [r5, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	cmp		r4, #0x0
	beq		_08020dc0
	cmp		r4, #0x0
	bgt		_08020db8
	mov		r2, #0x1
	neg		r2, r2
	cmp		r4, r2
	bne		_08020d72
	b		_08020ebc
_08020d72:
	b		_08020ec6

_08020d74:	.4byte 0xFFFFF005
_08020d78:	.4byte 0xFFFF8001
_08020d7c:	.4byte 0x0200B7A4
_08020d80:	.4byte 0x0200B8D4
_08020d84:	.4byte 0x0200B8C4
_08020d88:	.4byte 0x0200B8D8
_08020d8c:	.4byte 0x0200EB1E
_08020d90:	.4byte 0x0200EB20
_08020d94:	.4byte 0x0200EB22
_08020d98:	.4byte 0x0200EB24
_08020d9c:	.4byte 0x0200D280
_08020da0:	.4byte 0x0200BB1C
_08020da4:	.4byte 0x0200B8C0
_08020da8:	.4byte 0x0200B708
_08020dac:	.4byte 0xFFFF8002
_08020db0:	.4byte 0x0200B704
_08020db4:	.4byte 0xFFFF8080

_08020db8:
	cmp		r4, #0x1
	bne		_08020dbe
	b		_08020ebc
_08020dbe:
	b		_08020ec6
_08020dc0:
	ldr		r1, _08020ea0
	ldr		r0, [r1, #0x0]
	mov		r1, #0x1
	bl		sub_08064834
	ldr		r0, [r5, #0x0]
	bl		sub_08018fcc
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	ldr		r1, _08020ea4
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r6, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	add		r3, r6, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	ldr		r1, _08020ea8
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r6, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	add		r3, r6, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	str		r6, [sp, #0x0]
	mov		r2, #0x22
	str		r2, [sp, #0x4]
	mov		r1, #0x14
	mov		r2, #0xe
	add		r3, r6, #0x0
	bl		sub_08018668
	ldr		r1, _08020ea0
	ldr		r0, [r1, #0x0]
	add		r0, #0x54
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08020e3e
	ldr		r5, _08020ea0
	mov		r4, #0x2
_08020e2a:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	add		r0, #0x54
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	and		r0, r4
	cmp		r0, #0x0
	beq		_08020e2a
_08020e3e:
	ldr		r0, [sp, #0x14]
	bl		sub_0801dcf8
	ldr		r0, _08020eac
	mov		r10, r0
	ldr		r1, _08020eb0
	mov		r9, r1
	ldr		r2, _08020eb4
	mov		r8, r2
	ldr		r6, _08020eb8
	mov		r5, #0x0
	mov		r4, #0x10
_08020e56:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08020e5e
	add		r0, #0xf
_08020e5e:
	asr		r0, r0, #0x4
	strh	r0, [r6, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08020e56
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0x10]
	mov		r1, #0x0
	mov		r2, #0x1
	bl		sub_080004e8
_08020e96:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08020e96

_08020ea0:	.4byte 0x0200D280
_08020ea4:	.4byte 0x0200B8D4
_08020ea8:	.4byte 0x0200B8C4
_08020eac:	.4byte 0x0200EB24
_08020eb0:	.4byte 0x0200EB1E
_08020eb4:	.4byte 0x0200EB20
_08020eb8:	.4byte 0x0200EB22

_08020ebc:
	ldr		r2, _08020ed8
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	bl		sub_08064834
_08020ec6:
	ldr		r1, _08020edc
	ldr		r0, [r1, #0x0]
	bl		sub_08018fcc
	add		r0, r7, #0x0
	bl		sub_080b7690
	b		_08020b30

.incbin "base.gba", 0x20ED6, 0x2

_08020ed8:	.4byte 0x0200D280
_08020edc:	.4byte 0x0200B7A4

_08020ee0:
	add		r0, r7, #0x0
	add		r0, #0x4c
	bl		sub_0801dcf8
	ldr		r5, _08020f7c
	ldr		r0, [r5, #0x0]
	bl		sub_08018fcc
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	ldr		r1, _08020f80
	ldr		r2, [r1, #0x0]
	mov		r6, #0x0
	str		r6, [sp, #0x0]
	ldr		r4, _08020f84
	str		r4, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	str		r4, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xc
	add		r3, r4, #0x0
	bl		sub_08018668
	ldr		r0, [r7, #0x54]
	add		r0, #0x5c
	strb	r6, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
_08020f30:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08020f30
	ldr		r0, _08020f7c
	ldr		r0, [r0, #0x0]
	bl		sub_08018fcc
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08020f88
	mov		r3, #0x0
	bl		sub_080b7724
_08020f5c:
	ldr		r0, [r7, #0x54]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x4c
	str		r2, [sp, #0x14]
	add		r0, r7, #0x0
	add		r0, #0x40
	str		r0, [sp, #0x10]
	b		_08020f92

.incbin "base.gba", 0x20F7A, 0x2

_08020f7c:	.4byte 0x0200B7A4
_08020f80:	.4byte 0x0200B8D0
_08020f84:	.4byte 0xFFFF8001
_08020f88:	.4byte 0xFFFFF005

_08020f8c:
	add		r0, r7, #0x0
	bl		sub_080b7690
_08020f92:
	ldr		r0, [sp, #0x14]
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08020f8c
	ldr		r1, _08020ff8
	mov		r10, r1
	ldr		r2, _08020ffc
	mov		r9, r2
	ldr		r0, _08021000
	mov		r8, r0
	ldr		r6, _08021004
	mov		r5, #0x0
	mov		r4, #0x10
_08020fae:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08020fb6
	add		r0, #0xf
_08020fb6:
	asr		r0, r0, #0x4
	strh	r0, [r6, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08020fae
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0x10]
	mov		r1, #0x0
	mov		r2, #0xc
	bl		sub_080004e8
_08020fee:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08020fee

_08020ff8:	.4byte 0x0200EB24
_08020ffc:	.4byte 0x0200EB1E
_08021000:	.4byte 0x0200EB20
_08021004:	.4byte 0x0200EB22

_08021008:
	add		r2, r7, #0x0
	add		r2, #0x4c
	str		r2, [sp, #0x14]
	add		r0, r7, #0x0
	add		r0, #0x40
	str		r0, [sp, #0x10]
	b		_0802101c
_08021016:
	add		r0, r7, #0x0
	bl		sub_080b7690
_0802101c:
	ldr		r0, [sp, #0x14]
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08021016
	ldr		r1, _08021084
	mov		r10, r1
	ldr		r2, _08021088
	mov		r9, r2
	ldr		r0, _0802108c
	mov		r8, r0
	ldr		r6, _08021090
	mov		r5, #0x0
	mov		r4, #0x10
_08021038:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08021040
	add		r0, #0xf
_08021040:
	asr		r0, r0, #0x4
	strh	r0, [r6, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08021038
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0x10]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_08021078:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08021078

.incbin "base.gba", 0x21082, 0x2

_08021084:	.4byte 0x0200EB24
_08021088:	.4byte 0x0200EB1E
_0802108c:	.4byte 0x0200EB20
_08021090:	.4byte 0x0200EB22

_08021094:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08020acc

	thumb_func_start sub_080210a4
sub_080210a4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	add		r0, r4, #0x0
	add		r0, #0x4c
	bl		sub_0801deb0
	ldr		r0, _080210d8
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x50
	bl		sub_08016d24
	mov		r0, #0x1
	str		r0, [r4, #0x5c]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_080210d8:	.4byte 0x080e0e64
	thumb_func_end sub_080210a4

	thumb_func_start sub_080210dc
sub_080210dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r0, #0x0
	str		r0, [r6, #0x78]
	str		r0, [r6, #0x7c]
	str		r0, [r6, #0x74]
	mov		r0, #0xe
	bl		sub_08016be8
	add		r0, r6, #0x0
	add		r0, #0x48
	mov		r1, #0x2
	bl		sub_08018e6c
	add		r0, r6, #0x0
	add		r0, #0x4c
	add		r1, r6, #0x0
	mov		r2, #0x2
	bl		sub_0801de54
	ldr		r0, _08021114
	mov		r9, r0
	b		_0802111e

.incbin "base.gba", 0x21112, 0x2

_08021114:	.4byte 0x080d21a0

_08021118:
	add		r0, r6, #0x0
	bl		sub_080b7690
_0802111e:
	add		r5, r6, #0x0
	add		r5, #0x4c
	add		r0, r5, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08021118
	mov		r1, r9
	ldr		r4, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0801dd30
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0800bcd0
	str		r0, [r6, #0x54]
	add		r0, r4, #0x0
	mov		r1, #0xd
	bl		sub_0800bcd0
	str		r0, [r6, #0x58]
	add		r0, #0x5c
	mov		r5, #0x0
	strb	r5, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xe
	bl		sub_0800bcd0
	str		r0, [r6, #0x5c]
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
	mov		r0, #0x3
	bl		sub_08017ce0
	mov		r4, #0x0
	add		r7, r6, #0x0
	add		r7, #0x60
	mov		r2, #0x50
	add		r2, r2, r6
	mov		r10, r2
	mov		r8, r4
	add		r5, r7, #0x0
_0802117e:
	add		r4, #0x1
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	stmia	r5!, { r0 }
	add		r0, #0x5c
	mov		r2, r8
	strb	r2, [r0, #0x0]
	cmp		r4, #0x3
	ble		_0802117e
	ldr		r0, [r6, #0x60]
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	str		r1, [r6, #0x70]
	ldr		r0, [r6, #0x74]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r0, #0x0
	bl		sub_08017ce0
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_0801783c
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	mov		r0, r10
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_08016cb0
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x211EE, 0x4BA
	push	{ r4, lr }
	ldr		r4, _080216bc
	ldr		r0, _080216c0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x216BA, 0x2

_080216bc:	.4byte 0x0200B93C
_080216c0:	.4byte 0x080d21a4 @ ms_K_erande_1
	thumb_func_end sub_080210dc

	thumb_func_start sub_080216c4
sub_080216c4:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	add		r1, r4, #0x0
	bl		sub_080004f4
	add		r0, r6, #0x0
	add		r0, #0x4c
	bl		sub_0801deb0
	ldr		r0, _080216fc
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x50
	bl		sub_08016d24
	add		r0, r6, #0x0
	add		r0, #0x80
	str		r5, [r0, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_080216fc:	.4byte 0x080e0e8c
	thumb_func_end sub_080216c4

	thumb_func_start sub_08021700
sub_08021700:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	mov		r0, #0x10
	bl		sub_08016be8
	add		r0, r6, #0x0
	add		r0, #0x4c
	add		r1, r6, #0x0
	mov		r2, #0x2
	bl		sub_0801de54
	ldr		r4, _0802171c
	b		_08021726

.incbin "base.gba", 0x2171A, 0x2

_0802171c:	.4byte 0x080d21b4

_08021720:
	add		r0, r6, #0x0
	bl		sub_080b7690
_08021726:
	add		r5, r6, #0x0
	add		r5, #0x4c
	add		r0, r5, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08021720
	ldr		r4, [r4, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0801dd30
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0800bcd0
	str		r0, [r6, #0x58]
	add		r0, r4, #0x0
	mov		r1, #0xd
	bl		sub_0800bcd0
	str		r0, [r6, #0x5c]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x48
	mov		r1, #0x2
	bl		sub_08018e6c
	add		r0, r6, #0x0
	add		r0, #0x50
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_08016cb0
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08021700

	thumb_func_start sub_08021790
sub_08021790:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _080217b8
	mov		r8, r0
	cmp		r7, r8
	bne		_080217aa
	b		_08021b28
_080217aa:
	cmp		r7, r8
	bgt		_080217bc
	sub		r0, #0x1
	cmp		r7, r0
	bne		_080217b6
	b		_08021a90
_080217b6:
	b		_08021bb0

_080217b8:	.4byte 0xFFFF8001

_080217bc:
	cmp		r7, #0x0
	beq		_080217c2
	b		_08021bb0
_080217c2:
	add		r0, r6, #0x0
	bl		sub_08021700
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r4, _08021840
	ldr		r0, [r4, #0x0]
	ldr		r1, _08021844
	ldr		r2, [r1, #0x0]
	str		r7, [sp, #0x0]
	mov		r1, r8
	str		r1, [sp, #0x4]
	mov		r5, #0x2
	str		r5, [sp, #0x8]
	mov		r1, #0x0
	mov		r3, r8
	bl		sub_080189f8
	ldr		r0, [r4, #0x0]
	ldr		r1, _08021848
	ldr		r2, [r1, #0x0]
	str		r7, [sp, #0x0]
	mov		r1, r8
	str		r1, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x0
	mov		r3, r8
	bl		sub_080189f8
	ldr		r0, [r4, #0x0]
	mov		r2, r8
	str		r2, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xa
	mov		r2, #0xe
	mov		r3, r8
	bl		sub_08018668
	mov		r0, #0x1
	bl		sub_08017ce0
	ldr		r0, _0802184c
	ldr		r1, [r0, #0x0]
	str		r5, [sp, #0x0]
	mov		r0, #0x1
	mov		r2, #0x48
	mov		r3, #0xa
	bl		sub_08017bc4
	ldr		r0, _08021850
	ldr		r4, [r0, #0x0]
	mov		r1, #0x0
	ldr		r0, [r6, #0x54]
	ldr		r0, [r0, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x4c
	add		r2, r6, #0x0
	add		r2, #0x40
	str		r2, [sp, #0xc]
	b		_08021858

.incbin "base.gba", 0x2183E, 0x2

_08021840:	.4byte 0x0200B7A4
_08021844:	.4byte 0x0200B8D4
_08021848:	.4byte 0x0200B8C4
_0802184c:	.4byte 0x0200B8D8
_08021850:	.4byte 0x0200BB1C

_08021854:
	ldr		r4, [r4, #0x0]
	add		r1, #0x1
_08021858:
	cmp		r1, r0
	bge		_08021860
	cmp		r4, #0x0
	bne		_08021854
_08021860:
	mov		r0, #0x2
	bl		sub_08017ce0
	mov		r0, #0x2
	mov		r1, #0x8
	bl		sub_0801783c
	cmp		r4, #0x0
	beq		_08021888
	add		r1, r4, #0x4
	ldrb	r3, [r4, #0x4]
	mov		r0, #0x48
	str		r0, [sp, #0x0]
	mov		r0, #0xa
	str		r0, [sp, #0x4]
	mov		r0, #0x2
	str		r0, [sp, #0x8]
	mov		r2, #0x0
	bl		sub_08016e9c
_08021888:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x10
	ldr		r0, _080219c0
	mov		r10, r0
	ldr		r1, _080219c4
	mov		r9, r1
	ldr		r2, _080219c8
	mov		r8, r2
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_080218a4:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_080218ac
	add		r0, #0xf
_080218ac:
	asr		r0, r0, #0x4
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r2, _080219cc
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080218a4
	add		r0, r7, #0x0
	bl		sub_0801dd14
	ldr		r5, _080219d0
	ldr		r0, _080219d4
	mov		r8, r0
	ldr		r1, _080219d8
	mov		r10, r1
	mov		r2, #0x2
	mov		r9, r2
	add		r4, r7, #0x0
_080218e8:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	add		r0, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r2, #0x1
	and		r0, r2
	cmp		r0, #0x0
	bne		_08021900
	b		_08021a04
_08021900:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	bl		sub_08018fcc
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	ldr		r1, _080219dc
	ldr		r2, [r1, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	mov		r1, r10
	str		r1, [sp, #0x4]
	mov		r1, r9
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_080189f8
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r1, r10
	str		r1, [sp, #0x0]
	mov		r2, #0x22
	str		r2, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xc
	mov		r3, r10
	bl		sub_08018668
	ldr		r0, [r6, #0x58]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x5c
	mov		r2, #0x1
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_0801ddc4
_08021956:
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08021956
	add		r0, r7, #0x0
	bl		sub_0801dcf8
	ldr		r0, _080219c0
	mov		r10, r0
	ldr		r1, _080219c4
	mov		r9, r1
	ldr		r2, _080219c8
	mov		r8, r2
	mov		r5, #0x0
	mov		r4, #0x10
_0802197e:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08021986
	add		r0, #0xf
_08021986:
	asr		r0, r0, #0x4
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r2, _080219cc
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802197e
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	add		r0, r7, #0x0
	bl		sub_0801de04
	b		_080219e6

.incbin "base.gba", 0x219BE, 0x2

_080219c0:	.4byte 0x0200EB1E
_080219c4:	.4byte 0x0200EB20
_080219c8:	.4byte 0x0200EB22
_080219cc:	.4byte 0x0200EB24
_080219d0:	.4byte 0x0200D280
_080219d4:	.4byte 0x0200B7A4
_080219d8:	.4byte 0xFFFF8001
_080219dc:	.4byte 0x0200B8D0

_080219e0:
	add		r0, r6, #0x0
	bl		sub_080b7690
_080219e6:
	add		r0, r7, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_080219e0
	ldr		r0, [sp, #0xc]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_080004e8
_080219fa:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_080219fa
_08021a04:
	ldr		r0, [r5, #0x0]
	add		r0, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r2, r9
	and		r0, r2
	cmp		r0, #0x0
	bne		_08021a16
	b		_080218e8
_08021a16:
	add		r0, r4, #0x0
	bl		sub_0801ddc4
	add		r0, r4, #0x0
	bl		sub_0801dcf8
	ldr		r0, _08021a80
	mov		r10, r0
	ldr		r1, _08021a84
	mov		r9, r1
	ldr		r2, _08021a88
	mov		r8, r2
	ldr		r7, _08021a8c
	mov		r5, #0x0
	mov		r4, #0x10
_08021a34:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08021a3c
	add		r0, #0xf
_08021a3c:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08021a34
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0xc]
	mov		r1, #0x0
	mov		r2, #0x1
	bl		sub_080004e8
_08021a74:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08021a74

.incbin "base.gba", 0x21A7E, 0x2

_08021a80:	.4byte 0x0200EB24
_08021a84:	.4byte 0x0200EB1E
_08021a88:	.4byte 0x0200EB20
_08021a8c:	.4byte 0x0200EB22

_08021a90:
	ldr		r0, [r6, #0x58]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x4c
	add		r2, r6, #0x0
	add		r2, #0x40
	str		r2, [sp, #0xc]
	b		_08021ab2
_08021aac:
	add		r0, r6, #0x0
	bl		sub_080b7690
_08021ab2:
	add		r0, r7, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08021aac
	ldr		r0, _08021b18
	mov		r10, r0
	ldr		r1, _08021b1c
	mov		r9, r1
	ldr		r2, _08021b20
	mov		r8, r2
	ldr		r7, _08021b24
	mov		r5, #0x0
	mov		r4, #0x10
_08021ace:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08021ad6
	add		r0, #0xf
_08021ad6:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08021ace
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0xc]
	mov		r1, #0x0
	mov		r2, #0xc
	bl		sub_080004e8
_08021b0e:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08021b0e

_08021b18:	.4byte 0x0200EB24
_08021b1c:	.4byte 0x0200EB1E
_08021b20:	.4byte 0x0200EB20
_08021b24:	.4byte 0x0200EB22

_08021b28:
	add		r7, r6, #0x0
	add		r7, #0x4c
	add		r2, r6, #0x0
	add		r2, #0x40
	str		r2, [sp, #0xc]
	b		_08021b3a
_08021b34:
	add		r0, r6, #0x0
	bl		sub_080b7690
_08021b3a:
	add		r0, r7, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08021b34
	ldr		r0, _08021ba0
	mov		r10, r0
	ldr		r1, _08021ba4
	mov		r9, r1
	ldr		r2, _08021ba8
	mov		r8, r2
	ldr		r7, _08021bac
	mov		r5, #0x0
	mov		r4, #0x10
_08021b56:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08021b5e
	add		r0, #0xf
_08021b5e:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08021b56
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0xc]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_08021b96:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08021b96

_08021ba0:	.4byte 0x0200EB24
_08021ba4:	.4byte 0x0200EB1E
_08021ba8:	.4byte 0x0200EB20
_08021bac:	.4byte 0x0200EB22

_08021bb0:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08021790

	thumb_func_start sub_08021bc0
sub_08021bc0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	add		r0, r4, #0x0
	add		r0, #0x4c
	bl		sub_0801deb0
	ldr		r0, _08021bf4
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x50
	bl		sub_08016d24
	str		r6, [r4, #0x54]
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08021bf4:	.4byte 0x080e0eb4
	thumb_func_end sub_08021bc0

	thumb_func_start sub_08021bf8
sub_08021bf8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _08021c40
	str		r0, [r4, #0xc]
	ldr		r0, _08021c44
	mov		r1, #0x6
	bl		sub_0800bcd0
	str		r0, [r4, #0x40]
	add		r0, #0x5c
	mov		r6, #0x0
	mov		r5, #0x1
	strb	r5, [r0, #0x0]
	ldr		r2, _08021c48
	ldr		r0, [r4, #0x40]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r1, r0, r3
	str		r2, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	add		r0, r4, #0x0
	add		r0, #0x44
	strh	r6, [r0, #0x0]
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	add		r0, #0x2
	strh	r6, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08021c40:	.4byte 0x080e0f04
_08021c44:	.4byte 0x0200A26C
_08021c48:	.4byte 0xFFE00000
	thumb_func_end sub_08021bf8

	thumb_func_start sub_08021c4c
sub_08021c4c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x44
	mov		r0, #0x80
	lsl		r0, r0, #0xd
	mov		r10, r0
	mov		r6, #0x1
	mov		r1, #0xc0
	lsl		r1, r1, #0xf
	mov		r9, r1
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	mov		r8, r2
_08021c70:
	add		r0, r4, #0x0
	bl		sub_080b7690
	mov		r3, #0x0
	ldrsh	r2, [r5, r3]
	cmp		r2, #0x1
	beq		_08021cfc
	cmp		r2, #0x1
	bgt		_08021c88
	cmp		r2, #0x0
	beq		_08021c8e
	b		_08021c70
_08021c88:
	cmp		r2, #0x2
	beq		_08021d20
	b		_08021c70
_08021c8e:
	add		r3, r4, #0x0
	add		r3, #0x46
	mov		r7, #0x0
	ldrsh	r0, [r3, r7]
	cmp		r0, #0x0
	bne		_08021cb8
	ldr		r1, [r4, #0x40]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r2, _08021cb4
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	cmp		r0, r10
	bgt		_08021cd2
	strh	r6, [r3, #0x0]
	b		_08021cd2

.incbin "base.gba", 0x21CB2, 0x2

_08021cb4:	.4byte 0xffffcccd

_08021cb8:
	cmp		r0, #0x1
	bne		_08021cd2
	ldr		r1, [r4, #0x40]
	mov		r7, #0x8e
	lsl		r7, r7, #0x1
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	ldr		r7, _08021cf8
	add		r0, r0, r7
	str		r0, [r1, #0x0]
	cmp		r0, r9
	blt		_08021cd2
	strh	r2, [r3, #0x0]
_08021cd2:
	add		r1, r4, #0x0
	add		r1, #0x48
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	mov		r2, #0x0
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r8
	bne		_08021c70
	strh	r2, [r1, #0x0]
	ldr		r0, [r4, #0x40]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	strh	r6, [r5, #0x0]
	b		_08021c70

.incbin "base.gba", 0x21CF6, 0x2

_08021cf8:	.4byte 0x00003333

_08021cfc:
	add		r1, r4, #0x0
	add		r1, #0x48
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	mov		r2, #0x0
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x78
	bne		_08021c70
	strh	r2, [r1, #0x0]
	strh	r2, [r5, #0x0]
	ldr		r0, [r4, #0x40]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	b		_08021c70
_08021d20:
	ldr		r2, [r4, #0x40]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	ldr		r0, [r1, #0x0]
	ldr		r3, _08021d50
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	ldr		r1, _08021d54
	cmp		r0, r1
	bgt		_08021c70
	add		r0, r2, #0x0
	add		r0, #0x5c
	mov		r7, #0x0
	strb	r7, [r0, #0x0]
	ldr		r0, [r4, #0x40]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_080b75b0
	b		_08021c70

_08021d50:	.4byte 0xFFFC0000
_08021d54:	.4byte 0xFFE00000
	thumb_func_end sub_08021c4c

	thumb_func_start sub_08021d58
sub_08021d58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x44
	add		r6, r0, #0x0
	add		r1, r6, #0x0
	add		r1, #0x80
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r1, #0x4
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0x13
	bl		sub_08016be8
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	bl		sub_08018e6c
	ldr		r4, _08021f64
	ldr		r0, [r4, #0x0]
	mov		r1, #0x0
	bl		sub_0800bcd0
	str		r0, [r6, #0x48]
	mov		r0, #0x0
	mov		r7, #0x0
	mov		r1, #0x4c
	add		r1, r1, r6
	mov		r9, r1
	add		r2, r6, #0x0
	add		r2, #0x5c
	str		r2, [sp, #0x10]
	mov		r5, r9
_08021da2:
	add		r4, r0, #0x1
	ldr		r0, _08021f68
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	str		r0, [r5, #0x0]
	add		r0, #0x5c
	strb	r7, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	mov		r3, #0x94
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	str		r0, [r5, #0x10]
	add		r5, #0x4
	add		r0, r4, #0x0
	cmp		r0, #0x3
	ble		_08021da2
	mov		r4, #0x0
	str		r4, [r6, #0x7c]
	mov		r0, #0x9f
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	add		r3, r6, #0x0
	add		r3, #0x6c
	cmp		r0, #0x0
	beq		_08021de8
	ldr		r1, [r6, #0x7c]
	lsl		r0, r1, #0x2
	add		r0, r3, r0
	str		r4, [r0, #0x0]
	add		r1, #0x1
	str		r1, [r6, #0x7c]
_08021de8:
	ldr		r2, [r6, #0x7c]
	lsl		r0, r2, #0x2
	add		r0, r3, r0
	mov		r1, #0x1
	str		r1, [r0, #0x0]
	add		r2, #0x1
	str		r2, [r6, #0x7c]
	lsl		r0, r2, #0x2
	add		r0, r3, r0
	mov		r1, #0x2
	str		r1, [r0, #0x0]
	add		r2, #0x1
	str		r2, [r6, #0x7c]
	lsl		r0, r2, #0x2
	add		r0, r3, r0
	mov		r1, #0x3
	str		r1, [r0, #0x0]
	add		r2, #0x1
	str		r2, [r6, #0x7c]
	mov		r7, #0x0
	add		r0, r6, #0x0
	add		r0, #0xac
	str		r0, [sp, #0x34]
	add		r1, r6, #0x0
	add		r1, #0xae
	str		r1, [sp, #0x38]
	add		r0, #0x4
	str		r0, [sp, #0x3C]
	add		r1, #0x6
	str		r1, [sp, #0x0]
	sub		r0, #0xc
	str		r0, [sp, #0x2C]
	sub		r1, #0xc
	str		r1, [sp, #0x30]
	add		r0, #0x18
	str		r0, [sp, #0x4]
	add		r1, #0x18
	str		r1, [sp, #0x8]
	mov		r0, #0x88
	add		r0, r0, r6
	mov		r8, r0
	mov		r1, #0x8c
	add		r1, r1, r6
	mov		r10, r1
	add		r0, r6, #0x0
	add		r0, #0x90
	str		r0, [sp, #0x14]
	add		r1, r6, #0x0
	add		r1, #0x94
	str		r1, [sp, #0x18]
	add		r0, #0x8
	str		r0, [sp, #0x1C]
	add		r1, #0x8
	str		r1, [sp, #0x20]
	add		r0, #0x8
	str		r0, [sp, #0x24]
	add		r1, #0x6
	str		r1, [sp, #0x28]
	sub		r0, #0x5c
	str		r0, [sp, #0xC]
	cmp		r7, r2
	bge		_08021ea8
	mov		r5, r9
	add		r4, r3, #0x0
_08021e68:
	ldr		r1, [r6, #0x7c]
	mov		r0, #0xf0
	str		r3, [sp, #0x40]
	bl		sub_080bbcac
	add		r2, r0, #0x0
	mul		r2, r7
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r2, r0
	lsl		r2, r2, #0x10
	ldr		r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	ldmia	r4!, { r0 }
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r2, #0x1
	strb	r2, [r0, #0x0]
	add		r7, #0x1
	ldr		r0, [r6, #0x7c]
	ldr		r3, [sp, #0x40]
	cmp		r7, r0
	blt		_08021e68
_08021ea8:
	ldr		r1, [sp, #0x34]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x2
	add		r0, r3, r0
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	mov		r3, r9
	add		r4, r3, r1
	ldr		r0, [r4, #0x0]
	ldr		r2, [sp, #0x10]
	add		r1, r2, r1
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r7, #0x0
	mov		r0, #0x1
	ldr		r3, [sp, #0x38]
	strh	r0, [r3, #0x0]
	ldr		r0, [r4, #0x0]
	mov		r5, #0x8e
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	ldr		r1, [sp, #0x0]
	str		r0, [r1, #0x0]
	ldr		r2, [sp, #0x3C]
	str		r0, [r2, #0x0]
	ldr		r4, _08021f68
	add		r0, r4, #0x0
	mov		r1, #0x5
	bl		sub_0800bcd0
	ldr		r3, [sp, #0x2C]
	str		r0, [r3, #0x0]
	add		r0, r0, r5
	ldr		r2, [sp, #0x3C]
	ldr		r1, [r2, #0x0]
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0800bcd0
	ldr		r3, [sp, #0x30]
	str		r0, [r3, #0x0]
	add		r0, #0x5c
	strb	r7, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08017ce0
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0800bcd0
	ldr		r1, [sp, #0x4]
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0800bcd0
	ldr		r2, [sp, #0x8]
	str		r0, [r2, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x6
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r7, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x7
	bl		sub_0800bcd0
	mov		r3, r8
	str		r0, [r3, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_0800bcd0
	mov		r1, r10
	str		r0, [r1, #0x0]
	mov		r0, #0x9f
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08021f6c
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	b		_08021f74

_08021f64:	.4byte 0x080d21b8
_08021f68:	.4byte 0x0200A26C

_08021f6c:
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	add		r0, #0x5c
	strb	r7, [r0, #0x0]
_08021f74:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	ldr		r3, [sp, #0x14]
	str		r0, [r3, #0x0]
	ldr		r0, [r1, #0x0]
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, [sp, #0x18]
	str		r0, [r3, #0x0]
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	ldr		r2, [sp, #0x1C]
	str		r0, [r2, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, [sp, #0x20]
	str		r0, [r3, #0x0]
	mov		r0, #0x0
	ldr		r1, [sp, #0x24]
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x28]
	strh	r0, [r2, #0x0]
	add		r0, r6, #0x0
	bl		sub_08022c0c
	ldr		r3, _08021ff4
	ldr		r2, _08021ff8
	mov		r0, #0xa0
	lsl		r0, r0, #0x10
	ldr		r1, _08021ffc
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	ldr		r2, _08022000
	ldr		r0, [sp, #0xC]
	mov		r1, #0x8
	mov		r3, #0x0
	bl		sub_08016cb0
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	add		sp, #0x44
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08021ff4:	.4byte 0x0200CE3C
_08021ff8:	.4byte 0x0200CE40
_08021ffc:	.4byte 0x0200CE44
_08022000:	.4byte 0xFFFFE667
	thumb_func_end sub_08021d58

	thumb_func_start sub_08022004
sub_08022004:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r6, r0, #0x0
	bl		sub_08021d58
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x10
	ldr		r0, _080221e8
	mov		r10, r0
	ldr		r1, _080221ec
	mov		r8, r1
	ldr		r7, _080221f0
	add		r2, r6, #0x0
	add		r2, #0xae
	str		r2, [sp, #0x28]
	add		r3, r6, #0x0
	add		r3, #0xb4
	str		r3, [sp, #0x2C]
	mov		r4, #0xac
	add		r4, r4, r6
	mov		r9, r4
	add		r0, r6, #0x0
	add		r0, #0x6c
	str		r0, [sp, #0x38]
	add		r1, r6, #0x0
	add		r1, #0x4c
	str		r1, [sp, #0x30]
	sub		r2, #0x52
	str		r2, [sp, #0x34]
	sub		r3, #0x34
	str		r3, [sp, #0x1C]
	add		r4, r6, #0x0
	add		r4, #0xa8
	str		r4, [sp, #0x24]
	add		r0, #0x18
	str		r0, [sp, #0x20]
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_08022060:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_08022068
	add		r0, #0xf
_08022068:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r3, _080221f4
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08022060
	ldr		r4, [sp, #0x28]
	str		r4, [sp, #0x8]
	add		r0, r6, #0x0
	add		r0, #0xa4
	str		r0, [sp, #0xC]
	ldr		r1, [sp, #0x24]
	str		r1, [sp, #0x10]
	ldr		r2, [sp, #0x38]
	str		r2, [sp, #0x14]
	ldr		r3, [sp, #0x30]
	str		r3, [sp, #0x18]
_080220a2:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r4, [sp, #0x8]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x1
	beq		_0802217c
	add		r0, r6, #0x0
	add		r0, #0xb0
	ldr		r2, [r0, #0x0]
	ldr		r3, [sp, #0x2C]
	ldr		r1, [r3, #0x0]
	add		r4, r0, #0x0
	cmp		r2, r1
	bge		_08022114
	mov		r1, #0x80
	lsl		r1, r1, #0xa
	add		r0, r2, r1
	str		r0, [r4, #0x0]
	ldr		r1, [r3, #0x0]
	cmp		r0, r1
	blt		_08022106
	str		r1, [r4, #0x0]
	mov		r3, #0x1
	ldr		r2, [sp, #0x8]
	strh	r3, [r2, #0x0]
	mov		r1, r9
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x2
	ldr		r3, [sp, #0x38]
	add		r0, r3, r0
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	ldr		r2, [sp, #0x30]
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, [sp, #0x34]
	add		r1, r3, r1
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	add		r0, r6, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_08022da4
_08022106:
	ldr		r1, [sp, #0xC]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r1, [r4, #0x0]
	str		r1, [r0, #0x0]
_08022114:
	add		r2, r4, #0x0
	ldr		r1, [r2, #0x0]
	ldr		r3, [sp, #0x2C]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	ble		_08022172
	ldr		r3, _080221f8
	add		r0, r1, r3
	str		r0, [r2, #0x0]
	ldr		r3, [sp, #0x2C]
	ldr		r1, [r3, #0x0]
	cmp		r0, r1
	bgt		_08022164
	str		r1, [r2, #0x0]
	mov		r1, #0x1
	ldr		r0, [sp, #0x28]
	strh	r1, [r0, #0x0]
	mov		r2, r9
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x38]
	add		r0, r1, r0
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	ldr		r2, [sp, #0x30]
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, [sp, #0x34]
	add		r1, r3, r1
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	add		r0, r6, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_08022da4
_08022164:
	ldr		r1, [sp, #0xC]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r1, [r4, #0x0]
	str		r1, [r0, #0x0]
_08022172:
	ldr		r3, [sp, #0x28]
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	cmp		r0, #0x1
	bne		_080220a2
_0802217c:
	ldr		r0, [sp, #0x1C]
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bge		_08022186
	b		_080222ac
_08022186:
	mov		r2, r9
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x2
	ldr		r4, [sp, #0x38]
	add		r0, r4, r0
	ldr		r3, [r0, #0x0]
	add		r2, r1, #0x1
	ldr		r0, [sp, #0x1C]
	str		r2, [r0, #0x0]
	cmp		r2, #0x1
	bne		_0802225c
	ldr		r1, [sp, #0xC]
	ldr		r0, [r1, #0x0]
	mov		r4, #0x8e
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0xf
	cmp		r1, r0
	bgt		_080221fc
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	add		r0, r0, r4
	mov		r4, #0xc0
	lsl		r4, r4, #0xd
	add		r1, r1, r4
	str		r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, #0xef
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080221da
	neg		r1, r0
_080221da:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_080221e2
	neg		r2, r2
_080221e2:
	add		r2, #0x33
	b		_08022230

.incbin "base.gba", 0x221E6, 0x2

_080221e8:	.4byte 0x0200EB1E
_080221ec:	.4byte 0x0200EB20
_080221f0:	.4byte 0x0200EB22
_080221f4:	.4byte 0x0200EB24
_080221f8:	.4byte 0xFFFE0000

_080221fc:
	ldr		r4, [sp, #0x10]
	ldr		r0, [r4, #0x0]
	mov		r4, #0x8e
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	ldr		r4, _08022254
	add		r1, r1, r4
	str		r1, [r0, #0x0]
	ldr		r1, [sp, #0x10]
	ldr		r0, [r1, #0x0]
	add		r0, #0xef
	strb	r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08022226
	neg		r1, r0
_08022226:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_0802222e
	neg		r2, r2
_0802222e:
	sub		r2, #0x34
_08022230:
	ldr		r4, [sp, #0x24]
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	lsl		r0, r3, #0x2
	ldr		r3, _08022258
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r4, #0x22
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r3, #0x16
	bl		sub_08017ae8
	b		_080222ac

.incbin "base.gba", 0x22252, 0x2

_08022254:	.4byte 0xFFE80000
_08022258:	.4byte 0x0200D2A0

_0802225c:
	cmp		r2, #0x7
	ble		_080222ac
	cmp		r2, #0x8
	bne		_08022282
	cmp		r3, #0x3
	beq		_080222ac
	lsl		r0, r3, #0x2
	ldr		r1, [sp, #0x30]
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x8
	mov		r2, #0x0
	bl		sub_08017d20
	mov		r2, #0x0
	ldr		r3, [sp, #0x20]
	str		r2, [r3, #0x0]
	b		_080222ac
_08022282:
	cmp		r2, #0x13
	bgt		_080222a0
	lsl		r0, r3, #0x2
	ldr		r4, [sp, #0x30]
	add		r0, r4, r0
	ldr		r1, [r0, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	b		_080222ac
_080222a0:
	cmp		r2, #0x14
	bne		_080222ac
	mov		r3, #0x1
	neg		r3, r3
	ldr		r4, [sp, #0x1C]
	str		r3, [r4, #0x0]
_080222ac:
	ldr		r1, [sp, #0x20]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	blt		_080222de
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x5a
	bne		_080222de
	mov		r2, #0x0
	str		r2, [r1, #0x0]
	mov		r3, r9
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x38]
	add		r0, r1, r0
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x2
	ldr		r2, [sp, #0x30]
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	add		r1, #0x8
	mov		r2, #0x0
	bl		sub_08017d20
_080222de:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_080222f6
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080223c0
_080222f6:
	mov		r0, #0x56
	bl		sub_08016b44
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	ldr		r3, _08022398
	mov		r10, r3
	ldr		r4, _0802239c
	mov		r9, r4
	ldr		r0, _080223a0
	mov		r8, r0
	ldr		r7, _080223a4
	mov		r5, #0x0
	mov		r4, #0x10
_08022318:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08022320
	add		r0, #0xf
_08022320:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08022318
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	mov		r4, #0x13
_08022350:
	sub		r4, #0x1
	add		r0, r6, #0x0
	bl		sub_080b7690
	cmp		r4, #0x0
	bge		_08022350
	mov		r0, #0x1
	bl		sub_08016b58
	ldr		r0, _080223a8
	bl		sub_08002268
	ldr		r0, _080223ac
	bl		sub_08002268
	ldr		r0, _080223b0
	bl		sub_08002268
	ldr		r0, _080223b4
	bl		sub_08002268
	mov		r0, #0xad
	lsl		r0, r0, #0x3
	bl		sub_08002268
	ldr		r0, _080223b8
	bl		sub_08002268
	ldr		r0, _080223bc
	bl		sub_08002268
_0802238e:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0802238e

_08022398:	.4byte 0x0200EB24
_0802239c:	.4byte 0x0200EB1E
_080223a0:	.4byte 0x0200EB20
_080223a4:	.4byte 0x0200EB22
_080223a8:	.4byte 0x00000564
_080223ac:	.4byte 0x00000565
_080223b0:	.4byte 0x00000566
_080223b4:	.4byte 0x00000567
_080223b8:	.4byte 0x00000853
_080223bc:	.4byte 0x00000835

_080223c0:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_080223ce
	b		_08022694
_080223ce:
	mov		r4, r9
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	ldr		r2, [sp, #0x38]
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08022464
	mov		r0, #0x55
	bl		sub_08016b44
	ldr		r3, _0802244c
	mov		r10, r3
	ldr		r4, _08022450
	mov		r9, r4
	ldr		r0, _08022454
	mov		r8, r0
	ldr		r7, _08022458
	mov		r5, #0x0
	mov		r4, #0x10
_080223f8:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08022400
	add		r0, #0xf
_08022400:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080223f8
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	mov		r0, #0x1
	bl		sub_08016b58
	ldr		r0, _0802245c
	bl		sub_08002268
	ldr		r0, _08022460
	bl		sub_08002268
_08022440:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08022440

.incbin "base.gba", 0x2244A, 0x2

_0802244c:	.4byte 0x0200EB24
_08022450:	.4byte 0x0200EB1E
_08022454:	.4byte 0x0200EB20
_08022458:	.4byte 0x0200EB22
_0802245c:	.4byte 0x00000852
_08022460:	.4byte 0x00000835

_08022464:
	mov		r4, r9
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	ldr		r2, [sp, #0x38]
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08022516
	mov		r0, #0x55
	bl		sub_08016b44
	add		r7, r6, #0x0
	add		r7, #0x40
	mov		r3, #0x44
	add		r3, r3, r6
	mov		r8, r3
	ldr		r4, _0802266c
	mov		r10, r4
	mov		r5, #0x0
	mov		r4, #0x10
_0802248e:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08022496
	add		r0, #0xf
_08022496:
	asr		r0, r0, #0x4
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r2, _08022670
	strh	r0, [r2, #0x0]
	ldr		r3, _08022674
	strh	r0, [r3, #0x0]
	ldr		r1, _08022678
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802248e
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	add		r0, r7, #0x0
	bl		sub_08018f30
	mov		r0, r8
	bl		sub_08016c94
	ldr		r0, _0802267c
	mov		r1, #0x7c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, sp, #0x4
	bl		sub_08022e5c
	add		r4, r0, #0x0
	ldr		r0, _0802267c
	add		r0, #0x50
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r2, _08022680
	str		r2, [sp, #0x4]
	add		r5, r2, #0x0
_080224f8:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x4]
	cmp		r0, r5
	beq		_080224f8
	add		r0, r4, #0x0
	bl		sub_080b75b0
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_08022516:
	mov		r3, r9
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x38]
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_080225ca
	mov		r0, #0x55
	bl		sub_08016b44
	add		r7, r6, #0x0
	add		r7, #0x40
	mov		r2, #0x44
	add		r2, r2, r6
	mov		r8, r2
	ldr		r3, _0802266c
	mov		r10, r3
	mov		r5, #0x0
	mov		r4, #0x10
_08022540:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08022548
	add		r0, #0xf
_08022548:
	asr		r0, r0, #0x4
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r2, _08022670
	strh	r0, [r2, #0x0]
	ldr		r3, _08022674
	strh	r0, [r3, #0x0]
	ldr		r1, _08022678
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08022540
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	add		r0, r7, #0x0
	bl		sub_08018f30
	mov		r0, r8
	bl		sub_08016c94
	ldr		r0, _0802267c
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, sp, #0x4
	bl		sub_080249c0
	add		r4, r0, #0x0
	ldr		r0, _0802267c
	add		r0, #0x50
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r2, _08022680
	str		r2, [sp, #0x4]
	add		r5, r2, #0x0
_080225ac:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x4]
	cmp		r0, r5
	beq		_080225ac
	add		r0, r4, #0x0
	bl		sub_080b75b0
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_080225ca:
	mov		r3, r9
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x38]
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_080225de
	b		_080220a2
_080225de:
	mov		r0, #0x55
	bl		sub_08016b44
	ldr		r2, [sp, #0x24]
	ldr		r0, [r2, #0x0]
	add		r0, #0x5c
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08017ce0
	add		r0, r6, #0x0
	bl		sub_080227e4
	cmp		r0, #0x1
	beq		_08022600
	b		_080220a2
_08022600:
	ldr		r0, _08022684
	bl		sub_08002fd8
	ldr		r4, _08022678
	mov		r10, r4
	ldr		r0, _08022674
	mov		r9, r0
	ldr		r1, _08022670
	mov		r8, r1
	ldr		r7, _0802266c
	mov		r5, #0x0
	mov		r4, #0x10
_08022618:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08022620
	add		r0, #0xf
_08022620:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r3, r9
	strh	r0, [r3, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08022618
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, _08022688
	bl		sub_08002268
	ldr		r0, _0802268c
	bl		sub_08002268
	ldr		r0, _08022690
	bl		sub_08002268
_08022660:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08022660

.incbin "base.gba", 0x2266A, 0x2

_0802266c:	.4byte 0x0200EB22
_08022670:	.4byte 0x0200EB20
_08022674:	.4byte 0x0200EB1E
_08022678:	.4byte 0x0200EB24
_0802267c:	.4byte 0x0200DA00
_08022680:	.4byte 0x80808080
_08022684:	.4byte 0x02000BAC
_08022688:	.4byte 0x00000853
_0802268c:	.4byte 0x00000851
_08022690:	.4byte 0x00000835

_08022694:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08022736
	mov		r2, r9
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	ble		_08022736
	mov		r0, #0x54
	bl		sub_08016b44
	ldr		r4, [sp, #0x24]
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08017ce0
	mov		r2, #0x0
	ldr		r3, [sp, #0x1C]
	str		r2, [r3, #0x0]
	mov		r4, #0x1
	neg		r4, r4
	ldr		r0, [sp, #0x20]
	str		r4, [r0, #0x0]
	mov		r1, r9
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x2
	ldr		r3, [sp, #0x14]
	add		r0, r3, r0
	ldr		r0, [r0, #0x0]
	lsl		r1, r0, #0x2
	ldr		r0, [sp, #0x18]
	add		r4, r0, r1
	ldr		r0, [r4, #0x0]
	ldr		r2, [sp, #0x34]
	add		r1, r2, r1
	ldr		r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r4, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	mov		r4, #0xb8
	lsl		r4, r4, #0xe
	str		r4, [r0, #0x0]
	mov		r1, r9
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x2
	ldr		r3, [sp, #0x14]
	add		r0, r3, r0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	ldr		r4, [sp, #0x28]
	strh	r1, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r2, [sp, #0x18]
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r4, [sp, #0x2C]
	str		r0, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_08022da4
_08022736:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_08001884
	cmp		r0, #0x0
	bne		_08022744
	b		_080220a2
_08022744:
	mov		r0, r9
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, [r6, #0x7c]
	sub		r0, #0x1
	cmp		r1, r0
	blt		_08022754
	b		_080220a2
_08022754:
	mov		r0, #0x54
	bl		sub_08016b44
	ldr		r3, [sp, #0x24]
	ldr		r0, [r3, #0x0]
	add		r0, #0x5c
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08017ce0
	mov		r0, #0x0
	ldr		r1, [sp, #0x1C]
	str		r0, [r1, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	ldr		r3, [sp, #0x20]
	str		r2, [r3, #0x0]
	mov		r4, r9
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	ldr		r2, [sp, #0x14]
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	lsl		r1, r0, #0x2
	ldr		r3, [sp, #0x18]
	add		r4, r3, r1
	ldr		r0, [r4, #0x0]
	ldr		r2, [sp, #0x34]
	add		r1, r2, r1
	ldr		r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r4, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	mov		r4, #0xb8
	lsl		r4, r4, #0xe
	str		r4, [r0, #0x0]
	mov		r1, r9
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x2
	ldr		r3, [sp, #0x14]
	add		r0, r3, r0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x3
	ldr		r4, [sp, #0x28]
	strh	r1, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r2, [sp, #0x18]
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r4, [sp, #0x2C]
	str		r0, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_08022da4
	b		_080220a2

.incbin "base.gba", 0x227E2, 0x2
	thumb_func_end sub_08022004

	thumb_func_start sub_080227e4
sub_080227e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	ldr		r6, _080227f8
	ldr		r4, _080227fc
	b		_0802283a

_080227f8:	.4byte 0x080d21bc
_080227fc:	.4byte 0x080d21c0

_08022800:
	ldr		r1, [r7, #0x48]
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldr		r2, _080229bc
	ldr		r0, [r0, #0x0]
	add		r3, r1, #0x0
	cmp		r0, r2
	ble		_08022820
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r1, r3, r0
	ldr		r0, [r1, #0x0]
	ldr		r2, _080229c0
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_08022820:
	add		r0, r7, #0x0
	add		r0, #0xa2
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r5, r0, #0x0
	cmp		r1, #0x17
	bgt		_0802283a
	add		r0, r2, #0x1
	strh	r0, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_08022c0c
_0802283a:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r2, [r6, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0xe
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	ble		_08022800
	ldr		r3, _080229c4
	add		r0, r0, r3
	str		r0, [r2, #0x0]
	cmp		r0, r1
	bgt		_08022800
	str		r1, [r2, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_08022da4
	mov		r1, #0x88
	lsl		r1, r1, #0x11
	add		r5, r7, #0x0
	add		r5, #0xa4
	ldr		r0, [r5, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	mov		r8, r2
	add		r0, r8
	str		r1, [r0, #0x0]
	mov		r1, #0x88
	lsl		r1, r1, #0x10
	ldr		r0, [r5, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	str		r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	mov		r1, #0x1
	neg		r1, r1
	bl		sub_08017d00
	ldr		r0, [r5, #0x0]
	add		r0, #0xf1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r6, r7, #0x0
	add		r6, #0xc4
	ldr		r4, [r4, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x4c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_08021bf8
	add		r1, r0, #0x0
	str		r1, [r6, #0x0]
	add		r4, #0x50
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r9, r5
	str		r6, [sp, #0xC]
	mov		r0, #0xb8
	add		r0, r0, r7
	mov		r10, r0
	mov		r4, r8
_080228c6:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r1, r9
	ldr		r2, [r1, #0x0]
	add		r1, r2, r4
	ldr		r3, [r7, #0x58]
	add		r0, r3, r4
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	ble		_080228c6
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	ldr		r0, [r1, #0x0]
	ldr		r2, _080229c0
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r3, r2
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	bne		_080228c6
	add		r0, r7, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_08022da4
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	mov		r1, #0x1
	neg		r1, r1
	bl		sub_08017d00
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0xf1
	mov		r6, #0x0
	strb	r6, [r0, #0x0]
	ldr		r2, _080229c8
	mov		r8, r2
	ldr		r0, [r2, #0x0]
	ldr		r5, _080229cc
	ldr		r2, [r5, #0x0]
	str		r6, [sp, #0x0]
	ldr		r4, _080229d0
	str		r4, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	ldr		r2, [r5, #0x0]
	str		r6, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x1
	bl		sub_080189f8
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	str		r4, [sp, #0x0]
	mov		r5, #0x2
	str		r5, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0x5
	add		r3, r4, #0x0
	bl		sub_08018668
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	str		r5, [sp, #0x0]
	mov		r1, #0x1
	str		r1, [sp, #0x4]
	mov		r1, #0x0
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_08018f6c
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	bl		sub_08018988
	mov		r0, r10
	str		r6, [r0, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr		r0, _080229d4
	cmp		r1, r0
	bne		_08022a10
	mov		r4, r10
	mov		r5, r9
	sub		r6, #0x1
	mov		r8, r1
_0802299e:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_080229d8
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	bl		sub_08017d10
	cmp		r0, #0x0
	beq		_080229fe
	mov		r2, #0x0
	str		r2, [r4, #0x0]
	b		_080229fe

_080229bc:	.4byte 0xFFE80000
_080229c0:	.4byte 0xffff0000
_080229c4:	.4byte 0xFFFC0000
_080229c8:	.4byte 0x0200B7A4
_080229cc:	.4byte 0x0200B940
_080229d0:	.4byte 0xFFFF8001
_080229d4:	.4byte 0xFFFF8080

_080229d8:
	add		r0, #0x1
	mov		r3, r10
	str		r0, [r3, #0x0]
	cmp		r0, #0xb3
	ble		_080229fe
	add		r0, r7, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	bl		sub_08022da4
	ldr		r0, [r5, #0x0]
	add		r1, r6, #0x0
	bl		sub_08017d00
	ldr		r0, [r5, #0x0]
	add		r0, #0xf1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	str		r6, [r4, #0x0]
_080229fe:
	ldr		r2, _08022a78
	ldr		r0, [r2, #0x0]
	mov		r3, #0xe0
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, r8
	beq		_0802299e
_08022a10:
	ldr		r4, _08022a78
	ldr		r0, [r4, #0x0]
	bl		sub_08018fcc
	ldr		r0, [r4, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x1
	bne		_08022adc
	add		r0, r7, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r5, #0x0
	strb	r5, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	blt		_08022a6a
	add		r0, r7, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	bl		sub_08022da4
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r4, #0x1
	neg		r4, r4
	add		r1, r4, #0x0
	bl		sub_08017d00
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	add		r0, #0xf1
	strb	r5, [r0, #0x0]
	mov		r0, r10
	str		r4, [r0, #0x0]
_08022a6a:
	mov		r6, #0x0
	mov		r5, r9
	mov		r1, #0x1
	neg		r1, r1
	mov		r8, r1
	b		_08022ac0

.incbin "base.gba", 0x22A76, 0x2

_08022a78:	.4byte 0x0200B7A4

_08022a7c:
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_08022a96
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	bl		sub_08017d10
	cmp		r0, #0x0
	beq		_08022abe
	mov		r0, r10
	str		r4, [r0, #0x0]
	b		_08022abe
_08022a96:
	add		r0, #0x1
	mov		r1, r10
	str		r0, [r1, #0x0]
	cmp		r0, #0xb3
	ble		_08022abe
	add		r0, r7, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	bl		sub_08022da4
	ldr		r0, [r5, #0x0]
	mov		r1, r8
	bl		sub_08017d00
	ldr		r0, [r5, #0x0]
	add		r0, #0xf1
	strb	r4, [r0, #0x0]
	mov		r2, r8
	mov		r3, r10
	str		r2, [r3, #0x0]
_08022abe:
	add		r6, #0x1
_08022ac0:
	cmp		r6, #0x59
	bgt		_08022ad8
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_08022a7c
_08022ad8:
	mov		r0, #0x1
	b		_08022bf4
_08022adc:
	add		r0, r7, #0x0
	mov		r1, #0x24
	mov		r2, #0x0
	bl		sub_08022da4
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	mov		r4, #0x1
	neg		r4, r4
	add		r1, r4, #0x0
	bl		sub_08017d00
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	add		r0, #0xf1
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	ldr		r3, [sp, #0xC]
	ldr		r0, [r3, #0x0]
	add		r0, #0x44
	mov		r1, #0x2
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x80
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r4, [r0, #0x0]
	add		r0, #0x28
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r1, r1, #0x2
	sub		r0, #0x40
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	lsl		r2, r2, #0x2
	add		r4, r7, #0x0
	add		r4, #0x4c
	add		r4, r4, r2
	ldr		r0, [r4, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x5c
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r1, #0xb8
	lsl		r1, r1, #0xe
	ldr		r0, [r4, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	str		r1, [r0, #0x0]
	mov		r4, #0x0
	add		r5, r7, #0x0
	add		r5, #0xa2
	ldr		r0, _08022c04
	mov		r10, r0
	mov		r1, #0xa0
	lsl		r1, r1, #0x10
	mov		r8, r1
_08022b56:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	cmp		r0, r8
	bge		_08022b74
	mov		r3, #0x80
	lsl		r3, r3, #0xb
	add		r0, r0, r3
	str		r0, [r2, #0x0]
	cmp		r0, r8
	blt		_08022b74
	mov		r0, r8
	str		r0, [r2, #0x0]
_08022b74:
	ldr		r0, [r7, #0x48]
	mov		r6, #0x90
	lsl		r6, r6, #0x1
	add		r1, r0, r6
	ldr		r1, [r1, #0x0]
	add		r3, r0, #0x0
	mov		r2, #0xc0
	lsl		r2, r2, #0xc
	cmp		r1, r2
	bge		_08022b94
	add		r1, r3, r6
	ldr		r0, [r1, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x9
	add		r0, r0, r3
	str		r0, [r1, #0x0]
_08022b94:
	ldrh	r1, [r5, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r0, #0x0
	ble		_08022ba8
	sub		r0, r1, #0x1
	strh	r0, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_08022c0c
_08022ba8:
	cmp		r4, #0x10
	bgt		_08022bae
	add		r4, #0x1
_08022bae:
	cmp		r4, #0x11
	bne		_08022b56
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	add		r1, r0, r6
	ldr		r0, [r1, #0x0]
	mov		r2, #0xf0
	lsl		r2, r2, #0xf
	cmp		r0, r2
	ble		_08022bc8
	ldr		r3, _08022c08
	add		r0, r0, r3
	str		r0, [r1, #0x0]
_08022bc8:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	bl		sub_08017d10
	cmp		r0, #0x0
	beq		_08022b56
	add		r0, r7, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_08022da4
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	bl		sub_08017d00
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	add		r0, #0xf1
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	mov		r0, #0x0
_08022bf4:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08022c04:	.4byte 0x0200CE3C
_08022c08:	.4byte 0xFFFF4CCD
	thumb_func_end sub_080227e4

	thumb_func_start sub_08022c0c
sub_08022c0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x24
	add		r6, r0, #0x0
	add		r1, sp, #0x4
	ldr		r0, _08022d30
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
	mov		r0, sp
	add		r0, #0x5
	mov		r1, #0x0
	mov		r2, #0x1f
	bl		sub_0808c828
	add		r4, r6, #0x0
	add		r4, #0x88
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	cmp		r0, #0x1
	bne		_08022cb0
	mov		r0, #0x1
	bl		sub_08017ce0
	mov		r0, #0x1
	mov		r1, #0x7
	bl		sub_0801783c
	add		r5, r6, #0x0
	add		r5, #0xa0
	mov		r0, #0x0
	ldrsh	r2, [r5, r0]
	lsl		r2, r2, #0x10
	ldr		r1, [r4, #0x0]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	add		r0, r6, #0x0
	add		r0, #0x90
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	add		r7, r6, #0x0
	add		r7, #0xa2
	mov		r0, #0x0
	ldrsh	r2, [r7, r0]
	lsl		r2, r2, #0x10
	ldr		r1, [r4, #0x0]
	add		r3, #0x4
	add		r1, r1, r3
	add		r0, r6, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r2
	str		r0, [r1, #0x0]
	ldr		r4, _08022d34
	bl		sub_0805acdc
	add		r2, r0, #0x0
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	sub		r2, #0x1
	add		r0, sp, #0x4
	add		r1, r4, #0x0
	mov		r3, #0x32
	bl		sub_0808c63c
	mov		r0, #0x0
	ldrsh	r2, [r5, r0]
	add		r2, #0x44
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	mov		r3, #0x20
	sub		r3, r3, r0
	mov		r0, r8
	str		r0, [sp, #0x0]
	mov		r0, #0x1
	add		r1, sp, #0x4
	bl		sub_08017998
_08022cb0:
	mov		r0, #0x2
	bl		sub_08017ce0
	mov		r0, #0x2
	mov		r1, #0x7
	bl		sub_0801783c
	add		r4, r6, #0x0
	add		r4, #0xa0
	mov		r1, #0x0
	ldrsh	r2, [r4, r1]
	lsl		r2, r2, #0x10
	add		r3, r6, #0x0
	add		r3, #0x8c
	ldr		r1, [r3, #0x0]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r6, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	add		r5, r6, #0x0
	add		r5, #0xa2
	mov		r1, #0x0
	ldrsh	r2, [r5, r1]
	lsl		r2, r2, #0x10
	ldr		r1, [r3, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	add		r0, r6, #0x0
	add		r0, #0x9c
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	ldr		r1, _08022d38
	ldr		r0, _08022d3c
	add		r0, #0xd4
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	add		r0, sp, #0x4
	bl		sub_0808c63c
	mov		r0, #0x0
	ldrsh	r2, [r4, r0]
	add		r2, #0x40
	mov		r1, #0x0
	ldrsh	r3, [r5, r1]
	add		r3, #0x4
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	mov		r0, #0x2
	add		r1, sp, #0x4
	bl		sub_08017998
	add		sp, #0x24
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x22D2E, 0x2

_08022d30:	.4byte 0x080d21c4
_08022d34:	.4byte 0x080d21c8 @ %2d/%2d
_08022d38:	.4byte 0x080d21d0
_08022d3c:	.4byte 0x02000BAC
	thumb_func_end sub_08022c0c

	thumb_func_start sub_08022d40
sub_08022d40:
	push	{ r4, lr }
	ldr		r4, _08022d7c
	ldr		r0, _08022d80
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08022d84
	ldr		r0, _08022d88
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08022d8c
	ldr		r0, _08022d90
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08022d94
	ldr		r0, _08022d98
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08022d9c
	ldr		r0, _08022da0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x22D7A, 0x2

_08022d7c:	.4byte 0x0200B950
_08022d80:	.4byte 0x080d21d4 @ ms_fieldmenu_00
_08022d84:	.4byte 0x0200B94C
_08022d88:	.4byte 0x080d21e4 @ ms_fieldmenu_01
_08022d8c:	.4byte 0x0200B948
_08022d90:	.4byte 0x080d21f4 @ ms_fieldmenu_02
_08022d94:	.4byte 0x0200B944
_08022d98:	.4byte 0x080d2204 @ ms_fieldmenu_03
_08022d9c:	.4byte 0x0200B940
_08022da0:	.4byte 0x080d2214 @ ms_fieldmenu_05
	thumb_func_end sub_08022d40

	thumb_func_start sub_08022da4
sub_08022da4:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	mov		r1, #0xf0
	and		r1, r5
	cmp		r1, #0x10
	beq		_08022dda
	cmp		r1, #0x10
	bgt		_08022dbc
	cmp		r1, #0x0
	beq		_08022dc6
	b		_08022dc0
_08022dbc:
	cmp		r1, #0x20
	beq		_08022dee
_08022dc0:
	add		r4, r0, #0x0
	add		r4, #0xa4
	b		_08022e00
_08022dc6:
	add		r4, r0, #0x0
	add		r4, #0xa4
	ldr		r0, [r4, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r2, r0, r1
	mov		r1, #0x62
	bl		sub_0800be04
	b		_08022e00
_08022dda:
	add		r4, r0, #0x0
	add		r4, #0xa4
	ldr		r0, [r4, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r2, r0, r1
	mov		r1, #0x63
	bl		sub_0800be04
	b		_08022e00
_08022dee:
	add		r4, r0, #0x0
	add		r4, #0xa4
	ldr		r0, [r4, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r2, r0, r1
	mov		r1, #0x64
	bl		sub_0800be04
_08022e00:
	ldr		r0, [r4, #0x0]
	mov		r1, #0xf
	and		r1, r5
	add		r2, r6, #0x0
	bl		sub_08017d20
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x22E12, 0x4A
	thumb_func_end sub_08022da4

	thumb_func_start sub_08022e5c
sub_08022e5c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	ldr		r0, _08022eac
	str		r0, [r4, #0xc]
	ldr		r1, _08022eb0
	add		r0, r1, #0x0
	add		r0, #0xd0
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	add		r2, r4, #0x0
	add		r2, #0x6c
	mov		r3, #0x0
	strh	r0, [r2, #0x0]
	add		r1, #0xd1
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	lsl		r0, r0, #0x1
	add		r1, r4, #0x0
	add		r1, #0x6e
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	lsl		r0, r0, #0x15
	ldr		r1, _08022eb4
	add		r0, r0, r1
	str		r0, [r4, #0x70]
	str		r3, [r4, #0x74]
	str		r3, [r4, #0x78]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08022eac:	.4byte 0x080e0f2c
_08022eb0:	.4byte 0x02000BAC
_08022eb4:	.4byte 0xFFD00000
	thumb_func_end sub_08022e5c

	thumb_func_start sub_08022eb8
sub_08022eb8:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	mov		r0, #0x14
	bl		sub_08016be8
	ldr		r5, _08022f4c
	ldr		r4, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x1b
	bl		sub_0800bcd0
	str		r0, [r6, #0x64]
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0800bcd0
	str		r0, [r6, #0x68]
	add		r0, r4, #0x0
	mov		r1, #0x5
	bl		sub_0800bcd0
	str		r0, [r6, #0x54]
	add		r0, r4, #0x0
	mov		r1, #0x1e
	bl		sub_0800bcd0
	str		r0, [r6, #0x58]
	add		r0, r6, #0x0
	bl		sub_080234c8
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0800bcd0
	str		r0, [r6, #0x48]
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0800bcd0
	str		r0, [r6, #0x4c]
	add		r0, r6, #0x0
	bl		sub_08023a50
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_0800bcd0
	add		r2, r0, #0x0
	str		r2, [r6, #0x50]
	ldr		r0, _08022f50
	add		r1, r0, #0x0
	add		r1, #0xd0
	ldrb	r1, [r1, #0x0]
	sub		r4, r1, #0x1
	add		r0, #0xd1
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	lsl		r0, r0, #0x1
	cmp		r4, #0x6
	bne		_08022f54
	cmp		r0, #0x2
	bne		_08022f54
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	mov		r0, #0x88
	lsl		r0, r0, #0x10
	str		r0, [r1, #0x0]
	mov		r7, #0x90
	lsl		r7, r7, #0x1
	add		r1, r2, r7
	mov		r0, #0xe4
	lsl		r0, r0, #0x10
	b		_08022f74

_08022f4c:	.4byte 0x080d2224
_08022f50:	.4byte 0x02000BAC

_08022f54:
	mov		r2, #0xc0
	lsl		r2, r2, #0xd
	ldr		r3, [r6, #0x50]
	mov		r7, #0x8e
	lsl		r7, r7, #0x1
	add		r1, r3, r7
	lsl		r0, r0, #0x15
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r1, r3, r0
	lsl		r0, r4, #0x15
	mov		r2, #0x90
	lsl		r2, r2, #0xe
	add		r0, r0, r2
_08022f74:
	str		r0, [r1, #0x0]
	ldr		r5, [r5, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x6
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	str		r1, [r6, #0x5c]
	ldr		r4, _08022fd4
	ldr		r0, [r6, #0x70]
	cmp		r0, r4
	bne		_08022f92
	add		r1, #0x5c
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_08022f92:
	add		r0, r5, #0x0
	mov		r1, #0x7
	bl		sub_0800bcd0
	add		r2, r0, #0x0
	str		r2, [r6, #0x60]
	mov		r7, #0xc0
	lsl		r7, r7, #0x10
	add		r1, r4, r7
	ldr		r0, [r6, #0x70]
	cmp		r0, r1
	bne		_08022fb2
	add		r1, r2, #0x0
	add		r1, #0x5c
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_08022fb2:
	add		r0, r6, #0x0
	bl		sub_080235f4
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	ldr		r1, _08022fd8
	ldr		r0, [r6, #0x70]
	str		r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08022fd4:	.4byte 0xFFD00000
_08022fd8:	.4byte 0x0200CE40
	thumb_func_end sub_08022eb8

	thumb_func_start sub_08022fdc
sub_08022fdc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	bl		sub_08022eb8
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x10
	ldr		r0, _0802312c
	mov		r10, r0
	ldr		r1, _08023130
	mov		r9, r1
	ldr		r2, _08023134
	mov		r8, r2
	ldr		r7, _08023138
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_0802300c:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_08023014
	add		r0, #0xf
_08023014:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802300c
	add		r3, r6, #0x0
	add		r3, #0x6c
	str		r3, [sp, #0x4]
	add		r5, r6, #0x0
	add		r5, #0x6e
	str		r5, [sp, #0x8]
_08023044:
	ldr		r0, [r6, #0x70]
	ldr		r7, _0802313c
	str		r0, [r7, #0x0]
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x74]
	cmp		r0, #0x0
	beq		_08023058
	b		_08023462
_08023058:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0802314c
	ldr		r1, [sp, #0x4]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r3, [sp, #0x8]
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	lsl		r0, r0, #0x2
	ldr		r7, _08023140
	add		r0, r0, r7
	add		r7, r1, r0
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x1
	bne		_0802311c
	mov		r0, #0x55
	bl		sub_08016b44
	ldr		r2, _08023130
	mov		r10, r2
	ldr		r3, _08023134
	mov		r9, r3
	ldr		r5, _08023138
	mov		r8, r5
	mov		r5, #0x0
	mov		r4, #0x10
_0802309c:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_080230a4
	add		r0, #0xf
_080230a4:
	asr		r0, r0, #0x4
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	ldr		r1, _0802312c
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802309c
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, _08023144
	mov		r1, #0xec
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r2, #0x2
	ldrsh	r1, [r7, r2]
	mov		r2, sp
	bl		sub_08023a94
	add		r4, r0, #0x0
	ldr		r0, _08023144
	add		r0, #0x50
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r3, _08023148
	str		r3, [sp, #0x0]
	add		r5, r3, #0x0
_080230fe:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x0]
	cmp		r0, r5
	beq		_080230fe
	add		r0, r4, #0x0
	bl		sub_080b75b0
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_0802311c:
	mov		r5, #0x0
	ldrsh	r0, [r7, r5]
	cmp		r0, #0x0
	bne		_0802314c
	mov		r0, #0x9a
	bl		sub_08016b44
	b		_08023044

_0802312c:	.4byte 0x0200EB24
_08023130:	.4byte 0x0200EB1E
_08023134:	.4byte 0x0200EB20
_08023138:	.4byte 0x0200EB22
_0802313c:	.4byte 0x0200CE40
_08023140:	.4byte 0x080d17b0
_08023144:	.4byte 0x0200DA00
_08023148:	.4byte 0x80808080

_0802314c:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080231d0
	mov		r0, #0x56
	bl		sub_08016b44
	add		r7, r6, #0x0
	add		r7, #0x40
	ldr		r0, _080231c0
	mov		r10, r0
	ldr		r1, _080231c4
	mov		r9, r1
	ldr		r2, _080231c8
	mov		r8, r2
	mov		r5, #0x0
	mov		r4, #0x10
_08023172:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_0802317a
	add		r0, #0xf
_0802317a:
	asr		r0, r0, #0x4
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r3, _080231cc
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08023172
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	add		r0, r7, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_080231b4:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_080231b4

.incbin "base.gba", 0x231BE, 0x2

_080231c0:	.4byte 0x0200EB1E
_080231c4:	.4byte 0x0200EB20
_080231c8:	.4byte 0x0200EB22
_080231cc:	.4byte 0x0200EB24

_080231d0:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_080232a6
	add		r0, r6, #0x0
	add		r0, #0x6c
	mov		r5, #0x0
	ldrsh	r1, [r0, r5]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	ble		_080232a6
	mov		r0, #0x54
	bl		sub_08016b44
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08023248
	mov		r7, #0x0
	ldrsh	r0, [r5, r7]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r2, [sp, #0x8]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x2
	ldr		r7, _08023418
	add		r0, r0, r7
	add		r1, r1, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	add		r4, r6, #0x0
	add		r4, #0x6e
	cmp		r0, #0x4
	bne		_08023248
	add		r2, r4, #0x0
	add		r3, r5, #0x0
	add		r4, r7, #0x0
_08023226:
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	mov		r7, #0x0
	ldrsh	r0, [r3, r7]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	add		r1, r1, r0
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp		r0, #0x4
	beq		_08023226
_08023248:
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x6
	bne		_08023298
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r3, [sp, #0x8]
	mov		r7, #0x0
	ldrsh	r0, [r3, r7]
	lsl		r0, r0, #0x2
	ldr		r2, _08023418
	add		r0, r0, r2
	add		r1, r1, r0
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	add		r4, r6, #0x0
	add		r4, #0x6e
	cmp		r0, #0x4
	bne		_08023298
	add		r2, r4, #0x0
	add		r3, r5, #0x0
	ldr		r4, _08023418
_08023276:
	ldrh	r0, [r2, #0x0]
	sub		r0, #0x1
	strh	r0, [r2, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	add		r1, r1, r0
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r0, #0x4
	beq		_08023276
_08023298:
	add		r0, r6, #0x0
	bl		sub_080234c8
	mov		r7, #0x10
	str		r7, [r6, #0x74]
	ldr		r0, _0802341c
	str		r0, [r6, #0x78]
_080232a6:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0802337e
	add		r0, r6, #0x0
	add		r0, #0x6c
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r5, r0, #0x0
	cmp		r1, #0x5
	bgt		_0802337e
	mov		r0, #0x54
	bl		sub_08016b44
	ldrh	r0, [r5, #0x0]
	add		r0, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0802331e
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r7, [sp, #0x8]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	lsl		r0, r0, #0x2
	ldr		r3, _08023418
	add		r0, r0, r3
	add		r1, r1, r0
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	add		r4, r6, #0x0
	add		r4, #0x6e
	cmp		r0, #0x4
	bne		_0802331e
	add		r2, r4, #0x0
	add		r3, r5, #0x0
	ldr		r4, _08023418
_080232fc:
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	add		r1, r1, r0
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp		r0, #0x4
	beq		_080232fc
_0802331e:
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x6
	bne		_0802336e
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r3, [sp, #0x8]
	mov		r7, #0x0
	ldrsh	r0, [r3, r7]
	lsl		r0, r0, #0x2
	ldr		r2, _08023418
	add		r0, r0, r2
	add		r1, r1, r0
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	add		r4, r6, #0x0
	add		r4, #0x6e
	cmp		r0, #0x4
	bne		_0802336e
	add		r2, r4, #0x0
	add		r3, r5, #0x0
	ldr		r4, _08023418
_0802334c:
	ldrh	r0, [r2, #0x0]
	sub		r0, #0x1
	strh	r0, [r2, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	add		r1, r1, r0
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r0, #0x4
	beq		_0802334c
_0802336e:
	add		r0, r6, #0x0
	bl		sub_080234c8
	mov		r7, #0x10
	str		r7, [r6, #0x74]
	mov		r0, #0x80
	lsl		r0, r0, #0xa
	str		r0, [r6, #0x78]
_0802337e:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_080233ce
	add		r4, r6, #0x0
	add		r4, #0x6e
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	ble		_080233ce
	ldr		r2, [sp, #0x4]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r5, _08023420
	add		r1, r1, r5
	mov		r7, #0x0
	ldrsh	r0, [r4, r7]
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x4
	beq		_080233ce
	mov		r0, #0x54
	bl		sub_08016b44
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	bl		sub_080234c8
	add		r0, r6, #0x0
	bl		sub_080235f4
_080233ce:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08023462
	ldr		r3, [sp, #0x4]
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r7, [sp, #0x8]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	lsl		r0, r0, #0x2
	ldr		r3, _08023418
	add		r0, r0, r3
	add		r1, r1, r0
	ldrh	r2, [r1, #0x0]
	sub		r0, r2, #0x2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r5, r6, #0x0
	add		r5, #0x6c
	add		r4, r6, #0x0
	add		r4, #0x6e
	cmp		r0, #0x1
	bls		_08023414
	cmp		r2, #0x1
	bne		_08023424
	mov		r7, #0x2
	ldrsh	r0, [r1, r7]
	cmp		r0, #0x10
	bne		_08023424
_08023414:
	mov		r7, #0x2
	b		_08023426

_08023418:	.4byte 0x080d17b0
_0802341c:	.4byte 0xFFFE0000
_08023420:	.4byte 0x080d17ac

_08023424:
	mov		r7, #0x1
_08023426:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	add		r2, r0, r7
	cmp		r2, #0x6
	bgt		_08023462
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x2
	lsl		r0, r2, #0x2
	ldr		r5, _08023498
	add		r0, r0, r5
	add		r1, r1, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x4
	beq		_08023462
	mov		r0, #0x54
	bl		sub_08016b44
	ldrh	r0, [r4, #0x0]
	add		r0, r0, r7
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	bl		sub_080234c8
	add		r0, r6, #0x0
	bl		sub_080235f4
_08023462:
	ldr		r2, [r6, #0x74]
	cmp		r2, #0x0
	bgt		_0802346a
	b		_08023044
_0802346a:
	ldr		r0, [r6, #0x70]
	ldr		r1, [r6, #0x78]
	add		r0, r0, r1
	str		r0, [r6, #0x70]
	sub		r4, r2, #0x1
	str		r4, [r6, #0x74]
	cmp		r4, #0x0
	beq		_0802347c
	b		_08023044
_0802347c:
	add		r0, r6, #0x0
	bl		sub_08023a50
	add		r0, r6, #0x0
	bl		sub_080235f4
	ldr		r0, [r6, #0x70]
	ldr		r3, _0802349c
	cmp		r0, r3
	bne		_080234a0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x5c
	strb	r4, [r0, #0x0]
	b		_080234a8

_08023498:	.4byte 0x080d17b0
_0802349c:	.4byte 0xFFD00000

_080234a0:
	ldr		r0, [r6, #0x5c]
	add		r0, #0x5c
	mov		r5, #0x1
	strb	r5, [r0, #0x0]
_080234a8:
	ldr		r0, [r6, #0x70]
	mov		r7, #0x90
	lsl		r7, r7, #0x10
	cmp		r0, r7
	bne		_080234bc
	ldr		r0, [r6, #0x60]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	b		_08023044
_080234bc:
	ldr		r0, [r6, #0x60]
	add		r0, #0x5c
	mov		r2, #0x1
	strb	r2, [r0, #0x0]
	b		_08023044

.incbin "base.gba", 0x234C6, 0x2
	thumb_func_end sub_08022fdc

	thumb_func_start sub_080234c8
sub_080234c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	add		r0, #0x6c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r2, r0, #0x3
	sub		r2, r2, r0
	lsl		r2, r2, #0x2
	add		r3, r7, #0x0
	add		r3, #0x6e
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	lsl		r0, r0, #0x2
	ldr		r1, _08023514
	add		r0, r0, r1
	add		r4, r2, r0
	ldr		r0, [r7, #0x58]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r6, #0x0
	ldrsh	r1, [r4, r6]
	cmp		r1, #0x2
	bne		_08023518
	strh	r1, [r3, #0x0]
	ldr		r0, [r7, #0x54]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r2, r0, r3
	lsl		r1, r1, #0x15
	mov		r5, #0xa0
	lsl		r5, r5, #0xe
	add		r1, r1, r5
	b		_0802352e

.incbin "base.gba", 0x23512, 0x2

_08023514:	.4byte 0x080d17b0

_08023518:
	cmp		r1, #0x3
	bne		_0802353a
	strh	r1, [r3, #0x0]
	ldr		r0, [r7, #0x54]
	mov		r6, #0x8e
	lsl		r6, r6, #0x1
	add		r2, r0, r6
	lsl		r1, r1, #0x15
	mov		r3, #0xa0
	lsl		r3, r3, #0xe
	add		r1, r1, r3
_0802352e:
	str		r1, [r2, #0x0]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	b		_080235e6
_0802353a:
	cmp		r1, #0x1
	bne		_08023596
	mov		r5, #0x2
	ldrsh	r0, [r4, r5]
	cmp		r0, #0x10
	bne		_08023596
	mov		r6, #0x1
	mov		r9, r6
	strh	r1, [r3, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0xe
	ldr		r0, [r7, #0x54]
	mov		r4, #0x8e
	lsl		r4, r4, #0x1
	add		r2, r0, r4
	mov		r6, #0x0
	ldrsh	r1, [r3, r6]
	lsl		r1, r1, #0x15
	asr		r3, r5, #0x1
	mov		r8, r3
	mov		r6, #0xa0
	lsl		r6, r6, #0xe
	add		r1, r1, r6
	str		r1, [r2, #0x0]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r7, #0x58]
	add		r0, #0x5c
	mov		r1, r9
	strb	r1, [r0, #0x0]
	ldr		r2, [r7, #0x58]
	add		r3, r2, r4
	ldr		r1, [r7, #0x54]
	add		r4, r1, r4
	ldr		r0, [r4, #0x0]
	add		r0, r0, r5
	str		r0, [r3, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	add		r0, r8
	b		_080235e4
_08023596:
	mov		r3, #0xc0
	lsl		r3, r3, #0xd
	ldr		r0, [r7, #0x54]
	mov		r5, #0x8e
	lsl		r5, r5, #0x1
	add		r2, r0, r5
	add		r1, r7, #0x0
	add		r1, #0x6e
	mov		r6, #0x0
	ldrsh	r1, [r1, r6]
	lsl		r1, r1, #0x15
	add		r1, r1, r3
	str		r1, [r2, #0x0]
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r0, #0x0
	ldrsh	r2, [r4, r0]
	cmp		r2, #0x1
	bne		_080235e6
	ldr		r0, [r7, #0x58]
	add		r0, #0x5c
	strb	r2, [r0, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0xd
	ldr		r2, [r7, #0x58]
	add		r3, r2, r5
	ldr		r1, [r7, #0x54]
	add		r0, r1, r5
	ldr		r0, [r0, #0x0]
	add		r0, r0, r4
	str		r0, [r3, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	add		r0, r0, r4
_080235e4:
	str		r0, [r2, #0x0]
_080235e6:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x235F2, 0x2
	thumb_func_end sub_080234c8

	thumb_func_start sub_080235f4
sub_080235f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x48
	add		r6, r0, #0x0
	ldr		r0, _08023670
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x18]
	ldr		r0, _08023674
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x1C]
	ldr		r0, _08023678
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x20]
	ldr		r0, _0802367c
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x24]
	ldr		r0, _08023680
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x28]
	add		r1, sp, #0x18
	add		r0, sp, #0x4
	mov		r2, #0x14
	bl		sub_0808c818
	mov		r0, #0x6c
	add		r0, r0, r6
	mov		r8, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r2, r0, #0x3
	sub		r2, r2, r0
	lsl		r2, r2, #0x2
	add		r0, r6, #0x0
	add		r0, #0x6e
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x2
	ldr		r1, _08023684
	add		r0, r0, r1
	add		r7, r2, r0
	ldr		r0, [r6, #0x64]
	add		r0, #0x5c
	mov		r5, #0x0
	strb	r5, [r0, #0x0]
	ldr		r0, [r6, #0x68]
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08017ce0
	mov		r0, #0x0
	ldrsh	r4, [r7, r0]
	cmp		r4, #0x1
	beq		_080236e8
	cmp		r4, #0x1
	bgt		_08023688
	cmp		r4, #0x0
	beq		_08023740
	b		_0802382a

_08023670:	.4byte 0x0200B958
_08023674:	.4byte 0x0200B964
_08023678:	.4byte 0x0200B968
_0802367c:	.4byte 0x0200B95C
_08023680:	.4byte 0x0200B960
_08023684:	.4byte 0x080d17b0

_08023688:
	cmp		r4, #0x2
	beq		_08023692
	cmp		r4, #0x3
	beq		_080236bc
	b		_0802382a
_08023692:
	ldr		r0, [r6, #0x64]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r6, #0x64]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, _080236b8
	ldr		r1, [r0, #0x0]
	str		r5, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_08017bc4
	ldr		r1, [sp, #0x4]
	b		_0802372a

_080236b8:	.4byte 0x0200B9C4

_080236bc:
	ldr		r0, [r6, #0x64]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r6, #0x64]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, _080236e4
	ldr		r1, [r0, #0x0]
	str		r5, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_08017bc4
	ldr		r1, [sp, #0x4]
	b		_0802372a

.incbin "base.gba", 0x236E2, 0x2

_080236e4:	.4byte 0x0200B9C0

_080236e8:
	ldr		r0, [r6, #0x64]
	mov		r2, #0x2
	ldrsh	r1, [r7, r2]
	bl		sub_08017fb0
	ldr		r0, [r6, #0x64]
	add		r0, #0x5c
	strb	r4, [r0, #0x0]
	ldr		r1, _08023738
	mov		r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	str		r5, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_08017bc4
	ldr		r2, _0802373c
	mov		r4, #0x2
	ldrsh	r1, [r7, r4]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldr		r0, [r0, #0x4]
	lsl		r0, r0, #0x2
	add		r0, sp
	add		r0, #0x4
	ldr		r1, [r0, #0x0]
_0802372a:
	str		r5, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x2
	mov		r3, #0x16
	bl		sub_08017bc4
	b		_0802382a

_08023738:	.4byte 0x0200D2B0
_0802373c:	.4byte 0x080d136c

_08023740:
	mov		r5, #0x0
	mov		r9, r5
	ldr		r0, _08023774
	bl		sub_0800227c
	ldr		r1, _08023778
	mov		r10, r1
	cmp		r0, #0x0
	beq		_080237a6
	mov		r2, #0x2
	ldrsh	r0, [r7, r2]
	cmp		r0, #0x2
	bne		_080237a6
	add		r2, sp, #0x2c
	add		r1, r2, #0x0
	ldr		r0, _0802377c
	ldmia	r0!, { r3, r4, r5 }
	stmia	r1!, {  r3, r4, r5 }
	ldmia	r0!, { r3, r4, r5 }
	stmia	r1!, {  r3, r4, r5 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r4, #0x0
	mov		r5, r8
	mov		r8, r2
	b		_08023782

_08023774:	.4byte 0x00000416
_08023778:	.4byte 0x080d2244
_0802377c:	.4byte 0x080d2228

_08023780:
	add		r4, #0x1
_08023782:
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r4, r0
	bge		_080237a6
	lsl		r0, r4, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_080237a6
	add		r0, r1, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023780
	mov		r2, #0x1
	mov		r9, r2
_080237a6:
	mov		r3, r9
	cmp		r3, #0x1
	bne		_080237ea
	mov		r4, #0x2
	ldrsh	r0, [r7, r4]
	cmp		r0, #0x4
	beq		_080237c6
	ldr		r0, [r6, #0x68]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r6, #0x68]
	add		r0, #0x5c
	mov		r5, r9
	strb	r5, [r0, #0x0]
_080237c6:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_08017bc4
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x16
	bl		sub_08016ff0
	b		_0802382a
_080237ea:
	mov		r2, #0x2
	ldrsh	r0, [r7, r2]
	cmp		r0, #0x4
	beq		_08023806
	ldr		r0, [r6, #0x68]
	mov		r3, #0x2
	ldrsh	r1, [r7, r3]
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r6, #0x68]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
_08023806:
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_08017bc4
	mov		r5, #0x2
	ldrsh	r1, [r7, r5]
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x2
	mov		r3, #0x16
	bl		sub_08016ff0
_0802382a:
	add		sp, #0x48
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2383A, 0x2
	push	{ r4, lr }
	ldr		r4, _08023968
	ldr		r0, _0802396c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023970
	ldr		r0, _08023974
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023978
	ldr		r0, _0802397c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023980
	ldr		r0, _08023984
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023988
	ldr		r0, _0802398c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023990
	ldr		r0, _08023994
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023998
	ldr		r0, _0802399c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239a0
	ldr		r0, _080239a4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239a8
	ldr		r0, _080239ac
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239b0
	ldr		r0, _080239b4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239b8
	ldr		r0, _080239bc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239c0
	ldr		r0, _080239c4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239c8
	ldr		r0, _080239cc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239d0
	ldr		r0, _080239d4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239d8
	ldr		r0, _080239dc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239e0
	ldr		r0, _080239e4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239e8
	ldr		r0, _080239ec
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239f0
	ldr		r0, _080239f4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080239f8
	ldr		r0, _080239fc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a00
	ldr		r0, _08023a04
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a08
	ldr		r0, _08023a0c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a10
	ldr		r0, _08023a14
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a18
	ldr		r0, _08023a1c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a20
	ldr		r0, _08023a24
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a28
	ldr		r0, _08023a2c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a30
	ldr		r0, _08023a34
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a38
	ldr		r0, _08023a3c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a40
	ldr		r0, _08023a44
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08023a48
	ldr		r0, _08023a4c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x23966, 0x2

_08023968:	.4byte 0x0200B9C4
_0802396c:	.4byte 0x080d2248 @ ms_ta_0012
_08023970:	.4byte 0x0200B9C0
_08023974:	.4byte 0x080d2254 @ ms_ta_0013
_08023978:	.4byte 0x0200B9BC
_0802397c:	.4byte 0x080d2260 @ ms_PGname_1
_08023980:	.4byte 0x0200B9B8
_08023984:	.4byte 0x080d226c @ ms_PGname_2
_08023988:	.4byte 0x0200B9B4
_0802398c:	.4byte 0x080d2278 @ ms_PGname_3
_08023990:	.4byte 0x0200B9B0
_08023994:	.4byte 0x080d2284 @ ms_PGname_4
_08023998:	.4byte 0x0200B9AC
_0802399c:	.4byte 0x080d2290 @ ms_PGname_5
_080239a0:	.4byte 0x0200B9A8
_080239a4:	.4byte 0x080d229c @ ms_PGname_6
_080239a8:	.4byte 0x0200B9A4
_080239ac:	.4byte 0x080d22a8 @ ms_PGname_7
_080239b0:	.4byte 0x0200B9A0
_080239b4:	.4byte 0x080d22b4 @ ms_PGname_8
_080239b8:	.4byte 0x0200B99C
_080239bc:	.4byte 0x80d22c0 @ ms_PGname_9
_080239c0:	.4byte 0x0200B998
_080239c4:	.4byte 0x080d22cc @ ms_PGname_10
_080239c8:	.4byte 0x0200B994
_080239cc:	.4byte 0x080d22dc @ ms_PGname_11
_080239d0:	.4byte 0x0200B990
_080239d4:	.4byte 0x080d22ec @ ms_PGname_12
_080239d8:	.4byte 0x0200B98C
_080239dc:	.4byte 0x080d22fc @ ms_PGname_13
_080239e0:	.4byte 0x0200B988
_080239e4:	.4byte 0x080d230c @ ms_PGname_14
_080239e8:	.4byte 0x0200B984
_080239ec:	.4byte 0x080d231c @ ms_PGname_15
_080239f0:	.4byte 0x0200B980
_080239f4:	.4byte 0x080d232c @ ms_PGname_16
_080239f8:	.4byte 0x0200B97C
_080239fc:	.4byte 0x080d233c @ ms_PGname_17
_08023a00:	.4byte 0x0200B978
_08023a04:	.4byte 0x080d234c @ ms_PGname_18
_08023a08:	.4byte 0x0200B974
_08023a0c:	.4byte 0x080d235c @ ms_PGname_19
_08023a10:	.4byte 0x0200B970
_08023a14:	.4byte 0x080d236c @ ms_PGname_20
_08023a18:	.4byte 0x0200B96C
_08023a1c:	.4byte 0x080d237c @ ms_PGname_21
_08023a20:	.4byte 0x0200B968
_08023a24:	.4byte 0x080d238c @ ms_ta_0102color
_08023a28:	.4byte 0x0200B964
_08023a2c:	.4byte 0x080d239c @ ms_ta_0103color
_08023a30:	.4byte 0x0200B960
_08023a34:	.4byte 0x080d23ac @ ms_ta_0104color
_08023a38:	.4byte 0x0200B95C
_08023a3c:	.4byte 0x080d23bc @ ms_ta_0105color
_08023a40:	.4byte 0x0200B958
_08023a44:	.4byte 0x080d23cc @ ms_ta_0106color
_08023a48:	.4byte 0x0200B954
_08023a4c:	.4byte 0x080d23dc @ ms_ta_0910
	thumb_func_end sub_080235f4

	thumb_func_start sub_08023a50
sub_08023a50:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x48]
	add		r4, r5, #0x0
	add		r4, #0x6c
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _08023a80
	add		r0, #0xd0
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r1, r0
	bne		_08023a84
	ldr		r0, [r5, #0x4c]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_08017d20
	b		_08023a8e

_08023a80:	.4byte 0x02000BAC

_08023a84:
	ldr		r0, [r5, #0x4c]
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_08017d20
_08023a8e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08023a50

	thumb_func_start sub_08023a94
sub_08023a94:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4c
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	add		r0, r6, #0x0
	add		r0, #0x54
	add		r1, r5, #0x0
	bl		sub_080004f4
	ldr		r0, _08023c08
	str		r0, [r6, #0x4c]
	ldr		r0, _08023c0c
	str		r0, [r6, #0xc]
	str		r4, [r6, #0x5c]
	ldr		r1, _08023c10
	lsl		r0, r4, #0x2
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	mov		r2, #0x0
	add		r0, #0x14
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xb8
	str		r0, [sp, #0x18]
	add		r1, r6, #0x0
	add		r1, #0xa8
	str		r1, [sp, #0x44]
	add		r3, r6, #0x0
	add		r3, #0xe8
	str		r3, [sp, #0xC]
	add		r0, #0x24
	str		r0, [sp, #0x3C]
	add		r1, #0x1c
	str		r1, [sp, #0x24]
	sub		r3, #0x34
	str		r3, [sp, #0x14]
	sub		r0, #0x30
	str		r0, [sp, #0x8]
	sub		r1, #0x14
	str		r1, [sp, #0x10]
	add		r3, #0x8
	str		r3, [sp, #0x1C]
	add		r0, #0x24
	str		r0, [sp, #0x30]
	add		r1, #0x24
	str		r1, [sp, #0x34]
	add		r3, #0x1c
	str		r3, [sp, #0x38]
	sub		r0, #0x10
	str		r0, [sp, #0x20]
	sub		r1, #0xc
	str		r1, [sp, #0x28]
	sub		r3, #0xc
	str		r3, [sp, #0x2C]
	add		r0, #0x20
	str		r0, [sp, #0x40]
	add		r1, #0x1c
	str		r1, [sp, #0x4]
	sub		r3, #0x68
	str		r3, [sp, #0x48]
_08023b24:
	mov		r5, #0x0
	lsl		r0, r2, #0x2
	add		r0, r0, r2
	ldr		r3, [sp, #0x0]
	add		r1, r3, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	add		r3, r2, #0x1
	mov		r9, r3
	cmp		r5, r0
	bge		_08023b6a
	mov		r10, r5
	mov		r8, r1
	lsl		r0, r2, #0x4
	ldr		r1, [sp, #0x48]
	add		r7, r0, r1
_08023b44:
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r3, r10
	str		r3, [r4, #0x6c]
	stmia	r7!, {  r4 }
	add		r5, #0x1
	mov		r1, r8
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r5, r0
	blt		_08023b44
_08023b6a:
	mov		r2, r9
	cmp		r2, #0x3
	ble		_08023b24
	mov		r1, #0x0
	ldr		r2, _08023c14
	ldr		r3, [sp, #0x18]
	str		r2, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x20
	ldr		r3, [sp, #0x44]
	str		r0, [r3, #0x0]
	add		r0, #0x20
	ldr		r3, [sp, #0xC]
	str		r0, [r3, #0x0]
	add		r0, #0x40
	ldr		r3, [sp, #0x3C]
	str		r0, [r3, #0x0]
	add		r0, #0x20
	ldr		r3, [sp, #0x24]
	str		r0, [r3, #0x0]
	add		r0, #0x30
	ldr		r3, [sp, #0x14]
	str		r0, [r3, #0x0]
	add		r0, #0x20
	ldr		r3, [sp, #0x8]
	str		r0, [r3, #0x0]
	mov		r3, #0x88
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r3, [sp, #0x10]
	str		r0, [r3, #0x0]
	mov		r3, #0x98
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r3, [sp, #0x1C]
	str		r0, [r3, #0x0]
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r3, [sp, #0x30]
	str		r0, [r3, #0x0]
	mov		r3, #0xa8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r3, [sp, #0x34]
	str		r0, [r3, #0x0]
	mov		r3, #0xb8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r3, [sp, #0x38]
	str		r0, [r3, #0x0]
	mov		r3, #0xd8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r3, [sp, #0x20]
	str		r0, [r3, #0x0]
	ldr		r0, [sp, #0x28]
	str		r1, [r0, #0x0]
	mov		r3, #0xe8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r3, [sp, #0x2C]
	str		r0, [r3, #0x0]
	ldr		r0, [sp, #0x40]
	str		r1, [r0, #0x0]
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r3, [sp, #0x4]
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	add		sp, #0x4c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08023c08:	.4byte 0x080e0f54
_08023c0c:	.4byte 0x080e0f6c
_08023c10:	.4byte 0x080d136c
_08023c14:	.4byte 0x02000C9C
	thumb_func_end sub_08023a94

	thumb_func_start sub_08023c18
sub_08023c18:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	mov		r10, r0
	ldr		r2, _08023ca4
	ldr		r1, [r0, #0x5c]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	str		r0, [sp, #0x8]
	ldr		r5, _08023ca8
	mov		r4, #0x13
_08023c38:
	ldr		r0, [r5, #0x0]
	bl		sub_0800223c
	add		r5, #0x8
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08023c38
	mov		r6, #0x0
	ldr		r0, [sp, #0x8]
	add		r0, #0x14
	str		r0, [sp, #0xC]
	mov		r1, r10
	add		r1, #0xa4
	str		r1, [sp, #0x10]
_08023c54:
	mov		r5, #0x0
	lsl		r1, r6, #0x2
	add		r0, r1, r6
	ldr		r2, [sp, #0xC]
	add		r0, r2, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r8, r1
	add		r2, r6, #0x1
	mov		r9, r2
	cmp		r5, r0
	bge		_08023ce2
	ldr		r7, [sp, #0x8]
	add		r7, #0x15
_08023c72:
	add		r0, r1, r6
	add		r0, r5, r0
	add		r0, r7, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x3
	ldr		r1, _08023ca8
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	ldr		r2, _08023cac
	cmp		r4, r2
	bne		_08023cc8
	ldr		r0, _08023cb0
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08023cc8
	ldr		r0, _08023cb4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023cbc
	ldr		r4, _08023cb8
	b		_08023cc8

_08023ca4:	.4byte 0x080d136c
_08023ca8:	.4byte 0x080d23e8
_08023cac:	.4byte 0x00000939
_08023cb0:	.4byte 0x000004BA
_08023cb4:	.4byte 0x000004BB
_08023cb8:	.4byte 0x0000093A

_08023cbc:
	ldr		r0, _08023ec0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023cc8
	ldr		r4, _08023ec4
_08023cc8:
	add		r0, r4, #0x0
	bl		sub_08002268
	add		r5, #0x1
	mov		r1, r8
	add		r0, r1, r6
	ldr		r2, [sp, #0xC]
	add		r0, r2, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r5, r0
	blt		_08023c72
_08023ce2:
	mov		r6, r9
	cmp		r6, #0x3
	ble		_08023c54
	mov		r0, #0x15
	bl		sub_08016be8
	ldr		r6, _08023ec8
	ldr		r0, _08023ecc
	ldr		r1, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r2, #0x44
	bl		sub_0808c818
	mov		r4, #0x0
	mov		r0, #0x4
	ldrsh	r2, [r6, r0]
	ldr		r3, _08023ed0
	eor		r2, r3
	neg		r1, r2
	orr		r1, r2
	cmp		r1, #0x0
	bge		_08023d22
	add		r0, r6, #0x4
_08023d10:
	add		r0, #0x2
	add		r4, #0x1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	eor		r2, r3
	neg		r1, r2
	orr		r1, r2
	cmp		r1, #0x0
	blt		_08023d10
_08023d22:
	ldr		r0, _08023ed4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023d3a
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x10
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023d3a:
	ldr		r0, _08023ed8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023d52
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x11
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023d52:
	ldr		r0, _08023edc
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023d6a
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x12
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023d6a:
	ldr		r0, _08023ee0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023d82
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x13
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023d82:
	ldr		r0, _08023ee4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023d9a
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x14
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023d9a:
	ldr		r0, _08023ee8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023db2
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x15
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023db2:
	ldr		r0, _08023eec
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023dca
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x16
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023dca:
	ldr		r0, _08023ef0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023de2
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x17
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023de2:
	mov		r0, #0x92
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023dfc
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x18
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023dfc:
	ldr		r0, _08023ef4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023e14
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023e14:
	ldr		r0, _08023ef8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023e2c
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x1a
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023e2c:
	ldr		r0, _08023efc
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023e44
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x1b
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023e44:
	ldr		r0, _08023f00
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023e5c
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x1c
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023e5c:
	ldr		r0, _08023f04
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08023e74
	ldr		r0, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x1d
	strh	r0, [r1, #0x0]
	add		r4, #0x1
_08023e74:
	ldr		r2, _08023ec8
	lsl		r1, r4, #0x1
	add		r0, r2, #0x4
	add		r1, r1, r0
	mov		r4, #0x0
	ldr		r0, _08023f08
	strh	r0, [r1, #0x0]
	ldr		r0, _08023ecc
	str		r2, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08017ce0
	ldr		r1, _08023f0c
	mov		r2, r10
	ldr		r0, [r2, #0x5c]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x6
	mov		r3, #0x7
	bl		sub_08017bc4
	mov		r0, #0x1
	bl		sub_08017ce0
	mov		r1, r10
	ldr		r0, [r1, #0x5c]
	sub		r0, #0x5
	cmp		r0, #0xe
	bhi		_08023f64
	lsl		r0, r0, #0x2
	ldr		r1, _08023f10
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08023ec0:	.4byte 0x000004BC
_08023ec4:	.4byte 0x0000093B
_08023ec8:	.4byte 0x0200B6A8
_08023ecc:	.4byte 0x0200A208
_08023ed0:	.4byte 0xFFFF8080
_08023ed4:	.4byte 0x00000918
_08023ed8:	.4byte 0x00000919
_08023edc:	.4byte 0x0000091A
_08023ee0:	.4byte 0x0000091B
_08023ee4:	.4byte 0x0000091C
_08023ee8:	.4byte 0x0000091D
_08023eec:	.4byte 0x0000091E
_08023ef0:	.4byte 0x0000091F
_08023ef4:	.4byte 0x00000921
_08023ef8:	.4byte 0x00000922
_08023efc:	.4byte 0x00000923
_08023f00:	.4byte 0x00000924
_08023f04:	.4byte 0x00000925
_08023f08:	.4byte 0x00008080
_08023f0c:	.4byte 0x0200D2B0
_08023f10:	.4byte 0x08023f14
_08023f14:	.4byte 0x08023f50

.incbin "base.gba", 0x23F18, 0x38
	thumb_func_end sub_08023c18


.incbin "base.gba", 0x23F50, 0x14

_08023f64:

.incbin "base.gba", 0x23F64, 0x24
_08023f88:	.4byte 0x0200A26C
_08023f8c:	.4byte 0x08023f90

.incbin "base.gba", 0x23F90, 0x30

_08023fc0:

.incbin "base.gba", 0x23FC0, 0x34
_08023ff4:	.4byte 0x080d2488 @ ms_K_best_score
_08023ff8:	.4byte 0x08023ffc

.incbin "base.gba", 0x23FFC, 0x3C

_08024038:

.incbin "base.gba", 0x24038, 0xC2
_080240fa:

.incbin "base.gba", 0x240FA, 0x8
_08024102:

.incbin "base.gba", 0x24102, 0x16
_08024118:	.4byte 0x0200A26C

_0802411c:

.incbin "base.gba", 0x2411C, 0xA
_08024126:

.incbin "base.gba", 0x24126, 0x6
_0802412c:

.incbin "base.gba", 0x2412C, 0x8
_08024134:

.incbin "base.gba", 0x24134, 0x8
_0802413c:

.incbin "base.gba", 0x2413C, 0x4
_08024140:

.incbin "base.gba", 0x24140, 0x2
_08024142:

.incbin "base.gba", 0x24142, 0x34
_08024176:

.incbin "base.gba", 0x24176, 0x32
_080241a8:	.4byte 0x080d23ec
_080241ac:	.4byte 0x000004BA
_080241b0:	.4byte 0x000004BB

_080241b4:

.incbin "base.gba", 0x241B4, 0xC
_080241c0:

.incbin "base.gba", 0x241C0, 0x4C
_0802420c:

.incbin "base.gba", 0x2420C, 0x8
_08024214:

.incbin "base.gba", 0x24214, 0x20
_08024234:	.4byte 0x000004BC
_08024238:	.4byte 0x0000FFFF
	thumb_func_start sub_0802423c
sub_0802423c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	bl		sub_08023c18
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r6, #0x10
	ldr		r0, _08024340
	mov		r10, r0
	ldr		r1, _08024344
	mov		r9, r1
	ldr		r0, _08024348
	mov		r8, r0
	add		r1, r5, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x0]
	add		r7, r5, #0x0
	add		r7, #0xa4
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_08024274:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_0802427c
	add		r0, #0xf
_0802427c:
	asr		r0, r0, #0x4
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r1, _0802434c
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08024274
_080242ae:
	mov		r0, #0x1
	mov		r8, r0
	mov		r6, #0x96
_080242b4:
	ldr		r0, [sp, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08024350
	mov		r0, #0x56
	bl		sub_08016b44
	add		r7, r5, #0x0
	add		r7, #0x54
	ldr		r1, _08024340
	mov		r10, r1
	ldr		r0, _08024344
	mov		r9, r0
	ldr		r1, _08024348
	mov		r8, r1
	mov		r6, #0x0
	mov		r4, #0x10
_080242ea:
	neg		r0, r6
	cmp		r0, #0x0
	bge		_080242f2
	add		r0, #0xf
_080242f2:
	asr		r0, r0, #0x4
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r1, _0802434c
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	ldr		r0, [sp, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080242ea
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	add		r0, r7, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_08024336:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08024336

_08024340:	.4byte 0x0200EB1E
_08024344:	.4byte 0x0200EB20
_08024348:	.4byte 0x0200EB22
_0802434c:	.4byte 0x0200EB24

_08024350:
	add		r1, r7, #0x0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	ble		_08024372
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080242ae
	ldr		r0, [r5, #0x60]
	add		r0, #0x5c
	mov		r1, r8
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x60]
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_08017d20
_08024372:
	ldr		r4, [r7, #0x0]
	cmp		r4, #0x0
	bne		_080242b4
	ldr		r0, [r5, #0x60]
	bl		sub_08017d10
	cmp		r0, #0x0
	beq		_080242b4
	ldr		r0, [r5, #0x60]
	add		r0, #0x5c
	strb	r4, [r0, #0x0]
	str		r6, [r7, #0x0]
	b		_080242b4
	thumb_func_end sub_0802423c

	thumb_func_start sub_0802438c
sub_0802438c:
	lsl		r1, r1, #0x2
	add		r1, #0xa8
	add		r0, r0, r1
	bx		lr
	thumb_func_end sub_0802438c

	thumb_func_start sub_08024394
sub_08024394:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r3, _080243f8
	ldr		r2, [r0, #0x5c]
	lsl		r1, r2, #0x2
	add		r1, r1, r2
	lsl		r1, r1, #0x3
	add		r1, r1, r3
	mov		r2, #0x0
	add		r1, #0x14
	mov		r9, r1
	add		r0, #0x64
	mov		r8, r0
_080243b2:
	mov		r5, #0x0
	lsl		r0, r2, #0x2
	add		r0, r0, r2
	mov		r3, r9
	add		r1, r3, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	add		r7, r2, #0x1
	cmp		r5, r0
	bge		_080243e6
	add		r6, r1, #0x0
	lsl		r0, r2, #0x4
	mov		r1, r8
	add		r4, r0, r1
_080243ce:
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldmia	r4!, { r0 }
	bl		sub_0808e4a0
	add		r5, #0x1
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r5, r0
	blt		_080243ce
_080243e6:
	add		r2, r7, #0x0
	cmp		r2, #0x3
	ble		_080243b2
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080243f8:	.4byte 0x080d136c
	thumb_func_end sub_08024394

	thumb_func_start sub_080243fc
sub_080243fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	str		r1, [sp, #0x0]
	ldr		r0, _080244a0
	str		r0, [r7, #0x4c]
	ldr		r0, _080244a4
	str		r0, [r7, #0xc]
	ldr		r2, _080244a8
	ldr		r1, [r7, #0x5c]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	mov		r2, #0x0
	add		r0, #0x14
	mov		r10, r0
	add		r0, r7, #0x0
	add		r0, #0x40
	str		r0, [sp, #0x4]
	mov		r1, #0x64
	add		r1, r1, r7
	mov		r9, r1
_08024432:
	mov		r5, #0x0
	lsl		r0, r2, #0x2
	add		r0, r0, r2
	mov		r3, r10
	add		r1, r3, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	add		r3, r2, #0x1
	mov		r8, r3
	cmp		r5, r0
	bge		_08024468
	add		r6, r1, #0x0
	lsl		r0, r2, #0x4
	mov		r1, r9
	add		r4, r0, r1
_08024450:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802445c
	mov		r1, #0x3
	bl		sub_0808e28c
_0802445c:
	add		r4, #0x4
	add		r5, #0x1
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r5, r0
	blt		_08024450
_08024468:
	mov		r2, r8
	cmp		r2, #0x3
	ble		_08024432
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	ldr		r3, [sp, #0x0]
	and		r0, r3
	cmp		r0, #0x0
	beq		_0802448e
	add		r0, r7, #0x0
	bl		sub_080b74c8
_0802448e:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2449E, 0x2

_080244a0:	.4byte 0x080e0f54
_080244a4:	.4byte 0x080e0f6c
_080244a8:	.4byte 0x080d136c
	thumb_func_end sub_080243fc

	thumb_func_start sub_080244ac
sub_080244ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x2c
	str		r0, [sp, #0x0]
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	ldr		r2, [sp, #0x0]
	add		r1, #0x4
	add		r0, r2, r1
	str		r5, [r0, #0x0]
	mov		r0, #0x17
	bl		sub_08016be8
	ldr		r4, _080246ec
	ldr		r6, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x1
	bl		sub_0800bcd0
	ldr		r2, [sp, #0x0]
	str		r0, [r2, #0x50]
	ldr		r0, [r2, #0x48]
	cmp		r0, #0x1
	bne		_080244f4
	add		r0, r6, #0x0
	mov		r1, #0x2e
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
_080244f4:
	mov		r6, #0x0
	ldr		r5, [sp, #0x0]
	add		r5, #0x74
	str		r5, [sp, #0x1C]
	ldr		r0, [sp, #0x0]
	add		r0, #0x7c
	str		r0, [sp, #0x24]
	ldr		r1, [sp, #0x0]
	add		r1, #0x88
	str		r1, [sp, #0x8]
	ldr		r2, [sp, #0x0]
	add		r2, #0x8c
	str		r2, [sp, #0xC]
	ldr		r5, [sp, #0x0]
	add		r5, #0xa0
	str		r5, [sp, #0x10]
	ldr		r0, [sp, #0x0]
	add		r0, #0x78
	str		r0, [sp, #0x20]
	ldr		r1, [sp, #0x0]
	add		r1, #0x4c
	str		r1, [sp, #0x14]
	ldr		r0, _080246f0
	ldr		r5, [sp, #0x0]
	add		r5, #0x5a
	ldr		r4, [sp, #0x0]
	add		r4, #0x58
	ldr		r3, [sp, #0x0]
	add		r3, #0x56
	ldr		r2, [sp, #0x0]
	add		r2, #0x54
	add		r7, r0, #0x0
	add		r7, #0x8
_08024536:
	ldmia	r7!, { r0 }
	strh	r6, [r2, #0x0]
	lsl		r1, r0, #0x18
	lsr		r1, r1, #0x18
	strh	r1, [r3, #0x0]
	lsr		r1, r0, #0x8
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	strh	r1, [r4, #0x0]
	lsr		r0, r0, #0x10
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	strh	r0, [r5, #0x0]
	add		r5, #0x8
	add		r4, #0x8
	add		r3, #0x8
	add		r2, #0x8
	add		r6, #0x1
	cmp		r6, #0x3
	ble		_08024536
	mov		r2, #0x0
	mov		r9, r2
_08024562:
	mov		r1, r9
	add		r1, #0x2
	ldr		r0, _080246f4
	bl		sub_0800bcd0
	mov		r5, r9
	lsl		r4, r5, #0x1
	add		r2, r4, r5
	lsl		r3, r2, #0x4
	ldr		r5, [sp, #0x1C]
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	mov		r10, r0
	mov		r1, r9
	add		r1, #0x1
	str		r1, [sp, #0x18]
	lsl		r2, r2, #0x1
	ldr		r5, [sp, #0xC]
	add		r5, r5, r3
	mov		r8, r5
	add		r7, r2, #0x0
	add		r7, #0x17
	ldr		r0, [sp, #0x8]
	add		r6, r3, r0
	add		r5, r2, #0x0
	add		r5, #0x16
	ldr		r1, [sp, #0x24]
	add		r3, r3, r1
	str		r3, [sp, #0x28]
	mov		r0, r9
	add		r0, #0xa
	add		r4, r4, r0
_080245a4:
	ldr		r0, _080246f4
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	ldr		r2, [sp, #0x28]
	stmia	r2!, { r0 }
	str		r2, [sp, #0x28]
	mov		r1, r10
	mov		r2, #0x0
	bl		sub_08017d20
	ldr		r0, _080246f4
	add		r1, r5, #0x0
	bl		sub_0800bcd0
	str		r0, [r6, #0x0]
	ldr		r0, _080246f4
	add		r1, r7, #0x0
	bl		sub_0800bcd0
	mov		r1, r8
	str		r0, [r1, #0x0]
	mov		r2, #0x8
	add		r8, r2
	add		r7, #0x2
	add		r6, #0x8
	add		r5, #0x2
	add		r4, #0x1
	mov		r0, #0x1
	add		r10, r0
	mov		r1, r10
	cmp		r1, #0x2
	ble		_080245a4
	ldr		r2, [sp, #0x18]
	mov		r9, r2
	cmp		r2, #0x3
	ble		_08024562
	ldr		r5, [sp, #0x0]
	ldr		r0, [r5, #0x74]
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r5, #0x0
	ldrsh	r2, [r0, r5]
	str		r2, [sp, #0x4]
	mov		r7, #0x0
_08024600:
	ldr		r1, _080246f8
	add		r0, r7, r1
	ldrb	r5, [r0, #0x0]
	lsl		r4, r7, #0x1
	add		r4, r4, r7
	lsl		r4, r4, #0x4
	ldr		r2, [sp, #0x10]
	add		r6, r2, r4
	lsl		r0, r5, #0x3
	add		r0, #0x54
	ldr		r1, [sp, #0x0]
	add		r0, r1, r0
	str		r0, [r6, #0x0]
	ldr		r2, [sp, #0x1C]
	add		r0, r2, r4
	ldr		r0, [r0, #0x0]
	ldr		r2, _080246f0
	add		r1, r7, r2
	ldrb	r1, [r1, #0x0]
	ldr		r2, [sp, #0x4]
	add		r1, r2, r1
	mov		r2, #0x2
	bl		sub_08017d20
	add		r5, #0x6
	ldr		r0, _080246f4
	add		r1, r5, #0x0
	bl		sub_0800bcd0
	ldr		r5, [sp, #0x20]
	add		r1, r5, r4
	str		r0, [r1, #0x0]
	lsl		r1, r7, #0x15
	mov		r2, #0xa8
	lsl		r2, r2, #0xe
	add		r1, r1, r2
	mov		r5, #0x90
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	str		r1, [r0, #0x0]
	mov		r0, #0x0
	mov		r9, r0
	add		r7, #0x1
	mov		r10, r7
	mov		r8, r6
	ldr		r1, [sp, #0xC]
	add		r6, r4, r1
	ldr		r2, [sp, #0x8]
	add		r7, r4, r2
_08024662:
	ldr		r5, [r7, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	mov		r2, r9
	lsl		r4, r2, #0x1
	add		r0, #0x2
	add		r0, r0, r4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r5, [r6, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, #0x2
	add		r0, r0, r4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	add		r6, #0x8
	add		r7, #0x8
	mov		r2, #0x1
	add		r9, r2
	mov		r5, r9
	cmp		r5, #0x2
	ble		_08024662
	mov		r7, r10
	cmp		r7, #0x3
	ble		_08024600
	ldr		r3, _080246fc
	ldr		r0, [sp, #0x14]
	mov		r1, #0x8
	add		r2, r3, #0x0
	bl		sub_08016cb0
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x2
	bl		sub_08016b70
	add		sp, #0x2c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x246EA, 0x2

_080246ec:	.4byte 0x080d2498
_080246f0:	.4byte 0x02000F5C
_080246f4:	.4byte 0x0200A26C
_080246f8:	.4byte 0x02000F60
_080246fc:	.4byte 0xFFFFC000
	thumb_func_end sub_080244ac

	thumb_func_start sub_08024700
sub_08024700:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	bl		sub_080244ac
	ldr		r0, [r6, #0x48]
	cmp		r0, #0x1
	bne		_08024774
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x3c
	mov		r0, #0x7c
	add		r0, r0, r6
	mov		r9, r0
	ldr		r1, _08024760
	mov		r10, r1
	ldr		r2, _08024764
	mov		r8, r2
	ldr		r7, _08024768
	ldr		r4, _0802476c
_08024734:
	add		r0, r4, #0x0
	mov		r1, #0x3c
	bl		sub_080bbcac
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r1, _08024770
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08024734
	b		_080247c0

_08024760:	.4byte 0x0200EB1E
_08024764:	.4byte 0x0200EB20
_08024768:	.4byte 0x0200EB22
_0802476c:	.4byte 0xFFFFF8BC
_08024770:	.4byte 0x0200EB24

_08024774:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x10
	mov		r2, #0x7c
	add		r2, r2, r6
	mov		r9, r2
	ldr		r0, _0802485c
	mov		r10, r0
	ldr		r1, _08024860
	mov		r8, r1
	ldr		r7, _08024864
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_08024794:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_0802479c
	add		r0, #0xf
_0802479c:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r2, _08024868
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08024794
_080247c0:
	mov		r0, #0x9c
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r8, r0
	mov		r1, #0x0
	mov		r10, r1
_080247cc:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x48]
	cmp		r0, #0x0
	bne		_08024870
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08024870
	mov		r0, #0x56
	bl		sub_08016b44
	mov		r2, #0x40
	add		r2, r2, r6
	mov		r8, r2
	ldr		r0, _0802485c
	mov		r10, r0
	ldr		r1, _08024860
	mov		r9, r1
	ldr		r7, _08024864
	mov		r5, #0x0
	mov		r4, #0x10
_080247fe:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08024806
	add		r0, #0xf
_08024806:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r2, _08024868
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080247fe
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [r6, #0x48]
	cmp		r0, #0x0
	bne		_08024844
	mov		r0, r8
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_08024844:
	ldr		r0, [r6, #0x48]
	cmp		r0, #0x1
	bne		_08024850
	ldr		r0, _0802486c
	bl		sub_08002268
_08024850:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08024850

.incbin "base.gba", 0x2485A, 0x2

_0802485c:	.4byte 0x0200EB1E
_08024860:	.4byte 0x0200EB20
_08024864:	.4byte 0x0200EB22
_08024868:	.4byte 0x0200EB24
_0802486c:	.4byte 0x00000835

_08024870:
	ldr		r0, [r6, #0x48]
	cmp		r0, #0x1
	bne		_080248f8
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0xb3
	bgt		_0802488e
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080248f8
_0802488e:
	ldr		r2, _080248e4
	mov		r10, r2
	ldr		r0, _080248e8
	mov		r9, r0
	ldr		r1, _080248ec
	mov		r8, r1
	ldr		r7, _080248f0
	mov		r5, #0x0
	mov		r4, #0x3c
_080248a0:
	add		r0, r5, #0x0
	mov		r1, #0x3c
	bl		sub_080bbcac
	strh	r0, [r7, #0x0]
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080248a0
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, _080248f4
	bl		sub_08002268
_080248da:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_080248da

_080248e4:	.4byte 0x0200EB24
_080248e8:	.4byte 0x0200EB1E
_080248ec:	.4byte 0x0200EB20
_080248f0:	.4byte 0x0200EB22
_080248f4:	.4byte 0x00000835

_080248f8:
	mov		r0, #0x9a
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r2, _08024938
	cmp		r0, r2
	bgt		_0802490c
	b		_080247cc
_0802490c:
	mov		r0, r10
	str		r0, [r1, #0x0]
	mov		r1, #0x0
_08024912:
	mov		r4, #0x0
	lsl		r0, r1, #0x1
	add		r7, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	mov		r1, r9
	add		r5, r0, r1
_08024920:
	ldmia	r5!, { r0 }
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_08017d20
	add		r4, #0x1
	cmp		r4, #0x2
	ble		_08024920
	add		r1, r7, #0x0
	cmp		r1, #0x3
	ble		_08024912
	b		_080247cc

_08024938:	.4byte 0x000001A3
	thumb_func_end sub_08024700

	thumb_func_start sub_0802493c
sub_0802493c:
	push	{ lr }
	mov		r2, #0x0
	ldr		r0, _08024980
	mov		r1, #0xed
	lsl		r1, r1, #0x2
	add		r3, r0, r1
	add		r1, #0x1
	add		r0, r0, r1
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08024966
	add		r1, r3, #0x0
_08024956:
	add		r1, #0x1
	add		r2, #0x1
	cmp		r2, #0x2
	bgt		_08024966
	ldrb	r0, [r1, #0x0]
	ldrb	r3, [r1, #0x1]
	cmp		r0, r3
	beq		_08024956
_08024966:
	cmp		r2, #0x3
	bne		_0802497a
	ldr		r0, _08024984
	mov		r2, #0x3
	add		r0, #0x3
_08024970:
	strb	r2, [r0, #0x0]
	sub		r0, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08024970
_0802497a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2497E, 0x2

_08024980:	.4byte 0x02000BAC
_08024984:	.4byte 0x02000F60
	thumb_func_end sub_0802493c

	thumb_func_start sub_08024988
sub_08024988:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r4, #0x0
	add		r1, #0x44
	bl		sub_080004f4
	ldr		r0, _080249bc
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x4c
	bl		sub_08016d24
	mov		r0, #0x1
	str		r0, [r4, #0x48]
	add		r0, r4, #0x0
	bl		sub_0802493c
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x249BA, 0x2

_080249bc:	.4byte 0x080e0f94
	thumb_func_end sub_08024988

	thumb_func_start sub_080249c0
sub_080249c0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	ldr		r0, _080249f4
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x4c
	bl		sub_08016d24
	mov		r0, #0x0
	str		r0, [r4, #0x48]
	add		r0, r4, #0x0
	bl		sub_0802493c
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x249F2, 0x2

_080249f4:	.4byte 0x080e0f94
	thumb_func_end sub_080249c0

	thumb_func_start sub_080249f8
sub_080249f8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	add		r0, r6, #0x0
	add		r0, #0x54
	add		r1, r4, #0x0
	bl		sub_080004f4
	ldr		r0, _08024a74
	str		r0, [r6, #0x4c]
	ldr		r0, _08024a78
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x62
	bl		sub_08016d24
	add		r0, r6, #0x0
	add		r0, #0x60
	mov		r4, #0x0
	strh	r5, [r0, #0x0]
	ldr		r2, _08024a7c
	ldr		r0, [r2, #0x0]
	mov		r1, #0x3
	orr		r0, r1
	str		r0, [r2, #0x0]
	bl		sub_08018224
	mov		r2, #0x91
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	strh	r0, [r1, #0x0]
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	add		r2, #0x14
	add		r0, r6, r2
	strh	r4, [r0, #0x0]
	add		r1, #0x4
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	mov		r2, #0x0
	sub		r1, #0x14
	add		r0, r6, r1
	mov		r1, #0x1
_08024a60:
	str		r2, [r0, #0x8]
	stmia	r0!, {  r2 }
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08024a60
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x24A72, 0x2

_08024a74:	.4byte 0x080e034c
_08024a78:	.4byte 0x080e0fbc
_08024a7c:	.4byte 0x0200CE98
	thumb_func_end sub_080249f8

	thumb_func_start sub_08024a80
sub_08024a80:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	mov		r0, #0x9d
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldr		r0, _08024bb8
	strh	r0, [r1, #0x0]
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	mov		r3, #0xa8
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	strh	r1, [r0, #0x0]
	mov		r7, #0x0
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	ldr		r3, _08024bbc
	mov		r9, r3
	cmp		r7, r0
	bge		_08024af8
	add		r0, r1, #0x0
	add		r0, r0, r6
	mov		r8, r0
	sub		r1, #0x10
	add		r5, r6, r1
_08024acc:
	ldr		r0, [r5, #0x8]
	cmp		r0, #0x0
	bne		_08024aea
	ldr		r0, [r5, #0x0]
	ldrb	r4, [r0, #0x0]
	lsl		r4, r4, #0x1
	add		r4, #0x4
	add		r0, r4, #0x0
	bl		sub_0808afb8
	str		r0, [r5, #0x8]
	ldr		r1, [r5, #0x0]
	add		r2, r4, #0x0
	bl		sub_0808c818
_08024aea:
	add		r5, #0x4
	add		r7, #0x1
	mov		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r7, r0
	blt		_08024acc
_08024af8:
	ldr		r0, [r6, #0x5c]
	bl		sub_08016be8
	mov		r0, r9
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0800bcd0
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0800bcd0
	mov		r3, #0xc0
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800bcd0
	mov		r2, #0xbc
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0800bcd0
	mov		r3, #0xbe
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	str		r0, [r1, #0x0]
	mov		r0, #0x2
	mov		r1, #0x8
	bl		sub_0801783c
	ldr		r0, _08024bc0
	add		r0, #0xcc
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	cmp		r1, #0x0
	bne		_08024bcc
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	mov		r3, #0x9f
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	add		r2, #0x6
	add		r1, r6, r2
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
	add		r3, #0x6
	add		r1, r6, r3
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0800bcd0
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0800bcd0
	mov		r3, #0xac
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_0800bcd0
	mov		r2, #0xae
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x5
	b		_08024c30

_08024bb8:	.4byte 0x0000FFFF
_08024bbc:	.4byte 0x080d249c
_08024bc0:	.4byte 0x02000BAC

_08024bc4:
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_08024d10
_08024bcc:
	mov		r3, #0x9e
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	mov		r2, #0x0
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	mov		r0, #0x9f
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strh	r2, [r0, #0x0]
	mov		r2, #0xa1
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	add		r3, #0x8
	add		r1, r6, r3
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_0800bcd0
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x5
	bl		sub_0800bcd0
	mov		r3, #0xac
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0800bcd0
	mov		r2, #0xae
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x3
_08024c30:
	bl		sub_0800bcd0
	mov		r3, #0xb0
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x6
	bl		sub_0800bcd0
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	mov		r3, #0xa3
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080251c4
	mov		r0, r9
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_0800bcd0
	mov		r2, #0xb8
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x7
	bl		sub_0800bcd0
	mov		r3, #0xb4
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_0800bcd0
	mov		r2, #0xb6
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0800bcd0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	mov		r3, #0xaa
	lsl		r3, r3, #0x1
	add		r4, r6, r3
	mov		r5, #0xe0
	lsl		r5, r5, #0xd
	mov		r3, #0x4
_08024cae:
	ldmia	r4!, { r0 }
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	add		r2, r2, r5
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08024cae
	add		r0, r6, #0x0
	bl		sub_08025390
	add		r0, r6, #0x0
	bl		sub_080255ac
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r3, #0x9a
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	ldrh	r0, [r0, #0x0]
	mov		r2, #0xa5
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_08024d10
	sub		r3, #0x10
	add		r2, r6, r3
_08024cf0:
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	sub		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	cmp		r0, #0x0
	beq		_08024d04
	b		_08024bc4
_08024d04:
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bgt		_08024cf0
_08024d10:
	add		r0, r6, #0x0
	bl		sub_08025e20
	ldr		r1, [r6, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x40
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x44]
	bl		sub_080bbc74
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08024a80

	thumb_func_start sub_08024d3c
sub_08024d3c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	bl		sub_08024a80
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r6, #0x10
	ldr		r0, _08024dcc
	mov		r10, r0
	ldr		r1, _08024dd0
	mov		r9, r1
	ldr		r2, _08024dd4
	mov		r8, r2
	ldr		r7, _08024dd8
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_08024d6a:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_08024d72
	add		r0, #0xf
_08024d72:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08024d6a
_08024d96:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r1, [r5, #0xc]
	mov		r3, #0x30
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x34]
	bl		sub_080bbc74
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08024e1e
	mov		r0, #0x9d
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x7
	bne		_08024ddc
	ldr		r1, [r5, #0xc]
	mov		r2, #0x38
	ldrsh	r0, [r1, r2]
	b		_08024f4e

_08024dcc:	.4byte 0x0200EB24
_08024dd0:	.4byte 0x0200EB1E
_08024dd4:	.4byte 0x0200EB20
_08024dd8:	.4byte 0x0200EB22

_08024ddc:
	mov		r0, #0x55
	bl		sub_08016b44
	mov		r0, #0x7
	strh	r0, [r4, #0x0]
	mov		r3, #0xb8
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08024dfe
	neg		r1, r0
_08024dfe:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08024e06
	neg		r1, r1
_08024e06:
	add		r0, r5, #0x0
	bl		sub_080254fc
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	mov		r3, #0xa8
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	mov		r0, #0x5
	b		_080251ba
_08024e1e:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08024e32
	add		r0, r5, #0x0
	bl		sub_08025b10
	b		_08024d96
_08024e32:
	mov		r0, #0x0
	mov		r1, #0x4
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08024e96
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, #0x0
	ldrsh	r4, [r0, r2]
	mov		r3, #0xa7
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r5, #0x0
	bl		sub_08026154
	add		r6, r0, #0x0
	cmp		r4, #0x3
	bgt		_08024e62
	add		r4, #0x1
	b		_08024e64
_08024e62:
	mov		r4, #0x0
_08024e64:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080261ac
	mov		r3, #0x9d
	lsl		r3, r3, #0x1
	add		r2, r5, r3
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08024e84
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	b		_080251b0
_08024e84:
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x2
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	b		_08024f10
_08024e96:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08024f58
	mov		r3, #0x9d
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	ldrh	r0, [r0, #0x0]
	add		r0, #0x1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x8
	bls		_08024eb6
	b		_08024d96
_08024eb6:
	lsl		r0, r0, #0x2
	ldr		r1, _08024ec0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08024ec0:	.4byte 0x08024ec4
_08024ec4:	.4byte 0x08024ee8

.incbin "base.gba", 0x24EC8, 0x20

_08024ee8:
.incbin "base.gba", 0x24EE8, 0x4
.incbin "base.gba", 0x24EEC, 0x4
.incbin "base.gba", 0x24EF0, 0x4
.incbin "base.gba", 0x24EF4, 0x4
.incbin "base.gba", 0x24EF8, 0x4
.incbin "base.gba", 0x24EFC, 0x4

.incbin "base.gba", 0x24F00, 0x10
_08024f10:
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08024f20
	neg		r1, r0
_08024f20:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08024f28
	neg		r1, r1
_08024f28:
	add		r0, r5, #0x0
	bl		sub_080254fc
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	b		_08024d96

.incbin "base.gba", 0x24F38, 0x16
_08024f4e:
	add		r0, r5, r0
	ldr		r1, [r1, #0x3c]
	bl		sub_080bbc74
	b		_08024d96
_08024f58:
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	mov		r0, #0x0
	bl		sub_08001870
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_08024f86
	mov		r0, #0x55
	bl		sub_08016b44
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	ble		_08024f82
	sub		r0, r2, #0x1
	b		_08024fac
_08024f82:
	mov		r0, #0x4
	b		_08024fac
_08024f86:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	mov		r0, #0x0
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08024fba
	mov		r0, #0x55
	bl		sub_08016b44
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x3
	bgt		_08024fb0
	add		r0, r2, #0x1
_08024fac:
	strh	r0, [r1, #0x0]
	b		_08024fb2
_08024fb0:
	strh	r4, [r1, #0x0]
_08024fb2:
	add		r0, r5, #0x0
	bl		sub_08025390
	b		_08024d96
_08024fba:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08025022
	mov		r0, #0x54
	bl		sub_08016b44
	mov		r0, #0xa8
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	ble		_08024fe0
	sub		r0, r2, #0x1
	b		_08024fe2
_08024fe0:
	mov		r0, #0x5
_08024fe2:
	strh	r0, [r1, #0x0]
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x5
	bne		_08025012
	mov		r3, #0xa7
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r5, #0x0
	bl		sub_08026154
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_080260fc
	mov		r3, #0x9d
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	b		_0802501a
_08025012:
	mov		r0, #0x9d
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, _08025048
_0802501a:
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_080255ac
_08025022:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0802508e
	mov		r0, #0x54
	bl		sub_08016b44
	mov		r2, #0xa8
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x4
	bgt		_0802504c
	add		r0, r2, #0x1
	b		_0802504e

_08025048:	.4byte 0x0000FFFF

_0802504c:
	mov		r0, #0x0
_0802504e:
	strh	r0, [r1, #0x0]
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x5
	bne		_0802507e
	mov		r3, #0xa7
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r5, #0x0
	bl		sub_08026154
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_080260fc
	mov		r3, #0x9d
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	b		_08025086
_0802507e:
	mov		r0, #0x9d
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, _080250c8
_08025086:
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_080255ac
_0802508e:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08025124
	mov		r0, #0x54
	bl		sub_08016b44
	mov		r2, #0x9d
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldrh	r3, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r1, r0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_080250d8
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	ble		_080250cc
	sub		r0, r2, #0x1
	b		_0802511c

_080250c8:	.4byte 0x0000FFFF

_080250cc:
	mov		r2, #0xa9
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldrh	r0, [r0, #0x0]
	sub		r0, #0x1
	b		_0802511c
_080250d8:
	cmp		r2, #0x0
	ble		_080250e0
	sub		r0, r3, #0x1
	b		_080250e2
_080250e0:
	mov		r0, #0x7
_080250e2:
	strh	r0, [r1, #0x0]
	mov		r3, #0x9d
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x2
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	sub		r3, #0x1e
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08025108
	neg		r1, r0
_08025108:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08025110
	neg		r1, r1
_08025110:
	add		r0, r5, #0x0
	bl		sub_080254fc
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
_0802511c:
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_080255ac
_08025124:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_0800185c
	cmp		r0, #0x0
	bne		_08025132
	b		_08024d96
_08025132:
	mov		r0, #0x54
	bl		sub_08016b44
	mov		r3, #0x9d
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	ldrh	r3, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r1, r0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_08025174
	mov		r1, #0xa7
	lsl		r1, r1, #0x1
	add		r2, r5, r1
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r3, #0xa9
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r0, #0x1
	cmp		r1, r0
	bge		_0802516e
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	b		_080251bc
_0802516e:
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	b		_080251bc
_08025174:
	cmp		r2, #0x6
	bgt		_0802517c
	add		r0, r3, #0x1
	b		_0802517e
_0802517c:
	mov		r0, #0x0
_0802517e:
	strh	r0, [r1, #0x0]
	mov		r1, #0x9d
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x2
	mov		r3, #0xaa
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080251a6
	neg		r1, r0
_080251a6:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_080251ae
	neg		r1, r1
_080251ae:
	add		r0, r5, #0x0
_080251b0:
	bl		sub_080254fc
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
_080251ba:
	strh	r0, [r1, #0x0]
_080251bc:
	add		r0, r5, #0x0
	bl		sub_080255ac
	b		_08024d96
	thumb_func_end sub_08024d3c

	thumb_func_start sub_080251c4
sub_080251c4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r1, r1, #0x1
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x4
	bhi		_08025292
	lsl		r0, r0, #0x2
	ldr		r1, _080251f0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080251f0:	.4byte 0x080251f4
_080251f4:	.4byte 0x08025208

.incbin "base.gba", 0x251F8, 0x10
	thumb_func_end sub_080251c4


.incbin "base.gba", 0x25208, 0x8A

_08025292:

.incbin "base.gba", 0x25292, 0x2A
_080252bc:	.4byte 0x080252c0
_080252c0:	.4byte 0x080252d4

.incbin "base.gba", 0x252C4, 0x9A

_0802535e:

.incbin "base.gba", 0x2535E, 0x32
	thumb_func_start sub_08025390
sub_08025390:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, r0, #0x0
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r1, r1, #0x1
	mov		r3, #0x9e
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r6, [r0, r1]
	add		r3, #0x48
	add		r2, r7, r3
	ldr		r1, _080254f0
	mov		r0, #0x34
	mul		r0, r6
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r0, #0xa9
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r4, #0x0
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r3, #0xd
	add		r3, sp
	mov		r8, r3
	mov		r3, #0xe
	add		r3, sp
	mov		r9, r3
	cmp		r4, r0
	bge		_08025402
	add		r3, r1, #0x0
	mov		r5, #0x0
_080253e8:
	ldr		r0, [r2, #0x0]
	add		r0, #0xc
	add		r0, r0, r5
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r3, #0x0]
	add		r0, r0, r1
	strh	r0, [r3, #0x0]
	add		r5, #0xc
	add		r4, #0x1
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	blt		_080253e8
_08025402:
	mov		r0, #0x2
	bl		sub_08017ce0
	add		r2, sp, #0xc
	mov		r1, #0x0
	mov		r0, #0x1
	strb	r0, [r2, #0x0]
	mov		r0, r8
	strb	r1, [r0, #0x0]
	mov		r2, #0xa4
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x1
	sub		r0, #0xdf
	mov		r2, r9
	strh	r0, [r2, #0x0]
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	str		r1, [sp, #0x8]
	mov		r0, #0x2
	add		r1, sp, #0xc
	mov		r2, #0x0
	mov		r3, #0x1
	bl		sub_08016e9c
	mov		r3, #0x0
	mov		r8, r3
	lsl		r0, r6, #0x2
	add		r0, r0, r6
	lsl		r0, r0, #0x2
	str		r0, [sp, #0x10]
_08025444:
	mov		r1, r8
	lsl		r0, r1, #0x2
	ldr		r2, [sp, #0x10]
	add		r0, r0, r2
	ldr		r3, _080254f4
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r2, r0, #0x0
	mov		r0, #0x26
	mov		r5, r8
	mul		r5, r0
	add		r4, r5, #0x0
	add		r4, #0x64
	add		r4, r7, r4
	add		r1, r2, #0x1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	add		r2, r2, r0
	add		r0, r4, #0x0
	bl		sub_0808ec54
	add		r0, r4, #0x0
	bl		sub_08018330
	mov		r6, #0x0
	add		r5, r7, r5
	add		r5, #0x65
	mov		r1, #0x1
	add		r1, r8
	mov		r10, r1
	ldrb	r5, [r5, #0x0]
	cmp		r6, r5
	bge		_080254ce
	mov		r2, #0x26
	mov		r0, r8
	mul		r0, r2
	mov		r3, #0x64
	add		r3, r3, r0
	mov		r9, r3
	add		r0, r7, r0
	add		r5, r0, #0x0
	add		r5, #0x65
_080254a0:
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_08026154
	add		r4, r0, #0x0
	add		r0, r7, #0x0
	mov		r1, r8
	bl		sub_0802614c
	str		r4, [sp, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, #0x2
	str		r0, [sp, #0x8]
	mov		r2, r9
	add		r1, r7, r2
	add		r2, r6, #0x0
	mov		r3, #0x1
	bl		sub_08016e9c
	add		r6, #0x1
	ldrb	r3, [r5, #0x0]
	cmp		r6, r3
	blt		_080254a0
_080254ce:
	ldr		r0, _080254f8
	mov		r1, #0xff
	bl		sub_08000700
	mov		r8, r10
	mov		r0, r8
	cmp		r0, #0x4
	ble		_08025444
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x254EE, 0x2

_080254f0:	.4byte 0x0200D36C
_080254f4:	.4byte 0x0200D308
_080254f8:	.4byte 0x03005918
	thumb_func_end sub_08025390

	thumb_func_start sub_080254fc
sub_080254fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	str		r1, [sp, #0x0]
	ldr		r2, _080255a8
	mov		r6, #0x0
	mov		r1, #0xa9
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	cmp		r6, r3
	bge		_0802558e
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r7, [r0, #0x0]
	ldr		r1, [r7, #0x0]
	mov		r10, r1
	mov		r9, r3
	mov		r8, r0
_0802552e:
	mov		r12, r2
	add		r1, r6, #0x0
	mov		r4, #0x0
	mov		r5, #0x0
	cmp		r4, r10
	bge		_0802555e
	add		r4, r7, #0x4
	ldr		r0, [r7, #0xc]
	cmp		r6, r0
	blt		_0802555e
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	ldmia	r0!, { r3 }
	add		r2, r0, #0x0
_0802554a:
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	add		r2, #0xc
	add		r5, #0x1
	cmp		r5, r3
	bge		_0802555e
	add		r4, r2, #0x0
	ldr		r0, [r4, #0x8]
	cmp		r1, r0
	bge		_0802554a
_0802555e:
	ldr		r2, [r4, #0x0]
	mov		r0, #0x0
	ldr		r3, [r4, #0x8]
	cmp		r0, r3
	bge		_0802557a
	cmp		r1, #0x0
	beq		_0802557a
	ldr		r4, [r4, #0x4]
_0802556e:
	add		r2, r2, r4
	add		r0, #0x1
	cmp		r0, r3
	bge		_0802557a
	cmp		r1, r0
	bne		_0802556e
_0802557a:
	ldr		r0, [sp, #0x0]
	sub		r2, r0, r2
	cmp		r2, #0x0
	bge		_08025584
	neg		r2, r2
_08025584:
	cmp		r2, r12
	bgt		_0802558e
	add		r6, #0x1
	cmp		r6, r9
	blt		_0802552e
_0802558e:
	mov		r0, #0x0
	cmp		r6, #0x0
	ble		_08025596
	sub		r0, r6, #0x1
_08025596:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x255A6, 0x2

_080255a8:	.4byte 0x00002710
	thumb_func_end sub_080254fc

	thumb_func_start sub_080255ac
sub_080255ac:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	mov		r0, #0x9d
	lsl		r0, r0, #0x1
	add		r6, r5, r0
	mov		r2, #0x0
	ldrsh	r1, [r6, r2]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08025652
	mov		r4, #0xbe
	lsl		r4, r4, #0x1
	add		r6, r5, r4
	ldr		r0, [r6, #0x0]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	mov		r0, #0xa7
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	add		r0, r5, #0x0
	bl		sub_080260a4
	lsl		r0, r0, #0x10
	ldr		r1, [r6, #0x0]
	sub		r4, #0x60
	add		r1, r1, r4
	str		r0, [r1, #0x0]
	mov		r0, #0xa8
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	add		r0, r5, #0x0
	bl		sub_0802609c
	lsl		r0, r0, #0x10
	ldr		r1, [r6, #0x0]
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	lsl		r1, r1, #0x1
	mov		r7, #0x0
	ldrsh	r2, [r4, r7]
	mov		r0, #0x26
	mul		r0, r2
	add		r1, r1, r0
	add		r0, r5, #0x0
	add		r0, #0x66
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r1
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	cmp		r0, r1
	bne		_08025638
	ldr		r0, [r6, #0x0]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	b		_08025642
_08025638:
	ldr		r0, [r6, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
_08025642:
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	b		_08025706
_08025652:
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r4, #0xc0
	lsl		r4, r4, #0x1
	add		r3, r5, r4
	ldr		r0, [r3, #0x0]
	add		r0, #0x5c
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r1, [r3, #0x0]
	sub		r4, #0x64
	add		r1, r1, r4
	mov		r7, #0x0
	ldrsh	r0, [r6, r7]
	lsl		r0, r0, #0x2
	mov		r7, #0xaa
	lsl		r7, r7, #0x1
	add		r2, r5, r7
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r1, [r3, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	mov		r4, #0x0
	ldrsh	r0, [r6, r4]
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	ldr		r0, [r2, #0x0]
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r7, #0x0
	ldrsh	r0, [r6, r7]
	cmp		r0, #0x7
	bhi		_08025706
	lsl		r0, r0, #0x2
	ldr		r1, _080256b4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080256b4:	.4byte 0x080256b8
_080256b8:	.4byte 0x080256d8

.incbin "base.gba", 0x256BC, 0x1C
	thumb_func_end sub_080255ac


.incbin "base.gba", 0x256D8, 0x2E

_08025706:

.incbin "base.gba", 0x25706, 0x6
	thumb_func_start sub_0802570c
sub_0802570c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r6, r0, #0x0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r1, r1, r6
	mov		r8, r1
	mov		r2, #0x0
	ldrsh	r3, [r1, r2]
	mov		r4, #0xa5
	lsl		r4, r4, #0x1
	add		r7, r6, r4
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	mov		r2, #0x92
	lsl		r2, r2, #0x1
	add		r5, r6, r2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	ldrb	r2, [r1, #0x1]
	cmp		r3, r2
	bne		_08025820
	add		r0, r6, #0x0
	add		r2, r3, #0x0
	bl		sub_0802606c
	add		r4, r0, #0x0
	mov		r3, #0xa7
	lsl		r3, r3, #0x1
	add		r3, r6, r3
	str		r3, [sp, #0x4]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	lsl		r0, r0, #0x1
	mov		r2, #0xa8
	lsl		r2, r2, #0x1
	add		r2, r2, r6
	mov		r10, r2
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r2, #0x26
	mul		r1, r2
	add		r0, r0, r1
	mov		r3, #0x66
	add		r3, r3, r6
	mov		r9, r3
	add		r0, r9
	ldrh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08026050
	add		r1, r4, #0x1
	add		r4, r1, r0
	mov		r1, #0x9c
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r4, r0
	blt		_08025794
	b		_08025a7e
_08025794:
	mov		r3, #0x0
	ldrsh	r0, [r7, r3]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	mov		r4, r8
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r0, r0, #0x2
	add		r1, #0x2
	add		r1, r1, r0
	mov		r3, #0xa4
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r0, r0, #0x1
	sub		r0, #0xdf
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r2, [r0, #0x0]
	mov		r3, r8
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r2, #0x2
	add		r2, r2, r0
	ldr		r1, [sp, #0x4]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	lsl		r0, r0, #0x1
	mov		r4, r10
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	mov		r4, #0x26
	mul		r1, r4
	add		r0, r0, r1
	add		r0, r9
	ldrh	r0, [r0, #0x0]
	strh	r0, [r2, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x1]
	mov		r3, #0x9b
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r1, r0
	blt		_0802580a
	b		_08025a7a
_0802580a:
	add		r0, r1, #0x1
	strb	r0, [r2, #0x1]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	add		r0, #0x2
	strb	r0, [r1, #0x0]
	b		_08025a7a
_08025820:
	sub		r5, r2, #0x1
	cmp		r5, r3
	bge		_08025828
	b		_08025a7e
_08025828:
	mov		r3, #0xa5
	lsl		r3, r3, #0x1
	add		r3, r6, r3
	str		r3, [sp, #0x8]
	mov		r4, #0x92
	lsl		r4, r4, #0x1
	add		r4, r6, r4
	str		r4, [sp, #0xc]
	mov		r7, #0xa7
	lsl		r7, r7, #0x1
	add		r7, r6, r7
	str		r7, [sp, #0x10]
	mov		r0, #0xa8
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r10, r0
	add		r7, r6, #0x0
	add		r7, #0x66
	mov		r1, #0x9c
	lsl		r1, r1, #0x1
	add		r1, r1, r6
	mov		r9, r1
	str		r7, [sp, #0x14]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r2, r2, r6
	mov		r8, r2
_0802585e:
	ldr		r3, [sp, #0x8]
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0xc]
	add		r0, r1, r0
	ldr		r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_0802606c
	add		r4, r0, #0x0
	ldr		r2, [sp, #0x10]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x1
	mov		r2, r10
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r2, #0x26
	mul		r1, r2
	add		r0, r0, r1
	add		r0, r7, r0
	ldrh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08026050
	add		r1, r4, #0x1
	add		r4, r1, r0
	mov		r3, r9
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r4, r0
	blt		_080258ae
	sub		r5, #0x1
	mov		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r5, r0
	bge		_0802585e
_080258ae:
	mov		r4, #0xa6
	lsl		r4, r4, #0x1
	add		r3, r6, r4
	mov		r7, #0x0
	ldrsh	r1, [r3, r7]
	cmp		r5, r1
	bge		_080258be
	b		_08025a7e
_080258be:
	mov		r2, #0x9b
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	sub		r2, r0, #0x1
	cmp		r2, r1
	ble		_08025928
	mov		r7, #0xa5
	lsl		r7, r7, #0x1
	add		r7, r7, r6
	mov		r12, r7
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r9, r0
	mov		r8, r3
	lsl		r0, r2, #0x2
	sub		r5, r0, #0x2
	add		r4, r0, #0x2
	sub		r3, r0, #0x4
_080258e8:
	mov		r1, r12
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	lsl		r1, r2, #0x2
	add		r0, #0x2
	add		r1, r0, r1
	add		r0, r0, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	mov		r1, r12
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	add		r0, #0x2
	add		r1, r0, r4
	add		r0, r0, r5
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	sub		r5, #0x4
	sub		r4, #0x4
	sub		r3, #0x4
	sub		r2, #0x1
	mov		r1, r8
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp		r2, r0
	bgt		_080258e8
_08025928:
	mov		r0, #0xa5
	lsl		r0, r0, #0x1
	add		r5, r6, r0
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r0, r0, #0x2
	mov		r2, #0x92
	lsl		r2, r2, #0x1
	add		r4, r6, r2
	add		r0, r4, r0
	ldr		r1, [r0, #0x0]
	mov		r3, #0xa6
	lsl		r3, r3, #0x1
	add		r2, r6, r3
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	lsl		r0, r0, #0x2
	add		r1, #0x2
	add		r1, r1, r0
	sub		r3, #0x4
	add		r0, r6, r3
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r0, r0, #0x1
	sub		r0, #0xdf
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r3, [r0, #0x0]
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r3, #0x2
	add		r3, r3, r0
	mov		r1, #0xa7
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x1
	mov		r7, #0xa8
	lsl		r7, r7, #0x1
	add		r1, r6, r7
	mov		r7, #0x0
	ldrsh	r2, [r1, r7]
	mov		r1, #0x26
	mul		r1, r2
	add		r0, r0, r1
	ldr		r1, [sp, #0x14]
	add		r0, r1, r0
	ldrh	r0, [r0, #0x0]
	strh	r0, [r3, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x1]
	mov		r3, #0x9b
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r1, r0
	bge		_080259c6
	add		r0, r1, #0x1
	strb	r0, [r2, #0x1]
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	add		r0, #0x2
	strb	r0, [r1, #0x0]
_080259c6:
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	cmp		r0, #0x0
	beq		_08025a7a
	mov		r3, #0xa5
	lsl		r3, r3, #0x1
	add		r7, r6, r3
	mov		r4, #0x92
	lsl		r4, r4, #0x1
	add		r5, r6, r4
	mov		r0, #0x9c
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r9, r0
	ldr		r1, _08025af4
	mov		r10, r1
	mov		r2, #0x91
	lsl		r2, r2, #0x1
	add		r2, r2, r6
	mov		r8, r2
_080259f6:
	mov		r3, #0x0
	ldrsh	r0, [r7, r3]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	ldrb	r2, [r1, #0x1]
	add		r0, r6, #0x0
	bl		sub_0802606c
	add		r4, r0, #0x0
	mov		r1, r9
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r4, r0
	blt		_08025a7a
	mov		r3, #0x0
	ldrsh	r0, [r7, r3]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x1]
	sub		r0, #0x1
	lsl		r0, r0, #0x2
	add		r1, #0x2
	add		r1, r1, r0
	mov		r4, r10
	strh	r4, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x1]
	sub		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r1, #0x2
	add		r1, r1, r0
	mov		r2, r8
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r7, r3]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x1]
	sub		r0, #0x1
	strb	r0, [r1, #0x1]
	mov		r4, #0x0
	ldrsh	r0, [r7, r4]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	cmp		r0, #0x0
	bne		_080259f6
_08025a7a:
	mov		r2, #0x1
	str		r2, [sp, #0x0]
_08025a7e:
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x1
	bne		_08025af8
	mov		r0, #0x55
	bl		sub_08016b44
	mov		r7, #0xa6
	lsl		r7, r7, #0x1
	add		r4, r6, r7
	mov		r0, #0x0
	ldrsh	r2, [r4, r0]
	mov		r1, #0xa5
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	lsl		r1, r1, #0x2
	sub		r7, #0x28
	add		r0, r6, r7
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x1]
	cmp		r2, r0
	bge		_08025ade
	add		r2, #0x1
	add		r0, r6, #0x0
	bl		sub_0802606c
	add		r0, #0x9
	mov		r2, #0x9c
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	cmp		r0, r1
	bge		_08025ade
	mov		r7, #0x0
	ldrsh	r0, [r4, r7]
	add		r0, #0x1
	sub		r2, #0x2
	add		r1, r6, r2
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	cmp		r0, r1
	bge		_08025ade
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
_08025ade:
	ldr		r1, [r6, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x40
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	add		r0, r6, r0
	ldr		r1, [r1, #0x44]
	bl		sub_080bbc74
	b		_08025afe

.incbin "base.gba", 0x25AF2, 0x2

_08025af4:	.4byte 0x0000FF21

_08025af8:
	mov		r0, #0x9a
	bl		sub_08016b44
_08025afe:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x25B0E, 0x2
	thumb_func_end sub_0802570c

	thumb_func_start sub_08025b10
sub_08025b10:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r2, r8
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	ble		_08025c04
	sub		r0, r1, #0x1
	strh	r0, [r2, #0x0]
	mov		r4, #0xa5
	lsl		r4, r4, #0x1
	add		r4, r8
	mov		r5, #0x0
	ldrsh	r0, [r4, r5]
	lsl		r0, r0, #0x2
	mov		r3, #0x92
	lsl		r3, r3, #0x1
	add		r3, r8
	add		r0, r3, r0
	ldr		r1, [r0, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r2, r5]
	lsl		r0, r0, #0x2
	add		r1, #0x2
	add		r1, r1, r0
	ldr		r0, _08025c00
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	add		r0, r3, r0
	ldr		r1, [r0, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r2, r5]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r1, #0x2
	add		r1, r1, r0
	mov		r0, #0x91
	lsl		r0, r0, #0x1
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r2, r0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	add		r0, r3, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	sub		r0, #0x1
	cmp		r2, r0
	bge		_08025bd8
	add		r7, r4, #0x0
	add		r6, r3, #0x0
	lsl		r0, r2, #0x2
	add		r5, r0, #0x6
	add		r4, r0, #0x2
	add		r3, r0, #0x4
_08025b94:
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	lsl		r1, r2, #0x2
	add		r0, #0x2
	add		r1, r0, r1
	add		r0, r0, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x2
	add		r1, r0, r4
	add		r0, r0, r5
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r5, #0x4
	add		r4, #0x4
	add		r3, #0x4
	add		r2, #0x1
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	sub		r0, #0x1
	cmp		r2, r0
	blt		_08025b94
_08025bd8:
	mov		r3, #0xa5
	lsl		r3, r3, #0x1
	add		r3, r8
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	lsl		r0, r0, #0x2
	mov		r1, #0x92
	lsl		r1, r1, #0x1
	add		r1, r8
	add		r0, r1, r0
	ldr		r2, [r0, #0x0]
	ldrb	r0, [r2, #0x1]
	sub		r0, #0x1
	strb	r0, [r2, #0x1]
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	b		_08025cd4

_08025c00:	.4byte 0x0000FF21

_08025c04:
	mov		r5, #0xa5
	lsl		r5, r5, #0x1
	add		r5, r8
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r0, r0, #0x2
	mov		r4, #0x92
	lsl		r4, r4, #0x1
	add		r4, r8
	add		r0, r4, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x1]
	cmp		r0, #0x0
	beq		_08025cda
	mov		r0, #0x0
	ldrsh	r3, [r2, r0]
	ldrb	r0, [r1, #0x1]
	sub		r0, #0x1
	cmp		r3, r0
	bge		_08025c7c
	add		r7, r5, #0x0
	add		r6, r4, #0x0
	lsl		r0, r3, #0x2
	add		r5, r0, #0x6
	add		r4, r0, #0x2
	add		r2, r0, #0x4
_08025c38:
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	lsl		r1, r3, #0x2
	add		r0, #0x2
	add		r1, r0, r1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0x2
	add		r1, r0, r4
	add		r0, r0, r5
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r5, #0x4
	add		r4, #0x4
	add		r2, #0x4
	add		r3, #0x1
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	sub		r0, #0x1
	cmp		r3, r0
	blt		_08025c38
_08025c7c:
	mov		r4, #0xa5
	lsl		r4, r4, #0x1
	add		r4, r8
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r0, r0, #0x2
	mov		r2, #0x92
	lsl		r2, r2, #0x1
	add		r2, r8
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	lsl		r1, r3, #0x2
	add		r0, #0x2
	add		r0, r0, r1
	ldr		r1, _08025d00
	strh	r1, [r0, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r4, r5]
	lsl		r0, r0, #0x2
	add		r0, r2, r0
	ldr		r1, [r0, #0x0]
	lsl		r0, r3, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r1, #0x2
	add		r1, r1, r0
	mov		r0, #0x91
	lsl		r0, r0, #0x1
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	add		r0, r2, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x1]
	sub		r0, #0x1
	strb	r0, [r1, #0x1]
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	ldr		r1, [r2, #0x0]
_08025cd4:
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x2
	strb	r0, [r1, #0x0]
_08025cda:
	mov		r0, #0x56
	bl		sub_08016b44
	mov		r5, r8
	ldr		r1, [r5, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x40
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r8
	ldr		r1, [r1, #0x44]
	bl		sub_080bbc74
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x25CFE, 0x2

_08025d00:	.4byte 0x0000FF21
	thumb_func_end sub_08025b10

	thumb_func_start sub_08025d04
sub_08025d04:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r3, #0x0
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldrh	r2, [r1, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r0, #0x0
	ble		_08025d20
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	b		_08025d48
_08025d20:
	mov		r0, #0xa5
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldrh	r2, [r1, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r0, #0x0
	ble		_08025d3c
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_08025e20
	mov		r3, #0x1
_08025d3c:
	cmp		r3, #0x0
	bne		_08025d48
	mov		r0, #0x9a
	bl		sub_08016b44
	b		_08025d60
_08025d48:
	mov		r0, #0x55
	bl		sub_08016b44
	ldr		r1, [r4, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x40
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x44]
	bl		sub_080bbc74
_08025d60:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x25D66, 0xBA
	thumb_func_end sub_08025d04

	thumb_func_start sub_08025e20
sub_08025e20:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0xa5
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	lsl		r0, r0, #0x2
	mov		r3, #0x92
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	add		r3, #0x28
	add		r5, r4, r3
	strh	r0, [r5, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	ldrb	r2, [r1, #0x1]
	add		r0, r4, #0x0
	bl		sub_0802606c
	add		r0, #0x9
	mov		r2, #0x9c
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	cmp		r0, r1
	bge		_08025e76
	mov		r1, #0x9b
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r1, r0
	blt		_08025e7c
_08025e76:
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	strh	r0, [r5, #0x0]
_08025e7c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x25E82, 0x2
	push	{ r4, lr }
	ldr		r4, _08025f88
	ldr		r0, _08025f8c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025f90
	ldr		r0, _08025f94
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025f98
	ldr		r0, _08025f9c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fa0
	ldr		r0, _08025fa4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fa8
	ldr		r0, _08025fac
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fb0
	ldr		r0, _08025fb4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fb8
	ldr		r0, _08025fbc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fc0
	ldr		r0, _08025fc4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fc8
	ldr		r0, _08025fcc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fd0
	ldr		r0, _08025fd4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fd8
	ldr		r0, _08025fdc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fe0
	ldr		r0, _08025fe4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025fe8
	ldr		r0, _08025fec
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025ff0
	ldr		r0, _08025ff4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08025ff8
	ldr		r0, _08025ffc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026000
	ldr		r0, _08026004
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026008
	ldr		r0, _0802600c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026010
	ldr		r0, _08026014
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026018
	ldr		r0, _0802601c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026020
	ldr		r0, _08026024
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026028
	ldr		r0, _0802602c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026030
	ldr		r0, _08026034
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026038
	ldr		r0, _0802603c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026040
	ldr		r0, _08026044
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026048
	ldr		r0, _0802604c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x25F86, 0x2

_08025f88:	.4byte 0x0200BA28
_08025f8c:	.4byte 0x080d24a0 @ ms_K_name_hira_0
_08025f90:	.4byte 0x0200BA24
_08025f94:	.4byte 0x080d24b4 @ ms_K_name_hira_1
_08025f98:	.4byte 0x0200BA20
_08025f9c:	.4byte 0x080d24c8 @ ms_K_name_hira_2
_08025fa0:	.4byte 0x0200BA1C
_08025fa4:	.4byte 0x080d24dc @ ms_K_name_hira_3
_08025fa8:	.4byte 0x0200BA18
_08025fac:	.4byte 0x080d24f0 @ ms_K_name_hira_4
_08025fb0:	.4byte 0x0200BA14
_08025fb4:	.4byte 0x080d2504 @ ms_K_name_kata_0
_08025fb8:	.4byte 0x0200BA10
_08025fbc:	.4byte 0x080d2518 @ ms_K_name_kata_1
_08025fc0:	.4byte 0x0200BA0C
_08025fc4:	.4byte 0x080d252c @ ms_K_name_kata_2
_08025fc8:	.4byte 0x0200BA08
_08025fcc:	.4byte 0x080d2540 @ ms_K_name_kata_3
_08025fd0:	.4byte 0x0200BA04
_08025fd4:	.4byte 0x080d2554 @ ms_K_name_kata_4
_08025fd8:	.4byte 0x0200BA00
_08025fdc:	.4byte 0x080d2568 @ ms_K_name_labc_0
_08025fe0:	.4byte 0x0200B9FC
_08025fe4:	.4byte 0x080d257c @ ms_K_name_labc_1
_08025fe8:	.4byte 0x0200B9F8
_08025fec:	.4byte 0x080d2590 @ ms_K_name_labc_2
_08025ff0:	.4byte 0x0200B9F4
_08025ff4:	.4byte 0x080d25a4 @ ms_K_name_labc_3
_08025ff8:	.4byte 0x0200B9F0
_08025ffc:	.4byte 0x080d25b8 @ ms_K_name_labc_4
_08026000:	.4byte 0x0200B9EC
_08026004:	.4byte 0x080d25cc @ ms_K_name_sabc_0
_08026008:	.4byte 0x0200B9E8
_0802600c:	.4byte 0x080d25e0 @ ms_K_name_sabc_1
_08026010:	.4byte 0x0200B9E4
_08026014:	.4byte 0x080d25f4 @ ms_K_name_sabc_2
_08026018:	.4byte 0x0200B9E0
_0802601c:	.4byte 0x080d2608 @ ms_K_name_sabc_3
_08026020:	.4byte 0x0200B9DC
_08026024:	.4byte 0x080d261c @ ms_K_name_sabc_4
_08026028:	.4byte 0x0200B9D8
_0802602c:	.4byte 0x080d2630 @ ms_K_name_pic_0
_08026030:	.4byte 0x0200B9D4
_08026034:	.4byte 0x080d2640 @ ms_K_name_pic_1
_08026038:	.4byte 0x0200B9D0
_0802603c:	.4byte 0x080d2650 @ ms_K_name_pic_2
_08026040:	.4byte 0x0200B9CC
_08026044:	.4byte 0x080d2660 @ ms_K_name_pic_3
_08026048:	.4byte 0x0200B9C8
_0802604c:	.4byte 0x080d2670 @ ms_K_name_pic_4
	thumb_func_end sub_08025e20

	thumb_func_start sub_08026050
sub_08026050:
	push	{ lr }
	lsl		r1, r1, #0x10
	mov		r0, #0xff
	lsl		r0, r0, #0x18
	and		r0, r1
	mov		r1, #0xc0
	lsl		r1, r1, #0x12
	cmp		r0, r1
	beq		_08026066
	mov		r0, #0x8
	b		_08026068
_08026066:
	mov		r0, #0xc
_08026068:
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08026050

	thumb_func_start sub_0802606c
sub_0802606c:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	mov		r6, #0x0
	cmp		r6, r2
	bge		_0802608e
	add		r5, r1, #0x4
	add		r4, r2, #0x0
_0802607a:
	ldrh	r1, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_08026050
	add		r6, r6, r0
	add		r6, #0x1
	add		r5, #0x4
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0802607a
_0802608e:
	cmp		r6, #0x0
	ble		_08026094
	sub		r6, #0x1
_08026094:
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0802606c

	thumb_func_start sub_0802609c
sub_0802609c:
	lsl		r0, r1, #0x4
	add		r0, #0x40
	bx		lr

.incbin "base.gba", 0x260A2, 0x2
	thumb_func_end sub_0802609c

	thumb_func_start sub_080260a4
sub_080260a4:
	push	{ r4, r5, lr }
	mov		r3, #0x0
	mov		r4, #0x0
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0x0]
	cmp		r3, r2
	bge		_080260d8
	add		r3, r0, #0x4
	ldr		r0, [r0, #0xc]
	cmp		r1, r0
	blt		_080260d8
	add		r5, r2, #0x0
	add		r2, r3, #0x0
_080260c4:
	ldr		r0, [r3, #0x8]
	sub		r1, r1, r0
	add		r2, #0xc
	add		r4, #0x1
	cmp		r4, r5
	bge		_080260d8
	add		r3, r2, #0x0
	ldr		r0, [r3, #0x8]
	cmp		r1, r0
	bge		_080260c4
_080260d8:
	ldr		r0, [r3, #0x0]
	mov		r2, #0x0
	ldr		r4, [r3, #0x8]
	cmp		r2, r4
	bge		_080260f6
	cmp		r1, #0x0
	beq		_080260f6
	ldr		r5, [r3, #0x4]
	add		r3, r4, #0x0
_080260ea:
	add		r0, r0, r5
	add		r2, #0x1
	cmp		r2, r3
	bge		_080260f6
	cmp		r1, r2
	bne		_080260ea
_080260f6:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080260a4

	thumb_func_start sub_080260fc
sub_080260fc:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	ldr		r2, _08026148
	mov		r4, #0x0
	mov		r6, #0x8e
	lsl		r6, r6, #0x1
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r3, r0, r1
_0802610e:
	add		r1, r2, #0x0
	ldr		r0, [r3, #0x0]
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x0
	cmp		r0, #0x0
	bge		_0802611e
	neg		r2, r0
_0802611e:
	asr		r2, r2, #0x10
	cmp		r0, #0x0
	bge		_08026126
	neg		r2, r2
_08026126:
	sub		r2, r5, r2
	cmp		r2, #0x0
	bge		_0802612e
	neg		r2, r2
_0802612e:
	cmp		r2, r1
	bgt		_0802613a
	add		r3, #0x4
	add		r4, #0x1
	cmp		r4, #0x7
	ble		_0802610e
_0802613a:
	mov		r0, #0x0
	cmp		r4, #0x0
	ble		_08026142
	sub		r0, r4, #0x1
_08026142:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08026148:	.4byte 0x00002710
	thumb_func_end sub_080260fc

	thumb_func_start sub_0802614c
sub_0802614c:
	lsl		r0, r1, #0x4
	add		r0, #0x2
	bx		lr

.incbin "base.gba", 0x26152, 0x2
	thumb_func_end sub_0802614c

	thumb_func_start sub_08026154
sub_08026154:
	push	{ r4, r5, lr }
	mov		r3, #0x0
	mov		r4, #0x0
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0x0]
	cmp		r3, r2
	bge		_08026188
	add		r3, r0, #0x4
	ldr		r0, [r0, #0xc]
	cmp		r1, r0
	blt		_08026188
	add		r5, r2, #0x0
	add		r2, r3, #0x0
_08026174:
	ldr		r0, [r3, #0x8]
	sub		r1, r1, r0
	add		r2, #0xc
	add		r4, #0x1
	cmp		r4, r5
	bge		_08026188
	add		r3, r2, #0x0
	ldr		r0, [r3, #0x8]
	cmp		r1, r0
	bge		_08026174
_08026188:
	ldr		r0, [r3, #0x0]
	mov		r2, #0x0
	ldr		r4, [r3, #0x8]
	cmp		r2, r4
	bge		_080261a6
	cmp		r1, #0x0
	beq		_080261a6
	ldr		r5, [r3, #0x4]
	add		r3, r4, #0x0
_0802619a:
	add		r0, r0, r5
	add		r2, #0x1
	cmp		r2, r3
	bge		_080261a6
	cmp		r1, r2
	bne		_0802619a
_080261a6:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08026154

	thumb_func_start sub_080261ac
sub_080261ac:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0x55
	bl		sub_08016b44
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080251c4
	add		r0, r5, #0x0
	bl		sub_08025390
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x261CC, 0x2E8
	bne		_08026534
	mov		r4, #0x0
	ldr		r0, _08026528
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080264ca
	add		r0, r6, #0x0
	bl		sub_080265d4
	add		r4, r0, #0x0
_080264ca:
	cmp		r4, #0x1
	bne		_080264fa
	mov		r2, #0x96
	lsl		r2, r2, #0x1
	add		r5, r6, r2
	ldr		r1, [r5, #0x0]
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	ldr		r0, [r4, #0x0]
	add		r0, #0x2
	add		r1, #0x2
	lsl		r2, r2, #0x1
	bl		sub_0808c6b8
	ldr		r1, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x1]
	strb	r0, [r1, #0x1]
	ldr		r1, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
_080264fa:
	mov		r0, #0x1
	bl		sub_08016b58
	ldr		r0, _0802652c
	bl		sub_08002268
	ldr		r0, _08026530
	bl		sub_08002268
_0802650c:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0802650c

.incbin "base.gba", 0x26516, 0x12

_08026528:	.4byte 0x000004DE
_0802652c:	.4byte 0x00000843
_08026530:	.4byte 0x00000835

_08026534:
	mov		r0, #0x0
	bl		sub_08018508
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	bl		sub_080184d4
	ldr		r4, _080265ac
	add		r0, r4, #0x0
	mov		r1, #0x88
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, sp
	bl		sub_08027274
	add		r5, r0, #0x0
	add		r4, #0x50
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _080265b0
	str		r0, [sp, #0x0]
	add		r4, r0, #0x0
_0802656c:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x0]
	cmp		r0, r4
	beq		_0802656c
	add		r0, r5, #0x0
	bl		sub_080b75b0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bne		_080265b8
	ldr		r2, [sp, #0x4]
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, #0x1
	bne		_08026594
	ldr		r0, _080265b4
	bl		sub_08002268
_08026594:
	add		r0, r6, #0x0
	add		r0, #0x54
	ldr		r2, [sp, #0x0]
	mov		r1, #0x0
	bl		sub_080004e8
_080265a0:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_080265a0

.incbin "base.gba", 0x265AA, 0x2

_080265ac:	.4byte 0x0200DA00
_080265b0:	.4byte 0x80808080
_080265b4:	.4byte 0x00000835

_080265b8:
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080261ac

	thumb_func_start sub_080265d4
sub_080265d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	add		r1, r0, #0x0
	ldr		r3, _08026684
	ldr		r0, [r3, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	cmp		r0, r2
	beq		_08026698
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	add		r0, r1, r0
	str		r0, [sp, #0x20]
	mov		r1, sp
	add		r1, #0x1
	str		r1, [sp, #0x1C]
	mov		r10, sp
	add		r5, r3, #0x0
	mov		r9, r0
	mov		r8, sp
_08026604:
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	bne		_08026618
	ldr		r1, [r5, #0x4]
	mov		r0, sp
	bl		sub_0808ed5c
	mov		r0, sp
	bl		sub_08018330
_08026618:
	cmp		r4, #0x1
	bne		_0802663c
	ldr		r0, [r5, #0x4]
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r2, r0, #0x0
	add		r1, r2, #0x1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	add		r2, r2, r0
	mov		r0, sp
	bl		sub_0808ec54
	mov		r0, sp
	bl		sub_08018280
_0802663c:
	ldr		r2, [sp, #0x20]
	ldr		r0, [r2, #0x0]
	ldrb	r0, [r0, #0x1]
	ldr		r7, [sp, #0x1C]
	ldrb	r7, [r7, #0x0]
	cmp		r0, r7
	bne		_0802668c
	mov		r6, #0x1
	mov		r3, #0x0
	mov		r0, r10
	ldrb	r0, [r0, #0x0]
	cmp		r3, r0
	bge		_08026676
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	mov		r2, r8
	ldrb	r4, [r2, #0x0]
	add		r2, r0, #0x4
	mov		r1, sp
	add		r1, #0x2
_08026664:
	ldrh	r0, [r1, #0x0]
	ldrh	r7, [r2, #0x0]
	cmp		r0, r7
	bne		_08026688
	add		r2, #0x4
	add		r1, #0x2
	add		r3, #0x1
	cmp		r3, r4
	blt		_08026664
_08026676:
	cmp		r6, #0x1
	bne		_0802668c
	ldr		r0, [r5, #0x8]
	bl		sub_08002268
	mov		r0, #0x1
	b		_0802669a

_08026684:	.4byte 0x080d2838

_08026688:
	mov		r6, #0x0
	b		_08026676
_0802668c:
	add		r5, #0xc
	ldr		r0, [r5, #0x0]
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_08026604
_08026698:
	mov		r0, #0x0
_0802669a:
	add		sp, #0x24
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x266AA, 0x2
	push	{ r4, lr }
	ldr		r4, _08026710
	ldr		r0, _08026714
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026718
	ldr		r0, _0802671c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026720
	ldr		r0, _08026724
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026728
	ldr		r0, _0802672c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026730
	ldr		r0, _08026734
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026738
	ldr		r0, _0802673c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026740
	ldr		r0, _08026744
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026748
	ldr		r0, _0802674c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08026750
	ldr		r0, _08026754
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2670E, 0x2

_08026710:	.4byte 0x0200BA4C
_08026714:	.4byte 0x080d2680 @ ms_K_name_0
_08026718:	.4byte 0x0200BA48
_0802671c:	.4byte 0x080d268c @ ms_K_machine_1
_08026720:	.4byte 0x0200BA44
_08026724:	.4byte 0x080d269c @ ms_K_machine_2
_08026728:	.4byte 0x0200BA40
_0802672c:	.4byte 0x080d26ac @ ms_K_machine_3
_08026730:	.4byte 0x0200BA3C
_08026734:	.4byte 0x080d26bc @ ms_K_machine_4
_08026738:	.4byte 0x0200BA38
_0802673c:	.4byte 0x080d26cc @ ms_K_machine_5
_08026740:	.4byte 0x0200BA34
_08026744:	.4byte 0x080d26dc @ ms_K_machine_6
_08026748:	.4byte 0x0200BA30
_0802674c:	.4byte 0x080d26ec @ ms_K_machine_7
_08026750:	.4byte 0x0200BA2C
_08026754:	.4byte 0x080d26fc @ ms_K_machine_8

.incbin "base.gba", 0x26758, 0x7C
	thumb_func_end sub_080265d4

	thumb_func_start sub_080267d4
sub_080267d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	mov		r0, #0x1
	bl		sub_08017ce0
	mov		r4, #0x0
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r4, r0
	bge		_0802682e
	mov		r3, #0xd
	mov		r10, r3
	mov		r9, r4
	add		r0, r1, #0x0
	add		r0, r0, r6
	mov		r8, r0
	mov		r5, #0x6
	sub		r1, #0x10
	add		r7, r6, r1
_0802680a:
	ldmia	r7!, { r1 }
	ldrb	r3, [r1, #0x0]
	mov		r2, r10
	str		r2, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, r9
	str		r0, [sp, #0x8]
	mov		r0, #0x1
	mov		r2, #0x0
	bl		sub_08016e9c
	add		r5, #0x12
	add		r4, #0x1
	mov		r1, r8
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r4, r0
	blt		_0802680a
_0802682e:
	mov		r3, #0xa5
	lsl		r3, r3, #0x1
	add		r7, r6, r3
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl		r0, r0, #0x2
	mov		r2, #0x92
	lsl		r2, r2, #0x1
	add		r2, r2, r6
	mov		r8, r2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	add		r3, #0x2
	add		r5, r6, r3
	mov		r0, #0x0
	ldrsh	r3, [r5, r0]
	lsl		r3, r3, #0x1
	mov		r0, #0x1
	mov		r2, #0x0
	bl		sub_08017918
	add		r1, r0, #0x0
	add		r4, r1, #0x0
	add		r4, #0xd
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r0, #0x0
	ble		_08026868
	add		r4, #0x1
_08026868:
	mov		r3, #0x0
	ldrsh	r0, [r7, r3]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r1, #0x2
	add		r1, r1, r0
	ldrh	r1, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_08026050
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r4, r4, r0
	lsl		r1, r4, #0x10
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r2, r6, r3
	ldr		r0, [r2, #0x0]
	sub		r3, #0x5c
	add		r0, r0, r3
	str		r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x11
	mov		r1, #0xa0
	lsl		r1, r1, #0xd
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	add		r3, #0x4
	add		r1, r1, r3
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r3, #0x0
	ldrsh	r0, [r7, r3]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	ldrb	r3, [r0, #0x1]
	cmp		r1, r3
	blt		_080268d2
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	b		_080268f0
_080268d2:
	lsl		r1, r1, #0x1
	add		r1, #0x1
	lsl		r1, r1, #0x1
	add		r0, #0x2
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r1
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	cmp		r0, r1
	bne		_080268f8
	ldr		r0, [r2, #0x0]
	mov		r1, #0x3
_080268f0:
	mov		r2, #0x2
	bl		sub_08017d20
	b		_08026902
_080268f8:
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_08017d20
_08026902:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x26912, 0x112
	thumb_func_end sub_080267d4

	thumb_func_start sub_08026a24
sub_08026a24:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080249f8
	ldr		r0, _08026a78
	str		r0, [r4, #0x4c]
	ldr		r0, _08026a7c
	str		r0, [r4, #0xc]
	mov		r0, #0x1e
	str		r0, [r4, #0x5c]
	mov		r0, #0x9a
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	mov		r2, #0x9b
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r0, #0x18
	strh	r0, [r1, #0x0]
	mov		r1, #0xd8
	mov		r3, #0x9c
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	strh	r1, [r0, #0x0]
	add		r1, #0x4c
	add		r0, r4, r1
	add		r2, #0x52
	add		r1, r4, r2
	str		r1, [r0, #0x0]
	sub		r3, #0x10
	add		r2, r4, r3
	add		r3, #0xc2
	add		r0, r4, r3
	str		r0, [r2, #0x0]
	ldr		r0, _08026a80
	bl		sub_080180f8
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08026a78:	.4byte 0x080e034c
_08026a7c:	.4byte 0x080e104c
_08026a80:	.4byte 0x02000FDC
	thumb_func_end sub_08026a24

	thumb_func_start sub_08026a84
sub_08026a84:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r0, _08026aa0
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08026aa4
	str		r0, [r5, #0x58]
	mov		r0, #0x1
	str		r0, [r5, #0x5c]
	mov		r0, #0x2
	b		_08026aae

.incbin "base.gba", 0x26A9E, 0x2

_08026aa0:	.4byte 0x00000836

_08026aa4:
	mov		r0, #0x2
	str		r0, [r5, #0x58]
	mov		r0, #0x1
	str		r0, [r5, #0x5c]
	mov		r0, #0x0
_08026aae:
	str		r0, [r5, #0x60]
	mov		r0, #0x1b
	bl		sub_08016be8
	ldr		r4, _08026be0
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800bcd0
	str		r0, [r5, #0x4c]
	ldr		r1, [r5, #0x54]
	mov		r2, #0x2
	bl		sub_08017d20
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0800bcd0
	str		r0, [r5, #0x50]
	mov		r0, #0x0
	bl		sub_08017ce0
	ldr		r0, _08026be4
	ldr		r1, [r0, #0x0]
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x78
	mov		r3, #0x3
	bl		sub_08017bc4
	add		r0, r5, #0x0
	add		r0, #0x64
	mov		r1, #0x1f
	strh	r1, [r0, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x66
	mov		r0, #0x1c
	strh	r0, [r3, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r2, #0x1e
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x7e
	ldrh	r0, [r4, #0x0]
	mov		r1, #0x3
	and		r0, r1
	add		r6, r3, #0x0
	cmp		r0, #0x0
	bne		_08026b48
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r1, #0x64
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08026b6a
_08026b48:
	mov		r0, #0x0
	ldrsh	r4, [r4, r0]
	add		r0, r4, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08026b6e
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08026b6e
_08026b6a:
	mov		r0, #0x1d
	strh	r0, [r6, #0x0]
_08026b6e:
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_0801783c
	mov		r0, #0x2
	mov		r1, #0x0
	bl		sub_0801783c
	mov		r0, #0x3
	mov		r1, #0x0
	bl		sub_0801783c
	add		r0, r5, #0x0
	bl		sub_08027210
	ldr		r4, _08026be8
	add		r0, r4, #0x0
	mov		r1, #0xff
	bl		sub_08000700
	add		r0, r5, #0x0
	bl		sub_080271e0
	add		r0, r4, #0x0
	mov		r1, #0xff
	bl		sub_08000700
	add		r0, r5, #0x0
	bl		sub_08027188
	add		r0, r4, #0x0
	mov		r1, #0xff
	bl		sub_08000700
	add		r0, r5, #0x0
	bl		sub_08027130
	add		r0, r5, #0x0
	add		r0, #0x48
	ldr		r3, _08026bec
	mov		r1, #0x8
	add		r2, r3, #0x0
	bl		sub_08016cb0
	mov		r0, #0xe8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	add		r1, r5, #0x0
	add		r1, #0x84
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x26BDE, 0x2

_08026be0:	.4byte 0x0200A26C
_08026be4:	.4byte 0x0200BA90
_08026be8:	.4byte 0x03005918
_08026bec:	.4byte 0xFFFFB334
	thumb_func_end sub_08026a84

	thumb_func_start sub_08026bf0
sub_08026bf0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	add		r5, r0, #0x0
	bl		sub_08026a84
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r6, #0x10
	ldr		r0, _08026d14
	mov		r10, r0
	ldr		r1, _08026d18
	mov		r9, r1
	ldr		r2, _08026d1c
	mov		r8, r2
	ldr		r7, _08026d20
	add		r3, r5, #0x0
	add		r3, #0x84
	str		r3, [sp, #0x20]
	add		r0, r5, #0x0
	add		r0, #0x58
	str		r0, [sp, #0x1C]
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_08026c2c:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_08026c34
	add		r0, #0xf
_08026c34:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08026c2c
	ldr		r0, [sp, #0x20]
	str		r0, [sp, #0x4]
	add		r1, r5, #0x0
	add		r1, #0x82
	str		r1, [sp, #0x8]
	add		r2, r5, #0x0
	add		r2, #0x80
	str		r2, [sp, #0xC]
	add		r3, r5, #0x0
	add		r3, #0x64
	str		r3, [sp, #0x10]
	add		r0, r5, #0x0
	add		r0, #0x7e
	str		r0, [sp, #0x14]
	sub		r1, #0x1c
	str		r1, [sp, #0x18]
_08026c78:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r2, [sp, #0x4]
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x1e
	bne		_08026c9a
	ldr		r0, _08026d24
	bl		sub_080b62dc
	mov		r0, #0x0
	ldr		r3, [sp, #0x20]
	strh	r0, [r3, #0x0]
_08026c9a:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08026d2e
	mov		r0, #0x56
	bl		sub_08016b44
	ldr		r0, [r5, #0x54]
	cmp		r0, #0x0
	bne		_08026d28
	add		r7, r5, #0x0
	add		r7, #0x40
	ldr		r1, _08026d18
	mov		r10, r1
	ldr		r2, _08026d1c
	mov		r9, r2
	ldr		r3, _08026d20
	mov		r8, r3
	mov		r6, #0x0
	mov		r4, #0x10
_08026cc6:
	neg		r0, r6
	cmp		r0, #0x0
	bge		_08026cce
	add		r0, #0xf
_08026cce:
	asr		r0, r0, #0x4
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	ldr		r1, _08026d14
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08026cc6
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	add		r0, r7, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_08026d08:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08026d08

.incbin "base.gba", 0x26D12, 0x2

_08026d14:	.4byte 0x0200EB24
_08026d18:	.4byte 0x0200EB1E
_08026d1c:	.4byte 0x0200EB20
_08026d20:	.4byte 0x0200EB22
_08026d24:	.4byte 0x0200BDD4

_08026d28:
	ldr		r1, [r5, #0x54]
	sub		r1, #0x1
	b		_08026e48
_08026d2e:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_08026d3c
	b		_08026e54
_08026d3c:
	ldr		r2, [sp, #0xC]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	sub		r0, #0x1
	lsl		r0, r0, #0x1
	ldr		r1, [sp, #0x10]
	add		r0, r1, r0
	ldr		r2, [sp, #0x8]
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r1, r0
	ble		_08026d60
	mov		r0, #0x9a
	bl		sub_08016b44
	b		_08026c78
_08026d60:
	mov		r0, #0x55
	bl		sub_08016b44
	ldr		r0, [r5, #0x54]
	cmp		r0, #0x2
	bne		_08026e44
	mov		r3, #0x48
	add		r3, r3, r5
	mov		r8, r3
	add		r6, r5, #0x0
	add		r6, #0x7e
	ldr		r0, _08026e18
	mov		r10, r0
	ldr		r1, _08026e1c
	mov		r9, r1
	mov		r7, #0x0
	mov		r4, #0x10
_08026d82:
	neg		r0, r7
	cmp		r0, #0x0
	bge		_08026d8a
	add		r0, #0xf
_08026d8a:
	asr		r0, r0, #0x4
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	ldr		r1, _08026e20
	strh	r0, [r1, #0x0]
	ldr		r2, _08026e24
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r7, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08026d82
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	mov		r0, r8
	bl		sub_08016c94
	mov		r0, #0x1
	bl		sub_08018508
	add		r0, r6, #0x0
	bl		sub_0801845c
	ldr		r0, _08026e28
	mov		r1, #0x58
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, sp
	bl		sub_08027378
	add		r4, r0, #0x0
	ldr		r0, _08026e28
	add		r0, #0x50
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r3, _08026e2c
	str		r3, [sp, #0x0]
	add		r6, r3, #0x0
_08026df2:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x0]
	cmp		r0, r6
	beq		_08026df2
	add		r0, r4, #0x0
	bl		sub_080b75b0
	ldr		r2, [sp, #0x0]
	cmp		r2, #0x0
	bne		_08026e30
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08026e44

_08026e18:	.4byte 0x0200EB20
_08026e1c:	.4byte 0x0200EB22
_08026e20:	.4byte 0x0200EB1E
_08026e24:	.4byte 0x0200EB24
_08026e28:	.4byte 0x0200DA00
_08026e2c:	.4byte 0x80808080

_08026e30:
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	bl		sub_080004e8
_08026e3a:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08026e3a
_08026e44:
	ldr		r1, [r5, #0x54]
	add		r1, #0x1
_08026e48:
	str		r1, [r5, #0x54]
	ldr		r0, [r5, #0x4c]
	mov		r2, #0x2
	bl		sub_08017d20
	b		_08026c78
_08026e54:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08026f4a
	mov		r0, #0x54
	bl		sub_08016b44
	ldr		r0, [r5, #0x54]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x1C]
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08026ef8
	cmp		r0, #0x1
	bgt		_08026e7e
	cmp		r0, #0x0
	beq		_08026e84
	b		_08026f44
_08026e7e:
	cmp		r0, #0x2
	beq		_08026f16
	b		_08026f44
_08026e84:
	ldr		r2, [sp, #0x14]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	add		r0, #0x1
	ldr		r1, _08026ee8
	add		r6, r5, #0x0
	add		r6, #0x7e
	ldr		r2, _08026eec
	cmp		r0, r2
	bgt		_08026e9a
	add		r1, r0, #0x0
_08026e9a:
	strh	r1, [r6, #0x0]
	add		r0, r5, #0x0
	bl		sub_08027210
	ldrh	r0, [r6, #0x0]
	mov		r3, #0x3
	and		r0, r3
	cmp		r0, #0x0
	bne		_08026ebc
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	mov		r1, #0x64
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08026ede
_08026ebc:
	mov		r2, #0x0
	ldrsh	r4, [r6, r2]
	add		r0, r4, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08026ef0
	add		r0, r4, #0x0
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08026ef0
_08026ede:
	mov		r0, #0x1d
	ldr		r3, [sp, #0x18]
	strh	r0, [r3, #0x0]
	b		_08026f44

.incbin "base.gba", 0x26EE6, 0x2

_08026ee8:	.4byte 0x0000076C
_08026eec:	.4byte 0x00000834

_08026ef0:
	mov		r2, #0x1c
	ldr		r1, [sp, #0x18]
	strh	r2, [r1, #0x0]
	b		_08026f44
_08026ef8:
	ldr		r3, [sp, #0xC]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	add		r0, #0x1
	mov		r2, #0x1
	add		r1, r5, #0x0
	add		r1, #0x80
	cmp		r0, #0xc
	bgt		_08026f0c
	add		r2, r0, #0x0
_08026f0c:
	strh	r2, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_080271e0
	b		_08026f44
_08026f16:
	ldr		r2, [sp, #0x8]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	add		r2, r0, #0x1
	ldr		r1, [sp, #0xC]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	sub		r0, #0x1
	lsl		r0, r0, #0x1
	ldr		r1, [sp, #0x10]
	add		r0, r1, r0
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mov		r3, #0x1
	add		r1, r5, #0x0
	add		r1, #0x82
	cmp		r2, r0
	bgt		_08026f3c
	add		r3, r2, #0x0
_08026f3c:
	strh	r3, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_08027188
_08026f44:
	add		r0, r5, #0x0
	bl		sub_08027130
_08026f4a:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	bne		_08026f58
	b		_08026c78
_08026f58:
	mov		r0, #0x54
	bl		sub_08016b44
	ldr		r0, [r5, #0x54]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x1C]
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08026ff0
	cmp		r0, #0x1
	bgt		_08026f76
	cmp		r0, #0x0
	beq		_08026f7c
	b		_08027032
_08026f76:
	cmp		r0, #0x2
	beq		_0802700a
	b		_08027032
_08026f7c:
	ldr		r2, [sp, #0x14]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	sub		r0, #0x1
	ldr		r1, _08026fe0
	add		r6, r5, #0x0
	add		r6, #0x7e
	ldr		r2, _08026fe4
	cmp		r0, r2
	ble		_08026f92
	add		r1, r0, #0x0
_08026f92:
	add		r4, r6, #0x0
	strh	r1, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_08027210
	ldrh	r0, [r4, #0x0]
	mov		r3, #0x3
	and		r0, r3
	cmp		r0, #0x0
	bne		_08026fb6
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r1, #0x64
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08026fd8
_08026fb6:
	mov		r2, #0x0
	ldrsh	r4, [r6, r2]
	add		r0, r4, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08026fe8
	add		r0, r4, #0x0
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08026fe8
_08026fd8:
	mov		r0, #0x1d
	ldr		r3, [sp, #0x18]
	strh	r0, [r3, #0x0]
	b		_08027032

_08026fe0:	.4byte 0x00000834
_08026fe4:	.4byte 0x0000076B

_08026fe8:
	mov		r2, #0x1c
	ldr		r1, [sp, #0x18]
	strh	r2, [r1, #0x0]
	b		_08027032
_08026ff0:
	add		r1, r5, #0x0
	add		r1, #0x80
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	sub		r0, #0x1
	cmp		r0, #0x0
	bgt		_08027000
	mov		r0, #0xc
_08027000:
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_080271e0
	b		_08027032
_0802700a:
	add		r1, r5, #0x0
	add		r1, #0x82
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	sub		r0, #0x1
	cmp		r0, #0x0
	bgt		_0802702a
	ldr		r3, [sp, #0xC]
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	sub		r0, #0x1
	lsl		r0, r0, #0x1
	ldr		r3, [sp, #0x10]
	add		r0, r3, r0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
_0802702a:
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_08027188
_08027032:
	add		r0, r5, #0x0
	bl		sub_08027130
	b		_08026c78

.incbin "base.gba", 0x2703A, 0x2
	push	{ r4, lr }
	ldr		r4, _080270c8
	ldr		r0, _080270cc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080270d0
	ldr		r0, _080270d4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080270d8
	ldr		r0, _080270dc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080270e0
	ldr		r0, _080270e4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080270e8
	ldr		r0, _080270ec
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080270f0
	ldr		r0, _080270f4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080270f8
	ldr		r0, _080270fc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027100
	ldr		r0, _08027104
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027108
	ldr		r0, _0802710c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027110
	ldr		r0, _08027114
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027118
	ldr		r0, _0802711c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027120
	ldr		r0, _08027124
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027128
	ldr		r0, _0802712c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x270C6, 0x2

_080270c8:	.4byte 0x0200BA90
_080270cc:	.4byte 0x080d29fc @ ms_K_birthday_0
_080270d0:	.4byte 0x0200BA8C
_080270d4:	.4byte 0x080d2a0c @ ms_K_ohitsuji_za
_080270d8:	.4byte 0x0200BA88
_080270dc:	.4byte 0x080d2a20 @ ms_K_oushi_za
_080270e0:	.4byte 0x0200BA84
_080270e4:	.4byte 0x080d2a30 @ ms_K_hutago_za
_080270e8:	.4byte 0x0200BA80
_080270ec:	.4byte 0x080d2a40 @ ms_K_kani_za
_080270f0:	.4byte 0x0200BA7C
_080270f4:	.4byte 0x080d2a50 @ ms_K_shishi_za
_080270f8:	.4byte 0x0200BA78
_080270fc:	.4byte 0x080d2a60 @ ms_K_otome_za
_08027100:	.4byte 0x0200BA74
_08027104:	.4byte 0x080d2a70 @ ms_K_tenbin_za
_08027108:	.4byte 0x0200BA70
_0802710c:	.4byte 0x080d2a80 @ ms_K_sasori_za
_08027110:	.4byte 0x0200BA6C
_08027114:	.4byte 0x080d2a90 @ ms_K_ite_za
_08027118:	.4byte 0x0200BA68
_0802711c:	.4byte 0x080d2a9c @ ms_K_yagi_za
_08027120:	.4byte 0x0200BA64
_08027124:	.4byte 0x080d2aac @ ms_K_mizugame_za
_08027128:	.4byte 0x0200BA60
_0802712c:	.4byte 0x080d2ac0 @ ms_K_uo_za
	thumb_func_end sub_08026bf0

	thumb_func_start sub_08027130
sub_08027130:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r0, #0x80
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r1, r5, #0x0
	add		r1, #0x82
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_08016ad8
	add		r4, r5, #0x0
	add		r4, #0x7c
	strh	r0, [r4, #0x0]
	ldr		r0, [r5, #0x50]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	bl		sub_08016a54
	mov		r0, #0x4
	bl		sub_08017ce0
	ldr		r1, _08027184
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x4
	mov		r2, #0x32
	mov		r3, #0x6
	bl		sub_08017bc4
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x27182, 0x2

_08027184:	.4byte 0x0200D470
	thumb_func_end sub_08027130

	thumb_func_start sub_08027188
sub_08027188:
	push	{ lr }
	sub		sp, #0x8
	ldr		r1, _080271bc
	add		r0, #0x82
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	add		r0, sp, #0x4
	bl		sub_0808c63c
	ldr		r0, _080271c0
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080271c4
	mov		r0, #0x3
	bl		sub_08017ce0
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x3
	add		r1, sp, #0x4
	mov		r2, #0x18
	mov		r3, #0x2
	bl		sub_08017998
	b		_080271da

_080271bc:	.4byte 0x080d29f8
_080271c0:	.4byte 0x00000836

_080271c4:
	mov		r0, #0x1
	bl		sub_08017ce0
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x1
	add		r1, sp, #0x4
	mov		r2, #0x19
	mov		r3, #0x2
	bl		sub_08017998
_080271da:
	add		sp, #0x8
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08027188

	thumb_func_start sub_080271e0
sub_080271e0:
	push	{ lr }
	sub		sp, #0x8
	ldr		r1, _0802720c
	add		r0, #0x80
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	add		r0, sp, #0x4
	bl		sub_0808c63c
	mov		r0, #0x2
	bl		sub_08017ce0
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	add		r1, sp, #0x4
	mov		r2, #0xc
	mov		r3, #0x2
	bl		sub_08017998
	add		sp, #0x8
	pop		{ r0 }
	bx		r0

_0802720c:	.4byte 0x080d29f8
	thumb_func_end sub_080271e0

	thumb_func_start sub_08027210
sub_08027210:
	push	{ lr }
	sub		sp, #0xc
	ldr		r1, _08027244
	add		r0, #0x7e
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	add		r0, sp, #0x4
	bl		sub_0808c63c
	ldr		r0, _08027248
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0802724c
	mov		r0, #0x1
	bl		sub_08017ce0
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x1
	add		r1, sp, #0x4
	mov		r2, #0x19
	mov		r3, #0x2
	bl		sub_08017998
	b		_08027262

_08027244:	.4byte 0x080d29f8
_08027248:	.4byte 0x00000836

_0802724c:
	mov		r0, #0x3
	bl		sub_08017ce0
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x3
	add		r1, sp, #0x4
	mov		r2, #0x17
	mov		r3, #0x2
	bl		sub_08017998
_08027262:
	add		sp, #0xc
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x27268, 0xC
	thumb_func_end sub_08027210

	thumb_func_start sub_08027274
sub_08027274:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	ldr		r0, _080272a8
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x48
	bl		sub_08016d24
	mov		r0, #0x0
	str		r0, [r4, #0x54]
	add		r0, r4, #0x0
	add		r0, #0x7e
	bl		sub_08018420
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_080272a8:	.4byte 0x080e1094
	thumb_func_end sub_08027274

	thumb_func_start sub_080272ac
sub_080272ac:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r0, #0x82
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r3, r0, #0x1
	add		r0, r2, #0x0
	add		r0, #0x80
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	sub		r1, #0x1
	lsl		r1, r1, #0x1
	sub		r0, #0x1c
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0x1
	cmp		r3, r0
	bgt		_080272d4
	add		r1, r3, #0x0
_080272d4:
	add		r0, r1, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080272ac

	thumb_func_start sub_080272dc
sub_080272dc:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, #0x82
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	sub		r0, #0x1
	cmp		r0, #0x0
	bgt		_08027300
	add		r0, r2, #0x0
	add		r0, #0x80
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	sub		r1, #0x1
	lsl		r1, r1, #0x1
	sub		r0, #0x1c
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
_08027300:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x27304, 0x74
	thumb_func_end sub_080272dc

	thumb_func_start sub_08027378
sub_08027378:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	add		r1, r4, #0x0
	bl		sub_080004f4
	ldr		r0, _080273b8
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x48
	bl		sub_08016d24
	ldr		r0, _080273bc
	ldr		r1, _080273c0
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x54
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x1
	beq		_080273ce
	cmp		r0, #0x1
	bgt		_080273c4
	cmp		r0, #0x0
	beq		_080273ce
	b		_080273d0

_080273b8:	.4byte 0x080e10bc
_080273bc:	.4byte 0x02000BAC
_080273c0:	.4byte 0x0000042D

_080273c4:
	cmp		r0, #0x2
	beq		_080273ce
	cmp		r0, #0x3
	bne		_080273d0
	mov		r0, #0x2
_080273ce:
	strh	r0, [r1, #0x0]
_080273d0:
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08027378

	thumb_func_start sub_080273d8
sub_080273d8:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	mov		r0, #0x1c
	bl		sub_08016be8
	ldr		r5, _0802743c
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_0800bcd0
	str		r0, [r4, #0x4c]
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_0800bcd0
	str		r0, [r4, #0x50]
	add		r0, r4, #0x0
	bl		sub_08027710
	mov		r0, #0x0
	bl		sub_08017ce0
	ldr		r0, _08027440
	ldr		r1, [r0, #0x0]
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	mov		r2, #0x78
	mov		r3, #0x2
	bl		sub_08017bc4
	add		r0, r4, #0x0
	add		r0, #0x48
	ldr		r3, _08027444
	mov		r1, #0x8
	add		r2, r3, #0x0
	bl		sub_08016cb0
	mov		r0, #0xe8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	add		r4, #0x56
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0802743c:	.4byte 0x0200A26C
_08027440:	.4byte 0x0200BAA0
_08027444:	.4byte 0xFFFFB334
	thumb_func_end sub_080273d8

	thumb_func_start sub_08027448
sub_08027448:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	bl		sub_080273d8
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r5, #0x10
	ldr		r0, _08027544
	mov		r10, r0
	ldr		r1, _08027548
	mov		r9, r1
	mov		r2, #0x56
	add		r2, r2, r6
	mov		r8, r2
	add		r7, r6, #0x0
	add		r7, #0x54
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_0802747c:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_08027484
	add		r0, #0xf
_08027484:
	asr		r0, r0, #0x4
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r1, _0802754c
	strh	r0, [r1, #0x0]
	ldr		r2, _08027550
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802747c
	mov		r4, r8
	mov		r5, #0x0
	mov		r0, #0x2
	mov		r9, r0
_080274b2:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x1e
	bne		_080274d0
	ldr		r0, _08027554
	bl		sub_080b62dc
	mov		r1, r8
	strh	r5, [r1, #0x0]
_080274d0:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08027558
	mov		r0, #0x56
	bl		sub_08016b44
	add		r2, r6, #0x0
	add		r2, #0x40
	str		r2, [sp, #0x4]
	ldr		r0, _08027550
	mov		r10, r0
	ldr		r1, _0802754c
	mov		r9, r1
	ldr		r2, _08027544
	mov		r8, r2
	ldr		r7, _08027548
	mov		r5, #0x0
	mov		r4, #0x10
_080274fa:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_08027502
	add		r0, #0xf
_08027502:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080274fa
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080004e8
_0802753a:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0802753a

_08027544:	.4byte 0x0200EB20
_08027548:	.4byte 0x0200EB22
_0802754c:	.4byte 0x0200EB1E
_08027550:	.4byte 0x0200EB24
_08027554:	.4byte 0x0200BDD4

_08027558:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_08027566
	b		_08027668
_08027566:
	mov		r0, #0x55
	bl		sub_08016b44
	add		r2, r6, #0x0
	add		r2, #0x40
	str		r2, [sp, #0x4]
	mov		r0, #0x48
	add		r0, r0, r6
	mov		r8, r0
	ldr		r1, _080275dc
	mov		r10, r1
	ldr		r2, _080275e0
	mov		r9, r2
	mov		r5, #0x0
	mov		r4, #0x10
_08027584:
	neg		r0, r5
	cmp		r0, #0x0
	bge		_0802758c
	add		r0, #0xf
_0802758c:
	asr		r0, r0, #0x4
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r1, _080275e4
	strh	r0, [r1, #0x0]
	ldr		r2, _080275e8
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08027584
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	mov		r0, r8
	bl		sub_08016c94
	mov		r0, #0x2
	bl		sub_08018508
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x1
	beq		_080275f2
	cmp		r0, #0x1
	bgt		_080275ec
	cmp		r0, #0x0
	beq		_08027606
	b		_0802760a

.incbin "base.gba", 0x275DA, 0x2

_080275dc:	.4byte 0x0200EB20
_080275e0:	.4byte 0x0200EB22
_080275e4:	.4byte 0x0200EB1E
_080275e8:	.4byte 0x0200EB24

_080275ec:
	cmp		r0, #0x2
	beq		_080275fc
	b		_0802760a
_080275f2:
	ldr		r1, _080275f8
	strb	r0, [r1, #0x0]
	b		_0802760a

_080275f8:	.4byte 0x02000FD9

_080275fc:
	ldr		r0, _08027658
	mov		r1, #0x2
	bl		sub_080b63dc
	add		r0, #0x2
_08027606:
	ldr		r2, _0802765c
	strb	r0, [r2, #0x0]
_0802760a:
	ldr		r0, _08027660
	mov		r1, #0x50
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, sp
	bl		sub_08027ba4
	add		r4, r0, #0x0
	ldr		r0, _08027660
	add		r0, #0x50
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _08027664
	str		r0, [sp, #0x0]
	add		r5, r0, #0x0
_08027630:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [sp, #0x0]
	cmp		r0, r5
	beq		_08027630
	add		r0, r4, #0x0
	bl		sub_080b75b0
	ldr		r2, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	bl		sub_080004e8
_0802764c:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0802764c

.incbin "base.gba", 0x27656, 0x2

_08027658:	.4byte 0x0200BDD4
_0802765c:	.4byte 0x02000FD9
_08027660:	.4byte 0x0200DA00
_08027664:	.4byte 0x80808080

_08027668:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08027692
	mov		r0, #0x54
	bl		sub_08016b44
	ldrh	r1, [r7, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	cmp		r0, #0x1
	bgt		_0802768a
	add		r0, r1, #0x1
	strh	r0, [r7, #0x0]
	b		_0802768c
_0802768a:
	strh	r5, [r7, #0x0]
_0802768c:
	add		r0, r6, #0x0
	bl		sub_08027710
_08027692:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_080276a0
	b		_080274b2
_080276a0:
	mov		r0, #0x54
	bl		sub_08016b44
	ldrh	r1, [r7, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	cmp		r0, #0x0
	ble		_080276b4
	sub		r0, r1, #0x1
	b		_080276b6
_080276b4:
	mov		r0, r9
_080276b6:
	strh	r0, [r7, #0x0]
	add		r0, r6, #0x0
	bl		sub_08027710
	b		_080274b2
	thumb_func_end sub_08027448

	thumb_func_start sub_080276c0
sub_080276c0:
	push	{ r4, lr }
	ldr		r4, _080276f0
	ldr		r0, _080276f4
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _080276f8
	ldr		r0, _080276fc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027700
	ldr		r0, _08027704
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027708
	ldr		r0, _0802770c
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080276f0:	.4byte 0x0200BAA0
_080276f4:	.4byte 0x080d2acc @ ms_K_blood_sex_0
_080276f8:	.4byte 0x0200BA9C
_080276fc:	.4byte 0x080d2ae0 @ ms_K_himitsu
_08027700:	.4byte 0x0200BA98
_08027704:	.4byte 0x080d2af0 @ ms_K_otokonoko
_08027708:	.4byte 0x0200BA94
_0802770c:	.4byte 0x080d2b00 @ ms_K_onnanoko
	thumb_func_end sub_080276c0

	thumb_func_start sub_08027710
sub_08027710:
	push	{ r4, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	add		r1, r4, #0x0
	add		r1, #0x54
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x2
	bne		_0802773c
	ldr		r0, [r4, #0x50]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r2, r0, r3
	mov		r1, #0x5f
	bl		sub_0800be04
	ldr		r0, [r4, #0x50]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	b		_08027758
_0802773c:
	mov		r0, #0x0
	ldrsh	r1, [r1, r0]
	ldr		r0, [r4, #0x50]
	add		r1, #0x60
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r2, r0, r3
	bl		sub_0800be04
	ldr		r0, [r4, #0x50]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
_08027758:
	mov		r0, #0x1
	bl		sub_08017ce0
	ldr		r1, _08027788
	add		r0, r4, #0x0
	add		r0, #0x54
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	mov		r0, #0x1
	mov		r2, #0x34
	mov		r3, #0x3
	bl		sub_08017bc4
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x27786, 0x2

_08027788:	.4byte 0x0200D4A0

.incbin "base.gba", 0x2778C, 0x34C
	push	{ r4, lr }
	ldr		r4, _08027af4
	ldr		r0, _08027af8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _08027afc
	ldr		r0, _08027b00
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08027af4:	.4byte 0x0200BAA8
_08027af8:	.4byte 0x080d2b10 @ ms_K_preview_0
_08027afc:	.4byte 0x0200BAA4
_08027b00:	.4byte 0x080d2b20 @ ms_K_preview_1
	thumb_func_end sub_08027710

	thumb_func_start sub_08027b04
sub_08027b04:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r0, #0x80
	bl		sub_0800132c
	mov		r0, #0x0
	bl		sub_08016c38
	ldr		r0, [r5, #0x4c]
	cmp		r0, #0x0
	beq		_08027b1e
	bl		sub_080b75b0
_08027b1e:
	ldr		r4, _08027b5c
	add		r0, r4, #0x0
	ldr		r1, _08027b60
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0805fd80
	add		r1, r0, #0x0
	str		r1, [r5, #0x4c]
	add		r4, #0x50
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, #0x1d
	bl		sub_08016be8
	add		r0, r5, #0x0
	add		r0, #0x48
	mov		r1, #0x1
	bl		sub_08018e6c
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08027b5c:	.4byte 0x0200DA00
_08027b60:	.4byte 0x00000FA8
	thumb_func_end sub_08027b04

	thumb_func_start sub_08027b64
sub_08027b64:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08027ba0
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x4c]
	cmp		r0, #0x0
	beq		_08027b78
	bl		sub_080b75b0
_08027b78:
	add		r0, r4, #0x0
	add		r0, #0x48
	mov		r1, #0x0
	bl		sub_08018f4c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08027b98
	add		r0, r4, #0x0
	bl		sub_080b74c8
_08027b98:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x27B9E, 0x2

_08027ba0:	.4byte 0x080e10e4
	thumb_func_end sub_08027b64

	thumb_func_start sub_08027ba4
sub_08027ba4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	add		r1, r5, #0x0
	bl		sub_080004f4
	ldr		r0, _08027bc8
	str		r0, [r4, #0xc]
	mov		r0, #0x0
	str		r0, [r4, #0x4c]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08027bc8:	.4byte 0x080e10e4
	thumb_func_end sub_08027ba4

	thumb_func_start sub_08027bcc
sub_08027bcc:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	sub		r0, r0, r1
	str		r0, [r2, #0x60]
	cmp		r0, #0x0
	bge		_08027bde
	mov		r0, #0x0
	str		r0, [r2, #0x60]
_08027bde:
	mov		r1, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r1, r0
	bge		_08027bfa
	mov		r4, #0x1
	add		r3, r2, #0x0
	add		r3, #0x50
_08027bec:
	ldmia	r3!, { r0 }
	add		r0, #0x5c
	strb	r4, [r0, #0x0]
	add		r1, #0x1
	ldr		r0, [r2, #0x60]
	cmp		r1, r0
	blt		_08027bec
_08027bfa:
	cmp		r1, #0x2
	bgt		_08027c12
	mov		r3, #0x0
	lsl		r0, r1, #0x2
	add		r0, #0x50
	add		r2, r0, r2
_08027c06:
	ldmia	r2!, { r0 }
	add		r0, #0x5c
	strb	r3, [r0, #0x0]
	add		r1, #0x1
	cmp		r1, #0x2
	ble		_08027c06
_08027c12:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08027bcc

	thumb_func_start sub_08027c18
sub_08027c18:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	add		r0, r0, r1
	str		r0, [r2, #0x60]
	cmp		r0, #0x3
	ble		_08027c2a
	mov		r0, #0x3
	str		r0, [r2, #0x60]
_08027c2a:
	mov		r1, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r1, r0
	bge		_08027c46
	mov		r4, #0x1
	add		r3, r2, #0x0
	add		r3, #0x50
_08027c38:
	ldmia	r3!, { r0 }
	add		r0, #0x5c
	strb	r4, [r0, #0x0]
	add		r1, #0x1
	ldr		r0, [r2, #0x60]
	cmp		r1, r0
	blt		_08027c38
_08027c46:
	cmp		r1, #0x2
	bgt		_08027c5e
	mov		r3, #0x0
	lsl		r0, r1, #0x2
	add		r0, #0x50
	add		r2, r0, r2
_08027c52:
	ldmia	r2!, { r0 }
	add		r0, #0x5c
	strb	r3, [r0, #0x0]
	add		r1, #0x1
	cmp		r1, #0x2
	ble		_08027c52
_08027c5e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08027c18

	thumb_func_start sub_08027c64
sub_08027c64:
	push	{ r4, r5, r6, r7, lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x5c]
	add		r0, r0, r1
	str		r0, [r2, #0x5c]
	ldr		r1, _08027ca8
	cmp		r0, r1
	ble		_08027c76
	str		r1, [r2, #0x5c]
_08027c76:
	ldr		r5, [r2, #0x5c]
	add		r7, r2, #0x0
	add		r7, #0x40
	mov		r6, #0x3
_08027c7e:
	ldmia	r7!, { r4 }
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r5, r0, #0x0
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08027c7e
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08027ca8:	.4byte 0x0000270F
	thumb_func_end sub_08027c64

	thumb_func_start sub_08027cac
sub_08027cac:
	mov		r1, #0x0
	str		r1, [r0, #0x5c]
	mov		r1, #0x3
	str		r1, [r0, #0x60]
	bx		lr

.incbin "base.gba", 0x27CB6, 0x2
	thumb_func_end sub_08027cac

	thumb_func_start sub_08027cb8
sub_08027cb8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _08027ccc
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08027ccc:	.4byte 0x080e110c
	thumb_func_end sub_08027cb8

	thumb_func_start sub_08027cd0
sub_08027cd0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r5, #0x0
_08027cd6:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08027d0c
	ldr		r0, [r4, #0x48]
	cmp		r0, #0x0
	ble		_08027d0c
	mov		r0, #0x71
	bl		sub_08016b44
	ldr		r1, [r4, #0x48]
	sub		r1, #0x1
	str		r1, [r4, #0x48]
	ldr		r0, [r4, #0x44]
	mov		r2, #0x2
	bl		sub_08017d20
	str		r5, [r4, #0x4c]
_08027d0c:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08027d34
	ldr		r0, [r4, #0x48]
	cmp		r0, #0x1
	bgt		_08027d34
	mov		r0, #0x71
	bl		sub_08016b44
	ldr		r1, [r4, #0x48]
	add		r1, #0x1
	str		r1, [r4, #0x48]
	ldr		r0, [r4, #0x44]
	mov		r2, #0x2
	bl		sub_08017d20
	str		r5, [r4, #0x4c]
_08027d34:
	ldr		r0, [r4, #0x4c]
	cmp		r0, #0x0
	ble		_08027cd6
	sub		r0, #0x1
	str		r0, [r4, #0x4c]
	cmp		r0, #0x0
	bne		_08027cd6
	ldr		r0, [r4, #0x44]
	ldr		r1, [r4, #0x48]
	mov		r2, #0x2
	bl		sub_08017d20
	b		_08027cd6

.incbin "base.gba", 0x27D4E, 0x76
	thumb_func_end sub_08027cd0

	thumb_func_start sub_08027dc4
sub_08027dc4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	str		r1, [r4, #0x44]
	ldr		r0, _08027dfc
	cmp		r1, r0
	bne		_08027dda
	b		_08027fd0
_08027dda:
	cmp		r1, r0
	bgt		_08027e18
	sub		r0, #0x3
	cmp		r1, r0
	bne		_08027de6
	b		_08027f40
_08027de6:
	cmp		r1, r0
	bgt		_08027e00
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08027e5c
	add		r0, #0x1
	cmp		r1, r0
	bne		_08027df8
	b		_08027f0c
_08027df8:
	b		_080280d8

.incbin "base.gba", 0x27DFA, 0x2

_08027dfc:	.4byte 0xFFFF8008

_08027e00:
	ldr		r0, _08027e14
	cmp		r1, r0
	bne		_08027e08
	b		_08027f80
_08027e08:
	add		r0, #0x1
	cmp		r1, r0
	bne		_08027e10
	b		_08027f9a
_08027e10:
	b		_080280d8

.incbin "base.gba", 0x27E12, 0x2

_08027e14:	.4byte 0xFFFF8006

_08027e18:
	ldr		r0, _08027e38
	cmp		r1, r0
	bne		_08027e20
	b		_0802804c
_08027e20:
	cmp		r1, r0
	bgt		_08027e3c
	sub		r0, #0x2
	cmp		r1, r0
	bne		_08027e2c
	b		_08028010
_08027e2c:
	add		r0, #0x1
	cmp		r1, r0
	bne		_08027e34
	b		_0802802a
_08027e34:
	b		_080280d8

.incbin "base.gba", 0x27E36, 0x2

_08027e38:	.4byte 0xFFFF800B

_08027e3c:
	ldr		r0, _08027e54
	cmp		r1, r0
	bne		_08027e44
	b		_080280a0
_08027e44:
	cmp		r1, r0
	bge		_08027e4a
	b		_08028066
_08027e4a:
	ldr		r0, _08027e58
	cmp		r1, r0
	bne		_08027e52
	b		_080280ba
_08027e52:
	b		_080280d8

_08027e54:	.4byte 0xFFFF800D
_08027e58:	.4byte 0xFFFFF002

_08027e5c:
	add		r7, r4, #0x0
	add		r7, #0x54
	ldr		r0, _08027ef4
	mov		r10, r0
	mov		r1, #0x0
	mov		r9, r1
	mov		r8, r7
_08027e6a:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x50]
	ldr		r0, [r4, #0x4c]
	add		r1, r1, r0
	str		r1, [r4, #0x50]
	cmp		r1, r10
	ble		_08027e6a
	mov		r3, r9
	str		r3, [r4, #0x50]
	mov		r1, r8
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r6, _08027ef8
	mov		r5, #0x2
_08027ea0:
	mov		r3, #0x0
	ldrsh	r1, [r7, r3]
	ldr		r0, [r6, #0x0]
	cmp		r1, r0
	bne		_08027eb6
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08027efc
	mov		r3, #0x0
	bl		sub_080b7724
_08027eb6:
	add		r6, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08027ea0
	mov		r5, #0x0
	ldr		r6, _08027f00
_08027ec2:
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	ldr		r0, [r6, #0x0]
	cmp		r1, r0
	bne		_08027ee8
	cmp		r5, #0x2
	bne		_08027edc
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08027f04
	mov		r3, #0x0
	bl		sub_080b7724
_08027edc:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08027f08
	mov		r3, #0x0
	bl		sub_080b7724
_08027ee8:
	add		r6, #0x4
	add		r5, #0x1
	cmp		r5, #0x2
	ble		_08027ec2
	b		_08027e6a

.incbin "base.gba", 0x27EF2, 0x2

_08027ef4:	.4byte 0x0013FFFF
_08027ef8:	.4byte 0x080d2b3c
_08027efc:	.4byte 0xFFFF8007
_08027f00:	.4byte 0x080d2b30
_08027f04:	.4byte 0xFFFF800A
_08027f08:	.4byte 0xFFFF8004

_08027f0c:
	ldr		r5, _08027f38
_08027f0e:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x50]
	ldr		r0, [r4, #0x4c]
	add		r1, r1, r0
	str		r1, [r4, #0x50]
	cmp		r1, r5
	ble		_08027f0e
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08027f3c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08027f0e

.incbin "base.gba", 0x27F36, 0x2

_08027f38:	.4byte 0x0009FFFF
_08027f3c:	.4byte 0xFFFF8005

_08027f40:
	ldr		r7, _08027f78
	mov		r6, #0x0
	add		r5, r4, #0x0
	add		r5, #0x56
_08027f48:
	ldr		r1, [r4, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x50]
	ldr		r0, [r4, #0x4c]
	add		r1, r1, r0
	str		r1, [r4, #0x50]
	cmp		r1, r7
	ble		_08027f48
	str		r6, [r4, #0x50]
	ldrh	r0, [r5, #0x0]
	add		r0, #0x1
	strh	r0, [r5, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08027f7c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08027f48

_08027f78:	.4byte 0x0013FFFF
_08027f7c:	.4byte 0xFFFF8006

_08027f80:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08027fc4
	mov		r3, #0x0
	bl		sub_080b7724
_08027f9a:
	ldr		r5, _08027fc8
_08027f9c:
	ldr		r1, [r4, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x50]
	ldr		r0, [r4, #0x4c]
	add		r1, r1, r0
	str		r1, [r4, #0x50]
	cmp		r1, r5
	ble		_08027f9c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08027fcc
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08027f9c

_08027fc4:	.4byte 0xFFFF8003
_08027fc8:	.4byte 0x0006AAA9
_08027fcc:	.4byte 0xFFFF8008

_08027fd0:
	ldr		r7, _08028008
	mov		r6, #0x0
	add		r5, r4, #0x0
	add		r5, #0x58
_08027fd8:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x50]
	ldr		r0, [r4, #0x4c]
	add		r1, r1, r0
	str		r1, [r4, #0x50]
	cmp		r1, r7
	ble		_08027fd8
	str		r6, [r4, #0x50]
	ldrh	r0, [r5, #0x0]
	add		r0, #0x1
	strh	r0, [r5, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0802800c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08027fd8

_08028008:	.4byte 0x0013FFFF
_0802800c:	.4byte 0xFFFF8009

_08028010:
	ldr		r1, [r4, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _080280c4
	mov		r3, #0x0
	bl		sub_080b7724
_0802802a:
	mov		r5, #0x1d
_0802802c:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802802c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _080280c8
	mov		r3, #0x0
	bl		sub_080b7724
_0802804c:
	ldr		r1, [r4, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _080280cc
	mov		r3, #0x0
	bl		sub_080b7724
_08028066:
	ldr		r0, [r4, #0x48]
	ldr		r2, _080280d0
	add		r1, r4, #0x0
	add		r1, #0x58
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r5, #0x1d
_08028080:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08028080
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _080280d4
	mov		r3, #0x0
	bl		sub_080b7724
_080280a0:
	ldr		r1, [r4, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _080280cc
	mov		r3, #0x0
	bl		sub_080b7724
_080280ba:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_080280ba

_080280c4:	.4byte 0xFFFF8003
_080280c8:	.4byte 0xFFFF800B
_080280cc:	.4byte 0xFFFFF002
_080280d0:	.4byte 0x080d2b48
_080280d4:	.4byte 0xFFFF800D

_080280d8:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x280E6, 0x786

_0802886c:	.4byte 0x08028894

.incbin "base.gba", 0x28870, 0x24
	thumb_func_end sub_08027dc4


.incbin "base.gba", 0x28894, 0x1C8
	thumb_func_start sub_08028a5c
sub_08028a5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r6, r0, #0x0
	ldr		r1, [r6, #0x74]
	cmp		r1, #0x0
	beq		_08028a74
	mov		r0, #0x1
	str		r0, [r1, #0x40]
_08028a74:
	add		r0, r6, #0x0
	add		r0, #0x78
	str		r0, [sp, #0xC]
	add		r1, r6, #0x0
	add		r1, #0x84
	str		r1, [sp, #0x10]
	add		r4, r6, #0x0
	add		r4, #0x68
	ldr		r2, _08028b68
	mov		r8, r2
	add		r0, #0x58
	str		r0, [sp, #0x14]
	mov		r1, #0xd2
	add		r1, r1, r6
	mov		r10, r1
	mov		r2, #0xda
	add		r2, r2, r6
	mov		r9, r2
	mov		r3, #0x1
	ldr		r1, [sp, #0xC]
	mov		r2, #0x2
_08028a9e:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08028aa6
	str		r3, [r0, #0x40]
_08028aa6:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08028a9e
	mov		r3, #0x1
	ldr		r1, [sp, #0x10]
	mov		r2, #0x4
_08028ab4:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08028abc
	str		r3, [r0, #0x40]
_08028abc:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08028ab4
	ldr		r7, _08028b6c
	ldr		r0, [r7, #0x0]
	bl		sub_08018fcc
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r0, r4, #0x0
	bl		sub_08018f30
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_08018e6c
	ldr		r0, [r6, #0x64]
	cmp		r0, #0x1
	beq		_08028ae8
	b		_08028be8
_08028ae8:
	ldr		r0, _08028b70
	mov		r1, #0xd
	bl		sub_0808b4d0
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_08028b84
	ldr		r0, [r7, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	ldr		r2, [r1, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	ldr		r5, _08028b74
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08028b78
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08028b7c
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08028b80
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [sp, #0x14]
	strh	r4, [r0, #0x0]
	mov		r0, #0x2
	mov		r1, r10
	strh	r0, [r1, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	b		_08028c22

.incbin "base.gba", 0x28B66, 0x2

_08028b68:	.4byte 0x080d2b88
_08028b6c:	.4byte 0x0200B7A4
_08028b70:	.4byte 0x02004968
_08028b74:	.4byte 0xFFFF8001
_08028b78:	.4byte 0x0200B910
_08028b7c:	.4byte 0x0200B90C
_08028b80:	.4byte 0x0200B8FC

_08028b84:
	ldr		r0, [r7, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	ldr		r2, [r1, #0x0]
	str		r5, [sp, #0x0]
	ldr		r4, _08028bdc
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08028be0
	ldr		r2, [r1, #0x0]
	str		r5, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08028be4
	ldr		r2, [r1, #0x0]
	str		r5, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [sp, #0x14]
	strh	r5, [r0, #0x0]
	mov		r2, #0x3
	mov		r1, r10
	strh	r2, [r1, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	mov		r0, r9
	strh	r2, [r0, #0x0]
	b		_08028c26

_08028bdc:	.4byte 0xFFFF8001
_08028be0:	.4byte 0x0200B90C
_08028be4:	.4byte 0x0200B8FC

_08028be8:
	ldr		r0, [r7, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	ldr		r2, [r1, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	ldr		r5, _08028c98
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08028c9c
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [sp, #0x14]
	strh	r4, [r0, #0x0]
	mov		r0, #0x4
	mov		r1, r10
	strh	r0, [r1, #0x0]
	mov		r0, #0x2
_08028c22:
	mov		r2, r9
	strh	r0, [r2, #0x0]
_08028c26:
	ldr		r4, _08028ca0
	ldr		r0, [r4, #0x0]
	ldr		r3, _08028c98
	str		r3, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	bl		sub_08018668
	ldr		r0, [r4, #0x0]
	mov		r1, r9
	mov		r2, #0x0
	ldrsh	r3, [r1, r2]
	str		r3, [sp, #0x0]
	mov		r1, #0x1
	str		r1, [sp, #0x4]
	mov		r1, #0x0
	mov		r2, #0x1
	bl		sub_08018f6c
	ldr		r0, [r4, #0x0]
	bl		sub_08018988
	ldr		r7, _08028ca4
_08028c58:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r5, [r0, r2]
	cmp		r5, r7
	bne		_08028c84
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08028c58
	mov		r0, #0x70
	bl		sub_08016b44
	mov		r5, #0x1
	neg		r5, r5
_08028c84:
	ldr		r0, [r4, #0x0]
	bl		sub_08018fcc
	mov		r0, #0x1
	neg		r0, r0
	cmp		r5, r0
	bne		_08028ca8
	mov		r5, #0x0
	b		_08028cb2

.incbin "base.gba", 0x28C96, 0x2

_08028c98:	.4byte 0xFFFF8001
_08028c9c:	.4byte 0x0200B8BC
_08028ca0:	.4byte 0x0200B7A4
_08028ca4:	.4byte 0xFFFF8080

_08028ca8:
	lsl		r0, r5, #0x1
	ldr		r1, [sp, #0x14]
	add		r0, r1, r0
	mov		r2, #0x0
	ldrsh	r5, [r0, r2]
_08028cb2:
	cmp		r5, #0x4
	bhi		_08028cd8
	lsl		r0, r5, #0x2
	ldr		r1, _08028cc0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08028cc0:	.4byte 0x08028cc4
_08028cc4:	.4byte 0x08028CD8

.incbin "base.gba", 0x28CC8, 0x10

_08028cd8:
	ldr		r1, [r6, #0x74]
	cmp		r1, #0x0
	beq		_08028ce2
	mov		r0, #0x0
	str		r0, [r1, #0x40]
_08028ce2:
	mov		r3, #0x0
	ldr		r1, [sp, #0xC]
	mov		r2, #0x2
_08028ce8:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08028cf0
	str		r3, [r0, #0x40]
_08028cf0:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08028ce8
	mov		r3, #0x0
	ldr		r1, [sp, #0x10]
	mov		r2, #0x4
_08028cfe:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08028d06
	str		r3, [r0, #0x40]
_08028d06:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08028cfe
	b		_08028dd0
_08028d10:
.incbin "base.gba", 0x28D10, 0x4
.incbin "base.gba", 0x28D14, 0x4
.incbin "base.gba", 0x28D18, 0x4
.incbin "base.gba", 0x28D1C, 0x4

.incbin "base.gba", 0x28D20, 0x4
	thumb_func_end sub_08028a5c


.incbin "base.gba", 0x28D24, 0xAC

_08028dd0:

.incbin "base.gba", 0x28DD0, 0x10
	thumb_func_start sub_08028de0
sub_08028de0:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r6, r0, #0x0
	ldr		r1, [r6, #0x74]
	cmp		r1, #0x0
	beq		_08028df0
	mov		r0, #0x1
	str		r0, [r1, #0x40]
_08028df0:
	add		r4, r6, #0x0
	add		r4, #0x84
	add		r7, r6, #0x0
	add		r7, #0x68
	mov		r3, #0x1
	add		r1, r6, #0x0
	add		r1, #0x78
	mov		r2, #0x2
_08028e00:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08028e08
	str		r3, [r0, #0x40]
_08028e08:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08028e00
	mov		r3, #0x1
	add		r1, r4, #0x0
	mov		r2, #0x4
_08028e16:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08028e1e
	str		r3, [r0, #0x40]
_08028e1e:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08028e16
	ldr		r5, _08028e94
	ldr		r0, [r5, #0x0]
	bl		sub_08018fcc
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r0, r7, #0x0
	bl		sub_08018f30
	add		r0, r7, #0x0
	mov		r1, #0x3
	bl		sub_08018e6c
	ldr		r0, [r5, #0x0]
	ldr		r1, _08028e98
	ldr		r2, [r1, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	ldr		r4, _08028e9c
	str		r4, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	str		r4, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	add		r3, r4, #0x0
	bl		sub_08018668
_08028e6e:
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08028e6e
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _08028ea0
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08028e94:	.4byte 0x0200B7A4
_08028e98:	.4byte 0x0200B8B4
_08028e9c:	.4byte 0xFFFF8001
_08028ea0:	.4byte 0xFFFFF000
	thumb_func_end sub_08028de0

	thumb_func_start sub_08028ea4
sub_08028ea4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	ldr		r1, [r7, #0x74]
	cmp		r1, #0x0
	beq		_08028ebc
	mov		r0, #0x1
	str		r0, [r1, #0x40]
_08028ebc:
	add		r4, r7, #0x0
	add		r4, #0x84
	add		r6, r7, #0x0
	add		r6, #0xcc
	mov		r0, #0x68
	add		r0, r0, r7
	mov		r10, r0
	mov		r3, #0x1
	add		r1, r7, #0x0
	add		r1, #0x78
	mov		r2, #0x2
_08028ed2:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08028eda
	str		r3, [r0, #0x40]
_08028eda:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08028ed2
	mov		r3, #0x1
	add		r1, r4, #0x0
	mov		r2, #0x4
_08028ee8:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08028ef0
	str		r3, [r0, #0x40]
_08028ef0:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08028ee8
	mov		r0, #0x19
	bl		sub_08016b44
	ldr		r4, _08028fe8
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808b4f8
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_08028f1e
	ldr		r0, _08028fec
	ldr		r1, _08028ff0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08028f1e:
	ldr		r1, _08028ff4
	add		r0, r4, r1
	bl		sub_08002fd8
	ldr		r0, [r6, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r1, #0x0
	mov		r2, #0x1
	mov		r9, r2
	mov		r8, r1
_08028f38:
	ldr		r0, [r6, #0x0]
	add		r0, #0x5c
	mov		r2, r9
	strb	r2, [r0, #0x0]
	add		r5, r1, #0x1
	mov		r4, #0x1d
_08028f44:
	sub		r4, #0x1
	add		r0, r7, #0x0
	bl		sub_080b7690
	cmp		r4, #0x0
	bge		_08028f44
	ldr		r0, [r6, #0x0]
	add		r0, #0x5c
	mov		r1, r8
	strb	r1, [r0, #0x0]
	mov		r4, #0x1d
_08028f5a:
	sub		r4, #0x1
	add		r0, r7, #0x0
	bl		sub_080b7690
	cmp		r4, #0x0
	bge		_08028f5a
	add		r1, r5, #0x0
	cmp		r1, #0x3
	ble		_08028f38
	ldr		r0, [r6, #0x0]
	add		r0, #0x5c
	mov		r2, #0x0
	mov		r8, r2
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, [r6, #0x0]
	mov		r1, #0x0
	bl		sub_08017d20
	ldr		r5, _08028ff8
	ldr		r0, [r5, #0x0]
	bl		sub_08018fcc
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, r10
	bl		sub_08018f30
	mov		r0, r10
	mov		r1, #0x2
	bl		sub_08018e6c
	ldr		r0, [r5, #0x0]
	ldr		r1, _08028ffc
	ldr		r2, [r1, #0x0]
	mov		r1, r8
	str		r1, [sp, #0x0]
	ldr		r4, _08029000
	str		r4, [sp, #0x4]
	str		r1, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	str		r4, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	add		r3, r4, #0x0
	bl		sub_08018668
_08028fc6:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08028fc6
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08028fe8:	.4byte 0x02004968
_08028fec:	.4byte 0x080d2b8c @ k_koyano/GameWatch/GameWatchA.cpp
_08028ff0:	.4byte 0x0000047B
_08028ff4:	.4byte 0xFFFFC244
_08028ff8:	.4byte 0x0200B7A4
_08028ffc:	.4byte 0x0200B8B0
_08029000:	.4byte 0xFFFF8001
	thumb_func_end sub_08028ea4

	thumb_func_start sub_08029004
sub_08029004:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_08027cb8
	add		r0, r4, #0x0
	add		r0, #0x6c
	bl		sub_0801deb0
	ldr		r0, _08029064
	str		r0, [r4, #0xc]
	mov		r0, #0x0
	str		r0, [r4, #0x70]
	ldr		r5, _08029068
	add		r0, r5, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08029030
	add		r0, r5, #0x0
	bl		sub_0800223c
	mov		r0, #0x1
_08029030:
	str		r0, [r4, #0x64]
	mov		r0, #0x0
	str		r0, [r4, #0x74]
	add		r3, r4, #0x0
	add		r3, #0x84
	add		r1, r4, #0x0
	add		r1, #0x78
	mov		r2, #0x0
	add		r0, r4, #0x0
	add		r0, #0x80
_08029044:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_08029044
	add		r1, r3, #0x0
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0x10
_08029054:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_08029054
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08029064:	.4byte 0x080e1134
_08029068:	.4byte 0x00000908
	thumb_func_end sub_08029004

	thumb_func_start sub_0802906c
sub_0802906c:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0802907c
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0802907c:	.4byte 0xFFFF800C
	thumb_func_end sub_0802906c

	thumb_func_start sub_08029080
sub_08029080:
	push	{ r4, lr }
	add		r4, r0, #0x0
	b		_08029088
_08029086:
	add		r0, r4, #0x0
_08029088:
	bl		sub_080b7690
	ldr		r0, [r4, #0x40]
	cmp		r0, #0x0
	bne		_08029086
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08029080

	thumb_func_start sub_08029098
sub_08029098:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080290c4
	str		r0, [r5, #0xc]
	ldr		r0, [r5, #0x48]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080290be
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080290be:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080290c4:	.4byte 0x080e115c

.incbin "base.gba", 0x290C8, 0x14C
	thumb_func_end sub_08029098

	thumb_func_start sub_08029214
sub_08029214:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r6, r0, #0x0
	mov		r0, #0x20
	bl		sub_08016be8
	add		r0, r6, #0x0
	add		r0, #0x68
	mov		r1, #0x2
	bl		sub_08018e6c
	ldr		r7, [r6, #0x64]
	cmp		r7, #0x0
	bne		_0802923a
	b		_08029340
_0802923a:
	add		r4, r6, #0x0
	add		r4, #0x6c
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x2
	bl		sub_0801de54
	add		r5, r4, #0x0
	ldr		r0, _0802927c
	mov		r9, r0
	add		r7, r6, #0x0
	add		r7, #0x40
	mov		r1, #0x50
	add		r1, r1, r6
	mov		r8, r1
	add		r2, r6, #0x0
	add		r2, #0x78
	str		r2, [sp, #0x0]
	add		r3, r6, #0x0
	add		r3, #0x7c
	str		r3, [sp, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x88
	str		r0, [sp, #0x8]
	add		r1, r6, #0x0
	add		r1, #0x8c
	str		r1, [sp, #0xC]
	add		r2, #0x18
	str		r2, [sp, #0x10]
	mov		r3, #0x94
	add		r3, r3, r6
	mov		r10, r3
	b		_0802928e

_0802927c:	.4byte 0x080d2bb4

_08029280:
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
_0802928e:
	add		r0, r5, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08029280
	add		r0, r5, #0x0
	bl		sub_0801ddc4
	ldr		r4, _080292ec
	add		r0, r4, #0x0
	mov		r1, #0x7
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0801dd44
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_0800bcd0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0801dd30
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_0800bcd0
	mov		r3, r9
	ldr		r1, [r3, #0x0]
	add		r1, #0xcd
	ldrb	r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r6, #0x70]
	cmp		r0, #0x0
	bne		_08029394
	mov		r0, #0x1
	str		r0, [r6, #0x70]
	add		r0, r5, #0x0
	bl		sub_0801de20
	ldr		r4, _080292f0
	b		_08029302

.incbin "base.gba", 0x292EA, 0x2

_080292ec:	.4byte 0x0200A26C
_080292f0:	.4byte 0x080d2bb8

_080292f4:
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
_08029302:
	add		r0, r5, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_080292f4
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x6c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08029394
	ldr		r0, _08029338
	ldr		r1, [r0, #0x0]
	ldr		r0, _0802933c
	add		r0, #0xcd
	ldrb	r0, [r0, #0x0]
	add		r1, #0xc9
	strb	r0, [r1, #0x0]
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0xe
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08029394

.incbin "base.gba", 0x29336, 0x2

_08029338:	.4byte 0x030072D4
_0802933c:	.4byte 0x02000BAC

_08029340:
	ldr		r3, _08029560
	ldr		r4, [r3, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x7
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r7, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r7, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r7, [r0, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x40
	mov		r0, #0x50
	add		r0, r0, r6
	mov		r8, r0
	add		r1, r6, #0x0
	add		r1, #0x78
	str		r1, [sp, #0x0]
	add		r2, r6, #0x0
	add		r2, #0x7c
	str		r2, [sp, #0x4]
	add		r3, r6, #0x0
	add		r3, #0x88
	str		r3, [sp, #0x8]
	add		r0, r6, #0x0
	add		r0, #0x8c
	str		r0, [sp, #0xC]
	add		r1, #0x18
	str		r1, [sp, #0x10]
	mov		r2, #0x94
	add		r2, r2, r6
	mov		r10, r2
_08029394:
	mov		r4, #0x0
	add		r5, r7, #0x0
_08029398:
	ldr		r0, _08029564
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	stmia	r5!, { r0 }
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08029398
	mov		r4, #0x0
	mov		r5, r8
_080293ac:
	add		r1, r4, #0x4
	ldr		r0, _08029564
	bl		sub_0800bcd0
	stmia	r5!, { r0 }
	add		r4, #0x1
	cmp		r4, #0x2
	ble		_080293ac
	ldr		r4, _08029564
	add		r0, r4, #0x0
	mov		r1, #0x13
	bl		sub_0800bcd0
	mov		r3, #0xa8
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x11
	bl		sub_0800bcd0
	mov		r7, #0xaa
	lsl		r7, r7, #0x1
	add		r1, r6, r7
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x10
	bl		sub_0800bcd0
	mov		r2, #0xac
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x14
	bl		sub_0800bcd0
	mov		r3, #0xae
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	str		r0, [r1, #0x0]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_08017d20
	add		r0, r4, #0x0
	mov		r1, #0x12
	bl		sub_0800bcd0
	add		r7, #0xc
	add		r1, r6, r7
	str		r0, [r1, #0x0]
	mov		r1, #0x12
	mov		r2, #0x2
	bl		sub_08017d20
	add		r0, r4, #0x0
	mov		r1, #0x15
	bl		sub_0800bcd0
	mov		r1, #0xb2
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	str		r0, [r4, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08017d20
	ldr		r0, _08029568
	mov		r1, #0xc
	bl		sub_0808b4d0
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bne		_08029448
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	strb	r1, [r0, #0x0]
_08029448:
	add		r0, r6, #0x0
	bl		sub_08027cac
	mov		r3, #0x0
	mov		r5, #0x0
_08029452:
	lsl		r2, r3, #0x3
	mov		r8, r2
	add		r4, r2, r3
	lsl		r4, r4, #0x2
	ldr		r0, [sp, #0x0]
	add		r7, r0, r4
	lsl		r0, r3, #0x1
	add		r0, r0, r3
	lsl		r0, r0, #0x2
	ldr		r1, _0802956c
	add		r0, r0, r1
	str		r0, [r7, #0x0]
	add		r1, r3, #0x0
	add		r1, #0xa
	ldr		r0, _08029564
	str		r3, [sp, #0x14]
	bl		sub_0800bcd0
	ldr		r2, [sp, #0x4]
	add		r1, r2, r4
	str		r0, [r1, #0x0]
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
	add		r4, r6, r4
	add		r0, r4, #0x0
	add		r0, #0x80
	strh	r5, [r0, #0x0]
	add		r4, #0x82
	strh	r5, [r4, #0x0]
	mov		r2, #0x0
	ldr		r0, [r7, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	ldr		r3, [sp, #0x14]
	add		r1, r3, #0x1
	mov		r9, r1
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	beq		_080294c2
	str		r7, [sp, #0x18]
	mov		r12, r1
_080294a6:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	add		r2, #0x1
	cmp		r2, #0x5
	bgt		_080294c2
	ldr		r7, [sp, #0x18]
	ldr		r0, [r7, #0x0]
	lsl		r1, r2, #0x1
	add		r1, r1, r0
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp		r0, r12
	bne		_080294a6
_080294c2:
	mov		r0, r8
	add		r1, r0, r3
	lsl		r1, r1, #0x2
	add		r2, r6, r1
	add		r0, r2, #0x0
	add		r0, #0x84
	strh	r5, [r0, #0x0]
	ldr		r3, [sp, #0x8]
	add		r0, r3, r1
	str		r5, [r0, #0x0]
	ldr		r7, [sp, #0xC]
	add		r0, r7, r1
	str		r5, [r0, #0x0]
	ldr		r3, [sp, #0x10]
	add		r0, r3, r1
	str		r5, [r0, #0x0]
	add		r1, r10
	str		r5, [r1, #0x0]
	add		r2, #0x98
	strb	r5, [r2, #0x0]
	mov		r3, r9
	cmp		r3, #0x5
	ble		_08029452
	mov		r7, #0xb4
	lsl		r7, r7, #0x1
	add		r0, r6, r7
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r0, #0xb5
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x5
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_08029cfc
	mov		r1, #0xb7
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	mov		r2, #0xb8
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strh	r4, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802a218
	mov		r3, #0xba
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	str		r4, [r0, #0x0]
	add		r7, #0x10
	add		r0, r6, r7
	str		r4, [r0, #0x0]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x4
	str		r0, [r1, #0x0]
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x36
	bl		sub_08016b70
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08029560:	.4byte 0x080d2bb0
_08029564:	.4byte 0x0200A26C
_08029568:	.4byte 0x02004968
_0802956c:	.4byte 0x0200D4AC
	thumb_func_end sub_08029214

	thumb_func_start sub_08029570
sub_08029570:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r5, r0, #0x0
	ldr		r0, _0802959c
	cmp		r1, r0
	bne		_08029586
	b		_080299a6
_08029586:
	cmp		r1, r0
	bgt		_080295a0
	sub		r0, #0x5
	cmp		r1, r0
	bne		_08029592
	b		_080299d2
_08029592:
	add		r0, #0x4
	cmp		r1, r0
	bne		_0802959a
	b		_080296aa
_0802959a:
	b		_08029a74

_0802959c:	.4byte 0xFFFF8005

_080295a0:
	ldr		r0, _080295b4
	cmp		r1, r0
	beq		_0802963a
	cmp		r1, r0
	bgt		_080295bc
	ldr		r0, _080295b8
	cmp		r1, r0
	bne		_080295b2
	b		_080299bc
_080295b2:
	b		_08029a74

_080295b4:	.4byte 0xFFFFF000
_080295b8:	.4byte 0xFFFF8006

_080295bc:
	cmp		r1, #0x0
	beq		_080295c2
	b		_08029a74
_080295c2:
	add		r0, r5, #0x0
	bl		sub_08029214
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001090
	mov		r6, #0x10
	ldr		r0, _0802975c
	mov		r10, r0
	ldr		r1, _08029760
	mov		r9, r1
	ldr		r2, _08029764
	mov		r8, r2
	ldr		r7, _08029768
	mov		r4, #0xf8
	lsl		r4, r4, #0x1
_080295e6:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_080295ee
	add		r0, #0xf
_080295ee:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	ldr		r1, [r5, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	sub		r4, #0x1f
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_080295e6
	mov		r0, #0x1
	str		r0, [r5, #0x74]
	add		r4, r5, #0x0
	add		r4, #0x6c
	add		r0, r4, #0x0
	bl		sub_0801dd14
	add		r0, r4, #0x0
	bl		sub_0801dd74
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0802976c
	mov		r3, #0x0
	bl		sub_080b7724
_0802963a:
	mov		r0, #0x0
	str		r0, [r5, #0x74]
	add		r0, r5, #0x0
	add		r0, #0x6c
	bl		sub_0801dcf8
	ldr		r0, _0802975c
	mov		r10, r0
	ldr		r1, _08029760
	mov		r9, r1
	ldr		r2, _08029764
	mov		r8, r2
	ldr		r7, _08029768
	mov		r6, #0x0
	mov		r4, #0x10
_08029658:
	neg		r0, r6
	cmp		r0, #0x0
	bge		_08029660
	add		r0, #0xf
_08029660:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	ldr		r1, [r5, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r6, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08029658
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	add		r0, r5, #0x0
	add		r0, #0x68
	bl		sub_08018f30
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_080296aa:
	add		r0, r5, #0x0
	add		r0, #0x7c
	str		r0, [sp, #0x10]
	mov		r1, #0xb8
	lsl		r1, r1, #0x1
	add		r1, r1, r5
	mov		r8, r1
	mov		r2, #0xb6
	lsl		r2, r2, #0x1
	add		r2, r2, r5
	mov		r10, r2
	mov		r3, #0xb7
	lsl		r3, r3, #0x1
	add		r3, r3, r5
	mov		r9, r3
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r1, r5, r1
	str		r1, [sp, #0x0]
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r2, r5, r2
	str		r2, [sp, #0x4]
	mov		r3, #0xb5
	lsl		r3, r3, #0x1
	add		r3, r5, r3
	str		r3, [sp, #0x8]
	add		r0, #0x10
	add		r0, r5, r0
	str		r0, [sp, #0xc]
_080296ec:
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0802979e
	mov		r3, #0xb5
	lsl		r3, r3, #0x1
	add		r4, r5, r3
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	ble		_0802979e
	mov		r0, #0x71
	bl		sub_08016b44
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	asr		r6, r0, #0x10
	cmp		r6, #0x0
	bne		_08029798
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	add		r4, r5, r2
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	cmp		r0, #0x1
	beq		_08029798
	mov		r0, #0x72
	bl		sub_08016b44
	mov		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r1, r8
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x2
	beq		_0802977c
	cmp		r0, #0x2
	bgt		_08029770
	cmp		r0, #0x1
	beq		_08029776
	b		_0802978a

.incbin "base.gba", 0x2975A, 0x2

_0802975c:	.4byte 0x0200EB24
_08029760:	.4byte 0x0200EB1E
_08029764:	.4byte 0x0200EB20
_08029768:	.4byte 0x0200EB22
_0802976c:	.4byte 0xFFFF8004

_08029770:
	cmp		r0, #0x3
	beq		_08029784
	b		_0802978a
_08029776:
	mov		r3, r10
	strh	r6, [r3, #0x0]
	b		_0802978a
_0802977c:
	mov		r1, #0x5
	mov		r0, r10
	strh	r1, [r0, #0x0]
	b		_0802978a
_08029784:
	mov		r3, #0xa
	mov		r2, r10
	strh	r3, [r2, #0x0]
_0802978a:
	mov		r1, r8
	ldrh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	add		r0, r5, #0x0
	bl		sub_0802a218
_08029798:
	add		r0, r5, #0x0
	bl		sub_08029cfc
_0802979e:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0802989c
	mov		r3, #0xb5
	lsl		r3, r3, #0x1
	add		r4, r5, r3
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x4
	bgt		_0802989c
	mov		r0, #0x71
	bl		sub_08016b44
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_08029cfc
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x5
	bne		_0802989c
	mov		r3, #0x0
	ldrsh	r0, [r7, r3]
	cmp		r0, #0x1
	bne		_0802989c
	mov		r0, #0x73
	bl		sub_08016b44
	mov		r4, #0x1d
_080297e2:
	sub		r4, #0x1
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	cmp		r4, #0x0
	bge		_080297e2
	ldr		r3, [sp, #0x0]
	ldr		r0, [r3, #0x0]
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r4, #0x3b
_08029804:
	sub		r4, #0x1
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	cmp		r4, #0x0
	bge		_08029804
	ldr		r1, [r5, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_08027c64
	mov		r0, #0xb8
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x3
	bne		_0802984a
	mov		r2, #0x0
	strh	r2, [r4, #0x0]
	mov		r3, r9
	strh	r2, [r3, #0x0]
	add		r0, r5, #0x0
	bl		sub_0802a218
_0802984a:
	ldr		r0, [r5, #0x5c]
	ldr		r1, _0802998c
	cmp		r0, r1
	bne		_0802985e
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08029990
	mov		r3, #0x0
	bl		sub_080b7724
_0802985e:
	ldr		r2, [sp, #0x0]
	ldr		r0, [r2, #0x0]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r3, [sp, #0x4]
	ldr		r0, [r3, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	add		r1, #0x12
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r4, r5, r3
	ldr		r0, [r5, #0x5c]
	mov		r1, #0x14
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	cmp		r0, #0x3
	ble		_08029892
	mov		r0, #0x3
	str		r0, [r4, #0x0]
_08029892:
	mov		r1, #0x0
	strh	r1, [r7, #0x0]
	add		r0, r5, #0x0
	bl		sub_08029cfc
_0802989c:
	ldr		r2, [sp, #0x8]
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	add		r0, r2, #0x0
	add		r0, #0x80
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x2
	bne		_08029998
	add		r0, r2, #0x0
	add		r0, #0x84
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	sub		r0, #0x2
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	sub		r0, #0x1
	cmp		r1, r0
	bne		_08029998
	mov		r4, #0x1d
_080298cc:
	sub		r4, #0x1
	ldr		r1, [r5, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	cmp		r4, #0x0
	bge		_080298cc
	mov		r0, #0x74
	bl		sub_08016b44
	mov		r0, #0x2
	strh	r0, [r7, #0x0]
	add		r0, r5, #0x0
	bl		sub_08029cfc
	mov		r4, #0x3b
_080298f2:
	sub		r4, #0x1
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	cmp		r4, #0x0
	bge		_080298f2
	ldr		r1, [r5, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_08027bcc
	ldr		r0, [r5, #0x60]
	cmp		r0, #0x0
	bne		_0802992e
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08029994
	mov		r3, #0x0
	bl		sub_080b7724
_0802992e:
	mov		r6, #0x0
	mov		r4, #0x0
	ldr		r2, [sp, #0x10]
	add		r1, r5, #0x0
	add		r1, #0x80
	mov		r3, #0x5
_0802993a:
	strh	r4, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, #0x5c
	strb	r6, [r0, #0x0]
	add		r2, #0x24
	add		r1, #0x24
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0802993a
	mov		r6, #0x0
	ldr		r0, [sp, #0xc]
	str		r6, [r0, #0x0]
	strh	r6, [r7, #0x0]
	mov		r2, #0x5
	ldr		r1, [sp, #0x8]
	strh	r2, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_08029cfc
	mov		r3, #0xb8
	lsl		r3, r3, #0x1
	add		r4, r5, r3
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x3
	bne		_0802997a
	strh	r6, [r4, #0x0]
	mov		r2, r9
	strh	r6, [r2, #0x0]
	add		r0, r5, #0x0
	bl		sub_0802a218
_0802997a:
	ldr		r3, [sp, #0x4]
	ldr		r0, [r3, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	add		r1, #0x12
	mov		r2, #0x2
	bl		sub_08017d20
	b		_080296ec

_0802998c:	.4byte 0x0000270F
_08029990:	.4byte 0xFFFF8006
_08029994:	.4byte 0xFFFF8005

_08029998:
	add		r0, r5, #0x0
	bl		sub_08029a84
	add		r0, r5, #0x0
	bl		sub_08029c20
	b		_080296ec
_080299a6:
	mov		r0, #0x0
	str		r0, [r5, #0x74]
	add		r0, r5, #0x0
	bl		sub_0802a040
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _080299dc
	mov		r3, #0x0
	bl		sub_080b7724
_080299bc:
	mov		r0, #0x0
	str		r0, [r5, #0x74]
	add		r0, r5, #0x0
	bl		sub_0802a0c8
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _080299dc
	mov		r3, #0x0
	bl		sub_080b7724
_080299d2:
	mov		r0, #0x0
	str		r0, [r5, #0x74]
	add		r4, r5, #0x0
	add		r4, #0x6c
	b		_080299ee

_080299dc:	.4byte 0xFFFFF000

_080299e0:
	ldr		r1, [r5, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
_080299ee:
	add		r0, r4, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_080299e0
	ldr		r0, _08029a60
	mov		r10, r0
	ldr		r1, _08029a64
	mov		r9, r1
	ldr		r2, _08029a68
	mov		r8, r2
	ldr		r7, _08029a6c
	mov		r6, #0x0
	mov		r4, #0x10
_08029a0a:
	neg		r0, r6
	cmp		r0, #0x0
	bge		_08029a12
	add		r0, #0xf
_08029a12:
	asr		r0, r0, #0x4
	strh	r0, [r7, #0x0]
	mov		r3, r8
	strh	r0, [r3, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	ldr		r1, [r5, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r6, #0x1f
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08029a0a
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	mov		r0, #0x1
	bl		sub_08016b58
	ldr		r0, _08029a70
	bl		sub_08002268
_08029a54:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_08029a54

.incbin "base.gba", 0x29A5E, 0x2

_08029a60:	.4byte 0x0200EB24
_08029a64:	.4byte 0x0200EB1E
_08029a68:	.4byte 0x0200EB20
_08029a6c:	.4byte 0x0200EB22
_08029a70:	.4byte 0x00000835

_08029a74:
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08029570

	thumb_func_start sub_08029a84
sub_08029a84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x34
	mov		r8, r0
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x3b
	bgt		_08029aa4
	b		_08029c08
_08029aa4:
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r3, _08029c18
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x3
	add		r0, r3, #0x4
	add		r0, r1, r0
	add		r1, r1, r3
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r2, r2, r0
	str		r2, [sp, #0x0]
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r8
	mov		r1, #0xbe
	lsl		r1, r1, #0x1
	add		r1, r8
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	blt		_08029ad8
	b		_08029c08
_08029ad8:
	ldr		r0, _08029c1c
	mov		r10, r0
	mov		r1, r8
	add		r1, #0xc8
	str		r1, [sp, #0x8]
	mov		r2, r8
	add		r2, #0xa4
	str		r2, [sp, #0xC]
	mov		r0, #0x9a
	lsl		r0, r0, #0x1
	add		r0, r8
	str		r0, [sp, #0x10]
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r1, r8
	str		r1, [sp, #0x14]
	sub		r2, #0x1c
	str		r2, [sp, #0x18]
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r3, r8
	str		r3, [sp, #0x1C]
	mov		r0, r8
	add		r0, #0x8c
	str		r0, [sp, #0x20]
	mov		r1, r8
	add		r1, #0x90
	str		r1, [sp, #0x24]
	add		r2, #0xc
	str		r2, [sp, #0x28]
	mov		r3, r8
	add		r3, #0x7c
	str		r3, [sp, #0x2C]
	sub		r0, #0x14
	str		r0, [sp, #0x30]
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r1, r8
	mov		r9, r1
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r2, r8
	str		r2, [sp, #0x4]
_08029b2e:
	mov		r0, r10
	mov		r1, #0x6
	bl		sub_080b63dc
	add		r1, r0, #0x0
	cmp		r1, #0x1
	bne		_08029b46
	ldr		r3, [sp, #0x8]
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp		r0, #0x0
	bne		_08029bfc
_08029b46:
	cmp		r1, #0x2
	bne		_08029b54
	ldr		r3, [sp, #0xC]
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp		r0, #0x0
	bne		_08029bfc
_08029b54:
	cmp		r1, #0x4
	bne		_08029b62
	ldr		r3, [sp, #0x10]
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp		r0, #0x0
	bne		_08029bfc
_08029b62:
	cmp		r1, #0x5
	bne		_08029b70
	ldr		r3, [sp, #0x14]
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp		r0, #0x0
	bne		_08029bfc
_08029b70:
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r6, r0, #0x2
	mov		r3, r8
	add		r7, r3, r6
	add		r0, r7, #0x0
	add		r0, #0x80
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	cmp		r4, #0x0
	bne		_08029bfc
	mov		r2, #0x1
	strh	r2, [r0, #0x0]
	add		r5, r7, #0x0
	add		r5, #0x84
	strh	r4, [r5, #0x0]
	mov		r0, r10
	ldr		r1, [sp, #0x0]
	bl		sub_080b63dc
	ldr		r3, [sp, #0x18]
	add		r2, r3, r6
	ldr		r3, [sp, #0x1C]
	ldr		r1, [r3, #0x0]
	lsl		r1, r1, #0x3
	ldr		r3, _08029c18
	add		r1, r1, r3
	ldr		r1, [r1, #0x0]
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	ldr		r1, [sp, #0x20]
	add		r0, r1, r6
	str		r4, [r0, #0x0]
	ldr		r2, [sp, #0x24]
	add		r0, r2, r6
	mov		r3, #0xa0
	lsl		r3, r3, #0xd
	str		r3, [r0, #0x0]
	ldr		r1, [sp, #0x28]
	add		r0, r1, r6
	mov		r2, #0xf0
	lsl		r2, r2, #0xe
	str		r2, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x98
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
	ldr		r0, [sp, #0x2C]
	add		r4, r0, r6
	ldr		r0, [r4, #0x0]
	ldr		r1, [sp, #0x30]
	add		r2, r1, r6
	mov		r3, #0x0
	ldrsh	r1, [r5, r3]
	ldr		r2, [r2, #0x0]
	lsl		r1, r1, #0x1
	add		r1, r1, r2
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r3, #0x1
	strb	r3, [r0, #0x0]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_08029bfc:
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	ldr		r3, [sp, #0x4]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	blt		_08029b2e
_08029c08:
	add		sp, #0x34
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08029c18:	.4byte 0x0200D4F4
_08029c1c:	.4byte 0x0200BDD4
	thumb_func_end sub_08029a84

	thumb_func_start sub_08029c20
sub_08029c20:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r8, r0
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r8
	mov		r9, r0
	mov		r7, r8
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	mov		r4, r8
	add		r4, #0x7c
	mov		r6, r8
	add		r6, #0x84
	mov		r2, #0x5
	mov		r10, r2
_08029c48:
	mov		r5, #0x4
	ldrsh	r0, [r4, r5]
	cmp		r0, #0x0
	beq		_08029cd2
	ldr		r0, [r4, #0x10]
	ldr		r1, [r4, #0xc]
	add		r1, r0, r1
	str		r1, [r4, #0x10]
	ldrb	r0, [r4, #0x1c]
	mov		r5, r8
	add		r5, #0x8c
	cmp		r0, #0x0
	bne		_08029c94
	ldr		r0, [r4, #0x14]
	cmp		r1, r0
	blt		_08029c94
	mov		r0, #0x1
	strb	r0, [r4, #0x1c]
	mov		r2, #0x8
	ldrsh	r1, [r4, r2]
	mov		r2, #0x6
	ldrsh	r0, [r4, r2]
	sub		r0, #0x1
	cmp		r1, r0
	bne		_08029c7e
	mov		r0, #0x2
	strh	r0, [r4, #0x4]
_08029c7e:
	ldr		r0, [r4, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r6, r2]
	ldr		r2, [r7, #0x78]
	lsl		r1, r1, #0x1
	add		r1, r1, r2
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	mov		r2, #0x2
	bl		sub_08017d20
_08029c94:
	ldr		r0, [sp, #0x0]
	add		r2, r5, r0
	ldr		r1, [r2, #0x0]
	ldr		r0, [r4, #0x18]
	cmp		r1, r0
	blt		_08029cc2
	mov		r3, #0x0
	str		r3, [r2, #0x0]
	strb	r3, [r4, #0x1c]
	ldrh	r0, [r4, #0x8]
	add		r0, #0x1
	mov		r2, #0x0
	strh	r0, [r4, #0x8]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r5, #0x6
	ldrsh	r1, [r4, r5]
	cmp		r0, r1
	bne		_08029cc2
	strh	r3, [r4, #0x4]
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	strb	r2, [r0, #0x0]
_08029cc2:
	mov		r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	bne		_08029cd2
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	sub		r0, #0x1
	str		r0, [r2, #0x0]
_08029cd2:
	add		r7, #0x24
	ldr		r5, [sp, #0x0]
	add		r5, #0x24
	str		r5, [sp, #0x0]
	add		r4, #0x24
	add		r6, #0x24
	mov		r0, #0x1
	neg		r0, r0
	add		r10, r0
	mov		r1, r10
	cmp		r1, #0x0
	bge		_08029c48
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x29CFA, 0x2
	thumb_func_end sub_08029c20

	thumb_func_start sub_08029cfc
sub_08029cfc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x2
	bne		_08029d20
	mov		r3, #0xa8
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x6
	mov		r2, #0x2
	bl		sub_08017d20
	b		_08029d38
_08029d20:
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0xb5
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	mov		r2, #0x2
	bl		sub_08017d20
_08029d38:
	mov		r0, #0xb5
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, #0x0
	beq		_08029d78
	mov		r3, #0xb4
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r1, #0x0
	ldrsh	r6, [r0, r1]
	cmp		r6, #0x1
	bne		_08029d78
	sub		r3, #0x14
	add		r4, r5, r3
	ldr		r0, [r4, #0x0]
	add		r3, #0x18
	add		r1, r5, r3
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	add		r1, r1, r2
	sub		r1, #0x1
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	strb	r6, [r0, #0x0]
	b		_08029d86
_08029d78:
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_08029d86:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08029cfc

	thumb_func_start sub_08029d8c
sub_08029d8c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	ldr		r5, _08029e50
	ldr		r7, [r5, #0x0]
	ldr		r0, [r7, #0x0]
	bl		sub_08018fcc
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r4, r6, #0x0
	add		r4, #0x68
	add		r0, r4, #0x0
	bl		sub_08018f30
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_08018e6c
	ldr		r0, [r6, #0x64]
	mov		r8, r0
	mov		r9, r5
	cmp		r0, #0x1
	bne		_08029e68
	ldr		r0, [r7, #0x0]
	ldr		r1, _08029e54
	ldr		r2, [r1, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	ldr		r5, _08029e58
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08029e5c
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08029e60
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08029e64
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	mov		r2, #0xc3
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r1, r6, r2
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
	add		r2, #0x4
	add		r1, r6, r2
	mov		r0, #0x4
	b		_08029eae

.incbin "base.gba", 0x29E4E, 0x2

_08029e50:	.4byte 0x080d2bbc
_08029e54:	.4byte 0x0200B900
_08029e58:	.4byte 0xFFFF8001
_08029e5c:	.4byte 0x0200B914
_08029e60:	.4byte 0x0200B90C
_08029e64:	.4byte 0x0200B8FC

_08029e68:
	ldr		r0, [r7, #0x0]
	ldr		r1, _08029f30
	ldr		r2, [r1, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	ldr		r5, _08029f34
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08029f38
	ldr		r2, [r1, #0x0]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	mov		r2, #0xc3
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x2
_08029eae:
	strh	r0, [r1, #0x0]
	mov		r1, r9
	ldr		r4, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r3, _08029f34
	str		r3, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	bl		sub_08018668
	ldr		r0, [r4, #0x0]
	mov		r2, #0xc6
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	mov		r2, #0x0
	ldrsh	r3, [r1, r2]
	str		r3, [sp, #0x0]
	mov		r1, #0x1
	str		r1, [sp, #0x4]
	mov		r1, #0x0
	mov		r2, #0x1
	bl		sub_08018f6c
	ldr		r0, [r4, #0x0]
	bl		sub_08018988
	add		r5, r4, #0x0
	ldr		r7, _08029f3c
_08029eea:
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r0, [r5, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r4, [r0, r2]
	cmp		r4, r7
	bne		_08029f1e
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08029eea
	mov		r0, #0x70
	bl		sub_08016b44
	mov		r4, #0x1
	neg		r4, r4
_08029f1e:
	ldr		r0, [r5, #0x0]
	bl		sub_08018fcc
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	bne		_08029f40
	mov		r4, #0x0
	b		_08029f4e

_08029f30:	.4byte 0x0200B900
_08029f34:	.4byte 0xFFFF8001
_08029f38:	.4byte 0x0200B8BC
_08029f3c:	.4byte 0xFFFF8080

_08029f40:
	lsl		r1, r4, #0x1
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
_08029f4e:
	cmp		r4, #0x1
	beq		_08029f60
	cmp		r4, #0x1
	ble		_0802a030
	cmp		r4, #0x2
	beq		_08029f74
	cmp		r4, #0x3
	beq		_08029f82
	b		_0802a030
_08029f60:
	mov		r0, #0x91
	lsl		r0, r0, #0x4
	bl		sub_08002268
	ldr		r0, _08029f70
	bl		sub_08002268
	b		_08029f82

_08029f70:	.4byte 0x00000905

_08029f74:
	mov		r0, #0x91
	lsl		r0, r0, #0x4
	bl		sub_08002268
	ldr		r0, _08029fe8
	bl		sub_08002268
_08029f82:
	add		r4, r6, #0x0
	add		r4, #0x6c
	add		r0, r4, #0x0
	bl		sub_0801dcf8
	add		r7, r4, #0x0
	ldr		r2, _08029fec
	mov		r10, r2
	ldr		r0, _08029ff0
	mov		r9, r0
	ldr		r1, _08029ff4
	mov		r8, r1
	mov		r4, #0x0
	mov		r5, #0x10
_08029f9e:
	neg		r0, r4
	cmp		r0, #0x0
	bge		_08029fa6
	add		r0, #0xf
_08029fa6:
	asr		r0, r0, #0x4
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r1, _08029ff8
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r4, #0x1f
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08029f9e
	mov		r0, #0xff
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_08001090
	add		r0, r7, #0x0
	bl		sub_0801de04
	b		_0802a00a

.incbin "base.gba", 0x29FE6, 0x2

_08029fe8:	.4byte 0x00000907
_08029fec:	.4byte 0x0200EB1E
_08029ff0:	.4byte 0x0200EB20
_08029ff4:	.4byte 0x0200EB22
_08029ff8:	.4byte 0x0200EB24

_08029ffc:
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
_0802a00a:
	add		r0, r7, #0x0
	bl		sub_0801dcd4
	cmp		r0, #0x0
	beq		_08029ffc
	mov		r0, #0x1
	bl		sub_08016b58
	ldr		r0, _0802a02c
	bl		sub_08002268
_0802a020:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_0802a020

.incbin "base.gba", 0x2A02A, 0x2

_0802a02c:	.4byte 0x00000835

_0802a030:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08029d8c

	thumb_func_start sub_0802a040
sub_0802a040:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	add		r6, r0, #0x0
	ldr		r5, _0802a0bc
	ldr		r0, [r5, #0x0]
	bl		sub_08018fcc
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r4, r6, #0x0
	add		r4, #0x68
	add		r0, r4, #0x0
	bl		sub_08018f30
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_08018e6c
	ldr		r0, [r5, #0x0]
	ldr		r1, _0802a0c0
	ldr		r2, [r1, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	ldr		r4, _0802a0c4
	str		r4, [sp, #0x4]
	mov		r1, #0x2
	str		r1, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	str		r4, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	add		r3, r4, #0x0
	bl		sub_08018668
_0802a09a:
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0802a09a
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0802a0bc:	.4byte 0x0200B7A4
_0802a0c0:	.4byte 0x0200B8B4
_0802a0c4:	.4byte 0xFFFF8001
	thumb_func_end sub_0802a040

	thumb_func_start sub_0802a0c8
sub_0802a0c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	mov		r0, #0x19
	bl		sub_08016b44
	ldr		r4, _0802a200
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0808b4f8
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0802a0fe
	ldr		r0, _0802a204
	mov		r1, #0xbb
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802a0fe:
	ldr		r1, _0802a208
	add		r0, r4, r1
	bl		sub_08002fd8
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_08017d20
	mov		r1, #0x0
	mov		r0, #0x68
	add		r0, r0, r7
	mov		r8, r0
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r6, r7, r2
	mov		r0, #0x1
	mov		r10, r0
	mov		r9, r1
_0802a12a:
	ldr		r0, [r6, #0x0]
	add		r0, #0x5c
	mov		r2, r10
	strb	r2, [r0, #0x0]
	add		r5, r1, #0x1
	mov		r4, #0x1d
_0802a136:
	sub		r4, #0x1
	ldr		r1, [r7, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	cmp		r4, #0x0
	bge		_0802a136
	ldr		r0, [r6, #0x0]
	add		r0, #0x5c
	mov		r1, r9
	strb	r1, [r0, #0x0]
	mov		r4, #0x1d
_0802a154:
	sub		r4, #0x1
	ldr		r1, [r7, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	cmp		r4, #0x0
	bge		_0802a154
	add		r1, r5, #0x0
	cmp		r1, #0x3
	ble		_0802a12a
	mov		r0, #0xb2
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	ldr		r0, [r2, #0x0]
	add		r0, #0x5c
	mov		r6, #0x0
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08017d20
	ldr		r5, _0802a20c
	ldr		r0, [r5, #0x0]
	bl		sub_08018fcc
	ldr		r1, [r7, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r0, r8
	bl		sub_08018f30
	mov		r0, r8
	mov		r1, #0x2
	bl		sub_08018e6c
	ldr		r0, [r5, #0x0]
	ldr		r1, _0802a210
	ldr		r2, [r1, #0x0]
	str		r6, [sp, #0x0]
	ldr		r4, _0802a214
	str		r4, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r1, #0x1
	mov		r3, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	str		r4, [sp, #0x0]
	mov		r1, #0x22
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0xa
	add		r3, r4, #0x0
	bl		sub_08018668
_0802a1d4:
	ldr		r1, [r7, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0802a1d4
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A1FE, 0x2

_0802a200:	.4byte 0x02004968
_0802a204:	.4byte 0x080d2bc0 @ k_koyano/GameWatch/GameWatchB.cpp
_0802a208:	.4byte 0xFFFFC244
_0802a20c:	.4byte 0x0200B7A4
_0802a210:	.4byte 0x0200B8B0
_0802a214:	.4byte 0xFFFF8001
	thumb_func_end sub_0802a0c8

	thumb_func_start sub_0802a218
sub_0802a218:
	push	{ r4, lr }
	add		r1, r0, #0x0
	mov		r2, #0xb7
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x3
	bne		_0802a238
	mov		r2, #0xac
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x5c
	mov		r1, #0x0
	b		_0802a258
_0802a238:
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r4, r1, r0
	ldr		r0, [r4, #0x0]
	mov		r2, #0xb8
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	add		r1, #0xf
	mov		r2, #0x2
	bl		sub_08017d20
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, #0x1
_0802a258:
	strb	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802a218

	thumb_func_start sub_0802a260
sub_0802a260:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_080b7690
	ldr		r5, [r4, #0x74]
	cmp		r5, #0x1
	bne		_0802a28c
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0802a28c
	mov		r0, #0x70
	bl		sub_08016b44
	mov		r0, #0x0
	str		r0, [r4, #0x74]
	add		r0, r4, #0x0
	bl		sub_08029d8c
	str		r5, [r4, #0x74]
_0802a28c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A292, 0x13A
	thumb_func_end sub_0802a260

	thumb_func_start sub_0802a3cc
sub_0802a3cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	mov		r9, r3
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	mov		r0, r8
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	add		r0, r7, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0802a4b0
	str		r0, [r7, #0x4c]
	ldr		r0, _0802a4b4
	str		r0, [r7, #0xc]
	ldr		r1, _0802a4b8
	add		r5, r7, r1
	mov		r4, #0x90
	lsl		r4, r4, #0x3
	add		r0, r4, #0x0
	bl		sub_0808afb8
	str		r0, [r5, #0x0]
	ldr		r3, _0802a4bc
	add		r5, r7, r3
	add		r0, r4, #0x0
	bl		sub_0808afb8
	str		r0, [r5, #0x0]
	ldr		r1, _0802a4c0
	add		r0, r7, r1
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r3, #0xec
	lsl		r3, r3, #0x6
	add		r1, r7, r3
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _0802a4c4
	add		r0, r7, r1
	mov		r3, r9
	str		r3, [r0, #0x0]
	add		r1, #0x4
	add		r2, r7, r1
	ldr		r3, [sp, #0x0+0x1c]
	str		r3, [r2, #0x0]
	ldr		r3, _0802a4c8
	add		r1, r7, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _0802a4cc
	add		r1, r7, r0
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	ldr		r1, _0802a4d0
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	add		r3, #0x1e
	add		r0, r7, r3
	strh	r4, [r0, #0x0]
	add		r1, #0x10
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	sub		r3, #0x4
	add		r0, r7, r3
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r3, #0xa
	add		r1, r7, r3
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_0802ac24
	ldr		r0, _0802a4d4
	str		r7, [r0, #0x0]
	ldr		r1, _0802a4d8
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	mov		r2, #0x0
	ldr		r5, _0802a4dc
	mov		r4, #0x78
	mov		r3, #0xdf
	add		r1, r7, #0x0
	add		r1, #0x5c
_0802a48c:
	strh	r4, [r1, #0x0]
	sub		r0, r3, r2
	strh	r0, [r1, #0x2]
	add		r1, #0x14
	add		r2, #0x1
	cmp		r2, r5
	ble		_0802a48c
	add		r0, r7, #0x0
	bl		sub_0802a4e0
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2A4AE, 0x2

_0802a4b0:	.4byte 0x080e1244
_0802a4b4:	.4byte 0x080e125c
_0802a4b8:	.4byte 0x00003AEC
_0802a4bc:	.4byte 0x00003AF0
_0802a4c0:	.4byte 0x00003AFC
_0802a4c4:	.4byte 0x00003AD8
_0802a4c8:	.4byte 0x00003AE0
_0802a4cc:	.4byte 0x00003AE4
_0802a4d0:	.4byte 0x00003AE8
_0802a4d4:	.4byte 0x0200D514
_0802a4d8:	.4byte 0x00003AD4
_0802a4dc:	.4byte 0x0000011F
	thumb_func_end sub_0802a3cc

	thumb_func_start sub_0802a4e0
sub_0802a4e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r5, r0, #0x0
	ldr		r1, _0802a5d8
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802a500
	ldr		r2, _0802a5dc
	add		r1, r5, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0802a500:
	mov		r1, #0xe1
	lsl		r1, r1, #0x4
	ldr		r7, _0802a5e0
	add		r0, r5, r7
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	bl		sub_080bbcac
	str		r0, [sp, #0x0]
	mov		r7, #0x0
	mov		r8, r7
	add		r0, r5, #0x0
	add		r0, #0x54
	str		r0, [sp, #0x18]
	ldr		r1, _0802a5e4
	add		r1, r5, r1
	str		r1, [sp, #0x4]
	ldr		r2, _0802a5e8
	add		r2, r5, r2
	str		r2, [sp, #0x8]
	ldr		r7, _0802a5d8
	add		r7, r5, r7
	str		r7, [sp, #0xC]
	ldr		r0, _0802a5ec
	add		r0, r0, r5
	mov		r10, r0
	ldr		r1, _0802a5f0
	add		r1, r5, r1
	str		r1, [sp, #0x10]
	mov		r2, #0xec
	lsl		r2, r2, #0x6
	add		r2, r5, r2
	str		r2, [sp, #0x14]
	ldr		r7, _0802a5dc
	add		r7, r7, r5
	mov		r9, r7
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r5, #0x0
	add		r0, #0x58
	str		r0, [sp, #0x1C]
	ldr		r6, [sp, #0x18]
_0802a556:
	mov		r1, r8
	lsl		r3, r1, #0x2
	ldr		r2, [sp, #0x4]
	ldr		r0, [r2, #0x0]
	str		r0, [r6, #0x0]
	ldr		r7, [sp, #0x8]
	ldr		r0, [r7, #0x0]
	ldr		r1, [sp, #0x1C]
	str		r0, [r1, #0x0]
	ldr		r2, [sp, #0xC]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0802a5a6
	mov		r7, r10
	ldr		r2, [r7, #0x0]
	add		r2, r3, r2
	ldr		r1, [sp, #0x10]
	ldr		r0, [r1, #0x0]
	add		r0, r3, r0
	ldr		r7, [sp, #0x14]
	ldrh	r1, [r7, #0x0]
	ldr		r0, [r0, #0x0]
	mul		r0, r1
	asr		r0, r0, #0x8
	str		r0, [r2, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	add		r0, r3, r0
	ldr		r0, [r0, #0x0]
	mov		r1, #0xf0
	bl		sub_080bbcac
	strh	r0, [r4, #0x2]
	strh	r0, [r4, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r7, r9
	ldr		r0, [r7, #0x0]
	add		r0, r0, r1
	str		r0, [r7, #0x0]
_0802a5a6:
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x4]
	add		r4, #0x14
	ldr		r1, [sp, #0x1C]
	add		r1, #0x14
	str		r1, [sp, #0x1C]
	add		r6, #0x14
	mov		r2, #0x1
	add		r8, r2
	ldr		r7, _0802a5f4
	cmp		r8, r7
	ble		_0802a556
	ldr		r0, _0802a5d8
	add		r1, r5, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r1, _0802a5f8
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802a600
	ldr		r2, _0802a5fc
	add		r1, r5, r2
	b		_0802a604

_0802a5d8:	.4byte 0x00003B04
_0802a5dc:	.4byte 0x00003AF4
_0802a5e0:	.4byte 0x00003AFC
_0802a5e4:	.4byte 0x00003AD8
_0802a5e8:	.4byte 0x00003ADC
_0802a5ec:	.4byte 0x00003AEC
_0802a5f0:	.4byte 0x00003AF0
_0802a5f4:	.4byte 0x0000011F
_0802a5f8:	.4byte 0x00003AD4
_0802a5fc:	.4byte 0x000016D4

_0802a600:
	ldr		r7, _0802a620
	add		r1, r5, r7
_0802a604:
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	ldr		r0, [sp, #0x18]
	bl		sub_080bb5f8
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A61E, 0x2

_0802a620:	.4byte 0x000028D4
	thumb_func_end sub_0802a4e0

	thumb_func_start sub_0802a624
sub_0802a624:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x10
	lsl		r2, r2, #0x10
	cmp		r2, #0x0
	bne		_0802a642
	ldr		r1, _0802a6b0
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
_0802a642:
	ldr		r0, _0802a6b4
	add		r4, r5, r0
	ldrh	r0, [r4, #0x0]
	lsl		r1, r3, #0x10
	asr		r7, r1, #0x10
	add		r0, r7, r0
	strh	r0, [r4, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_0808c3ac
	strh	r0, [r4, #0x0]
	ldr		r3, _0802a6b8
	add		r6, r5, r3
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_0802a6a8
	ldr		r0, _0802a6b0
	add		r4, r5, r0
	ldrh	r0, [r4, #0x0]
	add		r0, r7, r0
	strh	r0, [r4, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_0808c3ac
	strh	r0, [r4, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	ldr		r1, [r6, #0x0]
	bl		sub_0808c5a4
	ldr		r1, _0802a6bc
	add		r2, r5, r1
	ldr		r3, _0802a6c0
	add		r1, r5, r3
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	ldr		r1, [r6, #0x0]
	bl		sub_0808c588
	ldr		r3, _0802a6c4
	add		r2, r5, r3
	add		r3, #0x8
	add		r1, r5, r3
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_0802a6a8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A6AE, 0x2

_0802a6b0:	.4byte 0x00003AFE
_0802a6b4:	.4byte 0x00003AFC
_0802a6b8:	.4byte 0x00003AE8
_0802a6bc:	.4byte 0x00003AD8
_0802a6c0:	.4byte 0x00003AE0
_0802a6c4:	.4byte 0x00003ADC
	thumb_func_end sub_0802a624

	thumb_func_start sub_0802a6c8
sub_0802a6c8:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r0, _0802a72c
	add		r3, r5, r0
	str		r1, [r3, #0x0]
	ldr		r1, _0802a730
	add		r0, r5, r1
	str		r2, [r0, #0x0]
	sub		r1, #0xc
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	sub		r7, r1, r0
	ldr		r1, _0802a734
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	sub		r6, r0, r2
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	mov		r2, #0x8
	bl		sub_0808c118
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x8
	bl		sub_0808c118
	add		r4, r4, r0
	lsl		r4, r4, #0x8
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x0
	bl		sub_0808c5c0
	add		r1, r0, #0x0
	ldr		r2, _0802a738
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	cmp		r7, #0x0
	beq		_0802a740
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	bl		sub_0808c4cc
	ldr		r2, _0802a73c
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	b		_0802a75a

.incbin "base.gba", 0x2A72A, 0x2

_0802a72c:	.4byte 0x00003AE0
_0802a730:	.4byte 0x00003AE4
_0802a734:	.4byte 0x00003ADC
_0802a738:	.4byte 0x00003AE8
_0802a73c:	.4byte 0x00003AFE

_0802a740:
	cmp		r1, #0x0
	beq		_0802a754
	cmp		r6, #0x0
	ble		_0802a750
	mov		r0, #0xe1
	lsl		r0, r0, #0x2
	add		r1, r0, #0x0
	b		_0802a754
_0802a750:
	ldr		r2, _0802a760
	add		r1, r2, #0x0
_0802a754:
	ldr		r2, _0802a764
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
_0802a75a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802a760:	.4byte 0x00000A8C
_0802a764:	.4byte 0x00003AFE
	thumb_func_end sub_0802a6c8

	thumb_func_start sub_0802a768
sub_0802a768:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	mov		r9, r1
	mov		r8, r2
	mov		r10, r3
	mov		r6, #0x0
	ldr		r4, _0802a794
	mov		r5, #0x8f
_0802a780:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, r9
	mov		r3, r8
	bl		sub_0802a8f4
	cmp		r0, #0x0
	beq		_0802a798
	add		r4, r5, #0x0
	b		_0802a79a

_0802a794:	.4byte 0x0000011F

_0802a798:
	add		r6, r5, #0x0
_0802a79a:
	add		r0, r4, r6
	asr		r5, r0, #0x1
	ldr		r0, _0802a7d4
	cmp		r5, r0
	bhi		_0802a7aa
	add		r0, r6, #0x1
	cmp		r0, r4
	blt		_0802a780
_0802a7aa:
	cmp		r5, #0x0
	bne		_0802a7c2
	add		r0, r7, #0x0
	mov		r1, #0x0
	mov		r2, r9
	mov		r3, r8
	bl		sub_0802a8f4
	cmp		r0, #0x0
	beq		_0802a7c2
	mov		r5, #0x1
	neg		r5, r5
_0802a7c2:
	ldr		r1, _0802a7d8
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802a7e0
	ldr		r2, _0802a7dc
	add		r1, r7, r2
	b		_0802a7e4

.incbin "base.gba", 0x2A7D2, 0x2

_0802a7d4:	.4byte 0x0000011F
_0802a7d8:	.4byte 0x00003AD4
_0802a7dc:	.4byte 0x000016D4

_0802a7e0:
	ldr		r3, _0802a81c
	add		r1, r7, r3
_0802a7e4:
	ldr		r0, _0802a820
	cmp		r5, r0
	bhi		_0802a83c
	lsl		r0, r5, #0x4
	add		r1, r0, r1
	mov		r6, #0x0
	ldrsh	r3, [r1, r6]
	add		r4, r3, #0x0
	cmp		r3, #0x0
	bge		_0802a7fa
	neg		r4, r3
_0802a7fa:
	mov		r2, #0x4
	ldrsh	r0, [r1, r2]
	add		r2, r0, #0x0
	cmp		r0, #0x0
	bge		_0802a806
	neg		r2, r0
_0802a806:
	cmp		r4, r2
	ble		_0802a824
	ldr		r1, [r1, #0x8]
	mov		r6, r9
	sub		r1, r6, r1
	add		r0, r3, #0x0
	bl		sub_080bb604
	mov		r1, r10
	strh	r0, [r1, #0x0]
	b		_0802a832

_0802a81c:	.4byte 0x000028D4
_0802a820:	.4byte 0x0000011F

_0802a824:
	ldr		r1, [r1, #0xc]
	mov		r2, r8
	sub		r1, r2, r1
	bl		sub_080bb604
	mov		r3, r10
	strh	r0, [r3, #0x0]
_0802a832:
	add		r0, r5, #0x0
	sub		r0, #0x40
	ldr		r6, [sp, #0x0+0x20]
	strh	r0, [r6, #0x0]
	b		_0802a8e0
_0802a83c:
	cmp		r5, #0x0
	bge		_0802a888
	mov		r0, #0x0
	ldrsh	r3, [r1, r0]
	add		r4, r3, #0x0
	cmp		r3, #0x0
	bge		_0802a84c
	neg		r4, r3
_0802a84c:
	mov		r2, #0x4
	ldrsh	r0, [r1, r2]
	add		r2, r0, #0x0
	cmp		r0, #0x0
	bge		_0802a858
	neg		r2, r0
_0802a858:
	cmp		r4, r2
	ble		_0802a86e
	ldr		r1, [r1, #0x8]
	mov		r6, r9
	sub		r1, r6, r1
	add		r0, r3, #0x0
	bl		sub_080bb604
	mov		r1, r10
	strh	r0, [r1, #0x0]
	b		_0802a87c
_0802a86e:
	ldr		r1, [r1, #0xc]
	mov		r2, r8
	sub		r1, r2, r1
	bl		sub_080bb604
	mov		r3, r10
	strh	r0, [r3, #0x0]
_0802a87c:
	mov		r6, #0x41
	neg		r6, r6
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x0+0x20]
	strh	r0, [r1, #0x0]
	b		_0802a8e0
_0802a888:
	mov		r2, #0xa0
	lsl		r2, r2, #0x4
	add		r0, r1, r2
	mov		r6, #0x0
	ldrsh	r3, [r0, r6]
	add		r4, r3, #0x0
	cmp		r3, #0x0
	bge		_0802a89a
	neg		r4, r3
_0802a89a:
	ldr		r2, _0802a8bc
	add		r0, r1, r2
	mov		r6, #0x0
	ldrsh	r2, [r0, r6]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802a8aa
	neg		r0, r2
_0802a8aa:
	cmp		r4, r0
	ble		_0802a8c4
	ldr		r2, _0802a8c0
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	mov		r6, r9
	sub		r1, r6, r1
	add		r0, r3, #0x0
	b		_0802a8d0

_0802a8bc:	.4byte 0x00000A04
_0802a8c0:	.4byte 0x00000A08

_0802a8c4:
	ldr		r3, _0802a8f0
	add		r0, r1, r3
	ldr		r1, [r0, #0x0]
	mov		r6, r8
	sub		r1, r6, r1
	add		r0, r2, #0x0
_0802a8d0:
	bl		sub_080bb604
	mov		r1, r10
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	sub		r0, #0x40
	ldr		r2, [sp, #0x0+0x20]
	strh	r0, [r2, #0x0]
_0802a8e0:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A8EE, 0x2

_0802a8f0:	.4byte 0x00000A0C
	thumb_func_end sub_0802a768

	thumb_func_start sub_0802a8f4
sub_0802a8f4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r3, #0x0
	ldr		r1, _0802a90c
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802a914
	ldr		r3, _0802a910
	add		r1, r4, r3
	b		_0802a918

_0802a90c:	.4byte 0x00003AD4
_0802a910:	.4byte 0x000016D4

_0802a914:
	ldr		r0, _0802a94c
	add		r1, r4, r0
_0802a918:
	lsl		r0, r5, #0x4
	add		r4, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	beq		_0802a95e
	ldr		r1, [r4, #0x8]
	sub		r1, r2, r1
	bl		sub_080bb604
	add		r2, r0, #0x0
	mov		r3, #0x4
	ldrsh	r1, [r4, r3]
	mul		r2, r1
	ldr		r1, [r4, #0xc]
	add		r2, r1, r2
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	cmp		r1, #0x0
	ble		_0802a950
	mov		r0, #0x0
	cmp		r6, r2
	bge		_0802a980
	mov		r0, #0x1
	b		_0802a980

.incbin "base.gba", 0x2A94A, 0x2

_0802a94c:	.4byte 0x000028D4

_0802a950:
	cmp		r1, #0x0
	bge		_0802a980
	mov		r0, #0x0
	cmp		r6, r2
	ble		_0802a980
	mov		r0, #0x1
	b		_0802a980
_0802a95e:
	mov		r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	ble		_0802a974
	mov		r1, #0x0
	ldr		r0, [r4, #0x8]
	cmp		r0, r2
	bge		_0802a970
	mov		r1, #0x1
_0802a970:
	add		r0, r1, #0x0
	b		_0802a980
_0802a974:
	mov		r1, #0x0
	ldr		r0, [r4, #0x8]
	cmp		r0, r2
	ble		_0802a97e
	mov		r1, #0x1
_0802a97e:
	add		r0, r1, #0x0
_0802a980:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2A986, 0x7A
	thumb_func_end sub_0802a8f4

	thumb_func_start sub_0802aa00
sub_0802aa00:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r3, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r1, r2, #0x10
	ldr		r2, _0802aa20
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802aa28
	ldr		r3, _0802aa24
	add		r2, r4, r3
	b		_0802aa2c

.incbin "base.gba", 0x2AA1E, 0x2

_0802aa20:	.4byte 0x00003AD4
_0802aa24:	.4byte 0x000016D4

_0802aa28:
	ldr		r7, _0802aa6c
	add		r2, r4, r7
_0802aa2c:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0xc
	add		r0, r0, r2
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r2, r0, r1
	mov		r3, #0x81
	lsl		r3, r3, #0x3
	add		r1, r0, r3
	ldr		r3, [r1, #0x0]
	ldr		r4, _0802aa70
	add		r1, r0, r4
	ldr		r4, [r1, #0x0]
	mov		r7, #0x0
	ldrsh	r1, [r2, r7]
	lsl		r2, r5, #0x10
	asr		r2, r2, #0x10
	mul		r1, r2
	add		r3, r3, r1
	ldr		r1, _0802aa74
	add		r0, r0, r1
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	mul		r0, r2
	add		r4, r4, r0
	str		r3, [r6, #0x0]
	ldr		r0, [sp, #0x0+0x14]
	str		r4, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2AA6A, 0x2

_0802aa6c:	.4byte 0x000028D4
_0802aa70:	.4byte 0x0000040C
_0802aa74:	.4byte 0x00000404
	thumb_func_end sub_0802aa00

	thumb_func_start sub_0802aa78
sub_0802aa78:
	push	{ r4, lr }
	ldr		r2, _0802aabc
	add		r3, r0, r2
	mov		r4, #0x0
	ldrsh	r2, [r3, r4]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	mul		r2, r1
	asr		r2, r2, #0x8
	strh	r2, [r3, #0x0]
	ldr		r2, _0802aac0
	add		r3, r0, r2
	mov		r4, #0x0
	ldrsh	r2, [r3, r4]
	mul		r2, r1
	asr		r2, r2, #0x8
	strh	r2, [r3, #0x0]
	ldr		r2, _0802aac4
	add		r3, r0, r2
	mov		r2, #0x1
	str		r2, [r3, #0x0]
	mov		r4, #0xec
	lsl		r4, r4, #0x6
	add		r0, r0, r4
	mov		r2, #0xff
	lsl		r2, r2, #0x8
	add		r1, r1, r2
	ldrh	r4, [r0, #0x0]
	add		r1, r1, r4
	strh	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2AABA, 0x2

_0802aabc:	.4byte 0x00003AF8
_0802aac0:	.4byte 0x00003AFA
_0802aac4:	.4byte 0x00003B04
	thumb_func_end sub_0802aa78

	thumb_func_start sub_0802aac8
sub_0802aac8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x10
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	cmp		r2, #0x1
	bne		_0802aaec
	ldr		r0, _0802aae8
	add		r1, r4, r0
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	ldrh	r2, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	b		_0802aaf2

_0802aae8:	.4byte 0x00003AFC

_0802aaec:
	ldr		r1, _0802ab08
	add		r0, r4, r1
	strh	r3, [r0, #0x0]
_0802aaf2:
	ldr		r2, _0802ab08
	add		r4, r4, r2
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	bl		sub_0808c3ac
	strh	r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2AB06, 0x2

_0802ab08:	.4byte 0x00003AFC
	thumb_func_end sub_0802aac8

	thumb_func_start sub_0802ab0c
sub_0802ab0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r2, #0x0
	mov		r0, #0x0
	mov		r9, r0
	mov		r8, r0
	cmp		r5, #0x0
	beq		_0802ab40
	ldr		r1, _0802ab98
	add		r4, r6, r1
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	add		r1, r5, #0x0
	bl		sub_0808c5a4
	mov		r9, r0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	add		r1, r5, #0x0
	bl		sub_0808c588
	mov		r8, r0
_0802ab40:
	cmp		r7, #0x0
	beq		_0802ab64
	ldr		r0, _0802ab98
	add		r4, r6, r0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	add		r1, r7, #0x0
	bl		sub_0808c588
	mov		r1, r9
	sub		r1, r1, r0
	mov		r9, r1
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	add		r1, r7, #0x0
	bl		sub_0808c5a4
	add		r8, r0
_0802ab64:
	ldr		r0, _0802ab9c
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, r9
	str		r0, [r1, #0x0]
	ldr		r0, _0802aba0
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, r8
	str		r0, [r1, #0x0]
	ldr		r0, _0802aba4
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, r9
	str		r0, [r1, #0x0]
	ldr		r0, _0802aba8
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, r8
	str		r0, [r1, #0x0]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802ab98:	.4byte 0x00003AFC
_0802ab9c:	.4byte 0x00003AE0
_0802aba0:	.4byte 0x00003AE4
_0802aba4:	.4byte 0x00003AD8
_0802aba8:	.4byte 0x00003ADC
	thumb_func_end sub_0802ab0c

	thumb_func_start sub_0802abac
sub_0802abac:
	push	{ r4, r5, r6, lr }
	ldr		r3, _0802abdc
	add		r5, r0, r3
	sub		r3, #0x8
	add		r6, r0, r3
	ldr		r3, [r5, #0x0]
	ldr		r4, [r6, #0x0]
	sub		r3, r3, r4
	add		r3, r3, r1
	str		r3, [r5, #0x0]
	ldr		r3, _0802abe0
	add		r5, r0, r3
	sub		r3, #0x8
	add		r0, r0, r3
	ldr		r3, [r5, #0x0]
	ldr		r4, [r0, #0x0]
	sub		r3, r3, r4
	add		r3, r3, r2
	str		r3, [r5, #0x0]
	str		r1, [r6, #0x0]
	str		r2, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0802abdc:	.4byte 0x00003AE0
_0802abe0:	.4byte 0x00003AE4
	thumb_func_end sub_0802abac

	thumb_func_start sub_0802abe4
sub_0802abe4:
	push	{ r4, lr }
	ldr		r3, _0802ac14
	add		r4, r0, r3
	ldr		r3, [r4, #0x0]
	add		r3, r3, r1
	str		r3, [r4, #0x0]
	ldr		r3, _0802ac18
	add		r4, r0, r3
	ldr		r3, [r4, #0x0]
	add		r3, r3, r2
	str		r3, [r4, #0x0]
	ldr		r3, _0802ac1c
	add		r4, r0, r3
	ldr		r3, [r4, #0x0]
	add		r3, r3, r1
	str		r3, [r4, #0x0]
	ldr		r1, _0802ac20
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r1, r1, r2
	str		r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0802ac14:	.4byte 0x00003AE0
_0802ac18:	.4byte 0x00003AE4
_0802ac1c:	.4byte 0x00003AD8
_0802ac20:	.4byte 0x00003ADC
	thumb_func_end sub_0802abe4

	thumb_func_start sub_0802ac24
sub_0802ac24:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	ldr		r1, _0802ac9c
	add		r0, r4, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r5, #0xe1
	lsl		r5, r5, #0x8
	add		r0, r5, #0x0
	bl		sub_080bbcac
	mov		r8, r0
	ldr		r1, _0802aca0
	add		r0, r4, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r5, #0x0
	bl		sub_080bbcac
	mov		r1, r8
	sub		r7, r0, r1
	mov		r6, #0x0
	ldr		r2, _0802aca4
	add		r2, r2, r4
	mov		r9, r2
	ldr		r0, _0802aca8
	mov		r10, r0
	lsl		r0, r7, #0x6
	neg		r5, r0
_0802ac66:
	add		r0, r5, #0x0
	mov		r1, #0x9f
	bl		sub_080bbcac
	add		r1, r0, #0x0
	add		r1, r8
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	lsl		r4, r6, #0x2
	add		r4, r4, r0
	mov		r0, #0xe1
	lsl		r0, r0, #0x10
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	add		r5, r5, r7
	add		r6, #0x1
	cmp		r6, r10
	ble		_0802ac66
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2AC9A, 0x2

_0802ac9c:	.4byte 0x00003AF8
_0802aca0:	.4byte 0x00003AFA
_0802aca4:	.4byte 0x00003AF0
_0802aca8:	.4byte 0x0000011F
	thumb_func_end sub_0802ac24

	thumb_func_start sub_0802acac
sub_0802acac:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r4, #0x0
	add		r6, #0x40
	ldr		r0, _0802ad14
	str		r0, [r4, #0x4c]
	ldr		r0, _0802ad18
	str		r0, [r4, #0xc]
	ldr		r0, _0802ad1c
	mov		r7, #0x1
	strb	r7, [r0, #0x1a]
	ldr		r0, [r4, #0x40]
	cmp		r0, #0x0
	beq		_0802acd0
	add		r0, r6, #0x0
	bl		sub_080b5dc4
_0802acd0:
	ldr		r1, _0802ad20
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802acde
	bl		sub_0808afd0
_0802acde:
	ldr		r1, _0802ad24
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802acec
	bl		sub_0808afd0
_0802acec:
	ldr		r1, _0802ad28
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	and		r5, r7
	cmp		r5, #0x0
	beq		_0802ad0e
	add		r0, r4, #0x0
	bl		sub_080b74c8
_0802ad0e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802ad14:	.4byte 0x080e1244
_0802ad18:	.4byte 0x080e125c
_0802ad1c:	.4byte 0x0200CDE4
_0802ad20:	.4byte 0x00003AEC
_0802ad24:	.4byte 0x00003AF0
_0802ad28:	.4byte 0x0200D514

.incbin "base.gba", 0x2AD2C, 0x1A4
	thumb_func_end sub_0802acac

	thumb_func_start sub_0802aed0
sub_0802aed0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0802aefc
	str		r0, [r5, #0xc]
	ldr		r0, [r5, #0x40]
	bl		sub_080b75b0
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0802aef6
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0802aef6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0802aefc:	.4byte 0x080e1284
	thumb_func_end sub_0802aed0

	thumb_func_start sub_0802af00
sub_0802af00:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0802af5c
	str		r0, [r4, #0xc]
	ldr		r5, _0802af60
	add		r0, r5, #0x0
	sub		r0, #0x40
	ldr		r1, _0802af64
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r3, #0x80
	lsl		r3, r3, #0x9
	str		r3, [sp, #0x0]
	mov		r1, #0xf0
	mov		r2, #0x80
	bl		sub_0802a3cc
	add		r1, r0, #0x0
	str		r1, [r4, #0x40]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, [r4, #0x40]
	add		r1, sp, #0x8
	str		r1, [sp, #0x0]
	mov		r1, #0x78
	mov		r2, #0x78
	add		r3, sp, #0x4
	bl		sub_0802aa00
	ldr		r0, [r4, #0x40]
	ldr		r1, [sp, #0x4]
	ldr		r2, [sp, #0x8]
	bl		sub_0802a6c8
	add		r0, r4, #0x0
	add		sp, #0xc
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0802af5c:	.4byte 0x080e1284
_0802af60:	.4byte 0x0200DA40
_0802af64:	.4byte 0x00003B08
	thumb_func_end sub_0802af00

	thumb_func_start sub_0802af68
sub_0802af68:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0802b018
	str		r0, [r7, #0x4c]
	ldr		r0, _0802b01c
	str		r0, [r7, #0xc]
	add		r6, r7, #0x0
	add		r6, #0x54
	add		r0, r6, #0x0
	bl		sub_0808e21c
	add		r0, r7, #0x0
	add		r0, #0xc4
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r1, #0x0
	mov		r8, r1
	str		r1, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0xfa
	bl		sub_0808e03c
	add		r0, r7, #0x0
	add		r0, #0xe8
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x8
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x8
	str		r4, [r0, #0x0]
	add		r0, #0x4
	lsl		r5, r5, #0x10
	asr		r5, r5, #0x8
	str		r5, [r0, #0x0]
	add		r0, #0x4
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xea
	ldr		r0, _0802b020
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xec
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x10
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldr		r4, _0802b024
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802b000
	ldr		r0, _0802b028
	mov		r1, #0x35
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802b000:
	str		r7, [r4, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xe4
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2B016, 0x2

_0802b018:	.4byte 0x080e12ac
_0802b01c:	.4byte 0x080e12c4
_0802b020:	.4byte 0x0000FFFF
_0802b024:	.4byte 0x0200D518
_0802b028:	.4byte 0x080d2be8 @ a_kobayashi/ReadyGo.cpp
	thumb_func_end sub_0802af68

	thumb_func_start sub_0802b02c
sub_0802b02c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r7, r0, #0x0
	str		r2, [sp, #0x0]
	ldr		r0, _0802b058
	cmp		r1, r0
	bne		_0802b044
	b		_0802b2b0
_0802b044:
	cmp		r1, r0
	bgt		_0802b05c
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0802b088
	add		r0, #0x1
	cmp		r1, r0
	bne		_0802b056
	b		_0802b27c
_0802b056:
	b		_0802b300

_0802b058:	.4byte 0xFFFF8002

_0802b05c:
	ldr		r0, _0802b080
	cmp		r1, r0
	bne		_0802b064
	b		_0802b2d8
_0802b064:
	cmp		r1, r0
	bge		_0802b06a
	b		_0802b290
_0802b06a:
	cmp		r1, #0x0
	beq		_0802b070
	b		_0802b300
_0802b070:
	ldr		r0, _0802b084
	add		r1, r7, r0
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
_0802b078:
	add		r0, r7, #0x0
	bl		sub_080b7650
	b		_0802b078

_0802b080:	.4byte 0xFFFF8004
_0802b084:	.4byte 0x00000101

_0802b088:
	mov		r1, #0xfc
	add		r1, r1, r7
	mov		r10, r1
	mov		r2, #0x0
	mov		r9, r2
	mov		r2, #0x0
	strh	r2, [r1, #0x0]
	mov		r3, #0xfe
	add		r3, r3, r7
	mov		r8, r3
	mov		r0, #0x1e
	strh	r0, [r3, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xf0
	mov		r0, #0xf0
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xe8
	strh	r2, [r4, #0x0]
	add		r6, r7, #0x0
	add		r6, #0x54
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	add		r0, r6, #0x0
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	add		r0, #0xbd
	mov		r1, r9
	strb	r1, [r0, #0x0]
	add		r5, r7, #0x0
	add		r5, #0xc4
	add		r0, r5, #0x0
	bl		sub_0808b3d4
	ldr		r2, _0802b274
	add		r0, r7, r2
	mov		r3, r9
	strb	r3, [r0, #0x0]
	mov		r0, r10
	str		r0, [sp, #0x10]
	mov		r1, r8
	str		r1, [sp, #0x14]
	mov		r10, r4
	str		r6, [sp, #0xc]
	str		r5, [sp, #0x8]
	sub		r6, #0x14
	mov		r2, #0xec
	add		r2, r2, r7
	mov		r9, r2
	mov		r3, #0xea
	add		r3, r3, r7
	mov		r8, r3
	add		r4, r0, #0x0
	add		r0, r7, #0x0
	add		r0, #0xf4
	str		r0, [sp, #0x4]
	add		r5, r1, #0x0
_0802b0fe:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	mov		r3, #0x0
	ldrsh	r1, [r5, r3]
	bl		sub_080bbcac
	mov		r1, #0xc0
	sub		r0, r1, r0
	lsl		r0, r0, #0x8
	ldr		r2, [sp, #0x4]
	str		r0, [r2, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7650
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r1, r0
	bne		_0802b0fe
	mov		r0, #0x0
	ldr		r3, [sp, #0x10]
	strh	r0, [r3, #0x0]
	ldr		r4, [sp, #0x10]
_0802b144:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7650
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	ldr		r3, [sp, #0x14]
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp		r1, r0
	bne		_0802b144
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x1
	bne		_0802b1d8
	ldr		r1, _0802b274
	add		r0, r7, r1
	strb	r3, [r0, #0x0]
	mov		r3, sp
	ldrh	r0, [r3, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, #0x1e
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r4, r8
	mov		r5, r10
_0802b186:
	mov		r3, #0x0
	mov		r2, r8
	strh	r3, [r2, #0x0]
	mov		r0, r10
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, [sp, #0xc]
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x8]
	bl		sub_0808b3d4
	mov		r0, #0x99
	bl		sub_0808f690
_0802b1a6:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7650
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	mov		r2, r9
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r1, r0
	bne		_0802b1a6
	ldrh	r0, [r5, #0x0]
	add		r0, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_0802b186
_0802b1d8:
	mov		r0, #0x0
	mov		r1, r8
	strh	r0, [r1, #0x0]
	mov		r0, #0x28
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r0, #0x4
	mov		r3, r10
	strh	r0, [r3, #0x0]
	ldr		r0, [sp, #0xc]
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x8]
	bl		sub_0808b3d4
	ldr		r0, _0802b274
	add		r1, r7, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r4, r8
	ldr		r5, _0802b278
	mov		r1, #0x0
	mov		r10, r1
_0802b20a:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_0802b234
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_0802b234
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_0802b234
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	ldr		r0, [sp, #0x8]
	bl		sub_0808b3d4
_0802b234:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0802b246
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802b250
_0802b246:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0802b250:
	add		r0, r7, #0x0
	bl		sub_080b7650
	mov		r3, r8
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	mov		r2, r9
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r1, r0
	bne		_0802b20a
	mov		r1, r10
	ldr		r0, [sp, #0x10]
	strh	r1, [r0, #0x0]
	mov		r3, #0x1e
	ldr		r2, [sp, #0x14]
	strh	r3, [r2, #0x0]
	b		_0802b30c

_0802b274:	.4byte 0x00000101
_0802b278:	.4byte 0x0200D534

_0802b27c:
	ldr		r0, _0802b28c
	add		r1, r7, r0
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
_0802b284:
	add		r0, r7, #0x0
	bl		sub_080b7650
	b		_0802b284

_0802b28c:	.4byte 0x00000101

_0802b290:
	add		r0, r7, #0x0
	add		r0, #0x54
	add		r2, r7, #0x0
	add		r2, #0xe8
	mov		r1, #0x6
	strh	r1, [r2, #0x0]
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r2, _0802b2ac
	add		r1, r7, r2
	mov		r0, #0x4
	b		_0802b2c8

.incbin "base.gba", 0x2B2AA, 0x2

_0802b2ac:	.4byte 0x00000101

_0802b2b0:
	add		r0, r7, #0x0
	add		r0, #0x54
	add		r2, r7, #0x0
	add		r2, #0xe8
	mov		r1, #0x5
	strh	r1, [r2, #0x0]
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r3, _0802b2d4
	add		r1, r7, r3
	mov		r0, #0x3
_0802b2c8:
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_0802b324
	b		_0802b30c

.incbin "base.gba", 0x2B2D2, 0x2
_0802b2d4:	.4byte 0x00000101

_0802b2d8:
	add		r0, r7, #0x0
	add		r0, #0x54
	add		r2, r7, #0x0
	add		r2, #0xe8
	mov		r4, #0x5
	mov		r1, #0x5
	strh	r1, [r2, #0x0]
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _0802b2fc
	add		r0, r7, r1
	strb	r4, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_0802b438
	b		_0802b30c

.incbin "base.gba", 0x2B2FA, 0x2

_0802b2fc:	.4byte 0x00000101

_0802b300:
	ldr		r0, _0802b31c
	mov		r1, #0xe5
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802b30c:
	ldr		r2, _0802b320
	add		r1, r7, r2
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
_0802b314:
	add		r0, r7, #0x0
	bl		sub_080b7650
	b		_0802b314

_0802b31c:	.4byte 0x080d2be8 @ a_kobayashi/ReadyGo.cpp
_0802b320:	.4byte 0x00000101
	thumb_func_end sub_0802b02c

	thumb_func_start sub_0802b324
sub_0802b324:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	add		r4, #0xfc
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	add		r5, r6, #0x0
	add		r5, #0xfe
	mov		r0, #0x1e
	strh	r0, [r5, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xc4
	bl		sub_0808b3d4
	add		r1, r6, #0x0
	add		r1, #0xf4
	mov		r0, #0xe0
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	add		r7, r6, #0x0
	add		r7, #0xf0
	mov		r9, r4
	mov		r8, r5
	str		r7, [sp, #0x0]
	mov		r0, #0x40
	add		r0, r0, r6
	mov		r10, r0
_0802b364:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r2, #0xa8
	mul		r0, r2
	mov		r3, #0x0
	ldrsh	r1, [r5, r3]
	bl		sub_080bbcac
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	sub		r0, r1, r0
	lsl		r0, r0, #0x8
	str		r0, [r7, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7650
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	cmp		r1, r0
	bne		_0802b364
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	mov		r1, #0x3c
	strh	r1, [r5, #0x0]
	mov		r4, r9
	mov		r5, #0x0
	mov		r7, #0x1e
_0802b3b0:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7650
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r3, r8
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp		r1, r0
	bne		_0802b3b0
	mov		r3, r9
	strh	r5, [r3, #0x0]
	mov		r0, r8
	strh	r7, [r0, #0x0]
	mov		r4, r9
	ldr		r7, [sp, #0x0]
	mov		r5, r8
	mov		r1, #0x78
	mov		r8, r1
_0802b3e6:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	mov		r3, #0xa8
	mul		r0, r3
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	bl		sub_080bbcac
	mov		r3, r8
	sub		r0, r3, r0
	lsl		r0, r0, #0x8
	str		r0, [r7, #0x0]
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7650
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r1, r0
	bne		_0802b3e6
	mov		r0, #0x0
	mov		r3, r9
	strh	r0, [r3, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2B436, 0x2
	thumb_func_end sub_0802b324

	thumb_func_start sub_0802b438
sub_0802b438:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	add		r4, #0xfc
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	add		r5, r6, #0x0
	add		r5, #0xfe
	mov		r0, #0x1e
	strh	r0, [r5, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xc4
	bl		sub_0808b3d4
	add		r1, r6, #0x0
	add		r1, #0xf4
	mov		r0, #0xe0
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	mov		r0, #0xf0
	add		r0, r0, r6
	mov		r9, r0
	mov		r8, r4
	add		r7, r5, #0x0
	mov		r1, r9
	str		r1, [sp, #0x8]
	mov		r2, #0x40
	add		r2, r2, r6
	mov		r10, r2
_0802b47c:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r2, #0xa8
	mul		r0, r2
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	bl		sub_080bbcac
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	sub		r0, r1, r0
	lsl		r0, r0, #0x8
	mov		r2, r9
	str		r0, [r2, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7650
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r1, r0
	bne		_0802b47c
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	mov		r1, #0x3c
	strh	r1, [r5, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xc4
	str		r2, [sp, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x54
	str		r0, [sp, #0x0]
	mov		r4, r8
	mov		r5, #0x0
	mov		r1, #0xa
	mov		r9, r1
_0802b4d8:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7650
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	cmp		r1, r0
	bne		_0802b4d8
	mov		r0, r8
	strh	r5, [r0, #0x0]
	mov		r1, r9
	strh	r1, [r7, #0x0]
	mov		r4, r8
	ldr		r2, [sp, #0x8]
	mov		r9, r2
	add		r5, r7, #0x0
_0802b50a:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	bl		sub_080bbcac
	mov		r1, #0x78
	sub		r0, r1, r0
	lsl		r0, r0, #0x8
	mov		r2, r9
	str		r0, [r2, #0x0]
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7650
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r1, r0
	bne		_0802b50a
	mov		r1, #0x0
	mov		r0, r8
	strh	r1, [r0, #0x0]
	mov		r2, #0xa
	strh	r2, [r7, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x4]
	bl		sub_0808b3d4
	mov		r4, r8
	ldr		r0, [sp, #0x8]
	mov		r9, r0
	add		r5, r7, #0x0
_0802b56a:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r2, #0xa8
	mul		r0, r2
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	bl		sub_080bbcac
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	sub		r0, r1, r0
	lsl		r0, r0, #0x8
	mov		r2, r9
	str		r0, [r2, #0x0]
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7650
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r1, r0
	bne		_0802b56a
	mov		r1, #0x0
	mov		r0, r8
	strh	r1, [r0, #0x0]
	mov		r2, #0x3c
	strh	r2, [r7, #0x0]
	mov		r4, r8
	mov		r5, #0x0
	mov		r0, #0xa
	mov		r9, r0
_0802b5ba:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7650
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	cmp		r1, r0
	bne		_0802b5ba
	mov		r0, r8
	strh	r5, [r0, #0x0]
	mov		r1, r9
	strh	r1, [r7, #0x0]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802b438

	thumb_func_start sub_0802b5f4
sub_0802b5f4:
	push	{ lr }
	add		r0, #0xe8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x3
	bgt		_0802b60a
	cmp		r0, #0x1
	bge		_0802b614
	cmp		r0, #0x0
	beq		_0802b610
	b		_0802b61c
_0802b60a:
	cmp		r0, #0x4
	beq		_0802b618
	b		_0802b61c
_0802b610:
	mov		r0, #0x0
	b		_0802b61e
_0802b614:
	mov		r0, #0x3
	b		_0802b61e
_0802b618:
	mov		r0, #0x2
	b		_0802b61e
_0802b61c:
	mov		r0, #0x6
_0802b61e:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2B622, 0xFA
	thumb_func_end sub_0802b5f4

	thumb_func_start sub_0802b71c
sub_0802b71c:
	push	{ lr }
	add		r3, r1, #0x0
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0802b72c
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0802b72c:	.4byte 0xFFFF8000
	thumb_func_end sub_0802b71c

	thumb_func_start sub_0802b730
sub_0802b730:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, _0802b768
	cmp		r1, r0
	beq		_0802b7ac
	cmp		r1, r0
	bhi		_0802b76c
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0802b79c
	cmp		r1, r0
	bhi		_0802b7a4
	sub		r0, #0x2
	cmp		r1, r0
	bls		_0802b756
	b		_0802b8d0
_0802b756:
	sub		r0, #0x6
	cmp		r1, r0
	bcs		_0802b75e
	b		_0802b8d0
_0802b75e:
	add		r0, r4, #0x0
	bl		sub_0802b8e0
	b		_0802b8d4

.incbin "base.gba", 0x2B766, 0x2

_0802b768:	.4byte 0x0000030B

_0802b76c:
	ldr		r0, _0802b784
	cmp		r1, r0
	beq		_0802b7c4
	cmp		r1, r0
	bhi		_0802b788
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0802b7b4
	add		r0, #0x1
	cmp		r1, r0
	beq		_0802b7bc
	b		_0802b8d0

_0802b784:	.4byte 0x0000030E

_0802b788:
	ldr		r0, _0802b798
	cmp		r1, r0
	beq		_0802b7cc
	add		r0, #0x1
	cmp		r1, r0
	beq		_0802b804
	b		_0802b8d0

.incbin "base.gba", 0x2B796, 0x2

_0802b798:	.4byte 0x00000F82

_0802b79c:
	add		r0, r4, #0x0
	bl		sub_0802bb34
	b		_0802b8d4
_0802b7a4:
	add		r0, r4, #0x0
	bl		sub_0802baf8
	b		_0802b8d4
_0802b7ac:
	add		r0, r4, #0x0
	bl		sub_0802baac
	b		_0802b8d4
_0802b7b4:
	add		r0, r4, #0x0
	bl		sub_0802ba6c
	b		_0802b8d4
_0802b7bc:
	add		r0, r4, #0x0
	bl		sub_0802b9ec
	b		_0802b8d4
_0802b7c4:
	add		r0, r4, #0x0
	bl		sub_0802b9b8
	b		_0802b8d4
_0802b7cc:
	ldr		r2, _0802b7e4
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldr		r0, _0802b7e8
	cmp		r1, r0
	beq		_0802b7f2
	cmp		r1, r0
	bgt		_0802b7ec
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0802b7f2
	b		_0802b8c2

_0802b7e4:	.4byte 0x0200BEFC
_0802b7e8:	.4byte 0x00001201

_0802b7ec:
	ldr		r0, _0802b7fc
	cmp		r1, r0
	bne		_0802b8c2
_0802b7f2:
	ldr		r1, _0802b800
	ldr		r0, [r2, #0x8]
	str		r0, [r1, #0x0]
	b		_0802b8c2

.incbin "base.gba", 0x2B7FA, 0x2

_0802b7fc:	.4byte 0x00001202
_0802b800:	.4byte 0x0200D51C

_0802b804:
	lsl		r0, r3, #0x10
	asr		r3, r0, #0x10
	ldr		r0, _0802b81c
	cmp		r3, r0
	beq		_0802b834
	cmp		r3, r0
	bgt		_0802b820
	sub		r0, #0x1
	cmp		r3, r0
	beq		_0802b854
	b		_0802b8c2

.incbin "base.gba", 0x2B81A, 0x2

_0802b81c:	.4byte 0x00002201

_0802b820:
	ldr		r0, _0802b830
	cmp		r3, r0
	beq		_0802b874
	add		r0, #0x1
	cmp		r3, r0
	beq		_0802b8a0
	b		_0802b8c2

.incbin "base.gba", 0x2B82E, 0x2

_0802b830:	.4byte 0x00002202

_0802b834:
	ldr		r4, _0802b84c
	ldr		r1, _0802b850
	add		r0, r4, r1
	mov		r1, #0xda
	lsl		r1, r1, #0x5
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0803cbf8
	b		_0802b888

_0802b84c:	.4byte 0x0200DB50
_0802b850:	.4byte 0xFFFFFEB0

_0802b854:
	ldr		r4, _0802b86c
	ldr		r1, _0802b870
	add		r0, r4, r1
	mov		r1, #0x7c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0803a3b8
	b		_0802b888

.incbin "base.gba", 0x2B86A, 0x2

_0802b86c:	.4byte 0x0200DB50
_0802b870:	.4byte 0xFFFFFEB0

_0802b874:
	ldr		r4, _0802b894
	ldr		r1, _0802b898
	add		r0, r4, r1
	ldr		r1, _0802b89c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_08033d24
_0802b888:
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	b		_0802b8c2

_0802b894:	.4byte 0x0200DB50
_0802b898:	.4byte 0xFFFFFEB0
_0802b89c:	.4byte 0x0000053C

_0802b8a0:
	ldr		r4, _0802b8c8
	ldr		r1, _0802b8cc
	add		r0, r4, r1
	mov		r1, #0xa0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x8
	mov		r2, #0x0
	bl		sub_080391f4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
_0802b8c2:
	mov		r0, #0x0
	b		_0802b8d8

.incbin "base.gba", 0x2B8C6, 0x2

_0802b8c8:	.4byte 0x0200DB50
_0802b8cc:	.4byte 0xFFFFFEB0

_0802b8d0:
	add		r0, r4, #0x0
	b		_0802b8d8
_0802b8d4:
	lsl		r0, r5, #0x2
	add		r0, r4, r0
_0802b8d8:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2B8DE, 0x2
	thumb_func_end sub_0802b730

	thumb_func_start sub_0802b8e0
sub_0802b8e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	ldr		r2, _0802b8fc
	add		r0, r1, r2
	cmp		r0, #0x6
	bhi		_0802b93c
	lsl		r0, r0, #0x2
	ldr		r1, _0802b900
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2B8FA, 0x2

_0802b8fc:	.4byte 0xfffffcff
_0802b900:	.4byte 0x0802b904
_0802b904:	.4byte 0x0802b928

.incbin "base.gba", 0x2B908, 0x18
	thumb_func_end sub_0802b8e0


.incbin "base.gba", 0x2B920, 0x1C

_0802b93c:

.incbin "base.gba", 0x2B93C, 0x24
_0802b960:	.4byte 0x080d2c04 @ a_kobayashi/scriptcmd2.cpp

_0802b964:

.incbin "base.gba", 0x2B964, 0x4
_0802b968:

.incbin "base.gba", 0x2B968, 0x4
_0802b96c:

.incbin "base.gba", 0x2B96C, 0x3A
_0802b9a6:

.incbin "base.gba", 0x2B9A6, 0xA
_0802b9b0:	.4byte 0x0200DB20
_0802b9b4:	.4byte 0xFFFFFEE0
	thumb_func_start sub_0802b9b8
sub_0802b9b8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _0802b9e4
	ldr		r1, _0802b9e8
	add		r0, r5, r1
	mov		r1, #0x80
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldrb	r1, [r4, #0x4]
	ldrb	r2, [r4, #0x5]
	bl		sub_0802f4f0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0802b9e4:	.4byte 0x0200DB40
_0802b9e8:	.4byte 0xFFFFFEC0
	thumb_func_end sub_0802b9b8

	thumb_func_start sub_0802b9ec
sub_0802b9ec:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldrb	r2, [r5, #0x5]
	cmp		r2, #0x0
	beq		_0802ba00
	cmp		r2, #0x1
	beq		_0802ba04
	add		r7, r2, #0x0
	b		_0802ba06
_0802ba00:
	mov		r7, #0x0
	b		_0802ba06
_0802ba04:
	mov		r7, #0x1
_0802ba06:
	ldrb	r3, [r5, #0x6]
	cmp		r3, #0x1
	beq		_0802ba20
	cmp		r3, #0x1
	bgt		_0802ba16
	cmp		r3, #0x0
	beq		_0802ba1c
	b		_0802ba28
_0802ba16:
	cmp		r3, #0x2
	beq		_0802ba24
	b		_0802ba28
_0802ba1c:
	mov		r6, #0x2
	b		_0802ba2a
_0802ba20:
	mov		r6, #0x1
	b		_0802ba2a
_0802ba24:
	mov		r6, #0x0
	b		_0802ba2a
_0802ba28:
	add		r6, r3, #0x0
_0802ba2a:
	ldr		r4, _0802ba64
	ldr		r1, _0802ba68
	add		r0, r4, r1
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldrb	r1, [r5, #0x4]
	mov		r3, #0x8
	ldrsh	r2, [r5, r3]
	str		r2, [sp, #0x0]
	mov		r3, #0xa
	ldrsh	r2, [r5, r3]
	str		r2, [sp, #0x4]
	add		r2, r7, #0x0
	add		r3, r6, #0x0
	bl		sub_0802f028
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802ba64:	.4byte 0x0200DB40
_0802ba68:	.4byte 0xFFFFFEC0
	thumb_func_end sub_0802b9ec

	thumb_func_start sub_0802ba6c
sub_0802ba6c:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r5, _0802baa4
	ldr		r1, _0802baa8
	add		r0, r5, r1
	mov		r1, #0xd4
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldrb	r1, [r4, #0x4]
	ldrb	r2, [r4, #0x5]
	ldrb	r3, [r4, #0x6]
	ldrb	r4, [r4, #0x7]
	str		r4, [sp, #0x0]
	bl		sub_0802d380
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0802baa4:	.4byte 0x0200DB40
_0802baa8:	.4byte 0xFFFFFEC0
	thumb_func_end sub_0802ba6c

	thumb_func_start sub_0802baac
sub_0802baac:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldrb	r2, [r5, #0x5]
	cmp		r2, #0x0
	beq		_0802babe
	cmp		r2, #0x1
	bne		_0802bac2
	mov		r6, #0x1
	b		_0802bac4
_0802babe:
	mov		r6, #0x0
	b		_0802bac4
_0802bac2:
	add		r6, r2, #0x0
_0802bac4:
	ldr		r4, _0802baf0
	ldr		r1, _0802baf4
	add		r0, r4, r1
	mov		r1, #0xc5
	lsl		r1, r1, #0x3
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldrb	r1, [r5, #0x4]
	ldrb	r3, [r5, #0x6]
	add		r2, r6, #0x0
	bl		sub_0802eb74
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0802baf0:	.4byte 0x0200DB40
_0802baf4:	.4byte 0xFFFFFEC0
	thumb_func_end sub_0802baac

	thumb_func_start sub_0802baf8
sub_0802baf8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _0802bb28
	ldr		r1, _0802bb2c
	add		r0, r5, r1
	ldr		r1, _0802bb30
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldrb	r1, [r4, #0x4]
	ldrb	r2, [r4, #0x5]
	mov		r3, #0x6
	ldrsb	r3, [r4, r3]
	bl		sub_0802bfe0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0802bb28:	.4byte 0x0200DB40
_0802bb2c:	.4byte 0xFFFFFEC0
_0802bb30:	.4byte 0x0000058C
	thumb_func_end sub_0802baf8

	thumb_func_start sub_0802bb34
sub_0802bb34:
	push	{ r4, lr }
	ldr		r4, _0802bb60
	ldr		r1, _0802bb64
	add		r0, r4, r1
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x78
	mov		r2, #0xc0
	bl		sub_0802af68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0802bb60:	.4byte 0x0200DB40
_0802bb64:	.4byte 0xFFFFFEC0
	thumb_func_end sub_0802bb34

	thumb_func_start sub_0802bb68
sub_0802bb68:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0802bbec
	str		r0, [r7, #0x4c]
	ldr		r0, _0802bbf0
	str		r0, [r7, #0xc]
	ldr		r0, _0802bbf4
	bl		sub_0800223c
	mov		r0, #0x59
	add		r0, r0, r7
	mov		r12, r0
	mov		r3, #0x0
	strb	r4, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x68
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x69
	mov		r0, #0x3f
	strb	r0, [r1, #0x0]
	add		r4, r7, #0x0
	add		r4, #0x5f
	mov		r0, #0x10
	strb	r0, [r4, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x60
	strb	r3, [r2, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	strh	r6, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	add		r0, #0x4
	strb	r1, [r0, #0x0]
	ldrb	r0, [r4, #0x0]
	ldrb	r1, [r2, #0x0]
	sub		r0, r0, r1
	add		r1, r7, #0x0
	add		r1, #0x5b
	strb	r0, [r1, #0x0]
	mov		r1, r12
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x6
	bhi		_0802bc7e
	lsl		r0, r0, #0x2
	ldr		r1, _0802bbf8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0802bbec:	.4byte 0x080e12ec
_0802bbf0:	.4byte 0x080e1304
_0802bbf4:	.4byte 0x00000FD3
_0802bbf8:	.4byte 0x0802bbfc
_0802bbfc:	.4byte 0x0802bc18

.incbin "base.gba", 0x2BC00, 0x18
	thumb_func_end sub_0802bb68


.incbin "base.gba", 0x2BC18, 0x66

_0802bc7e:

.incbin "base.gba", 0x2BC7E, 0x26
_0802bca4:	.4byte 0x080d2c20 @ a_kobayashi/ColorEffect.cpp
_0802bca8:	.4byte 0x0802bcac
_0802bcac:	.4byte 0x0802bcc8

.incbin "base.gba", 0x2BCB0, 0x22

_0802bcd2:

.incbin "base.gba", 0x2BCD2, 0x36
_0802bd08:

.incbin "base.gba", 0x2BD08, 0x18
_0802bd20:

.incbin "base.gba", 0x2BD20, 0xDC
_0802bdfc:	.4byte 0x0802be14

.incbin "base.gba", 0x2BE00, 0xB4
	thumb_func_start sub_0802beb4
sub_0802beb4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r3, r4, #0x0
	add		r3, #0x5f
	strb	r1, [r3, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x60
	strb	r2, [r1, #0x0]
	ldrb	r0, [r3, #0x0]
	sub		r0, r0, r2
	add		r2, r4, #0x0
	add		r2, #0x5b
	strb	r0, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bcs		_0802bee6
	ldr		r0, _0802befc
	mov		r1, #0xf3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802bee6:
	add		r0, r4, #0x0
	add		r0, #0x59
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bhi		_0802bf7a
	lsl		r0, r0, #0x2
	ldr		r1, _0802bf00
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2BEFA, 0x2

_0802befc:	.4byte 0x080d2c20 @ a_kobayashi/ColorEffect.cpp
_0802bf00:	.4byte 0x0802bf04
_0802bf04:	.4byte 0x0802bf20

.incbin "base.gba", 0x2BF08, 0x18
	thumb_func_end sub_0802beb4


.incbin "base.gba", 0x2BF20, 0x5A

_0802bf7a:

.incbin "base.gba", 0x2BF7A, 0x16
_0802bf90:	.4byte 0x080d2c20 @ a_kobayashi/ColorEffect.cpp

.incbin "base.gba", 0x2BF94, 0x4
	thumb_func_start sub_0802bf98
sub_0802bf98:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0802bfd4
	str		r0, [r6, #0x4c]
	ldr		r0, _0802bfd8
	str		r0, [r6, #0xc]
	ldr		r0, _0802bfdc
	bl		sub_08002268
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0802bfce
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0802bfce:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0802bfd4:	.4byte 0x080e12ec
_0802bfd8:	.4byte 0x080e1304
_0802bfdc:	.4byte 0x00000FD3
	thumb_func_end sub_0802bf98

	thumb_func_start sub_0802bfe0
sub_0802bfe0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r6, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	str		r2, [sp, #0x0]
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	str		r3, [sp, #0x4]
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0802c0c4
	str		r0, [r6, #0x4c]
	ldr		r0, _0802c0c8
	str		r0, [r6, #0xc]
	add		r4, r6, #0x0
	add		r4, #0x54
	mov		r5, #0x6
	ldr		r0, _0802c0cc
	mov		r10, r0
	mov		r1, #0x0
	mov		r9, r1
	mov		r7, #0x1
	neg		r7, r7
_0802c026:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r2, r9
	str		r2, [r4, #0x6c]
	add		r4, #0x90
	sub		r5, #0x1
	cmp		r5, r7
	bne		_0802c026
	ldr		r3, _0802c0d0
	add		r0, r6, r3
	bl		sub_0808e21c
	ldr		r4, _0802c0d4
	add		r0, r6, r4
	bl		sub_0808b374
	mov		r1, #0x96
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	ldr		r2, _0802c0d8
	add		r0, r6, r2
	bl		sub_0808e21c
	ldr		r3, _0802c0dc
	add		r0, r6, r3
	bl		sub_0808b374
	add		r4, #0x8c
	add		r0, r6, r4
	str		r5, [r0, #0x0]
	mov		r0, r10
	ldr		r4, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802c086
	ldr		r0, _0802c0e0
	mov		r1, #0x33
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802c086:
	str		r6, [r4, #0x0]
	ldr		r1, _0802c0e4
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	ldr		r2, _0802c0e8
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	ldr		r3, _0802c0ec
	add		r0, r6, r3
	strb	r5, [r0, #0x0]
	mov		r4, r8
	cmp		r4, #0xa
	bne		_0802c0a2
	b		_0802c25c
_0802c0a2:
	cmp		r4, #0xc
	bne		_0802c0a8
	b		_0802c25c
_0802c0a8:
	cmp		r4, #0xd
	bne		_0802c0ae
	b		_0802c25c
_0802c0ae:
	cmp		r4, #0xb
	bne		_0802c0b4
	b		_0802c25c
_0802c0b4:
	cmp		r4, #0x4
	beq		_0802c0fc
	cmp		r4, #0x4
	bgt		_0802c0f0
	cmp		r4, #0x0
	beq		_0802c128
	b		_0802c1d4

.incbin "base.gba", 0x2C0C2, 0x2

_0802c0c4:	.4byte 0x080e132c
_0802c0c8:	.4byte 0x080e1344
_0802c0cc:	.4byte 0x080d2c68
_0802c0d0:	.4byte 0x00000444
_0802c0d4:	.4byte 0x000004B4
_0802c0d8:	.4byte 0x000004D4
_0802c0dc:	.4byte 0x00000544
_0802c0e0:	.4byte 0x080d2c40 @ a_kobayashi/Timer.cpp
_0802c0e4:	.4byte 0x0000056C
_0802c0e8:	.4byte 0x0000056D
_0802c0ec:	.4byte 0x0000056E

_0802c0f0:
	mov		r0, r8
	cmp		r0, #0x7
	beq		_0802c15c
	cmp		r0, #0x10
	beq		_0802c190
	b		_0802c1d4
_0802c0fc:
	ldr		r1, _0802c11c
	mov		r2, #0xe4
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	ldrb	r2, [r0, #0x0]
	ldr		r3, _0802c120
	add		r0, r6, r3
	strb	r2, [r0, #0x0]
	ldr		r4, _0802c124
	add		r0, r1, r4
	ldrb	r2, [r0, #0x0]
	add		r3, #0x1
	add		r0, r6, r3
	strb	r2, [r0, #0x0]
	add		r4, #0x1
	b		_0802c1ae

_0802c11c:	.4byte 0x02000BAC
_0802c120:	.4byte 0x0000056F
_0802c124:	.4byte 0x00000391

_0802c128:
	ldr		r1, _0802c14c
	mov		r3, #0xe5
	lsl		r3, r3, #0x2
	add		r0, r1, r3
	ldrb	r2, [r0, #0x0]
	ldr		r4, _0802c150
	add		r0, r6, r4
	strb	r2, [r0, #0x0]
	ldr		r2, _0802c154
	add		r0, r1, r2
	ldrb	r2, [r0, #0x0]
	mov		r3, #0xae
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	strb	r2, [r0, #0x0]
	ldr		r4, _0802c158
	b		_0802c1ae

.incbin "base.gba", 0x2C14A, 0x2

_0802c14c:	.4byte 0x02000BAC
_0802c150:	.4byte 0x0000056F
_0802c154:	.4byte 0x00000395
_0802c158:	.4byte 0x00000396

_0802c15c:
	ldr		r1, _0802c180
	mov		r3, #0xe7
	lsl		r3, r3, #0x2
	add		r0, r1, r3
	ldrb	r2, [r0, #0x0]
	ldr		r4, _0802c184
	add		r0, r6, r4
	strb	r2, [r0, #0x0]
	ldr		r2, _0802c188
	add		r0, r1, r2
	ldrb	r2, [r0, #0x0]
	mov		r3, #0xae
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	strb	r2, [r0, #0x0]
	ldr		r4, _0802c18c
	b		_0802c1ae

.incbin "base.gba", 0x2C17E, 0x2

_0802c180:	.4byte 0x02000BAC
_0802c184:	.4byte 0x0000056F
_0802c188:	.4byte 0x0000039D
_0802c18c:	.4byte 0x0000039E

_0802c190:
	ldr		r1, _0802c1bc
	ldr		r3, _0802c1c0
	add		r0, r1, r3
	ldrb	r2, [r0, #0x0]
	ldr		r4, _0802c1c4
	add		r0, r6, r4
	strb	r2, [r0, #0x0]
	ldr		r2, _0802c1c8
	add		r0, r1, r2
	ldrb	r2, [r0, #0x0]
	mov		r3, #0xae
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	strb	r2, [r0, #0x0]
	ldr		r4, _0802c1cc
_0802c1ae:
	add		r1, r1, r4
	ldrb	r1, [r1, #0x0]
	ldr		r2, _0802c1d0
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	b		_0802c1ee

.incbin "base.gba", 0x2C1BA, 0x2

_0802c1bc:	.4byte 0x02000BAC
_0802c1c0:	.4byte 0x00000399
_0802c1c4:	.4byte 0x0000056F
_0802c1c8:	.4byte 0x0000039A
_0802c1cc:	.4byte 0x0000039B
_0802c1d0:	.4byte 0x00000571

_0802c1d4:
	ldr		r3, _0802c250
	add		r1, r6, r3
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	mov		r4, #0xae
	lsl		r4, r4, #0x3
	add		r1, r6, r4
	mov		r0, #0x3b
	strb	r0, [r1, #0x0]
	ldr		r0, _0802c254
	add		r1, r6, r0
	mov		r0, #0x63
	strb	r0, [r1, #0x0]
_0802c1ee:
	ldr		r1, _0802c258
	add		r1, r6, r1
	str		r1, [sp, #0x8]
	mov		r0, #0xfd
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	mov		r1, #0x7
	stmia	r0!, {  r1 }
	add		r7, r0, #0x0
	add		r4, r7, #0x0
	mov		r5, #0x6
	mov		r2, #0x0
	mov		r10, r2
	mov		r3, #0x1
	neg		r3, r3
	mov		r9, r3
_0802c210:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r10
	str		r0, [r4, #0x6c]
	add		r4, #0x90
	sub		r5, #0x1
	cmp		r5, r9
	bne		_0802c210
	ldr		r1, [sp, #0x8]
	str		r7, [r1, #0x0]
	mov		r2, #0xad
	lsl		r2, r2, #0x3
	add		r5, r6, r2
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, #0x0
	str		r0, [r4, #0x6c]
	str		r4, [r5, #0x0]
	b		_0802c26c

_0802c250:	.4byte 0x0000056F
_0802c254:	.4byte 0x00000571
_0802c258:	.4byte 0x00000564

_0802c25c:
	ldr		r3, _0802c29c
	add		r0, r6, r3
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r4, #0xad
	lsl		r4, r4, #0x3
	add		r0, r6, r4
	str		r1, [r0, #0x0]
_0802c26c:
	ldr		r1, _0802c2a0
	add		r0, r6, r1
	mov		r2, #0x0
	mov		r3, r8
	strb	r3, [r0, #0x0]
	ldr		r4, _0802c2a4
	add		r1, r6, r4
	mov		r3, sp
	ldrb	r3, [r3, #0x0]
	strb	r3, [r1, #0x0]
	sub		r4, #0x9
	add		r1, r6, r4
	str		r2, [r1, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xc
	beq		_0802c290
	cmp		r0, #0xa
	bne		_0802c2ac
_0802c290:
	ldr		r0, _0802c2a8
	add		r1, r6, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	b		_0802c2b2

.incbin "base.gba", 0x2C29A, 0x2

_0802c29c:	.4byte 0x00000564
_0802c2a0:	.4byte 0x00000582
_0802c2a4:	.4byte 0x00000581
_0802c2a8:	.4byte 0x00000584

_0802c2ac:
	ldr		r1, _0802c300
	add		r0, r6, r1
	str		r2, [r0, #0x0]
_0802c2b2:
	mov		r2, #0x0
	mov		r8, r2
	mov		r10, r2
	ldr		r3, _0802c304
	add		r4, r6, r3
	ldr		r0, _0802c308
	add		r0, r6, r0
	str		r0, [sp, #0xC]
	mov		r5, #0x0
	add		r7, r6, #0x0
	add		r7, #0xb0
	mov		r1, #0x54
	add		r1, r1, r6
	mov		r9, r1
_0802c2ce:
	mov		r0, r9
	mov		r1, #0xfb
	bl		sub_0808e03c
	mov		r2, r10
	strb	r2, [r7, #0xd]
	mov		r3, r10
	strh	r3, [r7, #0x0]
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	beq		_0802c368
	ldr		r2, [sp, #0xC]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x10
	beq		_0802c336
	mov		r3, r8
	cmp		r3, #0x1
	bne		_0802c330
	ldr		r0, _0802c30c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802c314
	ldr		r0, _0802c310                                                      @
	b		_0802c316

_0802c300:	.4byte 0x00000584
_0802c304:	.4byte 0x00000564
_0802c308:	.4byte 0x00000582
_0802c30c:	.4byte 0x00000836
_0802c310:	.4byte 0x080d2c59 @ '----                                                               @

_0802c314:
	ldr		r0, _0802c32c
_0802c316:
	ldrb	r0, [r0, #0x0]                                                 @
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x3a
	bne		_0802c330
	ldr		r0, [r4, #0x0]
	add		r0, r0, r5
	mov		r1, #0xfb
	bl		sub_0808e03c
	b		_0802c354

_0802c32c:	.4byte 0x080d2c61 @ :--.--

_0802c330:
	ldr		r0, [r4, #0x0]
	add		r0, r0, r5
	b		_0802c342
_0802c336:
	mov		r0, r8
	cmp		r0, #0x1
	beq		_0802c34a
	cmp		r0, #0x4
	beq		_0802c34a
	add		r0, r1, r5
_0802c342:
	mov		r1, #0xfc
	bl		sub_0808e03c
	b		_0802c354
_0802c34a:
	ldr		r0, [r4, #0x0]
	add		r0, r0, r5
	mov		r1, #0xfb
	bl		sub_0808e03c
_0802c354:
	ldr		r0, [r4, #0x0]
	add		r0, r5, r0
	add		r0, #0x69
	mov		r1, r10
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, r5, r0
	add		r0, #0x5c
	mov		r2, r10
	strh	r2, [r0, #0x0]
_0802c368:
	add		r5, #0x90
	add		r7, #0x90
	mov		r3, #0x90
	add		r9, r3
	mov		r0, #0x1
	add		r8, r0
	mov		r1, r8
	cmp		r1, #0x6
	ble		_0802c2ce
	ldr		r2, _0802c400
	add		r0, r6, r2
	mov		r1, #0xfb
	bl		sub_0808e03c
	ldr		r3, _0802c404
	add		r0, r6, r3
	mov		r5, #0x0
	strb	r5, [r0, #0x0]
	mov		r4, #0x94
	lsl		r4, r4, #0x3
	add		r1, r6, r4
	mov		r7, #0x0
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _0802c408
	add		r0, r6, r1
	mov		r1, #0xfb
	bl		sub_0808e03c
	ldr		r2, _0802c40c
	add		r0, r6, r2
	strb	r7, [r0, #0x0]
	mov		r3, #0xa6
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	strh	r5, [r0, #0x0]
	mov		r0, #0xad
	lsl		r0, r0, #0x3
	add		r4, r6, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802c3ce
	ldr		r1, _0802c410
	bl		sub_0808e03c
	ldr		r0, [r4, #0x0]
	add		r0, #0x69
	strb	r7, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	strh	r5, [r0, #0x0]
_0802c3ce:
	ldr		r1, _0802c414
	add		r0, r6, r1
	str		r5, [r0, #0x0]
	mov		r2, #0xb0
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	mov		r3, sp
	ldrb	r3, [r3, #0x4]
	strb	r3, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802cd24
	mov		r4, #0xb1
	lsl		r4, r4, #0x3
	add		r0, r6, r4
	str		r5, [r0, #0x0]
	add		r0, r6, #0x0
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0802c400:	.4byte 0x00000444
_0802c404:	.4byte 0x000004AD
_0802c408:	.4byte 0x000004D4
_0802c40c:	.4byte 0x0000053D
_0802c410:	.4byte 0x00000111
_0802c414:	.4byte 0x0000057C
	thumb_func_end sub_0802bfe0

	thumb_func_start sub_0802c418
sub_0802c418:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r9, r1
	add		r4, r5, #0x0
	add		r4, #0x40
	ldr		r0, _0802c4ec
	str		r0, [r5, #0x4c]
	ldr		r0, _0802c4f0
	str		r0, [r5, #0xc]
	ldr		r1, _0802c4f4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, [r5, #0x40]
	cmp		r0, #0x0
	beq		_0802c442
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_0802c442:
	mov		r1, #0xad
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802c454
	mov		r1, #0x3
	bl		sub_0808e28c
_0802c454:
	ldr		r1, _0802c4f8
	add		r0, r5, r1
	ldr		r2, [r0, #0x0]
	mov		r8, r4
	add		r7, r5, #0x0
	add		r7, #0x54
	cmp		r2, #0x0
	beq		_0802c494
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r4, r2, r0
	cmp		r2, r4
	beq		_0802c488
	ldr		r0, _0802c4f8
	add		r6, r5, r0
_0802c478:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r6, #0x0]
	cmp		r0, r4
	bne		_0802c478
_0802c488:
	ldr		r1, _0802c4f8
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	sub		r0, #0x4
	bl		sub_0808afd0
_0802c494:
	ldr		r1, _0802c4fc
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r0, _0802c500
	add		r4, r5, r0
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	cmp		r7, #0x0
	beq		_0802c4c0
	cmp		r7, r4
	beq		_0802c4c0
_0802c4b2:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	cmp		r7, r4
	bne		_0802c4b2
_0802c4c0:
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802c4e0
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0802c4e0:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802c4ec:	.4byte 0x080e132c
_0802c4f0:	.4byte 0x080e1344
_0802c4f4:	.4byte 0x0200D520
_0802c4f8:	.4byte 0x00000564
_0802c4fc:	.4byte 0x000004D4
_0802c500:	.4byte 0x00000444
	thumb_func_end sub_0802c418

	thumb_func_start sub_0802c504
sub_0802c504:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x54
	add		r6, r0, #0x0
	add		r4, r2, #0x0
	ldr		r0, _0802c528
	cmp		r1, r0
	bne		_0802c51c
	b		_0802c96a
_0802c51c:
	cmp		r1, r0
	bgt		_0802c52c
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0802c590
	b		_0802ca50

_0802c528:	.4byte 0xFFFF8001

_0802c52c:
	ldr		r0, _0802c53c
	cmp		r1, r0
	beq		_0802c540
	cmp		r1, #0x0
	bne		_0802c538
	b		_0802c964
_0802c538:
	b		_0802ca50

.incbin "base.gba", 0x2C53A, 0x2

_0802c53c:	.4byte 0xFFFF8002

_0802c540:
	ldr		r1, _0802c580
	add		r0, r6, r1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r2, _0802c584
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	ldr		r3, _0802c588
	add		r0, r6, r3
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802cc7c
	add		r0, r6, #0x0
	add		r0, #0x40
	str		r0, [sp, #0x4c]
	cmp		r4, #0x1
	bne		_0802c590
	ldr		r1, _0802c58c
	add		r4, r6, r1
_0802c568:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802c578
	ldr		r0, [sp, #0x4c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0802c578:
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0802c568

_0802c580:	.4byte 0x0000056C
_0802c584:	.4byte 0x0000056D
_0802c588:	.4byte 0x0000056E
_0802c58c:	.4byte 0x0000057C

_0802c590:
	add		r2, r6, #0x0
	add		r2, #0x40
	str		r2, [sp, #0x4c]
	mov		r3, sp
	add		r3, #0x4
	str		r3, [sp, #0x38]
	ldr		r0, _0802c6a0
	add		r0, r6, r0
	str		r0, [sp, #0x48]
	mov		r1, sp
	add		r1, #0x6
	str		r1, [sp, #0x40]
	ldr		r2, _0802c6a4
	add		r2, r6, r2
	str		r2, [sp, #0x44]
	add		r3, #0x1
	str		r3, [sp, #0x3c]
	ldr		r0, _0802c6a8
	add		r0, r6, r0
	str		r0, [sp, #0x34]
	ldr		r1, _0802c6ac
	add		r1, r6, r1
	str		r1, [sp, #0x50]
	ldr		r2, _0802c6b0
	add		r2, r6, r2
	str		r2, [sp, #0x8]
	ldr		r3, _0802c6b4
	add		r3, r6, r3
	str		r3, [sp, #0xc]
	mov		r0, #0xb0
	lsl		r0, r0, #0x3
	add		r0, r6, r0
	str		r0, [sp, #0x10]
	mov		r1, #0xb1
	lsl		r1, r1, #0x3
	add		r1, r6, r1
	str		r1, [sp, #0x14]
	mov		r2, #0xaf
	lsl		r2, r2, #0x3
	add		r2, r6, r2
	str		r2, [sp, #0x18]
	ldr		r3, _0802c6b8
	add		r3, r6, r3
	str		r3, [sp, #0x1c]
	ldr		r0, [sp, #0x44]
	str		r0, [sp, #0x20]
	mov		r1, #0xad
	lsl		r1, r1, #0x3
	add		r1, r6, r1
	str		r1, [sp, #0x2c]
	ldr		r2, _0802c6bc
	add		r2, r6, r2
	str		r2, [sp, #0x30]
_0802c5fa:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_0802c618
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_0802c618
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	bne		_0802c624
_0802c618:
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0802c6c0
	mov		r3, #0x0
	bl		sub_080b7724
_0802c624:
	ldr		r3, [sp, #0x8]
	ldr		r5, [r3, #0x0]
	cmp		r5, #0x0
	bne		_0802c6c4
	ldr		r1, [sp, #0xc]
	ldrb	r0, [r1, #0x0]
	mov		r4, #0x3c
	cmp		r0, #0x10
	beq		_0802c638
	mov		r4, #0x64
_0802c638:
	ldr		r2, _0802c6b8
	add		r3, r6, r2
	ldr		r1, [sp, #0x10]
	ldrb	r0, [r1, #0x0]
	ldrb	r2, [r3, #0x0]
	add		r1, r0, r2
	strb	r1, [r3, #0x0]
	lsl		r0, r1, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r4
	bge		_0802c650
	b		_0802c8f6
_0802c650:
	sub		r0, r1, r4
	strb	r0, [r3, #0x0]
	ldr		r0, _0802c6a4
	add		r2, r6, r0
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x3c
	beq		_0802c668
	b		_0802c8f6
_0802c668:
	strb	r5, [r2, #0x0]
	ldr		r0, _0802c6a0
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0xa
	beq		_0802c67e
	b		_0802c8f6
_0802c67e:
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	mov		r1, #0x3b
	strb	r1, [r2, #0x0]
	sub		r0, r4, #0x1
	strb	r0, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802cc7c
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0802c6c0
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0802c8f6

.incbin "base.gba", 0x2C69E, 0x2

_0802c6a0:	.4byte 0x0000056E
_0802c6a4:	.4byte 0x0000056D
_0802c6a8:	.4byte 0x00000544
_0802c6ac:	.4byte 0x000004B4
_0802c6b0:	.4byte 0x00000584
_0802c6b4:	.4byte 0x00000582
_0802c6b8:	.4byte 0x0000056C
_0802c6bc:	.4byte 0x0000057C
_0802c6c0:	.4byte 0xFFFF8001

_0802c6c4:
	ldr		r3, _0802c6f4
	add		r2, r6, r3
	ldrb	r0, [r2, #0x0]
	ldr		r3, [sp, #0x10]
	ldrb	r1, [r3, #0x0]
	sub		r3, r0, r1
	strb	r3, [r2, #0x0]
	lsl		r0, r3, #0x18
	cmp		r0, #0x0
	bge		_0802c7b4
	ldr		r0, _0802c6f8
	add		r4, r6, r0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	beq		_0802c6fc
	add		r0, r3, #0x0
	add		r0, #0x64
	strb	r0, [r2, #0x0]
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x1
	strb	r0, [r4, #0x0]
	b		_0802c7b4

.incbin "base.gba", 0x2C6F2, 0x2

_0802c6f4:	.4byte 0x0000056C
_0802c6f8:	.4byte 0x0000056D

_0802c6fc:
	ldr		r0, _0802c71c
	add		r1, r6, r0
	mov		r5, #0x0
	ldrsb	r5, [r1, r5]
	cmp		r5, #0x0
	beq		_0802c720
	add		r0, r3, #0x0
	add		r0, #0x64
	strb	r0, [r2, #0x0]
	mov		r2, #0x3b
	strb	r2, [r4, #0x0]
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0802c7b4

.incbin "base.gba", 0x2C71A, 0x2

_0802c71c:	.4byte 0x0000056E

_0802c720:
	ldr		r3, [sp, #0xc]
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0xa
	bne		_0802c7a0
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	neg		r0, r0
	strb	r0, [r2, #0x0]
	mov		r7, #0x0
	mov		r0, #0x0
	mov		r8, r0
	add		r5, r6, #0x0
	add		r5, #0xb0
	add		r4, r6, #0x0
	add		r4, #0x54
_0802c73e:
	cmp		r7, #0x1
	bne		_0802c764
	ldr		r0, _0802c750
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802c758
	ldr		r0, _0802c754                                                      @
	b		_0802c75a

_0802c750:	.4byte 0x00000836
_0802c754:	.4byte 0x080d2c59 @ '----                                                             @

_0802c758:
	ldr		r0, _0802c79c
_0802c75a:
	ldrb	r0, [r0, #0x0]                                                 @
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x3a
	beq		_0802c77a
_0802c764:
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xfc
	bl		sub_0808e03c
	mov		r1, r8
	strb	r1, [r5, #0xd]
	mov		r2, r8
	strh	r2, [r5, #0x0]
_0802c77a:
	add		r5, #0x90
	add		r4, #0x90
	add		r7, #0x1
	cmp		r7, #0x6
	ble		_0802c73e
	mov		r3, #0x1
	ldr		r0, [sp, #0x14]
	str		r3, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802cd24
	mov		r1, #0x0
	ldr		r2, [sp, #0x18]
	str		r1, [r2, #0x0]
	ldr		r3, [sp, #0x8]
	str		r1, [r3, #0x0]
	b		_0802c7b4

_0802c79c:	.4byte 0x080d2c61 @ :--.--

_0802c7a0:
	strb	r5, [r2, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802cc7c
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0802c868
	mov		r3, #0x0
	bl		sub_080b7724
_0802c7b4:
	mov		r0, sp
	ldr		r1, _0802c86c
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r1, [sp, #0xc]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0xc
	beq		_0802c7c8
	b		_0802c8f6
_0802c7c8:
	ldr		r2, _0802c870
	add		r4, r6, r2
	ldr		r0, [sp, #0x38]
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r3, [sp, #0x48]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r2, [sp, #0x40]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	ble		_0802c7e8
	b		_0802c8f6
_0802c7e8:
	cmp		r1, r0
	blt		_0802c810
	ldr		r3, [sp, #0x44]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r2, [sp, #0x3c]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	ble		_0802c7fe
	b		_0802c8f6
_0802c7fe:
	cmp		r1, r0
	blt		_0802c810
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r3, [sp, #0x38]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bgt		_0802c8f6
_0802c810:
	ldr		r1, [sp, #0x1c]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	ldr		r2, [sp, #0x20]
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	mov		r3, #0x64
	mul		r1, r3
	add		r0, r0, r1
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	sub		r0, r1, r0
	mov		r2, #0x1f
	and		r0, r2
	cmp		r0, #0x0
	bne		_0802c8f6
	mov		r3, #0x0
	mov		r9, r3
	ldr		r0, _0802c870
	add		r0, r6, r0
	str		r0, [sp, #0x24]
	ldr		r1, _0802c874
	add		r1, r6, r1
	str		r1, [sp, #0x28]
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r2, r2, r6
	mov		r8, r2
	mov		r10, r3
	add		r7, r6, #0x0
	add		r7, #0xb0
	add		r4, r6, #0x0
	add		r4, #0x54
_0802c852:
	mov		r3, r9
	cmp		r3, #0x1
	bne		_0802c88c
	ldr		r0, _0802c878
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802c880
	ldr		r0, _0802c87c                                                      @
	b		_0802c882

.incbin "base.gba", 0x2C866, 0x2

_0802c868:	.4byte 0xFFFF8001
_0802c86c:	.4byte 0x080d2c6c
_0802c870:	.4byte 0x0000056C
_0802c874:	.4byte 0x0000056D
_0802c878:	.4byte 0x00000836
_0802c87c:	.4byte 0x080d2c59 @ '----                                                             @

_0802c880:
	ldr		r0, _0802c8c4
_0802c882:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x3a
	beq		_0802c8dc
_0802c88c:
	add		r0, r4, #0x0
	bl		sub_0808e278
	ldr		r1, [sp, #0x24]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	ldr		r2, [sp, #0x28]
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	mov		r3, #0x64
	mul		r1, r3
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_0802c8aa
	add		r0, #0x1f
_0802c8aa:
	asr		r0, r0, #0x5
	mov		r5, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0802c8c8
	add		r0, r4, #0x0
	mov		r1, #0xfb
	bl		sub_0808e03c
	mov		r0, r10
	mov		r1, r8
	str		r0, [r1, #0x0]
	b		_0802c8d4

_0802c8c4:	.4byte 0x080d2c61 @ :--.--

_0802c8c8:
	add		r0, r4, #0x0
	mov		r1, #0xfc
	bl		sub_0808e03c
	mov		r2, r8
	str		r5, [r2, #0x0]
_0802c8d4:
	mov		r3, r10
	strb	r3, [r7, #0xd]
	mov		r0, r10
	strh	r0, [r7, #0x0]
_0802c8dc:
	add		r7, #0x90
	add		r4, #0x90
	mov		r1, #0x1
	add		r9, r1
	mov		r2, r9
	cmp		r2, #0x6
	ble		_0802c852
	mov		r3, #0x0
	ldr		r0, [sp, #0x18]
	str		r3, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802cd24
_0802c8f6:
	add		r0, r6, #0x0
	bl		sub_0802cc7c
	ldr		r1, _0802c960
	add		r1, r1, r6
	mov		r8, r1
	add		r4, r6, #0x0
	add		r4, #0xc4
	mov		r7, #0x0
	mov		r5, #0x6
_0802c90a:
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0802c920
	add		r0, r7, r0
	add		r0, #0x70
	bl		sub_0808b3d4
_0802c920:
	add		r4, #0x90
	add		r7, #0x90
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802c90a
	ldr		r0, [sp, #0x34]
	bl		sub_0808b3d4
	ldr		r3, [sp, #0x2c]
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_0802c93e
	add		r0, #0x70
	bl		sub_0808b3d4
_0802c93e:
	ldr		r0, [sp, #0x50]
	bl		sub_0808b3d4
	ldr		r1, [sp, #0x30]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0802c956
	ldr		r0, [sp, #0x4c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0802c956:
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0802c5fa

.incbin "base.gba", 0x2C95E, 0x2

_0802c960:	.4byte 0x00000564

_0802c964:
	add		r0, r6, #0x0
	bl		sub_0802cd24
_0802c96a:
	ldr		r2, _0802ca30
	add		r0, r6, r2
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_0802c9b4
	ldr		r0, _0802ca34
	add		r3, r6, r0
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x63
	ble		_0802c9b4
	strb	r1, [r3, #0x0]
	ldr		r0, _0802ca38
	add		r2, r6, r0
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x3c
	bne		_0802c9b4
	strb	r1, [r2, #0x0]
	ldr		r0, _0802ca3c
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0xa
	bne		_0802c9b4
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	mov		r0, #0x3b
	strb	r0, [r2, #0x0]
	mov		r0, #0x63
	strb	r0, [r3, #0x0]
_0802c9b4:
	add		r1, r6, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x4c]
	ldr		r2, _0802ca40
	add		r2, r6, r2
	str		r2, [sp, #0x34]
	ldr		r3, _0802ca44
	add		r3, r6, r3
	str		r3, [sp, #0x50]
	ldr		r0, _0802ca48
	add		r0, r0, r6
	mov		r8, r0
	add		r4, r6, #0x0
	add		r4, #0xc4
	mov		r7, #0x0
	mov		r5, #0x6
_0802c9d4:
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0802c9ea
	add		r0, r7, r0
	add		r0, #0x70
	bl		sub_0808b3d4
_0802c9ea:
	add		r4, #0x90
	add		r7, #0x90
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802c9d4
	ldr		r0, [sp, #0x34]
	bl		sub_0808b3d4
	mov		r2, #0xad
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802ca0c
	add		r0, #0x70
	bl		sub_0808b3d4
_0802ca0c:
	ldr		r0, [sp, #0x50]
	bl		sub_0808b3d4
	ldr		r3, _0802ca4c
	add		r4, r6, r3
_0802ca16:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802ca26
	ldr		r0, [sp, #0x4c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0802ca26:
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0802ca16

.incbin "base.gba", 0x2CA2E, 0x2

_0802ca30:	.4byte 0x00000584
_0802ca34:	.4byte 0x0000056C
_0802ca38:	.4byte 0x0000056D
_0802ca3c:	.4byte 0x0000056E
_0802ca40:	.4byte 0x00000544
_0802ca44:	.4byte 0x000004B4
_0802ca48:	.4byte 0x00000564
_0802ca4c:	.4byte 0x0000057C

_0802ca50:
	add		sp, #0x54
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802c504

	thumb_func_start sub_0802ca60
sub_0802ca60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8c
	mov		r10, r0
	mov		r0, #0xaf
	lsl		r0, r0, #0x3
	add		r0, r10
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802cad4
	ldr		r0, _0802cac8
	add		r0, r10
	bl		sub_0808e4a0
	ldr		r7, _0802cacc
	add		r7, r10
	mov		r4, r10
	add		r4, #0x54
	mov		r6, #0x0
	mov		r5, #0x6
_0802ca8e:
	add		r0, r4, #0x0
	bl		sub_0808e4a0
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_0802caa0
	add		r0, r0, r6
	bl		sub_0808e4a0
_0802caa0:
	add		r4, #0x90
	add		r6, #0x90
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802ca8e
	ldr		r0, _0802cad0
	add		r0, r10
	bl		sub_0808e4a0
	mov		r0, #0xad
	lsl		r0, r0, #0x3
	add		r0, r10
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802cac0
	b		_0802cc58
_0802cac0:
	bl		sub_0808e4a0
	b		_0802cc58

.incbin "base.gba", 0x2CAC6, 0x2

_0802cac8:	.4byte 0x00000444
_0802cacc:	.4byte 0x00000564
_0802cad0:	.4byte 0x000004D4

_0802cad4:
	ldr		r0, _0802cae8
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x5
	bhi		_0802cb38
	lsl		r0, r0, #0x2
	ldr		r1, _0802caec
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0802cae8:	.4byte 0x00000581
_0802caec:	.4byte 0x0802caf0
_0802caf0:	.4byte 0x0802cb08

.incbin "base.gba", 0x2CAF4, 0x14
	thumb_func_end sub_0802ca60


.incbin "base.gba", 0x2CB08, 0x30

_0802cb38:

.incbin "base.gba", 0x2CB38, 0xAC
_0802cbe4:

.incbin "base.gba", 0x2CBE4, 0x2A
_0802cc0e:

.incbin "base.gba", 0x2CC0E, 0x40
_0802cc4e:

.incbin "base.gba", 0x2CC4E, 0xA
_0802cc58:

.incbin "base.gba", 0x2CC58, 0x10
_0802cc68:	.4byte 0x080d2c40 @ a_kobayashi/Timer.cpp
_0802cc6c:	.4byte 0x000001D5
_0802cc70:	.4byte 0x00000444
_0802cc74:	.4byte 0x00000564
_0802cc78:	.4byte 0x000004D4
	thumb_func_start sub_0802cc7c
sub_0802cc7c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r0, #0x54
	ldr		r2, _0802cd18
	add		r1, r6, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	ldr		r2, _0802cd1c
	add		r5, r6, r2
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, #0x81
	lsl		r0, r0, #0x2
	add		r4, r6, r0
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r2, #0xc9
	lsl		r2, r2, #0x2
	add		r4, r6, r2
	ldr		r0, _0802cd20
	add		r5, r6, r0
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r2, #0xed
	lsl		r2, r2, #0x2
	add		r4, r6, r2
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0802cd18:	.4byte 0x0000056E
_0802cd1c:	.4byte 0x0000056D
_0802cd20:	.4byte 0x0000056C
	thumb_func_end sub_0802cc7c

	thumb_func_start sub_0802cd24
sub_0802cd24:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	ldr		r1, _0802cd40
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	beq		_0802cdaa
	ldr		r0, _0802cd44
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802cd4c
	ldr		r0, _0802cd48                                                  @
	b		_0802cd4e

_0802cd40:	.4byte 0x00000582
_0802cd44:	.4byte 0x00000836
_0802cd48:	.4byte 0x080d2c59 @ '----                                                             @

_0802cd4c:
	ldr		r0, _0802cd74
_0802cd4e:
	ldrb	r0, [r0, #0x0]                                                 @
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x3a
	bne		_0802cd8e
	mov		r2, #0xb1
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802cd78
	add		r0, r7, #0x0
	add		r0, #0xe4
	mov		r1, #0x1b
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_0802cd84

.incbin "base.gba", 0x2CD72, 0x2

_0802cd74:	.4byte 0x080d2c61 @ :--.--

_0802cd78:
	add		r0, r7, #0x0
	add		r0, #0xe4
	mov		r1, #0x1c
	mov		r2, #0x2
	bl		sub_0808e3c0
_0802cd84:
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, #0xa
	b		_0802cda2
_0802cd8e:
	add		r0, r7, #0x0
	add		r0, #0xe4
	mov		r1, #0xc
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r2, #0xa5
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r1, #0xd
_0802cda2:
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_0802cdc4
_0802cdaa:
	add		r0, r7, #0x0
	add		r0, #0xe4
	mov		r1, #0x1b
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, #0x1b
	mov		r2, #0x2
	bl		sub_0808e3c0
_0802cdc4:
	add		r0, r7, #0x0
	bl		sub_0802cc7c
	ldr		r2, _0802cdf0
	add		r4, r7, r2
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bne		_0802cdd6
	b		_0802cf10
_0802cdd6:
	add		r2, #0x1e
	add		r0, r7, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	beq		_0802ce54
	ldr		r0, _0802cdf4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802cdfc
	ldr		r0, _0802cdf8                                                      @
	b		_0802cdfe

.incbin "base.gba", 0x2CDEE, 0x2

_0802cdf0:	.4byte 0x00000564
_0802cdf4:	.4byte 0x00000836
_0802cdf8:	.4byte 0x080d2c59 @ '----                                                             @

_0802cdfc:
	ldr		r0, _0802ce24
_0802cdfe:
	ldrb	r0, [r0, #0x0]                                                 @
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x3a
	bne		_0802ce2c
	ldr		r0, _0802ce28
	add		r4, r7, r0
	ldr		r0, [r4, #0x0]
	add		r0, #0x90
	mov		r1, #0x1c
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x0]
	mov		r1, #0x90
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r1, #0xa
	b		_0802ce46

_0802ce24:	.4byte 0x080d2c61 @ :--.--
_0802ce28:	.4byte 0x00000564

_0802ce2c:
	ldr		r2, _0802ce50
	add		r4, r7, r2
	ldr		r0, [r4, #0x0]
	add		r0, #0x90
	mov		r1, #0xc
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x0]
	mov		r1, #0x90
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r1, #0xd
_0802ce46:
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_0802ce70

.incbin "base.gba", 0x2CE4E, 0x2

_0802ce50:	.4byte 0x00000564

_0802ce54:
	add		r0, r1, #0x0
	add		r0, #0x90
	mov		r1, #0x1c
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x0]
	mov		r2, #0x90
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	mov		r1, #0x1c
	mov		r2, #0x2
	bl		sub_0808e3c0
_0802ce70:
	ldr		r0, _0802cf44
	add		r5, r7, r0
	ldr		r0, [r5, #0x0]
	ldr		r2, _0802cf48
	add		r1, r7, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r4, [r5, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	mov		r1, #0xae
	lsl		r1, r1, #0x3
	add		r6, r7, r1
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r4, [r5, #0x0]
	mov		r2, #0xd8
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r4, [r5, #0x0]
	mov		r0, #0xb4
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldr		r1, _0802cf4c
	add		r6, r7, r1
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r4, [r5, #0x0]
	mov		r2, #0xd8
	lsl		r2, r2, #0x2
	add		r4, r4, r2
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
_0802cf10:
	ldr		r1, _0802cf50
	add		r0, r7, r1
	mov		r1, #0xe
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _0802cf54
	add		r0, r7, r2
	mov		r1, #0x1d
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xad
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802cf3c
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
_0802cf3c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2CF42, 0x2

_0802cf44:	.4byte 0x00000564
_0802cf48:	.4byte 0x00000571
_0802cf4c:	.4byte 0x0000056F
_0802cf50:	.4byte 0x00000444
_0802cf54:	.4byte 0x000004D4
	thumb_func_end sub_0802cd24

	thumb_func_start sub_0802cf58
sub_0802cf58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	ldr		r1, _0802cfdc
	add		r0, r6, r1
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, #0x0
	mov		r8, r0
	add		r5, r6, #0x0
	add		r5, #0xb0
	add		r4, r6, #0x0
	add		r4, #0x54
	mov		r7, #0x6
_0802cf7e:
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xfb
	bl		sub_0808e03c
	mov		r1, r8
	strb	r1, [r5, #0xd]
	mov		r0, r8
	strh	r0, [r5, #0x0]
	add		r5, #0x90
	add		r4, #0x90
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0802cf7e
	mov		r4, #0x0
	mov		r1, #0xb1
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802cd24
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802cc7c
	ldr		r0, _0802cfe0
	add		r1, r6, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0802cfe4
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802cfdc:	.4byte 0x0000056C
_0802cfe0:	.4byte 0x00000584
_0802cfe4:	.4byte 0xFFFF8001
	thumb_func_end sub_0802cf58

	thumb_func_start sub_0802cfe8
sub_0802cfe8:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r3, r0, #0x0
	str		r1, [sp, #0x4]
	add		r4, r2, #0x0
	mov		r0, sp
	add		r0, #0x6
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r2, #0x1
	neg		r2, r2
	add		r6, r0, #0x0
	cmp		r1, r2
	beq		_0802d0e0
	sub		r0, #0x1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	add		r5, r0, #0x0
	cmp		r1, r2
	beq		_0802d0e0
	add		r0, sp, #0x4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r2
	beq		_0802d0e0
	ldr		r1, _0802d030
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	bhi		_0802d0cc
	lsl		r0, r0, #0x2
	ldr		r1, _0802d034
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0802d030:	.4byte 0x00000582
_0802d034:	.4byte 0x0802d038
_0802d038:	.4byte 0x0802d084

.incbin "base.gba", 0x2D03C, 0x40
	thumb_func_end sub_0802cfe8


.incbin "base.gba", 0x2D07C, 0x50

_0802d0cc:

.incbin "base.gba", 0x2D0CC, 0x10
_0802d0dc:	.4byte 0x080d2c40 @ a_kobayashi/Timer.cpp
_0802d0e0:
.incbin "base.gba", 0x2D0E0, 0x14
_0802d0f4:	.4byte 0x00000582
_0802d0f8:	.4byte 0x0802d0fc
_0802d0fc:	.4byte 0x0802d148

.incbin "base.gba", 0x2D100, 0x80

_0802d180:

.incbin "base.gba", 0x2D180, 0xC
_0802d18c:

.incbin "base.gba", 0x2D18C, 0x8
_0802d194:	.4byte 0x080d2c40 @ a_kobayashi/Timer.cpp
_0802d198:	.4byte 0x000002D1
	thumb_func_start sub_0802d19c
sub_0802d19c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0xad
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802d1ba
	ldr		r0, _0802d21c
	mov		r1, #0xa2
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802d1ba:
	ldr		r1, _0802d220
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	ldr		r2, _0802d224
	add		r3, r0, #0x0
	mul		r3, r2
	sub		r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r3, r3, r0
	ldr		r1, _0802d228
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r3, r3, r0
	add		r1, #0x5
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mul		r2, r0
	sub		r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	ldr		r1, _0802d22c
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r2, r2, r0
	mov		r0, #0x0
	cmp		r3, r2
	bge		_0802d216
	mov		r0, #0x1
_0802d216:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0802d21c:	.4byte 0x080d2c40 @ a_kobayashi/Timer.cpp
_0802d220:	.4byte 0x0000056E
_0802d224:	.4byte 0x00001770
_0802d228:	.4byte 0x0000056C
_0802d22c:	.4byte 0x0000056F
	thumb_func_end sub_0802d19c

	thumb_func_start sub_0802d230
sub_0802d230:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r3, r1, #0x0
	mov		r6, #0x64
	cmp		r2, #0x10
	bne		_0802d23e
	mov		r6, #0x3c
_0802d23e:
	mov		r0, #0x2
	ldrsb	r0, [r5, r0]
	add		r1, r0, #0x0
	mul		r1, r6
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	mov		r1, #0x1
	ldrsb	r1, [r5, r1]
	mul		r1, r6
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	add		r4, r0, r1
	cmp		r2, #0x7
	bne		_0802d264
	lsl		r0, r3, #0x2
	add		r4, r4, r0
	b		_0802d266
_0802d264:
	add		r4, r4, r3
_0802d266:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080bbcac
	mov		r1, #0x3c
	bl		sub_080bbcac
	strb	r0, [r5, #0x2]
	mov		r0, #0x2
	ldrsb	r0, [r5, r0]
	add		r1, r0, #0x0
	mul		r1, r6
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r4, r4, r0
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080bbcac
	strb	r0, [r5, #0x1]
	mov		r0, #0x1
	ldrsb	r0, [r5, r0]
	mul		r0, r6
	sub		r4, r4, r0
	strb	r4, [r5, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2D2A0, 0xE0
	thumb_func_end sub_0802d230

	thumb_func_start sub_0802d380
sub_0802d380:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x60
	add		r7, r0, #0x0
	add		r4, r2, #0x0
	ldr		r0, [sp, #0x0+0x80]
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r5, r1, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	lsl		r3, r3, #0x18
	str		r3, [sp, #0x20]
	lsr		r1, r3, #0x18
	str		r1, [sp, #0x1C]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x24]
	add		r0, r7, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0802d4f8
	str		r0, [r7, #0x4c]
	ldr		r0, _0802d4fc
	str		r0, [r7, #0xc]
	add		r0, r7, #0x0
	add		r0, #0x58
	bl		sub_0808e21c
	add		r0, r7, #0x0
	add		r0, #0xc8
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0xc4
	mov		r2, #0x0
	mov		r8, r2
	str		r2, [r0, #0x0]
	mov		r3, #0xe8
	add		r3, r3, r7
	mov		r9, r3
	mov		r0, r9
	bl		sub_0808e21c
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r6, r7, r0
	add		r0, r6, #0x0
	bl		sub_0808b374
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, r8
	str		r2, [r0, #0x0]
	mov		r3, #0xbe
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	add		r1, r5, #0x0
	bl		sub_0802e9b4
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r0, r0, r7
	mov		r10, r0
	strb	r4, [r0, #0x0]
	cmp		r4, #0x6
	bls		_0802d422
	ldr		r0, _0802d500
	mov		r1, #0x2f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802d422:
	ldr		r4, _0802d504
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802d436
	ldr		r0, _0802d500
	mov		r1, #0x30
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802d436:
	str		r7, [r4, #0x0]
	ldr		r1, _0802d508
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	cmp		r5, #0xb
	beq		_0802d50c
	add		r2, r7, #0x0
	add		r2, #0x54
	str		r2, [sp, #0x28]
	mov		r3, r10
	ldrb	r4, [r3, #0x0]
	lsl		r0, r4, #0x3
	add		r0, r0, r4
	lsl		r0, r0, #0x4
	add		r0, #0x4
	bl		sub_0808afb8
	stmia	r0!, {  r4 }
	mov		r8, r0
	mov		r5, r8
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	mov		r1, r9
	str		r1, [sp, #0x3C]
	str		r6, [sp, #0x44]
	ldr		r2, [sp, #0x20]
	lsr		r2, r2, #0x1c
	str		r2, [sp, #0x40]
	cmp		r4, r0
	beq		_0802d494
	mov		r3, #0x0
	mov		r9, r3
	add		r6, r0, #0x0
_0802d47a:
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r9
	str		r0, [r5, #0x6c]
	add		r5, #0x90
	sub		r4, #0x1
	cmp		r4, r6
	bne		_0802d47a
_0802d494:
	mov		r1, r8
	ldr		r2, [sp, #0x28]
	str		r1, [r2, #0x0]
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r3, r3, r7
	mov		r10, r3
	mov		r4, #0xce
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	ldrb	r4, [r0, #0x0]
	lsl		r0, r4, #0x4
	add		r0, #0x4
	bl		sub_0808afb8
	stmia	r0!, {  r4 }
	mov		r8, r0
	mov		r5, r8
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_0802d4d8
	ldr		r1, _0802d508
	add		r6, r7, r1
	mov		r9, r0
_0802d4c8:
	ldrb	r1, [r6, #0x0]
	add		r0, r5, #0x0
	bl		sub_0802e9b4
	add		r5, #0x10
	sub		r4, #0x1
	cmp		r4, r9
	bne		_0802d4c8
_0802d4d8:
	mov		r2, r8
	mov		r3, r10
	str		r2, [r3, #0x0]
	mov		r5, #0xc8
	lsl		r5, r5, #0x1
	add		r4, r7, r5
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	bl		sub_0808afb8
	str		r0, [r4, #0x0]
	b		_0802d52c

.incbin "base.gba", 0x2D4F6, 0x2

_0802d4f8:	.4byte 0x080e136c
_0802d4fc:	.4byte 0x080e1384
_0802d500:	.4byte 0x080d2cac @ a_kobayashi/Practice.cpp
_0802d504:	.4byte 0x0200D524
_0802d508:	.4byte 0x0000019B

_0802d50c:
	mov		r2, r8
	str		r2, [r7, #0x54]
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	mov		r4, #0xc8
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	mov		r5, r9
	str		r5, [sp, #0x3C]
	str		r6, [sp, #0x44]
	ldr		r0, [sp, #0x20]
	lsr		r0, r0, #0x1c
	str		r0, [sp, #0x40]
_0802d52c:
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	add		r2, sp, #0x24
	ldrb	r2, [r2, #0x0]
	strb	r2, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x5
	bhi		_0802d564
	lsl		r0, r0, #0x2
	ldr		r1, _0802d548
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0802d548:	.4byte 0x0802d54c
_0802d54c:	.4byte 0x0802d5a2

.incbin "base.gba", 0x2D550, 0x14

_0802d564:
	ldr		r0, _0802d588
	mov		r1, #0x4c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	ldr		r3, _0802d58c
	add		r0, r7, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x5
	beq		_0802d590
	mov		r4, #0xce
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x3
	b		_0802d59a

.incbin "base.gba", 0x2D586, 0x2

_0802d588:	.4byte 0x080d2cac @ a_kobayashi/Practice.cpp
_0802d58c:	.4byte 0x0000019B

_0802d590:
	mov		r5, #0xce
	lsl		r5, r5, #0x1
	add		r0, r7, r5
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x4
_0802d59a:
	mov		r1, #0x98
	sub		r1, r1, r0
	mov		r10, r1
	b		_0802d5c6

.incbin "base.gba", 0x2D5A2, 0x24

_0802d5c6:
	mov		r0, #0xf
	ldr		r3, [sp, #0x1C]
	and		r0, r3
	ldr		r4, [sp, #0x40]
	add		r2, r4, r0
	cmp		r0, #0x0
	beq		_0802d5d6
	add		r2, #0x1
_0802d5d6:
	mov		r5, #0xcd
	lsl		r5, r5, #0x1
	add		r0, r7, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x5
	bhi		_0802d60c
	lsl		r0, r0, #0x2
	ldr		r1, _0802d5f0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2D5EC, 0x4

_0802d5f0:	.4byte 0x0802d5f4

.incbin "base.gba", 0x2D5F4, 0x18

_0802d60c:
	ldr		r0, _0802d61c
	mov		r1, #0x69
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	mov		r5, #0x0
	b		_0802d628

_0802d61c:	.4byte 0x080d2cac @ a_kobayashi/Practice.cpp

.incbin "base.gba", 0x2D620, 0x8

_0802d628:
	ldr		r1, _0802d63c
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0802d674
	cmp		r0, #0x2
	bgt		_0802d640
	cmp		r0, #0x1
	beq		_0802d64a
	b		_0802d6e0

_0802d63c:	.4byte 0x0000019B

_0802d640:
	cmp		r0, #0x3
	beq		_0802d69c
	cmp		r0, #0xb
	beq		_0802d6c4
	b		_0802d6e0
_0802d64a:
	ldr		r1, _0802d66c
	ldr		r2, _0802d670
	add		r0, r1, r2
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	mov		r0, #0x64
	mov		r4, #0xe9
	lsl		r4, r4, #0x2
	add		r1, r1, r4
	mul		r0, r2
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r2, #0xca
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	b		_0802d6e8

.incbin "base.gba", 0x2D66A, 0x2

_0802d66c:	.4byte 0x02000BAC
_0802d670:	.4byte 0x000003A6

_0802d674:
	ldr		r1, _0802d694
	ldr		r3, _0802d698
	add		r0, r1, r3
	mov		r4, #0x0
	ldrsh	r2, [r0, r4]
	mov		r0, #0x64
	sub		r3, #0x2
	add		r1, r1, r3
	mul		r0, r2
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r4, #0xca
	lsl		r4, r4, #0x1
	add		r1, r7, r4
	b		_0802d6e8

.incbin "base.gba", 0x2D692, 0x2

_0802d694:	.4byte 0x02000BAC
_0802d698:	.4byte 0x000003AA

_0802d69c:
	ldr		r1, _0802d6bc
	ldr		r2, _0802d6c0
	add		r0, r1, r2
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	mov		r0, #0x64
	mov		r4, #0xe8
	lsl		r4, r4, #0x2
	add		r1, r1, r4
	mul		r0, r2
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r2, #0xca
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	b		_0802d6e8

_0802d6bc:	.4byte 0x02000BAC
_0802d6c0:	.4byte 0x000003A2

_0802d6c4:
	ldr		r0, _0802d6d8
	ldr		r3, _0802d6dc
	add		r0, r0, r3
	ldrh	r1, [r0, #0x0]
	mov		r4, #0xca
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	strh	r1, [r0, #0x0]
	b		_0802d6ea

.incbin "base.gba", 0x2D6D6, 0x2

_0802d6d8:	.4byte 0x02000BAC
_0802d6dc:	.4byte 0x000003AE

_0802d6e0:
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x0
_0802d6e8:
	strh	r0, [r1, #0x0]
_0802d6ea:
	ldr		r1, _0802d7a8
	ldr		r0, [sp, #0x3C]
	bl		sub_0808e03c
	ldr		r0, [sp, #0x3C]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x44]
	bl		sub_0808b3d4
	add		r6, r5, #0x0
	add		r6, #0x8
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	mov		r3, #0x0
	mov		r8, r3
	strh	r6, [r0, #0x0]
	mov		r1, r10
	add		r1, #0x8
	mov		r4, #0x9f
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	strh	r1, [r0, #0x0]
	ldr		r3, _0802d7ac
	add		r0, r7, r3
	strb	r2, [r0, #0x0]
	add		r4, #0x6
	add		r0, r7, r4
	mov		r2, r8
	strh	r2, [r0, #0x0]
	add		r3, #0x2b
	add		r4, r7, r3
	add		r5, #0x14
	lsl		r3, r5, #0x10
	asr		r3, r3, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	str		r1, [sp, #0x0]
	add		r0, r4, #0x0
	ldr		r1, [sp, #0x1C]
	mov		r2, #0xfc
	bl		sub_0802e494
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r4, #0x0
	bl		sub_0802e6d4
	ldr		r3, _0802d7b0
	add		r0, r7, r3
	ldrb	r4, [r0, #0x0]
	str		r6, [sp, #0x48]
	str		r5, [sp, #0x4C]
	cmp		r4, #0x5
	bne		_0802d83c
	mov		r5, #0xc6
	lsl		r5, r5, #0x1
	add		r5, r5, r7
	mov		r9, r5
	mov		r0, #0xb5
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	stmia	r0!, {  r4 }
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	mov		r5, #0x4
	mov		r0, #0x1
	neg		r0, r0
	mov		r8, r0
_0802d784:
	add		r0, r4, #0x0
	bl		sub_0802e93c
	add		r4, #0x90
	sub		r5, #0x1
	cmp		r5, r8
	bne		_0802d784
	mov		r1, r9
	str		r6, [r1, #0x0]
	mov		r5, #0x0
	ldr		r0, _0802d7b4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802d7bc
	ldr		r0, _0802d7b8
	b		_0802d7be

.incbin "base.gba", 0x2D7A6, 0x2

_0802d7a8:	.4byte 0x00000111
_0802d7ac:	.4byte 0x00000151
_0802d7b0:	.4byte 0x0000019B
_0802d7b4:	.4byte 0x00000836
_0802d7b8:	.4byte 0x080d2ccb

_0802d7bc:
	ldr		r0, _0802d838
_0802d7be:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x2e
	bne		_0802d7ca
	mov		r5, #0x1
_0802d7ca:
	mov		r2, #0xc6
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	ldr		r0, [r4, #0x0]
	mov		r1, #0x0
	cmp		r5, #0x0
	bne		_0802d7da
	mov		r1, #0x4
_0802d7da:
	mov		r2, #0x0
	bl		sub_0802e8cc
	ldr		r0, [r4, #0x0]
	add		r0, #0x90
	mov		r1, #0x5
	cmp		r5, #0x0
	beq		_0802d7ec
	mov		r1, #0x1
_0802d7ec:
	mov		r2, #0x1
	bl		sub_0802e8cc
	ldr		r0, [r4, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	mov		r1, #0x6
	cmp		r5, #0x0
	beq		_0802d802
	mov		r1, #0x2
_0802d802:
	mov		r2, #0x2
	bl		sub_0802e8cc
	ldr		r0, [r4, #0x0]
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r1, #0x7
	cmp		r5, #0x0
	beq		_0802d818
	mov		r1, #0x3
_0802d818:
	mov		r2, #0x3
	bl		sub_0802e8cc
	ldr		r0, [r4, #0x0]
	mov		r2, #0x90
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	mov		r1, #0x7
	cmp		r5, #0x0
	beq		_0802d82e
	mov		r1, #0x3
_0802d82e:
	mov		r2, #0x4
	bl		sub_0802e8cc
	b		_0802d846

.incbin "base.gba", 0x2D836, 0x2

_0802d838:	.4byte 0x080d2cd3

_0802d83c:
	mov		r3, #0xc6
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r4, r8
	str		r4, [r0, #0x0]
_0802d846:
	add		r0, sp, #0x4
	ldr		r1, _0802d8f0
	ldmia	r1!, { r2, r3, r5 }
	stmia	r0!, {  r2, r3, r5 }
	ldmia	r1!, { r2, r4, r5 }
	stmia	r0!, {  r2, r4, r5 }
	mov		r6, #0x0
	mov		r3, #0xce
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_0802d862
	b		_0802d968
_0802d862:
	mov		r4, #0xc8
	lsl		r4, r4, #0x1
	add		r4, r7, r4
	str		r4, [sp, #0x30]
	ldr		r5, _0802d8f4
	add		r5, r5, r7
	mov		r9, r5
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0x34]
	ldr		r1, [sp, #0x4C]
	lsl		r1, r1, #0x10
	str		r1, [sp, #0x38]
	add		r2, r3, #0x0
	add		r2, r7, r2
	str		r2, [sp, #0x2C]
	mov		r3, #0x0
	str		r3, [sp, #0x50]
	mov		r4, #0x10
	str		r4, [sp, #0x54]
	mov		r5, #0x10
	str		r5, [sp, #0x58]
	mov		r4, #0x0
	mov		r0, r10
	add		r0, #0x10
	str		r0, [sp, #0x5C]
	mov		r8, r0
_0802d89a:
	ldr		r2, [sp, #0x30]
	ldr		r1, [r2, #0x0]
	lsl		r0, r6, #0x1
	add		r0, r0, r1
	mov		r3, #0x0
	strh	r3, [r0, #0x0]
	ldr		r0, [r7, #0x54]
	add		r0, r0, r4
	mov		r1, #0xfb
	bl		sub_0808e03c
	ldr		r0, [r7, #0x54]
	add		r0, r0, r4
	lsl		r1, r6, #0x2
	add		r1, sp
	add		r1, #0x4
	ldr		r1, [r1, #0x0]
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r7, #0x54]
	add		r0, r4, r0
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r7, #0x54]
	add		r0, r4, r0
	add		r0, #0x54
	add		r5, sp, #0x48
	ldrh	r5, [r5, #0x0]
	strh	r5, [r0, #0x0]
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x5
	beq		_0802d8f8
	ldr		r0, [r7, #0x54]
	add		r0, r4, r0
	add		r0, #0x56
	add		r2, sp, #0x5c
	ldrh	r2, [r2, #0x0]
	strh	r2, [r0, #0x0]
	b		_0802d902

.incbin "base.gba", 0x2D8EE, 0x2

_0802d8f0:	.4byte 0x080d2cd8
_0802d8f4:	.4byte 0x0000019B

_0802d8f8:
	ldr		r0, [r7, #0x54]
	add		r0, r4, r0
	add		r0, #0x56
	mov		r3, r8
	strh	r3, [r0, #0x0]
_0802d902:
	ldr		r0, [r7, #0x54]
	add		r0, r4, r0
	add		r0, #0x5c
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	ldr		r0, [r7, #0x54]
	add		r0, r4, r0
	add		r0, #0x69
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r2, r9
	ldrb	r0, [r2, #0x0]
	ldr		r1, [sp, #0x54]
	add		r1, r10
	cmp		r0, #0x5
	beq		_0802d926
	ldr		r1, [sp, #0x58]
	add		r1, r10
_0802d926:
	ldr		r3, [sp, #0x34]
	ldr		r0, [r3, #0x0]
	ldr		r5, [sp, #0x50]
	add		r0, r0, r5
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	str		r1, [sp, #0x0]
	ldr		r1, [sp, #0x1C]
	mov		r2, #0xfb
	ldr		r5, [sp, #0x38]
	asr		r3, r5, #0x10
	bl		sub_0802e494
	ldr		r0, [sp, #0x50]
	add		r0, #0x10
	str		r0, [sp, #0x50]
	ldr		r1, [sp, #0x54]
	add		r1, #0x10
	str		r1, [sp, #0x54]
	ldr		r2, [sp, #0x58]
	add		r2, #0x8
	str		r2, [sp, #0x58]
	add		r4, #0x90
	mov		r3, #0x10
	add		r8, r3
	ldr		r5, [sp, #0x5C]
	add		r5, #0x8
	str		r5, [sp, #0x5C]
	add		r6, #0x1
	ldr		r0, [sp, #0x2C]
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_0802d89a
_0802d968:
	ldr		r1, _0802d9b0
	add		r0, r7, r1
	mov		r2, #0x0
	add		r3, sp, #0x40
	ldrb	r3, [r3, #0x0]
	strb	r3, [r0, #0x0]
	mov		r0, #0xf
	ldr		r4, [sp, #0x1C]
	and		r0, r4
	mov		r5, #0xcc
	lsl		r5, r5, #0x1
	add		r1, r7, r5
	strb	r0, [r1, #0x0]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	ldr		r3, _0802d9b4
	add		r0, r7, r3
	strb	r2, [r0, #0x0]
	mov		r4, #0xd0
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	add		r5, #0xc
	add		r0, r7, r5
	str		r2, [r0, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x60
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0802d9b0:	.4byte 0x00000199
_0802d9b4:	.4byte 0x00000197
	thumb_func_end sub_0802d380

	thumb_func_start sub_0802d9b8
sub_0802d9b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r10, r1
	add		r4, r5, #0x0
	add		r4, #0x40
	ldr		r0, _0802daf4
	str		r0, [r5, #0x4c]
	ldr		r0, _0802daf8
	str		r0, [r5, #0xc]
	ldr		r1, _0802dafc
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, [r5, #0x40]
	cmp		r0, #0x0
	beq		_0802d9e4
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_0802d9e4:
	ldr		r2, [r5, #0x54]
	mov		r9, r4
	add		r7, r5, #0x0
	add		r7, #0xe8
	mov		r0, #0x58
	add		r0, r0, r5
	mov		r8, r0
	cmp		r2, #0x0
	beq		_0802da1e
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r4, r2, r0
	cmp		r2, r4
	beq		_0802da16
_0802da06:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x54]
	cmp		r0, r4
	bne		_0802da06
_0802da16:
	ldr		r0, [r5, #0x54]
	sub		r0, #0x4
	bl		sub_0808afd0
_0802da1e:
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0802da5a
	sub		r0, r1, #0x4
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	add		r4, r1, r0
	cmp		r1, r4
	beq		_0802da4c
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r6, r5, r0
_0802da3c:
	sub		r4, #0x10
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0802e40c
	ldr		r0, [r6, #0x0]
	cmp		r0, r4
	bne		_0802da3c
_0802da4c:
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	sub		r0, #0x4
	bl		sub_0808afd0
_0802da5a:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802da6a
	bl		sub_0808afd0
_0802da6a:
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0802daaa
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r4, r2, r0
	cmp		r2, r4
	beq		_0802da9c
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r6, r5, r0
_0802da8c:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0802e91c
	ldr		r0, [r6, #0x0]
	cmp		r0, r4
	bne		_0802da8c
_0802da9c:
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	sub		r0, #0x4
	bl		sub_0808afd0
_0802daaa:
	mov		r1, #0xbe
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0802e40c
	add		r0, r7, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, r8
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802dae6
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0802dae6:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802daf4:	.4byte 0x080e136c
_0802daf8:	.4byte 0x080e1384
_0802dafc:	.4byte 0x0200D524
	thumb_func_end sub_0802d9b8

	thumb_func_start sub_0802db00
sub_0802db00:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r0, _0802db20
	cmp		r1, r0
	beq		_0802db6a
	cmp		r1, r0
	bgt		_0802db28
	ldr		r0, _0802db24
	cmp		r1, r0
	beq		_0802db54
	b		_0802dcf8

_0802db20:	.4byte 0xFFFFF801
_0802db24:	.4byte 0xFFFFF005

_0802db28:
	cmp		r1, #0x0
	beq		_0802db2e
	b		_0802dcf8
_0802db2e:
	mov		r0, #0xd0
	lsl		r0, r0, #0x1
	add		r4, r5, r0
_0802db34:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802db46
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0802db50
	mov		r3, #0x0
	bl		sub_080b7724
_0802db46:
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0802db34

.incbin "base.gba", 0x2DB4E, 0x2

_0802db50:	.4byte 0xFFFFF005

_0802db54:
	add		r7, r5, #0x0
	add		r7, #0x40
_0802db58:
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0802db58
_0802db6a:
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	add		r7, r5, #0x0
	add		r7, #0x40
	cmp		r0, #0x0
	bne		_0802db8c
_0802db7a:
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0802db7a
_0802db8c:
	mov		r2, #0xcb
	lsl		r2, r2, #0x1
	add		r6, r5, r2
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	add		r4, r5, #0x0
	add		r4, #0x58
	cmp		r0, #0x0
	bne		_0802dba6
	ldr		r1, _0802dcf4
	add		r0, r4, #0x0
	bl		sub_0808e03c
_0802dba6:
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	add		r0, #0xc8
	bl		sub_0808b3d4
	add		r0, r5, #0x0
	add		r0, #0xc1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0xac
	mov		r3, #0x0
	mov		r0, #0x78
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xb4
	strh	r1, [r0, #0x0]
	add		r2, r5, #0x0
	add		r2, #0xbc
	strb	r3, [r2, #0x0]
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r7, r5, #0x0
	add		r7, #0x40
	str		r4, [sp, #0x0]
	mov		r9, r2
	mov		r1, #0xae
	add		r1, r1, r5
	mov		r8, r1
	sub		r2, #0x6
	str		r2, [sp, #0x4]
	mov		r0, #0xb8
	add		r0, r0, r5
	mov		r10, r0
	mov		r6, #0x0
	mov		r4, #0xe
_0802dbfe:
	add		r0, r6, #0x0
	mov		r1, #0xf
	bl		sub_080bbcac
	sub		r0, #0x20
	mov		r1, r8
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, #0x70
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802dbfe
	mov		r0, #0x50
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r4, #0x3b
_0802dc2c:
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802dc2c
	mov		r0, #0x1
	mov		r1, r9
	strb	r0, [r1, #0x0]
	mov		r6, #0x0
	mov		r2, #0xcb
	lsl		r2, r2, #0x1
	add		r4, r5, r2
	mov		r0, #0xb4
	lsl		r0, r0, #0x4
	mov		r9, r0
_0802dc56:
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r2, [r5, #0x54]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r0, r0, r2
	add		r0, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	sub		r0, #0x78
	mul		r0, r6
	mov		r1, #0xf
	bl		sub_080bbcac
	add		r0, #0x78
	ldr		r2, [sp, #0x0]
	strh	r0, [r2, #0x0]
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r2, [r5, #0x54]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r0, r0, r2
	add		r0, #0x56
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	sub		r0, #0x50
	mul		r0, r6
	mov		r1, #0xf
	bl		sub_080bbcac
	add		r0, #0x50
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r0, r9
	mov		r1, #0xf
	bl		sub_080bbcac
	add		r0, #0x40
	ldr		r1, [sp, #0x4]
	strh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r0, #0xc0
	neg		r0, r0
	add		r9, r0
	add		r6, #0x1
	cmp		r6, #0xe
	ble		_0802dc56
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r2, r5, r1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x0
	strb	r0, [r2, #0x0]
	mov		r2, #0xd2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	str		r1, [r0, #0x0]
_0802dce2:
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0802dce2

_0802dcf4:	.4byte 0x00000109

_0802dcf8:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802db00

	thumb_func_start sub_0802dd08
sub_0802dd08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802ddea
	ldr		r2, _0802ddf8
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xc
	beq		_0802dd4c
	cmp		r0, #0x5
	beq		_0802dd4c
	cmp		r0, #0x6
	beq		_0802dd4c
	cmp		r0, #0xa
	beq		_0802dd4c
	cmp		r0, #0xd
	beq		_0802dd4c
	add		r0, r4, #0x0
	add		r0, #0xe8
	bl		sub_0808e4a0
	mov		r1, #0xbe
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0802e964
_0802dd4c:
	mov		r5, #0x0
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	bge		_0802dda8
	mov		r0, #0xcb
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r10, r0
	ldr		r1, _0802ddfc
	add		r1, r1, r4
	mov		r9, r1
	sub		r2, #0x24
	add		r2, r2, r4
	mov		r8, r2
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r7, r4, r0
	mov		r6, #0x0
_0802dd76:
	ldr		r0, [r4, #0x54]
	add		r0, r0, r6
	bl		sub_0808e4a0
	mov		r1, r10
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r5, r0
	bge		_0802dd9e
	mov		r2, r9
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r5, r0
	bge		_0802dd9e
	lsl		r1, r5, #0x4
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	bl		sub_0802e964
_0802dd9e:
	add		r6, #0x90
	add		r5, #0x1
	ldrb	r0, [r7, #0x0]
	cmp		r5, r0
	blt		_0802dd76
_0802dda8:
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802ddc8
	add		r1, r4, #0x0
	add		r1, #0xc1
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x58
	bl		sub_0808e4a0
_0802ddc8:
	mov		r2, #0xc6
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802ddea
	add		r6, r4, r2
	mov		r5, #0x0
	mov		r4, #0x4
_0802ddda:
	ldr		r0, [r6, #0x0]
	add		r0, r0, r5
	bl		sub_0802e910
	add		r5, #0x90
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802ddda
_0802ddea:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802ddf8:	.4byte 0x0000019B
_0802ddfc:	.4byte 0x00000197
	thumb_func_end sub_0802dd08

	thumb_func_start sub_0802de00
sub_0802de00:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r10, r0
	mov		r9, r1
	add		r5, r2, #0x0
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0802de22
	add		r0, r3, r0
	add		r6, r0, #0x1
	b		_0802de24
_0802de22:
	add		r6, r3, #0x0
_0802de24:
	mov		r0, #0x1
	neg		r0, r0
	cmp		r9, r0
	bne		_0802de2e
	b		_0802df60
_0802de2e:
	mov		r7, #0x0
	add		r0, r5, r6
	mov		r8, r0
	cmp		r7, r6
	bge		_0802df16
_0802de38:
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0802de6a
	ldrb	r1, [r1, #0x0]
	cmp		r7, r1
	beq		_0802de6a
	mov		r0, r9
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r4, r0, #0x0
	mov		r0, r9
	mov		r1, #0xa
	bl		sub_080bbcac
	mov		r9, r0
	sub		r0, r6, r7
	add		r0, r0, r5
	sub		r0, #0x1
	add		r4, #0x30
	strb	r4, [r0, #0x0]
	b		_0802df10
_0802de6a:
	ldr		r0, _0802de80
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r0, #0xb
	bhi		_0802df04
	lsl		r0, r0, #0x2
	ldr		r1, _0802de84
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0802de80:	.4byte 0x0000019B
_0802de84:	.4byte 0x0802de88
_0802de88:	.4byte 0x0802deb8

.incbin "base.gba", 0x2DE8C, 0x2C

_0802deb8:
.incbin "base.gba", 0x2DEB8, 0x4
.incbin "base.gba", 0x2DEBC, 0x4
.incbin "base.gba", 0x2DEC0, 0x4

.incbin "base.gba", 0x2DEC4, 0x18
	thumb_func_end sub_0802de00


.incbin "base.gba", 0x2DEDC, 0x28

_0802df04:

.incbin "base.gba", 0x2DF04, 0xC
_0802df10:

.incbin "base.gba", 0x2DF10, 0x6
_0802df16:

.incbin "base.gba", 0x2DF16, 0x10
_0802df26:

.incbin "base.gba", 0x2DF26, 0xA
_0802df30:

.incbin "base.gba", 0x2DF30, 0xA
_0802df3a:

.incbin "base.gba", 0x2DF3A, 0x8
_0802df42:

.incbin "base.gba", 0x2DF42, 0xC
_0802df4e:

.incbin "base.gba", 0x2DF4E, 0x6
_0802df54:	.4byte 0x080d2cac @ a_kobayashi/Practice.cpp
_0802df58:	.4byte 0x00000221
_0802df5c:	.4byte 0x00000199

_0802df60:

.incbin "base.gba", 0x2DF60, 0xE
_0802df6e:

.incbin "base.gba", 0x2DF6E, 0xA
_0802df78:	.4byte 0x0000019B
_0802df7c:	.4byte 0x0802df80
_0802df80:	.4byte 0x0802e028

.incbin "base.gba", 0x2DF84, 0x13C

_0802e0c0:

.incbin "base.gba", 0x2E0C0, 0x10
_0802e0d0:

.incbin "base.gba", 0x2E0D0, 0x14
_0802e0e4:	.4byte 0x080d2cac @ a_kobayashi/Practice.cpp
_0802e0e8:	.4byte 0x00000257
	thumb_func_start sub_0802e0ec
sub_0802e0ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r10, r0
	add		r6, r2, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0802e11c
	ldr		r0, _0802e118
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	add		r0, r0, r1
	add		r7, r0, #0x1
	b		_0802e122

_0802e118:	.4byte 0x00000199

_0802e11c:
	ldr		r0, _0802e17c
	add		r0, r10
	ldrb	r7, [r0, #0x0]
_0802e122:
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_0802e130
	b		_0802e280
_0802e130:
	mov		r0, #0x0
	mov		r8, r0
	add		r1, r6, r7
	mov		r9, r1
	cmp		r8, r7
	blt		_0802e13e
	b		_0802e23c
_0802e13e:
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0802e150
	ldrb	r1, [r1, #0x0]
	cmp		r8, r1
	beq		_0802e180
_0802e150:
	lsl		r5, r5, #0x10
	asr		r5, r5, #0x10
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	mov		r1, r8
	sub		r0, r7, r1
	add		r0, r0, r6
	sub		r0, #0x1
	add		r4, #0x30
	strb	r4, [r0, #0x0]
	b		_0802e232

_0802e17c:	.4byte 0x00000199

_0802e180:
	ldr		r0, _0802e198
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r0, #0xb
	bhi		_0802e224
	lsl		r0, r0, #0x2
	ldr		r1, _0802e19c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2E196, 0x2

_0802e198:	.4byte 0x0000019B
_0802e19c:	.4byte 0x0802e1a0
_0802e1a0:	.4byte 0x0802e1d0

.incbin "base.gba", 0x2E1A4, 0x2C
	thumb_func_end sub_0802e0ec


.incbin "base.gba", 0x2E1D0, 0x54

_0802e224:

.incbin "base.gba", 0x2E224, 0xE
_0802e232:

.incbin "base.gba", 0x2E232, 0xA
_0802e23c:

.incbin "base.gba", 0x2E23C, 0x10
_0802e24c:

.incbin "base.gba", 0x2E24C, 0xA
_0802e256:

.incbin "base.gba", 0x2E256, 0xA
_0802e260:

.incbin "base.gba", 0x2E260, 0x8
_0802e268:

.incbin "base.gba", 0x2E268, 0xC
_0802e274:

.incbin "base.gba", 0x2E274, 0x4
_0802e278:	.4byte 0x080d2cac @ a_kobayashi/Practice.cpp
_0802e27c:	.4byte 0x00000199

_0802e280:

.incbin "base.gba", 0x2E280, 0xE
_0802e28e:

.incbin "base.gba", 0x2E28E, 0xA
_0802e298:	.4byte 0x0000019B
_0802e29c:	.4byte 0x0802e2a0
_0802e2a0:	.4byte 0x0802e348

.incbin "base.gba", 0x2E2A4, 0x2C

_0802e2d0:

.incbin "base.gba", 0x2E2D0, 0xC
_0802e2dc:

.incbin "base.gba", 0x2E2DC, 0x4
_0802e2e0:

.incbin "base.gba", 0x2E2E0, 0x14
_0802e2f4:

.incbin "base.gba", 0x2E2F4, 0x4
_0802e2f8:

.incbin "base.gba", 0x2E2F8, 0xC
_0802e304:

.incbin "base.gba", 0x2E304, 0x4
_0802e308:

.incbin "base.gba", 0x2E308, 0x18
_0802e320:

.incbin "base.gba", 0x2E320, 0xC
_0802e32c:

.incbin "base.gba", 0x2E32C, 0x4
_0802e330:

.incbin "base.gba", 0x2E330, 0x50

_0802e380:

.incbin "base.gba", 0x2E380, 0x10
_0802e390:

.incbin "base.gba", 0x2E390, 0xC
_0802e39c:

.incbin "base.gba", 0x2E39C, 0x4
_0802e3a0:

.incbin "base.gba", 0x2E3A0, 0x14
_0802e3b4:

.incbin "base.gba", 0x2E3B4, 0x4
_0802e3b8:

.incbin "base.gba", 0x2E3B8, 0xC
_0802e3c4:

.incbin "base.gba", 0x2E3C4, 0x4
_0802e3c8:

.incbin "base.gba", 0x2E3C8, 0x18
_0802e3e0:

.incbin "base.gba", 0x2E3E0, 0x10
_0802e3f0:

.incbin "base.gba", 0x2E3F0, 0x14
_0802e404:	.4byte 0x080d2cac @ a_kobayashi/Practice.cpp
_0802e408:	.4byte 0x000002C6
	thumb_func_start sub_0802e40c
sub_0802e40c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r2, [r5, #0x0]
	cmp		r2, #0x0
	beq		_0802e440
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r4, r2, r0
	cmp		r2, r4
	beq		_0802e438
_0802e428:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x0]
	cmp		r0, r4
	bne		_0802e428
_0802e438:
	ldr		r0, [r5, #0x0]
	sub		r0, #0x4
	bl		sub_0808afd0
_0802e440:
	ldrb	r0, [r5, #0xd]
	cmp		r0, #0x0
	beq		_0802e480
	ldr		r2, [r5, #0x8]
	cmp		r2, #0x0
	beq		_0802e474
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r4, r2, r0
	cmp		r2, r4
	beq		_0802e46c
_0802e45c:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x8]
	cmp		r0, r4
	bne		_0802e45c
_0802e46c:
	ldr		r0, [r5, #0x8]
	sub		r0, #0x4
	bl		sub_0808afd0
_0802e474:
	ldr		r0, [r5, #0x4]
	cmp		r0, #0x0
	beq		_0802e480
	mov		r1, #0x3
	bl		sub_0808e28c
_0802e480:
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_0802e48e
	add		r0, r5, #0x0
	bl		sub_0808afac
_0802e48e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802e40c

	thumb_func_start sub_0802e494
sub_0802e494:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	ldr		r0, [sp, #0x0+0x30]
	lsl		r1, r1, #0x18
	lsr		r4, r1, #0x18
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	str		r2, [sp, #0x0]
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	str		r3, [sp, #0x4]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [sp, #0x8]
	mov		r0, #0x0
	mov		r10, r0
	lsr		r1, r1, #0x1c
	strb	r1, [r7, #0xc]
	mov		r0, #0xf
	and		r4, r0
	strb	r4, [r7, #0xd]
	ldrb	r4, [r7, #0xc]
	lsl		r0, r4, #0x3
	add		r0, r0, r4
	lsl		r0, r0, #0x4
	add		r0, #0x4
	bl		sub_0808afb8
	stmia	r0!, {  r4 }
	add		r6, r0, #0x0
	add		r5, r6, #0x0
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_0802e506
	mov		r1, #0x0
	mov		r9, r1
	mov		r8, r0
_0802e4ec:
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r2, r9
	str		r2, [r5, #0x6c]
	add		r5, #0x90
	sub		r4, #0x1
	cmp		r4, r8
	bne		_0802e4ec
_0802e506:
	str		r6, [r7, #0x0]
	mov		r6, #0x0
	ldrb	r3, [r7, #0xc]
	cmp		r6, r3
	bge		_0802e56a
	ldr		r4, [sp, #0x4]
	lsl		r0, r4, #0x10
	asr		r5, r0, #0x10
	mov		r0, #0x0
	mov		r9, r0
	mov		r1, #0x0
	mov		r8, r1
	mov		r4, #0x0
_0802e520:
	ldr		r0, [r7, #0x0]
	add		r0, r0, r4
	ldr		r1, [sp, #0x0]
	bl		sub_0808e03c
	ldr		r1, [r7, #0x0]
	add		r1, r4, r1
	ldrb	r0, [r7, #0xc]
	mov		r2, r10
	add		r2, #0x1
	sub		r0, r0, r2
	lsl		r0, r0, #0x3
	add		r0, r5, r0
	add		r1, #0x54
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, r4, r0
	add		r0, #0x56
	mov		r3, sp
	ldrh		r3, [r3, #0x8]
	strh	r3, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, r4, r0
	add		r0, #0x5c
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, r4, r0
	add		r0, #0x69
	mov		r3, r9
	strb	r3, [r0, #0x0]
	mov		r10, r2
	add		r4, #0x90
	add		r6, #0x1
	ldrb	r0, [r7, #0xc]
	cmp		r6, r0
	blt		_0802e520
_0802e56a:
	ldrb	r0, [r7, #0xd]
	cmp		r0, #0x0
	bne		_0802e572
	b		_0802e6be
_0802e572:
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, #0x0
	str		r0, [r4, #0x6c]
	str		r4, [r7, #0x4]
	add		r0, r4, #0x0
	ldr		r1, [sp, #0x0]
	bl		sub_0808e03c
	ldrb	r0, [r7, #0xf]
	cmp		r0, #0x3
	beq		_0802e5a2
	cmp		r0, #0x1
	beq		_0802e5a2
	cmp		r0, #0x2
	bne		_0802e5c4
_0802e5a2:
	ldr		r0, _0802e5b0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802e5b8
	ldr		r0, _0802e5b4
	b		_0802e5ba

_0802e5b0:	.4byte 0x00000836
_0802e5b4:	.4byte 0x080d2ccb

_0802e5b8:
	ldr		r0, _0802e5d0
_0802e5ba:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x2e
	bne		_0802e5d4
_0802e5c4:
	ldr		r0, [r7, #0x4]
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_0802e5de

_0802e5d0:	.4byte 0x080d2cd3

_0802e5d4:
	ldr		r0, [r7, #0x4]
	mov		r1, #0xb
	mov		r2, #0x0
	bl		sub_0808e3c0
_0802e5de:
	ldr		r0, [r7, #0x4]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r1, [r7, #0x4]
	mov		r3, r10
	lsl		r2, r3, #0x3
	ldr		r4, [sp, #0x4]
	lsl		r5, r4, #0x10
	asr		r0, r5, #0x10
	add		r0, r0, r2
	add		r1, #0x54
	mov		r3, #0x0
	mov		r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x4]
	add		r0, #0x56
	mov		r1, sp
	ldrh		r1, [r1, #0x8]
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x4]
	add		r0, #0x5c
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x4]
	add		r0, #0x69
	strb	r3, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x8
	str		r2, [sp, #0xC]
	ldrb	r4, [r7, #0xd]
	lsl		r0, r4, #0x3
	add		r0, r0, r4
	lsl		r0, r0, #0x4
	add		r0, #0x4
	bl		sub_0808afb8
	stmia	r0!, {  r4 }
	mov		r8, r0
	mov		r6, r8
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	mov		r10, r5
	cmp		r4, r0
	beq		_0802e658
	mov		r3, #0x0
	mov		r9, r3
	add		r5, r0, #0x0
_0802e63e:
	add		r0, r6, #0x0
	bl		sub_0808e21c
	add		r0, r6, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r9
	str		r0, [r6, #0x6c]
	add		r6, #0x90
	sub		r4, #0x1
	cmp		r4, r5
	bne		_0802e63e
_0802e658:
	mov		r1, r8
	ldr		r2, [sp, #0xC]
	str		r1, [r2, #0x0]
	mov		r6, #0x0
	ldrb	r3, [r7, #0xd]
	cmp		r6, r3
	bge		_0802e6c2
	mov		r4, r10
	asr		r5, r4, #0x10
	mov		r0, #0x0
	mov		r9, r0
	mov		r1, #0x0
	mov		r8, r1
	mov		r4, #0x0
_0802e674:
	ldr		r0, [r7, #0x8]
	add		r0, r0, r4
	ldr		r1, [sp, #0x0]
	bl		sub_0808e03c
	ldr		r2, [r7, #0x8]
	add		r2, r4, r2
	ldrb	r0, [r7, #0xc]
	ldrb	r1, [r7, #0xd]
	add		r0, r0, r1
	sub		r0, r0, r6
	lsl		r0, r0, #0x3
	add		r0, r5, r0
	add		r2, #0x54
	strh	r0, [r2, #0x0]
	ldr		r0, [r7, #0x8]
	add		r0, r4, r0
	add		r0, #0x56
	mov		r2, sp
	ldrh		r2, [r2, #0x8]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x8]
	add		r0, r4, r0
	add		r0, #0x5c
	mov		r3, r8
	strh	r3, [r0, #0x0]
	ldr		r0, [r7, #0x8]
	add		r0, r4, r0
	add		r0, #0x69
	mov		r1, r9
	strb	r1, [r0, #0x0]
	add		r4, #0x90
	add		r6, #0x1
	ldrb	r2, [r7, #0xd]
	cmp		r6, r2
	blt		_0802e674
	b		_0802e6c2
_0802e6be:
	str		r0, [r7, #0x4]
	str		r0, [r7, #0x8]
_0802e6c2:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2E6D2, 0x2
	thumb_func_end sub_0802e494

	thumb_func_start sub_0802e6d4
sub_0802e6d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	mov		r0, #0x0
	mov		r9, r0
	mov		r1, r9
	strb	r1, [r5, #0xe]
	mov		r8, r0
	ldrb	r2, [r5, #0xd]
	cmp		r9, r2
	bge		_0802e762
	mov		r10, r0
	mov		r6, #0x0
_0802e6f8:
	lsl		r0, r7, #0x10
	asr		r4, r0, #0x10
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_0802e72c
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r9, r0
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	ldr		r0, [r5, #0x8]
	add		r0, r0, r6
	mov		r1, r9
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_0802e738
_0802e72c:
	ldr		r0, [r5, #0x8]
	add		r0, r0, r6
	mov		r1, #0x17
	mov		r2, #0x0
	bl		sub_0808e3c0
_0802e738:
	ldr		r0, [r5, #0x8]
	add		r0, r6, r0
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r5, #0x8]
	add		r0, r6, r0
	add		r0, #0x69
	mov		r1, r10
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x8]
	add		r0, r6, r0
	add		r0, #0x5c
	mov		r2, r10
	strh	r2, [r0, #0x0]
	add		r6, #0x90
	mov		r0, #0x1
	add		r8, r0
	ldrb	r1, [r5, #0xd]
	cmp		r8, r1
	blt		_0802e6f8
_0802e762:
	ldrb	r0, [r5, #0xd]
	cmp		r0, #0x0
	beq		_0802e7ae
	ldr		r4, [r5, #0x4]
	ldr		r0, _0802e778
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802e780
	ldr		r0, _0802e77c
	b		_0802e782

_0802e778:	.4byte 0x00000836
_0802e77c:	.4byte 0x080d2ccb

_0802e780:
	ldr		r0, _0802e7f4
_0802e782:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r1, #0xb
	cmp		r0, #0x2e
	bne		_0802e790
	mov		r1, #0xa
_0802e790:
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x4]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r5, #0x4]
	add		r0, #0x69
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x4]
	add		r0, #0x5c
	strh	r1, [r0, #0x0]
_0802e7ae:
	mov		r2, #0x0
	mov		r8, r2
	lsl		r0, r7, #0x10
	ldrb	r1, [r5, #0xc]
	cmp		r8, r1
	bge		_0802e844
	mov		r10, r2
	mov		r6, #0x0
_0802e7be:
	lsl		r0, r7, #0x10
	asr		r4, r0, #0x10
	mov		r2, #0x1
	neg		r2, r2
	cmp		r4, r2
	beq		_0802e7f8
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r9, r0
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	ldr		r0, [r5, #0x0]
	add		r0, r0, r6
	mov		r1, r9
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_0802e804

.incbin "base.gba", 0x2E7F2, 0x2

_0802e7f4:	.4byte 0x080d2cd3

_0802e7f8:
	ldr		r0, [r5, #0x0]
	add		r0, r0, r6
	mov		r1, #0x17
	mov		r2, #0x0
	bl		sub_0808e3c0
_0802e804:
	ldr		r0, [r5, #0x0]
	add		r0, r6, r0
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r5, #0x0]
	add		r0, r6, r0
	add		r0, #0x69
	mov		r1, r10
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, r6, r0
	add		r0, #0x5c
	mov		r2, r10
	strh	r2, [r0, #0x0]
	lsl		r0, r7, #0x10
	asr		r1, r0, #0x10
	mov		r2, #0x1
	neg		r2, r2
	cmp		r1, r2
	beq		_0802e834
	mov		r1, r9
	cmp		r1, #0x0
	beq		_0802e838
_0802e834:
	mov		r2, r8
	strb	r2, [r5, #0xe]
_0802e838:
	add		r6, #0x90
	mov		r1, #0x1
	add		r8, r1
	ldrb	r2, [r5, #0xc]
	cmp		r8, r2
	blt		_0802e7be
_0802e844:
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r0, r0, #0x10
	cmp		r0, #0x1
	bls		_0802e85e
	ldr		r0, _0802e6d0
	mov		r1, #0xdc
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802e85e:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802e6d0:	.4byte 0x080d2cac @ a_kobayashi/Practice.cpp
	thumb_func_end sub_0802e6d4

	thumb_func_start sub_0802e870
sub_0802e870:
	push	{ r4, lr }
	add		r2, r0, #0x0
	mov		r3, #0x0
	ldrb	r0, [r2, #0xd]
	cmp		r3, r0
	bge		_0802e894
	mov		r4, #0x0
_0802e87e:
	ldr		r1, [r2, #0x8]
	add		r1, r4, r1
	add		r1, #0x56
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	add		r4, #0x90
	add		r3, #0x1
	ldrb	r0, [r2, #0xd]
	cmp		r3, r0
	blt		_0802e87e
_0802e894:
	ldrb	r0, [r2, #0xd]
	cmp		r0, #0x0
	beq		_0802e8a4
	ldr		r1, [r2, #0x4]
	add		r1, #0x56
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
_0802e8a4:
	mov		r3, #0x0
	ldrb	r0, [r2, #0xc]
	cmp		r3, r0
	bge		_0802e8c4
	mov		r4, #0x0
_0802e8ae:
	ldr		r1, [r2, #0x0]
	add		r1, r4, r1
	add		r1, #0x56
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	add		r4, #0x90
	add		r3, #0x1
	ldrb	r0, [r2, #0xc]
	cmp		r3, r0
	blt		_0802e8ae
_0802e8c4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2E8CA, 0x2
	thumb_func_end sub_0802e870

	thumb_func_start sub_0802e8cc
sub_0802e8cc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	add		r0, #0x70
	bl		sub_0808b3d4
	add		r1, r5, #0x0
	add		r1, #0x69
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	sub		r1, #0x15
	mov		r0, #0xef
	strh	r0, [r1, #0x0]
	add		r1, #0x8
	ldr		r0, _0802e90c
	strh	r0, [r1, #0x0]
	mov		r0, #0x4
	sub		r0, r0, r4
	lsl		r0, r0, #0x4
	mov		r1, #0x9f
	sub		r1, r1, r0
	add		r0, r5, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2E90A, 0x2

_0802e90c:	.4byte 0x0000FFF6
	thumb_func_end sub_0802e8cc

	thumb_func_start sub_0802e910
sub_0802e910:
	push	{ lr }
	bl		sub_0808e4a0
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2E91A, 0x2
	thumb_func_end sub_0802e910

	thumb_func_start sub_0802e91c
sub_0802e91c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0802e936
	add		r0, r5, #0x0
	bl		sub_0808afac
_0802e936:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802e91c

	thumb_func_start sub_0802e93c
sub_0802e93c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, #0x0
	str		r0, [r4, #0x6c]
	ldr		r1, _0802e960
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0802e960:	.4byte 0x0000010F
	thumb_func_end sub_0802e93c

	thumb_func_start sub_0802e964
sub_0802e964:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	mov		r4, #0x0
	ldrb	r0, [r6, #0xd]
	cmp		r4, r0
	bge		_0802e984
	mov		r5, #0x0
_0802e972:
	ldr		r0, [r6, #0x8]
	add		r0, r0, r5
	bl		sub_0808e4a0
	add		r5, #0x90
	add		r4, #0x1
	ldrb	r0, [r6, #0xd]
	cmp		r4, r0
	blt		_0802e972
_0802e984:
	ldrb	r0, [r6, #0xd]
	cmp		r0, #0x0
	beq		_0802e990
	ldr		r0, [r6, #0x4]
	bl		sub_0808e4a0
_0802e990:
	ldrb	r4, [r6, #0xe]
	cmp		r4, #0x0
	blt		_0802e9ac
	lsl		r0, r4, #0x3
	add		r0, r0, r4
	lsl		r5, r0, #0x4
_0802e99c:
	ldr		r0, [r6, #0x0]
	add		r0, r0, r5
	bl		sub_0808e4a0
	sub		r5, #0x90
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802e99c
_0802e9ac:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2E9B2, 0x2
	thumb_func_end sub_0802e964

	thumb_func_start sub_0802e9b4
sub_0802e9b4:
	strb	r1, [r0, #0xf]
	bx		lr
	thumb_func_end sub_0802e9b4

	thumb_func_start sub_0802e9b8
sub_0802e9b8:
	push	{ r4, r5, r6, lr }
	add		r1, r0, #0x0
	mov		r4, #0x0
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldrb	r2, [r0, #0x0]
	cmp		r4, r2
	bge		_0802e9f4
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	mov		r5, #0x1
	neg		r5, r5
	ldr		r1, [r0, #0x0]
	add		r3, r2, #0x0
_0802e9d8:
	ldrh	r2, [r1, #0x0]
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	cmp		r0, r5
	beq		_0802e9ec
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r2
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
_0802e9ec:
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802e9d8
_0802e9f4:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2E9FE, 0x2
	thumb_func_end sub_0802e9b8

	thumb_func_start sub_0802ea00
sub_0802ea00:
	push	{ r4, lr }
	add		r2, r0, #0x0
	mov		r4, #0x0
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldrb	r1, [r0, #0x0]
	cmp		r4, r1
	bge		_0802ea32
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r2, [r0, #0x0]
	add		r3, r1, #0x0
_0802ea1c:
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	cmp		r1, r0
	ble		_0802ea2a
	ldrh	r4, [r2, #0x0]
_0802ea2a:
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802ea1c
_0802ea32:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0802ea00

	thumb_func_start sub_0802ea3c
sub_0802ea3c:
	push	{ r4, r5, r6, r7, lr }
	add		r1, r0, #0x0
	ldr		r6, _0802ea8c
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802ea82
	mov		r5, #0x1
	neg		r5, r5
	mov		r7, #0xc8
	lsl		r7, r7, #0x1
	add		r4, r1, r7
	mov		r2, #0x0
	add		r3, r0, #0x0
_0802ea5c:
	lsl		r0, r6, #0x10
	asr		r1, r0, #0x10
	cmp		r1, r5
	beq		_0802ea74
	ldr		r0, [r4, #0x0]
	add		r0, r2, r0
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r0, r1
	bge		_0802ea7a
	cmp		r0, r5
	beq		_0802ea7a
_0802ea74:
	ldr		r0, [r4, #0x0]
	add		r0, r2, r0
	ldrh	r6, [r0, #0x0]
_0802ea7a:
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802ea5c
_0802ea82:
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0802ea8c:	.4byte 0x0000FFFF
	thumb_func_end sub_0802ea3c

	thumb_func_start sub_0802ea90
sub_0802ea90:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	ldr		r0, _0802eadc
	add		r4, r2, r0
	mov		r3, #0x0
	ldrsb	r3, [r4, r3]
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	cmp		r3, r0
	bge		_0802ead6
	sub		r1, #0xc
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r3, #0x1
	add		r0, r0, r1
	strh	r5, [r0, #0x0]
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl		r1, r1, #0x4
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	bl		sub_0802e6d4
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
_0802ead6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0802eadc:	.4byte 0x00000197

.incbin "base.gba", 0x2EAE0, 0x94
	thumb_func_end sub_0802ea90

	thumb_func_start sub_0802eb74
sub_0802eb74:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r5, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	str		r1, [sp, #0x0]
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	str		r2, [sp, #0x4]
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	str		r3, [sp, #0x8]
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0802ec88
	str		r0, [r5, #0x4c]
	ldr		r0, _0802ec8c
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x54
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0xc4
	bl		sub_0808b374
	add		r0, r5, #0x0
	add		r0, #0xc0
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r0, #0x24
	bl		sub_0808e21c
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r2, #0xa8
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	str		r4, [r0, #0x0]
	mov		r3, #0xba
	lsl		r3, r3, #0x1
	add		r4, r5, r3
	mov		r6, #0x7
	mov		r0, #0x0
	mov		r8, r0
	mov		r7, #0x1
	neg		r7, r7
_0802ebe8:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r1, r8
	str		r1, [r4, #0x6c]
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, r7
	bne		_0802ebe8
	mov		r2, #0x54
	add		r2, r2, r5
	mov		r8, r2
	add		r3, r5, #0x0
	add		r3, #0xc4
	str		r3, [sp, #0x10]
	mov		r0, #0xe4
	add		r0, r0, r5
	mov		r10, r0
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r1, r5, r1
	str		r1, [sp, #0xC]
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r2, r5, r2
	str		r2, [sp, #0x14]
	mov		r3, #0x0
	mov		r9, r3
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldr		r1, _0802ec90
	add		r7, r5, r1
	mov		r6, #0x7
_0802ec34:
	mov		r2, r9
	stmia	r7!, {  r2 }
	add		r0, r4, #0x0
	mov		r1, #0xfb
	bl		sub_0808e03c
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0802ec34
	ldr		r3, _0802ec94
	add		r1, r5, r3
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r4, _0802ec98
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802ec64
	ldr		r0, _0802ec9c
	mov		r1, #0x2c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802ec64:
	str		r5, [r4, #0x0]
	mov		r0, r8
	mov		r1, #0xfb
	bl		sub_0808e03c
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	bne		_0802eca0
	mov		r0, r8
	mov		r1, #0xf
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r2, #0xbf
	lsl		r2, r2, #0x3
	add		r1, r5, r2
	mov		r0, #0x2e
	b		_0802ecb2

_0802ec88:	.4byte 0x080e13ac
_0802ec8c:	.4byte 0x080e13c4
_0802ec90:	.4byte 0x000005FC
_0802ec94:	.4byte 0x000005F4
_0802ec98:	.4byte 0x0200D528
_0802ec9c:	.4byte 0x080d2d2c @ a_kobayashi/PositionBar.cpp

_0802eca0:
	mov		r0, r8
	mov		r1, #0x10
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r3, #0xbf
	lsl		r3, r3, #0x3
	add		r1, r5, r3
	mov		r0, #0x5e
_0802ecb2:
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x10]
	bl		sub_0808b3d4
	mov		r0, r10
	mov		r1, #0xfb
	bl		sub_0808e03c
	ldr		r0, [sp, #0x14]
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r0, r10
	mov		r1, #0x13
	bl		sub_0808e3c0
	ldr		r0, [sp, #0xC]
	bl		sub_0808b3d4
	ldr		r2, _0802ed0c
	add		r0, r5, r2
	mov		r1, #0x0
	mov		r3, sp
	ldrb	r3, [r3, #0x8]
	strb	r3, [r0, #0x0]
	add		r2, #0x1
	add		r0, r5, r2
	mov		r3, sp
	ldrb	r3, [r3, #0x0]
	strb	r3, [r0, #0x0]
	add		r2, #0x3
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0802ed10
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	add		r0, r5, #0x0
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2ED0A, 0x2

_0802ed0c:	.4byte 0x0000061C
_0802ed10:	.4byte 0x00000624
	thumb_func_end sub_0802eb74

	thumb_func_start sub_0802ed14
sub_0802ed14:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	ldr		r1, _0802ed48
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0802ed3c
	cmp		r0, #0x4
	beq		_0802ed50
	ldr		r0, _0802ed4c
	mov		r1, #0x77
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802ed3c:
	mov		r2, #0xf0
	lsl		r2, r2, #0x7
	str		r2, [sp, #0x0]
	mov		r3, #0x0
	str		r3, [sp, #0x4]
	b		_0802ed5c

_0802ed48:	.4byte 0x0000061C
_0802ed4c:	.4byte 0x080d2d2c @ a_kobayashi/PositionBar.cpp

_0802ed50:
	mov		r4, #0xf0
	lsl		r4, r4, #0x7
	str		r4, [sp, #0x0]
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	str		r0, [sp, #0x4]
_0802ed5c:
	mov		r1, #0xc4
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802ee00
	mov		r2, #0xbf
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	lsl		r0, r0, #0x8
	ldr		r3, [sp, #0x0]
	sub		r3, r3, r0
	str		r3, [sp, #0x0]
	mov		r4, #0xe4
	add		r4, r4, r7
	mov		r9, r4
	mov		r0, #0x54
	add		r0, r0, r7
	mov		r10, r0
	add		r1, r2, #0x0
	add		r1, r7, r1
	str		r1, [sp, #0x8]
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r6, r7, r2
	ldr		r3, _0802edf8
	add		r5, r7, r3
	mov		r4, #0x7
	mov		r8, r4
_0802ed9e:
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	beq		_0802edda
	ldr		r1, [r1, #0x0]
	ldr		r0, _0802edfc
	add		r4, r7, r0
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	ble		_0802edb2
	add		r1, r0, #0x0
_0802edb2:
	ldr		r2, [sp, #0x8]
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x8
	mov		r2, #0x8
	bl		sub_0808c118
	ldr		r1, [r4, #0x0]
	bl		sub_080bbcac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x8
	ldr		r3, [sp, #0x0]
	add		r1, r3, r1
	add		r0, r6, #0x0
	ldr		r4, [sp, #0x4]
	mov		r3, #0xa8
	lsl		r3, r3, #0x5
	add		r2, r4, r3
	bl		sub_0808e4bc
_0802edda:
	add		r6, #0x90
	add		r5, #0x4
	mov		r4, #0x1
	neg		r4, r4
	add		r8, r4
	mov		r0, r8
	cmp		r0, #0x0
	bge		_0802ed9e
	mov		r0, r9
	bl		sub_0808e4a0
	mov		r0, r10
	bl		sub_0808e4a0
	b		_0802ee88

_0802edf8:	.4byte 0x000005FC
_0802edfc:	.4byte 0x000005F4

_0802ee00:
	mov		r2, #0x0
	mov		r1, #0xe4
	add		r1, r1, r7
	mov		r9, r1
	mov		r3, #0x54
	add		r3, r3, r7
	mov		r10, r3
	add		r4, r7, #0x0
	add		r4, #0xbd
	str		r4, [sp, #0xc]
	mov		r0, #0xb0
	add		r0, r0, r7
	mov		r8, r0
	mov		r3, #0x0
	mov		r4, #0xe8
	lsl		r4, r4, #0x1
	add		r1, r7, r4
_0802ee22:
	strb	r3, [r1, #0xd]
	add		r0, r2, #0x2
	strh	r0, [r1, #0x0]
	add		r1, #0x90
	add		r2, #0x1
	cmp		r2, #0x7
	ble		_0802ee22
	mov		r6, #0x0
	mov		r1, #0xbf
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r1, [r0, #0x0]
	lsr		r0, r1, #0x1f
	add		r1, r1, r0
	asr		r1, r1, #0x1
	add		r1, #0x2
	lsl		r1, r1, #0x8
	ldr		r2, [sp, #0x0]
	add		r1, r2, r1
	mov		r2, #0xb8
	lsl		r2, r2, #0x5
	ldr		r3, [sp, #0x4]
	add		r2, r3, r2
	mov		r0, r9
	bl		sub_0808e4bc
	ldr		r4, _0802ee98
	add		r0, r7, r4
	strb	r6, [r0, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r5, #0x0
	mov		r4, #0x1
	strh	r4, [r0, #0x0]
	ldr		r3, [sp, #0x4]
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	add		r2, r3, r0
	mov		r0, r10
	ldr		r1, [sp, #0x0]
	bl		sub_0808e4bc
	ldr		r1, [sp, #0xc]
	strb	r5, [r1, #0x0]
	mov		r2, r8
	strh	r6, [r2, #0x0]
	mov		r3, #0xc4
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	str		r4, [r0, #0x0]
_0802ee88:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802ee98:	.4byte 0x0000014D
	thumb_func_end sub_0802ed14

	thumb_func_start sub_0802ee9c
sub_0802ee9c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r3, #0x0
	lsl		r2, r2, #0x18
	lsr		r4, r2, #0x18
	lsl		r1, r4, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x7
	bhi		_0802eebe
	asr		r0, r1, #0x16
	ldr		r2, _0802eef8
	add		r1, r5, r2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0802eeca
_0802eebe:
	ldr		r0, _0802eef4
	mov		r1, #0xc9
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802eeca:
	lsl		r2, r4, #0x18
	asr		r3, r2, #0x18
	lsl		r1, r3, #0x2
	ldr		r4, _0802eef8
	add		r0, r5, r4
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	add		r4, r2, #0x0
	cmp		r7, #0x0
	beq		_0802ef00
	lsl		r0, r3, #0x3
	add		r0, r0, r3
	lsl		r0, r0, #0x4
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	add		r0, r5, r0
	mov		r1, #0x11
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_0802ef16

.incbin "base.gba", 0x2EEF6, 0x2

_0802eef8:	.4byte 0x000005FC
_0802eef4:	.4byte 0x080d2d2c @ a_kobayashi/PositionBar.cpp

_0802ef00:
	lsl		r0, r3, #0x3
	add		r0, r0, r3
	lsl		r0, r0, #0x4
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r0, r5, r0
	mov		r1, #0x12
	mov		r2, #0x2
	bl		sub_0808e3c0
_0802ef16:
	asr		r1, r4, #0x18
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r0, r0, r5
	mov		r4, #0xf2
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	bl		sub_0808b3d4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802ee9c

	thumb_func_start sub_0802ef30
sub_0802ef30:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _0802ef54
	add		r5, r4, r0
_0802ef38:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0802ef4a
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0802ef4a:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0802ef38

.incbin "base.gba", 0x2EF52, 0x2

_0802ef54:	.4byte 0x00000624
	thumb_func_end sub_0802ef30

	thumb_func_start sub_0802ef58
sub_0802ef58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r10, r1
	add		r4, r5, #0x0
	add		r4, #0x40
	ldr		r0, _0802eff4
	str		r0, [r5, #0x4c]
	ldr		r0, _0802eff8
	str		r0, [r5, #0xc]
	ldr		r0, [r5, #0x40]
	cmp		r0, #0x0
	beq		_0802ef7e
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_0802ef7e:
	ldr		r1, _0802effc
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r9, r4
	add		r7, r5, #0x0
	add		r7, #0xe4
	mov		r1, #0x54
	add		r1, r1, r5
	mov		r8, r1
	cmp		r0, #0x0
	beq		_0802efb6
	ldr		r1, _0802f000
	add		r4, r5, r1
	cmp		r0, r4
	beq		_0802efb6
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r6, r5, r0
_0802efa8:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	cmp		r6, r4
	bne		_0802efa8
_0802efb6:
	add		r0, r7, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, r8
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802efe6
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0802efe6:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802eff4:	.4byte 0x080e13ac
_0802eff8:	.4byte 0x080e13c4
_0802effc:	.4byte 0x0200D528
_0802f000:	.4byte 0x000005F4

.incbin "base.gba", 0x2F004, 0x24
	thumb_func_end sub_0802ef58

	thumb_func_start sub_0802f028
sub_0802f028:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, [sp, #0x0+0x2c]
	mov		r8, r0
	ldr		r1, [sp, #0x4+0x2c]
	mov		r9, r1
	lsl		r6, r6, #0x18
	lsr		r6, r6, #0x18
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	str		r2, [sp, #0x0]
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	str		r3, [sp, #0x4]
	mov		r2, r8
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r8, r2
	mov		r0, r9
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r9, r0
	add		r0, r7, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0802f140
	str		r0, [r7, #0x4c]
	ldr		r0, _0802f144
	str		r0, [r7, #0xc]
	add		r5, r7, #0x0
	add		r5, #0x54
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r1, r7, #0x0
	add		r1, #0xc4
	str		r1, [sp, #0x8]
	add		r0, r1, #0x0
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xe4
	add		r0, r4, #0x0
	bl		sub_0808e21c
	mov		r0, #0xaa
	lsl		r0, r0, #0x1
	add		r0, r0, r7
	mov		r10, r0
	bl		sub_0808b374
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r1, #0x3c
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r6, #0x0
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r7, r2
	mov		r1, r9
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xfd
	bl		sub_0808e03c
	ldr		r2, _0802f148
	add		r0, r7, r2
	strb	r6, [r0, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, r10
	bl		sub_0808b3d4
	ldr		r2, [sp, #0x0]
	mov		r4, #0x1
	add		r0, r5, #0x0
	mov		r1, #0xfd
	bl		sub_0808e03c
	add		r0, r7, #0x0
	add		r0, #0xbd
	strb	r6, [r0, #0x0]
	sub		r0, #0xd
	mov		r1, #0x1
	mov		r8, r1
	strh	r4, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x8]
	bl		sub_0808b3d4
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strb	r6, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	beq		_0802f150
	cmp		r0, #0x1
	beq		_0802f168
	ldr		r0, _0802f14c
	mov		r1, #0x49
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_0802f184

.incbin "base.gba", 0x2F13E, 0x2

_0802f140:	.4byte 0x080e13ec
_0802f144:	.4byte 0x080e1404
_0802f148:	.4byte 0x0000014D
_0802f14c:	.4byte 0x080d2d4c @ a_kobayashi/Gauge.cpp

_0802f150:
	ldr		r1, _0802f164
	add		r0, r7, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	mov		r0, #0xc1
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0xd
	b		_0802f178

.incbin "base.gba", 0x2F162, 0x2

_0802f164:	.4byte 0x00000181

_0802f168:
	ldr		r1, _0802f1d8
	add		r0, r7, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	mov		r0, #0xc1
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x17
_0802f178:
	strb	r0, [r1, #0x0]
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
_0802f184:
	ldr		r1, _0802f1dc
	add		r0, r7, r1
	mov		r2, sp
	ldrb	r2, [r2, #0x4]
	strb	r2, [r0, #0x0]
	sub		r1, #0x3
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	sub		r0, #0x1
	ldr		r2, _0802f1d8
	add		r1, r7, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mul		r0, r1
	add		r0, #0x1
	add		r2, #0x2
	add		r1, r7, r2
	strb	r0, [r1, #0x0]
	ldr		r4, _0802f1e0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802f1c2
	ldr		r0, _0802f1e4
	mov		r1, #0x50
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802f1c2:
	str		r7, [r4, #0x0]
	add		r0, r7, #0x0
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2F1D6, 0x2

_0802f1d8:	.4byte 0x00000181
_0802f1dc:	.4byte 0x00000185
_0802f1e0:	.4byte 0x0200D52C
_0802f1e4:	.4byte 0x080d2d4c @ a_kobayashi/Gauge.cpp
	thumb_func_end sub_0802f028

	thumb_func_start sub_0802f1e8
sub_0802f1e8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	ldr		r0, _0802f204
	cmp		r1, r0
	beq		_0802f216
	cmp		r1, r0
	bgt		_0802f20c
	ldr		r0, _0802f208
	cmp		r1, r0
	beq		_0802f224
	b		_0802f2e6

_0802f204:	.4byte 0xFFFFF401
_0802f208:	.4byte 0xFFFFF104

_0802f20c:
	ldr		r0, _0802f220
	cmp		r1, r0
	beq		_0802f2d0
	cmp		r1, #0x0
	bne		_0802f2e6
_0802f216:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0802f216

.incbin "base.gba", 0x2F21E, 0x2

_0802f220:	.4byte 0xFFFFF405

_0802f224:
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r6, r4, #0x0
	add		r6, #0x40
	mov		r0, #0xaa
	lsl		r0, r0, #0x1
	add		r7, r4, r0
	mov		r0, #0xc4
	add		r0, r0, r4
	mov		r8, r0
	cmp		r2, #0x0
	ble		_0802f25a
	add		r5, r2, #0x0
_0802f244:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0802f244
_0802f25a:
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_0808b3d4
	mov		r0, r8
	bl		sub_0808b3d4
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r5, r4, r2
	ldr		r0, _0802f2c8
	add		r0, r0, r4
	mov		r9, r0
	add		r2, #0x8
	add		r2, r2, r4
	mov		r8, r2
	mov		r7, #0x0
_0802f28e:
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r2, r9
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0802f2ae
	mov		r0, r8
	str		r7, [r0, #0x0]
	strb	r7, [r5, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0802f2cc
	mov		r3, #0x0
	bl		sub_080b7724
_0802f2ae:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	strb	r0, [r5, #0x0]
	b		_0802f28e

.incbin "base.gba", 0x2F2C6, 0x2

_0802f2c8:	.4byte 0x00000183
_0802f2cc:	.4byte 0xFFFFF405

_0802f2d0:
	add		r6, r4, #0x0
	add		r6, #0x40
_0802f2d4:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0802f2d4
_0802f2e6:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0802f2e6

.incbin "base.gba", 0x2F2EE, 0x1B6
	thumb_func_end sub_0802f1e8

	thumb_func_start sub_0802f4a4
sub_0802f4a4:
	push	{ lr }
	add		r3, r1, #0x0
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0802f4b4
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0802f4b4:	.4byte 0xFFFFF104
	thumb_func_end sub_0802f4a4

	thumb_func_start sub_0802f4b8
sub_0802f4b8:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0802f4c8
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0802f4c8:	.4byte 0xFFFFF405

.incbin "base.gba", 0x2F4CC, 0x24
	thumb_func_end sub_0802f4b8

	thumb_func_start sub_0802f4f0
sub_0802f4f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	add		r7, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r10, r1
	lsl		r2, r2, #0x18
	lsr		r6, r2, #0x18
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0802f644
	str		r0, [r7, #0x4c]
	ldr		r0, _0802f648
	str		r0, [r7, #0xc]
	mov		r0, #0x72
	add		r0, r0, r7
	mov		r9, r0
	mov		r1, #0x0
	mov		r8, r1
	mov		r2, r10
	strh	r2, [r0, #0x0]
	ldr		r4, _0802f64c
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802f53e
	ldr		r0, _0802f650
	mov		r1, #0x26
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0802f53e:
	add		r5, r7, #0x0
	add		r5, #0x78
	strb	r6, [r5, #0x0]
	str		r7, [r4, #0x0]
	ldr		r4, _0802f654
	ldr		r3, _0802f658
	add		r0, r4, r3
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x3c
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r6, r8
	str		r6, [r4, #0x6c]
	str		r4, [r7, #0x54]
	add		r0, r4, #0x0
	mov		r1, #0xfe
	bl		sub_0808e03c
	ldr		r0, [r7, #0x54]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r7, #0x54]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r7, #0x54]
	add		r0, #0x69
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r7, #0x54]
	add		r0, #0x5c
	strh	r6, [r0, #0x0]
	ldr		r0, [r7, #0x54]
	add		r0, #0x54
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x54]
	add		r0, #0x56
	mov		r1, #0xc0
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x54]
	add		r0, #0x62
	mov		r2, r8
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x54]
	add		r0, #0x64
	mov		r6, #0x1
	strb	r6, [r0, #0x0]
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r3, r8
	str		r3, [r4, #0x6c]
	str		r4, [r7, #0x58]
	add		r0, r4, #0x0
	mov		r1, #0xff
	bl		sub_0808e03c
	ldr		r0, [r7, #0x58]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r7, #0x58]
	add		r0, #0x69
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x5c
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x54
	mov		r1, #0xd0
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x56
	mov		r1, #0x10
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r1, r10
	str		r5, [sp, #0x18]
	cmp		r1, #0x7
	bne		_0802f65c
	add		r0, r7, #0x0
	add		r0, #0x79
	mov		r1, #0x4
	strb	r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x7a
	strb	r1, [r2, #0x0]
	mov		r3, r9
	str		r3, [sp, #0x14]
	add		r5, r0, #0x0
	str		r2, [sp, #0x1C]
	b		_0802f6ae

.incbin "base.gba", 0x2F642, 0x2

_0802f644:	.4byte 0x080e142c
_0802f648:	.4byte 0x080e1444
_0802f64c:	.4byte 0x0200D530
_0802f650:	.4byte 0x080d2d68 @ a_kobayashi/Introduction.cpp
_0802f654:	.4byte 0x0200DB50
_0802f658:	.4byte 0xFFFFFEB0

_0802f65c:
	cmp		r1, #0x10
	beq		_0802f670
	cmp		r1, #0x6
	beq		_0802f670
	cmp		r1, #0xd
	beq		_0802f670
	cmp		r1, #0xe
	beq		_0802f670
	cmp		r1, #0xf
	bne		_0802f69a
_0802f670:
	add		r0, r7, #0x0
	add		r0, #0x79
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x72
	mov		r4, #0x0
	ldrsh	r2, [r1, r4]
	str		r1, [sp, #0x14]
	add		r5, r0, #0x0
	cmp		r2, #0xd
	bne		_0802f68e
	add		r0, #0x1
	strb	r3, [r0, #0x0]
	b		_0802f6ac
_0802f68e:
	add		r1, r7, #0x0
	add		r1, #0x7a
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	str		r1, [sp, #0x1C]
	b		_0802f6ae
_0802f69a:
	add		r1, r7, #0x0
	add		r1, #0x79
	strb	r6, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x7a
	strb	r6, [r0, #0x0]
	mov		r6, r9
	str		r6, [sp, #0x14]
	add		r5, r1, #0x0
_0802f6ac:
	str		r0, [sp, #0x1C]
_0802f6ae:
	add		r0, r7, #0x0
	add		r0, #0x5c
	str		r0, [sp, #0x10]
	ldrb	r4, [r5, #0x0]
	lsl		r0, r4, #0x3
	add		r0, r0, r4
	lsl		r0, r0, #0x4
	add		r0, #0x4
	bl		sub_0808afb8
	stmia	r0!, {  r4 }
	mov		r8, r0
	mov		r6, r8
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_0802f6f2
	mov		r1, #0x0
	mov		r10, r1
	mov		r9, r0
_0802f6d8:
	add		r0, r6, #0x0
	bl		sub_0808e21c
	add		r0, r6, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r2, r10
	str		r2, [r6, #0x6c]
	add		r6, #0x90
	sub		r4, #0x1
	cmp		r4, r9
	bne		_0802f6d8
_0802f6f2:
	mov		r3, r8
	ldr		r4, [sp, #0x10]
	str		r3, [r4, #0x0]
	mov		r6, #0x0
	str		r6, [sp, #0x20]
	ldrb	r0, [r5, #0x0]
	cmp		r6, r0
	bge		_0802f774
	mov		r1, #0x88
	mov		r10, r1
	mov		r2, #0x88
	lsl		r2, r2, #0x1
	mov		r8, r2
	mov		r9, sp
	mov		r4, #0x0
_0802f710:
	mov		r1, sp
	ldr		r0, _0802f7b8
	ldmia	r0!, { r2, r3, r6 }
	stmia	r1!, {  r2, r3, r6 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r7, #0x5c]
	add		r0, r0, r4
	mov		r3, r9
	add		r3, #0x4
	mov		r9, r3
	sub		r3, #0x4
	ldmia	r3!, { r1 }
	bl		sub_0808e03c
	ldr		r0, [r7, #0x5c]
	add		r0, r0, r4
	ldr		r6, [sp, #0x18]
	ldrb	r1, [r6, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r7, #0x5c]
	add		r0, r4, r0
	add		r0, #0x69
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, [r7, #0x5c]
	add		r0, r4, r0
	ldr		r1, [sp, #0x20]
	add		r1, #0x1
	add		r0, #0x5c
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x5c]
	add		r0, r4, r0
	add		r0, #0x54
	mov		r2, r8
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x5c]
	add		r0, r4, r0
	add		r0, #0x56
	mov		r3, r10
	strh	r3, [r0, #0x0]
	mov		r6, #0x38
	add		r8, r6
	add		r4, #0x90
	str		r1, [sp, #0x20]
	ldrb	r0, [r5, #0x0]
	cmp		r1, r0
	blt		_0802f710
_0802f774:
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, #0x0
	str		r0, [r4, #0x6c]
	str		r4, [r7, #0x60]
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r1, [sp, #0x1C]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_0802f7bc
	ldr		r0, [r7, #0x60]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x1
	beq		_0802f7d0
	ldr		r0, [r7, #0x60]
	add		r0, #0x54
	mov		r1, #0x5c
	b		_0802f7d6

_0802f7b8:	.4byte 0x080d2d88

_0802f7bc:
	cmp		r0, #0x2
	bne		_0802f7c6
	ldr		r0, [r7, #0x60]
	mov		r1, #0x1
	b		_0802f7ca
_0802f7c6:
	ldr		r0, [r7, #0x60]
	mov		r1, #0x2
_0802f7ca:
	mov		r2, #0x0
	bl		sub_0808e3c0
_0802f7d0:
	ldr		r0, [r7, #0x60]
	add		r0, #0x54
	mov		r1, #0x78
_0802f7d6:
	strh	r1, [r0, #0x0]
	ldr		r1, [r7, #0x60]
	add		r1, #0x56
	mov		r6, #0x0
	mov		r5, #0x0
	mov		r0, #0x70
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x60]
	add		r0, #0x5c
	mov		r1, #0x6
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x60]
	add		r0, #0x69
	strb	r6, [r0, #0x0]
	ldr		r0, [r7, #0x60]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r5, [r4, #0x6c]
	str		r4, [r7, #0x64]
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r0, [r7, #0x64]
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, [r7, #0x64]
	ldr		r0, [r7, #0x60]
	add		r0, #0x54
	ldrh	r0, [r0, #0x0]
	add		r1, #0x54
	strh	r0, [r1, #0x0]
	ldr		r1, [r7, #0x64]
	ldr		r0, [r7, #0x60]
	add		r0, #0x56
	ldrh	r0, [r0, #0x0]
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	ldr		r1, [r7, #0x64]
	ldr		r0, [r7, #0x60]
	add		r0, #0x54
	ldrh	r0, [r0, #0x0]
	add		r1, #0x5c
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x64]
	add		r0, #0x69
	strb	r6, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r5, [r4, #0x6c]
	str		r4, [r7, #0x68]
	ldr		r1, _0802f93c
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r0, [r7, #0x68]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r7, #0x68]
	add		r0, #0x69
	strb	r6, [r0, #0x0]
	ldr		r0, [r7, #0x68]
	add		r0, #0x5c
	strh	r5, [r0, #0x0]
	ldr		r0, [r7, #0x68]
	add		r0, #0x54
	mov		r1, #0xc8
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x68]
	add		r0, #0x56
	mov		r1, #0xa0
	strh	r1, [r0, #0x0]
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r5, [r4, #0x6c]
	str		r4, [r7, #0x6c]
	ldr		r1, _0802f940
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r7, #0x6c]
	add		r0, #0x69
	strb	r6, [r0, #0x0]
	ldr		r0, [r7, #0x6c]
	add		r0, #0x54
	mov		r1, #0x78
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x6c]
	add		r0, #0x56
	mov		r1, #0x50
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x6c]
	add		r0, #0x5c
	strh	r5, [r0, #0x0]
	ldr		r0, [r7, #0x6c]
	add		r0, #0x70
	bl		sub_0808b3d4
	str		r5, [r7, #0x74]
	mov		r0, #0x98
	lsl		r0, r0, #0x4
	bl		sub_0800223c
	str		r5, [r7, #0x7c]
	ldr		r0, _0802f944
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0802f90e
	mov		r0, #0x8
	ldr		r1, [r7, #0x74]
	eor		r1, r0
	mov		r0, #0x4
	eor		r1, r0
	str		r1, [r7, #0x74]
_0802f90e:
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	mov		r0, #0x50
	bl		sub_0808f690
	ldr		r2, [sp, #0x14]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	bl		sub_080328b8
	add		r0, r7, #0x0
	add		sp, #0x24
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2F93A, 0x2

_0802f93c:	.4byte 0x00000105
_0802f940:	.4byte 0x0000010D
_0802f944:	.4byte 0x00000282
	thumb_func_end sub_0802f4f0

	thumb_func_start sub_0802f948
sub_0802f948:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r8, r1
	ldr		r0, _0802fa08
	str		r0, [r5, #0x4c]
	ldr		r0, _0802fa0c
	str		r0, [r5, #0xc]
	ldr		r0, [r5, #0x54]
	cmp		r0, #0x0
	beq		_0802f966
	mov		r1, #0x3
	bl		sub_0808e28c
_0802f966:
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x0
	beq		_0802f972
	mov		r1, #0x3
	bl		sub_0808e28c
_0802f972:
	ldr		r2, [r5, #0x5c]
	ldr		r6, _0802fa10
	add		r7, r5, #0x0
	add		r7, #0x40
	cmp		r2, #0x0
	beq		_0802f9a6
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r4, r2, r0
	cmp		r2, r4
	beq		_0802f99e
_0802f98e:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x5c]
	cmp		r0, r4
	bne		_0802f98e
_0802f99e:
	ldr		r0, [r5, #0x5c]
	sub		r0, #0x4
	bl		sub_0808afd0
_0802f9a6:
	ldr		r0, [r5, #0x60]
	cmp		r0, #0x0
	beq		_0802f9b2
	mov		r1, #0x3
	bl		sub_0808e28c
_0802f9b2:
	ldr		r0, [r5, #0x64]
	cmp		r0, #0x0
	beq		_0802f9be
	mov		r1, #0x3
	bl		sub_0808e28c
_0802f9be:
	ldr		r0, [r5, #0x68]
	cmp		r0, #0x0
	beq		_0802f9ca
	mov		r1, #0x3
	bl		sub_0808e28c
_0802f9ca:
	ldr		r0, [r5, #0x6c]
	cmp		r0, #0x0
	beq		_0802f9d6
	mov		r1, #0x3
	bl		sub_0808e28c
_0802f9d6:
	ldr		r1, [r6, #0x0]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802f9fc
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0802f9fc:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2FA06, 0x2

_0802fa08:	.4byte 0x080e142c
_0802fa0c:	.4byte 0x080e1444
_0802fa10:	.4byte 0x080d2d98
	thumb_func_end sub_0802f948

	thumb_func_start sub_0802fa14
sub_0802fa14:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x44
	add		r6, r0, #0x0
	ldr		r0, _0802fa38
	cmp		r1, r0
	bne		_0802fa2a
	b		_0802fd4c
_0802fa2a:
	cmp		r1, r0
	bgt		_0802fa3c
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0802fa56
	b		_0802fe3c

.incbin "base.gba", 0x2FA36, 0x2

_0802fa38:	.4byte 0xFFFF8001

_0802fa3c:
	cmp		r1, #0x0
	beq		_0802fa42
	b		_0802fe3c
_0802fa42:
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0802fa42
_0802fa56:
	mov		r0, #0x40
	add		r0, r0, r6
	mov		r9, r0
	mov		r1, sp
	add		r1, #0x18
	str		r1, [sp, #0x38]
	mov		r2, sp
	add		r2, #0x30
	str		r2, [sp, #0x3c]
	mov		r3, sp
	add		r3, #0x34
	str		r3, [sp, #0x40]
	mov		r4, #0x79
	add		r4, r4, r6
	mov		r10, r4
	mov		r5, #0x13
_0802fa76:
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802fa76
	mov		r5, #0x0
	ldr		r0, _0802fc24
	mov		r8, r0
	ldr		r7, _0802fc28
	ldr		r4, _0802fc2c
_0802fa96:
	neg		r0, r5
	strh	r0, [r4, #0x0]
	strh	r0, [r7, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	ldr		r2, _0802fc30
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	cmp		r5, #0x13
	ble		_0802fa96
	mov		r0, #0x1
	bl		sub_0808f628
	mov		r0, #0x1
	mov		r1, #0x8
	bl		sub_0808f5cc
	mov		r1, sp
	ldr		r0, _0802fc34
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r1, [sp, #0x38]
	ldr		r0, _0802fc38
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	mov		r0, #0x20
	bl		sub_0808af94
	mov		r1, #0x6
	bl		sub_08033590
	mov		r8, r0
	mov		r1, sp
	ldr		r2, [sp, #0x38]
	bl		sub_0803385c
	mov		r7, #0x0
	mov		r1, #0x1
	ldr		r0, [r6, #0x74]
	eor		r0, r1
	str		r0, [r6, #0x74]
	mov		r5, #0x0
	mov		r4, #0x0
_0802fb0a:
	lsl		r0, r5, #0x10
	mov		r1, #0x3c
	bl		sub_080bbcac
	add		r1, r0, #0x0
	mov		r0, r8
	ldr		r2, [sp, #0x3c]
	ldr		r3, [sp, #0x40]
	bl		sub_08033958
	ldr		r3, _0802fc3c
	add		r4, r4, r3
	sub		r7, #0x24
	cmp		r7, #0x0
	bge		_0802fb34
	mov		r0, #0xe1
	lsl		r0, r0, #0x4
	add		r4, r4, r0
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	add		r7, r7, r1
_0802fb34:
	ldr		r1, [r6, #0x54]
	ldr		r0, [sp, #0x30]
	asr		r0, r0, #0x10
	add		r1, #0x54
	strh	r0, [r1, #0x0]
	ldr		r1, [r6, #0x54]
	ldr		r0, [sp, #0x34]
	asr		r0, r0, #0x10
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x54]
	add		r0, #0x62
	strh	r4, [r0, #0x0]
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	cmp		r5, #0x3b
	ble		_0802fb0a
	mov		r2, r8
	cmp		r2, #0x0
	beq		_0802fb72
	mov		r0, r8
	mov		r1, #0x3
	bl		sub_08033998
_0802fb72:
	ldr		r0, [r6, #0x54]
	add		r0, #0x54
	mov		r1, #0x78
	strh	r1, [r0, #0x0]
	ldr		r0, [r6, #0x54]
	add		r0, #0x56
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	cmp		r5, #0x59
	bgt		_0802fbbc
	lsl		r0, r7, #0x2
	add		r0, r0, r7
	lsl		r4, r0, #0x1
_0802fb8c:
	sub		r4, #0x78
	sub		r7, #0xc
	cmp		r7, #0x0
	bge		_0802fba0
	mov		r3, #0xe1
	lsl		r3, r3, #0x4
	add		r4, r4, r3
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r7, r7, r0
_0802fba0:
	ldr		r0, [r6, #0x54]
	add		r0, #0x62
	strh	r4, [r0, #0x0]
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	cmp		r5, #0x59
	ble		_0802fb8c
_0802fbbc:
	mov		r7, #0x0
	ldr		r0, [r6, #0x54]
	add		r0, #0x62
	strh	r7, [r0, #0x0]
	mov		r5, #0x3b
_0802fbc6:
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802fbc6
	mov		r0, #0x10
	ldr		r2, [r6, #0x74]
	eor		r2, r0
	str		r2, [r6, #0x74]
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	beq		_0802fc04
	mov		r1, #0x20
	eor		r1, r2
	str		r1, [r6, #0x74]
	mov		r2, r10
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_0802fc04
	mov		r0, #0x40
	eor		r1, r0
	mov		r0, #0x80
	eor		r1, r0
	str		r1, [r6, #0x74]
_0802fc04:
	add		r0, r6, #0x0
	bl		sub_0802ff20
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	ldr		r0, [r6, #0x74]
	eor		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	eor		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	eor		r0, r1
	str		r0, [r6, #0x74]
	b		_0802fc72

.incbin "base.gba", 0x2FC22, 0x2

_0802fc24:	.4byte 0x0200EB1E
_0802fc28:	.4byte 0x0200EB20
_0802fc2c:	.4byte 0x0200EB22
_0802fc30:	.4byte 0x0200EB24
_0802fc34:	.4byte 0x080d2d9c
_0802fc38:	.4byte 0x080d2db4
_0802fc3c:	.4byte 0xFFFFFE98

_0802fc40:
	mov		r5, #0x0
	mov		r3, r10
	ldrb	r3, [r3, #0x0]
	cmp		r0, r3
	bge		_0802fc62
	mov		r4, #0x0
_0802fc4c:
	ldr		r0, [r6, #0x5c]
	add		r0, r4, r0
	add		r0, #0x70
	bl		sub_0808b3d4
	add		r4, #0x90
	add		r5, #0x1
	mov		r0, r10
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	blt		_0802fc4c
_0802fc62:
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
_0802fc72:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0802fc40
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	ldr		r0, [r6, #0x74]
	eor		r0, r1
	str		r0, [r6, #0x74]
	ldr		r4, _0802fd34
	ldr		r1, _0802fd38
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	mov		r2, #0x3f
	mov		r3, #0x19
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r5, #0x18
_0802fcb8:
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802fcb8
	mov		r4, #0x0
	str		r4, [r6, #0x74]
	mov		r0, #0x1
	bl		sub_0808f628
	ldr		r3, _0802fd3c
	ldr		r2, _0802fd40
	ldr		r1, _0802fd44
	ldr		r0, _0802fd48
	strh	r4, [r0, #0x0]
	strh	r4, [r1, #0x0]
	strh	r4, [r2, #0x0]
	strh	r4, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	mov		r4, #0x3b
_0802fcf0:
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802fcf0
	mov		r0, #0x1
	str		r0, [r6, #0x7c]
	ldr		r4, _0802fd34
	ldr		r2, _0802fd38
	add		r0, r4, r2
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x19
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r5, #0x18
_0802fd26:
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802fd26
	b		_0802fe3c

_0802fd34:	.4byte 0x0200DB50
_0802fd38:	.4byte 0xFFFFFEB0
_0802fd3c:	.4byte 0x0200EB24
_0802fd40:	.4byte 0x0200EB1E
_0802fd44:	.4byte 0x0200EB20
_0802fd48:	.4byte 0x0200EB22

_0802fd4c:
	mov		r3, #0x40
	add		r3, r3, r6
	mov		r9, r3
	mov		r4, #0x13
_0802fd54:
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802fd54
	mov		r4, #0x0
	ldr		r0, _0802fe4c
	mov		r10, r0
	ldr		r1, _0802fe50
	mov		r8, r1
	ldr		r7, _0802fe54
	ldr		r5, _0802fe58
_0802fd6e:
	neg		r0, r4
	strh	r0, [r5, #0x0]
	strh	r0, [r7, #0x0]
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r4, #0x1
	cmp		r4, #0x13
	ble		_0802fd6e
	mov		r4, #0x3b
_0802fd90:
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802fd90
	mov		r0, #0x1
	bl		sub_0808f628
	ldr		r4, _0802fe5c
	ldr		r1, _0802fe60
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	mov		r2, #0x3f
	mov		r3, #0x19
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0x18
_0802fdc8:
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802fdc8
	mov		r1, #0x0
	str		r1, [r6, #0x74]
	ldr		r4, _0802fe4c
	ldr		r3, _0802fe50
	ldr		r2, _0802fe54
	ldr		r0, _0802fe58
	strh	r1, [r0, #0x0]
	strh	r1, [r2, #0x0]
	strh	r1, [r3, #0x0]
	strh	r1, [r4, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	mov		r4, #0x3b
_0802fdfa:
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802fdfa
	mov		r0, #0x1
	str		r0, [r6, #0x7c]
	ldr		r4, _0802fe5c
	ldr		r2, _0802fe60
	add		r0, r4, r2
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x19
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0x18
_0802fe30:
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0802fe30
_0802fe3c:
	add		r0, r6, #0x0
	bl		sub_080b75b0
_0802fe42:
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0802fe42

.incbin "base.gba", 0x2FE4A, 0x2

_0802fe4c:	.4byte 0x0200EB24
_0802fe50:	.4byte 0x0200EB1E
_0802fe54:	.4byte 0x0200EB20
_0802fe58:	.4byte 0x0200EB22
_0802fe5c:	.4byte 0x0200DB50
_0802fe60:	.4byte 0xFFFFFEB0
	thumb_func_end sub_0802fa14

	thumb_func_start sub_0802fe64
sub_0802fe64:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x74]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802fe78
	ldr		r0, [r4, #0x54]
	bl		sub_0808e4a0
_0802fe78:
	mov		r1, #0x8
	ldr		r0, [r4, #0x74]
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802fe90
	ldr		r0, [r4, #0x58]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x58]
	bl		sub_0808e4a0
_0802fe90:
	ldr		r1, [r4, #0x74]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0802feb2
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_0802feb2
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0802feb2
	mov		r0, #0x80
	and		r1, r0
	cmp		r1, #0x0
	beq		_0802fed4
_0802feb2:
	mov		r5, #0x0
	add		r0, r4, #0x0
	add		r0, #0x79
	add		r7, r0, #0x0
	ldrb	r0, [r7, #0x0]
	cmp		r5, r0
	bge		_0802fed4
	mov		r6, #0x0
_0802fec2:
	ldr		r0, [r4, #0x5c]
	add		r0, r0, r6
	bl		sub_0808e4a0
	add		r6, #0x90
	add		r5, #0x1
	ldrb	r0, [r7, #0x0]
	cmp		r5, r0
	blt		_0802fec2
_0802fed4:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	ldr		r0, [r4, #0x74]
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802feec
	ldr		r0, [r4, #0x60]
	bl		sub_0808e4a0
	ldr		r0, [r4, #0x64]
	bl		sub_0808e4a0
_0802feec:
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	ldr		r0, [r4, #0x74]
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802ff06
	ldr		r0, [r4, #0x68]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x68]
	bl		sub_0808e4a0
_0802ff06:
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	ldr		r0, [r4, #0x74]
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802ff18
	ldr		r0, [r4, #0x6c]
	bl		sub_0808e4a0
_0802ff18:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2FF1E, 0x2
	thumb_func_end sub_0802fe64

	thumb_func_start sub_0802ff20
sub_0802ff20:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r5, r0, #0x0
	add		r0, #0x79
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0802ff44
	ldr		r0, [r5, #0x5c]
	add		r0, #0x54
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r7, r0, #0x0
	sub		r7, #0x78
	b		_0802ff62
_0802ff44:
	cmp		r0, #0x2
	bne		_0802ff56
	ldr		r0, [r5, #0x5c]
	add		r0, #0x54
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r7, r0, #0x0
	sub		r7, #0x5c
	b		_0802ff62
_0802ff56:
	ldr		r0, [r5, #0x5c]
	add		r0, #0x54
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r7, r0, #0x0
	sub		r7, #0x24
_0802ff62:
	mov		r4, #0x0
	mov		r8, r4
	add		r0, r5, #0x0
	add		r0, #0x79
	str		r0, [sp, #0x10]
	ldrb	r0, [r0, #0x0]
	cmp		r8, r0
	bge		_08030038
	add		r1, r5, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x14]
	lsl		r0, r7, #0x2
	mov		r1, #0x32
	bl		sub_080bbcac
	str		r0, [sp, #0x0]
	lsl		r0, r7, #0x1
	add		r0, r0, r7
	mov		r1, #0x32
	bl		sub_080bbcac
	str		r0, [sp, #0x4]
	add		r0, r7, #0x0
	mov		r1, #0x19
	bl		sub_080bbcac
	str		r0, [sp, #0x8]
	add		r0, r7, #0x0
	mov		r1, #0x32
	bl		sub_080bbcac
	str		r0, [sp, #0xC]
_0802ffa2:
	ldr		r0, [r5, #0x5c]
	mov		r3, r8
	lsl		r2, r3, #0x3
	add		r1, r2, r3
	lsl		r1, r1, #0x4
	add		r0, r1, r0
	add		r0, #0x54
	mov		r3, #0x0
	ldrsh	r4, [r0, r3]
	mov		r10, r4
	mov		r6, #0x0
	mov		r9, r2
	mov		r4, r8
	add		r4, #0x1
	str		r4, [sp, #0x18]
	add		r4, r1, #0x0
_0802ffc2:
	cmp		r6, #0x4
	bgt		_0802ffd4
	ldr		r1, [r5, #0x5c]
	add		r1, r4, r1
	add		r1, #0x54
	ldrh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x0]
	sub		r0, r0, r2
	b		_08030002
_0802ffd4:
	cmp		r6, #0x9
	bgt		_0802ffe4
	ldr		r1, [r5, #0x5c]
	add		r1, r4, r1
	add		r1, #0x54
	ldrh	r0, [r1, #0x0]
	ldr		r3, [sp, #0x4]
	b		_08030000
_0802ffe4:
	cmp		r6, #0xe
	bgt		_0802fff6
	ldr		r1, [r5, #0x5c]
	add		r1, r4, r1
	add		r1, #0x54
	ldrh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x8]
	sub		r0, r0, r2
	b		_08030002
_0802fff6:
	ldr		r1, [r5, #0x5c]
	add		r1, r4, r1
	add		r1, #0x54
	ldrh	r0, [r1, #0x0]
	ldr		r3, [sp, #0xC]
_08030000:
	sub		r0, r0, r3
_08030002:
	strh	r0, [r1, #0x0]
	ldr		r0, [sp, #0x14]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, #0x1
	cmp		r6, #0x13
	ble		_0802ffc2
	ldr		r0, [r5, #0x5c]
	mov		r1, r9
	add		r1, r8
	lsl		r1, r1, #0x4
	add		r1, r1, r0
	mov		r4, r10
	sub		r0, r4, r7
	add		r1, #0x54
	strh	r0, [r1, #0x0]
	ldr		r0, [sp, #0x18]
	mov		r8, r0
	ldr		r1, [sp, #0x10]
	ldrb	r1, [r1, #0x0]
	cmp		r8, r1
	blt		_0802ffa2
_08030038:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30048, 0x4
	thumb_func_end sub_0802ff20

	thumb_func_start sub_0803004c
sub_0803004c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08030068
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08030070
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803006c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803007c

_08030068:	.4byte 0x00000282
_0803006c:	.4byte 0xFFFF8000

_08030070:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08030084
	mov		r3, #0x0
	bl		sub_080b7724
_0803007c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30082, 0x2

_08030084:	.4byte 0xFFFF8001

.incbin "base.gba", 0x30088, 0x24
	thumb_func_end sub_0803004c

	thumb_func_start sub_080300ac
sub_080300ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r5, r0, #0x0
	lsl		r4, r1, #0x18
	lsr		r4, r4, #0x18
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08030214
	str		r0, [r5, #0x4c]
	ldr		r0, _08030218
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x68
	bl		sub_08032c44
	mov		r1, #0xef
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strb	r4, [r0, #0x0]
	ldr		r4, _0803021c
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080300f6
	ldr		r0, _08030220
	mov		r1, #0x2f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080300f6:
	str		r5, [r4, #0x0]
	mov		r4, #0xa0
	lsl		r4, r4, #0x2
	add		r0, r4, #0x0
	bl		sub_0808afb8
	str		r0, [r5, #0x5c]
	add		r0, r4, #0x0
	bl		sub_0808afb8
	str		r0, [r5, #0x60]
	ldr		r0, _08030224
	ldr		r0, [r0, #0x0]
	bl		sub_08016bc4
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x90
	add		r4, r5, #0x0
	add		r4, #0x94
	add		r6, r5, #0x0
	add		r6, #0x98
	add		r7, r5, #0x0
	add		r7, #0x9c
	mov		r0, #0xa0
	add		r0, r0, r5
	mov		r12, r0
	mov		r1, #0xa4
	add		r1, r1, r5
	mov		r8, r1
	mov		r2, #0xa8
	add		r2, r2, r5
	mov		r9, r2
	mov		r0, #0xac
	add		r0, r0, r5
	mov		r10, r0
	add		r1, r5, #0x0
	add		r1, #0xbc
	str		r1, [sp, #0x4]
	add		r2, r5, #0x0
	add		r2, #0xb0
	str		r2, [sp, #0x0]
	sub		r1, #0x3c
	mov		r2, #0x0
	add		r0, r5, #0x0
	add		r0, #0x8c
_0803015a:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_0803015a
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	str		r0, [r4, #0x0]
	str		r0, [r6, #0x0]
	str		r0, [r7, #0x0]
	mov		r1, r12
	str		r0, [r1, #0x0]
	mov		r2, r8
	str		r0, [r2, #0x0]
	mov		r1, r9
	str		r0, [r1, #0x0]
	mov		r2, r10
	str		r0, [r2, #0x0]
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	mov		r3, #0x0
	mov		r4, #0x0
_08030188:
	ldr		r0, [r5, #0x5c]
	lsl		r1, r3, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r5, #0x5c]
	add		r0, r1, r0
	neg		r2, r3
	strh	r2, [r0, #0x2]
	ldr		r0, [r5, #0x60]
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r5, #0x60]
	add		r1, r1, r0
	strh	r2, [r1, #0x2]
	add		r3, #0x1
	cmp		r3, #0x9f
	ble		_08030188
	ldr		r0, [r5, #0x5c]
	str		r0, [r5, #0x64]
	ldr		r1, [sp, #0x4]
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0x1c
_080301b6:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_080301b6
	ldr		r0, _08030228
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r2, #0x0
	eor		r0, r1
	bl		sub_0800132c
	mov		r1, #0xfa
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r0, #0xf1
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	mov		r0, #0xff
	strb	r0, [r2, #0x0]
	ldr		r2, [sp, #0x0]
	str		r1, [r2, #0x0]
	mov		r1, #0xef
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	bls		_08030208
	b		_08030442
_08030208:
	lsl		r0, r0, #0x2
	ldr		r1, _0803022c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x30212, 0x2

_08030214:	.4byte 0x080e146c
_08030218:	.4byte 0x080e1484
_0803021c:	.4byte 0x0200D534
_08030220:	.4byte 0x080d2df4 @ a_kobayashi/RankingResult.cpp
_08030224:	.4byte 0x0200BAB0
_08030228:	.4byte 0x02000B18
_0803022c:	.4byte 0x08030230
_08030230:	.4byte 0x080302b0

.incbin "base.gba", 0x30234, 0x40
	thumb_func_end sub_080300ac


.incbin "base.gba", 0x30274, 0x1C8

_0803043c:

.incbin "base.gba", 0x3043C, 0x6
_08030442:

.incbin "base.gba", 0x30442, 0x3FE
_08030840:	.4byte 0x000001E1
_08030844:	.4byte 0x08030848
_08030848:	.4byte 0x0803088c

.incbin "base.gba", 0x3084C, 0x6E

_080308ba:

.incbin "base.gba", 0x308BA, 0x4E
_08030908:

.incbin "base.gba", 0x30908, 0x1A
_08030922:

.incbin "base.gba", 0x30922, 0x2C
_0803094e:

.incbin "base.gba", 0x3094E, 0x5A
_080309a8:

.incbin "base.gba", 0x309A8, 0x58
_08030a00:

.incbin "base.gba", 0x30A00, 0x3C
_08030a3c:	.4byte 0x0200D538
_08030a40:	.4byte 0x08030a44
_08030a44:	.4byte 0x08030a64

.incbin "base.gba", 0x30A48, 0x4C

_08030a94:

.incbin "base.gba", 0x30A94, 0x20
_08030ab4:

.incbin "base.gba", 0x30AB4, 0x66
_08030b1a:

.incbin "base.gba", 0x30B1A, 0xD0
_08030bea:

.incbin "base.gba", 0x30BEA, 0x3A
_08030c24:	.4byte 0x080d2df4 @ a_kobayashi/RankingResult.cpp
_08030c28:	.4byte 0x0200DB40
_08030c2c:	.4byte 0xFFFFFEC0
_08030c30:	.4byte 0x02000B18
_08030c34:	.4byte 0x000001DF
_08030c38:	.4byte 0xFFFFFE98

_08030c3c:

.incbin "base.gba", 0x30C3C, 0x10
_08030c4c:

.incbin "base.gba", 0x30C4C, 0x2
_08030c4e:

.incbin "base.gba", 0x30C4E, 0x26
_08030c74:

.incbin "base.gba", 0x30C74, 0x2
_08030c76:

.incbin "base.gba", 0x30C76, 0x42
_08030cb8:

.incbin "base.gba", 0x30CB8, 0x50
_08030d08:	.4byte 0x000001DF
_08030d0c:	.4byte 0x000001E1
_08030d10:	.4byte 0xFFFFFE98

_08030d14:

.incbin "base.gba", 0x30D14, 0x2
_08030d16:

.incbin "base.gba", 0x30D16, 0x24
_08030d3a:

.incbin "base.gba", 0x30D3A, 0x22
_08030d5c:

.incbin "base.gba", 0x30D5C, 0x18
_08030d74:

.incbin "base.gba", 0x30D74, 0x40
_08030db4:	.4byte 0x0000FFFF
_08030db8:	.4byte 0x000001E1

_08030dbc:

.incbin "base.gba", 0x30DBC, 0x2
_08030dbe:

.incbin "base.gba", 0x30DBE, 0x3E
_08030dfc:	.4byte 0x00000283

_08030e00:

.incbin "base.gba", 0x30E00, 0x22
_08030e22:

.incbin "base.gba", 0x30E22, 0x16
_08030e38:	.4byte 0x000001DF

_08030e3c:

.incbin "base.gba", 0x30E3C, 0x1A
_08030e56:

.incbin "base.gba", 0x30E56, 0x14
_08030e6a:

.incbin "base.gba", 0x30E6A, 0x1E
_08030e88:	.4byte 0x000001DF

_08030e8c:

.incbin "base.gba", 0x30E8C, 0x1A
_08030ea6:

.incbin "base.gba", 0x30EA6, 0x3C
_08030ee2:

.incbin "base.gba", 0x30EE2, 0x2C
_08030f0e:

.incbin "base.gba", 0x30F0E, 0xA
_08030f18:	.4byte 0x0200DB40
_08030f1c:	.4byte 0xFFFFFEC0
_08030f20:	.4byte 0x00000835
	thumb_func_start sub_08030f24
sub_08030f24:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08030f84
	ldr		r2, _08030f80
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x11
	beq		_08030f5c
	cmp		r0, #0x8
	beq		_08030f5c
	cmp		r0, #0x9
	beq		_08030f5c
	cmp		r0, #0x13
	beq		_08030f50
	b		_0803108e
_08030f50:
	sub		r1, #0x6
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	bne		_08030f5c
	b		_08031084
_08030f5c:
	add		r4, r6, #0x0
	add		r4, #0x94
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
	ldr		r2, _08030f80
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x11
	beq		_08030f7a
	b		_08031084
_08030f7a:
	add		r4, #0x4
	b		_08031000

.incbin "base.gba", 0x30F7E, 0x2

_08030f80:	.4byte 0x000001DF

_08030f84:
	mov		r1, #0xf4
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08031084
	ldr		r2, _08030fa8
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x8
	cmp		r0, #0xb
	bhi		_08031084
	lsl		r0, r0, #0x2
	ldr		r1, _08030fac
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x30FA6, 0x2

_08030fa8:	.4byte 0x000001DF
_08030fac:	.4byte 0x08030fb0
_08030fb0:	.4byte 0x08031010

.incbin "base.gba", 0x30FB4, 0x2C
	thumb_func_end sub_08030f24


.incbin "base.gba", 0x30FE0, 0x20

_08031000:

.incbin "base.gba", 0x31000, 0x84

_08031084:

.incbin "base.gba", 0x31084, 0xA
_0803108e:

.incbin "base.gba", 0x3108E, 0xA
_08031098:

.incbin "base.gba", 0x31098, 0x12
_080310aa:

.incbin "base.gba", 0x310AA, 0x16
_080310c0:	.4byte 0x000001DF
_080310c4:	.4byte 0x080310c8
_080310c8:	.4byte 0x0803110c

.incbin "base.gba", 0x310CC, 0x58

_08031124:

.incbin "base.gba", 0x31124, 0xE

_08031132:

.incbin "base.gba", 0x31132, 0x10
_08031142:

.incbin "base.gba", 0x31142, 0x14
_08031156:

.incbin "base.gba", 0x31156, 0x14
_0803116a:

.incbin "base.gba", 0x3116A, 0x30
_0803119a:

.incbin "base.gba", 0x3119A, 0x24
_080311be:

.incbin "base.gba", 0x311BE, 0xC
_080311ca:

.incbin "base.gba", 0x311CA, 0x20
_080311ea:

.incbin "base.gba", 0x311EA, 0xA
_080311f4:

.incbin "base.gba", 0x311F4, 0xC
_08031200:	.4byte 0x000001DF
_08031204:	.4byte 0x0200CE24
_08031208:	.4byte 0x0200CE38
_0803120c:	.4byte 0x000001E1
	thumb_func_start sub_08031210
sub_08031210:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r0, [sp, #0x18]
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	lsl		r2, r2, #0x18
	lsr		r7, r2, #0x18
	lsl		r3, r3, #0x18
	lsr		r6, r3, #0x18
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	ldr		r0, _0803128c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0803123c
	ldr		r0, _08031290
	bl		sub_0808c670
_0803123c:
	add		r0, r4, #0x0
	add		r0, #0xb4
	mov		r1, r8
	strb	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xb5
	strb	r7, [r1, #0x0]
	add		r1, #0x1
	strb	r6, [r1, #0x0]
	add		r1, #0x1
	strb	r5, [r1, #0x0]
	mov		r6, #0x0
	mov		r8, r0
	add		r7, r4, #0x0
	add		r7, #0x80
_0803125a:
	lsl		r5, r6, #0x2
	add		r5, r7, r5
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, #0x0
	str		r0, [r4, #0x6c]
	str		r4, [r5, #0x0]
	mov		r1, r8
	add		r0, r1, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x7
	bhi		_080312e0
	lsl		r0, r0, #0x2
	ldr		r1, _08031294
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0803128c:	.4byte 0x0200CDBC
_08031290:	.4byte 0x080d2e1c @ Warning!! : Use another SetRanking!!
_08031294:	.4byte 0x08031298
_08031298:	.4byte 0x080312b8

.incbin "base.gba", 0x3129C, 0x1C
	thumb_func_end sub_08031210


.incbin "base.gba", 0x312B8, 0x28

_080312e0:

.incbin "base.gba", 0x312E0, 0x20
_08031300:

.incbin "base.gba", 0x31300, 0x10
_08031310:	.4byte 0x080d2df4 @ a_kobayashi/RankingResult.cpp
	thumb_func_start sub_08031314
sub_08031314:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r1, #0x0
	mov		r8, r1
	mov		r1, #0xe
	mov		r9, r1
	add		r7, r0, #0x0
	add		r7, #0xdc
	add		r0, #0xbc
	mov		r10, r0
_0803132e:
	mov		r1, r10
	add		r1, #0x4
	mov		r10, r1
	sub		r1, #0x4
	ldmia	r1!, { r0 }
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r5, r0, #0x0
	mov		r1, r8
	add		r1, #0x5
	ldr		r0, _080313ac
	bl		sub_0800ed80
	add		r4, r0, #0x0
	mov		r0, #0x2
	ldrb	r2, [r5, #0x0]
	add		r5, #0x1
	add		r6, r4, #0x0
	add		r6, #0x18
	strh	r0, [r4, #0x28]
	mov		r0, r9
	strh	r0, [r4, #0x2a]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	mov		r1, #0x7
	strh	r1, [r4, #0x2c]
	add		r5, r4, #0x0
	add		r5, #0x30
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_0808ed5c
	add		r1, r4, #0x0
	add		r1, #0x32
	ldrb	r2, [r5, #0x0]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	mov		r0, #0x7d
	strh	r0, [r4, #0x28]
	mov		r0, r9
	strh	r0, [r4, #0x2a]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	add		r7, #0x20
	mov		r1, #0x1
	add		r8, r1
	mov		r0, r8
	cmp		r0, #0x3
	ble		_0803132e
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x313AA, 0x2

_080313ac:	.4byte 0x0200AA18
	thumb_func_end sub_08031314

	thumb_func_start sub_080313b0
sub_080313b0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r5, r0, #0x0
	str		r1, [sp, #0x4]
	mov		r8, r2
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0xd
	cmp		r0, #0x0
	bne		_080313d2
	mov		r1, #0x4
_080313d2:
	ldr		r2, _08031468
	add		r0, r5, r2
	mov		r3, #0x0
	strb	r1, [r0, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x3f
	strh	r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x80
	ldr		r0, [r2, #0x0]
	add		r0, #0x56
	mov		r1, #0x48
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xac
	str		r3, [r1, #0x0]
	str		r2, [sp, #0x8]
	str		r1, [sp, #0x18]
	mov		r2, #0x68
	add		r2, r2, r5
	mov		r9, r2
	mov		r0, #0x40
	add		r0, r0, r5
	mov		r10, r0
	add		r2, r5, #0x0
	add		r2, #0x84
	str		r2, [sp, #0xC]
	add		r0, r5, #0x0
	add		r0, #0x88
	str		r0, [sp, #0x10]
	add		r2, #0x8
	str		r2, [sp, #0x14]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	add		r6, r1, #0x0
_0803141e:
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x3
	add		r4, r0, #0x0
	sub		r4, #0xf0
	ldrb	r0, [r7, #0x0]
	add		r2, r0, #0x0
	neg		r3, r4
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	bl		sub_08033c08
	ldr		r0, [r5, #0x64]
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r5, #0x64]
	ldr		r1, [r5, #0x5c]
	cmp		r0, r1
	bne		_0803146c
	ldr		r0, [r5, #0x60]
	str		r0, [r5, #0x64]
	b		_0803146e

.incbin "base.gba", 0x31466, 0x2

_08031468:	.4byte 0x000001DF

_0803146c:
	str		r1, [r5, #0x64]
_0803146e:
	ldrh	r0, [r7, #0x0]
	mov		r2, r8
	add		r1, r4, r2
	ldr		r2, _080314f4
	and		r1, r2
	lsl		r0, r0, #0x2
	ldr		r2, [r5, #0x64]
	add		r0, r0, r2
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x24
	sub		r1, r2, r4
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x0]
	add		r0, #0x1
	str		r0, [r6, #0x0]
	add		r1, r6, #0x0
	cmp		r0, #0x1d
	ble		_0803141e
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x64]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r0, [r5, #0x64]
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldrb	r0, [r4, #0x0]
	add		r2, r0, #0x0
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_08033c08
	ldr		r0, [r5, #0x64]
	ldr		r1, [r5, #0x5c]
	cmp		r0, r1
	bne		_080314f8
	ldr		r0, [r5, #0x60]
	str		r0, [r5, #0x64]
	b		_080314fa

_080314f4:	.4byte 0x0000FFFF

_080314f8:
	str		r1, [r5, #0x64]
_080314fa:
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x64]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r2, [sp, #0x8]
	ldr		r0, [r2, #0x0]
	add		r0, #0x54
	mov		r1, #0x24
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0xe
	cmp		r0, #0x0
	bne		_08031530
	mov		r1, #0x5
_08031530:
	ldr		r2, _080315a4
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	ldrh	r0, [r4, #0x0]
	add		r0, #0x18
	strh	r0, [r4, #0x0]
	ldr		r0, [sp, #0xC]
	ldr		r1, [r0, #0x0]
	ldr		r2, [sp, #0x8]
	ldr		r0, [r2, #0x0]
	add		r0, #0x56
	ldrh	r0, [r0, #0x0]
	add		r0, #0x18
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	ldr		r1, [sp, #0x18]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	ldr		r6, [sp, #0x18]
_0803155c:
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x3
	add		r4, r0, #0x0
	sub		r4, #0xf0
	ldrb	r0, [r7, #0x0]
	add		r2, r0, #0x0
	neg		r3, r4
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	bl		sub_08033c08
	ldr		r0, [r5, #0x64]
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r5, #0x64]
	ldr		r1, [r5, #0x5c]
	cmp		r0, r1
	bne		_080315a8
	ldr		r0, [r5, #0x60]
	str		r0, [r5, #0x64]
	b		_080315aa

_080315a4:	.4byte 0x000001DF

_080315a8:
	str		r1, [r5, #0x64]
_080315aa:
	ldrh	r0, [r7, #0x0]
	mov		r2, r8
	add		r1, r4, r2
	ldr		r2, _08031630
	and		r1, r2
	lsl		r0, r0, #0x2
	ldr		r2, [r5, #0x64]
	add		r0, r0, r2
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r1, [sp, #0xC]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x24
	sub		r1, r2, r4
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x0]
	add		r0, #0x1
	str		r0, [r6, #0x0]
	add		r1, r6, #0x0
	cmp		r0, #0x1d
	ble		_0803155c
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x64]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r0, [r5, #0x64]
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldrb	r0, [r4, #0x0]
	add		r2, r0, #0x0
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_08033c08
	ldr		r0, [r5, #0x64]
	ldr		r1, [r5, #0x5c]
	cmp		r0, r1
	bne		_08031634
	ldr		r0, [r5, #0x60]
	str		r0, [r5, #0x64]
	b		_08031636

_08031630:	.4byte 0x0000FFFF

_08031634:
	str		r1, [r5, #0x64]
_08031636:
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x64]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r2, [sp, #0xC]
	ldr		r0, [r2, #0x0]
	add		r0, #0x54
	mov		r1, #0x24
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0xf
	cmp		r0, #0x0
	bne		_0803166c
	mov		r1, #0x6
_0803166c:
	ldr		r2, _080316e0
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	ldrh	r0, [r4, #0x0]
	add		r0, #0x18
	strh	r0, [r4, #0x0]
	ldr		r0, [sp, #0x10]
	ldr		r1, [r0, #0x0]
	ldr		r2, [sp, #0xC]
	ldr		r0, [r2, #0x0]
	add		r0, #0x56
	ldrh	r0, [r0, #0x0]
	add		r0, #0x18
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	ldr		r1, [sp, #0x18]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	ldr		r6, [sp, #0x18]
_08031698:
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x3
	add		r4, r0, #0x0
	sub		r4, #0xf0
	ldrb	r0, [r7, #0x0]
	add		r2, r0, #0x0
	neg		r3, r4
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	bl		sub_08033c08
	ldr		r0, [r5, #0x64]
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r5, #0x64]
	ldr		r1, [r5, #0x5c]
	cmp		r0, r1
	bne		_080316e4
	ldr		r0, [r5, #0x60]
	str		r0, [r5, #0x64]
	b		_080316e6

_080316e0:	.4byte 0x000001DF

_080316e4:
	str		r1, [r5, #0x64]
_080316e6:
	ldrh	r0, [r7, #0x0]
	mov		r2, r8
	add		r1, r4, r2
	ldr		r2, _0803176c
	and		r1, r2
	lsl		r0, r0, #0x2
	ldr		r2, [r5, #0x64]
	add		r0, r0, r2
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r1, [sp, #0x10]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x24
	sub		r1, r2, r4
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x0]
	add		r0, #0x1
	str		r0, [r6, #0x0]
	add		r1, r6, #0x0
	cmp		r0, #0x1d
	ble		_08031698
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x64]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r0, [r5, #0x64]
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldrb	r0, [r4, #0x0]
	add		r2, r0, #0x0
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_08033c08
	ldr		r0, [r5, #0x64]
	ldr		r1, [r5, #0x5c]
	cmp		r0, r1
	bne		_08031770
	ldr		r0, [r5, #0x60]
	str		r0, [r5, #0x64]
	b		_08031772

_0803176c:	.4byte 0x0000FFFF

_08031770:
	str		r1, [r5, #0x64]
_08031772:
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x64]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	add		r0, #0x54
	mov		r1, #0x24
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x10
	cmp		r0, #0x0
	bne		_080317a8
	mov		r1, #0x7
_080317a8:
	ldr		r2, _0803181c
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	ldrh	r0, [r4, #0x0]
	add		r0, #0x18
	strh	r0, [r4, #0x0]
	ldr		r0, [sp, #0x14]
	ldr		r1, [r0, #0x0]
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	add		r0, #0x56
	ldrh	r0, [r0, #0x0]
	add		r0, #0x18
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	ldr		r1, [sp, #0x18]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	add		r6, r1, #0x0
_080317d4:
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x3
	add		r4, r0, #0x0
	sub		r4, #0xf0
	ldrb	r0, [r7, #0x0]
	add		r2, r0, #0x0
	neg		r3, r4
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	bl		sub_08033c08
	ldr		r0, [r5, #0x64]
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r5, #0x64]
	ldr		r1, [r5, #0x5c]
	cmp		r0, r1
	bne		_08031820
	ldr		r0, [r5, #0x60]
	str		r0, [r5, #0x64]
	b		_08031822

_0803181c:	.4byte 0x000001DF

_08031820:
	str		r1, [r5, #0x64]
_08031822:
	ldrh	r0, [r7, #0x0]
	mov		r2, r8
	add		r1, r4, r2
	ldr		r2, _080318a8
	and		r1, r2
	lsl		r0, r0, #0x2
	ldr		r2, [r5, #0x64]
	add		r0, r0, r2
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r1, [sp, #0x14]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x24
	sub		r1, r2, r4
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x0]
	add		r0, #0x1
	str		r0, [r6, #0x0]
	add		r1, r6, #0x0
	cmp		r0, #0x1d
	ble		_080317d4
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x64]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r0, [r5, #0x64]
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldrb	r0, [r4, #0x0]
	add		r2, r0, #0x0
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_08033c08
	ldr		r0, [r5, #0x64]
	ldr		r1, [r5, #0x5c]
	cmp		r0, r1
	bne		_080318ac
	ldr		r0, [r5, #0x60]
	str		r0, [r5, #0x64]
	b		_080318ae

_080318a8:	.4byte 0x0000FFFF

_080318ac:
	str		r1, [r5, #0x64]
_080318ae:
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x64]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r2, [sp, #0x14]
	ldr		r0, [r2, #0x0]
	add		r0, #0x54
	mov		r1, #0x24
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080313b0

	thumb_func_start sub_080318e4
sub_080318e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x50
	add		r7, r0, #0x0
	str		r1, [sp, #0x4]
	mov		r0, #0xf8
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r2, _08031990
	add		r1, r7, r2
	mov		r2, #0x0
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	mov		r0, #0x3f
	strh	r0, [r1, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xac
	str		r2, [r1, #0x0]
	add		r6, r7, r3
	mov		r0, #0x68
	add		r0, r0, r7
	mov		r8, r0
	mov		r2, #0x40
	add		r2, r2, r7
	mov		r9, r2
	add		r3, r7, #0x0
	add		r3, #0x80
	str		r3, [sp, #0x8]
	mov		r0, #0xf2
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0xC]
	mov		r2, #0xf1
	lsl		r2, r2, #0x1
	add		r2, r7, r2
	str		r2, [sp, #0x10]
	add		r3, #0x14
	str		r3, [sp, #0x14]
	add		r5, r1, #0x0
	mov		r10, r1
_08031944:
	ldr		r0, [r1, #0x0]
	lsl		r4, r0, #0x3
	mov		r0, #0x10
	neg		r0, r0
	sub		r1, r0, r4
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldrb	r0, [r6, #0x0]
	add		r2, r0, #0x0
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r3, #0xf0
	bl		sub_08033c08
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	add		r0, r7, #0x0
	add		r0, #0x68
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031994
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031996

_08031990:	.4byte 0x000001DF

_08031994:
	str		r1, [r7, #0x64]
_08031996:
	ldrh	r0, [r6, #0x0]
	add		r1, r4, #0x0
	ldr		r2, _08031a68
	and		r1, r2
	lsl		r0, r0, #0x2
	ldr		r2, [r7, #0x64]
	add		r0, r0, r2
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r3, [sp, #0x8]
	ldr		r0, [r3, #0x0]
	neg		r2, r4
	add		r1, r2, #0x0
	add		r1, #0x24
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r1, [sp, #0xC]
	ldr		r0, [r1, #0x0]
	add		r3, r7, #0x0
	add		r3, #0x80
	str		r3, [sp, #0x2C]
	cmp		r0, #0x0
	bne		_080319d0
	ldr		r1, [sp, #0x10]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bne		_080319dc
_080319d0:
	ldr		r3, [sp, #0x14]
	ldr		r0, [r3, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xc8
	add		r0, #0x54
	strh	r1, [r0, #0x0]
_080319dc:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	add		r1, r5, #0x0
	cmp		r0, #0x1d
	ble		_08031944
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldrh	r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x18
	add		r3, r7, #0x0
	add		r3, #0x84
	str		r3, [sp, #0x30]
	add		r3, #0x4
	str		r3, [sp, #0x34]
	add		r3, #0x4
	str		r3, [sp, #0x38]
	add		r3, #0x24
	str		r3, [sp, #0x3C]
	add		r3, #0xc
	str		r3, [sp, #0x44]
	sub		r3, #0x8
	str		r3, [sp, #0x40]
	cmp		r2, r0
	bge		_08031a36
	mov		r4, #0x0
	add		r3, r1, #0x0
_08031a1c:
	ldr		r0, [r7, #0x64]
	lsl		r1, r2, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r1, r1, r0
	neg		r0, r2
	strh	r0, [r1, #0x2]
	add		r2, #0x1
	ldrh	r0, [r3, #0x0]
	add		r0, #0x18
	cmp		r2, r0
	blt		_08031a1c
_08031a36:
	mov		r0, #0xf2
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031a6c
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031a6e

.incbin "base.gba", 0x31A66, 0x2

_08031a68:	.4byte 0x0000FFFF

_08031a6c:
	str		r1, [r7, #0x64]
_08031a6e:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	ldrh	r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x18
	cmp		r2, r0
	bge		_08031aa2
	mov		r4, #0x0
	add		r3, r1, #0x0
_08031a88:
	ldr		r0, [r7, #0x64]
	lsl		r1, r2, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r1, r1, r0
	neg		r0, r2
	strh	r0, [r1, #0x2]
	add		r2, #0x1
	ldrh	r0, [r3, #0x0]
	add		r0, #0x18
	cmp		r2, r0
	blt		_08031a88
_08031aa2:
	ldr		r3, _08031b2c
	add		r1, r7, r3
	mov		r2, #0x0
	mov		r0, #0xa
	strb	r0, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	add		r0, #0x18
	strh	r0, [r1, #0x0]
	ldr		r3, [sp, #0x30]
	ldr		r1, [r3, #0x0]
	ldr		r3, [sp, #0x2C]
	ldr		r0, [r3, #0x0]
	add		r0, #0x56
	ldrh	r0, [r0, #0x0]
	add		r0, #0x18
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	mov		r1, r10
	str		r2, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r6, r7, r0
	mov		r2, #0xf1
	lsl		r2, r2, #0x1
	add		r2, r7, r2
	str		r2, [sp, #0x18]
	add		r3, r7, #0x0
	add		r3, #0x94
	str		r3, [sp, #0x1C]
	mov		r5, r10
_08031ae4:
	ldr		r0, [r1, #0x0]
	lsl		r4, r0, #0x3
	mov		r0, #0x10
	neg		r0, r0
	sub		r1, r0, r4
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldrb	r0, [r6, #0x0]
	add		r2, r0, #0x0
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r3, #0xf0
	bl		sub_08033c08
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031b30
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031b32

_08031b2c:	.4byte 0x000001DF

_08031b30:
	str		r1, [r7, #0x64]
_08031b32:
	ldrh	r0, [r6, #0x0]
	add		r1, r4, #0x0
	ldr		r2, _08031bd0
	and		r1, r2
	lsl		r0, r0, #0x2
	ldr		r2, [r7, #0x64]
	add		r0, r0, r2
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r3, [sp, #0x30]
	ldr		r0, [r3, #0x0]
	neg		r2, r4
	add		r1, r2, #0x0
	add		r1, #0x24
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r1, [sp, #0x18]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x1
	bne		_08031b6a
	ldr		r3, [sp, #0x1C]
	ldr		r0, [r3, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xc8
	add		r0, #0x54
	strh	r1, [r0, #0x0]
_08031b6a:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	add		r1, r5, #0x0
	cmp		r0, #0x1d
	ble		_08031ae4
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldrh	r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x18
	cmp		r2, r0
	bge		_08031baa
	mov		r4, #0x0
	add		r3, r1, #0x0
_08031b90:
	ldr		r0, [r7, #0x64]
	lsl		r1, r2, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r1, r1, r0
	neg		r0, r2
	strh	r0, [r1, #0x2]
	add		r2, #0x1
	ldrh	r0, [r3, #0x0]
	add		r0, #0x18
	cmp		r2, r0
	blt		_08031b90
_08031baa:
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031bd4
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031bd6

_08031bd0:	.4byte 0x0000FFFF

_08031bd4:
	str		r1, [r7, #0x64]
_08031bd6:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	ldrh	r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x18
	cmp		r2, r0
	bge		_08031c0a
	mov		r4, #0x0
	add		r3, r1, #0x0
_08031bf0:
	ldr		r0, [r7, #0x64]
	lsl		r1, r2, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r1, r1, r0
	neg		r0, r2
	strh	r0, [r1, #0x2]
	add		r2, #0x1
	ldrh	r0, [r3, #0x0]
	add		r0, #0x18
	cmp		r2, r0
	blt		_08031bf0
_08031c0a:
	ldr		r3, _08031c80
	add		r1, r7, r3
	mov		r2, #0x0
	mov		r0, #0xb
	strb	r0, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	add		r0, #0x18
	strh	r0, [r1, #0x0]
	mov		r1, r10
	str		r2, [r1, #0x0]
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r6, r7, r2
	add		r3, #0x3
	add		r3, r7, r3
	str		r3, [sp, #0x20]
	add		r0, r7, #0x0
	add		r0, #0x94
	str		r0, [sp, #0x24]
	mov		r5, r10
_08031c38:
	ldr		r0, [r1, #0x0]
	lsl		r4, r0, #0x3
	mov		r2, #0x10
	neg		r2, r2
	sub		r1, r2, r4
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldrb	r0, [r6, #0x0]
	add		r2, r0, #0x0
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r3, #0xf0
	bl		sub_08033c08
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031c84
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031c86

_08031c80:	.4byte 0x000001DF

_08031c84:
	str		r1, [r7, #0x64]
_08031c86:
	ldrh	r0, [r6, #0x0]
	add		r1, r4, #0x0
	ldr		r3, _08031d24
	and		r1, r3
	lsl		r0, r0, #0x2
	ldr		r2, [r7, #0x64]
	add		r0, r0, r2
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r1, [sp, #0x34]
	ldr		r0, [r1, #0x0]
	neg		r2, r4
	add		r1, r2, #0x0
	add		r1, #0x24
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r3, [sp, #0x20]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x2
	bne		_08031cbe
	ldr		r1, [sp, #0x24]
	ldr		r0, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xc8
	add		r0, #0x54
	strh	r1, [r0, #0x0]
_08031cbe:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	add		r1, r5, #0x0
	cmp		r0, #0x1d
	ble		_08031c38
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	ldrh	r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x18
	cmp		r2, r0
	bge		_08031cfe
	mov		r4, #0x0
	add		r3, r1, #0x0
_08031ce4:
	ldr		r0, [r7, #0x64]
	lsl		r1, r2, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r1, r1, r0
	neg		r0, r2
	strh	r0, [r1, #0x2]
	add		r2, #0x1
	ldrh	r0, [r3, #0x0]
	add		r0, #0x18
	cmp		r2, r0
	blt		_08031ce4
_08031cfe:
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031d28
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031d2a

_08031d24:	.4byte 0x0000FFFF

_08031d28:
	str		r1, [r7, #0x64]
_08031d2a:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	ldrh	r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x18
	cmp		r2, r0
	bge		_08031d5e
	mov		r4, #0x0
	add		r3, r1, #0x0
_08031d44:
	ldr		r0, [r7, #0x64]
	lsl		r1, r2, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r1, r1, r0
	neg		r0, r2
	strh	r0, [r1, #0x2]
	add		r2, #0x1
	ldrh	r0, [r3, #0x0]
	add		r0, #0x18
	cmp		r2, r0
	blt		_08031d44
_08031d5e:
	ldr		r0, _08031dd4
	add		r1, r7, r0
	mov		r2, #0x0
	mov		r0, #0xc
	strb	r0, [r1, #0x0]
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	ldrh	r0, [r1, #0x0]
	add		r0, #0x18
	strh	r0, [r1, #0x0]
	mov		r1, r10
	str		r2, [r1, #0x0]
	add		r6, r7, r3
	mov		r0, #0xf1
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0x28]
	mov		r2, #0x94
	add		r2, r2, r7
	mov		r10, r2
	add		r5, r1, #0x0
_08031d8a:
	ldr		r0, [r1, #0x0]
	lsl		r4, r0, #0x3
	mov		r3, #0x10
	neg		r3, r3
	sub		r1, r3, r4
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldrb	r0, [r6, #0x0]
	add		r2, r0, #0x0
	add		r0, #0x18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r3, #0xf0
	bl		sub_08033c08
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031dd8
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031dda

.incbin "base.gba", 0x31DD2, 0x2

_08031dd4:	.4byte 0x000001DF

_08031dd8:
	str		r1, [r7, #0x64]
_08031dda:
	ldrh	r0, [r6, #0x0]
	add		r1, r4, #0x0
	ldr		r2, _08031e88
	and		r1, r2
	lsl		r0, r0, #0x2
	ldr		r2, [r7, #0x64]
	add		r0, r0, r2
	mov		r2, #0x60
	bl		sub_0808c788
	ldr		r3, [sp, #0x38]
	ldr		r0, [r3, #0x0]
	neg		r2, r4
	add		r1, r2, #0x0
	add		r1, #0x24
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r1, [sp, #0x28]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x3
	bne		_08031e12
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xc8
	add		r0, #0x54
	strh	r1, [r0, #0x0]
_08031e12:
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	add		r1, r5, #0x0
	cmp		r0, #0x1d
	ble		_08031d8a
	mov		r0, #0xf0
	lsl		r0, r0, #0x10
	ldr		r1, [sp, #0x3C]
	str		r0, [r1, #0x0]
	ldr		r1, _08031e8c
	mov		r0, #0x1
	strb	r0, [r1, #0x18]
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	ldrh	r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x18
	cmp		r2, r0
	bge		_08031e60
	mov		r4, #0xf0
	add		r3, r1, #0x0
_08031e46:
	ldr		r0, [r7, #0x64]
	lsl		r1, r2, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r1, r1, r0
	neg		r0, r2
	strh	r0, [r1, #0x2]
	add		r2, #0x1
	ldrh	r0, [r3, #0x0]
	add		r0, #0x18
	cmp		r2, r0
	blt		_08031e46
_08031e60:
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031e90
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031e92

.incbin "base.gba", 0x31E86, 0x2

_08031e88:	.4byte 0x0000FFFF
_08031e8c:	.4byte 0x02008AD4

_08031e90:
	str		r1, [r7, #0x64]
_08031e92:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r2, #0x0
	mov		r3, #0xf0
_08031e9c:
	ldr		r1, [r7, #0x64]
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	strh	r3, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, #0x3f
	ble		_08031e9c
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	ldrh	r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x18
	cmp		r2, r0
	bge		_08031ed8
	mov		r4, #0xf0
	add		r3, r1, #0x0
_08031ebe:
	ldr		r0, [r7, #0x64]
	lsl		r1, r2, #0x2
	add		r0, r1, r0
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	add		r1, r1, r0
	neg		r0, r2
	strh	r0, [r1, #0x2]
	add		r2, #0x1
	ldrh	r0, [r3, #0x0]
	add		r0, #0x18
	cmp		r2, r0
	blt		_08031ebe
_08031ed8:
	ldr		r0, [r7, #0x64]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r7, #0x64]
	ldr		r1, [r7, #0x5c]
	cmp		r0, r1
	bne		_08031efe
	ldr		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	b		_08031f00
_08031efe:
	str		r1, [r7, #0x64]
_08031f00:
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r2, #0x0
	mov		r3, #0xf0
_08031f0a:
	ldr		r1, [r7, #0x64]
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	strh	r3, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, #0x3f
	ble		_08031f0a
	mov		r0, #0x4
	mov		r9, r0
	mov		r1, #0xe
	mov		r10, r1
	mov		r2, #0xae
	lsl		r2, r2, #0x1
	add		r2, r2, r7
	mov		r8, r2
	ldr		r3, [sp, #0x44]
	add		r3, #0x10
	str		r3, [sp, #0x48]
_08031f2e:
	ldr		r1, [sp, #0x48]
	ldmia	r1!, { r0 }
	str		r1, [sp, #0x48]
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r5, r0, #0x0
	mov		r1, r9
	add		r1, #0x5
	ldr		r0, _08031fd8
	bl		sub_0800ed80
	add		r4, r0, #0x0
	mov		r3, #0x2
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	str		r3, [sp, #0x4C]
	bl		sub_080bbc74
	ldrb	r2, [r5, #0x0]
	add		r5, #0x1
	add		r6, r4, #0x0
	add		r6, #0x18
	ldr		r3, [sp, #0x4C]
	strh	r3, [r4, #0x28]
	mov		r3, r10
	strh	r3, [r4, #0x2a]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	mov		r0, #0x7
	strh	r0, [r4, #0x2c]
	add		r5, r4, #0x0
	add		r5, #0x30
	add		r0, r5, #0x0
	mov		r1, r8
	bl		sub_0808ed5c
	add		r1, r4, #0x0
	add		r1, #0x32
	ldrb	r2, [r5, #0x0]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	mov		r3, #0x7d
	strh	r3, [r4, #0x28]
	mov		r3, r10
	strh	r3, [r4, #0x2a]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r0, #0x20
	add		r8, r0
	mov		r1, #0x1
	add		r9, r1
	mov		r2, r9
	cmp		r2, #0x7
	ble		_08031f2e
	mov		r3, #0x0
	mov		r8, r3
_08031fb0:
	mov		r0, r8
	lsl		r4, r0, #0x2
	ldr		r1, [sp, #0x2C]
	add		r0, r1, r4
	ldr		r0, [r0, #0x0]
	bl		sub_0808e278
	mov		r0, r8
	add		r0, #0x4
	ldr		r2, [sp, #0x40]
	add		r0, r2, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x7
	bhi		_08032030
	lsl		r0, r0, #0x2
	ldr		r1, _08031fdc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x31FD6, 0x2

_08031fd8:	.4byte 0x0200AA18
_08031fdc:	.4byte 0x08031fe0
_08031fe0:	.4byte 0x08032000

.incbin "base.gba", 0x31FE4, 0x1C
	thumb_func_end sub_080318e4


.incbin "base.gba", 0x32000, 0x30

_08032030:

.incbin "base.gba", 0x32030, 0x1E
_0803204e:

.incbin "base.gba", 0x3204E, 0x62
_080320b0:

.incbin "base.gba", 0x320B0, 0x10
_080320c0:	.4byte 0x080d2df4 @ a_kobayashi/RankingResult.cpp
_080320c4:	.4byte 0x00000655
	thumb_func_start sub_080320c8
sub_080320c8:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	mov		r1, #0xef
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	bhi		_0803219c
	lsl		r0, r0, #0x2
	ldr		r1, _080320e4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x320E2, 0x2

_080320e4:	.4byte 0x080320e8
_080320e8:	.4byte 0x0803212c

.incbin "base.gba", 0x320EC, 0x40
	thumb_func_end sub_080320c8


.incbin "base.gba", 0x3212C, 0x70

_0803219c:

.incbin "base.gba", 0x3219C, 0x48
_080321e4:

.incbin "base.gba", 0x321E4, 0x8
	thumb_func_start sub_080321ec
sub_080321ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r6, r0, #0x0
	ldr		r0, _08032350
	add		r1, r6, r0
	mov		r0, #0x11
	strb	r0, [r1, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x94
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	mov		r10, r1
	mov		r9, r7
	add		r2, r6, #0x0
	add		r2, #0x40
	str		r2, [sp, #0x18]
	mov		r4, #0x0
	mov		r8, r4
	mov		r5, #0x13
_0803221a:
	ldr		r4, [r7, #0x0]
	mov		r0, r8
	mov		r1, #0x14
	bl		sub_080bbcac
	mov		r1, r10
	sub		r0, r1, r0
	add		r4, #0x54
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r2, #0x48
	add		r8, r2
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0803221a
	mov		r4, r9
	ldr		r0, [r4, #0x0]
	add		r0, #0x54
	mov		r1, #0xc8
	strh	r1, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x54
	add		r0, r6, #0x0
	bl		sub_080325f4
	add		r0, r6, #0x0
	add		r0, #0x9c
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, #0x58
	bl		sub_0808f690
	add		r3, r6, #0x0
	add		r3, #0xa0
	ldr		r2, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x54
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	str		r1, [sp, #0x0]
	ldr		r1, _08032354
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r0, r0, r2
	sub		r0, #0x3c
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, #0x4
	mov		r7, #0x0
	mov		r10, r3
	cmp		r7, r1
	bge		_08032340
	add		r4, r6, #0x0
	add		r4, #0x98
	str		r4, [sp, #0xC]
	ldr		r1, [sp, #0x0]
	sub		r0, r0, r1
	str		r0, [sp, #0x14]
	add		r2, r6, #0x0
	add		r2, #0xa8
	str		r2, [sp, #0x4]
	ldr		r4, _08032354
	add		r4, r6, r4
	str		r4, [sp, #0x8]
_080322b6:
	mov		r5, #0x0
	lsl		r0, r7, #0x3
	lsl		r1, r7, #0x2
	add		r2, r7, #0x1
	str		r2, [sp, #0x10]
	add		r0, r0, r7
	lsl		r0, r0, #0x4
	mov		r8, r0
	add		r1, r1, r7
	lsl		r1, r1, #0x1
	mov		r9, r1
_080322cc:
	cmp		r5, #0x5
	bne		_080322e8
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	add		r0, r8
	ldr		r2, [sp, #0x4]
	ldr		r1, [r2, #0x0]
	add		r1, r1, r7
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mov		r2, #0x2
	bl		sub_0808e3c0
_080322e8:
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	add		r0, r8
	add		r0, #0x56
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	add		r1, r2, #0x1
	cmp		r5, #0x4
	bgt		_080322fc
	sub		r1, r2, #0x1
_080322fc:
	strh	r1, [r0, #0x0]
	ldr		r2, [sp, #0xC]
	ldr		r4, [r2, #0x0]
	mov		r1, r9
	add		r0, r5, r1
	ldr		r2, [sp, #0x14]
	mul		r0, r2
	ldr		r1, [sp, #0x8]
	ldrb	r2, [r1, #0x0]
	lsl		r1, r2, #0x2
	add		r1, r1, r2
	lsl		r1, r1, #0x1
	bl		sub_080bbcac
	ldr		r2, [sp, #0x0]
	add		r0, r2, r0
	add		r4, #0x54
	strh	r0, [r4, #0x0]
	ldr		r0, [sp, #0x18]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	cmp		r5, #0x9
	ble		_080322cc
	ldr		r7, [sp, #0x10]
	ldr		r4, [sp, #0x8]
	ldrb	r4, [r4, #0x0]
	cmp		r7, r4
	blt		_080322b6
_08032340:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08032350:	.4byte 0x000001DF
_08032354:	.4byte 0x000001E1
	thumb_func_end sub_080321ec

	thumb_func_start sub_08032358
sub_08032358:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	mov		r4, #0x0
	ldr		r0, _08032380
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08032430
	mov		r0, #0xef
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	bls		_08032374
	b		_0803257c
_08032374:
	lsl		r0, r0, #0x2
	ldr		r1, _08032384
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3237E, 0x2

_08032380:	.4byte 0x0200D540
_08032384:	.4byte 0x08032388
_08032388:	.4byte 0x080323cc

.incbin "base.gba", 0x3238C, 0x40
	thumb_func_end sub_08032358


.incbin "base.gba", 0x323CC, 0x64

_08032430:

.incbin "base.gba", 0x32430, 0xE
_0803243e:

.incbin "base.gba", 0x3243E, 0xA
_08032448:	.4byte 0x0803244c
_0803244c:	.4byte 0x080324a0

.incbin "base.gba", 0x32450, 0x100

_08032550:

.incbin "base.gba", 0x32550, 0x2C

_0803257c:

.incbin "base.gba", 0x3257C, 0x28
_080325a4:

.incbin "base.gba", 0x325A4, 0x24
_080325c8:

.incbin "base.gba", 0x325C8, 0xA
_080325d2:

.incbin "base.gba", 0x325D2, 0x1C
_080325ee:

.incbin "base.gba", 0x325EE, 0x6
	thumb_func_start sub_080325f4
sub_080325f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	add		r7, r1, #0x0
	mov		r0, #0xef
	lsl		r0, r0, #0x1
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	bls		_0803260e
	b		_080328ac
_0803260e:
	lsl		r0, r0, #0x2
	ldr		r1, _08032618
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08032618:	.4byte 0x0803261c
_0803261c:	.4byte 0x08032660

.incbin "base.gba", 0x32620, 0x40
	thumb_func_end sub_080325f4


.incbin "base.gba", 0x32660, 0x24C

_080328ac:

.incbin "base.gba", 0x328AC, 0xC
	thumb_func_start sub_080328b8
sub_080328b8:
	push	{ r4, lr }
	cmp		r0, #0x10
	bls		_080328c0
	b		_08032ba6
_080328c0:
	lsl		r0, r0, #0x2
	ldr		r1, _080328cc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x328CA, 0x2

_080328cc:	.4byte 0x080328d0
_080328d0:	.4byte 0x08032960

.incbin "base.gba", 0x328D4, 0x40
	thumb_func_end sub_080328b8


.incbin "base.gba", 0x32914, 0x292

_08032ba6:

.incbin "base.gba", 0x32BA6, 0x2E
_08032bd4:	.4byte 0x0200BAB0
_08032bd8:	.4byte 0x080d2ed4 @ script_ranking_result
_08032bdc:	.4byte 0x0200BAAC
_08032be0:	.4byte 0x080d2eec @ script_load_result_obj
	thumb_func_start sub_08032be4
sub_08032be4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08032c1c
	ldrh	r0, [r0, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08032c06
	ldr		r0, _08032c20
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08032c06
	ldr		r0, _08032c24
	bl		sub_0808c670
_08032c06:
	ldr		r0, [r4, #0x14]
	add		r0, #0x4
	ldr		r1, _08032c28
	ldr		r3, _08032c2c
	mov		r2, #0x4
	bl		sub_08000a2c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32C1A, 0x2

_08032c1c:	.4byte 0x04000004
_08032c20:	.4byte 0x0200CDBC
_08032c24:	.4byte 0x080d2e9c @ CRankingResult::CRasterDraw::Draw() is out of VBalnk!!
_08032c28:	.4byte 0x04000010
_08032c2c:	.4byte 0xA6600003
	thumb_func_end sub_08032be4

	thumb_func_start sub_08032c30
sub_08032c30:
	push	{ lr }
	ldr		r2, _08032c40
	str		r2, [r0, #0xc]
	bl		sub_080006b4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32C3E, 0x2

_08032c40:	.4byte 0x080e14ac
	thumb_func_end sub_08032c30

	thumb_func_start sub_08032c44
sub_08032c44:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _08032c58
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08032c58:	.4byte 0x080e14ac
	thumb_func_end sub_08032c44

	thumb_func_start sub_08032c5c
sub_08032c5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, _08032cd0
	add		r1, r5, r0
	mov		r0, #0x12
	strb	r0, [r1, #0x0]
	add		r7, r5, #0x0
	add		r7, #0x94
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	mov		r10, r1
	mov		r9, r7
	mov		r0, #0x0
	mov		r8, r0
	mov		r6, #0x13
_08032c82:
	ldr		r4, [r7, #0x0]
	mov		r0, r8
	mov		r1, #0x14
	bl		sub_080bbcac
	mov		r1, r10
	sub		r0, r1, r0
	add		r4, #0x54
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r0, #0x48
	add		r8, r0
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08032c82
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0x54
	mov		r1, #0xc8
	strh	r1, [r0, #0x0]
	mov		r0, #0x52
	bl		sub_0808f690
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32CCE, 0x2

_08032cd0:	.4byte 0x000001DF
	thumb_func_end sub_08032c5c

	thumb_func_start sub_08032cd4
sub_08032cd4:
	push	{ lr }
	ldr		r0, _08032cec
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08032ce6
	ldr		r0, _08032cf0
	bl		sub_0808c670
_08032ce6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32CEA, 0x2

_08032cec:	.4byte 0x0200CDBC
_08032cf0:	.4byte 0x080d2e44 @ kono_kansuuwo_tsukawanaide_hoshi
	thumb_func_end sub_08032cd4

	thumb_func_start sub_08032cf4
sub_08032cf4:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x20
	add		r6, r0, #0x0
	ldr		r0, _08032d2c
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08032d06
	b		_08032f5a
_08032d06:
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x20
	bl		sub_0808c828
	mov		r5, #0x0
	mov		r1, #0xef
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	bls		_08032d20
	b		_08032ee8
_08032d20:
	lsl		r0, r0, #0x2
	ldr		r1, _08032d30
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x32D2A, 0x2

_08032d2c:	.4byte 0x00000282
_08032d30:	.4byte 0x08032d34
_08032d34:	.4byte 0x08032d78

.incbin "base.gba", 0x32D38, 0x40
	thumb_func_end sub_08032cf4


.incbin "base.gba", 0x32D78, 0x170

_08032ee8:

.incbin "base.gba", 0x32EE8, 0x18
_08032f00:

.incbin "base.gba", 0x32F00, 0xA
_08032f0a:

.incbin "base.gba", 0x32F0A, 0x18
_08032f22:

.incbin "base.gba", 0x32F22, 0x26
_08032f48:	.4byte 0x080d2df4 @ a_kobayashi/RankingResult.cpp
_08032f4c:	.4byte 0x000004BC
_08032f50:	.4byte 0x000004C5

_08032f54:

.incbin "base.gba", 0x32F54, 0x6
_08032f5a:

.incbin "base.gba", 0x32F5A, 0xA
	thumb_func_start sub_08032f64
sub_08032f64:
	push	{ lr }
	sub		sp, #0x4
	mov		r1, #0xef
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	bhi		_08032ffc
	lsl		r0, r0, #0x2
	ldr		r1, _08032f80
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x32F7E, 0x2

_08032f80:	.4byte 0x08032f84
_08032f84:	.4byte 0x08032fc8

.incbin "base.gba", 0x32F88, 0x40
	thumb_func_end sub_08032f64


.incbin "base.gba", 0x32FC8, 0x34

_08032ffc:

.incbin "base.gba", 0x32FFC, 0x28
_08033024:	.4byte 0x080d2df4 @ a_kobayashi/RankingResult.cpp
	thumb_func_start sub_08033028
sub_08033028:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r8, r2
	str		r3, [sp, #0x4]
	ldr		r0, [sp, #0x0+0x28]
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strb	r7, [r0, #0x0]
	mov		r0, r8
	add		r1, r7, #0x0
	bl		sub_0807caa4
	add		r0, r6, #0x0
	bl		sub_08032f64
	mov		r5, #0x0
	cmp		r5, r7
	bge		_080330ae
	mov		r2, #0xbc
	add		r2, r2, r6
	mov		r10, r2
	mov		r0, #0xb4
	add		r0, r0, r6
	mov		r9, r0
	mov		r1, #0x1
	neg		r1, r1
	mov		r12, r1
_08033070:
	lsl		r0, r5, #0x2
	mov		r2, r10
	add		r1, r2, r0
	ldr		r2, [sp, #0x0]
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, r9
	add		r1, r0, r5
	mov		r2, r8
	add		r0, r2, r5
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
	lsl		r1, r5, #0x5
	add		r0, r1, #0x0
	add		r0, #0xdc
	add		r3, r6, r0
	mov		r4, #0x1f
	ldr		r0, [sp, #0x4]
	add		r2, r0, r1
	add		r1, r5, #0x1
_0803309a:
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	add		r2, #0x1
	sub		r4, #0x1
	cmp		r4, r12
	bne		_0803309a
	add		r5, r1, #0x0
	cmp		r5, r7
	blt		_08033070
_080330ae:
	add		r0, r6, #0x0
	bl		sub_08031314
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08033028

	thumb_func_start sub_080330c4
sub_080330c4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r5, r7, #0x0
	add		r5, #0x90
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r6, #0x0
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xfe
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r5, #0x0]
	add		r0, #0x69
	strb	r6, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x54
	mov		r1, #0x0
	mov		r10, r1
	mov		r1, #0x8d
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x56
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x5c
	strh	r6, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x64
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r5, #0x4
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	mov		r8, r2
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x69
	mov		r1, r10
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x56
	mov		r1, #0x38
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x5c
	ldr		r1, _08033258
	strh	r1, [r0, #0x0]
	mov		r2, #0xef
	lsl		r2, r2, #0x1
	add		r2, r2, r7
	mov		r9, r2
	ldrb	r1, [r2, #0x0]
	sub		r0, r1, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_08033194
	b		_080333b4
_08033194:
	add		r0, r1, #0x0
	cmp		r0, #0xa
	bne		_0803319c
	b		_080333b4
_0803319c:
	cmp		r0, #0xc
	bne		_080331a2
	b		_080333b4
_080331a2:
	cmp		r0, #0xd
	bne		_080331a8
	b		_080333b4
_080331a8:
	add		r5, #0x4
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x69
	mov		r1, r10
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x54
	mov		r1, #0x98
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x56
	mov		r1, #0x30
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x5c
	ldr		r1, _0803325c
	strh	r1, [r0, #0x0]
	add		r5, #0x4
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r5, #0x0]
	add		r0, #0x69
	mov		r2, r10
	strb	r2, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x54
	mov		r1, #0x9c
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x56
	mov		r1, #0x28
	strh	r1, [r0, #0x0]
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x10
	bhi		_080332d4
	lsl		r0, r0, #0x2
	ldr		r1, _08033260
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x33256, 0x2

_08033258:	.4byte 0x0000FFF6
_0803325c:	.4byte 0x0000FFEC
_08033260:	.4byte 0x08033264
_08033264:	.4byte 0x080332a8

.incbin "base.gba", 0x33268, 0x40
	thumb_func_end sub_080330c4


.incbin "base.gba", 0x332A8, 0x2C

_080332d4:

.incbin "base.gba", 0x332D4, 0x38
_0803330c:

.incbin "base.gba", 0x3330C, 0x1A
_08033326:

.incbin "base.gba", 0x33326, 0x34
_0803335a:

.incbin "base.gba", 0x3335A, 0x5A
_080333b4:

.incbin "base.gba", 0x333B4, 0x5A
_0803340e:

.incbin "base.gba", 0x3340E, 0x3A
_08033448:	.4byte 0x000001E1
_0803344c:	.4byte 0x0200D538
_08033450:	.4byte 0x08033454
_08033454:	.4byte 0x08033474

.incbin "base.gba", 0x33458, 0x4C

_080334a4:

.incbin "base.gba", 0x334A4, 0x20
_080334c4:

.incbin "base.gba", 0x334C4, 0x50
_08033514:	.4byte 0x080d2df4 @ a_kobayashi/RankingResult.cpp
	thumb_func_start sub_08033518
sub_08033518:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	ldr		r5, _08033548
	ldr		r1, _0803354c
	add		r0, r5, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, r4, #0x0
	bl		sub_080300ac
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08033548:	.4byte 0x0200DB40
_0803354c:	.4byte 0xFFFFFEC0

.incbin "base.gba", 0x33550, 0x28
	thumb_func_end sub_08033518

	thumb_func_start sub_08033578
sub_08033578:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, [r1, #0x64]
	ldr		r2, [r1, #0x5c]
	cmp		r0, r2
	bne		_0803358a
	ldr		r0, [r1, #0x60]
	str		r0, [r1, #0x64]
	b		_0803358c
_0803358a:
	str		r2, [r1, #0x64]
_0803358c:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08033578

	thumb_func_start sub_08033590
sub_08033590:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	strb	r1, [r4, #0x1c]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	cmp		r1, #0x2
	bgt		_080335ae
	ldr		r0, _0803360c
	mov		r1, #0x16
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080335ae:
	mov		r0, #0x1c
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	str		r0, [r4, #0x0]
	mov		r0, #0x1c
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	str		r0, [r4, #0x4]
	mov		r0, #0x1c
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	str		r0, [r4, #0x8]
	mov		r0, #0x1c
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	str		r0, [r4, #0xc]
	mov		r0, #0x1c
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	str		r0, [r4, #0x10]
	mov		r0, #0x1c
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	str		r0, [r4, #0x14]
	mov		r0, #0x1c
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	str		r0, [r4, #0x18]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3360A, 0x2

_0803360c:	.4byte 0x080d2f04 @ a_kobayashi/Spline.cpp
	thumb_func_end sub_08033590

	thumb_func_start sub_08033610
sub_08033610:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	mov		r9, r1
	mov		r8, r3
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	mov		r1, #0x1c
	ldrsb	r1, [r6, r1]
	lsl		r1, r1, #0x2
	add		r1, r8
	sub		r1, #0x4
	str		r0, [r1, #0x0]
	mov		r3, #0x0
	mov		r0, #0x1c
	ldrsb	r0, [r6, r0]
	sub		r0, #0x1
	cmp		r3, r0
	bge		_0803367a
	add		r7, r2, #0x0
	ldr		r4, [r6, #0x18]
	mov		r5, r9
	ldr		r0, [r6, #0x14]
	mov		r10, r0
_08033648:
	ldr		r1, [r5, #0x4]
	ldmia	r5!, { r0 }
	sub		r1, r1, r0
	mov		r2, r10
	add		r2, #0x4
	mov		r10, r2
	sub		r2, #0x4
	stmia	r2!, {  r1 }
	ldr		r0, [r7, #0x4]
	ldmia	r7!, { r2 }
	sub		r0, r0, r2
	asr		r1, r1, #0x8
	str		r3, [sp, #0x0]
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	str		r0, [r4, #0x4]
	add		r4, #0x4
	ldr		r3, [sp, #0x0]
	add		r3, #0x1
	mov		r0, #0x1c
	ldrsb	r0, [r6, r0]
	sub		r0, #0x1
	cmp		r3, r0
	blt		_08033648
_0803367a:
	ldr		r3, [r6, #0x18]
	ldr		r1, [r3, #0x8]
	ldr		r0, [r3, #0x4]
	sub		r1, r1, r0
	ldr		r0, [r6, #0x14]
	ldr		r2, [r0, #0x0]
	mov		r4, r8
	ldr		r0, [r4, #0x0]
	mul		r0, r2
	sub		r1, r1, r0
	str		r1, [r4, #0x4]
	mov		r5, r9
	ldr		r0, [r5, #0x8]
	ldr		r1, [r5, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x1
	str		r0, [r3, #0x4]
	mov		r3, #0x1
	mov		r0, #0x1c
	ldrsb	r0, [r6, r0]
	sub		r0, #0x2
	cmp		r3, r0
	bge		_0803371a
	mov		r0, #0x4
	add		r9, r0
	mov		r7, r8
	add		r7, #0x4
_080336b0:
	ldr		r2, [r6, #0x14]
	lsl		r4, r3, #0x2
	add		r2, r4, r2
	ldr		r0, [r6, #0x18]
	add		r0, r4, r0
	ldr		r1, [r0, #0x0]
	asr		r1, r1, #0x8
	ldr		r0, [r2, #0x0]
	str		r3, [sp, #0x0]
	bl		sub_080bbcac
	add		r5, r0, #0x0
	lsl		r5, r5, #0x8
	ldr		r0, [r7, #0x0]
	add		r1, r5, #0x0
	mov		r2, #0x10
	bl		sub_0808c118
	ldr		r1, [r6, #0x18]
	add		r1, r4, r1
	ldr		r2, [r1, #0x8]
	ldr		r1, [r1, #0x4]
	sub		r2, r2, r1
	sub		r2, r2, r0
	str		r2, [r7, #0x4]
	ldr		r0, [r6, #0x14]
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	mov		r2, #0x10
	bl		sub_0808c118
	ldr		r1, [r6, #0x18]
	add		r4, r4, r1
	mov		r2, r9
	ldr		r1, [r2, #0x8]
	add		r5, r2, #0x0
	add		r5, #0x4
	mov		r9, r5
	sub		r5, #0x4
	ldmia	r5!, { r2 }
	sub		r1, r1, r2
	lsl		r1, r1, #0x1
	sub		r1, r1, r0
	str		r1, [r4, #0x4]
	add		r7, #0x4
	ldr		r3, [sp, #0x0]
	add		r3, #0x1
	mov		r0, #0x1c
	ldrsb	r0, [r6, r0]
	sub		r0, #0x2
	cmp		r3, r0
	blt		_080336b0
_0803371a:
	mov		r1, #0x1c
	ldrsb	r1, [r6, r1]
	ldr		r0, [r6, #0x14]
	lsl		r1, r1, #0x2
	add		r0, r1, r0
	sub		r0, #0x8
	ldr		r0, [r0, #0x0]
	add		r1, r8
	sub		r1, #0x4
	ldr		r1, [r1, #0x0]
	mov		r2, #0x10
	bl		sub_0808c118
	mov		r1, #0x1c
	ldrsb	r1, [r6, r1]
	lsl		r1, r1, #0x2
	add		r1, r8
	sub		r1, #0x8
	ldr		r2, [r1, #0x0]
	sub		r2, r2, r0
	str		r2, [r1, #0x0]
	mov		r0, #0x1c
	ldrsb	r0, [r6, r0]
	sub		r3, r0, #0x2
	cmp		r3, #0x0
	ble		_08033786
	lsl		r0, r3, #0x2
	mov		r1, r8
	add		r5, r0, r1
_08033754:
	ldr		r0, [r6, #0x14]
	lsl		r4, r3, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	ldr		r1, [r5, #0x4]
	mov		r2, #0x10
	str		r3, [sp, #0x0]
	bl		sub_0808c118
	ldr		r2, [r5, #0x0]
	sub		r2, r2, r0
	ldr		r0, [r6, #0x18]
	add		r4, r4, r0
	ldr		r1, [r4, #0x0]
	asr		r1, r1, #0x8
	add		r0, r2, #0x0
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	str		r0, [r5, #0x0]
	sub		r5, #0x4
	ldr		r3, [sp, #0x0]
	sub		r3, #0x1
	cmp		r3, #0x0
	bgt		_08033754
_08033786:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x33796, 0x2
	thumb_func_end sub_08033610

	thumb_func_start sub_08033798
sub_08033798:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r1, #0x0
	add		r7, r3, #0x0
	mov		r5, #0x0
	ldrb	r0, [r0, #0x1c]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	sub		r3, r0, #0x1
_080337b0:
	cmp		r5, r3
	bge		_080337ce
	add		r0, r5, r3
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r1, r0, #0x1
	lsl		r0, r1, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, r4
	bcs		_080337ca
	add		r5, r1, #0x1
	b		_080337b0
_080337ca:
	add		r3, r1, #0x0
	b		_080337b0
_080337ce:
	cmp		r5, #0x0
	ble		_080337d4
	sub		r5, #0x1
_080337d4:
	lsl		r5, r5, #0x2
	add		r0, r5, r2
	ldr		r1, [r0, #0x4]
	mov		r8, r1
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	sub		r1, r1, r0
	mov		r8, r1
	sub		r0, r4, r0
	mov		r9, r0
	ldr		r4, [sp, #0x0+0x20]
	add		r4, r5, r4
	ldr		r0, [r4, #0x4]
	ldr		r1, [r4, #0x0]
	sub		r0, r0, r1
	mov		r1, r9
	mov		r2, #0x10
	bl		sub_0808c118
	mov		r1, r8
	asr		r1, r1, #0x8
	mov		r10, r1
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	ldr		r2, [r4, #0x0]
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	add		r0, r0, r1
	mov		r1, r9
	mov		r2, #0x10
	bl		sub_0808c118
	add		r6, r0, #0x0
	ldr		r0, [r4, #0x0]
	lsl		r0, r0, #0x1
	ldr		r1, [r4, #0x4]
	add		r0, r0, r1
	mov		r1, r8
	mov		r2, #0x10
	bl		sub_0808c118
	add		r4, r0, #0x0
	add		r5, r5, r7
	ldr		r0, [r5, #0x4]
	ldr		r1, [r5, #0x0]
	sub		r0, r0, r1
	mov		r1, r10
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	sub		r0, r0, r4
	add		r6, r6, r0
	add		r0, r6, #0x0
	mov		r1, r9
	mov		r2, #0x10
	bl		sub_0808c118
	ldr		r1, [r5, #0x0]
	add		r0, r0, r1
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3385A, 0x2
	thumb_func_end sub_08033798

	thumb_func_start sub_0803385c
sub_0803385c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	add		r4, r2, #0x0
	mov		r2, #0x1c
	ldrsb	r2, [r7, r2]
	ldr		r0, [r7, #0x0]
	lsl		r2, r2, #0x2
	bl		sub_0808c694
	mov		r2, #0x1c
	ldrsb	r2, [r7, r2]
	ldr		r0, [r7, #0x4]
	lsl		r2, r2, #0x2
	add		r1, r4, #0x0
	bl		sub_0808c694
	ldr		r1, [r7, #0x10]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0x1
	mov		r8, r0
	b		_080338ec
_08033890:
	ldr		r0, [r7, #0x0]
	mov		r1, r8
	lsl		r6, r1, #0x2
	add		r0, r6, r0
	sub		r2, r0, #0x4
	ldr		r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r1, r1, r0
	ldr		r0, [r7, #0x4]
	add		r0, r6, r0
	sub		r2, r0, #0x4
	ldr		r5, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r5, r5, r0
	add		r0, r1, #0x0
	mov		r2, #0x10
	bl		sub_0808c118
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x10
	bl		sub_0808c118
	add		r4, r4, r0
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808c5c0
	ldr		r1, [r7, #0x10]
	add		r6, r6, r1
	sub		r1, r6, #0x4
	ldr		r1, [r1, #0x0]
	add		r1, r1, r0
	str		r1, [r6, #0x0]
	cmp		r1, #0x0
	bge		_080338e8
	ldr		r0, _08033954
	mov		r1, #0x68
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080338e8:
	mov		r0, #0x1
	add		r8, r0
_080338ec:
	mov		r0, #0x1c
	ldrsb	r0, [r7, r0]
	cmp		r8, r0
	blt		_08033890
	mov		r1, #0x1
	mov		r8, r1
	mov		r0, #0x1c
	ldrsb	r0, [r7, r0]
	ldr		r1, [r7, #0x0]
	mov		r10, r1
	ldr		r5, [r7, #0x10]
	ldr		r1, [r7, #0x8]
	mov		r9, r1
	cmp		r8, r0
	bge		_0803392e
	add		r6, r5, #0x0
	add		r4, r5, #0x4
_0803390e:
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	sub		r0, #0x4
	ldr		r1, [r0, #0x0]
	asr		r1, r1, #0x8
	ldr		r0, [r4, #0x0]
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	stmia	r4!, { r0 }
	mov		r0, #0x1
	add		r8, r0
	mov		r0, #0x1c
	ldrsb	r0, [r7, r0]
	cmp		r8, r0
	blt		_0803390e
_0803392e:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, r10
	mov		r3, r9
	bl		sub_08033610
	ldr		r1, [r7, #0x10]
	ldr		r2, [r7, #0x4]
	ldr		r3, [r7, #0xc]
	add		r0, r7, #0x0
	bl		sub_08033610
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08033954:	.4byte 0x080d2f04 @ a_kobayashi/Spline.cpp
	thumb_func_end sub_0803385c

	thumb_func_start sub_08033958
sub_08033958:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	mov		r8, r3
	ldr		r2, [r4, #0x10]
	ldr		r3, [r4, #0x0]
	ldr		r0, [r4, #0x8]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	bl		sub_08033798
	str		r0, [r5, #0x0]
	ldr		r2, [r4, #0x10]
	ldr		r3, [r4, #0x4]
	ldr		r0, [r4, #0xc]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08033798
	mov		r1, r8
	str		r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08033958

	thumb_func_start sub_08033998
sub_08033998:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080339a8
	bl		sub_0808afd0
_080339a8:
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	beq		_080339b2
	bl		sub_0808afd0
_080339b2:
	ldr		r0, [r4, #0x8]
	cmp		r0, #0x0
	beq		_080339bc
	bl		sub_0808afd0
_080339bc:
	ldr		r0, [r4, #0xc]
	cmp		r0, #0x0
	beq		_080339c6
	bl		sub_0808afd0
_080339c6:
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_080339d0
	bl		sub_0808afd0
_080339d0:
	ldr		r0, [r4, #0x14]
	cmp		r0, #0x0
	beq		_080339da
	bl		sub_0808afd0
_080339da:
	ldr		r0, [r4, #0x18]
	cmp		r0, #0x0
	beq		_080339e4
	bl		sub_0808afd0
_080339e4:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080339f2
	add		r0, r4, #0x0
	bl		sub_0808afac
_080339f2:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08033998

	thumb_func_start sub_080339f8
sub_080339f8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	lsl		r4, r1, #0x18
	lsr		r4, r4, #0x18
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08033a4c
	str		r0, [r5, #0x4c]
	ldr		r0, _08033a50
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x55
	mov		r2, #0x0
	strb	r4, [r0, #0x0]
	add		r0, #0x1
	strb	r2, [r0, #0x0]
	add		r0, #0x1
	strb	r2, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x58
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	mov		r0, #0xa0
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x5a
	strb	r2, [r0, #0x0]
	add		r1, #0x2
	mov		r0, #0x1f
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x54
	strb	r2, [r0, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08033a4c:	.4byte 0x080e14c4
_08033a50:	.4byte 0x080e14dc
	thumb_func_end sub_080339f8

	thumb_func_start sub_08033a54
sub_08033a54:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _08033aa4
	ldrh	r0, [r0, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08033a76
	ldr		r0, _08033aa8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08033a76
	ldr		r0, _08033aac
	bl		sub_0808c670
_08033a76:
	add		r0, r4, #0x0
	add		r0, #0x55
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r5, r0, #0x0
	cmp		r1, #0x0
	bne		_08033a8a
	mov		r2, #0x80
	lsl		r2, r2, #0x6
_08033a8a:
	add		r0, r4, #0x0
	add		r0, #0x5a
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08033ab4
	ldr		r0, _08033ab0
	ldrh	r0, [r0, #0x0]
	orr		r2, r0
	add		r0, r2, #0x0
	bl		sub_0800132c
	b		_08033abe

.incbin "base.gba", 0x33AA2, 0x2

_08033aa4:	.4byte 0x04000004
_08033aa8:	.4byte 0x0200CDBC
_08033aac:	.4byte 0x080d2f1c @ CWindow::Draw() is out of VBalnk!!
_08033ab0:	.4byte 0x02000B18

_08033ab4:
	ldr		r0, _08033b10
	ldrh	r0, [r0, #0x0]
	bic		r0, r2
	bl		sub_0800132c
_08033abe:
	ldrb	r0, [r5, #0x0]
	ldr		r2, _08033b14
	cmp		r0, #0x0
	bne		_08033ac8
	sub		r2, #0x2
_08033ac8:
	ldr		r3, _08033b18
	cmp		r0, #0x0
	bne		_08033ad0
	sub		r3, #0x2
_08033ad0:
	add		r0, r4, #0x0
	add		r0, #0x56
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x8
	add		r0, #0x2
	ldrb	r0, [r0, #0x0]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x57
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x8
	add		r0, #0x2
	ldrb	r0, [r0, #0x0]
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldrb	r0, [r5, #0x0]
	ldr		r2, _08033b1c
	cmp		r0, #0x0
	bne		_08033afa
	sub		r2, #0x1
_08033afa:
	ldr		r1, _08033b20
	add		r0, r4, #0x0
	add		r0, #0x5b
	ldrb	r0, [r0, #0x0]
	strb	r0, [r2, #0x0]
	ldr		r0, _08033b24
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08033b10:	.4byte 0x02000B18
_08033b14:	.4byte 0x04000042
_08033b18:	.4byte 0x04000046
_08033b1c:	.4byte 0x04000049
_08033b20:	.4byte 0x0400004A
_08033b24:	.4byte 0x0200D544
	thumb_func_end sub_08033a54

	thumb_func_start sub_08033b28
sub_08033b28:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08033b38
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_08033b38:	.4byte 0xFFFFF101

.incbin "base.gba", 0x33B3C, 0xC
	thumb_func_end sub_08033b28

	thumb_func_start sub_08033b48
sub_08033b48:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	ldr		r6, [sp, #0x0+0x18]
	ldr		r4, [sp, #0x4+0x18]
	mov		r8, r4
	ldr		r4, [sp, #0x8+0x18]
	mov		r9, r4
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	lsl		r2, r2, #0x18
	lsl		r3, r3, #0x18
	lsl		r6, r6, #0x18
	mov		r4, r8
	lsl		r4, r4, #0x18
	mov		r8, r4
	mov		r4, r9
	lsl		r4, r4, #0x18
	mov		r9, r4
	add		r5, r0, #0x0
	add		r5, #0x54
	mov		r4, #0x1
	strb	r4, [r5, #0x0]
	ldr		r4, _08033ba4
	lsr		r2, r2, #0x17
	orr		r1, r2
	lsr		r3, r3, #0x16
	orr		r1, r3
	lsr		r6, r6, #0x15
	orr		r1, r6
	mov		r2, r8
	lsr		r2, r2, #0x14
	orr		r1, r2
	mov		r2, r9
	lsr		r2, r2, #0x13
	orr		r1, r2
	strb	r1, [r4, #0x0]
	bl		sub_080b76d4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08033ba4:	.4byte 0x0200D544
	thumb_func_end sub_08033b48

	thumb_func_start sub_08033ba8
sub_08033ba8:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	ldr		r6, [sp, #0x0+0x18]
	ldr		r4, [sp, #0x4+0x18]
	mov		r8, r4
	ldr		r4, [sp, #0x8+0x18]
	mov		r9, r4
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	lsl		r2, r2, #0x18
	lsl		r3, r3, #0x18
	lsl		r6, r6, #0x18
	mov		r4, r8
	lsl		r4, r4, #0x18
	mov		r8, r4
	mov		r4, r9
	lsl		r4, r4, #0x18
	mov		r9, r4
	add		r5, r0, #0x0
	add		r5, #0x54
	mov		r4, #0x1
	strb	r4, [r5, #0x0]
	lsr		r2, r2, #0x17
	orr		r1, r2
	lsr		r3, r3, #0x16
	orr		r1, r3
	lsr		r6, r6, #0x15
	orr		r1, r6
	mov		r2, r8
	lsr		r2, r2, #0x14
	orr		r1, r2
	mov		r4, r9
	lsr		r4, r4, #0x13
	orr		r1, r4
	add		r2, r0, #0x0
	add		r2, #0x5b
	strb	r1, [r2, #0x0]
	bl		sub_080b76d4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x33C06, 0x2
	thumb_func_end sub_08033ba8

	thumb_func_start sub_08033c08
sub_08033c08:
	push	{ r4, r5, lr }
	mov		r12, r0
	ldr		r0, [sp, #0x0+0xc]
	lsl		r1, r1, #0x18
	lsr		r4, r1, #0x18
	lsl		r2, r2, #0x18
	lsr		r5, r2, #0x18
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	mov		r1, r12
	add		r1, #0x54
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	cmp		r4, r3
	bcs		_08033c36
	mov		r0, r12
	add		r0, #0x56
	strb	r4, [r0, #0x0]
	add		r0, #0x2
	strb	r3, [r0, #0x0]
	b		_08033c40
_08033c36:
	mov		r0, r12
	add		r0, #0x56
	strb	r3, [r0, #0x0]
	add		r0, #0x2
	strb	r4, [r0, #0x0]
_08033c40:
	cmp		r5, r2
	bcs		_08033c50
	mov		r0, r12
	add		r0, #0x57
	strb	r5, [r0, #0x0]
	add		r0, #0x2
	strb	r2, [r0, #0x0]
	b		_08033c5a
_08033c50:
	mov		r0, r12
	add		r0, #0x57
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strb	r5, [r0, #0x0]
_08033c5a:
	mov		r0, r12
	bl		sub_080b76d4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x33C66, 0xBE
	thumb_func_end sub_08033c08

	thumb_func_start sub_08033d24
sub_08033d24:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08033e6c
	str		r0, [r7, #0x4c]
	ldr		r0, _08033e70
	str		r0, [r7, #0xc]
	bl		sub_080706ac
	str		r0, [r7, #0x68]
	add		r0, r7, #0x0
	add		r0, #0xf8
	bl		sub_0808e21c
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r3, #0xc4
	lsl		r3, r3, #0x1
	add		r4, r7, r3
	mov		r5, #0x5
	mov		r8, r0
	mov		r6, #0x1
	neg		r6, r6
_08033d72:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r8
	str		r0, [r4, #0x6c]
	add		r4, #0x90
	sub		r5, #0x1
	cmp		r5, r6
	bne		_08033d72
	ldr		r5, _08033e74
	ldr		r1, _08033e78
	add		r4, r5, r1
	add		r0, r4, #0x0
	mov		r1, #0x91
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, r7, #0x0
	bl		sub_08035ff0
	add		r1, r0, #0x0
	str		r1, [r7, #0x58]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	mov		r1, #0xf0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, r7, #0x0
	bl		sub_08038a98
	add		r1, r0, #0x0
	str		r1, [r7, #0x5c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	mov		r1, #0x87
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, r7, #0x0
	bl		sub_08038538
	add		r1, r0, #0x0
	str		r1, [r7, #0x64]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _08033e7c
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x70]
	ldr		r0, _08033e80
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x74]
	ldr		r0, _08033e84
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x54]
	mov		r0, #0x20
	bl		sub_0808af94
	add		r1, r7, #0x0
	bl		sub_0803836c
	str		r0, [r7, #0x6c]
	ldr		r0, [r7, #0x54]
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldrh	r1, [r0, #0x0]
	ldr		r3, _08033e88
	add		r0, r7, r3
	mov		r5, #0x0
	mov		r4, #0x0
	strh	r1, [r0, #0x0]
	mov		r2, #0xa5
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	add		r3, #0x4
	add		r0, r7, r3
	strb	r5, [r0, #0x0]
	ldr		r1, _08033e8c
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r2, _08033e90
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	ldr		r0, _08033e94
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08033eb4
	ldr		r0, _08033e98
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08033e9c
	mov		r0, #0xa6
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_08033ebc

.incbin "base.gba", 0x33E6A, 0x2

_08033e6c:	.4byte 0x080e1504
_08033e70:	.4byte 0x080e151c
_08033e74:	.4byte 0x0200DB50
_08033e78:	.4byte 0xFFFFFEB0
_08033e7c:	.4byte 0x0200D518
_08033e80:	.4byte 0x0200D524
_08033e84:	.4byte 0x0200D51C
_08033e88:	.4byte 0x0000052A
_08033e8c:	.4byte 0x0000052F
_08033e90:	.4byte 0x00000534
_08033e94:	.4byte 0x0000029E
_08033e98:	.4byte 0x0000029F

_08033e9c:
	mov		r0, #0xa8
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08033eb4
	mov		r2, #0xa6
	lsl		r2, r2, #0x3
	add		r1, r7, r2
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	b		_08033ebc
_08033eb4:
	mov		r3, #0xa6
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	strb	r5, [r0, #0x0]
_08033ebc:
	ldr		r4, _08034134
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080b63dc
	ldr		r2, _08034138
	add		r1, r7, r2
	mov		r3, #0x0
	mov		r8, r3
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080b63dc
	ldr		r2, _0803413c
	add		r1, r7, r2
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080b63dc
	ldr		r3, _08034140
	add		r1, r7, r3
	strb	r0, [r1, #0x0]
	mov		r1, #0xa7
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	mov		r2, #0x1
	mov		r9, r2
	str		r2, [r0, #0x0]
	sub		r3, #0x7
	add		r4, r7, r3
	ldr		r0, _08034144
	strh	r0, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_08035100
	mov		r0, r8
	strh	r0, [r4, #0x0]
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r4, r7, r1
	add		r0, r4, #0x0
	mov		r1, #0x19
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08034148
	add		r0, r7, r2
	mov		r6, #0x3
	strb	r6, [r0, #0x0]
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r5, #0x3a
	strh	r5, [r0, #0x0]
	ldr		r2, [r7, #0x54]
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	mov		r3, #0x9d
	lsl		r3, r3, #0x3
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcf
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r0, #0x86
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x1a
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _0803414c
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r2, #0x9d
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	ldr		r2, [r7, #0x54]
	mov		r3, #0xd0
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	ldr		r3, _08034150
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xd1
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r0, #0xaa
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x1b
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08034154
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r2, #0xc1
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	ldr		r2, [r7, #0x54]
	mov		r3, #0xd2
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	mov		r3, #0x9e
	lsl		r3, r3, #0x3
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xd3
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r0, #0xce
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x1d
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08034158
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r2, #0xe5
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	ldr		r2, [r7, #0x54]
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	ldr		r3, _0803415c
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r0, #0xf2
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08034160
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	ldr		r2, _08034164
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	ldr		r2, [r7, #0x54]
	mov		r3, #0xca
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	mov		r3, #0x9f
	lsl		r3, r3, #0x3
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r0, #0x8b
	lsl		r0, r0, #0x3
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x1e
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08034168
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	ldr		r2, _0803416c
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	ldr		r2, [r7, #0x54]
	mov		r3, #0xcc
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	ldr		r3, _08034170
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xa3
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	mov		r2, r8
	str		r2, [r0, #0x0]
	add		r3, #0x8
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xf8
	add		r0, r4, #0x0
	mov		r1, #0x18
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x78
	strh	r0, [r1, #0x0]
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x30
	strh	r0, [r1, #0x0]
	mov		r3, #0xaa
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r2, #0x13
	add		r0, r7, r2
	mov		r3, r9
	strb	r3, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x34132, 0x2

_08034134:	.4byte 0x0200BDD4
_08034138:	.4byte 0x00000531
_0803413c:	.4byte 0x00000532
_08034140:	.4byte 0x00000533
_08034144:	.4byte 0x0000FFFF
_08034148:	.4byte 0x000001F1
_0803414c:	.4byte 0x00000281
_08034150:	.4byte 0x000004EC
_08034154:	.4byte 0x00000311
_08034158:	.4byte 0x000003A1
_0803415c:	.4byte 0x000004F4
_08034160:	.4byte 0x00000431
_08034164:	.4byte 0x00000424
_08034168:	.4byte 0x000004C1
_0803416c:	.4byte 0x000004B4
_08034170:	.4byte 0x000004FC
	thumb_func_end sub_08033d24

	thumb_func_start sub_08034174
sub_08034174:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r9, r1
	ldr		r0, _08034218
	str		r0, [r5, #0x4c]
	ldr		r0, _0803421c
	str		r0, [r5, #0xc]
	ldr		r1, [r5, #0x6c]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08034196
	add		r0, r1, #0x0
	bl		sub_080b5dc4
_08034196:
	ldr		r0, [r5, #0x6c]
	cmp		r0, #0x0
	beq		_080341a2
	mov		r1, #0x3
	bl		sub_08038ce0
_080341a2:
	ldr		r1, _08034220
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080341b2
	mov		r1, #0x3
	bl		sub_0808e28c
_080341b2:
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	add		r7, r5, #0x0
	add		r7, #0xf8
	mov		r1, #0x40
	add		r1, r1, r5
	mov		r8, r1
	cmp		r0, #0x0
	beq		_080341e4
	mov		r1, #0x9d
	lsl		r1, r1, #0x3
	add		r4, r5, r1
	cmp		r0, r4
	beq		_080341e4
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	add		r6, r5, r0
_080341d6:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	cmp		r6, r4
	bne		_080341d6
_080341e4:
	add		r0, r7, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803420c
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0803420c:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08034218:	.4byte 0x080e1504
_0803421c:	.4byte 0x080e151c
_08034220:	.4byte 0x0000051C
	thumb_func_end sub_08034174

	thumb_func_start sub_08034224
sub_08034224:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xac
	add		r7, r0, #0x0
	str		r2, [sp, #0x90]
	ldr		r0, _08034254
	cmp		r1, r0
	bne		_0803423e
	bl		sub_08034c94
_0803423e:
	cmp		r1, r0
	bgt		_08034258
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08034338
	add		r0, #0x1
	cmp		r1, r0
	bne		_08034250
	b		_08034594
_08034250:
	bl		sub_08034eb0
_08034254:
	strh	r2, [r0, #0x0]

.incbin "base.gba", 0x34256, 0x2
_08034258:
	ldr		r0, _08034288
	cmp		r1, r0
	bne		_08034262
	bl		sub_08034e68
_08034262:
	cmp		r1, #0x0
	beq		_0803426a
	bl		sub_08034eb0
_0803426a:
	ldr		r0, _0803428c
	ldr		r4, [r0, #0x0]
	ldr		r0, _08034290
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08034298
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08034294
	mov		r3, #0x0
	bl		sub_080b7724
	b		_080342a4

.incbin "base.gba", 0x34286, 0x2

_08034288:	.4byte 0xFFFF8003
_0803428c:	.4byte 0x0200D530
_08034290:	.4byte 0x00000282
_08034294:	.4byte 0xFFFF8000

_08034298:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08034444
	mov		r3, #0x0
	bl		sub_080b7724
_080342a4:
	mov		r1, #0xf0
	lsl		r1, r1, #0x12
	mov		r0, #0xa4
	lsl		r0, r0, #0x3
	add		r4, r7, r0
	ldr		r3, _08034448
	ldr		r2, _0803444c
	ldr		r0, _08034450
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	str		r1, [r3, #0x0]
	str		r1, [r4, #0x0]
	mov		r1, #0xc8
	lsl		r1, r1, #0xf
	ldr		r2, _08034454
	add		r4, r7, r2
	ldr		r3, _08034458
	ldr		r2, _0803445c
	ldr		r0, _08034460
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	str		r1, [r3, #0x0]
	str		r1, [r4, #0x0]
	ldr		r1, _08034464
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
	strb	r0, [r1, #0x1a]
	strb	r0, [r1, #0x1b]
	ldr		r1, _08034468
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x7c]
	mov		r3, #0x40
	add		r3, r3, r7
	mov		r10, r3
	cmp		r0, #0x0
	bne		_08034306
	add		r4, r1, #0x0
_080342ee:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_080342ee
_08034306:
	ldr		r1, _08034468
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08034330
	add		r4, r1, #0x0
_08034310:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08034310
_08034330:
	mov		r0, #0x1
	mov		r1, #0x20
	bl		sub_0808f5cc
_08034338:
	ldr		r0, [r7, #0x74]
	mov		r4, #0x1
	mov		r8, r4
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	str		r4, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	ldr		r2, _0803446c
	add		r5, r7, r2
	mov		r3, #0x0
	ldrsh	r1, [r5, r3]
	bl		sub_08038b3c
	ldr		r0, [r7, #0x5c]
	bl		sub_080389e4
	ldr		r4, _08034470
	add		r4, r4, r7
	mov		r9, r4
	mov		r0, #0x2
	strb	r0, [r4, #0x0]
	ldr		r4, _08034474
	ldr		r1, _08034478
	add		r0, r4, r1
	mov		r1, #0x9c
	lsl		r1, r1, #0x3
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, [r7, #0x54]
	mov		r2, #0xab
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	ldrh	r1, [r1, #0x0]
	mov		r3, #0xa5
	lsl		r3, r3, #0x3
	add		r2, r7, r3
	ldrh	r2, [r2, #0x0]
	bl		sub_08037e64
	add		r1, r0, #0x0
	str		r1, [r7, #0x60]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, [r7, #0x60]
	ldrh	r1, [r5, #0x0]
	bl		sub_08038288
	ldr		r0, [r7, #0x60]
	ldr		r4, _0803447c
	add		r0, r0, r4
	mov		r1, r8
	str		r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x12
	mov		r2, #0xa4
	lsl		r2, r2, #0x3
	add		r1, r7, r2
	ldr		r3, _08034450
	str		r0, [r3, #0x0]
	ldr		r4, _0803444c
	str		r0, [r4, #0x0]
	ldr		r2, _08034448
	str		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xc8
	lsl		r0, r0, #0xf
	ldr		r3, _08034454
	add		r1, r7, r3
	ldr		r5, _08034458
	ldr		r4, _08034460
	str		r0, [r4, #0x0]
	ldr		r2, _0803445c
	str		r0, [r2, #0x0]
	str		r0, [r5, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r4, r7, #0x0
	add		r4, #0x40
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	add		r0, r7, #0x0
	bl		sub_0803530c
	ldr		r0, [r7, #0x60]
	bl		sub_080b75b0
	mov		r3, #0x0
	str		r3, [r7, #0x60]
	mov		r0, #0x3
	mov		r1, r9
	strb	r0, [r1, #0x0]
	mov		r6, #0x0
	mov		r10, r4
	mov		r2, #0xa4
	lsl		r2, r2, #0x3
	add		r2, r7, r2
	str		r2, [sp, #0x94]
	ldr		r3, _08034454
	add		r3, r3, r7
	mov		r9, r3
	ldr		r4, _08034480
	add		r4, r4, r7
	mov		r8, r4
_08034430:
	ldr		r5, [r7, #0x68]
	ldr		r4, [r5, #0x58]
	cmp		r4, #0x1
	beq		_0803448a
	cmp		r4, #0x1
	bgt		_08034484
	cmp		r4, #0x0
	beq		_080344f4
	b		_08034540

.incbin "base.gba", 0x34442, 0x2

_08034444:	.4byte 0xFFFF8001
_08034448:	.4byte 0x0200CE30
_0803444c:	.4byte 0x0200CE2C
_08034450:	.4byte 0x0200CE28
_08034454:	.4byte 0x00000524
_08034458:	.4byte 0x0200CE44
_0803445c:	.4byte 0x0200CE40
_08034460:	.4byte 0x0200CE3C
_08034464:	.4byte 0x02008AD4
_08034468:	.4byte 0x0200D530
_0803446c:	.4byte 0x0000052A
_08034470:	.4byte 0x0000052F
_08034474:	.4byte 0x0200DB50
_08034478:	.4byte 0xFFFFFEB0
_0803447c:	.4byte 0x000004DC
_08034480:	.4byte 0x00000534

_08034484:
	cmp		r4, #0x2
	beq		_08034506
	b		_08034540
_0803448a:
	lsl		r0, r6, #0x3
	mov		r1, #0xf0
	lsl		r1, r1, #0x2
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	ldr		r2, _080344dc
	str		r0, [r2, #0x0]
	ldr		r3, _080344e0
	str		r0, [r3, #0x0]
	ldr		r4, _080344e4
	str		r0, [r4, #0x0]
	ldr		r1, [sp, #0x94]
	str		r0, [r1, #0x0]
	lsl		r0, r6, #0x4
	sub		r0, r0, r6
	lsl		r0, r0, #0x2
	neg		r0, r0
	mov		r1, #0x78
	bl		sub_080bbcac
	mov		r2, #0x64
	sub		r0, r2, r0
	lsl		r0, r0, #0x10
	ldr		r3, _080344e8
	str		r0, [r3, #0x0]
	ldr		r4, _080344ec
	str		r0, [r4, #0x0]
	ldr		r1, _080344f0
	str		r0, [r1, #0x0]
	mov		r2, r9
	str		r0, [r2, #0x0]
	cmp		r6, #0x77
	bne		_08034540
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08034540

.incbin "base.gba", 0x344DA, 0x2

_080344dc:	.4byte 0x0200CE28
_080344e0:	.4byte 0x0200CE2C
_080344e4:	.4byte 0x0200CE30
_080344e8:	.4byte 0x0200CE3C
_080344ec:	.4byte 0x0200CE40
_080344f0:	.4byte 0x0200CE44

_080344f4:
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x1
	bne		_0803450a
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_08034506:
	sub		r6, #0x1
	b		_08034540
_0803450a:
	cmp		r0, #0x1
	blt		_08034540
	cmp		r0, #0x4
	bgt		_08034540
	ldr		r0, [r7, #0x74]
	bl		sub_0802ea00
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r3, #0x1
	neg		r3, r3
	cmp		r0, r3
	beq		_08034528
	cmp		r0, #0x0
	beq		_0803452e
_08034528:
	mov		r0, r8
	str		r4, [r0, #0x0]
	b		_08034534
_0803452e:
	mov		r1, #0x1
	mov		r2, r8
	str		r1, [r2, #0x0]
_08034534:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08034674
	mov		r3, #0x0
	bl		sub_080b7724
_08034540:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r6, #0x1
	cmp		r6, #0x77
	bgt		_08034562
	b		_08034430
_08034562:
	mov		r1, #0x0
	mov		r3, #0xa4
	lsl		r3, r3, #0x3
	add		r4, r7, r3
	ldr		r3, _08034678
	ldr		r2, _0803467c
	ldr		r0, _08034680
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	str		r1, [r3, #0x0]
	str		r1, [r4, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x10
	ldr		r0, _08034684
	add		r4, r7, r0
	ldr		r3, _08034688
	ldr		r2, _0803468c
	ldr		r0, _08034690
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	str		r1, [r3, #0x0]
	str		r1, [r4, #0x0]
	ldr		r0, [r7, #0x5c]
	bl		sub_080389c8
_08034594:
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r2, [r7, #0x74]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r3, #0xce
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bge		_080345c4
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	ldr		r2, _08034694
	mov		r3, #0x0
	bl		sub_080b7724
_080345c4:
	ldr		r0, [r7, #0x74]
	mov		r4, #0xd2
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	mov		r1, #0x40
	add		r1, r1, r7
	mov		r10, r1
	add		r2, r7, #0x0
	add		r2, #0xf8
	str		r2, [sp, #0xa8]
	add		r3, sp, #0x70
	mov		r8, r3
	mov		r4, sp
	add		r4, #0x69
	str		r4, [sp, #0xa4]
	mov		r1, sp
	add		r1, #0x54
	str		r1, [sp, #0x98]
	mov		r2, sp
	add		r2, #0x56
	str		r2, [sp, #0x9c]
	mov		r3, sp
	add		r3, #0x5c
	str		r3, [sp, #0xa0]
	cmp		r0, #0x0
	beq		_08034622
_080345fa:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x74]
	mov		r4, #0xd2
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080345fa
_08034622:
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, _08034698
	add		r1, r7, r0
	mov		r0, #0x4
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x58]
	ldr		r1, _0803469c
	add		r2, r0, r1
	mov		r1, #0x1
	strb	r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _080346a0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r3, _080346a4
	add		r2, r7, r3
	ldrb	r0, [r2, #0x0]
	add		r1, r0, #0x1
	strb	r1, [r2, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x2
	bls		_0803466a
	ldr		r0, _080346a8
	mov		r1, #0xab
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0803466a:
	ldr		r0, [r7, #0x58]
	ldr		r4, _0803469c
	add		r0, r0, r4
	b		_08034750

.incbin "base.gba", 0x34672, 0x2

_08034674:	.4byte 0xFFFF8003
_08034678:	.4byte 0x0200CE30
_0803467c:	.4byte 0x0200CE2C
_08034680:	.4byte 0x0200CE28
_08034684:	.4byte 0x00000524
_08034688:	.4byte 0x0200CE44
_0803468c:	.4byte 0x0200CE40
_08034690:	.4byte 0x0200CE3C
_08034694:	.4byte 0xFFFFF801
_08034698:	.4byte 0x0000052F
_0803469c:	.4byte 0x0000023E
_080346a0:	.4byte 0xFFFF8001
_080346a4:	.4byte 0x0000052E
_080346a8:	.4byte 0x080d2f44 @ a_kobayashi/Spline.cpp

_080346ac:
	ldr		r0, [r7, #0x68]
	ldr		r4, [r0, #0x58]
	cmp		r4, #0x1
	beq		_080346be
	cmp		r4, #0x1
	bgt		_08034730
	cmp		r4, #0x0
	beq		_080346de
	b		_08034730
_080346be:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080358d4
	ldr		r0, [r7, #0x58]
	mov		r1, #0x0
	ldr		r0, [r0, #0x54]
	cmp		r0, #0x0
	bne		_080346d2
	mov		r1, #0x1
_080346d2:
	cmp		r1, #0x0
	bne		_08034730
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	b		_080346e8
_080346de:
	ldr		r1, [r0, #0x5c]
	cmp		r1, #0x1
	bne		_080346f0
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
_080346e8:
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08034730
_080346f0:
	cmp		r1, #0x1
	blt		_08034730
	cmp		r1, #0x4
	bgt		_08034730
	ldr		r0, [r7, #0x74]
	bl		sub_0802ea00
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0803470e
	cmp		r1, #0x0
	beq		_0803471c
_0803470e:
	ldr		r1, _08034718
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	b		_08034724

.incbin "base.gba", 0x34716, 0x2

_08034718:	.4byte 0x00000534

_0803471c:
	ldr		r2, _08034794
	add		r1, r7, r2
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_08034724:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08034798
	mov		r3, #0x0
	bl		sub_080b7724
_08034730:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x58]
	ldr		r3, _0803479c
	add		r0, r0, r3
_08034750:
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_080346ac
	cmp		r0, #0x1
	beq		_080346ac
	ldr		r4, _080347a0
	add		r1, r7, r4
	mov		r0, #0x5
	strb	r0, [r1, #0x0]
	ldr		r0, [sp, #0xa8]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r5, #0x0
	ldr		r0, [r7, #0x58]
	ldr		r1, _0803479c
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_0803484a
	ldr		r2, _08034794
	add		r6, r7, r2
	mov		r3, #0x1
	mov		r9, r3
_08034782:
	ldr		r2, [r7, #0x68]
	ldr		r4, [r2, #0x58]
	cmp		r4, #0x1
	beq		_080347a4
	cmp		r4, #0x1
	bgt		_08034824
	cmp		r4, #0x0
	beq		_080347cc
	b		_08034824

_08034794:	.4byte 0x00000534
_08034798:	.4byte 0xFFFF8003
_0803479c:	.4byte 0x0000023E
_080347a0:	.4byte 0x0000052F

_080347a4:
	ldr		r0, [r7, #0x58]
	mov		r1, #0x0
	ldr		r0, [r0, #0x54]
	cmp		r0, #0x0
	bne		_080347b0
	mov		r1, #0x1
_080347b0:
	cmp		r1, #0x0
	bne		_080347c0
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_080347c0:
	add		r1, r5, #0x0
	add		r5, #0x1
	add		r0, r7, #0x0
	bl		sub_080358d4
	b		_08034824
_080347cc:
	ldr		r0, [r7, #0x58]
	mov		r1, #0x0
	ldr		r0, [r0, #0x54]
	cmp		r0, #0x0
	bne		_080347d8
	mov		r1, #0x1
_080347d8:
	cmp		r1, #0x0
	beq		_08034824
	ldr		r0, [r2, #0x5c]
	cmp		r0, #0x1
	bne		_080347f2
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	sub		r5, #0x1
	b		_08034824
_080347f2:
	cmp		r0, #0x1
	blt		_08034824
	cmp		r0, #0x4
	bgt		_08034824
	ldr		r0, [r7, #0x74]
	bl		sub_0802ea00
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	beq		_08034810
	cmp		r0, #0x0
	beq		_08034814
_08034810:
	str		r4, [r6, #0x0]
	b		_08034818
_08034814:
	mov		r2, r9
	str		r2, [r6, #0x0]
_08034818:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _080348a0
	mov		r3, #0x0
	bl		sub_080b7724
_08034824:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x58]
	ldr		r3, _080348a4
	add		r0, r0, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_08034782
_0803484a:
	ldr		r0, [r7, #0x58]
	ldr		r4, _080348a4
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xa
	bne		_0803486e
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _080348a8
	mov		r3, #0xa
	bl		sub_080b7724
_0803486e:
	ldr		r0, _080348ac
	add		r1, r7, r0
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x58]
	ldr		r1, _080348a4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x4
	bne		_08034950
	mov		r2, #0x1
	neg		r2, r2
	mov		r9, r2
	ldr		r3, _080348b0
	add		r5, r7, r3
	mov		r6, #0x1
_0803488e:
	ldr		r2, [r7, #0x68]
	ldr		r4, [r2, #0x58]
	cmp		r4, #0x1
	beq		_080348b4
	cmp		r4, #0x1
	bgt		_0803492a
	cmp		r4, #0x0
	beq		_080348da
	b		_0803492a

_080348a0:	.4byte 0xFFFF8003
_080348a4:	.4byte 0x0000023E
_080348a8:	.4byte 0xFFFF8002
_080348ac:	.4byte 0x0000052F
_080348b0:	.4byte 0x00000534

_080348b4:
	ldr		r0, [r7, #0x58]
	mov		r1, #0x0
	ldr		r0, [r0, #0x54]
	cmp		r0, #0x0
	bne		_080348c0
	mov		r1, #0x1
_080348c0:
	cmp		r1, #0x0
	bne		_080348d0
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_080348d0:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080358d4
	b		_0803492a
_080348da:
	ldr		r0, [r7, #0x58]
	mov		r1, #0x0
	ldr		r0, [r0, #0x54]
	cmp		r0, #0x0
	bne		_080348e6
	mov		r1, #0x1
_080348e6:
	cmp		r1, #0x0
	beq		_0803492a
	ldr		r0, [r2, #0x5c]
	cmp		r0, #0x1
	bne		_080348fe
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803492a
_080348fe:
	cmp		r0, #0x1
	blt		_0803492a
	cmp		r0, #0x4
	bgt		_0803492a
	ldr		r0, [r7, #0x74]
	bl		sub_0802ea00
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r9
	beq		_08034918
	cmp		r0, #0x0
	beq		_0803491c
_08034918:
	str		r4, [r5, #0x0]
	b		_0803491e
_0803491c:
	str		r6, [r5, #0x0]
_0803491e:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _080349d8
	mov		r3, #0x0
	bl		sub_080b7724
_0803492a:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x58]
	ldr		r4, _080349dc
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x4
	beq		_0803488e
_08034950:
	ldr		r0, [r7, #0x58]
	ldr		r1, _080349dc
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xb
	bne		_08034974
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _080349e0
	mov		r3, #0xb
	bl		sub_080b7724
_08034974:
	ldr		r0, [r7, #0x58]
	ldr		r2, _080349dc
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xc
	bne		_08034998
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _080349e0
	mov		r3, #0xc
	bl		sub_080b7724
_08034998:
	add		r0, r7, #0x0
	bl		sub_08035cf4
	ldr		r3, _080349e4
	add		r1, r7, r3
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	ldr		r0, [sp, #0xa8]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r5, #0x0
	ldr		r0, [r7, #0x58]
	ldr		r4, _080349dc
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x5
	bne		_08034a92
	ldr		r0, _080349e8
	add		r6, r7, r0
	mov		r1, #0x1
	mov		r9, r1
_080349c6:
	ldr		r2, [r7, #0x68]
	ldr		r4, [r2, #0x58]
	cmp		r4, #0x1
	beq		_080349ec
	cmp		r4, #0x1
	bgt		_08034a6c
	cmp		r4, #0x0
	beq		_08034a14
	b		_08034a6c

_080349d8:	.4byte 0xFFFF8003
_080349dc:	.4byte 0x0000023E
_080349e0:	.4byte 0xFFFF8002
_080349e4:	.4byte 0x0000052F
_080349e8:	.4byte 0x00000534

_080349ec:
	add		r1, r5, #0x0
	add		r5, #0x1
	add		r0, r7, #0x0
	bl		sub_080358d4
	ldr		r0, [r7, #0x58]
	mov		r1, #0x0
	ldr		r0, [r0, #0x54]
	cmp		r0, #0x0
	bne		_08034a02
	mov		r1, #0x1
_08034a02:
	cmp		r1, #0x0
	bne		_08034a6c
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08034a6c
_08034a14:
	ldr		r0, [r7, #0x58]
	mov		r1, #0x0
	ldr		r0, [r0, #0x54]
	cmp		r0, #0x0
	bne		_08034a20
	mov		r1, #0x1
_08034a20:
	cmp		r1, #0x0
	beq		_08034a6c
	ldr		r0, [r2, #0x5c]
	cmp		r0, #0x1
	bne		_08034a3a
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	sub		r5, #0x1
	b		_08034a6c
_08034a3a:
	cmp		r0, #0x1
	blt		_08034a6c
	cmp		r0, #0x4
	bgt		_08034a6c
	ldr		r0, [r7, #0x74]
	bl		sub_0802ea00
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r2, #0x1
	neg		r2, r2
	cmp		r0, r2
	beq		_08034a58
	cmp		r0, #0x0
	beq		_08034a5c
_08034a58:
	str		r4, [r6, #0x0]
	b		_08034a60
_08034a5c:
	mov		r3, r9
	str		r3, [r6, #0x0]
_08034a60:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08034ac8
	mov		r3, #0x0
	bl		sub_080b7724
_08034a6c:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x58]
	ldr		r4, _08034acc
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x5
	beq		_080349c6
_08034a92:
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r7, #0x58]
	ldr		r1, _08034acc
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xd
	bne		_08034ab6
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08034ad0
	mov		r3, #0xd
	bl		sub_080b7724
_08034ab6:
	ldr		r2, _08034ad4
	add		r1, r7, r2
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x58]
	ldr		r3, _08034acc
	add		r0, r0, r3
	b		_08034b00

.incbin "base.gba", 0x34AC6, 0x2

_08034ac8:	.4byte 0xFFFF8003
_08034acc:	.4byte 0x0000023E
_08034ad0:	.4byte 0xFFFF8002
_08034ad4:	.4byte 0x0000052F

_08034ad8:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080358d4
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x58]
	ldr		r4, _08034bc0
	add		r0, r0, r4
_08034b00:
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x7
	beq		_08034ad8
	cmp		r0, #0x6
	beq		_08034ad8
	ldr		r0, _08034bc4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08034b1a
	ldr		r0, _08034bc8
	bl		sub_08002268
_08034b1a:
	ldr		r0, _08034bcc
	add		r4, r7, r0
	ldrh	r1, [r4, #0x0]
	ldr		r2, _08034bd0
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_08035100
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	add		r0, r7, #0x0
	bl		sub_08035848
	ldr		r3, _08034bd4
	add		r1, r7, r3
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_08035de4
	ldr		r0, [r7, #0x5c]
	bl		sub_08038a00
	mov		r0, #0x78
	bl		sub_0808f690
	ldr		r0, [r7, #0x74]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	bl		sub_0802ea90
	mov		r4, #0x77
_08034b64:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08034b64
	mov		r0, sp
	bl		sub_0808e21c
	mov		r0, r8
	bl		sub_0808b374
	mov		r4, #0x0
	str		r4, [sp, #0x6c]
	ldr		r1, _08034bd8
	mov		r0, sp
	bl		sub_0808e03c
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, #0x1
	ldr		r3, [sp, #0xa4]
	strb	r0, [r3, #0x0]
	mov		r0, #0xc8
	ldr		r1, [sp, #0x98]
	strh	r0, [r1, #0x0]
	mov		r0, #0x90
	ldr		r2, [sp, #0x9c]
	strh	r0, [r2, #0x0]
	ldr		r3, [sp, #0xa0]
	strh	r4, [r3, #0x0]
	b		_08034c02

.incbin "base.gba", 0x34BBE, 0x2

_08034bc0:	.4byte 0x0000023E
_08034bc4:	.4byte 0x00000282
_08034bc8:	.4byte 0x00000287
_08034bcc:	.4byte 0x0000052A
_08034bd0:	.4byte 0x0000052C
_08034bd4:	.4byte 0x0000052F
_08034bd8:	.4byte 0x00000105

_08034bdc:
	mov		r0, r8
	bl		sub_0808b3d4
	mov		r0, sp
	bl		sub_0808e4a0
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
_08034c02:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08034bdc
	mov		r0, sp
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r4, _08034c78
	add		r0, r7, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x2
	bgt		_08034c88
	ldr		r0, [r7, #0x58]
	ldr		r1, _08034c7c
	add		r2, r0, r1
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08034c80
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r3, _08034c84
	add		r2, r7, r3
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r1, [r7, #0x54]
	mov		r4, #0xab
	lsl		r4, r4, #0x1
	add		r1, r1, r4
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldrh	r3, [r1, #0x0]
	mov		r4, #0x0
	ldrsh	r1, [r1, r4]
	cmp		r0, r1
	ble		_08034c5a
	strh	r3, [r2, #0x0]
_08034c5a:
	ldrh	r0, [r2, #0x0]
	mov		r2, #0xa5
	lsl		r2, r2, #0x3
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_08035ed4
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08034c80
	mov		r3, #0x0
	bl		sub_080b7724
	b		sub_08034c94

_08034c78:	.4byte 0x0000052E
_08034c7c:	.4byte 0x0000023E
_08034c80:	.4byte 0xFFFF8000
_08034c84:	.4byte 0x0000052A

_08034c88:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08034cc4
	mov		r3, #0x0
	bl		sub_080b7724
	thumb_func_end sub_08034224

	thumb_func_start sub_08034c94
sub_08034c94:
	ldr		r3, _08034cc8
	add		r0, r7, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x3
	bne		_08034ca8
	add		r0, r7, #0x0
	bl		sub_08035100
_08034ca8:
	ldr		r0, [r7, #0x68]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r4, [sp, #0x90]
	cmp		r4, #0xb
	beq		_08034cd6
	cmp		r4, #0xb
	bgt		_08034ccc
	cmp		r4, #0xa
	beq		_08034ce8
	b		_08034cf8

_08034cc4:	.4byte 0xFFFF8003
_08034cc8:	.4byte 0x0000052E

_08034ccc:
	ldr		r0, [sp, #0x90]
	cmp		r0, #0xc
	beq		_08034ce8
	cmp		r0, #0xd
	bne		_08034cf8
_08034cd6:
	ldr		r1, _08034ce4
	add		r0, r7, r1
	add		r2, sp, #0x90
	ldrb	r2, [r2, #0x0]
	strb	r2, [r0, #0x0]
	b		_08034d04

.incbin "base.gba", 0x34CE2, 0x2

_08034ce4:	.4byte 0x0000052F

_08034ce8:
	ldr		r3, _08034cf4
	add		r0, r7, r3
	add		r4, sp, #0x90
	ldrb	r4, [r4, #0x0]
	strb	r4, [r0, #0x0]
	b		_08034d04

_08034cf4:	.4byte 0x0000052F

_08034cf8:
	ldr		r0, _08034db8
	ldr		r1, _08034dbc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08034d04:
	mov		r4, #0x0
	ldr		r0, [r7, #0x58]
	ldr		r1, _08034dc0
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	mov		r2, #0x40
	add		r2, r2, r7
	mov		r10, r2
	add		r3, sp, #0x70
	mov		r8, r3
	mov		r1, sp
	add		r1, #0x69
	str		r1, [sp, #0xa4]
	mov		r2, sp
	add		r2, #0x54
	str		r2, [sp, #0x98]
	mov		r3, sp
	add		r3, #0x56
	str		r3, [sp, #0x9c]
	sub		r1, #0xd
	str		r1, [sp, #0xa0]
	cmp		r0, #0xe
	beq		_08034d62
_08034d32:
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_080358d4
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r4, #0x1
	ldr		r0, [r7, #0x58]
	ldr		r2, _08034dc0
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xe
	bne		_08034d32
_08034d62:
	add		r0, r7, #0x0
	bl		sub_08035bd8
	ldr		r0, [r7, #0x74]
	mov		r1, #0x1
	neg		r1, r1
	bl		sub_0802ea90
	ldr		r0, [r7, #0x5c]
	bl		sub_08038a1c
	mov		r0, #0x4e
	bl		sub_0808f690
	mov		r0, sp
	bl		sub_0808e21c
	mov		r0, r8
	bl		sub_0808b374
	mov		r4, #0x0
	str		r4, [sp, #0x6c]
	ldr		r1, _08034dc4
	mov		r0, sp
	bl		sub_0808e03c
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, #0x1
	ldr		r3, [sp, #0xa4]
	strb	r0, [r3, #0x0]
	mov		r0, #0xc8
	ldr		r1, [sp, #0x98]
	strh	r0, [r1, #0x0]
	mov		r0, #0x90
	ldr		r2, [sp, #0x9c]
	strh	r0, [r2, #0x0]
	ldr		r3, [sp, #0xa0]
	strh	r4, [r3, #0x0]
	b		_08034dee

_08034db8:	.4byte 0x080d2f44 @ a_kobayashi/minigame/mg_Takatobi
_08034dbc:	.4byte 0x000002C5
_08034dc0:	.4byte 0x0000023E
_08034dc4:	.4byte 0x00000105

_08034dc8:
	mov		r0, r8
	bl		sub_0808b3d4
	mov		r0, sp
	bl		sub_0808e4a0
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
_08034dee:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08034dc8
	mov		r0, sp
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r4, _08034e4c
	add		r0, r7, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x2
	bgt		_08034e5c
	add		r0, r7, #0x0
	bl		sub_08035ed4
	ldr		r0, [r7, #0x58]
	ldr		r1, _08034e50
	add		r2, r0, r1
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08034e54
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r2, _08034e58
	add		r0, r7, r2
	ldrh	r1, [r0, #0x0]
	mov		r3, #0xa5
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x64]
	bl		sub_08038b90
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08034e54
	mov		r3, #0x0
	bl		sub_080b7724
	b		sub_08034e68

_08034e4c:	.4byte 0x0000052E
_08034e50:	.4byte 0x0000023E
_08034e54:	.4byte 0xFFFF8000
_08034e58:	.4byte 0x0000052A

_08034e5c:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08034ea8
	mov		r3, #0x0
	bl		sub_080b7724
	thumb_func_end sub_08034c94

	thumb_func_start sub_08034e68
sub_08034e68:
	ldr		r0, [r7, #0x60]
	cmp		r0, #0x0
	beq		_08034e76
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r7, #0x60]
_08034e76:
	ldr		r4, _08034eac
	add		r1, r7, r4
	mov		r0, #0xe
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_080355cc
	mov		r0, #0x40
	add		r0, r0, r7
	mov		r10, r0
_08034e8a:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	b		_08034e8a

.incbin "base.gba", 0x34EA6, 0x2

_08034ea8:	.4byte 0xFFFF8003
_08034eac:	.4byte 0x0000052F
	thumb_func_end sub_08034e68

	thumb_func_start sub_08034eb0
sub_08034eb0:
	ldr		r0, _08034ecc
	ldr		r1, _08034ed0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	add		sp, #0xac
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08034ecc:	.4byte 0x080d2f44 @ a_kobayashi/minigame/mg_Takatobi
_08034ed0:	.4byte 0x00000309
	thumb_func_end sub_08034eb0

	thumb_func_start sub_08034ed4
sub_08034ed4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r6, r0, #0x0
	mov		r0, #0xa3
	lsl		r0, r0, #0x3
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0xa4
	lsl		r1, r1, #0x3
	add		r1, r1, r6
	mov		r10, r1
	ldr		r2, _08034fcc
	add		r2, r6, r2
	str		r2, [sp, #0x4]
	ldr		r3, _08034fd0
	add		r3, r6, r3
	str		r3, [sp, #0xc]
	mov		r0, #0xa3
	lsl		r0, r0, #0x3
	add		r0, r6, r0
	str		r0, [sp, #0x8]
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r1, r1, r6
	mov		r9, r1
	mov		r2, #0xfc
	lsl		r2, r2, #0x1
	add		r2, r2, r6
	mov		r8, r2
	mov		r3, #0x9d
	lsl		r3, r3, #0x3
	add		r5, r6, r3
	ldr		r0, _08034fd4
	add		r7, r6, r0
	add		r4, r6, #0x0
	mov		r1, #0x5
	str		r1, [sp, #0x0]
_08034f2a:
	mov		r3, r10
	ldr		r2, [r3, #0x0]
	mov		r1, #0x98
	lsl		r1, r1, #0x11
	add		r0, r2, r1
	ldr		r1, [r5, #0x0]
	cmp		r1, r0
	bge		_08034ff8
	ldr		r3, _08034fd8
	add		r0, r2, r3
	cmp		r1, r0
	ble		_08034ff8
	mov		r0, #0x3
	strb	r0, [r7, #0x0]
	ldr		r1, [r5, #0x0]
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	sub		r1, r1, r0
	add		r2, r1, #0x0
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08034f58
	neg		r0, r1
_08034f58:
	asr		r1, r0, #0x10
	cmp		r2, #0x0
	bge		_08034f60
	neg		r1, r1
_08034f60:
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	strh	r1, [r0, #0x0]
	ldr		r1, [r5, #0x18]
	ldr		r2, [sp, #0x4]
	ldr		r0, [r2, #0x0]
	sub		r1, r1, r0
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08034f78
	neg		r0, r1
_08034f78:
	asr		r2, r0, #0x10
	cmp		r1, #0x0
	bge		_08034f80
	neg		r2, r2
_08034f80:
	mov		r3, #0xef
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	strh	r2, [r0, #0x0]
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r2, #0x3a
	strh	r2, [r0, #0x0]
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_08034ff2
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_08034ff2
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_08034ff2
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_08034ff2
	ldr		r3, [sp, #0xc]
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x6
	beq		_08034ff2
	cmp		r0, #0x6
	bgt		_08034fdc
	cmp		r0, #0x5
	beq		_08034fe0
	b		_08034fec

_08034fcc:	.4byte 0x00000524
_08034fd0:	.4byte 0x0000052F
_08034fd4:	.4byte 0x000001F1
_08034fd8:	.4byte 0xFFC00000

_08034fdc:
	cmp		r0, #0x7
	bne		_08034fec
_08034fe0:
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x1
	and		r0, r2
	cmp		r0, #0x0
	bne		_08034ff2
_08034fec:
	mov		r0, r8
	bl		sub_0808b3d4
_08034ff2:
	mov		r0, r9
	bl		sub_0808e4a0
_08034ff8:
	mov		r3, #0x90
	add		r9, r3
	add		r8, r3
	add		r5, #0x4
	add		r7, #0x90
	add		r4, #0x90
	ldr		r0, [sp, #0x0]
	sub		r0, #0x1
	str		r0, [sp, #0x0]
	cmp		r0, #0x0
	bge		_08034f2a
	ldr		r1, _080350f4
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x5
	beq		_0803501c
	cmp		r0, #0x7
	bne		_08035056
_0803501c:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_0803504e
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_0803504e
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_0803504e
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_0803504e
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	bl		sub_0808b3d4
_0803504e:
	add		r0, r6, #0x0
	add		r0, #0xf8
	bl		sub_0808e4a0
_08035056:
	ldr		r3, _080350f8
	add		r4, r6, r3
	ldr		r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_080350e2
	mov		r0, #0x8c
	lsl		r0, r0, #0x13
	mov		r2, #0xa4
	lsl		r2, r2, #0x3
	add		r1, r6, r2
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r2, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08035078
	neg		r1, r0
_08035078:
	asr		r1, r1, #0x10
	cmp		r2, #0x0
	bge		_08035080
	neg		r1, r1
_08035080:
	add		r0, r3, #0x0
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x11
	ldr		r3, _080350fc
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	sub		r1, r1, r0
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0803509a
	neg		r0, r1
_0803509a:
	asr		r2, r0, #0x10
	cmp		r1, #0x0
	bge		_080350a2
	neg		r2, r2
_080350a2:
	ldr		r0, [r4, #0x0]
	add		r0, #0x56
	strh	r2, [r0, #0x0]
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_080350d8
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_080350d8
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_080350d8
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_080350d8
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
_080350d8:
	ldr		r1, _080350f8
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	bl		sub_0808e4a0
_080350e2:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x350F2, 0x2

_080350f4:	.4byte 0x0000052F
_080350f8:	.4byte 0x0000051C
_080350fc:	.4byte 0x00000524
	thumb_func_end sub_08034ed4

	thumb_func_start sub_08035100
sub_08035100:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x38
	mov		r9, r0
	ldr		r0, _080351f8
	add		r0, r9
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	str		r0, [sp, #0x14]
	mov		r2, r9
	ldr		r4, [r2, #0x54]
	ldr		r0, _080351fc
	add		r0, r9
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r3, #0xa6
	lsl		r3, r3, #0x3
	add		r3, r9
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	mov		r5, #0xad
	lsl		r5, r5, #0x1
	add		r1, r4, r5
	add		r1, r1, r0
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	str		r0, [sp, #0x18]
	ldr		r0, _08035200
	add		r0, r9
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	add		r1, r1, r0
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	str		r0, [sp, #0x1C]
	ldr		r0, _08035204
	add		r0, r9
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	mov		r6, #0xb3
	lsl		r6, r6, #0x1
	add		r1, r4, r6
	add		r1, r1, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	str		r0, [sp, #0x20]
	add		r4, sp, #0x14
	add		r0, sp, #0x4
	add		r1, r4, #0x0
	mov		r2, #0x10
	bl		sub_0808c818
	add		r1, r4, #0x0
	ldr		r0, _08035208
	ldmia	r0!, { r3, r5, r6 }
	stmia	r1!, {  r3, r5, r6 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r2, sp, #0x24
	add		r1, r2, #0x0
	ldr		r0, _0803520c
	ldmia	r0!, { r3, r5, r6 }
	stmia	r1!, {  r3, r5, r6 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	ldr		r1, _08035210
	mov		r10, r1
	add		r2, sp, #0x14
	mov		r8, r2
_080351b8:
	add		r7, r0, #0x1
	add		r4, r7, #0x0
	cmp		r7, #0x3
	bgt		_0803522c
	lsl		r0, r0, #0x2
	add		r0, r8
	mov		r12, r0
	lsl		r0, r7, #0x2
	add		r6, r0, #0x0
	add		r6, sp
	add		r6, #0x4
	mov		r3, r8
	add		r5, r0, r3
_080351d2:
	mov		r0, r12
	ldr		r3, [r0, #0x0]
	lsl		r0, r3, #0x2
	mov		r1, sp
	add		r1, r1, r0
	add		r1, #0x4
	ldr		r2, [r5, #0x0]
	lsl		r0, r2, #0x2
	add		r0, sp
	add		r0, #0x4
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bge		_08035214
	mov		r1, r12
	str		r2, [r1, #0x0]
	str		r3, [r5, #0x0]
	b		_08035222

.incbin "base.gba", 0x351F6, 0x2

_080351f8:	.4byte 0x0000052C
_080351fc:	.4byte 0x00000531
_08035200:	.4byte 0x00000532
_08035204:	.4byte 0x00000533
_08035208:	.4byte 0x080d2f6c
_0803520c:	.4byte 0x080d2f7c
_08035210:	.4byte 0x080d2f9c

_08035214:
	cmp		r1, r0
	bne		_08035222
	cmp		r3, #0x0
	bne		_08035222
	ldr		r0, [r6, #0x0]
	sub		r0, #0x1
	str		r0, [r6, #0x0]
_08035222:
	add		r6, #0x4
	add		r5, #0x4
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_080351d2
_0803522c:
	add		r0, r7, #0x0
	cmp		r0, #0x2
	ble		_080351b8
	mov		r2, #0x1
	neg		r2, r2
	str		r2, [sp, #0x34]
	mov		r3, #0x0
	mov		r8, r3
	add		r7, sp, #0x14
_0803523e:
	ldr		r0, [r7, #0x0]
	lsl		r1, r0, #0x2
	mov		r0, sp
	add		r0, r0, r1
	add		r0, #0x4
	ldr		r6, [r0, #0x0]
	add		r0, r6, #0x1
	cmp		r0, #0x1
	bls		_0803527c
	mov		r0, sp
	add		r0, r0, r1
	add		r0, #0x24
	ldr		r5, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	str		r0, [sp, #0x0]
	mov		r6, r10
	ldr		r0, [r6, #0x0]
	mov		r1, r8
	add		r2, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_080063bc
	b		_080352b2
_0803527c:
	mov		r0, #0x1
	neg		r0, r0
	cmp		r6, r0
	bne		_0803529c
	mov		r0, sp
	add		r0, r0, r1
	add		r0, #0x24
	ldr		r2, [r0, #0x0]
	str		r6, [sp, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	mov		r1, r8
	add		r3, r6, #0x0
	bl		sub_080063bc
	b		_080352b2
_0803529c:
	mov		r0, sp
	add		r0, r0, r1
	add		r0, #0x24
	ldr		r2, [r0, #0x0]
	mov		r3, #0x0
	str		r3, [sp, #0x0]
	mov		r5, r10
	ldr		r0, [r5, #0x0]
	mov		r1, r8
	bl		sub_080063bc
_080352b2:
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_080352bc
	mov		r6, r8
	str		r6, [sp, #0x34]
_080352bc:
	add		r7, #0x4
	mov		r0, #0x1
	add		r8, r0
	mov		r1, r8
	cmp		r1, #0x3
	ble		_0803523e
	ldr		r0, _080352e0
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080352e8
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	ldr		r2, _080352e4
	ldr		r1, [sp, #0x34]
	bl		sub_080060b4
	b		_080352f4

_080352e0:	.4byte 0x0000052F
_080352e4:	.4byte 0x080d2f8c

_080352e8:
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	ldr		r1, _08035304
	ldr		r2, _08035308
	bl		sub_080060b4
_080352f4:
	add		sp, #0x38
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08035304:	.4byte 0x80808080
_08035308:	.4byte 0x080d2f94
	thumb_func_end sub_08035100

	thumb_func_start sub_0803530c
sub_0803530c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r7, #0x0
	mov		r0, #0x1
	neg		r0, r0
	mov		r9, r0
	ldr		r0, _08035338
	add		r6, r5, r0
	mov		r0, #0x1
	mov		r8, r0
_08035326:
	ldr		r0, [r5, #0x68]
	ldr		r4, [r0, #0x58]
	cmp		r4, #0x1
	beq		_0803533c
	cmp		r4, #0x1
	bgt		_080353c4
	cmp		r4, #0x0
	beq		_08035384
	b		_080353c4

_08035338:	.4byte 0x00000534

_0803533c:
	mov		r4, #0x0
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803534e
	mov		r4, #0x40
	b		_08035360
_0803534e:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803535c
	mov		r4, #0x80
_0803535c:
	cmp		r4, #0x0
	beq		_0803536c
_08035360:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080353f4
	mov		r7, #0x0
	b		_08035376
_0803536c:
	cmp		r7, #0xa
	bne		_08035376
	ldr		r0, [r5, #0x5c]
	bl		sub_080389e4
_08035376:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_080353e8
	b		_080353c4
_08035384:
	ldr		r1, [r0, #0x5c]
	cmp		r1, #0x1
	bne		_08035396
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	b		_080353c4
_08035396:
	cmp		r1, #0x1
	blt		_080353c4
	cmp		r1, #0x4
	bgt		_080353c4
	ldr		r0, [r5, #0x74]
	bl		sub_0802ea00
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r9
	beq		_080353b0
	cmp		r0, #0x0
	beq		_080353b4
_080353b0:
	str		r4, [r6, #0x0]
	b		_080353b8
_080353b4:
	mov		r0, r8
	str		r0, [r6, #0x0]
_080353b8:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _080353e4
	mov		r3, #0x0
	bl		sub_080b7724
_080353c4:
	ldr		r0, [r5, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r7, #0x1
	b		_08035326

_080353e4:	.4byte 0xFFFF8003

_080353e8:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803530c

	thumb_func_start sub_080353f4
sub_080353f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0x1
	mov		r10, r1
	cmp		r6, #0x0
	bne		_08035412
	b		_080355b6
_08035412:
	mov		r2, #0xa5
	lsl		r2, r2, #0x3
	add		r7, r4, r2
	ldr		r3, _0803543c
	add		r3, r3, r4
	mov		r8, r3
	ldr		r5, _08035440
	add		r5, r5, r4
	mov		r9, r5
_08035424:
	ldr		r0, [r4, #0x68]
	ldr		r5, [r0, #0x58]
	cmp		r5, #0x1
	beq		_08035444
	cmp		r5, #0x1
	ble		_08035432
	b		_08035594
_08035432:
	cmp		r5, #0x0
	bne		_08035438
	b		_0803554c
_08035438:
	b		_08035594

.incbin "base.gba", 0x3543A, 0x2

_0803543c:	.4byte 0x0000052A
_08035440:	.4byte 0x00000534

_08035444:
	mov		r0, #0x0
	add		r1, r6, #0x0
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_080354d8
	mov		r0, r10
	cmp		r0, #0x0
	beq		_08035472
	mov		r1, #0x0
	mov		r10, r1
	cmp		r6, #0x40
	bne		_08035468
	ldr		r0, [r4, #0x5c]
	mov		r1, #0x2
	bl		sub_080389ac
	b		_08035594
_08035468:
	ldr		r0, [r4, #0x5c]
	mov		r1, #0x2
	bl		sub_08038990
	b		_08035594
_08035472:
	mov		r2, #0x1
	str		r2, [sp, #0x0]
	cmp		r6, #0x40
	bne		_080354a0
	ldr		r3, _0803549c
	add		r2, r4, r3
	ldrh	r0, [r2, #0x0]
	add		r0, #0xa
	strh	r0, [r2, #0x0]
	ldr		r1, [r4, #0x54]
	mov		r5, #0xab
	lsl		r5, r5, #0x1
	add		r1, r1, r5
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldrh	r3, [r1, #0x0]
	mov		r5, #0x0
	ldrsh	r1, [r1, r5]
	cmp		r0, r1
	ble		_080354ba
	b		_080354b8

_0803549c:	.4byte 0x0000052A

_080354a0:
	ldr		r0, _080354d4
	add		r2, r4, r0
	ldrh	r0, [r2, #0x0]
	sub		r0, #0xa
	strh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldrh	r3, [r7, #0x0]
	mov		r5, #0x0
	ldrsh	r1, [r7, r5]
	cmp		r0, r1
	bge		_080354ba
_080354b8:
	strh	r3, [r2, #0x0]
_080354ba:
	ldr		r0, [r4, #0x60]
	mov		r2, r8
	ldrh	r1, [r2, #0x0]
	bl		sub_08038288
	ldr		r0, [r4, #0x64]
	mov		r3, r8
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	bl		sub_08038b3c
	b		_08035594

.incbin "base.gba", 0x354D2, 0x2

_080354d4:	.4byte 0x0000052A

_080354d8:
	mov		r0, #0x0
	add		r1, r6, #0x0
	bl		sub_08001884
	cmp		r0, #0x0
	bne		_08035594
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	bne		_080355b6
	cmp		r6, #0x40
	bne		_08035514
	ldr		r1, _08035510
	add		r2, r4, r1
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r1, [r4, #0x54]
	mov		r3, #0xab
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldrh	r3, [r1, #0x0]
	mov		r5, #0x0
	ldrsh	r1, [r1, r5]
	cmp		r0, r1
	ble		_0803552e
	b		_0803552c

_08035510:	.4byte 0x0000052A

_08035514:
	ldr		r0, _08035548
	add		r2, r4, r0
	ldrh	r0, [r2, #0x0]
	sub		r0, #0x1
	strh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldrh	r3, [r7, #0x0]
	mov		r5, #0x0
	ldrsh	r1, [r7, r5]
	cmp		r0, r1
	bge		_0803552e
_0803552c:
	strh	r3, [r2, #0x0]
_0803552e:
	ldr		r0, [r4, #0x60]
	mov		r2, r8
	ldrh	r1, [r2, #0x0]
	bl		sub_08038288
	ldr		r0, [r4, #0x64]
	mov		r3, r8
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	bl		sub_08038b3c
	b		_080355b6

.incbin "base.gba", 0x35546, 0x2

_08035548:	.4byte 0x0000052A

_0803554c:
	ldr		r1, [r0, #0x5c]
	cmp		r1, #0x1
	bne		_0803555e
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08035594
_0803555e:
	cmp		r1, #0x1
	blt		_08035594
	cmp		r1, #0x4
	bgt		_08035594
	ldr		r0, [r4, #0x74]
	bl		sub_0802ea00
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	beq		_0803557c
	cmp		r0, #0x0
	beq		_08035582
_0803557c:
	mov		r2, r9
	str		r5, [r2, #0x0]
	b		_08035588
_08035582:
	mov		r3, #0x1
	mov		r5, r9
	str		r3, [r5, #0x0]
_08035588:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _080355c8
	mov		r3, #0x0
	bl		sub_080b7724
_08035594:
	ldr		r0, [r4, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	cmp		r6, #0x0
	beq		_080355b6
	b		_08035424
_080355b6:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x355C6, 0x2

_080355c8:	.4byte 0xFFFF8003
	thumb_func_end sub_080353f4

	thumb_func_start sub_080355cc
sub_080355cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	add		r7, r0, #0x0
	ldr		r4, _080357f0
	ldr		r1, _080357f4
	add		r0, r4, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x1
	bl		sub_080300ac
	mov		r9, r0
	add		r0, r4, #0x0
	mov		r1, r9
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, [r7, #0x74]
	mov		r1, #0x0
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	ldr		r0, _080357f8
	bl		sub_0800f354
	ldr		r1, _080357fc
	add		r0, sp, #0x4
	mov		r2, #0x4
	bl		sub_0808c818
	add		r5, sp, #0x8
	ldr		r6, [r7, #0x54]
	ldr		r1, _08035800
	add		r0, r7, r1
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r0, #0xa6
	lsl		r0, r0, #0x3
	add		r3, r7, r0
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	mov		r2, #0xad
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	add		r4, sp, #0x10
	strh	r0, [r4, #0x0]
	ldr		r1, _08035804
	add		r0, r7, r1
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	add		r1, r1, r0
	ldrh	r1, [r1, #0x0]
	mov		r0, sp
	add		r0, #0x12
	strh	r1, [r0, #0x0]
	ldr		r1, _08035808
	add		r0, r7, r1
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	mov		r2, #0xb3
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	add		r1, r1, r0
	ldrh	r1, [r1, #0x0]
	add		r0, sp, #0x14
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x74]
	bl		sub_0802ea00
	mov		r1, sp
	add		r1, #0x16
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x8
	bl		sub_0808c818
	ldr		r1, _0803580c
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080356b4
	mov		r1, sp
	add		r1, #0xe
	ldr		r0, _08035810
	strh	r0, [r1, #0x0]
_080356b4:
	ldr		r0, _08035814
	bl		sub_0800f354
	add		r6, r0, #0x0
	ldr		r0, _08035818
	bl		sub_0800f354
	add		r5, r0, #0x0
	ldr		r0, _0803581c
	bl		sub_0800f354
	add		r4, r0, #0x0
	ldr		r0, _08035820
	bl		sub_0800f354
	str		r5, [sp, #0x18]
	str		r4, [sp, #0x1C]
	str		r0, [sp, #0x20]
	str		r6, [sp, #0x24]
	mov		r6, #0x2
	mov		r2, #0x78
	add		r2, r2, r7
	mov		r10, r2
	mov		r5, #0xf6
	lsl		r5, r5, #0x1
	add		r5, r9
	mov		r8, r5
	add		r2, sp, #0xc
	add		r4, sp, #0x20
	mov		r3, sp
	add		r3, #0x6
_080356f2:
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldrh		r5, [r2, #0x2]
	mov		r12, r5
	mov		r5, #0x2
	ldrsh	r0, [r2, r5]
	cmp		r1, r0
	bgt		_0803573a
	mov		r5, r12
	strh	r5, [r2, #0x0]
	strh		r1, [r2, #0x2]
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r3, #0x1]
	strb	r0, [r3, #0x0]
	strb	r1, [r3, #0x1]
	ldr		r1, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	str		r0, [r4, #0x0]
	str		r1, [r4, #0x4]
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldrh		r5, [r2, #0x2]
	mov		r12, r5
	mov		r5, #0x2
	ldrsh	r0, [r2, r5]
	cmp		r1, r0
	bne		_0803572e
	mov		r0, r12
	sub		r0, #0x1
	strh		r0, [r2, #0x2]
_0803572e:
	sub		r2, #0x2
	sub		r4, #0x4
	sub		r3, #0x1
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_080356f2
_0803573a:
	add		r4, r7, #0x0
	add		r4, #0x78
	add		r5, sp, #0x8
	mov		r6, #0x3
_08035742:
	ldr		r0, [r7, #0x74]
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	add		r2, r4, #0x0
	bl		sub_0802e0ec
	add		r4, #0x20
	add		r5, #0x2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08035742
	mov		r0, #0x4
	str		r0, [sp, #0x0]
	mov		r0, r9
	add		r1, sp, #0x18
	add		r2, sp, #0x4
	mov		r3, r10
	bl		sub_08033028
	mov		r5, r8
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08035794
_08035770:
	ldr		r0, [r7, #0x6c]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08035770
_08035794:
	ldr		r0, [r7, #0x58]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08035824
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0xf0
	lsl		r0, r0, #0x12
	mov		r2, #0xa4
	lsl		r2, r2, #0x3
	add		r4, r7, r2
	str		r0, [r4, #0x0]
	mov		r2, #0x0
	ldr		r5, _08035828
	add		r0, r7, r5
	str		r2, [r0, #0x0]
	ldr		r5, _0803582c
	ldr		r3, _08035830
	ldr		r1, _08035834
	ldr		r0, [r4, #0x0]
	str		r0, [r1, #0x0]
	str		r0, [r3, #0x0]
	str		r0, [r5, #0x0]
	ldr		r3, _08035838
	ldr		r1, _0803583c
	ldr		r0, _08035840
	str		r2, [r0, #0x0]
	str		r2, [r1, #0x0]
	str		r2, [r3, #0x0]
	ldr		r1, _08035844
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
	strb	r0, [r1, #0x1a]
	strb	r0, [r1, #0x1b]
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x357EE, 0x2

_080357f0:	.4byte 0x0200DB50
_080357f4:	.4byte 0xFFFFFEB0
_080357f8:	.4byte 0x080d2fa0 @ ms_N_tut_pole_00
_080357fc:	.4byte 0x080d2fb1
_08035800:	.4byte 0x00000531
_08035804:	.4byte 0x00000532
_08035808:	.4byte 0x00000533
_0803580c:	.4byte 0x00000534
_08035810:	.4byte 0x0000FFFF
_08035814:	.4byte 0x080d2fb8 @ ms_ta_0047
_08035818:	.4byte 0x080d2fc4 @ ms_ta_0050
_0803581c:	.4byte 0x080d2fd0 @ ms_ta_0056
_08035820:	.4byte 0x080d2fdc @ ms_ta_0061
_08035824:	.4byte 0xFFFF8008
_08035828:	.4byte 0x00000524
_0803582c:	.4byte 0x0200CE30
_08035830:	.4byte 0x0200CE2C
_08035834:	.4byte 0x0200CE28
_08035838:	.4byte 0x0200CE44
_0803583c:	.4byte 0x0200CE40
_08035840:	.4byte 0x0200CE3C
_08035844:	.4byte 0x02008AD4
	thumb_func_end sub_080355cc

	thumb_func_start sub_08035848
sub_08035848:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r0, _08035890
	add		r5, r6, r0
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, #0x0
	str		r0, [r4, #0x6c]
	str		r4, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x20
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x69
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x5c
	mov		r1, #0x2a
	strh	r1, [r0, #0x0]
	b		_080358a6

.incbin "base.gba", 0x3588E, 0x2

_08035890:	.4byte 0x0000051C

_08035894:
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
_080358a6:
	ldr		r0, [r6, #0x58]
	ldr		r1, _080358cc
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8
	beq		_08035894
	ldr		r0, _080358d0
	add		r5, r6, r0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_080358c2
	mov		r1, #0x3
	bl		sub_0808e28c
_080358c2:
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080358cc:	.4byte 0x0000023E
_080358d0:	.4byte 0x0000051C
	thumb_func_end sub_08035848

	thumb_func_start sub_080358d4
sub_080358d4:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, [r5, #0x58]
	mov		r1, #0x86
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldr		r6, [r0, #0x0]
	ldr		r1, _080358fc
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, #0x9
	bls		_080358f2
	b		_08035bb6
_080358f2:
	lsl		r0, r0, #0x2
	ldr		r1, _08035900
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080358fc:	.4byte 0x0000052F
_08035900:	.4byte 0x08035904
_08035904:	.4byte 0x0803592c

.incbin "base.gba", 0x35908, 0x24
	thumb_func_end sub_080358d4


.incbin "base.gba", 0x3592C, 0x28A

_08035bb6:

.incbin "base.gba", 0x35BB6, 0x22
	thumb_func_start sub_08035bd8
sub_08035bd8:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	mov		r0, #0xce
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x22
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x9
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08035cd8
	add		r0, r5, r1
	mov		r2, #0x2
	mov		r8, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	sub		r1, #0xd
	add		r0, r5, r1
	mov		r6, #0x3a
	strh	r6, [r0, #0x0]
	ldr		r2, [r5, #0x54]
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	ldr		r3, _08035cdc
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r0, #0xf2
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x23
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08035ce0
	add		r0, r5, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	ldr		r3, _08035ce4
	add		r0, r5, r3
	strh	r6, [r0, #0x0]
	ldr		r2, [r5, #0x54]
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	mov		r3, #0x9f
	lsl		r3, r3, #0x3
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r1, #0x8b
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	mov		r1, #0x6
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08035ce8
	add		r0, r5, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	ldr		r1, _08035cec
	add		r0, r5, r1
	strh	r6, [r0, #0x0]
	ldr		r2, [r5, #0x54]
	mov		r3, #0xcc
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	ldr		r3, _08035cf0
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r5, r5, r3
	str		r0, [r5, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08035cd8:	.4byte 0x000003A1
_08035cdc:	.4byte 0x000004F4
_08035ce0:	.4byte 0x00000431
_08035ce4:	.4byte 0x00000424
_08035ce8:	.4byte 0x000004C1
_08035cec:	.4byte 0x000004B4
_08035cf0:	.4byte 0x000004FC
	thumb_func_end sub_08035bd8

	thumb_func_start sub_08035cf4
sub_08035cf4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	mov		r1, #0x4
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08035dc8
	add		r0, r4, r2
	mov		r6, #0x2
	strb	r6, [r0, #0x0]
	mov		r3, #0xe5
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	mov		r5, #0x3a
	strh	r5, [r0, #0x0]
	ldr		r2, [r4, #0x54]
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	ldr		r3, _08035dcc
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	mov		r1, #0x4
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08035dd0
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	ldr		r3, _08035dd4
	add		r0, r4, r3
	strh	r5, [r0, #0x0]
	ldr		r2, [r4, #0x54]
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	mov		r3, #0x9f
	lsl		r3, r3, #0x3
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0x8b
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	mov		r1, #0x4
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08035dd8
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	ldr		r3, _08035ddc
	add		r0, r4, r3
	strh	r5, [r0, #0x0]
	ldr		r2, [r4, #0x54]
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	ldr		r3, _08035de0
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r4, r4, r3
	str		r0, [r4, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x35DC6, 0x2

_08035dc8:	.4byte 0x000003A1
_08035dcc:	.4byte 0x000004F4
_08035dd0:	.4byte 0x00000431
_08035dd4:	.4byte 0x00000424
_08035dd8:	.4byte 0x000004C1
_08035ddc:	.4byte 0x000004B4
_08035de0:	.4byte 0x000004FC
	thumb_func_end sub_08035cf4

	thumb_func_start sub_08035de4
sub_08035de4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08035eb8
	add		r0, r4, r2
	mov		r6, #0x2
	strb	r6, [r0, #0x0]
	mov		r3, #0xe5
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	mov		r5, #0x3a
	strh	r5, [r0, #0x0]
	ldr		r2, [r4, #0x54]
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	ldr		r3, _08035ebc
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xf2
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08035ec0
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	ldr		r3, _08035ec4
	add		r0, r4, r3
	strh	r5, [r0, #0x0]
	ldr		r2, [r4, #0x54]
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	mov		r3, #0x9f
	lsl		r3, r3, #0x3
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0x8b
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08035ec8
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	ldr		r3, _08035ecc
	add		r0, r4, r3
	strh	r5, [r0, #0x0]
	ldr		r2, [r4, #0x54]
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	ldr		r3, _08035ed0
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r4, r4, r3
	str		r0, [r4, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x35EB6, 0x2

_08035eb8:	.4byte 0x000003A1
_08035ebc:	.4byte 0x000004F4
_08035ec0:	.4byte 0x00000431
_08035ec4:	.4byte 0x00000424
_08035ec8:	.4byte 0x000004C1
_08035ecc:	.4byte 0x000004B4
_08035ed0:	.4byte 0x000004FC
	thumb_func_end sub_08035de4

	thumb_func_start sub_08035ed4
sub_08035ed4:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	mov		r0, #0xce
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1d
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08035fd4
	add		r0, r5, r1
	mov		r2, #0x2
	mov		r8, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	sub		r1, #0xd
	add		r0, r5, r1
	mov		r6, #0x3a
	strh	r6, [r0, #0x0]
	ldr		r2, [r5, #0x54]
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	ldr		r3, _08035fd8
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r0, #0xf2
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08035fdc
	add		r0, r5, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	ldr		r3, _08035fe0
	add		r0, r5, r3
	strh	r6, [r0, #0x0]
	ldr		r2, [r5, #0x54]
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	mov		r3, #0x9f
	lsl		r3, r3, #0x3
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r1, #0x8b
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08035fe4
	add		r0, r5, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	ldr		r1, _08035fe8
	add		r0, r5, r1
	strh	r6, [r0, #0x0]
	ldr		r2, [r5, #0x54]
	mov		r3, #0xcc
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	ldr		r3, _08035fec
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x10
	add		r3, #0x18
	add		r5, r5, r3
	str		r0, [r5, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08035fd4:	.4byte 0x000003A1
_08035fd8:	.4byte 0x000004F4
_08035fdc:	.4byte 0x00000431
_08035fe0:	.4byte 0x00000424
_08035fe4:	.4byte 0x000004C1
_08035fe8:	.4byte 0x000004B4
_08035fec:	.4byte 0x000004FC
	thumb_func_end sub_08035ed4

	thumb_func_start sub_08035ff0
sub_08035ff0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08036140
	str		r0, [r7, #0x4c]
	ldr		r0, _08036144
	str		r0, [r7, #0xc]
	str		r4, [r7, #0x58]
	add		r5, r7, #0x0
	add		r5, #0x60
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r0, r7, #0x0
	add		r0, #0xd0
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0xcc
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r6, r7, #0x0
	add		r6, #0xf0
	add		r0, r6, #0x0
	bl		sub_0808e21c
	mov		r1, #0xb0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r2, #0xae
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r0, r0, r7
	mov		r8, r0
	bl		sub_0808e21c
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0808e03c
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	add		r0, #0xc9
	mov		r5, #0x2
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbc
	mov		r0, #0x0
	mov		r9, r0
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0xd
	bl		sub_0808e03c
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08036148
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x26
	strh	r0, [r1, #0x0]
	mov		r0, r8
	mov		r1, #0x12
	bl		sub_0808e03c
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _0803614c
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x28
	strh	r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0xe
	mov		r5, #0x86
	lsl		r5, r5, #0x2
	add		r0, r7, r5
	str		r2, [r0, #0x0]
	mov		r1, #0x90
	lsl		r1, r1, #0x11
	mov		r0, #0x87
	lsl		r0, r0, #0x2
	add		r3, r7, r0
	str		r1, [r3, #0x0]
	add		r5, #0x8
	add		r0, r7, r5
	str		r2, [r0, #0x0]
	mov		r2, #0x89
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r5, #0x8
	add		r0, r7, r5
	str		r4, [r0, #0x0]
	mov		r0, #0x8b
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldr		r0, [r3, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, #0x8d
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	strh	r4, [r0, #0x0]
	add		r2, #0xc
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	add		r5, #0x16
	add		r0, r7, r5
	mov		r1, r9
	strb	r1, [r0, #0x0]
	ldr		r0, _08036150
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x5c]
	sub		r2, #0x20
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	sub		r5, #0x2a
	add		r0, r7, r5
	str		r4, [r0, #0x0]
	str		r4, [r7, #0x54]
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3613E, 0x2

_08036140:	.4byte 0x080e161c
_08036144:	.4byte 0x080e1634
_08036148:	.4byte 0x00000159
_0803614c:	.4byte 0x000001E9
_08036150:	.4byte 0x0200D51C
	thumb_func_end sub_08035ff0

	thumb_func_start sub_08036154
sub_08036154:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _080361cc
	str		r0, [r4, #0x4c]
	ldr		r0, _080361d0
	str		r0, [r4, #0xc]
	mov		r1, #0x84
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08036174
	mov		r1, #0x3
	bl		sub_0808e28c
_08036174:
	mov		r1, #0x85
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08036186
	mov		r1, #0x3
	bl		sub_0808e28c
_08036186:
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	add		r0, #0xf0
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	add		r0, #0x60
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080361c6
	add		r0, r4, #0x0
	bl		sub_080b74c8
_080361c6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080361cc:	.4byte 0x080e161c
_080361d0:	.4byte 0x080e1634
	thumb_func_end sub_08036154

	thumb_func_start sub_080361d4
sub_080361d4:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	ldr		r0, _080361f8
	cmp		r1, r0
	bne		_080361e0
	b		_080363f0
_080361e0:
	cmp		r1, r0
	bgt		_08036214
	sub		r0, #0x3
	cmp		r1, r0
	bne		_080361ec
	b		_080362fc
_080361ec:
	cmp		r1, r0
	bgt		_080361fc
	sub		r0, #0x1
	cmp		r1, r0
	beq		_08036248
	b		_08036434

_080361f8:	.4byte 0xFFFF8004

_080361fc:
	ldr		r0, _08036210
	cmp		r1, r0
	bne		_08036204
	b		_080363c8
_08036204:
	add		r0, #0x1
	cmp		r1, r0
	bne		_0803620c
	b		_080363dc
_0803620c:
	b		_08036434

.incbin "base.gba", 0x3620E, 0x2

_08036210:	.4byte 0xFFFF8002

_08036214:
	ldr		r0, _08036230
	cmp		r1, r0
	beq		_080362e0
	cmp		r1, r0
	bgt		_08036234
	sub		r0, #0x2
	cmp		r1, r0
	bne		_08036226
	b		_08036404
_08036226:
	add		r0, #0x1
	cmp		r1, r0
	bne		_0803622e
	b		_08036418
_0803622e:
	b		_08036434

_08036230:	.4byte 0xFFFF8007

_08036234:
	ldr		r0, _08036244
	cmp		r1, r0
	bne		_0803623c
	b		_0803642c
_0803623c:
	cmp		r1, #0x0
	beq		_080362e0
	b		_08036434

.incbin "base.gba", 0x36242, 0x2

_08036244:	.4byte 0xFFFF8008

_08036248:
	mov		r6, #0x0
	str		r6, [r7, #0x54]
	add		r4, r7, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	add		r0, #0xc9
	mov		r5, #0x2
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbc
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
	add		r4, #0x90
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xd
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _080362f8
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x26
	strh	r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0xe
	mov		r4, #0x86
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	mov		r1, #0x90
	lsl		r1, r1, #0x11
	mov		r0, #0x87
	lsl		r0, r0, #0x2
	add		r3, r7, r0
	str		r1, [r3, #0x0]
	add		r4, #0x8
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	mov		r2, #0x89
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r4, #0x8
	add		r0, r7, r4
	str		r6, [r0, #0x0]
	mov		r0, #0x8b
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldr		r0, [r3, #0x0]
	str		r0, [r1, #0x0]
	add		r2, #0x1a
	add		r1, r7, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
_080362e0:
	add		r5, r7, #0x0
	add		r5, #0x40
_080362e4:
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	b		_080362e4

.incbin "base.gba", 0x362F6, 0x2

_080362f8:	.4byte 0x00000159

_080362fc:
	ldr		r4, _08036344
	add		r1, r7, r4
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r4, #0x0
	add		r5, r7, #0x0
	add		r5, #0x40
	ldr		r6, _08036348
_0803630c:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_0803634c
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_0803634c
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_0803634c
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_0803634c
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_08036364
	b		_0803634e

.incbin "base.gba", 0x36342, 0x2

_08036344:	.4byte 0x0000023E
_08036348:	.4byte 0x00000257

_0803634c:
	sub		r4, #0x1
_0803634e:
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r4, #0x1
	cmp		r4, r6
	ble		_0803630c
_08036364:
	ldr		r0, _080363c0
	add		r4, r7, r0
	mov		r0, #0x2
	strb	r0, [r4, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r0, r7, #0x0
	bl		sub_080366fc
	add		r0, r7, #0x0
	bl		sub_08036990
	mov		r0, #0x4
	strb	r0, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_08036bb8
	mov		r0, #0x5
	strb	r0, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_08036ec8
	mov		r0, #0x6
	strb	r0, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_08037434
	mov		r0, #0x9
	strb	r0, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_08039088
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _080363c4
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08036442

.incbin "base.gba", 0x363BE, 0x2

_080363c0:	.4byte 0x0000023E
_080363c4:	.4byte 0xFFFF8007

_080363c8:
	ldr		r2, _080363d8
	add		r1, r7, r2
	mov		r0, #0xa
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_08039020
	b		_08036442

_080363d8:	.4byte 0x0000023E

_080363dc:
	ldr		r4, _080363ec
	add		r1, r7, r4
	mov		r0, #0xb
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_080375dc
	b		_08036442

_080363ec:	.4byte 0x0000023E

_080363f0:
	ldr		r0, _08036400
	add		r1, r7, r0
	mov		r0, #0xc
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_080378a8
	b		_08036442

_08036400:	.4byte 0x0000023E

_08036404:
	ldr		r2, _08036414
	add		r1, r7, r2
	mov		r0, #0xd
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_08037c60
	b		_08036442

_08036414:	.4byte 0x0000023E

_08036418:
	ldr		r4, _08036428
	add		r1, r7, r4
	mov		r0, #0xe
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_08038fec
	b		_08036442

_08036428:	.4byte 0x0000023E

_0803642c:
	add		r0, r7, #0x0
	bl		sub_080b7690
	b		_0803642c
_08036434:
	ldr		r0, _08036448
	mov		r1, #0xd5
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08036442:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08036448:	.4byte 0x080d2f44 @ a_kobayashi/minigame/mg_Takatobi
	thumb_func_end sub_080361d4

	thumb_func_start sub_0803644c
sub_0803644c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x58]
	mov		r1, #0xa4
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r2, #0x86
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r2, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0803646e
	neg		r1, r0
_0803646e:
	asr		r0, r1, #0x10
	cmp		r2, #0x0
	bge		_08036476
	neg		r0, r0
_08036476:
	add		r2, r5, #0x0
	add		r2, #0xb4
	strh	r0, [r2, #0x0]
	ldr		r0, [r5, #0x58]
	ldr		r3, _080366e0
	add		r0, r0, r3
	ldr		r1, [r0, #0x0]
	mov		r3, #0x87
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r1, r0, #0x0
	add		r4, r2, #0x0
	cmp		r0, #0x0
	bge		_08036498
	neg		r1, r0
_08036498:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_080364a0
	neg		r2, r2
_080364a0:
	add		r0, r5, #0x0
	add		r0, #0xb6
	strh	r2, [r0, #0x0]
	ldrh	r0, [r4, #0x0]
	add		r0, #0x7f
	lsl		r0, r0, #0x10
	mov		r1, #0xf7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_0803651a
	lsl		r0, r2, #0x10
	asr		r1, r0, #0x10
	mov		r0, #0x80
	neg		r0, r0
	cmp		r1, r0
	ble		_0803651a
	ldr		r0, _080366e4
	cmp		r1, r0
	bgt		_0803651a
	ldr		r1, _080366e8
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_080364e2
	ldr		r2, _080366ec
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x9
	bl		sub_080bbeac
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08036512
_080364e2:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_08036512
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_08036512
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_08036512
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_08036512
	add		r0, r5, #0x0
	add		r0, #0xd0
	bl		sub_0808b3d4
_08036512:
	add		r0, r5, #0x0
	add		r0, #0x60
	bl		sub_0808e4a0
_0803651a:
	ldr		r0, [r5, #0x58]
	mov		r3, #0xa4
	lsl		r3, r3, #0x3
	add		r0, r0, r3
	ldr		r1, [r0, #0x0]
	mov		r2, #0x88
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r2, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08036538
	neg		r1, r0
_08036538:
	asr		r0, r1, #0x10
	cmp		r2, #0x0
	bge		_08036540
	neg		r0, r0
_08036540:
	mov		r1, #0xa2
	lsl		r1, r1, #0x1
	add		r3, r5, r1
	strh	r0, [r3, #0x0]
	ldr		r0, [r5, #0x58]
	ldr		r2, _080366e0
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r2, #0x89
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08036562
	neg		r1, r0
_08036562:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_0803656a
	neg		r2, r2
_0803656a:
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r2, [r0, #0x0]
	ldrh	r0, [r3, #0x0]
	add		r0, #0x7f
	lsl		r0, r0, #0x10
	mov		r1, #0xf7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_080365e8
	lsl		r0, r2, #0x10
	asr		r1, r0, #0x10
	mov		r0, #0x80
	neg		r0, r0
	cmp		r1, r0
	ble		_080365e8
	ldr		r0, _080366e4
	cmp		r1, r0
	bgt		_080365e8
	ldr		r2, _080366e8
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_080365ae
	ldr		r3, _080366ec
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x9
	bl		sub_080bbeac
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_080365e0
_080365ae:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_080365e0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_080365e0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_080365e0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_080365e0
	mov		r1, #0xb0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b3d4
_080365e0:
	add		r0, r5, #0x0
	add		r0, #0xf0
	bl		sub_0808e4a0
_080365e8:
	mov		r2, #0x8a
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r4, #0x0]
	add		r0, r0, r1
	mov		r3, #0xea
	lsl		r3, r3, #0x1
	add		r4, r5, r3
	strh	r0, [r4, #0x0]
	ldr		r0, [r5, #0x58]
	ldr		r1, _080366e0
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r3, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08036616
	neg		r1, r0
_08036616:
	asr		r2, r1, #0x10
	cmp		r3, #0x0
	bge		_0803661e
	neg		r2, r2
_0803661e:
	mov		r3, #0xeb
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	strh	r2, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	mov		r0, #0x40
	neg		r0, r0
	cmp		r1, r0
	ble		_0803665a
	lsl		r0, r2, #0x10
	asr		r1, r0, #0x10
	ldr		r0, _080366f0
	cmp		r1, r0
	bgt		_0803665a
	cmp		r1, #0x0
	ble		_0803665a
	cmp		r1, #0xdf
	bgt		_0803665a
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	mov		r2, #0xf8
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0803665a:
	mov		r0, #0x84
	lsl		r0, r0, #0x2
	add		r3, r5, r0
	ldr		r2, [r3, #0x0]
	cmp		r2, #0x0
	beq		_08036696
	ldr		r1, _080366f4
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	ldrh	r1, [r1, #0x0]
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x5c
	mov		r2, #0x1
	mov		r1, #0x1
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	bl		sub_0808e4a0
_08036696:
	mov		r3, #0x85
	lsl		r3, r3, #0x2
	add		r4, r5, r3
	ldr		r2, [r4, #0x0]
	cmp		r2, #0x0
	beq		_080366d8
	ldr		r1, _080366f8
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x54
	mov		r2, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r3, #0x28
	add		r1, r5, r3
	ldrh	r1, [r1, #0x0]
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	strh	r2, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x69
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
_080366d8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x366DE, 0x2

_080366e0:	.4byte 0x00000524
_080366e4:	.4byte 0x0000011F
_080366e8:	.4byte 0x0000023E
_080366ec:	.4byte 0x0000023F
_080366f0:	.4byte 0x0000012F
_080366f4:	.4byte 0x00000236
_080366f8:	.4byte 0x0000023A
	thumb_func_end sub_0803644c

	thumb_func_start sub_080366fc
sub_080366fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r5, r0, #0x0
	mov		r6, #0x0
	add		r0, #0x60
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	add		r0, #0xc9
	mov		r4, #0x2
	strb	r4, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08036890
	add		r0, r5, r1
	strb	r4, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0x26
	strh	r0, [r1, #0x0]
	ldr		r0, [r5, #0x5c]
	ldrh	r0, [r0, #0x10]
	mov		r3, #0x8d
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	ldr		r4, _08036894
	mov		r7, #0x0
	ldrsh	r0, [r4, r7]
	cmp		r0, #0x0
	bne		_08036762
	ldr		r0, _08036898
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_0808c670
_08036762:
	add		r0, r5, #0x0
	bl		sub_08038f64
	ldr		r0, [r5, #0x5c]
	ldrb	r0, [r0, #0xc]
	cmp		r6, r0
	blt		_08036772
	b		_0803697e
_08036772:
	mov		r3, #0x8c
	lsl		r3, r3, #0x2
	add		r3, r5, r3
	str		r3, [sp, #0x4]
	mov		r7, #0x88
	lsl		r7, r7, #0x2
	add		r7, r7, r5
	mov		r10, r7
	mov		r0, #0x86
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	str		r0, [sp, #0x8]
	mov		r1, #0x87
	lsl		r1, r1, #0x2
	add		r1, r5, r1
	str		r1, [sp, #0xC]
	mov		r2, #0x8d
	lsl		r2, r2, #0x2
	add		r2, r2, r5
	mov		r9, r2
_0803679a:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	add		r3, r5, #0x0
	add		r3, #0x40
	str		r3, [sp, #0x10]
	cmp		r0, #0x2
	bne		_080367ac
	b		_08036964
_080367ac:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	bne		_080367b8
	b		_08036964
_080367b8:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	bne		_080367c4
	b		_08036964
_080367c4:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	bne		_080367d0
	b		_08036964
_080367d0:
	mov		r7, #0x86
	lsl		r7, r7, #0x2
	add		r4, r5, r7
	ldr		r0, [r4, #0x0]
	ldr		r2, [sp, #0x4]
	ldr		r1, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	ldr		r1, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_080367f8
	b		_08036930
_080367f8:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08038f28
	ldr		r1, [r5, #0x5c]
	add		r1, #0x5e
	mov		r7, #0x0
	ldrsh	r1, [r1, r7]
	lsl		r1, r1, #0x10
	sub		r0, r0, r1
	ldr		r1, [r4, #0x0]
	cmp		r1, r0
	bge		_08036814
	b		_0803695e
_08036814:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08038f28
	ldr		r1, [r4, #0x0]
	sub		r0, r1, r0
	add		r2, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0803682a
	neg		r1, r0
_0803682a:
	asr		r0, r1, #0x10
	cmp		r2, #0x0
	bge		_08036832
	neg		r0, r0
_08036832:
	add		r2, r0, #0x0
	mov		r4, #0x0
	ldr		r1, [r5, #0x5c]
	mov		r3, #0x1e
	ldrsh	r0, [r1, r3]
	add		r6, #0x1
	mov		r8, r6
	cmp		r2, r0
	ble		_08036856
	add		r1, #0x1e
_08036846:
	add		r1, #0x4
	add		r4, #0x1
	cmp		r4, #0x10
	bgt		_08036856
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	cmp		r2, r0
	bgt		_08036846
_08036856:
	mov		r7, #0x8d
	lsl		r7, r7, #0x2
	add		r3, r5, r7
	ldr		r0, [r5, #0x5c]
	lsl		r2, r4, #0x2
	add		r0, #0x1c
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0x0]
	add		r0, r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, [r5, #0x5c]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldrh	r6, [r1, #0x12]
	mov		r7, #0x12
	ldrsh	r1, [r1, r7]
	add		r7, r2, #0x0
	cmp		r0, r1
	ble		_08036880
	strh	r6, [r3, #0x0]
_08036880:
	cmp		r4, #0x8
	beq		_080368aa
	cmp		r4, #0x8
	bgt		_0803689c
	cmp		r4, #0x7
	beq		_080368a0
	b		_080368b4

.incbin "base.gba", 0x3688E, 0x2

_08036890:	.4byte 0x00000159
_08036894:	.4byte 0x0200CDBC
_08036898:	.4byte 0x080d2fe8 @ First_Point_%d

_0803689c:
	cmp		r4, #0x9
	bne		_080368b4
_080368a0:
	mov		r4, #0x2
	mov		r0, #0x52
	bl		sub_0808f690
	b		_080368bc
_080368aa:
	mov		r4, #0x3
	mov		r0, #0x53
	bl		sub_0808f690
	b		_080368bc
_080368b4:
	mov		r4, #0x4
	mov		r0, #0x51
	bl		sub_0808f690
_080368bc:
	cmp		r4, #0x4
	beq		_080368ec
	ldr		r1, _08036920
	ldr		r2, _08036924
	add		r0, r1, r2
	mov		r1, #0xf8
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, [r5, #0x58]
	ldr		r6, [sp, #0x8]
	ldr		r3, [r6, #0x0]
	ldr		r6, [sp, #0xC]
	ldr		r2, [r6, #0x0]
	str		r2, [sp, #0x0]
	add		r2, r4, #0x0
	bl		sub_08038e84
	add		r1, r0, #0x0
	ldr		r0, _08036920
	mov		r2, #0x0
	bl		sub_080b781c
_080368ec:
	mov		r6, r8
	mov		r0, #0x8d
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	ldr		r0, [r5, #0x5c]
	ldr		r1, [r0, #0x60]
	ldrh	r0, [r2, #0x0]
	sub		r0, r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08036928
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	bne		_0803695e
	ldr		r0, [r5, #0x5c]
	add		r0, #0x1c
	add		r0, r0, r7
	mov		r7, #0x0
	ldrsh	r1, [r0, r7]
	mov		r0, #0x0
	ldrsh	r2, [r2, r0]
	ldr		r0, _0803692c
	bl		sub_0808c670
	b		_0803695e

.incbin "base.gba", 0x3691E, 0x2

_08036920:	.4byte 0x0200DB50
_08036924:	.4byte 0xFFFFFEB0
_08036928:	.4byte 0x0200CDBC
_0803692c:	.4byte 0x080d2ff8 @ Now_Get_%d_:_Total_%d

_08036930:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08038f28
	ldr		r3, [r5, #0x5c]
	add		r1, r3, #0x0
	add		r1, #0x5c
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	lsr		r2, r1, #0x1f
	add		r1, r1, r2
	asr		r1, r1, #0x1
	lsl		r1, r1, #0x10
	add		r0, r0, r1
	ldr		r1, [r4, #0x0]
	cmp		r1, r0
	blt		_0803695e
	add		r6, #0x1
	ldr		r1, [r3, #0x60]
	mov		r3, r9
	ldrh	r0, [r3, #0x0]
	sub		r0, r0, r1
	strh	r0, [r3, #0x0]
_0803695e:
	add		r0, r5, #0x0
	bl		sub_08038f64
_08036964:
	ldr		r0, [sp, #0x10]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x5c]
	ldrb	r0, [r0, #0xc]
	cmp		r6, r0
	bge		_0803697e
	b		_0803679a
_0803697e:
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3698E, 0x2
	thumb_func_end sub_080366fc

	thumb_func_start sub_08036990
sub_08036990:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, _08036b44
	mov		r8, r0
	mov		r1, #0x86
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, r8
	bge		_08036a10
	add		r4, r5, r1
	mov		r2, #0x8c
	lsl		r2, r2, #0x2
	add		r7, r5, r2
	mov		r3, #0x88
	lsl		r3, r3, #0x2
	add		r6, r5, r3
_080369ba:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_080369f8
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_080369f8
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_080369f8
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_080369f8
	add		r0, r5, #0x0
	bl		sub_08038f64
	ldr		r0, [r4, #0x0]
	ldr		r1, [r7, #0x0]
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	ldr		r0, [r6, #0x0]
	ldr		r1, [r7, #0x0]
	add		r0, r0, r1
	str		r0, [r6, #0x0]
_080369f8:
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, r8
	blt		_080369ba
_08036a10:
	mov		r1, #0x86
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r2, r8
	str		r2, [r0, #0x0]
	mov		r3, #0x88
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r2, [r0, #0x0]
	ldr		r1, _08036b48
	mov		r2, #0x8c
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	add		r3, #0x1e
	add		r1, r5, r3
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x60
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	add		r0, #0xc9
	mov		r4, #0x2
	strb	r4, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _08036b4c
	add		r0, r5, r1
	strb	r4, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0x26
	strh	r0, [r1, #0x0]
	ldr		r3, _08036b50
	add		r0, r5, r3
	mov		r2, #0xa0
	strh	r2, [r0, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x60
	strh	r1, [r0, #0x0]
	add		r3, #0x4
	add		r0, r5, r3
	strh	r2, [r0, #0x0]
	mov		r2, #0x8f
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	sub		r3, #0x2a
	add		r6, r5, r3
	ldr		r7, [r6, #0x0]
	cmp		r7, #0x0
	bne		_08036aae
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r7, [r4, #0x6c]
	str		r4, [r6, #0x0]
_08036aae:
	ldr		r0, [r6, #0x0]
	mov		r1, #0x13
	bl		sub_0808e03c
	ldr		r0, [r6, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0x0
	mov		r9, r0
	ldr		r2, _08036b54
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	mov		r3, #0x86
	lsl		r3, r3, #0x2
	add		r3, r3, r5
	mov		r8, r3
	mov		r0, #0x8c
	lsl		r0, r0, #0x2
	add		r7, r5, r0
	mov		r1, #0x88
	lsl		r1, r1, #0x2
	add		r6, r5, r1
	add		r4, r5, r2
	sub		r2, #0x2f
	add		r2, r2, r5
	mov		r10, r2
_08036ae6:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_08036b58
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_08036b58
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_08036b58
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_08036b58
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	ldr		r1, [r7, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, [r6, #0x0]
	ldr		r1, [r7, #0x0]
	add		r0, r0, r1
	str		r0, [r6, #0x0]
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x2d
	bls		_08036b38
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08036b38
	mov		r0, #0x1
	mov		r9, r0
	str		r0, [r5, #0x54]
_08036b38:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	b		_08036b5e

_08036b44:	.4byte 0x03720036
_08036b48:	.4byte 0x00009999
_08036b4c:	.4byte 0x00000159
_08036b50:	.4byte 0x00000236
_08036b54:	.4byte 0x0000023F

_08036b58:
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x1
	strb	r0, [r4, #0x0]
_08036b5e:
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x59
	bls		_08036ae6
	mov		r2, r9
	cmp		r2, #0x0
	beq		_08036ba6
	mov		r3, #0x84
	lsl		r3, r3, #0x2
	add		r4, r5, r3
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08036b96
	mov		r1, #0x3
	bl		sub_0808e28c
_08036b96:
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08036bb4
	mov		r3, #0x0
	bl		sub_080b7724
_08036ba6:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08036bb4:	.4byte 0xFFFF8002
	thumb_func_end sub_08036990

	thumb_func_start sub_08036bb8
sub_08036bb8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r6, r0, #0x0
	mov		r0, #0x0
	mov		r10, r0
	mov		r1, #0x85
	lsl		r1, r1, #0x2
	add		r5, r6, r1
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08036bf0
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r2, r10
	str		r2, [r4, #0x6c]
	str		r4, [r5, #0x0]
_08036bf0:
	ldr		r0, [r5, #0x0]
	mov		r1, #0x13
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r3, #0x90
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	mov		r5, r10
	strb	r5, [r0, #0x0]
	mov		r0, #0x5
	bl		sub_0808f690
	mov		r7, #0x0
	add		r0, r6, #0x0
	add		r0, #0x40
	str		r0, [sp, #0xC]
	mov		r1, #0x8f
	lsl		r1, r1, #0x2
	add		r4, r6, r1
	mov		r2, #0x85
	lsl		r2, r2, #0x2
	add		r2, r2, r6
	mov		r8, r2
	ldr		r3, _08036c84
	mov		r9, r3
	mov		r5, #0x86
	lsl		r5, r5, #0x2
	add		r5, r6, r5
	str		r5, [sp, #0x4]
	mov		r0, #0x87
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	str		r0, [sp, #0x8]
	add		r1, #0x4
	add		r5, r6, r1
_08036c48:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	bne		_08036c54
	b		_08036d88
_08036c54:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	bne		_08036c60
	b		_08036d88
_08036c60:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	bne		_08036c6c
	b		_08036d88
_08036c6c:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	bne		_08036c78
	b		_08036d88
_08036c78:
	cmp		r7, #0x1d
	bgt		_08036c88
	mov		r2, #0x60
	sub		r0, r2, r7
	strh	r0, [r4, #0x0]
	b		_08036c98

_08036c84:	.4byte 0x0200CDBC

_08036c88:
	cmp		r7, #0x3b
	bgt		_08036c94
	add		r0, r7, #0x0
	add		r0, #0x25
	strh	r0, [r4, #0x0]
	b		_08036c98
_08036c94:
	mov		r3, #0x60
	strh	r3, [r4, #0x0]
_08036c98:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08036d50
	mov		r5, #0x1
	mov		r10, r5
	mov		r0, #0x8d
	lsl		r0, r0, #0x2
	add		r4, r6, r0
	ldr		r0, [r6, #0x5c]
	lsl		r5, r7, #0x1
	add		r0, #0x64
	add		r0, r0, r5
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0x0]
	add		r0, r0, r1
	strh	r0, [r4, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r3, r9
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x0
	bne		_08036ce8
	ldr		r0, [r6, #0x5c]
	add		r0, #0x64
	add		r0, r0, r5
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r3, #0x0
	ldrsh	r2, [r4, r3]
	ldr		r0, _08036cf8
	bl		sub_0808c670
_08036ce8:
	mov		r4, #0x4
	cmp		r7, #0x1d
	bne		_08036cfc
	mov		r4, #0x3
	mov		r0, #0x53
	bl		sub_0808f690
	b		_08036d14

_08036cf8:	.4byte 0x080d2ff8 @ Now_Get_%d_:_Total_%d

_08036cfc:
	add		r0, r7, #0x0
	sub		r0, #0x19
	cmp		r0, #0x8
	bhi		_08036d0e
	mov		r4, #0x2
	mov		r0, #0x52
	bl		sub_0808f690
	b		_08036d14
_08036d0e:
	mov		r0, #0x55
	bl		sub_0808f690
_08036d14:
	cmp		r4, #0x4
	beq		_08036da2
	ldr		r5, _08036d48
	ldr		r1, _08036d4c
	add		r0, r5, r1
	mov		r1, #0xf8
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, [r6, #0x58]
	ldr		r2, [sp, #0x4]
	ldr		r3, [r2, #0x0]
	ldr		r5, [sp, #0x8]
	ldr		r2, [r5, #0x0]
	str		r2, [sp, #0x0]
	add		r2, r4, #0x0
	bl		sub_08038e84
	add		r1, r0, #0x0
	ldr		r0, _08036d48
	mov		r2, #0x0
	bl		sub_080b781c
	b		_08036da2

.incbin "base.gba", 0x36D46, 0x2

_08036d48:	.4byte 0x0200DB50
_08036d4c:	.4byte 0xFFFFFEB0

_08036d50:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08036d8a
	mov		r0, #0x1
	strb	r0, [r5, #0x0]
	mov		r0, #0x55
	bl		sub_0808f690
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r2, r9
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	bne		_08036da2
	ldr		r0, _08036d84
	bl		sub_0808c670
	b		_08036da2

_08036d84:	.4byte 0x080d3010 @ Break!!

_08036d88:
	sub		r7, #0x1
_08036d8a:
	ldr		r0, [sp, #0xC]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r7, #0x1
	cmp		r7, #0x3b
	bgt		_08036da2
	b		_08036c48
_08036da2:
	mov		r5, #0x0
	mov		r0, #0x8d
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	mov		r8, r0
	mov		r1, #0x90
	lsl		r1, r1, #0x2
	add		r7, r6, r1
	mov		r2, #0x1
	mov		r9, r2
_08036db6:
	ldr		r0, [sp, #0xC]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_08036e40
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_08036e40
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_08036e40
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_08036e40
	cmp		r5, #0x1d
	bne		_08036e42
	mov		r3, r10
	cmp		r3, #0x0
	beq		_08036e34
	mov		r0, r8
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	ldr		r1, [r6, #0x58]
	ldr		r2, _08036e3c
	add		r0, r1, r2
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	ldr		r1, [r1, #0x54]
	mov		r3, #0xac
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r2
	mov		r2, #0xab
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	bl		sub_080bbcac
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	cmp		r4, r0
	blt		_08036e34
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_08036e42
_08036e34:
	mov		r0, r9
	str		r0, [r6, #0x54]
	b		_08036e42

.incbin "base.gba", 0x36E3A, 0x2

_08036e3c:	.4byte 0x0000052A

_08036e40:
	sub		r5, #0x1
_08036e42:
	add		r5, #0x1
	cmp		r5, #0x1d
	ble		_08036db6
	mov		r1, r10
	cmp		r1, #0x0
	beq		_08036e5a
	mov		r2, #0x90
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08036e66
_08036e5a:
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _08036ebc
	mov		r3, #0x0
	bl		sub_080b7724
_08036e66:
	mov		r3, #0x8d
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	mov		r5, #0x0
	ldrsh	r4, [r0, r5]
	ldr		r1, [r6, #0x58]
	ldr		r2, _08036ec0
	add		r0, r1, r2
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	ldr		r1, [r1, #0x54]
	mov		r5, #0xac
	lsl		r5, r5, #0x1
	add		r0, r1, r5
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r2
	sub		r5, #0x2
	add		r1, r1, r5
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_080bbcac
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	cmp		r4, r0
	bge		_08036eaa
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _08036ec4
	mov		r3, #0x0
	bl		sub_080b7724
_08036eaa:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x36EBA, 0x2

_08036ebc:	.4byte 0xFFFF8003
_08036ec0:	.4byte 0x0000052A
_08036ec4:	.4byte 0xFFFF8004
	thumb_func_end sub_08036bb8

	thumb_func_start sub_08036ec8
sub_08036ec8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r7, r0, #0x0
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	add		r4, r7, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r1, r7, #0x0
	add		r1, #0xbc
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
	ldr		r1, _08036f90
	mov		r3, #0x88
	lsl		r3, r3, #0x2
	add		r2, r7, r3
	mov		r4, #0x86
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	mov		r1, #0xb0
	lsl		r1, r1, #0x10
	mov		r5, #0x89
	lsl		r5, r5, #0x2
	add		r2, r7, r5
	sub		r3, #0x4
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xf0
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	sub		r4, #0xcc
	add		r1, r7, r4
	mov		r0, #0x26
	strh	r0, [r1, #0x0]
	mov		r0, #0x6
	bl		sub_0808f690
	add		r5, #0x12
	add		r0, r7, r5
	mov		r2, #0x78
	strh	r2, [r0, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, #0x88
	strh	r1, [r0, #0x0]
	ldr		r3, _08036f94
	add		r0, r7, r3
	strh	r2, [r0, #0x0]
	add		r4, #0xf0
	add		r0, r7, r4
	strh	r1, [r0, #0x0]
	sub		r5, #0x26
	add		r0, r7, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, #0x85
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r2, #0x0
	mov		r8, r2
_08036f7c:
	mov		r3, r8
	cmp		r3, #0x42
	bls		_08036f84
	b		_080370fa
_08036f84:
	lsl		r0, r3, #0x2
	ldr		r1, _08036f98
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x36F8E, 0x2

_08036f90:	.4byte 0x04120000
_08036f94:	.4byte 0x0000023A
_08036f98:	.4byte 0x08036f9c
_08036f9c:	.4byte 0x080370a8

.incbin "base.gba", 0x36FA0, 0x108

_080370a8:
	mov		r4, #0x8a
	lsl		r4, r4, #0x2
	add		r1, r7, r4
	mov		r0, #0x68
	neg		r0, r0
	b		_080370f8

.incbin "base.gba", 0x370B4, 0x44
_080370f8:
	str		r0, [r1, #0x0]
_080370fa:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_080371e0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_080371e0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_080371e0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_080371e0
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	bne		_080371b8
	mov		r1, r8
	lsl		r4, r1, #0x2
	add		r4, r8
	lsl		r4, r4, #0x1
	mov		r5, #0x90
	lsl		r5, r5, #0xe
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0808c5a4
	add		r6, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0808c588
	add		r2, r0, #0x0
	sub		r5, r5, r6
	add		r0, r5, #0x0
	add		r1, r5, #0x0
	cmp		r5, #0x0
	bge		_08037154
	neg		r1, r5
_08037154:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0803715c
	neg		r1, r1
_0803715c:
	add		r1, #0x78
	ldr		r3, _080371d8
	add		r0, r7, r3
	strh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0803716c
	neg		r0, r2
_0803716c:
	asr		r1, r0, #0x10
	cmp		r2, #0x0
	bge		_08037174
	neg		r1, r1
_08037174:
	mov		r0, #0x88
	sub		r0, r0, r1
	mov		r4, #0x8f
	lsl		r4, r4, #0x2
	add		r1, r7, r4
	strh	r0, [r1, #0x0]
	mov		r5, r8
	cmp		r5, #0x2c
	bne		_08037198
	add		r1, r7, #0x0
	add		r1, #0xbc
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
	mov		r1, #0x28
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
_08037198:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080371b8
	mov		r3, #0x85
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r4, #0x1
	str		r4, [sp, #0x4]
_080371b8:
	mov		r5, r8
	cmp		r5, #0x4a
	bne		_080371e6
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	beq		_080371e6
	mov		r0, #0x1
	str		r0, [r7, #0x54]
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _080371dc
	mov		r3, #0x0
	bl		sub_080b7724
	b		_080371e6

.incbin "base.gba", 0x371D6, 0x2

_080371d8:	.4byte 0x0000023A
_080371dc:	.4byte 0xFFFF8005

_080371e0:
	mov		r1, #0x1
	neg		r1, r1
	add		r8, r1
_080371e6:
	add		r4, r7, #0x0
	add		r4, #0x40
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r2, #0x1
	add		r8, r2
	str		r4, [sp, #0x18]
	mov		r3, r8
	cmp		r3, #0x4a
	bgt		_08037208
	b		_08036f7c
_08037208:
	mov		r1, #0x84
	lsl		r1, r1, #0x11
	mov		r4, #0x8b
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	str		r1, [r0, #0x0]
	ldr		r5, [sp, #0x4]
	cmp		r5, #0x0
	beq		_0803721c
	b		_080373d8
_0803721c:
	mov		r5, #0x0
	mov		r0, #0x90
	lsl		r0, r0, #0xe
	mov		r9, r0
	ldr		r1, _08037280
	add		r1, r7, r1
	str		r1, [sp, #0x8]
	mov		r2, #0x8f
	lsl		r2, r2, #0x2
	add		r2, r2, r7
	mov		r10, r2
	mov		r3, #0x85
	lsl		r3, r3, #0x2
	add		r3, r7, r3
	str		r3, [sp, #0xC]
	sub		r4, #0x14
	add		r4, r7, r4
	str		r4, [sp, #0x10]
	mov		r0, #0x87
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	str		r0, [sp, #0x14]
	ldr		r1, _08037284
	mov		r8, r1
	mov		r6, #0xb9
	lsl		r6, r6, #0x2
_08037250:
	cmp		r5, #0xf
	bgt		_08037288
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_0808c5a4
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_0808c588
	add		r2, r0, #0x0
	mov		r3, r9
	sub		r1, r3, r4
	add		r3, r1, #0x0
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08037276
	neg		r0, r1
_08037276:
	asr		r0, r0, #0x10
	cmp		r3, #0x0
	bge		_080372b0
	b		_080372ae

.incbin "base.gba", 0x3727E, 0x2

_08037280:	.4byte 0x0000023A
_08037284:	.4byte 0xFFFFFED4

_08037288:
	mov		r0, r8
	mov		r1, r9
	bl		sub_0808c588
	add		r4, r0, #0x0
	mov		r0, r8
	mov		r1, r9
	bl		sub_0808c5a4
	add		r2, r0, #0x0
	mov		r3, r9
	sub		r1, r3, r4
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_080372a8
	neg		r0, r1
_080372a8:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_080372b0
_080372ae:
	neg		r0, r0
_080372b0:
	add		r0, #0x78
	ldr		r4, [sp, #0x8]
	strh	r0, [r4, #0x0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_080372be
	neg		r0, r2
_080372be:
	asr		r0, r0, #0x10
	cmp		r2, #0x0
	bge		_080372c6
	neg		r0, r0
_080372c6:
	mov		r1, #0x88
	sub		r0, r1, r0
	mov		r2, r10
	strh	r0, [r2, #0x0]
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_080373b0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_080373b0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_080373b0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_080373b0
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080373ba
	ldr		r3, [sp, #0xC]
	ldr		r0, [r3, #0x0]
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r4, #0x8d
	lsl		r4, r4, #0x2
	add		r2, r7, r4
	ldr		r0, [r7, #0x5c]
	lsl		r1, r5, #0x1
	add		r0, #0xdc
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r3, [r2, #0x0]
	add		r0, r0, r3
	strh	r0, [r2, #0x0]
	ldr		r4, _08037358
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	cmp		r0, #0x0
	bne		_08037342
	ldr		r0, [r7, #0x5c]
	add		r0, #0xdc
	add		r0, r0, r1
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	mov		r0, #0x0
	ldrsh	r2, [r2, r0]
	ldr		r0, _0803735c
	bl		sub_0808c670
_08037342:
	mov		r1, #0x1
	str		r1, [sp, #0x4]
	mov		r4, #0x4
	cmp		r5, #0xe
	bne		_08037360
	mov		r4, #0x3
	mov		r0, #0x53
	bl		sub_0808f690
	b		_08037370

.incbin "base.gba", 0x37356, 0x2

_08037358:	.4byte 0x0200CDBC
_0803735c:	.4byte 0x080d2ff8 @ Now_Get_%d_:_Total_%d

_08037360:
	add		r0, r5, #0x0
	sub		r0, #0xa
	cmp		r0, #0x8
	bhi		_08037370
	mov		r4, #0x2
	mov		r0, #0x52
	bl		sub_0808f690
_08037370:
	cmp		r4, #0x4
	beq		_080373a0
	ldr		r2, _080373a8
	ldr		r3, _080373ac
	add		r0, r2, r3
	mov		r1, #0xf8
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, [r7, #0x58]
	ldr		r5, [sp, #0x10]
	ldr		r3, [r5, #0x0]
	ldr		r5, [sp, #0x14]
	ldr		r2, [r5, #0x0]
	str		r2, [sp, #0x0]
	add		r2, r4, #0x0
	bl		sub_08038e84
	add		r1, r0, #0x0
	ldr		r0, _080373a8
	mov		r2, #0x0
	bl		sub_080b781c
_080373a0:
	mov		r0, #0x1
	str		r0, [r7, #0x54]
	b		_080373d8

.incbin "base.gba", 0x373A6, 0x2

_080373a8:	.4byte 0x0200DB50
_080373ac:	.4byte 0xFFFFFEB0

_080373b0:
	mov		r1, #0x14
	neg		r1, r1
	add		r8, r1
	sub		r6, #0xa
	sub		r5, #0x1
_080373ba:
	ldr		r0, [sp, #0x18]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r2, #0x14
	add		r8, r2
	add		r6, #0xa
	add		r5, #0x1
	cmp		r5, #0x3b
	bgt		_080373d8
	b		_08037250
_080373d8:
	mov		r3, #0x8d
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r5, #0x0
	ldrsh	r4, [r0, r5]
	ldr		r1, [r7, #0x58]
	ldr		r2, _0803742c
	add		r0, r1, r2
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	ldr		r1, [r1, #0x54]
	mov		r5, #0xac
	lsl		r5, r5, #0x1
	add		r0, r1, r5
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r2
	sub		r5, #0x2
	add		r1, r1, r5
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_080bbcac
	cmp		r4, r0
	blt		_08037410
	ldr		r3, [sp, #0x4]
	cmp		r3, #0x0
	bne		_0803741c
_08037410:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _08037430
	mov		r3, #0x0
	bl		sub_080b7724
_0803741c:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803742c:	.4byte 0x0000052A
_08037430:	.4byte 0xFFFF8005
	thumb_func_end sub_08036ec8

	thumb_func_start sub_08037434
sub_08037434:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r0, #0x7
	bl		sub_0808f690
	add		r0, r5, #0x0
	add		r0, #0x60
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r4, #0x0
	mov		r0, #0x86
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r8, r0
	mov		r1, #0x87
	lsl		r1, r1, #0x2
	add		r6, r5, r1
	mov		r2, #0x40
	add		r2, r2, r5
	mov		r9, r2
_08037476:
	lsl		r0, r4, #0x15
	mov		r1, #0x13
	bl		sub_080bbcac
	add		r1, r0, #0x0
	ldr		r7, _080375c8
	add		r2, r1, r7
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0803748c
	neg		r0, r2
_0803748c:
	asr		r0, r0, #0x10
	cmp		r2, #0x0
	bge		_08037494
	neg		r0, r0
_08037494:
	mov		r3, #0x88
	lsl		r3, r3, #0x10
	ldr		r7, _080375cc
	add		r1, r1, r7
	ldr		r7, _080375d0
	add		r0, r0, r7
	mul		r1, r0
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_080374ac
	add		r0, #0x7f
_080374ac:
	asr		r0, r0, #0x7
	add		r0, r0, r3
	mov		r1, r8
	str		r2, [r1, #0x0]
	str		r0, [r6, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r4, #0x1
	cmp		r4, #0x13
	ble		_08037476
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0xb
	strh	r0, [r1, #0x0]
	ldr		r2, _080375d4
	add		r1, r5, r2
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r6, #0x0
	str		r4, [sp, #0x0]
	mov		r7, #0xc0
	lsl		r7, r7, #0xe
	mov		r10, r7
	mov		r0, #0x86
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r8, r0
	mov		r1, #0x87
	lsl		r1, r1, #0x2
	add		r7, r5, r1
_08037504:
	mov		r0, r10
	mul		r0, r6
	cmp		r0, #0x0
	bge		_0803750e
	add		r0, #0x3f
_0803750e:
	asr		r1, r0, #0x6
	ldr		r2, _080375d8
	add		r4, r1, r2
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_0803751c
	neg		r0, r4
_0803751c:
	asr		r0, r0, #0x10
	cmp		r4, #0x0
	bge		_08037524
	neg		r0, r0
_08037524:
	ldr		r2, _080375d0
	add		r0, r0, r2
	mul		r0, r1
	mov		r1, #0x12
	bl		sub_080bbcac
	mov		r1, #0x88
	lsl		r1, r1, #0x10
	add		r0, r0, r1
	mov		r2, r8
	str		r4, [r2, #0x0]
	str		r0, [r7, #0x0]
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, #0x1
	cmp		r6, #0x40
	ble		_08037504
	mov		r7, #0x84
	lsl		r7, r7, #0x2
	add		r6, r5, r7
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_08037564
	mov		r1, #0x3
	bl		sub_0808e28c
_08037564:
	mov		r4, #0x0
	str		r4, [r6, #0x0]
	mov		r0, #0x85
	lsl		r0, r0, #0x2
	add		r6, r5, r0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_0803757a
	mov		r1, #0x3
	bl		sub_0808e28c
_0803757a:
	str		r4, [r6, #0x0]
	mov		r0, #0x8
	bl		sub_0808f690
	ldr		r2, _080375d4
	add		r1, r5, r2
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	mov		r1, #0x84
	lsl		r1, r1, #0x11
	mov		r7, #0x87
	lsl		r7, r7, #0x2
	add		r0, r5, r7
	str		r1, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r4, #0x3b
_080375a2:
	mov		r0, r9
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080375a2
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080375c8:	.4byte 0x04140000
_080375cc:	.4byte 0xFFE00000
_080375d0:	.4byte 0xfffffbcc
_080375d4:	.4byte 0x0000023E
_080375d8:	.4byte 0x04340000
	thumb_func_end sub_08037434

	thumb_func_start sub_080375dc
sub_080375dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x40
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x6
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
	ldr		r1, _08037664
	mov		r0, #0x88
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	mov		r3, #0x86
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	mov		r1, #0xb0
	lsl		r1, r1, #0x10
	mov		r0, #0x89
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	add		r3, #0x4
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r6, #0x0
	add		r0, sp, #0x10
	mov		r8, r0
	add		r1, sp, #0x20
	mov		r9, r1
	mov		r3, sp
	add		r3, #0x30
	str		r3, [sp, #0x38]
	mov		r0, sp
	add		r0, #0x34
	str		r0, [sp, #0x3C]
_08037654:
	cmp		r6, #0x15
	bhi		_08037716
	lsl		r0, r6, #0x2
	ldr		r1, _08037668
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x37662, 0x2

_08037664:	.4byte 0x04120000
_08037668:	.4byte 0x0803766c
_0803766c:	.4byte 0x080376c4

.incbin "base.gba", 0x37670, 0x54

_080376c4:
	mov		r3, #0x8a
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	mov		r0, #0x68
	neg		r0, r0
	b		_080376fe

.incbin "base.gba", 0x376D0, 0x2E
_080376fe:
	str		r0, [r1, #0x0]
	cmp		r6, #0x15
	bne		_08037716
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x28
	strh	r0, [r1, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
_08037716:
	add		r4, r5, #0x0
	add		r4, #0x40
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, #0x1
	mov		r10, r4
	cmp		r6, #0x1d
	ble		_08037654
	mov		r1, #0x84
	lsl		r1, r1, #0x2
	add		r4, r5, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08037744
	mov		r1, #0x3
	bl		sub_0808e28c
_08037744:
	mov		r7, #0x0
	str		r7, [r4, #0x0]
	mov		r3, #0x85
	lsl		r3, r3, #0x2
	add		r4, r5, r3
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0803775a
	mov		r1, #0x3
	bl		sub_0808e28c
_0803775a:
	str		r7, [r4, #0x0]
	ldr		r0, _080377e0
	str		r0, [sp, #0x10]
	ldr		r0, _080377e4
	str		r0, [sp, #0x14]
	ldr		r0, _080377e8
	str		r0, [sp, #0x18]
	ldr		r0, _080377ec
	str		r0, [sp, #0x1C]
	mov		r0, sp
	mov		r1, r8
	mov		r2, #0x10
	bl		sub_0808c818
	mov		r0, #0xb0
	lsl		r0, r0, #0x10
	str		r0, [sp, #0x20]
	mov		r0, #0xa8
	lsl		r0, r0, #0x10
	str		r0, [sp, #0x24]
	mov		r0, #0xc0
	lsl		r0, r0, #0x10
	str		r0, [sp, #0x28]
	mov		r0, #0x90
	lsl		r0, r0, #0x11
	str		r0, [sp, #0x2C]
	mov		r0, r8
	mov		r1, r9
	mov		r2, #0x10
	bl		sub_0808c818
	mov		r0, #0x20
	bl		sub_0808af94
	mov		r1, #0x4
	bl		sub_08033590
	add		r6, r0, #0x0
	mov		r1, sp
	mov		r2, r8
	bl		sub_0803385c
	mov		r1, #0x8a
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	str		r7, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r3, #0x90
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	add		r7, r4, #0x0
	cmp		r0, #0x0
	bne		_080377f0
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x6
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_08037802

_080377e0:	.4byte 0x04120000
_080377e4:	.4byte 0x03F20000
_080377e8:	.4byte 0x03D20000
_080377ec:	.4byte 0x03C20000

_080377f0:
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x8
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0x40
	bl		sub_0808f690
_08037802:
	mov		r4, #0x0
	mov		r0, #0x86
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r9, r0
	mov		r1, #0x87
	lsl		r1, r1, #0x2
	add		r1, r1, r5
	mov		r8, r1
_08037814:
	cmp		r4, #0xf
	bne		_08037822
	add		r0, r7, #0x0
	mov		r1, #0xb
	mov		r2, #0x2
	bl		sub_0808e3c0
_08037822:
	lsl		r0, r4, #0x10
	mov		r1, #0x49
	bl		sub_080bbcac
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	ldr		r2, [sp, #0x38]
	ldr		r3, [sp, #0x3C]
	bl		sub_08033958
	ldr		r0, [sp, #0x30]
	mov		r3, r9
	str		r0, [r3, #0x0]
	ldr		r0, [sp, #0x34]
	mov		r1, r8
	str		r0, [r1, #0x0]
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r4, #0x1
	cmp		r4, #0x48
	ble		_08037814
	cmp		r6, #0x0
	beq		_08037864
	add		r0, r6, #0x0
	mov		r1, #0x3
	bl		sub_08033998
_08037864:
	add		r0, r7, #0x0
	mov		r1, #0x9
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r4, #0x4
_08037870:
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08037870
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _080378a4
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0x40
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x378A2, 0x2

_080378a4:	.4byte 0xFFFF8006
	thumb_func_end sub_080375dc

	thumb_func_start sub_080378a8
sub_080378a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xc9
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	mov		r0, #0x27
	strh	r0, [r1, #0x0]
	ldr		r1, _08037924
	mov		r0, #0x88
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	mov		r3, #0x86
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	mov		r1, #0xb0
	lsl		r1, r1, #0x10
	mov		r4, #0x89
	lsl		r4, r4, #0x2
	add		r2, r5, r4
	add		r3, #0x4
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r6, #0x0
_08037912:
	cmp		r6, #0x42
	bls		_08037918
	b		_08037a96
_08037918:
	lsl		r0, r6, #0x2
	ldr		r1, _08037928
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x37922, 0x2

_08037924:	.4byte 0x04120000
_08037928:	.4byte 0x0803792c
_0803792c:	.4byte 0x08037a38

.incbin "base.gba", 0x37930, 0x108

_08037a38:
	mov		r4, #0x8a
	lsl		r4, r4, #0x2
	add		r1, r5, r4
	mov		r0, #0x68
	neg		r0, r0
	b		_08037a94

.incbin "base.gba", 0x37A44, 0x50
_08037a94:
	str		r0, [r1, #0x0]
_08037a96:
	add		r7, r5, #0x0
	add		r7, #0xbc
	cmp		r6, #0x2c
	bne		_08037aac
	mov		r3, #0xa6
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r1, #0x28
	strh	r1, [r0, #0x0]
	mov		r0, #0x27
	strh	r0, [r7, #0x0]
_08037aac:
	add		r4, r5, #0x0
	add		r4, #0x40
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, #0x1
	mov		r8, r4
	cmp		r6, #0x59
	bgt		_08037aca
	b		_08037912
_08037aca:
	mov		r0, #0x84
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08037adc
	mov		r1, #0x3
	bl		sub_0808e28c
_08037adc:
	mov		r6, #0x0
	str		r6, [r4, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x2
	add		r4, r5, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08037af2
	mov		r1, #0x3
	bl		sub_0808e28c
_08037af2:
	str		r6, [r4, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r6, #0x0
	str		r4, [sp, #0x0]
	mov		r2, #0x86
	lsl		r2, r2, #0x2
	add		r2, r2, r5
	mov		r9, r2
	mov		r3, #0x87
	lsl		r3, r3, #0x2
	add		r3, r3, r5
	mov		r10, r3
_08037b22:
	lsl		r0, r6, #0x15
	mov		r1, #0xe
	bl		sub_080bbcac
	add		r1, r0, #0x0
	ldr		r4, _08037c4c
	add		r2, r1, r4
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08037b38
	neg		r0, r2
_08037b38:
	asr		r0, r0, #0x10
	cmp		r2, #0x0
	bge		_08037b40
	neg		r0, r0
_08037b40:
	mov		r3, #0x88
	lsl		r3, r3, #0x10
	ldr		r4, _08037c50
	add		r1, r1, r4
	ldr		r4, _08037c54
	add		r0, r0, r4
	mul		r1, r0
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_08037b58
	add		r0, #0x7f
_08037b58:
	asr		r0, r0, #0x7
	add		r0, r0, r3
	mov		r1, r9
	str		r2, [r1, #0x0]
	mov		r2, r10
	str		r0, [r2, #0x0]
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, #0x1
	cmp		r6, #0xe
	ble		_08037b22
	mov		r0, #0x9
	bl		sub_0808f690
	mov		r0, #0x84
	lsl		r0, r0, #0x11
	mov		r3, #0x8b
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r0, #0xb
	strh	r0, [r7, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r4, #0x86
	lsl		r4, r4, #0x2
	add		r4, r4, r5
	mov		r10, r4
	mov		r0, #0x87
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r9, r0
	mov		r7, #0x0
	mov		r6, #0x3b
_08037bae:
	add		r0, r7, #0x0
	mov		r1, #0x3b
	bl		sub_080bbcac
	add		r1, r0, #0x0
	ldr		r2, _08037c58
	add		r4, r1, r2
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08037bc4
	neg		r0, r4
_08037bc4:
	asr		r0, r0, #0x10
	cmp		r4, #0x0
	bge		_08037bcc
	neg		r0, r0
_08037bcc:
	ldr		r3, _08037c54
	add		r0, r0, r3
	mul		r0, r1
	mov		r1, #0x12
	bl		sub_080bbcac
	mov		r1, #0x88
	lsl		r1, r1, #0x10
	add		r0, r0, r1
	mov		r2, r10
	str		r4, [r2, #0x0]
	mov		r3, r9
	str		r0, [r3, #0x0]
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r4, #0xc0
	lsl		r4, r4, #0xe
	add		r7, r7, r4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08037bae
	ldr		r0, [sp, #0x0]
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0x84
	lsl		r1, r1, #0x11
	mov		r2, #0x87
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r4, #0x4
_08037c1a:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08037c1a
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08037c5c
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08037c4c:	.4byte 0x04140000
_08037c50:	.4byte 0xFFE00000
_08037c54:	.4byte 0xfffffbcc
_08037c58:	.4byte 0x04340000
_08037c5c:	.4byte 0xFFFF8006
	thumb_func_end sub_080378a8

	thumb_func_start sub_08037c60
sub_08037c60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _08037dd0
	mov		r0, #0x88
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	mov		r3, #0x86
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	mov		r1, #0xb0
	lsl		r1, r1, #0x10
	mov		r0, #0x89
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	add		r3, #0x4
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	mov		r1, #0x84
	lsl		r1, r1, #0x11
	mov		r2, #0x8b
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x58]
	ldr		r0, [r0, #0x64]
	mov		r1, #0x1
	bl		sub_08038af8
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0xb
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r6, #0x0
	mov		r3, #0x86
	lsl		r3, r3, #0x2
	add		r3, r3, r5
	mov		r10, r3
	mov		r0, #0x87
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r9, r0
	add		r1, r5, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x0]
	mov		r8, r6
_08037cee:
	mov		r0, r8
	mov		r1, #0x3b
	bl		sub_080bbcac
	add		r1, r0, #0x0
	ldr		r2, _08037dd4
	add		r4, r1, r2
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08037d04
	neg		r0, r4
_08037d04:
	asr		r0, r0, #0x10
	cmp		r4, #0x0
	bge		_08037d0c
	neg		r0, r0
_08037d0c:
	ldr		r3, _08037dd8
	add		r0, r0, r3
	mul		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	mov		r1, #0xc8
	bl		sub_080bbcac
	mov		r1, #0xb0
	lsl		r1, r1, #0x10
	add		r0, r0, r1
	mov		r2, r10
	str		r4, [r2, #0x0]
	mov		r3, r9
	str		r0, [r3, #0x0]
	add		r7, r5, #0x0
	add		r7, #0x60
	cmp		r6, #0x18
	bne		_08037d3c
	add		r0, r7, #0x0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
_08037d3c:
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r0, #0xa0
	lsl		r0, r0, #0xf
	add		r8, r0
	add		r6, #0x1
	cmp		r6, #0x3b
	ble		_08037cee
	mov		r1, #0x84
	lsl		r1, r1, #0x2
	add		r4, r5, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08037d6c
	mov		r1, #0x3
	bl		sub_0808e28c
_08037d6c:
	mov		r6, #0x0
	str		r6, [r4, #0x0]
	mov		r2, #0x85
	lsl		r2, r2, #0x2
	add		r4, r5, r2
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08037d82
	mov		r1, #0x3
	bl		sub_0808e28c
_08037d82:
	str		r6, [r4, #0x0]
	mov		r1, #0x84
	lsl		r1, r1, #0x11
	mov		r3, #0x87
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r4, #0x4
_08037d9c:
	ldr		r0, [sp, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08037d9c
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08037ddc
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x37DCE, 0x2

_08037dd0:	.4byte 0x04120000
_08037dd4:	.4byte 0x042C0000
_08037dd8:	.4byte 0xFFFFFBD4
_08037ddc:	.4byte 0xFFFF8006
	thumb_func_end sub_08037c60

	thumb_func_start sub_08037de0
sub_08037de0:
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r0, [r3, #0x58]
	mov		r1, #0xa4
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r2, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08037e00
	neg		r1, r0
_08037e00:
	asr		r0, r1, #0x10
	cmp		r2, #0x0
	bge		_08037e08
	neg		r0, r0
_08037e08:
	add		r4, r3, #0x0
	add		r4, #0xb0
	strh	r0, [r4, #0x0]
	ldr		r0, [r3, #0x58]
	ldr		r1, _08037e60
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08037e26
	neg		r1, r0
_08037e26:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_08037e2e
	neg		r2, r2
_08037e2e:
	add		r0, r3, #0x0
	add		r0, #0xb2
	strh	r2, [r0, #0x0]
	ldrh	r0, [r4, #0x0]
	add		r0, #0x3f
	lsl		r0, r0, #0x10
	mov		r1, #0xb7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_08037e5a
	lsl		r0, r2, #0x10
	asr		r1, r0, #0x10
	mov		r0, #0x40
	neg		r0, r0
	cmp		r1, r0
	ble		_08037e5a
	cmp		r1, #0xdf
	bgt		_08037e5a
	add		r0, r3, #0x0
	add		r0, #0x5c
	bl		sub_0808e4a0
_08037e5a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08037e60:	.4byte 0x00000524
	thumb_func_end sub_08037de0

	thumb_func_start sub_08037e64
sub_08037e64:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r9, r1
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r10, r2
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08037fa4
	str		r0, [r7, #0x4c]
	ldr		r0, _08037fa8
	str		r0, [r7, #0xc]
	add		r0, r7, #0x0
	add		r0, #0x58
	bl		sub_0808e21c
	add		r0, r7, #0x0
	add		r0, #0xc8
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0xc4
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r0, #0x24
	bl		sub_0808e21c
	mov		r1, #0xac
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	add		r1, #0x24
	add		r0, r7, r1
	bl		sub_0808e21c
	mov		r1, #0xf4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	add		r1, #0x24
	add		r0, r7, r1
	bl		sub_0808e21c
	mov		r1, #0x9e
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r1, #0x9d
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	add		r1, #0x24
	add		r0, r7, r1
	bl		sub_0808e21c
	mov		r1, #0xc2
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r1, #0xc1
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	add		r1, #0x24
	add		r0, r7, r1
	bl		sub_0808e21c
	mov		r1, #0xe6
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r1, #0xe5
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	mov		r5, #0x1
	mov		r1, #0x0
	mov		r8, r1
	mov		r6, #0x1
	neg		r6, r6
_08037f38:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r8
	str		r0, [r4, #0x6c]
	add		r4, #0x90
	sub		r5, #0x1
	cmp		r5, r6
	bne		_08037f38
	mov		r1, #0x9b
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	mov		r4, #0x0
	mov		r1, r9
	strh	r1, [r0, #0x0]
	ldr		r1, _08037fac
	add		r0, r7, r1
	mov		r1, r10
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x58
	mov		r1, #0xe
	bl		sub_0808e03c
	add		r1, r7, #0x0
	add		r1, #0xac
	mov		r0, #0x5a
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x50
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xb4
	strh	r4, [r0, #0x0]
	add		r1, #0x13
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xe8
	add		r0, r4, #0x0
	mov		r1, #0xe
	bl		sub_0808e03c
	ldr		r0, _08037fb0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08037fb8
	ldr		r0, _08037fb4
	b		_08037fba

_08037fa4:	.4byte 0x080e159c
_08037fa8:	.4byte 0x080e15b4
_08037fac:	.4byte 0x000004DA
_08037fb0:	.4byte 0x00000836
_08037fb4:	.4byte 0x080d301d

_08037fb8:
	ldr		r0, _08037fd0
_08037fba:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x2e
	bne		_08037fd4
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_08037fde

_08037fd0:	.4byte 0x080d3025

_08037fd4:
	add		r0, r4, #0x0
	mov		r1, #0xb
	mov		r2, #0x0
	bl		sub_0808e3c0
_08037fde:
	mov		r1, #0xac
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x0
	mov		r8, r0
	mov		r0, #0x73
	strh	r0, [r1, #0x0]
	mov		r1, #0x9f
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r6, #0x50
	strh	r6, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _0803817c
	add		r0, r7, r1
	mov		r5, #0x1
	strb	r5, [r0, #0x0]
	add		r1, #0x27
	add		r0, r7, r1
	mov		r1, #0xe
	bl		sub_0808e03c
	mov		r0, #0xe6
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x7d
	strh	r0, [r1, #0x0]
	mov		r1, #0xe7
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _08038180
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	add		r1, #0x27
	add		r0, r7, r1
	mov		r1, #0xe
	bl		sub_0808e03c
	mov		r0, #0x97
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x96
	strh	r0, [r1, #0x0]
	ldr		r1, _08038184
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _08038188
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	mov		r0, #0xa6
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x16
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, #0xbb
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, #0x78
	mov		r9, r1
	mov		r1, r9
	strh	r1, [r0, #0x0]
	ldr		r1, _0803818c
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r6, #0x1
	strh	r5, [r0, #0x0]
	add		r1, #0xd
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	add		r1, #0x7
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r0, #0xee
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x17
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _08038190
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	sub		r1, #0x15
	add		r0, r7, r1
	mov		r1, r9
	strh	r1, [r0, #0x0]
	ldr		r0, _08038194
	add		r1, r7, r0
	mov		r0, #0x3c
	strh	r0, [r1, #0x0]
	ldr		r1, _08038198
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r0, #0x89
	lsl		r0, r0, #0x3
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x17
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _0803819c
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	sub		r1, #0x15
	add		r0, r7, r1
	mov		r1, r9
	strh	r1, [r0, #0x0]
	ldr		r0, _080381a0
	add		r1, r7, r0
	mov		r0, #0x64
	strh	r0, [r1, #0x0]
	ldr		r1, _080381a4
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	mov		r1, #0x97
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r0, #0xca
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x21
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, #0xdf
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	ldr		r0, _080381a8
	add		r1, r7, r0
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	mov		r1, #0xe1
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _080381ac
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	ldr		r0, _080381b0
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x54]
	ldr		r1, _080381b4
	add		r0, r7, r1
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0803817c:	.4byte 0x00000151
_08038180:	.4byte 0x000001E1
_08038184:	.4byte 0x0000025E
_08038188:	.4byte 0x00000271
_0803818c:	.4byte 0x000002EE
_08038190:	.4byte 0x00000421
_08038194:	.4byte 0x0000040E
_08038198:	.4byte 0x00000414
_0803819c:	.4byte 0x000004B1
_080381a0:	.4byte 0x0000049E
_080381a4:	.4byte 0x000004A4
_080381a8:	.4byte 0x0000037E
_080381ac:	.4byte 0x00000391
_080381b0:	.4byte 0x0200D51C
_080381b4:	.4byte 0x000004DC
	thumb_func_end sub_08037e64

	thumb_func_start sub_080381b8
sub_080381b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r10, r1
	add		r4, r5, #0x0
	add		r4, #0x40
	ldr		r0, _08038280
	str		r0, [r5, #0x4c]
	ldr		r0, _08038284
	str		r0, [r5, #0xc]
	ldr		r0, [r5, #0x40]
	cmp		r0, #0x0
	beq		_080381de
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_080381de:
	mov		r1, #0xee
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r9, r4
	add		r7, r5, #0x0
	add		r7, #0xe8
	mov		r1, #0x58
	add		r1, r1, r5
	mov		r8, r1
	cmp		r0, #0x0
	beq		_08038212
	mov		r1, #0x9b
	lsl		r1, r1, #0x3
	add		r4, r5, r1
	cmp		r0, r4
	beq		_08038212
	mov		r0, #0xee
	lsl		r0, r0, #0x2
	add		r6, r5, r0
_08038204:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	cmp		r6, r4
	bne		_08038204
_08038212:
	mov		r1, #0xca
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xa6
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0x82
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r7, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, r8
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038272
	add		r0, r5, #0x0
	bl		sub_080b74c8
_08038272:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08038280:	.4byte 0x080e159c
_08038284:	.4byte 0x080e15b4
	thumb_func_end sub_080381b8

	thumb_func_start sub_08038288
sub_08038288:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	mov		r4, #0x64
	add		r0, r7, #0x0
	mov		r1, #0x64
	bl		sub_080bbe34
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x58
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r6, #0x0
	add		r0, #0xc8
	bl		sub_0808b3d4
	add		r0, r5, #0x0
	mul		r0, r4
	sub		r0, r7, r0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	mov		r2, #0xbc
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, #0xf4
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	mov		r1, #0xa
	bl		sub_080bbeac
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	mov		r2, #0x82
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, #0x9e
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	bl		sub_0808b3d4
	ldr		r2, _08038314
	add		r0, r6, r2
	ldrh	r0, [r0, #0x0]
	cmp		r7, r0
	bls		_08038318
	mov		r1, #0x89
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_08038326

_08038314:	.4byte 0x000004DA

_08038318:
	mov		r2, #0x89
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
_08038326:
	mov		r1, #0x97
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	bl		sub_0808b3d4
	mov		r2, #0x9b
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	ldrh	r0, [r0, #0x0]
	cmp		r7, r0
	bcs		_0803834c
	mov		r1, #0xee
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_0803835a
_0803834c:
	mov		r2, #0xee
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
_0803835a:
	mov		r1, #0x85
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	bl		sub_0808b3d4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3836A, 0x2
	thumb_func_end sub_08038288

	thumb_func_start sub_0803836c
sub_0803836c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080006ec
	ldr		r0, _08038434
	str		r0, [r6, #0xc]
	str		r4, [r6, #0x14]
	ldr		r0, _08038438
	ldr		r0, [r0, #0x0]
	str		r0, [r6, #0x18]
	mov		r1, #0x1c
	add		r1, r1, r6
	mov		r10, r1
	ldrb	r4, [r0, #0xc]
	lsl		r0, r4, #0x3
	add		r0, r0, r4
	lsl		r0, r0, #0x4
	add		r0, #0x4
	bl		sub_0808afb8
	stmia	r0!, {  r4 }
	add		r7, r0, #0x0
	add		r5, r7, #0x0
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_080383ce
	mov		r1, #0x0
	mov		r9, r1
	mov		r8, r0
_080383b4:
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r9
	str		r0, [r5, #0x6c]
	add		r5, #0x90
	sub		r4, #0x1
	cmp		r4, r8
	bne		_080383b4
_080383ce:
	mov		r1, r10
	str		r7, [r1, #0x0]
	mov		r5, #0x0
	ldr		r0, [r6, #0x18]
	ldrb	r0, [r0, #0xc]
	cmp		r5, r0
	bge		_08038422
	mov		r0, #0x3
	mov		r8, r0
	mov		r7, #0x30
	mov		r4, #0x0
_080383e4:
	ldr		r0, [r6, #0x1c]
	add		r0, r0, r4
	mov		r1, #0x12
	bl		sub_0808e03c
	ldr		r0, [r6, #0x1c]
	add		r0, r0, r4
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x1c]
	add		r0, r4, r0
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r6, #0x1c]
	add		r0, r4, r0
	add		r0, #0x69
	mov		r1, r8
	strb	r1, [r0, #0x0]
	ldr		r0, [r6, #0x1c]
	add		r0, r4, r0
	add		r0, #0x5c
	strh	r7, [r0, #0x0]
	add		r4, #0x90
	add		r5, #0x1
	ldr		r0, [r6, #0x18]
	ldrb	r0, [r0, #0xc]
	cmp		r5, r0
	blt		_080383e4
_08038422:
	add		r0, r6, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x38432, 0x2

_08038434:	.4byte 0x080e1544
_08038438:	.4byte 0x0200D51C
	thumb_func_end sub_0803836c

	thumb_func_start sub_0803843c
sub_0803843c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r5, r0, #0x0
	ldr		r3, [r5, #0x18]
	ldr		r0, [r3, #0x8]
	mov		r12, r0
	ldr		r1, [r3, #0x4]
	mov		r9, r1
	ldr		r4, [r5, #0x14]
	mov		r2, #0xa4
	lsl		r2, r2, #0x3
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08038466
	neg		r1, r0
_08038466:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_0803846e
	neg		r2, r2
_0803846e:
	ldr		r1, _0803850c
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0803847c
	neg		r1, r0
_0803847c:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08038484
	neg		r1, r1
_08038484:
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	mov		r10, r0
	mov		r0, #0x0
	mov		r8, r0
	ldrb	r3, [r3, #0xc]
	cmp		r8, r3
	bge		_08038528
	mov		r0, #0x98
	lsl		r0, r0, #0x1
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r0, r2, #0x0
	sub		r0, #0x40
	str		r0, [sp, #0x4]
	add		r0, r1, #0x0
	add		r0, #0xe0
	str		r0, [sp, #0x8]
	add		r0, r1, #0x0
	sub		r0, #0x40
	str		r0, [sp, #0xc]
	mov		r0, r10
	sub		r0, r0, r1
	str		r0, [sp, #0x10]
	add		r1, r2, #0x0
	add		r1, #0xe0
	str		r1, [sp, #0x14]
	mov		r0, r12
	sub		r7, r0, r2
	mov		r6, #0x0
	mov		r4, r12
_080384c2:
	ldr		r1, [sp, #0x0]
	cmp		r4, r1
	bge		_08038510
	ldr		r2, [sp, #0x4]
	cmp		r4, r2
	ble		_08038510
	ldr		r0, [sp, #0x8]
	cmp		r10, r0
	bge		_08038510
	ldr		r1, [sp, #0xc]
	cmp		r10, r1
	ble		_08038510
	ldr		r0, [r5, #0x1c]
	add		r0, r6, r0
	add		r0, #0x54
	strh	r7, [r0, #0x0]
	ldr		r0, [r5, #0x1c]
	add		r0, r6, r0
	add		r0, #0x56
	mov		r2, sp
	ldrh	r2, [r2, #0x10]
	strh	r2, [r0, #0x0]
	ldr		r0, [r5, #0x1c]
	add		r0, r6, r0
	add		r0, #0x5c
	mov		r1, #0x30
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x1c]
	add		r0, r6, r0
	add		r0, #0x69
	mov		r2, #0x3
	strb	r2, [r0, #0x0]
	ldr		r0, [r5, #0x1c]
	add		r0, r0, r6
	bl		sub_0808e4a0
	b		_08038516

_0803850c:	.4byte 0x00000524

_08038510:
	ldr		r0, [sp, #0x14]
	cmp		r4, r0
	bge		_08038528
_08038516:
	add		r7, r9
	add		r6, #0x90
	add		r4, r9
	mov		r1, #0x1
	add		r8, r1
	ldr		r0, [r5, #0x18]
	ldrb	r0, [r0, #0xc]
	cmp		r8, r0
	blt		_080384c2
_08038528:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803843c

	thumb_func_start sub_08038538
sub_08038538:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	mov		r9, r1
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08038650
	str		r0, [r6, #0x4c]
	ldr		r0, _08038654
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x60
	bl		sub_0808e21c
	add		r0, r6, #0x0
	add		r0, #0xd0
	bl		sub_0808b374
	add		r1, r6, #0x0
	add		r1, #0xcc
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r4, r6, #0x0
	add		r4, #0xf0
	mov		r5, #0x1
	mov		r8, r0
	mov		r7, #0x1
	neg		r7, r7
_0803857c:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r8
	str		r0, [r4, #0x6c]
	add		r4, #0x90
	sub		r5, #0x1
	cmp		r5, r7
	bne		_0803857c
	mov		r1, r9
	str		r1, [r6, #0x58]
	ldr		r0, _08038658
	ldr		r0, [r0, #0x0]
	str		r0, [r6, #0x5c]
	add		r4, r6, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r6, #0x0
	add		r0, #0xc9
	mov		r5, #0x2
	strb	r5, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xbc
	mov		r0, #0x28
	strh	r0, [r1, #0x0]
	add		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	bl		sub_0808b3d4
	ldr		r1, _0803865c
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	mov		r0, #0x2f
	strh	r0, [r1, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	bl		sub_0808b3d4
	ldr		r2, _08038660
	add		r1, r6, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x18
	strh	r0, [r1, #0x0]
	mov		r1, #0x87
	lsl		r1, r1, #0x13
	add		r2, #0x27
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x10
	add		r2, #0x4
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r0, r6, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08038650:	.4byte 0x080e155c
_08038654:	.4byte 0x080e1574
_08038658:	.4byte 0x0200D51C
_0803865c:	.4byte 0x00000159
_08038660:	.4byte 0x000001E9
	thumb_func_end sub_08038538

	thumb_func_start sub_08038664
sub_08038664:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	mov		r1, #0x85
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r5, #0x0
	mov		r0, #0xf0
	lsl		r0, r0, #0x10
	cmp		r8, r0
	bge		_080386c0
	add		r7, r4, r1
	mov		r2, #0x84
	lsl		r2, r2, #0x2
	add		r6, r4, r2
	mov		r9, r0
_0803868c:
	add		r0, r5, #0x0
	mul		r0, r5
	lsl		r0, r0, #0x14
	mov		r1, #0x64
	bl		sub_080bbcac
	add		r0, r8
	str		r0, [r7, #0x0]
	ldr		r0, [r6, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xa
	add		r0, r0, r1
	str		r0, [r6, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	ldr		r0, [r7, #0x0]
	cmp		r0, r9
	blt		_0803868c
_080386c0:
	mov		r0, #0xa
	bl		sub_0808f690
	mov		r0, #0xf0
	lsl		r0, r0, #0x10
	mov		r2, #0x85
	lsl		r2, r2, #0x2
	add		r1, r4, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x60
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r5, r4, #0x0
	add		r5, #0x40
_080386e2:
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_080386e2
	thumb_func_end sub_08038664

	thumb_func_start sub_080386f4
sub_080386f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	ldr		r1, [r5, #0x58]
	mov		r2, #0xa4
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r2, [r0, #0x0]
	ldr		r3, _080388ac
	add		r6, r2, r3
	mov		r0, #0x98
	lsl		r0, r0, #0x11
	add		r7, r2, r0
	ldr		r3, _080388b0
	add		r1, r1, r3
	ldr		r0, [r1, #0x0]
	ldr		r1, _080388ac
	add		r1, r1, r0
	mov		r8, r1
	mov		r3, #0xe0
	lsl		r3, r3, #0x10
	add		r3, r3, r0
	mov		r9, r3
	mov		r1, #0x84
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bge		_08038790
	cmp		r0, r7
	bge		_08038790
	add		r1, #0x4
	add		r3, r5, r1
	ldr		r1, [r3, #0x0]
	cmp		r8, r1
	bge		_08038790
	cmp		r1, r9
	bge		_08038790
	sub		r0, r0, r2
	add		r2, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08038750
	neg		r1, r0
_08038750:
	asr		r1, r1, #0x10
	cmp		r2, #0x0
	bge		_08038758
	neg		r1, r1
_08038758:
	add		r0, r5, #0x0
	add		r0, #0xb4
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x58]
	ldr		r2, _080388b0
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	sub		r0, r0, r1
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08038772
	neg		r1, r0
_08038772:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0803877a
	neg		r1, r1
_0803877a:
	add		r0, r5, #0x0
	add		r0, #0xb6
	strh	r1, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, #0x1a
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_08038790:
	ldr		r0, _080388b4
	cmp		r6, r0
	bge		_08038816
	cmp		r0, r7
	bge		_08038816
	mov		r3, #0x86
	lsl		r3, r3, #0x2
	add		r2, r5, r3
	ldr		r0, [r2, #0x0]
	ldr		r1, _080388b8
	add		r0, r0, r1
	cmp		r8, r0
	bge		_08038816
	cmp		r0, r9
	bge		_08038816
	ldr		r0, [r5, #0x58]
	mov		r3, #0xa4
	lsl		r3, r3, #0x3
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080387c0
	neg		r1, r0
_080387c0:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_080387c8
	neg		r1, r1
_080387c8:
	ldr		r3, _080388bc
	add		r0, r3, #0x0
	sub		r0, r0, r1
	mov		r3, #0xa2
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080387e0
	neg		r1, r0
_080387e0:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_080387e8
	neg		r2, r2
_080387e8:
	ldr		r0, [r5, #0x58]
	ldr		r1, _080388b0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080387f8
	neg		r1, r0
_080387f8:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08038800
	neg		r1, r1
_08038800:
	add		r0, r1, #0x0
	add		r0, #0x20
	sub		r0, r2, r0
	mov		r2, #0xa3
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf0
	bl		sub_0808e4a0
_08038816:
	ldr		r0, _080388c0
	cmp		r6, r0
	bge		_080388a0
	cmp		r0, r7
	bge		_080388a0
	mov		r3, #0x86
	lsl		r3, r3, #0x2
	add		r2, r5, r3
	ldr		r0, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	add		r0, r0, r1
	cmp		r8, r0
	bge		_080388a0
	cmp		r0, r9
	bge		_080388a0
	ldr		r0, [r5, #0x58]
	mov		r3, #0xa4
	lsl		r3, r3, #0x3
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08038848
	neg		r1, r0
_08038848:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08038850
	neg		r1, r1
_08038850:
	ldr		r3, _080388c4
	add		r0, r3, #0x0
	sub		r0, r0, r1
	mov		r3, #0xea
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08038868
	neg		r1, r0
_08038868:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_08038870
	neg		r2, r2
_08038870:
	ldr		r0, [r5, #0x58]
	ldr		r1, _080388b0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08038880
	neg		r1, r0
_08038880:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08038888
	neg		r1, r1
_08038888:
	add		r0, r1, #0x0
	sub		r0, #0x40
	sub		r0, r2, r0
	mov		r2, #0xeb
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	mov		r3, #0xc0
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	bl		sub_0808e4a0
_080388a0:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080388ac:	.4byte 0xFFC00000
_080388b0:	.4byte 0x00000524
_080388b4:	.4byte 0x04140000
_080388b8:	.4byte 0xFFE00000
_080388bc:	.4byte 0x00000414
_080388c0:	.4byte 0x04440000
_080388c4:	.4byte 0x00000444
	thumb_func_end sub_080386f4

	thumb_func_start sub_080388c8
sub_080388c8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08038984
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080388da
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_0803897e
_080388da:
	ldr		r0, [r4, #0x58]
	mov		r1, #0xa4
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r3, _08038988
	add		r0, r2, r3
	mov		r1, #0xf8
	lsl		r1, r1, #0x12
	cmp		r0, r1
	bge		_0803897e
	mov		r3, #0x88
	lsl		r3, r3, #0x11
	add		r0, r2, r3
	cmp		r0, r1
	ble		_0803897e
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08038902
	neg		r0, r2
_08038902:
	asr		r1, r0, #0x10
	cmp		r2, #0x0
	bge		_0803890a
	neg		r1, r1
_0803890a:
	mov		r2, #0xf8
	lsl		r2, r2, #0x2
	add		r0, r2, #0x0
	sub		r0, r0, r1
	add		r1, r4, #0x0
	add		r1, #0xb4
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x58]
	ldr		r3, _0803898c
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08038928
	neg		r1, r0
_08038928:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08038930
	neg		r1, r1
_08038930:
	mov		r0, #0xf8
	sub		r0, r0, r1
	add		r1, r4, #0x0
	add		r1, #0xb6
	strh	r0, [r1, #0x0]
	add		r1, #0x6
	mov		r0, #0x30
	strh	r0, [r1, #0x0]
	add		r1, #0xd
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_08038976
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_08038976
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_08038976
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_08038976
	add		r0, r4, #0x0
	add		r0, #0xd0
	bl		sub_0808b3d4
_08038976:
	add		r0, r4, #0x0
	add		r0, #0x60
	bl		sub_0808e4a0
_0803897e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08038984:	.4byte 0x0200D530
_08038988:	.4byte 0xFFE00000
_0803898c:	.4byte 0x00000524
	thumb_func_end sub_080388c8

	thumb_func_start sub_08038990
sub_08038990:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	add		r0, #0x60
	mov		r1, #0x7
	bl		sub_0808e3c0
	add		r4, #0xd0
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08038990

	thumb_func_start sub_080389ac
sub_080389ac:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	add		r0, #0x60
	mov		r1, #0x6
	bl		sub_0808e3c0
	add		r4, #0xd0
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080389ac

	thumb_func_start sub_080389c8
sub_080389c8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x60
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r4, #0xd0
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080389c8

	thumb_func_start sub_080389e4
sub_080389e4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x60
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r4, #0xd0
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080389e4

	thumb_func_start sub_08038a00
sub_08038a00:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x60
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r4, #0xd0
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08038a00

	thumb_func_start sub_08038a1c
sub_08038a1c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x60
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r4, #0xd0
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08038a1c

	thumb_func_start sub_08038a38
sub_08038a38:
	push	{ r4, lr }
	add		r4, r0, #0x0
_08038a3c:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08038a3c
	thumb_func_end sub_08038a38

	thumb_func_start sub_08038a50
sub_08038a50:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _08038a90
	str		r0, [r6, #0x4c]
	ldr		r0, _08038a94
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x60
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08038a8a
	add		r0, r6, #0x0
	bl		sub_080b74c8
_08038a8a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08038a90:	.4byte 0x080e15dc
_08038a94:	.4byte 0x080e15f4
	thumb_func_end sub_08038a50

	thumb_func_start sub_08038a98
sub_08038a98:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08038af0
	str		r0, [r6, #0x4c]
	ldr		r0, _08038af4
	str		r0, [r6, #0xc]
	str		r4, [r6, #0x58]
	add		r4, r6, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r5, r6, #0x0
	add		r5, #0xd0
	add		r0, r5, #0x0
	bl		sub_0808b374
	add		r1, r6, #0x0
	add		r1, #0xcc
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x10
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x5
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	bl		sub_0808b3d4
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08038af0:	.4byte 0x080e15dc
_08038af4:	.4byte 0x080e15f4
	thumb_func_end sub_08038a98

	thumb_func_start sub_08038af8
sub_08038af8:
	push	{ lr }
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	cmp		r1, #0x0
	beq		_08038b1c
	cmp		r1, #0x1
	beq		_08038b28
	ldr		r0, _08038b14
	ldr		r1, _08038b18
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_08038b32

_08038b14:	.4byte 0x080d2f44 @ a_kobayashi/minigame/mg_Takatobi
_08038b18:	.4byte 0x00000D42

_08038b1c:
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08038b24
	b		_08038b2c

.incbin "base.gba", 0x38B22, 0x2

_08038b24:	.4byte 0xFFFF8000

_08038b28:
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08038b38
_08038b2c:
	mov		r3, #0x0
	bl		sub_080b7724
_08038b32:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x38B36, 0x2

_08038b38:	.4byte 0xFFFF8001
	thumb_func_end sub_08038af8

	thumb_func_start sub_08038b3c
sub_08038b3c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r4, #0x30
	ldr		r2, [r5, #0x5c]
	mov		r3, #0xab
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r6, #0x0
	ldrsh	r3, [r0, r6]
	mov		r6, #0xaa
	lsl		r6, r6, #0x1
	add		r0, r2, r6
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	sub		r3, r3, r0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	sub		r1, r1, r0
	mov		r2, #0x87
	lsl		r2, r2, #0x13
	add		r6, #0xbc
	add		r0, r5, r6
	str		r2, [r0, #0x0]
	add		r0, r1, #0x0
	mul		r0, r4
	add		r1, r3, #0x0
	bl		sub_080bbcac
	mov		r1, #0xc0
	sub		r1, r1, r0
	lsl		r1, r1, #0x10
	mov		r2, #0x85
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r3, #0x86
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08038b3c

	thumb_func_start sub_08038b90
sub_08038b90:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r1, #0x87
	lsl		r1, r1, #0x13
	mov		r3, #0x84
	lsl		r3, r3, #0x2
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x10
	add		r3, #0x4
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x60
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x38BBA, 0x126
	thumb_func_end sub_08038b90

	thumb_func_start sub_08038ce0
sub_08038ce0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _08038d28
	str		r0, [r5, #0xc]
	ldr		r2, [r5, #0x1c]
	cmp		r2, #0x0
	beq		_08038d18
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08038d10
_08038d00:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x1c]
	cmp		r0, r4
	bne		_08038d00
_08038d10:
	ldr		r0, [r5, #0x1c]
	sub		r0, #0x4
	bl		sub_0808afd0
_08038d18:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_080006b4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x38D26, 0x2

_08038d28:	.4byte 0x080e1544
	thumb_func_end sub_08038ce0

	thumb_func_start sub_08038d2c
sub_08038d2c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0xa6
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_0808e4a0
	add		r0, r4, #0x0
	add		r0, #0x58
	bl		sub_0808e4a0
	add		r0, r4, #0x0
	add		r0, #0xe8
	bl		sub_0808e4a0
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808e4a0
	mov		r1, #0x82
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_0808e4a0
	mov		r1, #0xee
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_0808e4a0
	mov		r1, #0x89
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	bl		sub_0808e4a0
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_08038da4
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_08038da4
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_08038da4
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_08038da4
	mov		r1, #0xe6
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_0808b3d4
_08038da4:
	mov		r1, #0xca
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_0808e4a0
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08038d2c

	thumb_func_start sub_08038db4
sub_08038db4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _08038dd8
	add		r5, r4, r0
_08038dbc:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08038dce
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_08038dce:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08038dbc

.incbin "base.gba", 0x38DD6, 0x2

_08038dd8:	.4byte 0x000004DC
	thumb_func_end sub_08038db4

	thumb_func_start sub_08038ddc
sub_08038ddc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r5, #0x0
_08038de2:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_08038e14
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_08038e14
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_08038e14
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_08038e14
	add		r0, r4, #0x0
	add		r0, #0xcc
	bl		sub_0808b3d4
	b		_08038e16
_08038e14:
	sub		r5, #0x1
_08038e16:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	cmp		r5, #0x1d
	ble		_08038de2
	add		r0, r4, #0x0
	bl		sub_080b75b0
_08038e34:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08038e34
	thumb_func_end sub_08038ddc

	thumb_func_start sub_08038e3c
sub_08038e3c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _08038e7c
	str		r0, [r6, #0x4c]
	ldr		r0, _08038e80
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x5c
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08038e76
	add		r0, r6, #0x0
	bl		sub_080b74c8
_08038e76:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08038e7c:	.4byte 0x080e165c
_08038e80:	.4byte 0x080e1674
	thumb_func_end sub_08038e3c

	thumb_func_start sub_08038e84
sub_08038e84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08038efc
	str		r0, [r7, #0x4c]
	ldr		r0, _08038f00
	str		r0, [r7, #0xc]
	str		r4, [r7, #0x58]
	add		r4, r7, #0x0
	add		r4, #0x5c
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r7, #0x0
	add		r0, #0xcc
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0xc8
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x11
	bl		sub_0808e03c
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r1, r7, #0x0
	add		r1, #0xc5
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xb8
	strh	r5, [r0, #0x0]
	add		r0, #0x34
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r0, #0x4
	ldr		r1, [sp, #0x0+0x18]
	str		r1, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x38EFA, 0x2

_08038efc:	.4byte 0x080e165c
_08038f00:	.4byte 0x080e1674
	thumb_func_end sub_08038e84

	thumb_func_start sub_08038f04
sub_08038f04:
	push	{ lr }
	ldr		r2, [r0, #0x5c]
	mov		r3, #0xab
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r1
	mov		r3, #0xac
	lsl		r3, r3, #0x1
	add		r1, r2, r3
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_080bbcac
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x38F26, 0x2
	thumb_func_end sub_08038f04

	thumb_func_start sub_08038f28
sub_08038f28:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x0
	blt		_08038f3a
	ldr		r0, [r5, #0x5c]
	ldrb	r0, [r0, #0xc]
	cmp		r4, r0
	blt		_08038f46
_08038f3a:
	ldr		r0, _08038f5c
	ldr		r1, _08038f60
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08038f46:
	ldr		r1, [r5, #0x5c]
	ldr		r0, [r1, #0x4]
	add		r2, r0, #0x0
	mul		r2, r4
	ldr		r0, [r1, #0x8]
	add		r0, r0, r2
	lsl		r0, r0, #0x10
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x38F5A, 0x2

_08038f5c:	.4byte 0x080d2f44 @ a_kobayashi/minigame/mg_Takatobi
_08038f60:	.4byte 0x00000ADB
	thumb_func_end sub_08038f28

	thumb_func_start sub_08038f64
sub_08038f64:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	mov		r0, #0x8d
	lsl		r0, r0, #0x2
	add		r6, r5, r0
	ldr		r1, [r5, #0x5c]
	mov		r3, #0x0
	ldrsh	r2, [r6, r3]
	mov		r7, #0x16
	ldrsh	r0, [r1, r7]
	cmp		r2, r0
	bge		_08038f82
	mov		r2, #0x14
	ldrsh	r0, [r1, r2]
	b		_08038f8e
_08038f82:
	mov		r7, #0x1a
	ldrsh	r0, [r1, r7]
	cmp		r2, r0
	blt		_08038f9a
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
_08038f8e:
	lsl		r0, r0, #0x10
	mov		r3, #0x8c
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	b		_08038fc8
_08038f9a:
	mov		r7, #0x14
	ldrsh	r4, [r1, r7]
	lsl		r4, r4, #0x10
	mov		r0, #0x16
	ldrsh	r3, [r1, r0]
	mov		r7, #0x18
	ldrsh	r2, [r1, r7]
	lsl		r2, r2, #0x10
	sub		r2, r2, r4
	mov		r0, #0x1a
	ldrsh	r1, [r1, r0]
	sub		r1, r1, r3
	mov		r7, #0x8c
	lsl		r7, r7, #0x2
	add		r5, r5, r7
	mov		r7, #0x0
	ldrsh	r0, [r6, r7]
	sub		r0, r0, r3
	mul		r0, r2
	bl		sub_080bbcac
	add		r4, r4, r0
	str		r4, [r5, #0x0]
_08038fc8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x38FCE, 0x1E
	thumb_func_end sub_08038f64

	thumb_func_start sub_08038fec
sub_08038fec:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x15
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
_0803900c:
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0803900c
	thumb_func_end sub_08038fec

	thumb_func_start sub_08039020
sub_08039020:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r0, #0x60
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r4, #0x0
	add		r0, #0xf0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0x86
	lsl		r0, r0, #0x2
	add		r5, r4, r0
	add		r7, r4, #0x0
	add		r7, #0x40
	mov		r6, #0x27
_08039046:
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08039046
	ldr		r0, _08039084
	add		r1, r4, r0
	mov		r0, #0xe
	strb	r0, [r1, #0x0]
_08039070:
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08039070

.incbin "base.gba", 0x39082, 0x2

_08039084:	.4byte 0x0000023E
	thumb_func_end sub_08039020

	thumb_func_start sub_08039088
sub_08039088:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r0, #0x60
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r6, r5, #0x0
	add		r6, #0x40
	mov		r4, #0x4
_0803909c:
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803909c
	add		r4, r5, #0x0
	add		r4, #0x60
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x14
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
_080390d0:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_080390d0

.incbin "base.gba", 0x390E2, 0x112
	thumb_func_end sub_08039088

	thumb_func_start sub_080391f4
sub_080391f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0803925c
	str		r0, [r6, #0x4c]
	ldr		r0, _08039260
	str		r0, [r6, #0xc]
	add		r7, r6, #0x0
	add		r7, #0x94
	mov		r0, #0x0
	mov		r8, r0
	strb	r4, [r7, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x95
	strb	r5, [r0, #0x0]
	ldr		r4, _08039264
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08039240
	ldr		r0, _08039268
	mov		r1, #0x2a
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08039240:
	str		r6, [r4, #0x0]
	ldr		r0, _0803926c
	ldr		r0, [r0, #0x0]
	bl		sub_08016bc4
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x9
	beq		_08039290
	cmp		r0, #0x9
	bgt		_08039270
	cmp		r0, #0x8
	beq		_0803927a
	b		_08039304

.incbin "base.gba", 0x3925A, 0x2

_0803925c:	.4byte 0x080e169c
_08039260:	.4byte 0x080e16b4
_08039264:	.4byte 0x0200D548
_08039268:	.4byte 0x080d3054 @ a_kobayashi/Tournament.cpp
_0803926c:	.4byte 0x0200BAB8

_08039270:
	cmp		r0, #0xe
	beq		_080392b0
	cmp		r0, #0xf
	beq		_080392d0
	b		_08039304
_0803927a:
	ldr		r0, _0803928c
	bl		sub_0800227c
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_080392be
	mov		r1, #0x3
	b		_080392be

.incbin "base.gba", 0x3928A, 0x2

_0803928c:	.4byte 0x000002D1

_08039290:
	ldr		r0, _080392ac
	bl		sub_0800227c
	mov		r1, #0x3
	cmp		r0, #0x0
	beq		_0803929e
	mov		r1, #0x1
_0803929e:
	add		r0, r6, #0x0
	add		r0, #0x97
	strb	r1, [r0, #0x0]
	mov		r0, #0xbc
	lsl		r0, r0, #0x2
	b		_080392e6

.incbin "base.gba", 0x392AA, 0x2

_080392ac:	.4byte 0x000002D1

_080392b0:
	ldr		r0, _080392cc
	bl		sub_0800227c
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_080392be
	mov		r1, #0x2
_080392be:
	add		r0, r6, #0x0
	add		r0, #0x97
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	mov		r1, r8
	strb	r1, [r0, #0x0]
	b		_08039310

_080392cc:	.4byte 0x000002D2

_080392d0:
	ldr		r0, _080392fc
	bl		sub_0800227c
	mov		r1, #0x2
	cmp		r0, #0x0
	beq		_080392de
	mov		r1, #0x1
_080392de:
	add		r0, r6, #0x0
	add		r0, #0x97
	strb	r1, [r0, #0x0]
	ldr		r0, _08039300
_080392e6:
	bl		sub_0800227c
	mov		r1, #0x2
	cmp		r0, #0x0
	beq		_080392f2
	mov		r1, #0x1
_080392f2:
	add		r0, r6, #0x0
	add		r0, #0x96
	strb	r1, [r0, #0x0]
	b		_08039310

.incbin "base.gba", 0x392FA, 0x2

_080392fc:	.4byte 0x000002D2
_08039300:	.4byte 0x00000303

_08039304:
	ldr		r0, _08039338
	mov		r1, #0x46
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08039310:
	mov		r0, #0x0
	str		r0, [r6, #0x54]
	str		r0, [r6, #0x58]
	str		r0, [r6, #0x5c]
	str		r0, [r6, #0x60]
	str		r0, [r6, #0x64]
	add		r1, r6, #0x0
	add		r1, #0x90
	str		r0, [r1, #0x0]
	add		r1, #0x8
	strb	r0, [r1, #0x0]
	add		r1, #0x4
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x39336, 0x2

_08039338:	.4byte 0x080d3054 @ a_kobayashi/Tournament.cpp
	thumb_func_end sub_080391f4

	thumb_func_start sub_0803933c
sub_0803933c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _080393e8
	str		r0, [r5, #0x4c]
	ldr		r0, _080393ec
	str		r0, [r5, #0xc]
	ldr		r2, [r5, #0x54]
	ldr		r6, _080393f0
	cmp		r2, #0x0
	beq		_0803937a
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08039372
_08039362:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x54]
	cmp		r0, r4
	bne		_08039362
_08039372:
	ldr		r0, [r5, #0x54]
	sub		r0, #0x4
	bl		sub_0808afd0
_0803937a:
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x0
	beq		_08039386
	mov		r1, #0x3
	bl		sub_0808e28c
_08039386:
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x0
	beq		_08039392
	mov		r1, #0x3
	bl		sub_0808e28c
_08039392:
	ldr		r0, [r5, #0x60]
	cmp		r0, #0x0
	beq		_0803939e
	mov		r1, #0x3
	bl		sub_0808e28c
_0803939e:
	ldr		r0, [r5, #0x64]
	cmp		r0, #0x0
	beq		_080393a8
	bl		sub_08033b28
_080393a8:
	ldr		r4, [r6, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080393bc
	ldr		r0, _080393f4
	mov		r1, #0x80
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080393bc:
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_080393e0
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080393e0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x393E6, 0x2

_080393e8:	.4byte 0x080e169c
_080393ec:	.4byte 0x080e16b4
_080393f0:	.4byte 0x080d3070
_080393f4:	.4byte 0x080d3054 @ a_kobayashi/Tournament.cpp
	thumb_func_end sub_0803933c

	thumb_func_start sub_080393f8
sub_080393f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x38
	mov		r8, r0
	cmp		r1, #0x0
	beq		_08039416
	ldr		r0, _080394a0
	mov		r1, #0x8f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08039416:
	ldr		r0, _080394a4
	bl		sub_0800227c
	mov		r1, r8
	add		r1, #0x40
	str		r1, [sp, #0x30]
	mov		r5, r8
	add		r5, #0x94
	mov		r2, r8
	add		r2, #0x98
	str		r2, [sp, #0x24]
	ldr		r7, _080394a8
	ldr		r6, _080394ac
	ldr		r3, _080394b0
	mov		r9, r3
	ldr		r4, _080394b4
	mov		r10, r4
	add		r1, #0x50
	str		r1, [sp, #0x1c]
	sub		r2, #0x2
	str		r2, [sp, #0x20]
	mov		r3, r8
	add		r3, #0x68
	str		r3, [sp, #0x34]
	mov		r4, r8
	add		r4, #0x9c
	str		r4, [sp, #0x28]
	cmp		r0, #0x0
	bne		_08039492
	ldr		r4, _080394b8
	ldr		r1, _080394bc
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x6
	mov		r2, #0x3f
	mov		r3, #0xf
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0x1d
_08039476:
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r8
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039476
	ldr		r0, _080394c0
	bl		sub_08002268
_08039492:
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x8
	blt		_080394ce
	cmp		r0, #0x9
	bgt		_080394c4
	mov		r4, #0x11
	b		_080394dc

_080394a0:	.4byte 0x080d3054 @ a_kobayashi/Tournament.cpp
_080394a4:	.4byte 0x00000282
_080394a8:	.4byte 0x080d3094
_080394ac:	.4byte 0x080d3098
_080394b0:	.4byte 0x080d309c
_080394b4:	.4byte 0x080d30a0
_080394b8:	.4byte 0x0200DB40
_080394bc:	.4byte 0xFFFFFEC0
_080394c0:	.4byte 0x00000835

_080394c4:
	cmp		r0, #0xf
	bgt		_080394ce
	mov		r4, #0x13
	cmp		r0, #0xe
	bge		_080394dc
_080394ce:
	mov		r4, #0x0
	ldr		r0, _08039658
	mov		r1, #0xac
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080394dc:
	mov		r0, #0x10
	str		r0, [sp, #0x0]
	mov		r0, #0x4
	add		r1, r4, #0x0
	mov		r2, #0x4
	mov		r3, #0x10
	bl		sub_08016f60
	ldr		r0, _0803965c
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08039660
	and		r0, r1
	bl		sub_0800132c
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	ldr		r4, _08039664
	ldr		r2, _08039668
	add		r0, r4, r2
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	mov		r2, #0x3f
	mov		r3, #0x10
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0xf
_08039528:
	mov		r0, r8
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039528
	mov		r5, #0x0
	mov		r0, #0x1
	ldr		r3, [sp, #0x24]
	strb	r0, [r3, #0x0]
	ldr		r4, [r7, #0x0]
	ldr		r3, [r6, #0x0]
	mov		r6, r9
	ldr		r2, [r6, #0x0]
	mov		r0, r10
	ldr		r1, [r0, #0x0]
	mov		r6, #0x10
	neg		r6, r6
	add		r0, r6, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	mov		r0, r8
	bl		sub_080b7690
	strh	r5, [r4, #0x0]
	ldr		r0, _0803966c
	ldr		r0, [r0, #0x0]
	bl		sub_08016bc4
	mov		r0, r8
	bl		sub_080b7690
	ldr		r4, _08039664
	ldr		r1, _08039668
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x10
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0xf
_08039598:
	mov		r0, r8
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039598
	mov		r0, #0x1
	bl		sub_0808f628
	mov		r0, #0x1
	mov		r1, #0x8
	bl		sub_0808f5cc
	mov		r5, #0x0
	mov		r0, #0x2
	ldr		r2, [sp, #0x24]
	strb	r0, [r2, #0x0]
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r5, [r4, #0x6c]
	mov		r3, r8
	str		r4, [r3, #0x58]
	add		r0, r4, #0x0
	mov		r1, #0xfe
	bl		sub_0808e03c
	mov		r4, r8
	ldr		r0, [r4, #0x58]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x58]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x58]
	add		r0, #0x69
	strb	r5, [r0, #0x0]
	ldr		r0, [r4, #0x58]
	add		r0, #0x56
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x58]
	add		r0, #0x5c
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0x58]
	add		r0, #0x64
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r1, [sp, #0x1c]
	str		r5, [r1, #0x0]
	mov		r5, #0x8d
	lsl		r5, r5, #0x1
	add		r6, r5, #0x0
	mov		r7, #0xe1
	lsl		r7, r7, #0x4
	ldr		r5, [sp, #0x1c]
_0803961c:
	mov		r0, r8
	ldr		r2, [r0, #0x58]
	ldr		r1, [r1, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	sub		r0, r6, r0
	add		r2, #0x54
	strh	r0, [r2, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x58]
	add		r1, #0x62
	ldrh	r0, [r1, #0x0]
	ldr		r3, _08039670
	add		r0, r0, r3
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x58]
	add		r4, r0, #0x0
	add		r4, #0x62
	ldrh	r1, [r4, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	bge		_08039674
	mov		r3, #0xe1
	lsl		r3, r3, #0x4
	add		r0, r1, r3
	b		_08039684

.incbin "base.gba", 0x39656, 0x2

_08039658:	.4byte 0x080d3054 @ a_kobayashi/Tournament.cpp
_0803965c:	.4byte 0x02000B18
_08039660:	.4byte 0xfffffeff
_08039664:	.4byte 0x0200DB50
_08039668:	.4byte 0xFFFFFEB0
_0803966c:	.4byte 0x0200BAB4
_08039670:	.4byte 0xFFFFFE98

_08039674:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, r7
	ble		_08039686
	mov		r1, #0xe1
	lsl		r1, r1, #0x4
	bl		sub_080bbd44
_08039684:
	strh	r0, [r4, #0x0]
_08039686:
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r8
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	add		r1, r5, #0x0
	cmp		r0, #0x9
	ble		_0803961c
	mov		r2, r8
	ldr		r0, [r2, #0x58]
	add		r0, #0x54
	mov		r5, #0x0
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	ldr		r0, _08039880
	ldrh	r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r3, #0x0
	orr		r0, r1
	bl		sub_0800132c
	mov		r0, #0x3
	ldr		r4, [sp, #0x24]
	strb	r0, [r4, #0x0]
	ldr		r4, _08039884
	ldr		r6, _08039888
	add		r0, r4, r6
	mov		r1, #0x5c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x0
	bl		sub_080339f8
	add		r1, r0, #0x0
	mov		r0, r8
	str		r1, [r0, #0x64]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r1, r8
	ldr		r0, [r1, #0x64]
	mov		r4, #0x1
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x1
	mov		r2, #0x1
	mov		r3, #0x1
	bl		sub_08033ba8
	mov		r2, r8
	ldr		r0, [r2, #0x64]
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x0
	mov		r2, #0x1
	mov		r3, #0x1
	bl		sub_08033b48
	mov		r3, r8
	ldr		r0, [r3, #0x64]
	add		r1, r0, #0x0
	add		r1, #0x5a
	strb	r4, [r1, #0x0]
	sub		r1, #0x6
	strb	r4, [r1, #0x0]
	bl		sub_080b76d4
	ldr		r7, [sp, #0x1c]
	add		r4, r7, #0x0
	str		r5, [r4, #0x0]
	mov		r5, #0xf0
	mov		r10, r5
	mov		r6, #0x38
	mov		r9, r6
	ldr		r6, _0803988c
	ldr		r5, _08039890
_08039736:
	mov		r0, r8
	ldr		r1, [r0, #0x58]
	add		r1, #0x62
	ldrh	r0, [r1, #0x0]
	ldr		r2, _08039894
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	ldr		r4, [r7, #0x0]
	lsl		r4, r4, #0x3
	mov		r3, r10
	sub		r4, r3, r4
	mov		r1, r8
	ldr		r0, [r1, #0x64]
	lsl		r1, r4, #0x18
	lsr		r1, r1, #0x18
	mov		r2, r9
	str		r2, [sp, #0x0]
	mov		r2, #0x0
	mov		r3, #0xf0
	bl		sub_08033c08
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	neg		r4, r4
	lsl		r4, r4, #0x10
	str		r4, [r6, #0x0]
	mov		r3, #0x0
	str		r3, [r5, #0x0]
	mov		r0, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_08001238
	mov		r0, r8
	bl		sub_080b7690
	ldr		r0, [r7, #0x0]
	add		r0, #0x1
	str		r0, [r7, #0x0]
	cmp		r0, #0x1d
	ble		_08039736
	mov		r4, r8
	ldr		r0, [r4, #0x58]
	add		r0, #0x64
	mov		r5, #0x0
	strb	r5, [r0, #0x0]
	ldr		r6, _0803988c
	str		r5, [r6, #0x0]
	ldr		r4, _08039890
	str		r5, [r4, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001238
	str		r5, [r6, #0x0]
	str		r5, [r4, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08001238
	mov		r0, #0x4
	ldr		r6, [sp, #0x24]
	strb	r0, [r6, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x64]
	mov		r4, #0x1
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x0
	mov		r2, #0x1
	mov		r3, #0x1
	bl		sub_08033ba8
	mov		r2, r8
	ldr		r0, [r2, #0x64]
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x1
	mov		r2, #0x1
	mov		r3, #0x1
	bl		sub_08033b48
	mov		r3, r8
	ldr		r0, [r3, #0x64]
	add		r1, r0, #0x0
	add		r1, #0x5a
	strb	r4, [r1, #0x0]
	sub		r1, #0x6
	strb	r4, [r1, #0x0]
	bl		sub_080b76d4
	ldr		r0, _08039880
	ldrh	r1, [r0, #0x0]
	mov		r4, #0x84
	lsl		r4, r4, #0x6
	add		r0, r4, #0x0
	orr		r0, r1
	bl		sub_0800132c
	ldr		r4, [sp, #0x1c]
	str		r5, [r4, #0x0]
	mov		r6, #0x68
	mov		r0, #0x60
	neg		r0, r0
	add		r5, r0, #0x0
_08039816:
	ldr		r0, [r4, #0x0]
	mul		r0, r6
	mov		r1, #0x3c
	bl		sub_080bbcac
	mov		r2, r8
	ldr		r1, [r2, #0x64]
	sub		r0, r5, r0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	add		r0, r1, #0x0
	mov		r1, #0x0
	mov		r2, #0x38
	mov		r3, #0xf0
	bl		sub_08033c08
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r8
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	add		r0, #0x1
	str		r0, [r4, #0x0]
	cmp		r0, #0x3b
	ble		_08039816
	mov		r3, r8
	ldr		r0, [r3, #0x64]
	bl		sub_08033b28
	mov		r0, #0x0
	mov		r4, r8
	str		r0, [r4, #0x64]
	mov		r0, #0x6
	ldr		r5, [sp, #0x24]
	strb	r0, [r5, #0x0]
	mov		r0, r8
	bl		sub_08039fbc
	mov		r2, #0x0
_0803986e:
	ldr		r6, [sp, #0x20]
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0803989c
	add		r1, sp, #0xc
	ldr		r0, _08039898
	ldmia	r0!, { r3, r4, r5 }
	stmia	r1!, {  r3, r4, r5 }
	b		_080398a4

_08039880:	.4byte 0x02000B18
_08039884:	.4byte 0x0200DB50
_08039888:	.4byte 0xFFFFFEB0
_0803988c:	.4byte 0x0200CE24
_08039890:	.4byte 0x0200CE38
_08039894:	.4byte 0xFFFFFE98
_08039898:	.4byte 0x080d3074

_0803989c:
	add		r1, sp, #0xc
	ldr		r0, _08039950
	ldmia	r0!, { r3, r4, r6 }
	stmia	r1!, {  r3, r4, r6 }
_080398a4:
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	lsl		r1, r2, #0x2
	mov		r0, sp
	add		r0, r0, r1
	add		r0, #0xc
	ldr		r7, [r0, #0x0]
	add		r4, r1, #0x0
	ldr		r5, _08039954
	add		r5, r5, r7
	mov		r10, r5
	add		r2, #0x1
	str		r2, [sp, #0x2c]
	ldr		r6, [sp, #0x34]
	add		r6, r6, r4
	mov		r9, r6
	mov		r6, #0x0
	mov		r5, #0xe
_080398c8:
	add		r0, r6, #0x0
	mov		r1, #0xf
	bl		sub_080bbcac
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r1, r0
	mov		r2, r9
	str		r0, [r2, #0x0]
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r8
	bl		sub_080b7690
	add		r6, r10
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080398c8
	ldr		r3, [sp, #0x34]
	add		r0, r3, r4
	str		r7, [r0, #0x0]
	ldr		r2, [sp, #0x2c]
	cmp		r2, #0x3
	ble		_0803986e
	mov		r5, #0x0
	mov		r0, #0x7
	ldr		r4, [sp, #0x24]
	strb	r0, [r4, #0x0]
	mov		r0, r8
	bl		sub_08039bd8
	mov		r0, #0x8
	strb	r0, [r4, #0x0]
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r5, [r4, #0x6c]
	mov		r5, r8
	str		r4, [r5, #0x60]
	mov		r1, #0x87
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r0, [r5, #0x60]
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x60]
	add		r0, #0x54
	mov		r1, #0xe8
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x60]
	add		r0, #0x56
	mov		r1, #0x98
	strh	r1, [r0, #0x0]
	b		_08039968

_08039950:	.4byte 0x080d3084
_08039954:	.4byte 0xFFFFFEF0

_08039958:
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r8
	bl		sub_080b7690
_08039968:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08039958
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	mov		r4, #0x1d
_08039980:
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r8
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039980
	mov		r0, #0x1
	bl		sub_0808f628
	mov		r0, #0x1
	ldr		r6, [sp, #0x28]
	str		r0, [r6, #0x0]
_080399a2:
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r8
	bl		sub_080b7690
	b		_080399a2
	thumb_func_end sub_080393f8

	thumb_func_start sub_080399b4
sub_080399b4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x58]
	cmp		r0, #0x0
	beq		_080399c6
	bl		sub_0808e4a0
_080399c6:
	ldr		r0, [r4, #0x54]
	cmp		r0, #0x0
	beq		_08039a10
	mov		r0, #0x78
	add		r0, r0, r4
	mov		r8, r0
	add		r7, r4, #0x0
	add		r7, #0x68
	mov		r5, #0x0
	mov		r6, #0x3
_080399da:
	ldr		r0, [r4, #0x54]
	add		r0, r5, r0
	ldmia	r7!, { r1 }
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x54]
	add		r0, r5, r0
	mov		r2, r8
	add		r2, #0x4
	mov		r8, r2
	sub		r2, #0x4
	ldmia	r2!, { r1 }
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x54]
	add		r0, r5, r0
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x54]
	add		r0, r0, r5
	bl		sub_0808e4a0
	add		r5, #0x90
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_080399da
_08039a10:
	ldr		r0, [r4, #0x5c]
	cmp		r0, #0x0
	beq		_08039a22
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x5c]
	bl		sub_0808e4a0
_08039a22:
	ldr		r0, [r4, #0x60]
	cmp		r0, #0x0
	beq		_08039a34
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x60]
	bl		sub_0808e4a0
_08039a34:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x39A3E, 0x2
	push	{ r4, lr }
	ldr		r4, _08039a5c
	ldr		r0, _08039a60
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _08039a64
	ldr		r0, _08039a68
	bl		sub_08002148
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08039a5c:	.4byte 0x0200BAB8
_08039a60:	.4byte 0x080d30c4 @ script_tournament_result
_08039a64:	.4byte 0x0200BAB4
_08039a68:	.4byte 0x080d30e0 @ script_load_result_obj

.incbin "base.gba", 0x39A6C, 0x4
	thumb_func_end sub_080399b4

	thumb_func_start sub_08039a70
sub_08039a70:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	str		r2, [sp, #0x4]
	str		r3, [sp, #0x8]
	lsl		r1, r1, #0x2
	add		r0, #0x68
	add		r1, r0, r1
	ldr		r0, [r1, #0x0]
	mov		r8, r0
	ldr		r2, [sp, #0x0+0x34]
	lsr		r0, r2, #0x1f
	add		r0, r2, r0
	asr		r5, r0, #0x1
	cmp		r5, #0x0
	ble		_08039ad0
	mov		r10, r1
	ldr		r3, [sp, #0x4]
	mov		r0, r8
	sub		r3, r3, r0
	mov		r9, r3
	mov		r7, #0x0
	add		r4, r5, #0x0
_08039aa8:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080bbcac
	add		r0, r8
	mov		r1, r10
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r7, r9
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08039aa8
_08039ad0:
	ldr		r2, [sp, #0x0]
	lsl		r0, r2, #0x2
	add		r1, r6, #0x0
	add		r1, #0x68
	add		r1, r1, r0
	ldr		r3, [sp, #0x4]
	str		r3, [r1, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x78
	add		r2, r1, r0
	ldr		r3, [r2, #0x0]
	mov		r8, r3
	ldr		r3, [sp, #0x0+0x34]
	sub		r5, r3, r5
	str		r0, [sp, #0x10]
	str		r1, [sp, #0xC]
	cmp		r5, #0x0
	ble		_08039b2a
	mov		r10, r2
	ldr		r0, [sp, #0x8]
	mov		r1, r8
	sub		r0, r0, r1
	mov		r9, r0
	mov		r7, #0x0
	add		r4, r5, #0x0
_08039b02:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080bbcac
	add		r0, r8
	mov		r2, r10
	str		r0, [r2, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r7, r9
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08039b02
_08039b2a:
	ldr		r3, [sp, #0xC]
	ldr		r1, [sp, #0x10]
	add		r0, r3, r1
	ldr		r2, [sp, #0x8]
	str		r2, [r0, #0x0]
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08039a70

	thumb_func_start sub_08039b44
sub_08039b44:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r5, r0, #0x0
	mov		r9, r1
	str		r2, [sp, #0x4]
	str		r3, [sp, #0x8]
	ldr		r0, [sp, #0x4+0x30]
	mov		r1, #0x3
	bl		sub_080bbcac
	add		r7, r0, #0x0
	mov		r0, r9
	lsl		r1, r0, #0x2
	add		r0, r5, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r8, r1
	cmp		r7, #0x0
	ble		_08039ba8
	str		r0, [sp, #0xC]
	ldr		r0, [sp, #0x4]
	sub		r0, r0, r1
	mov		r10, r0
	mov		r6, #0x0
	add		r4, r7, #0x0
_08039b80:
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	bl		sub_080bbcac
	add		r0, r8
	ldr		r1, [sp, #0xC]
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r6, r10
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08039b80
_08039ba8:
	mov		r1, r9
	lsl		r0, r1, #0x2
	add		r1, r5, #0x0
	add		r1, #0x78
	add		r1, r1, r0
	ldr		r0, [sp, #0x4]
	str		r0, [r1, #0x0]
	ldr		r1, [sp, #0x4+0x30]
	sub		r0, r1, r7
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r1, r9
	ldr		r2, [sp, #0x8]
	ldr		r3, [sp, #0x0+0x30]
	bl		sub_08039a70
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08039b44

	thumb_func_start sub_08039bd8
sub_08039bd8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r6, r0, #0x0
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r5, #0x0
	str		r5, [r4, #0x6c]
	str		r4, [r6, #0x5c]
	mov		r1, #0x85
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r0, [r6, #0x5c]
	add		r0, #0x69
	strb	r5, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x5c
	ldr		r1, _08039e04
	strh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x96
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08039c24
	b		_08039e08
_08039c24:
	mov		r4, #0x28
	mov		r5, #0x94
	ldr		r0, [r6, #0x5c]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	mov		r0, #0x40
	add		r0, r0, r6
	mov		r8, r0
	add		r1, r6, #0x0
	add		r1, #0x88
	str		r1, [sp, #0x18]
	add		r7, r6, #0x0
	add		r7, #0x8a
	add		r2, r6, #0x0
	add		r2, #0x68
	str		r2, [sp, #0x10]
	mov		r4, #0x1d
_08039c56:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039c56
	mov		r4, #0xf4
	mov		r5, #0xc4
	ldr		r0, [r6, #0x5c]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	mov		r4, #0xe
_08039c88:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039c88
	ldr		r1, [sp, #0x18]
	ldrb	r0, [r1, #0x0]
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	mov		r0, #0x68
	str		r0, [sp, #0x0]
	mov		r0, #0x1e
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	mov		r2, #0x7c
	mov		r3, #0x24
	bl		sub_08039b44
	mov		r4, #0xe
_08039cbc:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039cbc
	mov		r4, #0x70
	mov		r5, #0x94
	ldr		r0, [r6, #0x5c]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	mov		r4, #0x1d
_08039cee:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039cee
	mov		r4, #0xf4
	mov		r5, #0xc4
	ldr		r0, [r6, #0x5c]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	mov		r4, #0xe
_08039d20:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039d20
	ldrb	r0, [r7, #0x0]
	mov		r1, #0x3
	cmp		r0, #0x0
	bne		_08039d40
	mov		r1, #0x2
_08039d40:
	mov		r0, #0x68
	str		r0, [sp, #0x0]
	mov		r0, #0x1e
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	mov		r2, #0x7c
	mov		r3, #0x6c
	bl		sub_08039b44
	ldrb	r0, [r7, #0x0]
	mov		r2, #0x2
	mov		r9, r2
	cmp		r0, #0x0
	bne		_08039d60
	mov		r0, #0x3
	mov		r9, r0
_08039d60:
	mov		r1, r9
	lsl		r0, r1, #0x2
	ldr		r2, [sp, #0x10]
	add		r0, r2, r0
	ldr		r4, [r0, #0x0]
	str		r0, [sp, #0xC]
	mov		r0, #0xc4
	sub		r0, r0, r4
	mov		r10, r0
	mov		r7, #0x0
	mov		r5, #0x1d
_08039d76:
	add		r0, r7, #0x0
	mov		r1, #0x1e
	bl		sub_080bbcac
	add		r0, r4, r0
	ldr		r1, [sp, #0xC]
	str		r0, [r1, #0x0]
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r7, r10
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08039d76
	mov		r2, r9
	lsl		r0, r2, #0x2
	ldr		r1, [sp, #0x10]
	add		r0, r1, r0
	mov		r1, #0xc4
	str		r1, [r0, #0x0]
	mov		r2, #0x0
	mov		r9, r2
	ldr		r1, [sp, #0x18]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08039db8
	mov		r2, #0x1
	mov		r9, r2
_08039db8:
	mov		r1, r9
	lsl		r0, r1, #0x2
	ldr		r2, [sp, #0x10]
	add		r1, r2, r0
	ldr		r4, [r1, #0x0]
	str		r0, [sp, #0x1C]
	mov		r10, r1
	mov		r0, #0xa4
	sub		r0, r0, r4
	mov		r9, r0
	mov		r7, #0x0
	mov		r5, #0x1d
_08039dd0:
	add		r0, r7, #0x0
	mov		r1, #0x1e
	bl		sub_080bbcac
	add		r0, r4, r0
	mov		r1, r10
	str		r0, [r1, #0x0]
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r7, r9
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08039dd0
	ldr		r2, [sp, #0x10]
	ldr		r0, [sp, #0x1C]
	add		r1, r2, r0
	mov		r0, #0xa4
	str		r0, [r1, #0x0]
	b		_08039fa2

.incbin "base.gba", 0x39E02, 0x2

_08039e04:	.4byte 0x0000FFF6

_08039e08:
	mov		r4, #0xb8
	mov		r5, #0x94
	ldr		r0, [r6, #0x5c]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	mov		r1, #0x40
	add		r1, r1, r6
	mov		r8, r1
	add		r2, r6, #0x0
	add		r2, #0x88
	str		r2, [sp, #0x18]
	add		r7, r6, #0x0
	add		r7, #0x8a
	add		r0, r6, #0x0
	add		r0, #0x78
	str		r0, [sp, #0x14]
	mov		r4, #0x1d
_08039e3a:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039e3a
	mov		r4, #0xf4
	mov		r5, #0xc4
	ldr		r0, [r6, #0x5c]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	mov		r4, #0xe
_08039e6c:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039e6c
	ldrb	r0, [r7, #0x0]
	mov		r1, #0x3
	cmp		r0, #0x0
	bne		_08039e8c
	mov		r1, #0x2
_08039e8c:
	mov		r0, #0x6e
	str		r0, [sp, #0x0]
	mov		r0, #0x1e
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	mov		r2, #0x7c
	mov		r3, #0xb4
	bl		sub_08039b44
	mov		r4, #0xe
_08039ea0:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039ea0
	mov		r4, #0x44
	mov		r5, #0x6c
	ldr		r0, [r6, #0x5c]
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	mov		r4, #0x1d
_08039ed2:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039ed2
	mov		r4, #0xf4
	mov		r5, #0xc4
	ldr		r0, [r6, #0x5c]
	mov		r1, #0x7
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x5c]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	mov		r4, #0xe
_08039f04:
	mov		r0, r8
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08039f04
	ldr		r1, [sp, #0x18]
	ldrb	r0, [r1, #0x0]
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	mov		r0, #0x14
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	mov		r2, #0x48
	mov		r3, #0x51
	bl		sub_08039a70
	mov		r2, #0xb
	add		r2, sp
	mov		r10, r2
	mov		r0, #0xa
	add		r0, sp
	mov		r9, r0
	mov		r1, #0x9
	add		r1, sp
	mov		r8, r1
	add		r7, sp, #0x8
	add		r4, r6, #0x0
	add		r4, #0x8c
	ldr		r5, [sp, #0x14]
	mov		r6, #0x3
_08039f4e:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x68
	beq		_08039f76
	cmp		r0, #0x68
	bgt		_08039f5e
	cmp		r0, #0x51
	beq		_08039f7e
	b		_08039f84
_08039f5e:
	cmp		r0, #0x6e
	beq		_08039f6e
	cmp		r0, #0x90
	bne		_08039f84
	ldrb	r0, [r4, #0x0]
	mov		r2, r10
	strb	r0, [r2, #0x0]
	b		_08039f90
_08039f6e:
	ldrb	r0, [r4, #0x0]
	mov		r1, r9
	strb	r0, [r1, #0x0]
	b		_08039f90
_08039f76:
	ldrb	r0, [r4, #0x0]
	mov		r2, r8
	strb	r0, [r2, #0x0]
	b		_08039f90
_08039f7e:
	ldrb	r0, [r4, #0x0]
	strb	r0, [r7, #0x0]
	b		_08039f90
_08039f84:
	ldr		r0, _08039fb4
	ldr		r1, _08039fb8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08039f90:
	add		r4, #0x1
	add		r5, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08039f4e
	add		r0, sp, #0x8
	mov		r1, #0x4
	bl		sub_0807caa4
_08039fa2:
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x39FB2, 0x2

_08039fb4:	.4byte 0x080d3054 @ a_kobayashi/Tournament.cpp
_08039fb8:	.4byte 0x0000029F
	thumb_func_end sub_08039bd8

	thumb_func_start sub_08039fbc
sub_08039fbc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r5, r0, #0x0
	add		r0, #0x94
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x8
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_0803a098
	add		r0, r5, #0x0
	add		r0, #0x96
	ldrb	r3, [r0, #0x0]
	str		r0, [sp, #0x2C]
	cmp		r3, #0x1
	beq		_0803a018
	cmp		r3, #0x1
	bgt		_08039fee
	cmp		r3, #0x0
	beq		_08039ff4
	b		_0803a07c
_08039fee:
	cmp		r3, #0x2
	beq		_0803a04c
	b		_0803a07c
_08039ff4:
	add		r1, r5, #0x0
	add		r1, #0x8c
	strb	r3, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x8f
	mov		r0, #0x2
	strb	r0, [r2, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x97
	ldrb	r0, [r3, #0x0]
	sub		r2, #0x2
	strb	r0, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	mov		r9, r1
	cmp		r0, #0x3
	bne		_0803a042
	add		r1, #0x2
	b		_0803a0d8
_0803a018:
	add		r1, r5, #0x0
	add		r1, #0x8c
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x8f
	mov		r0, #0x2
	strb	r0, [r2, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x97
	ldrb	r0, [r4, #0x0]
	sub		r2, #0x2
	strb	r0, [r2, #0x0]
	ldrb	r0, [r4, #0x0]
	mov		r9, r1
	cmp		r0, #0x3
	bne		_0803a042
	add		r0, r5, #0x0
	add		r0, #0x8e
	strb	r3, [r0, #0x0]
	b		_0803a154
_0803a042:
	add		r1, r5, #0x0
	add		r1, #0x8e
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	b		_0803a154
_0803a04c:
	add		r1, r5, #0x0
	add		r1, #0x8e
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x8d
	strb	r3, [r0, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x97
	ldrb	r0, [r2, #0x0]
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x3
	bne		_0803a072
	sub		r1, #0x3
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803a152
_0803a072:
	add		r1, r5, #0x0
	add		r1, #0x8c
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	b		_0803a152
_0803a07c:
	ldr		r0, _0803a090
	ldr		r1, _0803a094
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	mov		r0, #0x8c
	add		r0, r0, r5
	mov		r9, r0
	b		_0803a154

_0803a090:	.4byte 0x080d3054 @ a_kobayashi/Tournament.cpp
_0803a094:	.4byte 0x000001A3

_0803a098:
	add		r0, r5, #0x0
	add		r0, #0x96
	ldrb	r4, [r0, #0x0]
	str		r0, [sp, #0x2C]
	cmp		r4, #0x1
	beq		_0803a0de
	cmp		r4, #0x1
	bgt		_0803a0ae
	cmp		r4, #0x0
	beq		_0803a0b4
	b		_0803a142
_0803a0ae:
	cmp		r4, #0x2
	beq		_0803a110
	b		_0803a142
_0803a0b4:
	add		r1, r5, #0x0
	add		r1, #0x8c
	strb	r4, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x8f
	mov		r0, #0x3
	strb	r0, [r2, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x97
	ldrb	r0, [r3, #0x0]
	sub		r2, #0x2
	strb	r0, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	mov		r9, r1
	cmp		r0, #0x1
	beq		_0803a100
	add		r1, r5, #0x0
	add		r1, #0x8e
_0803a0d8:
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803a154
_0803a0de:
	add		r1, r5, #0x0
	add		r1, #0x8c
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x8f
	mov		r0, #0x3
	strb	r0, [r2, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x97
	ldrb	r0, [r3, #0x0]
	sub		r2, #0x2
	strb	r0, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	mov		r9, r1
	cmp		r0, #0x1
	bne		_0803a108
_0803a100:
	add		r1, #0x2
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	b		_0803a154
_0803a108:
	add		r0, r5, #0x0
	add		r0, #0x8e
	strb	r4, [r0, #0x0]
	b		_0803a154
_0803a110:
	add		r1, r5, #0x0
	add		r1, #0x8e
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	sub		r1, #0x1
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x97
	ldrb	r0, [r2, #0x0]
	add		r1, #0x2
	strb	r0, [r1, #0x0]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1
	bne		_0803a138
	add		r0, r5, #0x0
	add		r0, #0x8c
	strb	r4, [r0, #0x0]
	mov		r9, r0
	b		_0803a154
_0803a138:
	add		r1, r5, #0x0
	add		r1, #0x8c
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803a152
_0803a142:
	ldr		r0, _0803a194
	ldr		r1, _0803a198
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	mov		r1, #0x8c
	add		r1, r1, r5
_0803a152:
	mov		r9, r1
_0803a154:
	ldr		r2, [sp, #0x2C]
	ldrb	r3, [r2, #0x0]
	cmp		r3, #0x0
	bne		_0803a19c
	add		r2, r5, #0x0
	add		r2, #0x95
	ldrb	r0, [r2, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x88
	strb	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0803a172
	mov		r1, #0x1
_0803a172:
	add		r0, r5, #0x0
	add		r0, #0x89
	strb	r1, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x8a
	strb	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0803a18a
	mov		r1, #0x1
_0803a18a:
	add		r0, r5, #0x0
	add		r0, #0x8b
	strb	r1, [r0, #0x0]
	b		_0803a23a

.incbin "base.gba", 0x3A192, 0x2

_0803a194:	.4byte 0x080d3054 @ a_kobayashi/Tournament.cpp
_0803a198:	.4byte 0x000001D5

_0803a19c:
	cmp		r3, #0x1
	bne		_0803a1e6
	add		r2, r5, #0x0
	add		r2, #0x95
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x88
	mov		r4, #0x0
	strb	r1, [r0, #0x0]
	mov		r1, #0x0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0803a1b8
	mov		r1, #0x1
_0803a1b8:
	add		r0, r5, #0x0
	add		r0, #0x89
	strb	r1, [r0, #0x0]
	add		r0, #0x5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803a1d0
	add		r0, r5, #0x0
	add		r0, #0x8f
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0803a1da
_0803a1d0:
	add		r0, r5, #0x0
	add		r0, #0x8a
	strb	r4, [r0, #0x0]
	add		r0, #0x1
	b		_0803a238
_0803a1da:
	add		r0, r5, #0x0
	add		r0, #0x8a
	strb	r3, [r0, #0x0]
	add		r0, #0x1
	strb	r4, [r0, #0x0]
	b		_0803a23a
_0803a1e6:
	add		r2, r5, #0x0
	add		r2, #0x95
	ldrb	r0, [r2, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x8a
	mov		r3, #0x0
	strb	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0803a1fe
	mov		r1, #0x1
_0803a1fe:
	add		r0, r5, #0x0
	add		r0, #0x8b
	strb	r1, [r0, #0x0]
	mov		r6, r9
	ldrb	r1, [r6, #0x0]
	cmp		r1, #0x1
	beq		_0803a214
	add		r0, #0x2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0803a224
_0803a214:
	add		r0, r5, #0x0
	add		r0, #0x88
	strb	r3, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x89
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803a23a
_0803a224:
	cmp		r1, #0x2
	beq		_0803a22c
	cmp		r0, #0x1
	bne		_0803a23a
_0803a22c:
	add		r1, r5, #0x0
	add		r1, #0x88
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x89
_0803a238:
	strb	r3, [r0, #0x0]
_0803a23a:
	add		r7, r5, #0x0
	add		r7, #0x54
	str		r7, [sp, #0x20]
	mov		r0, #0x91
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	mov		r1, #0x4
	stmia	r0!, {  r1 }
	add		r7, r0, #0x0
	add		r4, r7, #0x0
	mov		r6, #0x3
	mov		r0, sp
	add		r0, #0x10
	str		r0, [sp, #0x30]
	add		r1, r5, #0x0
	add		r1, #0x68
	str		r1, [sp, #0x24]
	add		r2, r5, #0x0
	add		r2, #0x78
	str		r2, [sp, #0x28]
	mov		r0, #0x0
	mov		r10, r0
	mov		r1, #0x1
	neg		r1, r1
	mov		r8, r1
_0803a26e:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r2, r10
	str		r2, [r4, #0x6c]
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, r8
	bne		_0803a26e
	ldr		r6, [sp, #0x20]
	str		r7, [r6, #0x0]
	mov		r7, #0x0
	mov		r8, r7
	ldr		r0, [sp, #0x30]
	mov		r10, r0
	ldr		r4, [sp, #0x28]
	ldr		r1, [sp, #0x24]
	str		r1, [sp, #0x38]
	mov		r3, #0x0
_0803a29c:
	mov		r1, sp
	ldr		r0, _0803a318
	ldmia	r0!, { r2, r6, r7 }
	stmia	r1!, {  r2, r6, r7 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, r10
	ldr		r0, _0803a31c
	ldmia	r0!, { r2, r6, r7 }
	stmia	r1!, {  r2, r6, r7 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r5, #0x54]
	add		r0, r0, r3
	mov		r2, r9
	ldrb	r1, [r2, #0x0]
	lsl		r1, r1, #0x2
	add		r1, sp
	ldr		r1, [r1, #0x0]
	str		r3, [sp, #0x34]
	bl		sub_0808e03c
	ldr		r0, [r5, #0x54]
	ldr		r3, [sp, #0x34]
	add		r0, r0, r3
	mov		r6, r9
	ldrb	r1, [r6, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r10
	ldr		r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x54]
	ldr		r3, [sp, #0x34]
	add		r0, r3, r0
	add		r0, #0x69
	mov		r7, #0x0
	strb	r7, [r0, #0x0]
	ldr		r0, [r5, #0x54]
	add		r0, r3, r0
	add		r0, #0x5c
	mov		r1, #0x64
	neg		r1, r1
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x54]
	add		r0, r3, r0
	add		r0, #0x70
	str		r3, [sp, #0x34]
	bl		sub_0808b3d4
	mov		r0, r8
	mov		r2, #0x1
	and		r0, r2
	ldr		r3, [sp, #0x34]
	cmp		r0, #0x0
	beq		_0803a320
	mov		r6, #0x10
	neg		r6, r6
	ldr		r7, [sp, #0x38]
	str		r6, [r7, #0x0]
	b		_0803a328

_0803a318:	.4byte 0x080d30a4
_0803a31c:	.4byte 0x080d30b4

_0803a320:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	ldr		r1, [sp, #0x38]
	str		r0, [r1, #0x0]
_0803a328:
	ldr		r2, [sp, #0x2C]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0803a336
	mov		r6, #0x90
	str		r6, [r4, #0x0]
	b		_0803a346
_0803a336:
	mov		r7, r8
	cmp		r7, #0x1
	bgt		_0803a342
	mov		r0, #0x68
	str		r0, [r4, #0x0]
	b		_0803a346
_0803a342:
	mov		r1, #0x90
	str		r1, [r4, #0x0]
_0803a346:
	add		r4, #0x4
	ldr		r2, [sp, #0x38]
	add		r2, #0x4
	str		r2, [sp, #0x38]
	mov		r6, #0x1
	add		r9, r6
	add		r3, #0x90
	add		r8, r6
	mov		r7, r8
	cmp		r7, #0x3
	ble		_0803a29c
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3A36C, 0x28
	thumb_func_end sub_08039fbc

	thumb_func_start sub_0803a394
sub_0803a394:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	ldr		r0, [r4, #0x5c]
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x5c]
	add		r0, #0x54
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0x5c]
	add		r0, #0x56
	strh	r6, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3A3B6, 0x2
	thumb_func_end sub_0803a394

	thumb_func_start sub_0803a3b8
sub_0803a3b8:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0803a530
	str		r0, [r7, #0xc]
	bl		sub_080706ac
	str		r0, [r7, #0x64]
	ldr		r4, _0803a534
	ldr		r0, _0803a538
	add		r5, r4, r0
	add		r0, r5, #0x0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x0
	mov		r2, #0x1
	bl		sub_0803b428
	add		r1, r0, #0x0
	str		r1, [r7, #0x50]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r5, #0x0
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0803c270
	add		r1, r0, #0x0
	str		r1, [r7, #0x54]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r5, #0x0
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0803c270
	add		r1, r0, #0x0
	str		r1, [r7, #0x58]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r5, #0x0
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x2
	mov		r2, #0x3
	bl		sub_0803c270
	add		r1, r0, #0x0
	str		r1, [r7, #0x5c]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, [r7, #0x54]
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x50]
	str		r0, [r7, #0x44]
	ldr		r0, [r7, #0x58]
	str		r0, [r7, #0x48]
	ldr		r0, [r7, #0x5c]
	str		r0, [r7, #0x4c]
	sub		r4, #0xf0
	add		r0, r5, #0x0
	ldr		r1, _0803a53c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	mov		r3, #0x80
	lsl		r3, r3, #0x9
	mov		r2, #0xa0
	lsl		r2, r2, #0x8
	str		r2, [sp, #0x0]
	mov		r2, #0xb4
	bl		sub_0802a3cc
	add		r1, r0, #0x0
	str		r1, [r7, #0x60]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _0803a540
	ldr		r0, [r0, #0x0]
	mov		r1, #0x96
	lsl		r1, r1, #0xc
	ldr		r2, _0803a544
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	mov		r0, #0x0
	str		r0, [r7, #0x68]
	str		r0, [r7, #0x6c]
	add		r1, r7, #0x0
	add		r1, #0x78
	strb	r0, [r1, #0x0]
	ldr		r0, _0803a548
	ldr		r2, [r0, #0x0]
	ldr		r5, _0803a54c
	ldr		r0, _0803a550
	add		r4, r0, #0x0
	mov		r3, #0xff
_0803a4be:
	ldrh	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	orr		r0, r4
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0803a4be
	ldr		r4, _0803a554
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_08008a04
	ldr		r0, [r0, #0x18]
	add		r0, #0xa
	ldr		r1, _0803a558
	ldr		r1, [r1, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x5
	ldr		r6, _0803a55c
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_08000a2c
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_08008a04
	ldr		r0, [r0, #0x18]
	add		r0, #0xa
	ldr		r1, _0803a560
	ldr		r1, [r1, #0x0]
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_08000a2c
	ldr		r0, [r7, #0x64]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x0
	str		r0, [r7, #0x70]
	str		r0, [r7, #0x74]
	add		r0, r7, #0x0
	bl		sub_0803a904
	mov		r0, #0x1
	str		r0, [r7, #0x74]
	add		r0, r7, #0x0
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3A52E, 0x2

_0803a530:	.4byte 0x080e16dc
_0803a534:	.4byte 0x0200DB50
_0803a538:	.4byte 0xFFFFFEB0
_0803a53c:	.4byte 0x00003B08
_0803a540:	.4byte 0x0200D528
_0803a544:	.4byte 0x000005F4
_0803a548:	.4byte 0x0200CE50
_0803a54c:	.4byte 0x00000FFF
_0803a550:	.4byte 0xFFFF8000
_0803a554:	.4byte 0x02008AD4
_0803a558:	.4byte 0x0200CE54
_0803a55c:	.4byte 0x80000003
_0803a560:	.4byte 0x0200CE58
	thumb_func_end sub_0803a3b8

	thumb_func_start sub_0803a564
sub_0803a564:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, [r5, #0x64]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r6, _0803a588
	cmp		r4, r6
	beq		_0803a5e8
	cmp		r4, r6
	bgt		_0803a590
	ldr		r0, _0803a58c
	cmp		r4, r0
	beq		_0803a5c6
	b		_0803a610

_0803a588:	.4byte 0xFFFF8001
_0803a58c:	.4byte 0xFFFF8000

_0803a590:
	cmp		r4, #0x0
	bne		_0803a610
	ldr		r0, _0803a5ac
	ldr		r4, [r0, #0x0]
	ldr		r0, _0803a5b0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0803a5b8
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803a5b4
	b		_0803a5be

.incbin "base.gba", 0x3A5AA, 0x2

_0803a5ac:	.4byte 0x0200D530
_0803a5b0:	.4byte 0x00000282
_0803a5b4:	.4byte 0xFFFF8000

_0803a5b8:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	add		r2, r6, #0x0
_0803a5be:
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803a610
_0803a5c6:
	add		r6, r5, #0x0
	add		r6, #0x40
	mov		r4, #0x3
_0803a5cc:
	ldmia	r6!, { r0 }
	bl		sub_0803b3b8
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803a5cc
	mov		r4, #0x1d
_0803a5da:
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803a5da
	b		_0803a610
_0803a5e8:
	ldr		r1, _0803a64c
	ldr		r0, [r1, #0x0]
	ldr		r2, _0803a650
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	beq		_0803a60a
	add		r4, r1, #0x0
_0803a5f8:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	ldr		r1, _0803a650
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_0803a5f8
_0803a60a:
	add		r0, r5, #0x0
	bl		sub_0803abac
_0803a610:
	add		r0, r5, #0x0
	bl		sub_0803a654
	ldr		r0, [r5, #0x64]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	add		r0, r5, #0x0
	bl		sub_0803a83c
	ldr		r0, [r5, #0x64]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r5, #0x70]
	cmp		r0, #0x0
	bne		_0803a640
	add		r0, r5, #0x0
	bl		sub_0803a904
_0803a640:
	add		r0, r5, #0x0
	bl		sub_0803abac
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803a64c:	.4byte 0x0200D518
_0803a650:	.4byte 0x00000101
	thumb_func_end sub_0803a564

	thumb_func_start sub_0803a654
sub_0803a654:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r1, _0803a680
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803a678
	add		r4, r1, #0x0
_0803a666:
	add		r0, r5, #0x0
	bl		sub_0803b028
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0803a666
_0803a678:
	mov		r4, #0x0
	add		r6, r5, #0x0
	add		r6, #0x40
	b		_0803a686

_0803a680:	.4byte 0x0200D530

_0803a684:
	add		r4, #0x1
_0803a686:
	cmp		r4, #0x3b
	bgt		_0803a69c
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803a684
_0803a69c:
	ldr		r0, _0803a704
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	ldr		r2, _0803a708
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	ldr		r0, _0803a70c
	ldr		r0, [r0, #0x0]
	add		r2, #0xa8
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	mov		r4, #0x3
_0803a6b4:
	ldmia	r6!, { r0 }
	bl		sub_0803c9cc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803a6b4
	ldr		r4, _0803a710
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803a714
	mov		r3, #0x1
	bl		sub_080b7724
	ldr		r0, [r4, #0x0]
	ldr		r1, _0803a718
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0803a75a
	mov		r2, #0x1
	mov		r8, r2
	add		r7, r4, #0x0
_0803a6e0:
	cmp		r0, #0x3
	bne		_0803a71c
	add		r6, r5, #0x0
	add		r6, #0x54
	mov		r4, #0x2
_0803a6ea:
	ldmia	r6!, { r0 }
	add		r0, #0x58
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803a6ea
	add		r0, r5, #0x0
	bl		sub_0803a788
	b		_0803a748

_0803a704:	.4byte 0x0200D520
_0803a708:	.4byte 0x0000057C
_0803a70c:	.4byte 0x0200D528
_0803a710:	.4byte 0x0200D518
_0803a714:	.4byte 0xFFFF8000
_0803a718:	.4byte 0x00000101

_0803a71c:
	cmp		r0, #0x5
	bne		_0803a748
	add		r6, r5, #0x0
	add		r6, #0x54
	mov		r4, #0x2
_0803a726:
	ldmia	r6!, { r0 }
	add		r0, #0x58
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803a726
	mov		r0, r8
	str		r0, [r5, #0x70]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803a778
	mov		r3, #0x0
	bl		sub_080b7724
_0803a748:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x0]
	ldr		r1, _0803a77c
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0803a6e0
_0803a75a:
	ldr		r0, _0803a780
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803a784
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x77
	bl		sub_0808f690
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803a778:	.4byte 0xFFFF8001
_0803a77c:	.4byte 0x00000101
_0803a780:	.4byte 0x0200D520
_0803a784:	.4byte 0xFFFF8000
	thumb_func_end sub_0803a654

	thumb_func_start sub_0803a788
sub_0803a788:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r1, _0803a828
	ldr		r0, [r1, #0x0]
	ldr		r2, _0803a82c
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldr		r6, _0803a830
	cmp		r0, #0x6
	beq		_0803a7b0
	add		r4, r1, #0x0
_0803a79e:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	ldr		r1, _0803a82c
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_0803a79e
_0803a7b0:
	ldr		r4, [r6, #0x0]
	ldr		r2, _0803a834
	add		r0, r4, r2
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x6
	mov		r2, #0x3f
	mov		r3, #0xf
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0xe
_0803a7d6:
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803a7d6
	ldr		r4, [r6, #0x0]
	ldr		r1, _0803a834
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x5
	mov		r2, #0x3f
	mov		r3, #0xf
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, [r5, #0x50]
	mov		r2, #0x88
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	bgt		_0803a820
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803a838
	mov		r3, #0x0
	bl		sub_080b7724
_0803a820:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3A826, 0x2

_0803a828:	.4byte 0x0200D518
_0803a82c:	.4byte 0x00000101
_0803a830:	.4byte 0x080d30fc
_0803a834:	.4byte 0xFFFFFEB0
_0803a838:	.4byte 0xFFFF8000
	thumb_func_end sub_0803a788

	thumb_func_start sub_0803a83c
sub_0803a83c:
	push	{ r4, r5, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	mov		r0, #0x1
	mov		r1, #0x20
	bl		sub_0808f5cc
	ldr		r0, [r4, #0x50]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803a8d8
	mov		r5, #0x1
_0803a85a:
	ldr		r0, [r4, #0x64]
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x0
	beq		_0803a868
	cmp		r0, #0x1
	beq		_0803a8be
	b		_0803a8c4
_0803a868:
	add		r0, r4, #0x0
	bl		sub_0803b028
	ldr		r0, [r4, #0x64]
	ldr		r1, [r0, #0x5c]
	cmp		r1, #0x1
	beq		_0803a8b4
	cmp		r1, #0x1
	blt		_0803a8be
	cmp		r1, #0x5
	bgt		_0803a8be
	str		r5, [r4, #0x70]
	ldr		r4, [r4, #0x50]
	add		r4, #0xe8
	add		r0, sp, #0x4
	ldr		r1, _0803a8b0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r1, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r4, #0x0
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	b		_0803a8fc

.incbin "base.gba", 0x3A8AE, 0x2

_0803a8b0:	.4byte 0x080d30f8

_0803a8b4:
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_0803a8be:
	add		r0, r4, #0x0
	bl		sub_0803b028
_0803a8c4:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x50]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803a85a
_0803a8d8:
	ldr		r0, [r4, #0x64]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803a8f2
_0803a8e6:
	add		r0, r4, #0x0
	bl		sub_0803b028
	add		r0, r4, #0x0
	bl		sub_080b7690
_0803a8f2:
	ldr		r0, [r4, #0x50]
	add		r0, #0xf6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x7
	bne		_0803a8e6
_0803a8fc:
	add		sp, #0x8
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803a83c

	thumb_func_start sub_0803a904
sub_0803a904:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x5c
	str		r0, [sp, #0x34]
	add		r4, sp, #0x18
	ldr		r1, [r0, #0x50]
	add		r1, #0xe8
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r0, #0x1b
	ldr		r2, [sp, #0x34]
	ldr		r1, [r2, #0x54]
	add		r1, #0xe8
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r0, #0x1e
	ldr		r3, [sp, #0x34]
	ldr		r1, [r3, #0x58]
	add		r1, #0xe8
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r0, #0x21
	ldr		r5, [sp, #0x34]
	ldr		r1, [r5, #0x5c]
	add		r1, #0xe8
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, sp, #0xc
	add		r1, r4, #0x0
	mov		r2, #0xc
	bl		sub_0808c818
	add		r2, sp, #0x24
	add		r1, r2, #0x0
	ldr		r0, _0803aa7c
	ldmia	r0!, { r3, r5, r6 }
	stmia	r1!, {  r3, r5, r6 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r6, #0x0
	str		r6, [sp, #0x38]
	mov		r0, sp
	add		r0, #0xe
	str		r0, [sp, #0x58]
	mov		r1, sp
	add		r1, #0xd
	str		r1, [sp, #0x54]
_0803a978:
	ldr		r2, [sp, #0x38]
	add		r2, #0x1
	mov		r9, r2
	mov		r10, r9
	cmp		r2, #0x3
	ble		_0803a986
	b		_0803aaf8
_0803a986:
	ldr		r3, [sp, #0x38]
	lsl		r3, r3, #0x1
	str		r3, [sp, #0x3C]
	ldr		r5, [sp, #0x38]
	add		r5, r3, r5
	str		r5, [sp, #0x40]
	add		r7, r5, #0x0
	add		r7, sp
	add		r7, #0xc
	add		r6, sp, #0x18
	mov		r0, sp
	add		r0, #0x1a
	str		r0, [sp, #0x44]
	mov		r1, sp
	add		r1, #0x19
	str		r1, [sp, #0x48]
	ldr		r2, [sp, #0x38]
	lsl		r0, r2, #0x2
	mov		r3, sp
	add		r3, r3, r0
	add		r3, #0x24
	str		r3, [sp, #0x4C]
	add		r0, sp
	add		r0, #0x24
	str		r0, [sp, #0x50]
	mov		r5, r9
	lsl		r0, r5, #0x1
	add		r0, r9
	add		r5, r0, #0x0
	add		r5, sp
	add		r5, #0xc
	mov		r1, r9
	lsl		r0, r1, #0x2
	add		r0, sp
	add		r0, #0x24
	mov		r8, r0
_0803a9ce:
	mov		r4, #0x0
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r1, #0x2
	ldrsb	r1, [r7, r1]
	ldr		r2, [sp, #0x44]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0803aa16
	cmp		r1, r0
	bgt		_0803aa48
	mov		r1, #0x1
	ldrsb	r1, [r7, r1]
	ldr		r3, [sp, #0x48]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	blt		_0803aa16
	cmp		r1, r0
	bgt		_0803aa48
	mov		r1, #0x0
	ldrsb	r1, [r7, r1]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	mov		r2, #0x0
	cmp		r1, r0
	blt		_0803aa16
	cmp		r1, r0
	ble		_0803aa12
	mov		r2, #0x1
_0803aa12:
	cmp		r2, #0x0
	bne		_0803aa48
_0803aa16:
	ldr		r0, [sp, #0x3C]
	ldr		r1, [sp, #0x38]
	add		r3, r0, r1
	ldr		r2, [sp, #0x58]
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0803aa4a
	ldr		r2, [sp, #0x54]
	add		r0, r2, r3
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	cmp		r2, r1
	bne		_0803aa4a
	mov		r0, sp
	add		r0, r0, r3
	add		r0, #0xc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r2
	bne		_0803aa4a
_0803aa48:
	mov		r4, #0x1
_0803aa4a:
	cmp		r4, #0x0
	beq		_0803aa80
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r3, [sp, #0x4C]
	ldr		r1, [r3, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	str		r1, [r2, #0x0]
	b		_0803aae6

.incbin "base.gba", 0x3AA7A, 0x2

_0803aa7c:	.4byte 0x080d3100

_0803aa80:
	ldr		r4, [sp, #0x40]
	add		r4, sp
	add		r4, #0xc
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r2, #0x0
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r1, r0
	bne		_0803aabc
	mov		r1, #0x1
	ldrsb	r1, [r4, r1]
	ldr		r3, [sp, #0x48]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_0803aabc
	mov		r1, #0x2
	ldrsb	r1, [r4, r1]
	ldr		r3, [sp, #0x44]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_0803aabc
	mov		r2, #0x1
_0803aabc:
	cmp		r2, #0x0
	beq		_0803aae6
	ldr		r1, [sp, #0x50]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0803aad6
	add		r0, r5, #0x0
	mov		r1, #0x1
	neg		r1, r1
	mov		r2, #0x4
	bl		sub_0802d230
	b		_0803aae6
_0803aad6:
	ldr		r0, [sp, #0x40]
	add		r0, sp
	add		r0, #0xc
	mov		r1, #0x1
	neg		r1, r1
	mov		r2, #0x4
	bl		sub_0802d230
_0803aae6:
	add		r5, #0x3
	mov		r2, #0x4
	add		r8, r2
	mov		r3, #0x1
	add		r10, r3
	mov		r0, r10
	cmp		r0, #0x3
	bgt		_0803aaf8
	b		_0803a9ce
_0803aaf8:
	mov		r1, r9
	str		r1, [sp, #0x38]
	cmp		r1, #0x2
	bgt		_0803ab02
	b		_0803a978
_0803ab02:
	mov		r2, #0x1
	neg		r2, r2
	mov		r9, r2
	mov		r5, #0x0
	add		r4, sp, #0x24
	add		r3, sp, #0xc
	mov		r8, r3
	ldr		r7, [sp, #0x54]
	ldr		r6, [sp, #0x58]
_0803ab14:
	ldr		r2, [r4, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	str		r0, [sp, #0x4]
	mov		r1, r8
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	str		r0, [sp, #0x8]
	ldr		r0, _0803ab74
	add		r1, r5, #0x0
	mov		r3, #0x0
	bl		sub_08006500
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0803ab3c
	mov		r9, r5
_0803ab3c:
	add		r4, #0x4
	mov		r2, #0x3
	add		r8, r2
	add		r7, #0x3
	add		r6, #0x3
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0803ab14
	mov		r0, #0x1
	neg		r0, r0
	cmp		r9, r0
	bne		_0803ab60
	ldr		r0, _0803ab78
	ldr		r1, _0803ab7c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0803ab60:
	ldr		r3, [sp, #0x34]
	ldr		r0, [r3, #0x74]
	cmp		r0, #0x0
	beq		_0803ab84
	ldr		r0, _0803ab74
	ldr		r2, _0803ab80
	mov		r1, r9
	bl		sub_0800614c
	b		_0803ab8e

_0803ab74:	.4byte 0x02000C9C
_0803ab78:	.4byte 0x080d3110 @ a_kobayashi/minigame/mg_Dash.cpp
_0803ab7c:	.4byte 0x0000017D
_0803ab80:	.4byte 0x080d3132

_0803ab84:
	ldr		r0, _0803aba0
	ldr		r1, _0803aba4
	ldr		r2, _0803aba8
	bl		sub_0800614c
_0803ab8e:
	add		sp, #0x5c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3AB9E, 0x2

_0803aba0:	.4byte 0x02000C9C
_0803aba4:	.4byte 0x80808080
_0803aba8:	.4byte 0x080d313a
	thumb_func_end sub_0803a904

	thumb_func_start sub_0803abac
sub_0803abac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x110
	str		r0, [sp, #0xC0]
	mov		r0, sp
	add		r0, #0x14
	str		r0, [sp, #0xE8]
	add		r1, sp, #0x18
	mov		r10, r1
	mov		r2, sp
	add		r2, #0x1a
	str		r2, [sp, #0xF0]
	mov		r3, sp
	add		r3, #0x19
	str		r3, [sp, #0xEC]
	mov		r4, sp
	add		r4, #0x1b
	str		r4, [sp, #0xF4]
	add		r0, #0xc
	str		r0, [sp, #0xF8]
	mov		r1, sp
	add		r1, #0x30
	str		r1, [sp, #0xFC]
	add		r2, #0x17
	str		r2, [sp, #0x100]
	add		r3, #0x19
	str		r3, [sp, #0x104]
	add		r4, #0x25
	str		r4, [sp, #0x108]
	mov		r4, #0x1d
_0803abee:
	ldr		r0, [sp, #0xC0]
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803abee
	ldr		r4, _0803ad3c
	ldr		r1, _0803ad40
	add		r0, r4, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	bl		sub_080300ac
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _0803ad44
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0xC4]
	ldr		r2, [sp, #0xC0]
	ldr		r0, [r2, #0x70]
	cmp		r0, #0x0
	beq		_0803ac5e
	ldr		r0, [r2, #0x50]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803ad48
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r3, [sp, #0xC0]
	ldr		r0, [r3, #0x54]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803ad48
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r4, [sp, #0xC0]
	ldr		r0, [r4, #0x58]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803ad48
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r4, #0x5c]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803ad48
	mov		r3, #0x0
	bl		sub_080b7724
_0803ac5e:
	add		r0, sp, #0x4
	ldr		r1, _0803ad4c
	ldmia	r1!, { r2, r3, r4 }
	stmia	r0!, {  r2, r3, r4 }
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0xC8]
	ldr		r7, [sp, #0xC0]
	add		r7, #0x40
_0803ac72:
	ldr		r1, [sp, #0xC8]
	add		r1, #0x1
	str		r1, [sp, #0x10C]
	mov		r9, r1
	cmp		r1, #0x3
	ble		_0803ac80
	b		_0803ae08
_0803ac80:
	ldr		r2, [sp, #0xC8]
	lsl		r0, r2, #0x2
	add		r0, sp
	add		r0, #0x4
	str		r0, [sp, #0xD0]
	str		r7, [sp, #0xD4]
	ldr		r6, [sp, #0xE8]
	mov		r3, sp
	add		r3, #0x16
	str		r3, [sp, #0xD8]
	mov		r4, sp
	add		r4, #0x15
	str		r4, [sp, #0xDC]
	mov		r0, sp
	add		r0, #0x1e
	str		r0, [sp, #0xE0]
	mov		r1, sp
	add		r1, #0x1d
	str		r1, [sp, #0xE4]
	ldr		r2, [sp, #0x10C]
	lsl		r0, r2, #0x2
	add		r5, r0, #0x0
	add		r5, sp
	add		r5, #0x4
_0803acb0:
	mov		r3, #0x0
	str		r3, [sp, #0xCC]
	ldr		r4, [sp, #0xC0]
	ldr		r0, [r4, #0x70]
	cmp		r0, #0x0
	bne		_0803ad50
	ldr		r1, [sp, #0xD0]
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	ldr		r2, [sp, #0xD4]
	add		r0, r2, r0
	ldr		r1, [r0, #0x0]
	add		r1, #0xe8
	add		r0, sp, #0x14
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r6, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	ldr		r3, [sp, #0xD4]
	add		r0, r3, r0
	ldr		r1, [r0, #0x0]
	add		r1, #0xe8
	mov		r0, r10
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r4, [sp, #0xD8]
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r2, [sp, #0xF0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	ldr		r3, [sp, #0xC8]
	lsl		r3, r3, #0x2
	mov		r8, r3
	cmp		r1, r0
	blt		_0803ade6
	cmp		r1, r0
	bgt		_0803adec
	ldr		r4, [sp, #0xDC]
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r2, [sp, #0xEC]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0803ade6
	cmp		r1, r0
	bgt		_0803adec
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	mov		r3, r10
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	mov		r2, #0x0
	cmp		r1, r0
	blt		_0803ade6
	cmp		r1, r0
	ble		_0803ad34
	mov		r2, #0x1
_0803ad34:
	cmp		r2, #0x0
	beq		_0803ade6
	b		_0803adec

.incbin "base.gba", 0x3AD3A, 0x2

_0803ad3c:	.4byte 0x0200DB40
_0803ad40:	.4byte 0xFFFFFEC0
_0803ad44:	.4byte 0x0200D534
_0803ad48:	.4byte 0xFFFF8009
_0803ad4c:	.4byte 0x080d3144

_0803ad50:
	ldr		r4, [sp, #0xD0]
	ldr		r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	ldr		r2, [sp, #0xC8]
	lsl		r2, r2, #0x2
	mov		r8, r2
	cmp		r0, #0x0
	beq		_0803adec
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803ade6
	add		r1, #0xe8
	add		r0, sp, #0x14
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r6, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r4, sp, #0x1c
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r1, [r0, #0x0]
	add		r1, #0xe8
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r3, [sp, #0xD8]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r2, [sp, #0xE0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0803ade6
	cmp		r1, r0
	bgt		_0803ade2
	ldr		r3, [sp, #0xDC]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r2, [sp, #0xE4]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0803ade6
	cmp		r1, r0
	bgt		_0803ade2
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	mov		r2, #0x0
	cmp		r1, r0
	blt		_0803ade6
	cmp		r1, r0
	ble		_0803adde
	mov		r2, #0x1
_0803adde:
	cmp		r2, #0x0
	beq		_0803ade6
_0803ade2:
	mov		r3, #0x1
	str		r3, [sp, #0xCC]
_0803ade6:
	ldr		r4, [sp, #0xCC]
	cmp		r4, #0x0
	beq		_0803adfa
_0803adec:
	mov		r0, sp
	add		r0, r8
	add		r0, #0x4
	ldr		r2, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	str		r1, [r0, #0x0]
	str		r2, [r5, #0x0]
_0803adfa:
	add		r5, #0x4
	mov		r0, #0x1
	add		r9, r0
	mov		r1, r9
	cmp		r1, #0x3
	bgt		_0803ae08
	b		_0803acb0
_0803ae08:
	ldr		r2, [sp, #0x10C]
	str		r2, [sp, #0xC8]
	cmp		r2, #0x2
	bgt		_0803ae12
	b		_0803ac72
_0803ae12:
	ldr		r0, _0803b00c
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	ldr		r0, [sp, #0x4]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	mov		r3, r10
	strb	r0, [r3, #0x0]
	ldr		r0, [sp, #0x8]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	ldr		r4, [sp, #0xEC]
	strb	r0, [r4, #0x0]
	ldr		r0, [sp, #0xC]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	ldr		r1, [sp, #0xF0]
	strb	r0, [r1, #0x0]
	ldr		r0, [sp, #0x10]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	ldr		r2, [sp, #0xF4]
	strb	r0, [r2, #0x0]
	ldr		r0, [sp, #0xE8]
	mov		r1, r10
	mov		r2, #0x4
	bl		sub_0808c818
	ldr		r0, [sp, #0x4]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	bl		sub_0803c990
	str		r0, [sp, #0x30]
	ldr		r0, [sp, #0x8]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	bl		sub_0803c990
	str		r0, [sp, #0x34]
	ldr		r0, [sp, #0xC]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	bl		sub_0803c990
	str		r0, [sp, #0x38]
	ldr		r0, [sp, #0x10]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	bl		sub_0803c990
	str		r0, [sp, #0x3C]
	ldr		r0, [sp, #0xF8]
	ldr		r1, [sp, #0xFC]
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r4, [sp, #0xFC]
	ldr		r6, [sp, #0x108]
	add		r5, sp, #0x4
	mov		r3, #0x3
	mov		r8, r3
_0803aeae:
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r1, [r0, #0x0]
	add		r1, #0xe8
	mov		r0, r10
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x1
	beq		_0803af14
	ldr		r0, [sp, #0xC0]
	ldr		r1, [r0, #0x44]
	add		r1, #0xe8
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r2, #0x0
	mov		r3, r10
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r1, r0
	bne		_0803af06
	ldr		r0, [sp, #0xEC]
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r3, [sp, #0x100]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_0803af06
	ldr		r0, [sp, #0xF0]
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r3, [sp, #0x104]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_0803af06
	mov		r2, #0x1
_0803af06:
	cmp		r2, #0x0
	beq		_0803af14
	mov		r0, r10
	mov		r1, #0x1
	mov		r2, #0x4
	bl		sub_0802d230
_0803af14:
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803af54
	ldr		r1, [sp, #0xC0]
	ldr		r0, [r1, #0x70]
	cmp		r0, #0x0
	beq		_0803af54
	add		r0, sp, #0x34
	ldr		r1, _0803b010
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, sp, #0x30
	add		r1, sp, #0x34
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, r10
	add		r1, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
_0803af54:
	add		r0, r4, #0x0
	mov		r1, r10
	mov		r2, #0x3
	bl		sub_0808c818
	ldrb	r1, [r4, #0x0]
	ldr		r2, [sp, #0x100]
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x8
	orr		r0, r1
	ldr		r3, [sp, #0x104]
	ldrb	r1, [r3, #0x0]
	lsl		r1, r1, #0x10
	orr		r1, r0
	ldr		r0, _0803b014
	and		r1, r0
	mov		r0, r9
	add		r2, r6, #0x0
	bl		sub_0802cfe8
	add		r6, #0x20
	add		r5, #0x4
	mov		r1, #0x1
	neg		r1, r1
	add		r8, r1
	mov		r2, r8
	cmp		r2, #0x0
	bge		_0803aeae
	mov		r0, #0x4
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0xC4]
	ldr		r1, [sp, #0xF8]
	ldr		r2, [sp, #0xE8]
	ldr		r3, [sp, #0x108]
	bl		sub_08033028
	mov		r1, #0x0
	ldr		r0, _0803b018
	add		r0, r9
	str		r1, [r0, #0x0]
	ldr		r0, _0803b01c
	ldr		r0, [r0, #0x0]
	ldr		r3, _0803b020
	add		r0, r0, r3
	str		r1, [r0, #0x0]
	ldr		r1, _0803b024
	ldr		r0, [r1, #0x0]
	mov		r4, #0xf6
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803afd4
	add		r4, r1, #0x0
_0803afc0:
	ldr		r0, [sp, #0xC0]
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	mov		r1, #0xf6
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803afc0
_0803afd4:
	mov		r3, #0x0
	add		r2, r7, #0x0
	mov		r1, #0x3
_0803afda:
	ldmia	r2!, { r0 }
	add		r0, #0xfc
	str		r3, [r0, #0x0]
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0803afda
	ldr		r1, _0803b024
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803affc
	add		r4, r1, #0x0
_0803aff0:
	ldr		r0, [sp, #0xC0]
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0803aff0
_0803affc:
	add		sp, #0x110
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803b00c:	.4byte 0x0200D520
_0803b010:	.4byte 0x080d30f8
_0803b014:	.4byte 0x00FFFFFF
_0803b018:	.4byte 0x0000057C
_0803b01c:	.4byte 0x0200D528
_0803b020:	.4byte 0x00000624
_0803b024:	.4byte 0x0200D534
	thumb_func_end sub_0803abac

	thumb_func_start sub_0803b028
sub_0803b028:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x50]
	add		r1, r0, #0x0
	add		r1, #0xec
	ldr		r1, [r1, #0x0]
	mov		r6, #0x0
	add		r0, #0xf0
	ldrh	r3, [r0, #0x0]
	ldr		r2, [r5, #0x6c]
	mov		r4, #0xc0
	lsl		r4, r4, #0x6
	add		r0, r2, r4
	cmp		r0, r1
	bge		_0803b04c
	sub		r6, r1, r0
	b		_0803b060
_0803b04c:
	cmp		r2, r1
	bge		_0803b060
	cmp		r3, #0x0
	bne		_0803b060
	mov		r6, #0x40
	add		r0, r2, #0x0
	add		r0, #0x40
	cmp		r0, r1
	ble		_0803b060
	sub		r6, r1, r2
_0803b060:
	mov		r0, #0xa0
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803b074
	ldr		r1, _0803b070
	mov		r0, #0x40
	strh	r0, [r1, #0x0]
	b		_0803b092

_0803b070:	.4byte 0x04000016

_0803b074:
	ldr		r0, [r5, #0x60]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	mov		r4, sp
	add		r4, #0x6
	str		r4, [sp, #0x0]
	mov		r1, #0x0
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldr		r2, _0803b104
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x28
	sub		r0, r0, r1
	strh	r0, [r2, #0x0]
_0803b092:
	cmp		r6, #0x0
	beq		_0803b0a0
	ldr		r0, [r5, #0x60]
	mov		r1, #0x0
	add		r2, r6, #0x0
	bl		sub_0802abe4
_0803b0a0:
	ldr		r0, [r5, #0x6c]
	str		r0, [r5, #0x68]
	add		r2, r0, r6
	str		r2, [r5, #0x6c]
	add		r3, r5, #0x0
	add		r3, #0x78
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x1
	beq		_0803b124
	cmp		r0, #0x1
	bgt		_0803b152
	cmp		r0, #0x0
	bne		_0803b152
	mov		r0, #0xa0
	lsl		r0, r0, #0x8
	cmp		r2, r0
	ble		_0803b152
	mov		r0, #0x1
	strb	r0, [r3, #0x0]
	ldr		r3, _0803b108
	ldrh	r0, [r3, #0x0]
	ldr		r2, _0803b10c
	and		r2, r0
	ldr		r0, _0803b110
	ldr		r1, [r0, #0x0]
	mov		r5, #0xfa
	lsl		r5, r5, #0x18
	add		r0, r1, r5
	cmp		r0, #0x0
	bge		_0803b0e0
	ldr		r4, _0803b114
	add		r0, r1, r4
_0803b0e0:
	asr		r0, r0, #0xb
	lsl		r0, r0, #0x8
	orr		r0, r2
	strh	r0, [r3, #0x0]
	ldr		r0, _0803b118
	mov		r1, #0x3
	bl		sub_08008a04
	ldr		r0, [r0, #0x18]
	add		r0, #0xa
	ldr		r1, _0803b11c
	ldr		r1, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	ldr		r3, _0803b120
	bl		sub_08000a2c
	b		_0803b152

_0803b104:	.4byte 0x04000016
_0803b108:	.4byte 0x0400000C
_0803b10c:	.4byte 0x0000E0FF
_0803b110:	.4byte 0x0200CE58
_0803b114:	.4byte 0xFA0007FF
_0803b118:	.4byte 0x02008AD4
_0803b11c:	.4byte 0x0200CE54
_0803b120:	.4byte 0x80000003

_0803b124:
	mov		r0, #0x81
	lsl		r0, r0, #0xc
	cmp		r2, r0
	ble		_0803b152
	ldr		r4, _0803b15c
	ldrh	r0, [r4, #0x0]
	ldr		r2, _0803b160
	and		r2, r0
	ldr		r0, _0803b164
	ldr		r1, [r0, #0x0]
	mov		r5, #0xfa
	lsl		r5, r5, #0x18
	add		r0, r1, r5
	cmp		r0, #0x0
	bge		_0803b146
	ldr		r5, _0803b168
	add		r0, r1, r5
_0803b146:
	asr		r0, r0, #0xb
	lsl		r0, r0, #0x8
	orr		r0, r2
	strh	r0, [r4, #0x0]
	mov		r0, #0x2
	strb	r0, [r3, #0x0]
_0803b152:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3B15A, 0x2

_0803b15c:	.4byte 0x0400000C
_0803b160:	.4byte 0x0000E0FF
_0803b164:	.4byte 0x0200CE54
_0803b168:	.4byte 0xFA0007FF
	thumb_func_end sub_0803b028

	thumb_func_start sub_0803b16c
sub_0803b16c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x10
	add		r5, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	lsl		r2, r2, #0x18
	lsr		r7, r2, #0x18
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0803b1e4
	str		r0, [r5, #0x4c]
	ldr		r0, _0803b1e8
	str		r0, [r5, #0xc]
	bl		sub_080706ac
	str		r0, [r5, #0x54]
	add		r0, r5, #0x0
	add		r0, #0x58
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0xc8
	bl		sub_0808b374
	add		r1, r5, #0x0
	add		r1, #0xc4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, sp
	ldr		r0, _0803b1ec
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	lsl		r0, r7, #0x2
	add		r0, sp
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xa
	bne		_0803b1f0
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	mov		r0, #0x0
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0803b1f0
	add		r1, r5, #0x0
	add		r1, #0xf4
	mov		r0, #0x1e
	strh	r0, [r1, #0x0]
	add		r4, r1, #0x0
	b		_0803b1fe

.incbin "base.gba", 0x3B1E2, 0x2

_0803b1e4:	.4byte 0x080e17ac
_0803b1e8:	.4byte 0x080e17c4
_0803b1ec:	.4byte 0x080d3154

_0803b1f0:
	lsl		r0, r7, #0x2
	add		r0, sp
	ldr		r1, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf4
	strh	r1, [r0, #0x0]
	add		r4, r0, #0x0
_0803b1fe:
	add		r6, r5, #0x0
	add		r6, #0x58
	ldrh	r1, [r4, #0x0]
	add		r1, #0x3
	add		r0, r6, #0x0
	bl		sub_0808e03c
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0xa
	beq		_0803b216
	cmp		r0, #0x1e
	bne		_0803b222
_0803b216:
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_0803b22c
_0803b222:
	add		r0, r6, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
_0803b22c:
	add		r2, r5, #0x0
	add		r2, #0xc1
	mov		r1, #0x0
	mov		r0, #0x2
	strb	r0, [r2, #0x0]
	sub		r2, #0xd
	mov		r3, #0x0
	mov		r0, #0x19
	strh	r0, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf0
	strh	r1, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0xec
	str		r1, [r4, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x4
	strb	r3, [r0, #0x0]
	add		r0, #0x1
	strb	r7, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xf8
	mov		r0, r8
	strb	r0, [r1, #0x0]
	ldr		r0, _0803b28c
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	ldrsb	r2, [r1, r2]
	mov		r3, #0x0
	mov		r1, r8
	cmp		r1, #0x0
	bne		_0803b270
	mov		r3, #0x1
_0803b270:
	add		r1, r4, #0x0
	bl		sub_0802ee9c
	add		r1, r5, #0x0
	add		r1, #0xfc
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		sp, #0x10
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0803b28c:	.4byte 0x0200D528
	thumb_func_end sub_0803b16c

	thumb_func_start sub_0803b290
sub_0803b290:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r5, r0, #0x0
	add		r7, r5, #0x0
	add		r7, #0xf7
	ldrb	r0, [r7, #0x0]
	lsl		r1, r0, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0xb
	mov		r0, #0xac
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	ldr		r0, _0803b32c
	ldr		r6, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xec
	ldr		r2, [r0, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x7
	add		r2, r2, r0
	mov		r4, sp
	add		r4, #0x6
	str		r4, [sp, #0x0]
	add		r0, r6, #0x0
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r2, [r4, #0x0]
	ldr		r0, _0803b330
	cmp		r2, r0
	bhi		_0803b3ac
	add		r0, sp, #0x4
	ldrh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xac
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	add		r1, #0x41
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	add		r0, #0x60
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	add		r1, r2, #0x0
	bl		sub_080bbcac
	ldr		r1, _0803b334
	add		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r2, r0, r1
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	cmp		r2, r0
	ble		_0803b314
	add		r2, r0, #0x0
_0803b314:
	cmp		r2, r1
	beq		_0803b322
	add		r0, r5, #0x0
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803b338
_0803b322:
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0x0
	b		_0803b350

.incbin "base.gba", 0x3B32A, 0x2

_0803b32c:	.4byte 0x0200D514
_0803b330:	.4byte 0x0000011F
_0803b334:	.4byte 0xFFFFFF00

_0803b338:
	cmp		r2, #0xff
	ble		_0803b342
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x1
	beq		_0803b34a
_0803b342:
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0x1
	b		_0803b350
_0803b34a:
	add		r1, r5, #0x0
	add		r1, #0xbc
	mov		r0, #0x3
_0803b350:
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xb6
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r0, _0803b3b4
	cmp		r1, r0
	bgt		_0803b3ac
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_0803b3a0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_0803b3a0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x5
	beq		_0803b3a0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_0803b3a0
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_0803b3a0
	add		r0, r5, #0x0
	add		r0, #0xc8
	bl		sub_0808b3d4
_0803b3a0:
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0803b3ac:
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803b3b4:	.4byte 0x0000011B
	thumb_func_end sub_0803b290

	thumb_func_start sub_0803b3b8
sub_0803b3b8:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0xec
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r6, r5, #0x0
	add		r6, #0x58
	add		r0, r6, #0x0
	bl		sub_0808e278
	add		r4, r5, #0x0
	add		r4, #0xf4
	ldrh	r1, [r4, #0x0]
	add		r1, #0x3
	add		r0, r6, #0x0
	bl		sub_0808e03c
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0xa
	beq		_0803b3e6
	cmp		r0, #0x1e
	bne		_0803b3f2
_0803b3e6:
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_0803b3fc
_0803b3f2:
	add		r0, r6, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
_0803b3fc:
	add		r1, r5, #0x0
	add		r1, #0xc1
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	mov		r2, #0x0
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf6
	strb	r2, [r0, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803b424
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803b424:	.4byte 0xFFFF8000
	thumb_func_end sub_0803b3b8

	thumb_func_start sub_0803b428
sub_0803b428:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	bl		sub_0803b16c
	ldr		r0, _0803b4b8
	str		r0, [r6, #0x4c]
	ldr		r0, _0803b4bc
	str		r0, [r6, #0xc]
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	add		r0, #0x44
	bl		sub_0808af94
	bl		sub_0803c030
	str		r0, [r4, #0x0]
	ldr		r4, _0803b4c0
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r5, r6, r1
	ldr		r1, _0803b4c4
	add		r0, r4, r1
	mov		r1, #0xf4
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0803c7e4
	add		r1, r0, #0x0
	str		r1, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r1, #0x86
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xea
	mov		r0, #0xff
	strb	r0, [r1, #0x0]
	sub		r1, #0x1
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r1, #0x0]
	sub		r1, #0x1
	strb	r0, [r1, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0803b4b8:	.4byte 0x080e17ac
_0803b4bc:	.4byte 0x080e172c
_0803b4c0:	.4byte 0x0200DB50
_0803b4c4:	.4byte 0xFFFFFEB0
	thumb_func_end sub_0803b428

	thumb_func_start sub_0803b4c8
sub_0803b4c8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _0803b4e8
	cmp		r1, r0
	beq		_0803b576
	cmp		r1, r0
	bgt		_0803b500
	sub		r0, #0x3
	cmp		r1, r0
	beq		_0803b55e
	cmp		r1, r0
	bgt		_0803b4ec
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0803b534
	b		_0803b5b8

_0803b4e8:	.4byte 0xFFFF8004

_0803b4ec:
	ldr		r0, _0803b4fc
	cmp		r1, r0
	beq		_0803b566
	add		r0, #0x1
	cmp		r1, r0
	beq		_0803b56e
	b		_0803b5b8

.incbin "base.gba", 0x3B4FA, 0x2

_0803b4fc:	.4byte 0xFFFF8002

_0803b500:
	ldr		r0, _0803b518
	cmp		r1, r0
	beq		_0803b58e
	cmp		r1, r0
	bgt		_0803b51c
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0803b57e
	add		r0, #0x1
	cmp		r1, r0
	beq		_0803b586
	b		_0803b5b8

_0803b518:	.4byte 0xFFFF8007

_0803b51c:
	ldr		r0, _0803b530
	cmp		r1, r0
	beq		_0803b596
	cmp		r1, #0x0
	bne		_0803b5b8
	add		r0, r4, #0x0
	bl		sub_0803b3b8
	b		_0803b5b8

.incbin "base.gba", 0x3B52E, 0x2

_0803b530:	.4byte 0xFFFF8009

_0803b534:
	ldr		r5, _0803b54c
_0803b536:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0803b550
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_0803b556
	add		r0, r4, #0x0
	bl		sub_0803b290
	b		_0803b556

.incbin "base.gba", 0x3B54A, 0x2

_0803b54c:	.4byte 0x0200D530

_0803b550:
	add		r0, r4, #0x0
	bl		sub_0803b290
_0803b556:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803b536
_0803b55e:
	add		r0, r4, #0x0
	bl		sub_0803b5c0
	b		_0803b5b8
_0803b566:
	add		r0, r4, #0x0
	bl		sub_0803b700
	b		_0803b5b8
_0803b56e:
	add		r0, r4, #0x0
	bl		sub_0803b7cc
	b		_0803b5b8
_0803b576:
	add		r0, r4, #0x0
	bl		sub_0803bcac
	b		_0803b5b8
_0803b57e:
	add		r0, r4, #0x0
	bl		sub_0803c8e4
	b		_0803b5b8
_0803b586:
	add		r0, r4, #0x0
	bl		sub_0803be70
	b		_0803b5b8
_0803b58e:
	add		r0, r4, #0x0
	bl		sub_0803bef0
	b		_0803b5b8
_0803b596:
	ldr		r5, _0803b5b4
_0803b598:
	ldr		r0, [r5, #0x0]
	mov		r1, #0xf6
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803b5ac
	add		r0, r4, #0x0
	bl		sub_0803b290
_0803b5ac:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803b598

_0803b5b4:	.4byte 0x0200D534

_0803b5b8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3B5BE, 0x2
	thumb_func_end sub_0803b4c8

	thumb_func_start sub_0803b5c0
sub_0803b5c0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r1, r4, #0x0
	add		r1, #0xf6
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r1, _0803b640
	ldr		r0, [r1, #0x0]
	ldr		r2, _0803b644
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803b5f4
	add		r5, r1, #0x0
_0803b5dc:
	add		r0, r4, #0x0
	bl		sub_0803b290
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	ldr		r1, _0803b644
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0803b5dc
_0803b5f4:
	ldr		r1, _0803b640
	ldr		r0, [r1, #0x0]
	ldr		r2, _0803b644
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0803b694
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	add		r6, r1, #0x0
_0803b60a:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803b67c
	mov		r0, #0x4e
	bl		sub_0808f690
	ldr		r0, _0803b648
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0803b62c
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
_0803b62c:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x2
	bgt		_0803b650
	ldr		r0, [r6, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803b64c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803b662

_0803b640:	.4byte 0x0200D518
_0803b644:	.4byte 0x00000101
_0803b648:	.4byte 0x00000282
_0803b64c:	.4byte 0xFFFF8002

_0803b650:
	ldr		r0, _0803b670
	bl		sub_08002268
	ldr		r0, [r6, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803b674
	mov		r3, #0x0
	bl		sub_080b7724
_0803b662:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803b678
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803b688

_0803b670:	.4byte 0x000002EF
_0803b674:	.4byte 0xFFFF8004
_0803b678:	.4byte 0xFFFF8007

_0803b67c:
	add		r0, r4, #0x0
	bl		sub_0803b290
	add		r0, r4, #0x0
	bl		sub_080b7690
_0803b688:
	ldr		r0, [r6, #0x0]
	ldr		r1, _0803b6cc
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0803b60a
_0803b694:
	mov		r5, #0x0
	ldr		r6, _0803b6d0
_0803b698:
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803b6d4
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803b6d4
	cmp		r0, #0x3
	beq		_0803b6d4
	cmp		r0, #0x5
	beq		_0803b6d4
	cmp		r0, #0x4
	beq		_0803b6d4
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_0803b6e8
	add		r0, r4, #0x0
	bl		sub_0803b290
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803b6e2

_0803b6cc:	.4byte 0x00000101
_0803b6d0:	.4byte 0x000003E7

_0803b6d4:
	add		r0, r4, #0x0
	bl		sub_0803b290
	add		r0, r4, #0x0
	bl		sub_080b7690
	sub		r5, #0x1
_0803b6e2:
	add		r5, #0x1
	cmp		r5, r6
	ble		_0803b698
_0803b6e8:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803b6fc
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3B6FA, 0x2

_0803b6fc:	.4byte 0xFFFF8003
	thumb_func_end sub_0803b5c0

	thumb_func_start sub_0803b700
sub_0803b700:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r0, #0xf6
	mov		r5, #0x2
	strb	r5, [r0, #0x0]
	add		r4, r6, #0x0
	add		r4, #0x58
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r6, #0x0
	add		r0, #0xf4
	ldrh	r1, [r0, #0x0]
	add		r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r0, r6, #0x0
	add		r0, #0xc1
	strb	r5, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xb4
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
	mov		r4, #0x96
	lsl		r4, r4, #0x1
_0803b73e:
	ldr		r1, [r6, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803b7a4
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803b7a4
	cmp		r0, #0x3
	beq		_0803b7a4
	cmp		r0, #0x5
	beq		_0803b7a4
	cmp		r0, #0x4
	beq		_0803b7a4
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803b778
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803b774
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803b790

.incbin "base.gba", 0x3B772, 0x2

_0803b774:	.4byte 0xFFFF8003

_0803b778:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803b790
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803b7a0
	mov		r3, #0x0
	bl		sub_080b7724
_0803b790:
	sub		r4, #0x1
	add		r0, r6, #0x0
	bl		sub_0803b290
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0803b7b0

_0803b7a0:	.4byte 0xFFFF8004

_0803b7a4:
	add		r0, r6, #0x0
	bl		sub_0803b290
	add		r0, r6, #0x0
	bl		sub_080b7690
_0803b7b0:
	cmp		r4, #0x0
	bne		_0803b73e
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803b7c8
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3B7C6, 0x2

_0803b7c8:	.4byte 0xFFFF8003
	thumb_func_end sub_0803b700

	thumb_func_start sub_0803b7cc
sub_0803b7cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	add		r6, r0, #0x0
	add		r1, r6, #0x0
	add		r1, #0xf6
	mov		r5, #0x0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r4, r6, #0x0
	add		r4, #0x58
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r6, #0x0
	add		r0, #0xf4
	ldrh	r1, [r0, #0x0]
	add		r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r1, r6, #0x0
	add		r1, #0xc1
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
	add		r0, #0xf3
	add		r1, r6, r0
	ldr		r4, _0803b8d0
	ldr		r0, [r4, #0x0]
	ldr		r2, _0803b8d4
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0803bf9c
	mov		r7, #0x8a
	lsl		r7, r7, #0x1
	add		r0, r6, r7
	str		r5, [r0, #0x0]
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r0, r6, r0
	str		r0, [sp, #0x4]
	add		r1, r6, #0x0
	add		r1, #0xf0
	str		r1, [sp, #0x8]
	mov		r2, #0xec
	add		r2, r2, r6
	mov		r9, r2
	add		r3, r6, #0x0
	add		r3, #0xac
	str		r3, [sp, #0x20]
	add		r4, r6, #0x0
	add		r4, #0xae
	str		r4, [sp, #0x24]
	sub		r7, #0x8
	add		r7, r6, r7
	str		r7, [sp, #0x10]
	add		r0, r6, #0x0
	add		r0, #0xf7
	str		r0, [sp, #0x14]
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r1, r6, r1
	str		r1, [sp, #0x18]
	mov		r2, #0x8c
	lsl		r2, r2, #0x1
	add		r2, r6, r2
	str		r2, [sp, #0x1C]
	ldr		r3, [sp, #0x4]
	str		r3, [sp, #0xC]
_0803b874:
	ldr		r4, [sp, #0x4]
	ldr		r0, [r4, #0x0]
	mov		r7, #0x9a
	lsl		r7, r7, #0x1
	add		r0, r0, r7
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r3, _0803b8d0
	ldr		r2, [r3, #0x0]
	mov		r4, #0xa7
	lsl		r4, r4, #0x3
	add		r0, r2, r4
	mov		r7, #0x0
	ldrsh	r3, [r0, r7]
	ldr		r1, _0803b8d8
	add		r0, r2, r1
	mov		r4, #0x0
	ldrsh	r5, [r0, r4]
	sub		r3, r3, r5
	ldr		r7, [sp, #0x8]
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	ldr		r4, _0803b8dc
	add		r0, r2, r4
	mov		r7, #0x0
	ldrsh	r4, [r0, r7]
	sub		r1, r1, r4
	add		r0, r3, #0x0
	mul		r0, r1
	ldr		r1, _0803b8e0
	add		r2, r2, r1
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	sub		r1, r1, r4
	bl		sub_080bbcac
	add		r0, r0, r5
	ldr		r4, [sp, #0x4]
	ldr		r1, [r4, #0x0]
	mov		r7, #0x9c
	lsl		r7, r7, #0x1
	add		r1, r1, r7
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	b		_0803ba6e

.incbin "base.gba", 0x3B8CE, 0x2

_0803b8d0:	.4byte 0x0200D51C
_0803b8d4:	.4byte 0x00000536
_0803b8d8:	.4byte 0x0000053A
_0803b8dc:	.4byte 0x0000052E
_0803b8e0:	.4byte 0x0000052C

_0803b8e4:
	ldr		r1, [r6, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	bne		_0803b8ee
	b		_0803ba56
_0803b8ee:
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	bne		_0803b8f6
	b		_0803ba56
_0803b8f6:
	cmp		r0, #0x5
	bne		_0803b8fc
	b		_0803ba56
_0803b8fc:
	cmp		r0, #0x4
	bne		_0803b902
	b		_0803ba56
_0803b902:
	cmp		r0, #0x3
	bne		_0803b908
	b		_0803ba56
_0803b908:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	mov		r1, #0x0
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	ldr		r4, _0803ba24
	cmp		r0, r4
	ble		_0803b91c
	mov		r1, #0x1
_0803b91c:
	str		r1, [r2, #0x0]
	cmp		r1, #0x0
	beq		_0803b980
	ldr		r7, _0803ba28
	ldr		r1, [r7, #0x0]
	ldr		r0, _0803ba2c
	add		r1, r1, r0
	mov		r0, sp
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r6, #0x0
	add		r0, #0xe8
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [r7, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803ba30
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, _0803ba34
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803ba38
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x55
	bl		sub_0808f690
	ldr		r0, [r6, #0x54]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803ba3c
	mov		r3, #0x0
	bl		sub_080b7724
_0803b980:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803b98e
	b		_0803ba92
_0803b98e:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803b9a6
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803ba40
	mov		r3, #0x0
	bl		sub_080b7724
_0803b9a6:
	ldr		r2, [sp, #0xC]
	ldr		r1, [r2, #0x0]
	mov		r3, #0x9a
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r4, [sp, #0x8]
	mov		r7, #0x0
	ldrsh	r1, [r4, r7]
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	add		r0, r6, #0x0
	bl		sub_0803b290
	ldr		r3, [sp, #0x20]
	mov		r4, #0x0
	ldrsh	r1, [r3, r4]
	ldr		r7, [sp, #0x24]
	mov		r0, #0x0
	ldrsh	r2, [r7, r0]
	ldr		r4, [sp, #0xC]
	ldr		r3, [r4, #0x0]
	mov		r7, #0xa0
	lsl		r7, r7, #0x1
	add		r0, r3, r7
	strh	r1, [r0, #0x0]
	mov		r1, #0xa1
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	strh	r2, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r5, r6, r2
	ldr		r0, [r5, #0x0]
	add		r2, r0, #0x1
	str		r2, [r5, #0x0]
	mov		r3, #0x8c
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0803ba44
	add		r0, r2, #0x0
	mov		r1, #0x14
	bl		sub_080bbd44
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_0803ba48
	mov		r0, #0x14
	bl		sub_0808f690
	str		r4, [r5, #0x0]
	b		_0803ba48

_0803ba24:	.4byte 0x00095FFF
_0803ba28:	.4byte 0x0200D520
_0803ba2c:	.4byte 0x0000056C
_0803ba30:	.4byte 0xFFFF8001
_0803ba34:	.4byte 0x0200D518
_0803ba38:	.4byte 0xFFFF8003
_0803ba3c:	.4byte 0xFFFF8006
_0803ba40:	.4byte 0xFFFF8004

_0803ba44:
	sub		r0, #0x1
	str		r0, [r1, #0x0]
_0803ba48:
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r0, r6, #0x0
	bl		sub_0803c8ac
	b		_0803ba6e
_0803ba56:
	add		r0, r6, #0x0
	bl		sub_0803b290
	ldr		r4, [sp, #0x4]
	ldr		r0, [r4, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
_0803ba6e:
	ldr		r7, [sp, #0xC]
	ldr		r0, [r7, #0x0]
	mov		r2, #0x0
	mov		r3, #0x9a
	lsl		r3, r3, #0x1
	add		r1, r0, r3
	mov		r4, #0x9c
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	sub		r0, #0x1
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	blt		_0803ba8c
	mov		r2, #0x1
_0803ba8c:
	cmp		r2, #0x0
	bne		_0803ba92
	b		_0803b8e4
_0803ba92:
	ldr		r7, [sp, #0x4]
	ldr		r0, [r7, #0x0]
	bl		sub_0803c834
	ldr		r2, [sp, #0x10]
	ldr		r1, [r2, #0x0]
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	add		r0, r6, #0x0
	bl		sub_0803bf9c
	ldr		r3, [sp, #0x8]
	mov		r4, #0x0
	ldrsh	r1, [r3, r4]
	mov		r7, r9
	ldr		r0, [r7, #0x0]
	add		r0, r0, r1
	str		r0, [r7, #0x0]
	add		r0, r6, #0x0
	bl		sub_0803b290
	ldr		r1, [sp, #0x4]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x21
	beq		_0803bad0
	cmp		r0, #0x22
	bne		_0803bb18
_0803bad0:
	ldr		r3, [sp, #0x14]
	ldrb	r1, [r3, #0x0]
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0xb
	mov		r4, #0xac
	lsl		r4, r4, #0x8
	add		r0, r0, r4
	mov		r7, r9
	ldr		r3, [r7, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x7
	add		r3, r3, r1
	ldr		r4, [sp, #0x18]
	ldr		r2, [r4, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xe8
	str		r0, [r1, #0x0]
	add		r2, #0xec
	str		r3, [r2, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803bb14
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x53
	bl		sub_0808f690
	mov		r7, #0x1e
	ldr		r0, [sp, #0x1C]
	str		r7, [r0, #0x0]
	b		_0803bb62

.incbin "base.gba", 0x3BB12, 0x2

_0803bb14:	.4byte 0xFFFF8000

_0803bb18:
	cmp		r0, #0x1e
	ble		_0803bb62
	cmp		r0, #0x24
	bgt		_0803bb62
	ldr		r2, [sp, #0x14]
	ldrb	r1, [r2, #0x0]
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0xb
	mov		r3, #0xac
	lsl		r3, r3, #0x8
	add		r0, r0, r3
	mov		r4, r9
	ldr		r3, [r4, #0x0]
	mov		r7, #0xa0
	lsl		r7, r7, #0x7
	add		r3, r3, r7
	ldr		r1, [sp, #0x18]
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xe8
	str		r0, [r1, #0x0]
	add		r2, #0xec
	str		r3, [r2, #0x0]
	ldr		r2, [sp, #0x18]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803bc6c
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x52
	bl		sub_0808f690
	mov		r3, #0x14
	ldr		r4, [sp, #0x1C]
	str		r3, [r4, #0x0]
_0803bb62:
	ldr		r7, [sp, #0x20]
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	ldr		r3, [sp, #0x24]
	mov		r4, #0x0
	ldrsh	r2, [r3, r4]
	ldr		r7, [sp, #0x4]
	ldr		r3, [r7, #0x0]
	mov		r4, #0xa0
	lsl		r4, r4, #0x1
	add		r0, r3, r4
	strh	r1, [r0, #0x0]
	mov		r7, #0xa1
	lsl		r7, r7, #0x1
	add		r0, r3, r7
	strh	r2, [r0, #0x0]
	ldr		r1, [sp, #0x4]
	ldr		r0, [r1, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x54]
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	bne		_0803bbc0
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r4, r6, r2
_0803bba2:
	add		r0, r6, #0x0
	bl		sub_0803b290
	ldr		r0, [r4, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x54]
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_0803bba2
_0803bbc0:
	add		r0, r6, #0x0
	bl		sub_0803c8ac
	mov		r8, r9
	mov		r3, #0x82
	lsl		r3, r3, #0x1
	add		r7, r6, r3
	mov		r4, #0x4
	mov		r10, r4
_0803bbd2:
	ldr		r1, [r6, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803bc86
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803bc86
	cmp		r0, #0x5
	beq		_0803bc86
	cmp		r0, #0x4
	beq		_0803bc86
	cmp		r0, #0x3
	beq		_0803bc86
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803bc04
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803bc70
	mov		r3, #0x0
	bl		sub_080b7724
_0803bc04:
	ldr		r0, [sp, #0x8]
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_0803b290
	ldr		r4, [sp, #0x20]
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr		r3, [sp, #0x24]
	mov		r4, #0x0
	ldrsh	r2, [r3, r4]
	ldr		r3, [r7, #0x0]
	mov		r4, #0xa0
	lsl		r4, r4, #0x1
	add		r0, r3, r4
	strh	r1, [r0, #0x0]
	mov		r1, #0xa1
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r5, r6, r2
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	mov		r3, #0x8c
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	ldr		r4, [r1, #0x0]
	cmp		r4, #0x0
	bne		_0803bc74
	mov		r1, #0x14
	bl		sub_080bbd44
	cmp		r0, #0x0
	bne		_0803bc78
	mov		r0, #0x14
	bl		sub_0808f690
	str		r4, [r5, #0x0]
	b		_0803bc78

_0803bc6c:	.4byte 0xFFFF8001
_0803bc70:	.4byte 0xFFFF8004

_0803bc74:
	sub		r0, r4, #0x1
	str		r0, [r1, #0x0]
_0803bc78:
	add		r0, r6, #0x0
	bl		sub_080b7690
	add		r0, r6, #0x0
	bl		sub_0803c8ac
	b		_0803bc9c
_0803bc86:
	add		r0, r6, #0x0
	bl		sub_0803b290
	ldr		r0, [r7, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
_0803bc9c:
	mov		r4, #0x1
	neg		r4, r4
	add		r10, r4
	mov		r0, r10
	cmp		r0, #0x0
	bge		_0803bbd2
	b		_0803b874

.incbin "base.gba", 0x3BCAA, 0x2
	thumb_func_end sub_0803b7cc

	thumb_func_start sub_0803bcac
sub_0803bcac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r1, r7, #0x0
	add		r1, #0xf6
	mov		r0, #0x5
	strb	r0, [r1, #0x0]
	add		r4, r7, #0x0
	add		r4, #0x58
	add		r0, r4, #0x0
	bl		sub_0808e278
	mov		r0, #0xf4
	add		r0, r0, r7
	mov		r8, r0
	ldrh	r1, [r0, #0x0]
	add		r1, #0x2
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r6, r7, #0x0
	add		r6, #0xc1
	mov		r0, #0x2
	strb	r0, [r6, #0x0]
	add		r5, r7, #0x0
	add		r5, #0xb4
	mov		r0, #0x19
	strh	r0, [r5, #0x0]
	mov		r0, #0x15
	bl		sub_0808f690
	add		r1, r7, #0x0
	add		r1, #0xf0
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	mov		r9, r2
	mov		r3, r8
	str		r3, [sp, #0x4]
	str		r1, [sp, #0x8]
	mov		r0, #0xec
	add		r0, r0, r7
	mov		r10, r0
	mov		r8, r4
_0803bd18:
	ldr		r1, [r7, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	bne		_0803bd22
	b		_0803be28
_0803bd22:
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	bne		_0803bd2a
	b		_0803be28
_0803bd2a:
	cmp		r0, #0x5
	beq		_0803be28
	cmp		r0, #0x4
	beq		_0803be28
	cmp		r0, #0x3
	beq		_0803be28
	add		r4, r7, #0x0
	add		r4, #0xf0
	mov		r1, r9
	cmp		r1, #0xf
	bne		_0803bd5c
	ldr		r2, [sp, #0x4]
	ldrh	r0, [r2, #0x0]
	cmp		r0, #0x1e
	beq		_0803bd54
	add		r0, r7, #0x0
	add		r0, #0x58
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
_0803bd54:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	ldr		r3, [sp, #0x8]
	strh	r0, [r3, #0x0]
_0803bd5c:
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r2, r7, r1
	mov		r1, #0x0
	ldr		r3, _0803be0c
	cmp		r0, r3
	ble		_0803bd78
	mov		r1, #0x1
_0803bd78:
	str		r1, [r2, #0x0]
	cmp		r1, #0x0
	beq		_0803bdfc
	ldr		r0, _0803be10
	ldr		r1, [r0, #0x0]
	ldr		r2, _0803be14
	add		r1, r1, r2
	mov		r0, sp
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r7, #0x0
	add		r0, #0xe8
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r3, _0803be10
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803be18
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, _0803be1c
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803be20
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	cmp		r0, r3
	beq		_0803bdf0
	mov		r0, r8
	bl		sub_0808e278
	ldr		r0, [sp, #0x4]
	ldrh	r1, [r0, #0x0]
	add		r1, #0x1
	mov		r0, r8
	bl		sub_0808e03c
	mov		r0, r8
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0x2
	strb	r1, [r6, #0x0]
	mov		r2, #0x19
	strh	r2, [r5, #0x0]
_0803bdf0:
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _0803be24
	mov		r3, #0x0
	bl		sub_080b7724
_0803bdfc:
	add		r0, r7, #0x0
	bl		sub_0803b290
	add		r0, r7, #0x0
	bl		sub_080b7690
	b		_0803be3a

.incbin "base.gba", 0x3BE0A, 0x2

_0803be0c:	.4byte 0x00095FFF
_0803be10:	.4byte 0x0200D520
_0803be14:	.4byte 0x0000056C
_0803be18:	.4byte 0xFFFF8001
_0803be1c:	.4byte 0x0200D518
_0803be20:	.4byte 0xFFFF8003
_0803be24:	.4byte 0xFFFF8006

_0803be28:
	add		r0, r7, #0x0
	bl		sub_0803b290
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r3, #0x1
	neg		r3, r3
	add		r9, r3
_0803be3a:
	mov		r0, #0x1
	add		r9, r0
	mov		r1, r9
	cmp		r1, #0x4a
	bgt		_0803be46
	b		_0803bd18
_0803be46:
	add		r1, r7, #0x0
	add		r1, #0xf6
	mov		r0, #0x4
	strb	r0, [r1, #0x0]
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	ldr		r2, _0803be6c
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3BE6A, 0x2

_0803be6c:	.4byte 0xFFFF8005
	thumb_func_end sub_0803bcac

	thumb_func_start sub_0803be70
sub_0803be70:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0xf6
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
	sub		r1, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	strh	r0, [r1, #0x0]
	add		r4, r5, #0x0
	add		r4, #0xec
	add		r7, r1, #0x0
	mov		r6, #0x3b
_0803be8c:
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	ldr		r0, [r4, #0x0]
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_0803b290
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0803be8c
	add		r1, r5, #0x0
	add		r1, #0xf6
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x58
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r5, #0x0
	add		r0, #0xf4
	ldrh	r1, [r0, #0x0]
	add		r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xc1
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
_0803bee0:
	add		r0, r5, #0x0
	bl		sub_0803b290
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0803bee0

.incbin "base.gba", 0x3BEEE, 0x2
	thumb_func_end sub_0803be70

	thumb_func_start sub_0803bef0
sub_0803bef0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0xf6
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	mov		r0, #0x86
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, _0803bf94
	ldr		r0, [r0, #0x0]
	ldr		r2, _0803bf98
	add		r0, r0, r2
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_0803bf9c
	add		r4, r5, #0x0
	add		r4, #0x58
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r5, #0x0
	add		r0, #0xf4
	ldrh	r1, [r0, #0x0]
	add		r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xc1
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
	add		r4, #0x94
	mov		r0, #0xf0
	add		r0, r0, r5
	mov		r8, r0
	mov		r7, r8
	mov		r6, #0x1d
_0803bf56:
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	ldr		r0, [r4, #0x0]
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_0803b290
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0803bf56
	mov		r0, #0x0
	mov		r1, r8
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x58
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
_0803bf84:
	add		r0, r5, #0x0
	bl		sub_0803b290
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0803bf84

.incbin "base.gba", 0x3BF92, 0x2

_0803bf94:	.4byte 0x0200D51C
_0803bf98:	.4byte 0x00000536
	thumb_func_end sub_0803bef0

	thumb_func_start sub_0803bf9c
sub_0803bf9c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	mov		r0, #0x86
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	ldr		r0, _0803bfc0
	ldr		r1, [r0, #0x0]
	ldr		r4, [r1, #0x0]
	ldr		r3, _0803bfc4
	add		r1, r4, r3
	mov		r7, #0x0
	ldrsh	r1, [r1, r7]
	ldr		r3, [r2, #0x0]
	add		r5, r0, #0x0
	cmp		r3, r1
	ble		_0803bfc8
	str		r1, [r2, #0x0]
	b		_0803bfd6

_0803bfc0:	.4byte 0x080d3194
_0803bfc4:	.4byte 0x00000532

_0803bfc8:
	ldr		r1, _0803c020
	add		r0, r4, r1
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r3, r0
	bge		_0803bfd6
	str		r0, [r2, #0x0]
_0803bfd6:
	ldr		r0, [r5, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r7, _0803c024
	add		r0, r1, r7
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	ldr		r4, _0803c028
	add		r5, r1, r4
	mov		r7, #0x0
	ldrsh	r0, [r5, r7]
	sub		r2, r2, r0
	mov		r0, #0x86
	lsl		r0, r0, #0x1
	add		r3, r6, r0
	add		r4, #0x6
	add		r0, r1, r4
	mov		r7, #0x0
	ldrsh	r4, [r0, r7]
	ldr		r0, [r3, #0x0]
	sub		r0, r0, r4
	mul		r0, r2
	ldr		r2, _0803c02c
	add		r1, r1, r2
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	sub		r1, r1, r4
	bl		sub_080bbcac
	ldrh	r1, [r5, #0x0]
	add		r1, r1, r0
	add		r0, r6, #0x0
	add		r0, #0xf0
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3C01E, 0x2

_0803c020:	.4byte 0x00000534
_0803c024:	.4byte 0x0000052C
_0803c028:	.4byte 0x0000052E
_0803c02c:	.4byte 0x00000532
	thumb_func_end sub_0803bf9c

	thumb_func_start sub_0803c030
sub_0803c030:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _0803c0f4
	str		r0, [r7, #0xc]
	add		r4, r7, #0x0
	add		r4, #0x14
	add		r0, r4, #0x0
	bl		sub_0808e21c
	mov		r0, #0x84
	add		r0, r0, r7
	mov		r8, r0
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0x80
	mov		r6, #0x0
	str		r6, [r0, #0x0]
	add		r5, r7, #0x0
	add		r5, #0xa4
	add		r0, r5, #0x0
	bl		sub_0808e21c
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r1, r1, r7
	mov		r9, r1
	mov		r0, r9
	bl		sub_0808b374
	mov		r2, #0x88
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r6, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xfd
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, r8
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	add		r0, #0x7d
	mov		r4, #0x2
	strb	r4, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x70
	mov		r0, #0x18
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xfd
	bl		sub_0808e03c
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, r9
	bl		sub_0808b3d4
	ldr		r1, _0803c0f8
	add		r0, r7, r1
	strb	r4, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x17
	strh	r0, [r1, #0x0]
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	add		r2, #0x44
	add		r1, r7, r2
	ldr		r0, _0803c0fc
	ldr		r0, [r0, #0x0]
	ldr		r2, _0803c100
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3C0F2, 0x2

_0803c0f4:	.4byte 0x080e1794
_0803c0f8:	.4byte 0x0000010D
_0803c0fc:	.4byte 0x0200D51C
_0803c100:	.4byte 0x000004A4
	thumb_func_end sub_0803c030

	thumb_func_start sub_0803c104
sub_0803c104:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r6, r4, r0
	ldrh	r1, [r6, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	mov		r1, #0xa1
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	add		r0, #0x8
	add		r1, r4, #0x0
	add		r1, #0x6a
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x14
	bl		sub_0808e4a0
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r5, r4, r2
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x4
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r2, #0x4
	add		r1, r4, r2
	ldr		r1, [r1, #0x0]
	bl		sub_080bbcac
	str		r0, [r5, #0x0]
	cmp		r0, #0x43
	ble		_0803c156
	mov		r0, #0x43
	str		r0, [r5, #0x0]
_0803c156:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x21
	bgt		_0803c16c
	lsl		r0, r0, #0x1
	sub		r0, #0x22
	ldrh	r6, [r6, #0x0]
	add		r0, r0, r6
	add		r1, r4, #0x0
	add		r1, #0xf8
	strh	r0, [r1, #0x0]
	b		_0803c17a
_0803c16c:
	lsl		r0, r0, #0x1
	sub		r0, #0x66
	ldrh	r1, [r6, #0x0]
	sub		r1, r1, r0
	add		r0, r4, #0x0
	add		r0, #0xf8
	strh	r1, [r0, #0x0]
_0803c17a:
	add		r0, r4, #0x0
	add		r0, #0x6a
	ldrh	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xfa
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xa4
	bl		sub_0808e4a0
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803c104

	thumb_func_start sub_0803c194
sub_0803c194:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, _0803c1b4
	cmp		r1, r0
	beq		_0803c1da
	cmp		r1, r0
	bgt		_0803c1b8
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0803c1d0
	b		_0803c1e2

.incbin "base.gba", 0x3C1B2, 0x2

_0803c1b4:	.4byte 0xFFFF8001

_0803c1b8:
	ldr		r0, _0803c1cc
	cmp		r1, r0
	beq		_0803c1c2
	cmp		r1, #0x0
	bne		_0803c1e2
_0803c1c2:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803c1c2

.incbin "base.gba", 0x3C1CA, 0x2

_0803c1cc:	.4byte 0xFFFF8002

_0803c1d0:
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0803c738
	b		_0803c1e2
_0803c1da:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0803c738
_0803c1e2:
	mov		r5, #0x0
	ldr		r0, _0803c240
	mov		r9, r0
	mov		r1, #0xe8
	add		r1, r1, r4
	mov		r8, r1
	add		r7, r4, #0x0
	add		r7, #0xec
	add		r6, r4, #0x0
	add		r6, #0xf2
_0803c1f6:
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_0803c244
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x5
	beq		_0803c244
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_0803c244
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_0803c244
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	ldr		r2, [r7, #0x0]
	str		r6, [sp, #0x0]
	add		r3, r4, #0x0
	add		r3, #0xf0
	bl		sub_0802a768
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	b		_0803c246

_0803c240:	.4byte 0x0200D514

_0803c244:
	sub		r5, #0x1
_0803c246:
	add		r0, r4, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	cmp		r5, #0x15
	ble		_0803c1f6
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803c26c
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803c26c:	.4byte 0xFFFF8002
	thumb_func_end sub_0803c194

	thumb_func_start sub_0803c270
sub_0803c270:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	bl		sub_0803b16c
	ldr		r0, _0803c2a8
	str		r0, [r6, #0x4c]
	ldr		r0, _0803c2ac
	str		r0, [r6, #0xc]
	ldr		r0, _0803c2b0
	mov		r1, #0x3
	bl		sub_080b63dc
	add		r5, r0, #0x0
	ldr		r0, _0803c2b4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0803c2b8
	mov		r1, #0x0
	b		_0803c2dc

.incbin "base.gba", 0x3C2A6, 0x2

_0803c2a8:	.4byte 0x080e17ac
_0803c2ac:	.4byte 0x080e1704
_0803c2b0:	.4byte 0x0200BDD4
_0803c2b4:	.4byte 0x00000289

_0803c2b8:
	ldr		r0, _0803c2c8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0803c2cc
	mov		r1, #0x1
	b		_0803c2dc

.incbin "base.gba", 0x3C2C6, 0x2

_0803c2c8:	.4byte 0x0000028A

_0803c2cc:
	ldr		r0, _0803c2f0
	bl		sub_0800227c
	neg		r1, r0
	orr		r1, r0
	asr		r1, r1, #0x1f
	mov		r0, #0x2
	and		r1, r0
_0803c2dc:
	add		r0, r6, #0x0
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803c2f4
	mov		r4, #0x0
	cmp		r0, #0x3
	bne		_0803c2f6
	mov		r4, #0x1
	b		_0803c2f6

_0803c2f0:	.4byte 0x0000028B

_0803c2f4:
	mov		r4, #0x2
_0803c2f6:
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r3, r6, r0
	ldr		r2, _0803c37c
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r1, r0, #0x5
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, [r2, #0x0]
	add		r1, r1, r0
	lsl		r0, r4, #0x5
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	mov		r0, #0x2c
	mul		r0, r5
	add		r1, r1, r0
	str		r1, [r3, #0x0]
	ldr		r5, [r1, #0x0]
	add		r7, r6, #0x0
	add		r7, #0xea
	mov		r0, #0xe9
	add		r0, r0, r6
	mov		r8, r0
	mov		r0, #0xe8
	add		r0, r0, r6
	mov		r9, r0
	add		r1, #0x6
	mov		r2, #0x9
_0803c332:
	ldrh	r0, [r1, #0x0]
	add		r5, r5, r0
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0803c332
	ldr		r4, _0803c380
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080bbcac
	strb	r0, [r7, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	mul		r0, r4
	sub		r5, r5, r0
	mov		r4, #0x64
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	mov		r1, r8
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	mul		r0, r4
	sub		r5, r5, r0
	mov		r0, r9
	strb	r5, [r0, #0x0]
	add		r0, r6, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3C37A, 0x2

_0803c37c:	.4byte 0x0200D51C
_0803c380:	.4byte 0x00001770
	thumb_func_end sub_0803c270

	thumb_func_start sub_0803c384
sub_0803c384:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _0803c3a0
	cmp		r1, r0
	beq		_0803c402
	cmp		r1, r0
	bgt		_0803c3a4
	sub		r0, #0x6
	cmp		r1, r0
	beq		_0803c3c8
	add		r0, #0x1
	cmp		r1, r0
	beq		_0803c3f2
	b		_0803c42c

_0803c3a0:	.4byte 0xFFFF8006

_0803c3a4:
	ldr		r0, _0803c3b8
	cmp		r1, r0
	beq		_0803c40a
	cmp		r1, r0
	bgt		_0803c3bc
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0803c3fa
	b		_0803c42c

.incbin "base.gba", 0x3C3B6, 0x2

_0803c3b8:	.4byte 0xFFFF8009

_0803c3bc:
	cmp		r1, #0x0
	bne		_0803c42c
	add		r0, r4, #0x0
	bl		sub_0803b3b8
	b		_0803c42c
_0803c3c8:
	ldr		r5, _0803c3e0
_0803c3ca:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0803c3e4
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_0803c3ea
	add		r0, r4, #0x0
	bl		sub_0803b290
	b		_0803c3ea

.incbin "base.gba", 0x3C3DE, 0x2

_0803c3e0:	.4byte 0x0200D530

_0803c3e4:
	add		r0, r4, #0x0
	bl		sub_0803b290
_0803c3ea:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803c3ca
_0803c3f2:
	add		r0, r4, #0x0
	bl		sub_0803c69c
	b		_0803c42c
_0803c3fa:
	add		r0, r4, #0x0
	bl		sub_0803c434
	b		_0803c42c
_0803c402:
	add		r0, r4, #0x0
	bl		sub_0803c624
	b		_0803c42c
_0803c40a:
	ldr		r5, _0803c428
_0803c40c:
	ldr		r0, [r5, #0x0]
	mov		r1, #0xf6
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803c420
	add		r0, r4, #0x0
	bl		sub_0803b290
_0803c420:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803c40c

_0803c428:	.4byte 0x0200D534

_0803c42c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3C432, 0x2
	thumb_func_end sub_0803c384

	thumb_func_start sub_0803c434
sub_0803c434:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x2c
	add		r6, r0, #0x0
	add		r1, r6, #0x0
	add		r1, #0xf6
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	mov		r4, #0x0
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bge		_0803c48c
	add		r5, r6, r1
_0803c45c:
	ldr		r1, [r6, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803c478
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803c478
	cmp		r0, #0x4
	beq		_0803c478
	cmp		r0, #0x5
	beq		_0803c478
	cmp		r0, #0x3
	beq		_0803c478
	add		r4, #0x1
_0803c478:
	add		r0, r6, #0x0
	bl		sub_0803b290
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	blt		_0803c45c
_0803c48c:
	add		r4, r6, #0x0
	add		r4, #0x58
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r5, r6, #0x0
	add		r5, #0xf4
	ldrh	r1, [r5, #0x0]
	add		r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r2, r6, #0x0
	add		r2, #0xc1
	mov		r0, #0x2
	strb	r0, [r2, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xb4
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
	mov		r3, #0x1
	str		r3, [sp, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	mov		r8, r0
	str		r4, [sp, #0x14]
	str		r5, [sp, #0x28]
	str		r2, [sp, #0x18]
	str		r1, [sp, #0x10]
	add		r1, #0x38
	str		r1, [sp, #0x1C]
	add		r2, #0x2f
	str		r2, [sp, #0x20]
	add		r3, r6, #0x0
	add		r3, #0xf2
	str		r3, [sp, #0x24]
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r9, r0
	str		r3, [sp, #0xC]
_0803c4de:
	ldr		r1, [sp, #0x1C]
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x8]
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	mov		r3, r8
	lsl		r4, r3, #0x2
	add		r0, r1, #0x4
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	add		r1, #0x6
	add		r1, r1, r4
	ldrh	r1, [r1, #0x0]
	bl		sub_080bbcac
	ldr		r1, [sp, #0x20]
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	add		r7, r4, #0x0
	cmp		r0, #0x0
	bne		_0803c51a
	ldr		r0, [sp, #0x14]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r2, #0x1
	str		r2, [sp, #0x0]
	b		_0803c52e
_0803c51a:
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x0
	beq		_0803c52e
	ldr		r0, [sp, #0x14]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
_0803c52e:
	mov		r0, #0x0
	mov		r1, r8
	cmp		r1, #0x0
	bne		_0803c538
	mov		r0, #0x1
_0803c538:
	ldr		r2, [sp, #0xC]
	strh	r0, [r2, #0x0]
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	add		r0, #0x6
	add		r0, r0, r7
	ldrh	r1, [r0, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	mov		r3, #0x1
	add		r3, r8
	mov		r10, r3
	cmp		r1, r0
	ble		_0803c5e6
	ldr		r5, [sp, #0x1C]
	ldr		r4, [sp, #0x14]
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r8, r0
_0803c560:
	ldr		r1, [r6, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803c5c6
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803c5c6
	cmp		r0, #0x4
	beq		_0803c5c6
	cmp		r0, #0x5
	beq		_0803c5c6
	cmp		r0, #0x3
	beq		_0803c5c6
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r2, [sp, #0x20]
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	ldr		r0, [r5, #0x0]
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	ldr		r1, [sp, #0x4]
	cmp		r1, #0x0
	bne		_0803c5c6
	mov		r2, #0x93
	lsl		r2, r2, #0xc
	cmp		r0, r2
	ble		_0803c5c6
	mov		r3, #0x1
	str		r3, [sp, #0x4]
	add		r0, r4, #0x0
	bl		sub_0808e278
	ldr		r0, [sp, #0x28]
	ldrh	r1, [r0, #0x0]
	add		r1, #0x2
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r2, #0x2
	ldr		r1, [sp, #0x18]
	strb	r2, [r1, #0x0]
	mov		r0, #0x19
	ldr		r3, [sp, #0x10]
	strh	r0, [r3, #0x0]
_0803c5c6:
	add		r0, r6, #0x0
	bl		sub_0803b290
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, #0x6
	add		r0, r0, r7
	ldrh	r1, [r0, #0x0]
	ldr		r2, [sp, #0x24]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r1, r0
	bgt		_0803c560
_0803c5e6:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0x4
	add		r0, r0, r7
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	ldr		r2, [sp, #0x8]
	add		r0, r2, r0
	ldr		r3, [sp, #0x1C]
	str		r0, [r3, #0x0]
	mov		r8, r10
	mov		r0, r8
	cmp		r0, #0x9
	bgt		_0803c604
	b		_0803c4de
_0803c604:
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803c620
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0x2c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803c620:	.4byte 0xFFFF8006
	thumb_func_end sub_0803c434

	thumb_func_start sub_0803c624
sub_0803c624:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0xf6
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
	sub		r1, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	strh	r0, [r1, #0x0]
	add		r4, r5, #0x0
	add		r4, #0xec
	add		r7, r1, #0x0
	mov		r6, #0x3b
_0803c640:
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	ldr		r0, [r4, #0x0]
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_0803b290
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0803c640
	add		r4, r5, #0x0
	add		r4, #0x58
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r5, #0x0
	add		r0, #0xf4
	ldrh	r1, [r0, #0x0]
	add		r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xc1
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
_0803c68c:
	add		r0, r5, #0x0
	bl		sub_0803b290
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0803c68c

.incbin "base.gba", 0x3C69A, 0x2
	thumb_func_end sub_0803c624

	thumb_func_start sub_0803c69c
sub_0803c69c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r1, r4, #0x0
	add		r1, #0xf6
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r1, _0803c6e4
	ldr		r0, [r1, #0x0]
	ldr		r2, _0803c6e8
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0803c6d0
	add		r5, r1, #0x0
_0803c6b8:
	add		r0, r4, #0x0
	bl		sub_0803b290
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	ldr		r1, _0803c6e8
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0803c6b8
_0803c6d0:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803c6ec
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3C6E2, 0x2

_0803c6e4:	.4byte 0x0200D518
_0803c6e8:	.4byte 0x00000101
_0803c6ec:	.4byte 0xFFFF8008
	thumb_func_end sub_0803c69c

	thumb_func_start sub_0803c6f0
sub_0803c6f0:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0803c730
	str		r0, [r6, #0x4c]
	ldr		r0, _0803c734
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x58
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0803c72a
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0803c72a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803c730:	.4byte 0x080e17ac
_0803c734:	.4byte 0x080e17c4
	thumb_func_end sub_0803c6f0

	thumb_func_start sub_0803c738
sub_0803c738:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r1, #0x0
	beq		_0803c74c
	add		r0, #0x54
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_0803c758
_0803c74c:
	add		r0, r4, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
_0803c758:
	add		r1, r4, #0x0
	add		r1, #0xb0
	mov		r0, #0x1d
	strh	r0, [r1, #0x0]
	add		r1, #0xd
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803c738

	thumb_func_start sub_0803c76c
sub_0803c76c:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r0, #0xf0
	ldrh	r1, [r0, #0x0]
	sub		r0, #0x48
	strh	r1, [r0, #0x0]
	add		r0, #0x4a
	ldrh	r0, [r0, #0x0]
	sub		r0, #0x20
	add		r1, r2, #0x0
	add		r1, #0xaa
	strh	r0, [r1, #0x0]
	add		r4, r2, #0x0
	add		r4, #0x54
	add		r0, r2, #0x0
	add		r0, #0xc4
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803c76c

	thumb_func_start sub_0803c79c
sub_0803c79c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0803c7dc
	str		r0, [r6, #0x4c]
	ldr		r0, _0803c7e0
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0803c7d6
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0803c7d6:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803c7dc:	.4byte 0x080e1754
_0803c7e0:	.4byte 0x080e176c
	thumb_func_end sub_0803c79c

	thumb_func_start sub_0803c7e4
sub_0803c7e4:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0803c82c
	str		r0, [r6, #0x4c]
	ldr		r0, _0803c830
	str		r0, [r6, #0xc]
	add		r5, r6, #0x0
	add		r5, #0x54
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r0, r6, #0x0
	add		r0, #0xc4
	bl		sub_0808b374
	add		r0, r6, #0x0
	add		r0, #0xc0
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x27
	bl		sub_0808e03c
	add		r0, r6, #0x0
	add		r0, #0xe4
	str		r4, [r0, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0803c82c:	.4byte 0x080e1754
_0803c830:	.4byte 0x080e176c
	thumb_func_end sub_0803c7e4

	thumb_func_start sub_0803c834
sub_0803c834:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x4
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	mov		r2, #0x9c
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r1, [r1, #0x0]
	bl		sub_080bbcac
	str		r0, [r5, #0x0]
	cmp		r0, #0x43
	ble		_0803c862
	mov		r0, #0x43
	str		r0, [r5, #0x0]
_0803c862:
	ldr		r0, [r5, #0x0]
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3C87A, 0x2
	thumb_func_end sub_0803c834

	thumb_func_start sub_0803c87c
sub_0803c87c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _0803c8a8
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0xa4
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080006b4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0803c8a8:	.4byte 0x080e1794
	thumb_func_end sub_0803c87c

	thumb_func_start sub_0803c8ac
sub_0803c8ac:
	push	{ r4, lr }
	mov		r1, #0x86
	lsl		r1, r1, #0x1
	add		r3, r0, r1
	ldr		r0, _0803c8dc
	ldr		r1, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	mov		r4, #0x0
	ldrsh	r2, [r0, r4]
	ldr		r0, [r3, #0x0]
	add		r0, r0, r2
	str		r0, [r3, #0x0]
	ldr		r2, _0803c8e0
	add		r1, r1, r2
	mov		r4, #0x0
	ldrsh	r1, [r1, r4]
	cmp		r0, r1
	bge		_0803c8d6
	str		r1, [r3, #0x0]
_0803c8d6:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0803c8dc:	.4byte 0x0200D51C
_0803c8e0:	.4byte 0x00000534
	thumb_func_end sub_0803c8ac

	thumb_func_start sub_0803c8e4
sub_0803c8e4:
	push	{ lr }
	add		r3, r0, #0x0
	add		r3, #0xf6
	mov		r2, #0x0
	mov		r1, #0x4
	strb	r1, [r3, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xf0
	strh	r2, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803c904
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0803c904:	.4byte 0xFFFF8002
	thumb_func_end sub_0803c8e4

	thumb_func_start sub_0803c908
sub_0803c908:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	add		r6, r4, #0x0
	add		r6, #0x40
	ldr		r5, _0803c960
	str		r5, [r4, #0x4c]
	ldr		r0, _0803c964
	str		r0, [r4, #0xc]
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803c92c
	mov		r1, #0x3
	bl		sub_0803c87c
_0803c92c:
	str		r5, [r4, #0x4c]
	ldr		r0, _0803c968
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x58
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_0803c95a
	add		r0, r4, #0x0
	bl		sub_080b74c8
_0803c95a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803c960:	.4byte 0x080e17ac
_0803c964:	.4byte 0x080e172c
_0803c968:	.4byte 0x080e17c4

.incbin "base.gba", 0x3C96C, 0x24
	thumb_func_end sub_0803c908

	thumb_func_start sub_0803c990
sub_0803c990:
	push	{ lr }
	add		r0, #0xf8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_0803c9a4
	ldr		r0, _0803c9a0
	b		_0803c9be

.incbin "base.gba", 0x3C99E, 0x2

_0803c9a0:	.4byte 0x080d3164 @ ms_ta_0055

_0803c9a4:
	cmp		r0, #0x0
	bne		_0803c9b0
	ldr		r0, _0803c9ac
	b		_0803c9be

_0803c9ac:	.4byte 0x080d3170 @ ms_ta_0042

_0803c9b0:
	cmp		r0, #0x1
	beq		_0803c9bc
	ldr		r0, _0803c9b8
	b		_0803c9be

_0803c9b8:	.4byte 0x080d3188 @ ms_ta_0059

_0803c9bc:
	ldr		r0, _0803c9c8
_0803c9be:
	bl		sub_0800f354
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3C9C6, 0x2

_0803c9c8:	.4byte 0x080d317c @ ms_ta_0050
	thumb_func_end sub_0803c990

	thumb_func_start sub_0803c9cc
sub_0803c9cc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r4, #0x58
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r5, #0x0
	add		r0, #0xf4
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xc1
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	mov		r0, #0x19
	strh	r0, [r1, #0x0]
	add		r1, #0x42
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803ca18
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3CA16, 0x2

_0803ca18:	.4byte 0xFFFF8001
	thumb_func_end sub_0803c9cc

	thumb_func_start sub_0803ca1c
sub_0803ca1c:
	push	{ lr }
	add		r1, r0, #0x0
	add		r0, #0xfc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803ca30
	add		r0, r1, #0x0
	add		r0, #0x58
	bl		sub_0808e4a0
_0803ca30:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803ca1c

	thumb_func_start sub_0803ca34
sub_0803ca34:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0803ca74
	str		r0, [r6, #0x4c]
	ldr		r0, _0803ca78
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x58
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0803ca6e
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0803ca6e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803ca74:	.4byte 0x080e17ac
_0803ca78:	.4byte 0x080e17c4
	thumb_func_end sub_0803ca34

	thumb_func_start sub_0803ca7c
sub_0803ca7c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0803caa4
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0803ca9c
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0803ca9c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3CAA2, 0x2

_0803caa4:	.4byte 0x080e16dc

.incbin "base.gba", 0x3CAA8, 0x1C
	thumb_func_end sub_0803ca7c

	thumb_func_start sub_0803cac4
sub_0803cac4:
	push	{ r4, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r4, #0xe8
	ldr		r1, _0803cafc
	add		r0, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r1, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r4, #0x0
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0803cafc:	.4byte 0x080d30f8
	thumb_func_end sub_0803cac4

	thumb_func_start sub_0803cb00
sub_0803cb00:
	push	{ lr }
	add		r2, r1, #0x0
	ldr		r1, [r0, #0x2c]
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3CB10, 0x60
	thumb_func_end sub_0803cb00

	thumb_func_start sub_0803cb70
sub_0803cb70:
	push	{ lr }
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3CB7E, 0x3A
	thumb_func_end sub_0803cb70

	thumb_func_start sub_0803cbb8
sub_0803cbb8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r1, #0xe8
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3CBCC, 0x2C
	thumb_func_end sub_0803cbb8

	thumb_func_start sub_0803cbf8
sub_0803cbf8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r8, r0
	bl		sub_080b74f4
	ldr		r0, _0803ce08
	mov		r1, r8
	str		r0, [r1, #0xc]
	bl		sub_080706ac
	mov		r3, r8
	str		r0, [r3, #0x60]
	mov		r7, r8
	add		r7, #0x68
	mov		r0, #0x3
	add		r3, #0x40
	str		r3, [sp, #0x0]
_0803cc22:
	add		r6, r7, #0x0
	mov		r1, #0x9
	mov		r9, r1
	sub		r0, #0x1
	mov		r10, r0
	add		r5, r7, #0x0
	add		r5, #0x70
_0803cc30:
	add		r0, r6, #0x0
	bl		sub_080006ec
	ldr		r3, _0803ce0c
	str		r3, [r6, #0xc]
	add		r4, r6, #0x0
	add		r4, #0x14
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r6, #0x0
	add		r0, #0x84
	bl		sub_0808b374
	mov		r0, #0x0
	str		r0, [r5, #0x10]
	bl		sub_080706ac
	str		r0, [r5, #0x34]
	add		r0, r4, #0x0
	mov		r1, #0x13
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, #0x1
	strb	r1, [r5, #0xd]
	mov		r3, #0x14
	strh	r3, [r5, #0x0]
	add		r5, #0xa8
	add		r6, #0xa8
	mov		r0, #0x1
	neg		r0, r0
	add		r9, r0
	cmp		r9, r0
	bne		_0803cc30
	mov		r1, #0xd2
	lsl		r1, r1, #0x3
	add		r7, r7, r1
	mov		r0, r10
	mov		r3, #0x1
	neg		r3, r3
	cmp		r0, r3
	bne		_0803cc22
	ldr		r5, _0803ce10
	ldr		r0, _0803ce14
	add		r4, r5, r0
	add		r0, r4, #0x0
	mov		r1, #0xda
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x0
	mov		r2, #0x1
	bl		sub_0803df18
	add		r1, r0, #0x0
	mov		r3, r8
	str		r1, [r3, #0x50]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0803eba0
	add		r1, r0, #0x0
	mov		r0, r8
	str		r1, [r0, #0x54]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0803eba0
	add		r1, r0, #0x0
	mov		r3, r8
	str		r1, [r3, #0x58]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x2
	mov		r2, #0x3
	bl		sub_0803eba0
	add		r1, r0, #0x0
	mov		r0, r8
	str		r1, [r0, #0x5c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r1, r8
	ldr		r0, [r1, #0x54]
	str		r0, [r1, #0x40]
	ldr		r0, [r1, #0x50]
	str		r0, [r1, #0x44]
	ldr		r0, [r1, #0x58]
	str		r0, [r1, #0x48]
	ldr		r0, [r1, #0x5c]
	str		r0, [r1, #0x4c]
	add		r1, #0x68
	ldr		r3, [sp, #0x0]
	mov		r4, #0xd2
	lsl		r4, r4, #0x3
	mov		r2, #0x3
_0803cd40:
	ldmia	r3!, { r0 }
	str		r1, [r0, #0x58]
	add		r1, r1, r4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0803cd40
	mov		r6, #0x0
	mov		r0, #0xa8
	bl		sub_0808af94
	add		r7, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _0803ce18
	str		r0, [r7, #0xc]
	add		r5, r7, #0x0
	add		r5, #0x14
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r0, r7, #0x0
	add		r0, #0x84
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0x80
	str		r6, [r0, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xa4
	bl		sub_080706ac
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x12
	bl		sub_0808e03c
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	add		r0, #0x7d
	mov		r5, #0x1
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x70
	mov		r2, #0x0
	mov		r0, #0x14
	strh	r0, [r1, #0x0]
	mov		r3, r8
	str		r7, [r3, #0x64]
	ldr		r0, _0803ce1c
	ldr		r0, [r0, #0x0]
	mov		r1, #0xaa
	lsl		r1, r1, #0xc
	ldr		r3, _0803ce20
	add		r0, r0, r3
	str		r1, [r0, #0x0]
	ldr		r0, _0803ce24
	add		r0, r8
	str		r6, [r0, #0x0]
	ldr		r0, _0803ce28
	add		r0, r8
	str		r6, [r0, #0x0]
	ldr		r0, _0803ce2c
	add		r0, r8
	str		r6, [r0, #0x0]
	ldr		r0, _0803ce30
	add		r0, r8
	strb	r2, [r0, #0x0]
	ldr		r0, _0803ce34
	add		r0, r8
	strb	r2, [r0, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x60]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, _0803ce38
	add		r0, r8
	str		r6, [r0, #0x0]
	ldr		r4, _0803ce3c
	add		r4, r8
	str		r6, [r4, #0x0]
	mov		r0, r8
	bl		sub_0803d868
	str		r5, [r4, #0x0]
	mov		r0, r8
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0803ce08:	.4byte 0x080e17ec
_0803ce0c:	.4byte 0x080e1814
_0803ce10:	.4byte 0x0200DB50
_0803ce14:	.4byte 0xFFFFFEB0
_0803ce18:	.4byte 0x080e182c
_0803ce1c:	.4byte 0x0200D528
_0803ce20:	.4byte 0x000005F4
_0803ce24:	.4byte 0x00001B28
_0803ce28:	.4byte 0x00001B2C
_0803ce2c:	.4byte 0x00001B30
_0803ce30:	.4byte 0x00001B38
_0803ce34:	.4byte 0x00001B39
_0803ce38:	.4byte 0x00001B3C
_0803ce3c:	.4byte 0x00001B34
	thumb_func_end sub_0803cbf8

	thumb_func_start sub_0803ce40
sub_0803ce40:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	ldr		r0, _0803ced0
	str		r0, [r6, #0xc]
	ldr		r4, [r6, #0x64]
	cmp		r4, #0x0
	beq		_0803ce76
	ldr		r0, _0803ced4
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0803ce64
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_0803ce64:
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080006b4
_0803ce76:
	add		r5, r6, #0x0
	add		r5, #0x68
	cmp		r5, #0x0
	beq		_0803ceae
	ldr		r0, _0803ced8
	add		r4, r6, r0
	cmp		r5, r4
	beq		_0803ceae
	ldr		r7, _0803cedc
_0803ce88:
	sub		r4, #0xa8
	str		r7, [r4, #0xc]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0803ce98
	add		r0, r4, #0x0
	bl		sub_080b5dc4
_0803ce98:
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	cmp		r5, r4
	bne		_0803ce88
_0803ceae:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803cec6
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0803cec6:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803ced0:	.4byte 0x080e17ec
_0803ced4:	.4byte 0x080e182c
_0803ced8:	.4byte 0x00001AA8
_0803cedc:	.4byte 0x080e1814
	thumb_func_end sub_0803ce40

	thumb_func_start sub_0803cee0
sub_0803cee0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r6, _0803cef8
	cmp		r1, r6
	beq		_0803cf80
	cmp		r1, r6
	bgt		_0803cf00
	ldr		r0, _0803cefc
	cmp		r1, r0
	beq		_0803cf4c
	b		_0803cfae

.incbin "base.gba", 0x3CEF6, 0x2

_0803cef8:	.4byte 0xFFFF8001
_0803cefc:	.4byte 0xFFFF8000

_0803cf00:
	cmp		r1, #0x0
	bne		_0803cfae
	ldr		r0, _0803cf20
	ldr		r4, [r0, #0x0]
	ldr		r0, _0803cf24
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0803cf2c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803cf28
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803cf38

_0803cf20:	.4byte 0x0200D530
_0803cf24:	.4byte 0x00000282
_0803cf28:	.4byte 0xFFFF8000

_0803cf2c:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	add		r2, r6, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_0803cf38:
	add		r6, r5, #0x0
	add		r6, #0x40
	mov		r4, #0x3
_0803cf3e:
	ldmia	r6!, { r0 }
	bl		sub_0803dd64
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803cf3e
	b		_0803cfae
_0803cf4c:
	ldr		r0, [r5, #0x64]
	add		r0, #0x14
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r6, r5, #0x0
	add		r6, #0x40
	mov		r4, #0x3
_0803cf5e:
	ldmia	r6!, { r0 }
	bl		sub_0803dd64
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803cf5e
	mov		r4, #0x1d
_0803cf6c:
	add		r0, r5, #0x0
	bl		sub_0803d2d4
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803cf6c
	b		_0803cfae
_0803cf80:
	ldr		r1, _0803cff0
	ldr		r0, [r1, #0x0]
	ldr		r2, _0803cff4
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	beq		_0803cfa8
	add		r4, r1, #0x0
_0803cf90:
	add		r0, r5, #0x0
	bl		sub_0803d2d4
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	ldr		r1, _0803cff4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_0803cf90
_0803cfa8:
	add		r0, r5, #0x0
	bl		sub_0803d37c
_0803cfae:
	add		r0, r5, #0x0
	bl		sub_0803cffc
	ldr		r0, [r5, #0x60]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	add		r0, r5, #0x0
	bl		sub_0803d244
	ldr		r0, [r5, #0x60]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r2, _0803cff8
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803cfe2
	add		r0, r5, #0x0
	bl		sub_0803d868
_0803cfe2:
	add		r0, r5, #0x0
	bl		sub_0803d37c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3CFEE, 0x2

_0803cff0:	.4byte 0x0200D518
_0803cff4:	.4byte 0x00000101
_0803cff8:	.4byte 0x00001B3C
	thumb_func_end sub_0803cee0

	thumb_func_start sub_0803cffc
sub_0803cffc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	ldr		r1, _0803d044
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	bne		_0803d020
	add		r4, r1, #0x0
_0803d012:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_0803d012
_0803d020:
	ldr		r1, _0803d044
	ldr		r0, [r1, #0x0]
	add		r6, r5, #0x0
	add		r6, #0x40
	cmp		r0, #0x0
	beq		_0803d040
	add		r4, r1, #0x0
_0803d02e:
	add		r0, r5, #0x0
	bl		sub_0803d2d4
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0803d02e
_0803d040:
	mov		r4, #0x0
	b		_0803d04a

_0803d044:	.4byte 0x0200D530

_0803d048:
	add		r4, #0x1
_0803d04a:
	cmp		r4, #0x3b
	bgt		_0803d066
	add		r0, r5, #0x0
	bl		sub_0803d2d4
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803d048
_0803d066:
	ldr		r0, _0803d0e0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	ldr		r2, _0803d0e4
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	ldr		r0, _0803d0e8
	ldr		r0, [r0, #0x0]
	add		r2, #0xa8
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	mov		r4, #0x3
_0803d07e:
	ldmia	r6!, { r0 }
	bl		sub_0803fbf0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803d07e
	ldr		r4, _0803d0ec
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803d0f0
	mov		r3, #0x1
	bl		sub_080b7724
	ldr		r0, [r4, #0x0]
	ldr		r1, _0803d0f4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0803d152
	ldr		r2, _0803d0f8
	add		r7, r5, r2
	mov		r1, #0x1
	mov		r9, r1
	mov		r8, r4
_0803d0ae:
	cmp		r0, #0x3
	bne		_0803d100
	ldr		r0, [r5, #0x64]
	add		r0, #0x14
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r6, r5, #0x0
	add		r6, #0x54
	mov		r4, #0x2
_0803d0c4:
	ldmia	r6!, { r0 }
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803d0fc
	mov		r3, #0x0
	bl		sub_080b7724
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803d0c4
	add		r0, r5, #0x0
	bl		sub_0803d194
	b		_0803d138

.incbin "base.gba", 0x3D0DE, 0x2

_0803d0e0:	.4byte 0x0200D520
_0803d0e4:	.4byte 0x0000057C
_0803d0e8:	.4byte 0x0200D528
_0803d0ec:	.4byte 0x0200D518
_0803d0f0:	.4byte 0xFFFF8000
_0803d0f4:	.4byte 0x00000101
_0803d0f8:	.4byte 0x00001B3C
_0803d0fc:	.4byte 0xFFFF8009

_0803d100:
	cmp		r0, #0x5
	bne		_0803d138
	ldr		r0, [r5, #0x64]
	add		r0, #0x14
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r6, r5, #0x0
	add		r6, #0x54
	mov		r4, #0x2
_0803d116:
	ldmia	r6!, { r0 }
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803d180
	mov		r3, #0x0
	bl		sub_080b7724
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803d116
	mov		r2, r9
	str		r2, [r7, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803d184
	mov		r3, #0x0
	bl		sub_080b7724
_0803d138:
	add		r0, r5, #0x0
	bl		sub_0803d2d4
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldr		r2, _0803d188
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0803d0ae
_0803d152:
	ldr		r0, _0803d18c
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803d190
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r5, #0x64]
	add		r0, #0x14
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0x77
	bl		sub_0808f690
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3D17E, 0x2

_0803d180:	.4byte 0xFFFF8009
_0803d184:	.4byte 0xFFFF8001
_0803d188:	.4byte 0x00000101
_0803d18c:	.4byte 0x0200D520
_0803d190:	.4byte 0xFFFF8000
	thumb_func_end sub_0803cffc

	thumb_func_start sub_0803d194
sub_0803d194:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r1, _0803d230
	ldr		r0, [r1, #0x0]
	ldr		r2, _0803d234
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldr		r6, _0803d238
	cmp		r0, #0x6
	beq		_0803d1c2
	add		r4, r1, #0x0
_0803d1aa:
	add		r0, r5, #0x0
	bl		sub_0803d2d4
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	ldr		r1, _0803d234
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_0803d1aa
_0803d1c2:
	ldr		r4, [r6, #0x0]
	ldr		r2, _0803d23c
	add		r0, r4, r2
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x6
	mov		r2, #0x3f
	mov		r3, #0xf
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0xe
_0803d1e8:
	add		r0, r5, #0x0
	bl		sub_0803d2d4
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803d1e8
	ldr		r4, [r6, #0x0]
	ldr		r1, _0803d23c
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x5
	mov		r2, #0x3f
	mov		r3, #0xf
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803d240
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803d230:	.4byte 0x0200D518
_0803d234:	.4byte 0x00000101
_0803d238:	.4byte 0x080d319c
_0803d23c:	.4byte 0xFFFFFEB0
_0803d240:	.4byte 0xFFFF8000
	thumb_func_end sub_0803d194

	thumb_func_start sub_0803d244
sub_0803d244:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x60]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x1
	mov		r1, #0x20
	bl		sub_0808f5cc
	ldr		r0, [r4, #0x50]
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803d2ce
	ldr		r0, _0803d280
	add		r5, r4, r0
	mov		r6, #0x1
_0803d270:
	ldr		r0, [r4, #0x60]
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x0
	beq		_0803d284
	cmp		r0, #0x1
	beq		_0803d2ae
	b		_0803d2b4

.incbin "base.gba", 0x3D27E, 0x2

_0803d280:	.4byte 0x00001B3C

_0803d284:
	add		r0, r4, #0x0
	bl		sub_0803fcd8
	ldr		r0, [r4, #0x60]
	ldr		r1, [r0, #0x5c]
	cmp		r1, #0x1
	beq		_0803d2a4
	cmp		r1, #0x1
	blt		_0803d2ae
	cmp		r1, #0x4
	bgt		_0803d2ae
	str		r6, [r5, #0x0]
	ldr		r0, [r4, #0x50]
	bl		sub_0803fa0c
	b		_0803d2ce
_0803d2a4:
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_0803d2ae:
	add		r0, r4, #0x0
	bl		sub_0803fcd8
_0803d2b4:
	add		r0, r4, #0x0
	bl		sub_0803d2d4
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x50]
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803d270
_0803d2ce:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803d244

	thumb_func_start sub_0803d2d4
sub_0803d2d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	ldr		r0, _0803d374
	add		r5, r7, r0
	add		r6, r7, #0x0
	add		r6, #0x40
	mov		r4, #0x3
_0803d2e8:
	ldmia	r6!, { r0 }
	ldr		r1, [r5, #0x0]
	bl		sub_0803fc20
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803d2e8
	mov		r6, #0x0
	ldr		r1, _0803d374
	add		r1, r1, r7
	mov		r9, r1
_0803d2fe:
	mov		r5, #0x0
	lsl		r1, r6, #0x3
	add		r0, r6, #0x1
	mov		r8, r0
	sub		r1, r1, r6
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r0, #0x68
	add		r4, r7, r0
_0803d312:
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_0803f6e4
	add		r4, #0xa8
	add		r5, #0x1
	cmp		r5, #0x9
	ble		_0803d312
	mov		r6, r8
	cmp		r6, #0x3
	ble		_0803d2fe
	ldr		r0, [r7, #0x50]
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	ldr		r0, _0803d374
	add		r2, r7, r0
	ldr		r1, [r2, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r1, r3, #0x0
	add		r1, #0xa8
	strh	r0, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	add		r1, #0x2
	strh	r0, [r1, #0x0]
	ldr		r1, [r2, #0x0]
	ldr		r0, _0803d378
	cmp		r1, r0
	bgt		_0803d368
	ldr		r0, [r7, #0x64]
	bl		sub_0803f768
_0803d368:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803d374:	.4byte 0x00001B2C
_0803d378:	.4byte 0x00005BFF
	thumb_func_end sub_0803d2d4

	thumb_func_start sub_0803d37c
sub_0803d37c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x118
	mov		r9, r0
	ldr		r0, _0803d4e8
	add		r0, r9
	ldr		r0, [r0, #0x0]
	ldr		r6, _0803d4ec
	mov		r1, sp
	add		r1, #0x14
	str		r1, [sp, #0xEC]
	mov		r2, sp
	add		r2, #0x18
	str		r2, [sp, #0xF0]
	mov		r3, sp
	add		r3, #0x1a
	str		r3, [sp, #0xF8]
	mov		r4, sp
	add		r4, #0x19
	str		r4, [sp, #0xF4]
	add		r1, #0x7
	str		r1, [sp, #0xFC]
	add		r2, #0x8
	str		r2, [sp, #0x100]
	add		r3, #0x16
	str		r3, [sp, #0x108]
	add		r4, #0x18
	str		r4, [sp, #0x10C]
	add		r1, #0x17
	str		r1, [sp, #0x110]
	add		r2, #0x20
	str		r2, [sp, #0x114]
	cmp		r0, #0x0
	bne		_0803d400
	mov		r3, r9
	ldr		r0, [r3, #0x50]
	mov		r4, #0xc0
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	ldr		r1, _0803d4f0
	cmp		r0, r1
	bgt		_0803d400
	ldr		r4, _0803d4e8
	add		r4, r9
	add		r5, r1, #0x0
_0803d3de:
	mov		r0, r9
	bl		sub_0803d2d4
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0803d400
	mov		r1, r9
	ldr		r0, [r1, #0x50]
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, r5
	ble		_0803d3de
_0803d400:
	add		r0, sp, #0x4
	ldr		r1, [r6, #0x0]
	ldmia	r1!, { r2, r3, r4 }
	stmia	r0!, {  r2, r3, r4 }
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
	mov		r3, #0x0
	str		r3, [sp, #0xC0]
	mov		r4, #0x40
	add		r4, r9
	mov		r8, r4
_0803d416:
	ldr		r0, [sp, #0xC0]
	add		r0, #0x1
	str		r0, [sp, #0x104]
	mov		r10, r0
	cmp		r0, #0x3
	ble		_0803d424
	b		_0803d5b8
_0803d424:
	ldr		r1, _0803d4e8
	add		r1, r9
	str		r1, [sp, #0xC8]
	ldr		r2, [sp, #0xC0]
	lsl		r0, r2, #0x2
	add		r0, sp
	add		r0, #0x4
	str		r0, [sp, #0xCC]
	mov		r3, r8
	str		r3, [sp, #0xD0]
	ldr		r6, [sp, #0xEC]
	mov		r4, sp
	add		r4, #0x16
	str		r4, [sp, #0xD4]
	mov		r0, sp
	add		r0, #0x15
	str		r0, [sp, #0xD8]
	mov		r1, sp
	add		r1, #0x1e
	str		r1, [sp, #0xDC]
	mov		r2, sp
	add		r2, #0x1d
	str		r2, [sp, #0xE0]
	ldr		r3, [sp, #0x104]
	lsl		r0, r3, #0x2
	add		r5, r0, #0x0
	add		r5, sp
	add		r5, #0x4
_0803d45c:
	mov		r4, #0x0
	str		r4, [sp, #0xC4]
	ldr		r1, [sp, #0xC8]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0803d4f4
	ldr		r2, [sp, #0xCC]
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x2
	ldr		r3, [sp, #0xD0]
	add		r0, r3, r0
	ldr		r1, [r0, #0x0]
	mov		r4, #0xbe
	lsl		r4, r4, #0x1
	add		r1, r1, r4
	add		r0, sp, #0x14
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r6, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0xD0]
	add		r0, r1, r0
	ldr		r1, [r0, #0x0]
	add		r1, r1, r4
	ldr		r0, [sp, #0xF0]
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r2, [sp, #0xD4]
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	ldr		r3, [sp, #0xF8]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	ldr		r4, [sp, #0xC0]
	lsl		r7, r4, #0x2
	cmp		r1, r0
	blt		_0803d596
	cmp		r1, r0
	bgt		_0803d59c
	ldr		r0, [sp, #0xD8]
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r2, [sp, #0xF4]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0803d596
	cmp		r1, r0
	bgt		_0803d59c
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	ldr		r3, [sp, #0xF0]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	mov		r2, #0x0
	cmp		r1, r0
	blt		_0803d596
	cmp		r1, r0
	ble		_0803d4e2
	mov		r2, #0x1
_0803d4e2:
	cmp		r2, #0x0
	beq		_0803d596
	b		_0803d59c

_0803d4e8:	.4byte 0x00001B3C
_0803d4ec:	.4byte 0x080d31b0
_0803d4f0:	.4byte 0x000B53FF

_0803d4f4:
	ldr		r4, [sp, #0xCC]
	ldr		r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, #0xc9
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	ldr		r3, [sp, #0xC0]
	lsl		r7, r3, #0x2
	cmp		r0, #0x0
	beq		_0803d59c
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r4, #0xc9
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803d596
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, sp, #0x14
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r6, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r4, sp, #0x1c
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r3, [sp, #0xD4]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r2, [sp, #0xDC]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0803d596
	cmp		r1, r0
	bgt		_0803d592
	ldr		r3, [sp, #0xD8]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r2, [sp, #0xE0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0803d596
	cmp		r1, r0
	bgt		_0803d592
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	mov		r2, #0x0
	cmp		r1, r0
	blt		_0803d596
	cmp		r1, r0
	ble		_0803d58e
	mov		r2, #0x1
_0803d58e:
	cmp		r2, #0x0
	beq		_0803d596
_0803d592:
	mov		r3, #0x1
	str		r3, [sp, #0xC4]
_0803d596:
	ldr		r4, [sp, #0xC4]
	cmp		r4, #0x0
	beq		_0803d5aa
_0803d59c:
	mov		r0, sp
	add		r0, r0, r7
	add		r0, #0x4
	ldr		r2, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	str		r1, [r0, #0x0]
	str		r2, [r5, #0x0]
_0803d5aa:
	add		r5, #0x4
	mov		r0, #0x1
	add		r10, r0
	mov		r1, r10
	cmp		r1, #0x3
	bgt		_0803d5b8
	b		_0803d45c
_0803d5b8:
	ldr		r2, [sp, #0x104]
	str		r2, [sp, #0xC0]
	cmp		r2, #0x2
	bgt		_0803d5c2
	b		_0803d416
_0803d5c2:
	ldr		r0, _0803d83c
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803d600
	mov		r3, r9
	ldr		r0, [r3, #0x50]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803d840
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r4, r9
	ldr		r0, [r4, #0x54]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803d840
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r4, #0x58]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803d840
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r4, #0x5c]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803d840
	mov		r3, #0x0
	bl		sub_080b7724
_0803d600:
	ldr		r4, _0803d844
	ldr		r1, _0803d848
	add		r0, r4, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x0
	bl		sub_080300ac
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _0803d84c
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0xE4]
	ldr		r0, _0803d850
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	ldr		r0, [sp, #0x4]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r2, #0xc9
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldr		r3, [sp, #0xF0]
	strb	r0, [r3, #0x0]
	ldr		r0, [sp, #0x8]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldr		r4, [sp, #0xF4]
	strb	r0, [r4, #0x0]
	ldr		r0, [sp, #0xC]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldr		r1, [sp, #0xF8]
	strb	r0, [r1, #0x0]
	ldr		r0, [sp, #0x10]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldr		r2, [sp, #0xFC]
	strb	r0, [r2, #0x0]
	ldr		r0, [sp, #0xEC]
	ldr		r1, [sp, #0xF0]
	mov		r2, #0x4
	bl		sub_0808c818
	ldr		r0, [sp, #0x4]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0803ddd4
	str		r0, [sp, #0x30]
	ldr		r0, [sp, #0x8]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0803ddd4
	str		r0, [sp, #0x34]
	ldr		r0, [sp, #0xC]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0803ddd4
	str		r0, [sp, #0x38]
	ldr		r0, [sp, #0x10]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0803ddd4
	str		r0, [sp, #0x3C]
	ldr		r0, [sp, #0x100]
	ldr		r1, [sp, #0x108]
	mov		r2, #0x10
	bl		sub_0808c818
	ldr		r4, [sp, #0x108]
	ldr		r3, _0803d83c
	add		r3, r9
	str		r3, [sp, #0xE8]
	ldr		r6, [sp, #0x114]
	add		r5, sp, #0x4
	mov		r7, #0x3
_0803d6cc:
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	ldr		r0, [sp, #0xF0]
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x1
	beq		_0803d73a
	mov		r2, r9
	ldr		r1, [r2, #0x44]
	mov		r3, #0xbe
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r2, #0x0
	ldr		r0, [sp, #0xF0]
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r1, r0
	bne		_0803d72c
	ldr		r3, [sp, #0xF4]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r3, [sp, #0x10C]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_0803d72c
	ldr		r0, [sp, #0xF8]
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r3, [sp, #0x110]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_0803d72c
	mov		r2, #0x1
_0803d72c:
	cmp		r2, #0x0
	beq		_0803d73a
	ldr		r0, [sp, #0xF0]
	mov		r1, #0x1
	mov		r2, #0x4
	bl		sub_0802d230
_0803d73a:
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803d77e
	ldr		r2, [sp, #0xE8]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0803d77e
	add		r0, sp, #0x34
	ldr		r1, _0803d854
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, sp, #0x30
	add		r1, sp, #0x34
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [sp, #0xF0]
	add		r1, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
_0803d77e:
	add		r0, r4, #0x0
	ldr		r1, [sp, #0xF0]
	mov		r2, #0x3
	bl		sub_0808c818
	ldrb	r1, [r4, #0x0]
	ldr		r3, [sp, #0x10C]
	ldrb	r0, [r3, #0x0]
	lsl		r0, r0, #0x8
	orr		r0, r1
	ldr		r2, [sp, #0x110]
	ldrb	r1, [r2, #0x0]
	lsl		r1, r1, #0x10
	orr		r1, r0
	ldr		r3, _0803d858
	and		r1, r3
	mov		r0, r10
	add		r2, r6, #0x0
	bl		sub_0802cfe8
	add		r6, #0x20
	add		r5, #0x4
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0803d6cc
	mov		r0, #0x4
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0xE4]
	ldr		r1, [sp, #0x100]
	ldr		r2, [sp, #0xEC]
	ldr		r3, [sp, #0x114]
	bl		sub_08033028
	mov		r1, #0x0
	ldr		r0, _0803d85c
	add		r0, r10
	str		r1, [r0, #0x0]
	ldr		r0, _0803d860
	ldr		r0, [r0, #0x0]
	ldr		r4, _0803d864
	add		r0, r0, r4
	str		r1, [r0, #0x0]
	ldr		r1, _0803d84c
	ldr		r0, [r1, #0x0]
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803d7fe
	add		r4, r1, #0x0
_0803d7e4:
	mov		r0, r9
	bl		sub_0803d2d4
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	mov		r3, #0xf6
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803d7e4
_0803d7fe:
	mov		r3, #0x0
	mov		r2, r8
	mov		r1, #0x3
_0803d804:
	ldmia	r2!, { r0 }
	mov		r4, #0xca
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	str		r3, [r0, #0x0]
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0803d804
	ldr		r1, _0803d84c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803d82a
	add		r4, r1, #0x0
_0803d81e:
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0803d81e
_0803d82a:
	add		sp, #0x118
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3D83A, 0x2

_0803d83c:	.4byte 0x00001B3C
_0803d840:	.4byte 0xFFFF800A
_0803d844:	.4byte 0x0200DB40
_0803d848:	.4byte 0xFFFFFEC0
_0803d84c:	.4byte 0x0200D534
_0803d850:	.4byte 0x0200D520
_0803d854:	.4byte 0x080d3198
_0803d858:	.4byte 0x00FFFFFF
_0803d85c:	.4byte 0x0000057C
_0803d860:	.4byte 0x0200D528
_0803d864:	.4byte 0x00000624
	thumb_func_end sub_0803d37c

	thumb_func_start sub_0803d868
sub_0803d868:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x64
	str		r0, [sp, #0x34]
	add		r4, sp, #0x18
	ldr		r1, [r0, #0x50]
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r0, #0x1b
	ldr		r3, [sp, #0x34]
	ldr		r1, [r3, #0x54]
	mov		r5, #0xbe
	lsl		r5, r5, #0x1
	add		r1, r1, r5
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r0, #0x1e
	ldr		r6, [sp, #0x34]
	ldr		r1, [r6, #0x58]
	add		r1, r1, r5
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r0, #0x21
	ldr		r1, [r6, #0x5c]
	add		r1, r1, r5
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, sp, #0xc
	add		r1, r4, #0x0
	mov		r2, #0xc
	bl		sub_0808c818
	add		r2, sp, #0x24
	add		r1, r2, #0x0
	ldr		r0, _0803d98c
	ldmia	r0!, { r3, r5, r6 }
	stmia	r1!, {  r3, r5, r6 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x38]
	mov		r1, sp
	add		r1, #0xe
	str		r1, [sp, #0x60]
	sub		r2, #0x17
	str		r2, [sp, #0x5C]
_0803d8e0:
	ldr		r3, [sp, #0x38]
	add		r3, #0x1
	mov		r10, r3
	mov		r5, r10
	str		r5, [sp, #0x3C]
	cmp		r3, #0x3
	ble		_0803d8f0
	b		_0803da6c
_0803d8f0:
	ldr		r6, [sp, #0x38]
	lsl		r6, r6, #0x1
	str		r6, [sp, #0x40]
	ldr		r0, [sp, #0x38]
	add		r0, r6, r0
	str		r0, [sp, #0x44]
	add		r7, r0, #0x0
	add		r7, sp
	add		r7, #0xc
	add		r1, sp, #0x18
	mov		r9, r1
	mov		r2, sp
	add		r2, #0x19
	str		r2, [sp, #0x48]
	mov		r3, sp
	add		r3, #0x1a
	str		r3, [sp, #0x4C]
	ldr		r5, [sp, #0x38]
	lsl		r0, r5, #0x2
	mov		r6, sp
	add		r6, r6, r0
	add		r6, #0x24
	str		r6, [sp, #0x50]
	add		r0, sp
	add		r0, #0x24
	str		r0, [sp, #0x58]
	mov		r1, r10
	lsl		r0, r1, #0x2
	add		r0, sp
	add		r0, #0x24
	mov		r8, r0
	lsl		r0, r1, #0x1
	add		r0, r10
	add		r6, r0, #0x0
	add		r6, sp
	add		r6, #0xc
_0803d938:
	mov		r0, r9
	add		r1, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r2, #0x0
	mov		r1, #0x0
	ldrsb	r1, [r7, r1]
	mov		r3, r9
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	mov		r4, sp
	add		r4, #0x1a
	cmp		r1, r0
	bne		_0803d974
	mov		r1, #0x1
	ldrsb	r1, [r7, r1]
	ldr		r5, [sp, #0x48]
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r1, r0
	bne		_0803d974
	mov		r1, #0x2
	ldrsb	r1, [r7, r1]
	ldr		r3, [sp, #0x4C]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_0803d974
	mov		r2, #0x1
_0803d974:
	cmp		r2, #0x0
	beq		_0803d99e
	ldr		r5, [sp, #0x50]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x2
	bne		_0803d990
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0802d230
	b		_0803d99e

_0803d98c:	.4byte 0x080d31b4

_0803d990:
	ldr		r0, [sp, #0x44]
	add		r0, sp
	add		r0, #0xc
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0802d230
_0803d99e:
	mov		r0, #0x0
	add		r1, sp, #0x54
	strb	r0, [r1, #0x0]
	ldr		r5, [sp, #0x44]
	add		r5, sp
	add		r5, #0xc
	add		r0, sp, #0x18
	add		r1, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r1, #0x2
	ldrsb	r1, [r5, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r1, r0
	blt		_0803d9f0
	cmp		r1, r0
	bgt		_0803da22
	mov		r1, #0x1
	ldrsb	r1, [r5, r1]
	ldr		r2, [sp, #0x48]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_0803d9f0
	cmp		r1, r0
	bgt		_0803da22
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r3, sp
	mov		r0, #0x18
	ldrsb	r0, [r3, r0]
	mov		r2, #0x0
	cmp		r1, r0
	blt		_0803d9f0
	cmp		r1, r0
	ble		_0803d9ec
	mov		r2, #0x1
_0803d9ec:
	cmp		r2, #0x0
	bne		_0803da22
_0803d9f0:
	ldr		r5, [sp, #0x40]
	ldr		r0, [sp, #0x38]
	add		r3, r5, r0
	ldr		r1, [sp, #0x60]
	add		r0, r1, r3
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r2, #0x1
	neg		r2, r2
	cmp		r1, r2
	bne		_0803da28
	ldr		r5, [sp, #0x5C]
	add		r0, r5, r3
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	cmp		r2, r1
	bne		_0803da28
	mov		r0, sp
	add		r0, r0, r3
	add		r0, #0xc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r2
	bne		_0803da28
_0803da22:
	mov		r0, #0x1
	add		r1, sp, #0x54
	strb	r0, [r1, #0x0]
_0803da28:
	add		r2, sp, #0x54
	ldrb	r2, [r2, #0x0]
	cmp		r2, #0x0
	beq		_0803da5a
	mov		r0, r9
	add		r1, r7, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r6, #0x0
	mov		r1, r9
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r3, [sp, #0x58]
	ldr		r1, [r3, #0x0]
	mov		r5, r8
	ldr		r0, [r5, #0x0]
	str		r0, [r3, #0x0]
	str		r1, [r5, #0x0]
_0803da5a:
	mov		r0, #0x4
	add		r8, r0
	add		r6, #0x3
	ldr		r1, [sp, #0x3C]
	add		r1, #0x1
	str		r1, [sp, #0x3C]
	cmp		r1, #0x3
	bgt		_0803da6c
	b		_0803d938
_0803da6c:
	mov		r2, r10
	str		r2, [sp, #0x38]
	cmp		r2, #0x2
	bgt		_0803da76
	b		_0803d8e0
_0803da76:
	mov		r3, #0x1
	neg		r3, r3
	mov		r9, r3
	mov		r5, #0x0
	add		r4, sp, #0x24
	add		r6, sp, #0xc
	mov		r8, r6
	ldr		r7, [sp, #0x5C]
	ldr		r6, [sp, #0x60]
_0803da88:
	ldr		r2, [r4, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	str		r0, [sp, #0x4]
	mov		r1, r8
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	str		r0, [sp, #0x8]
	ldr		r0, _0803daec
	add		r1, r5, #0x0
	mov		r3, #0x0
	bl		sub_08006500
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x2
	bne		_0803dab0
	mov		r9, r5
_0803dab0:
	add		r4, #0x4
	mov		r2, #0x3
	add		r8, r2
	add		r7, #0x3
	add		r6, #0x3
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0803da88
	mov		r0, #0x1
	neg		r0, r0
	cmp		r9, r0
	bne		_0803dad4
	ldr		r0, _0803daf0
	ldr		r1, _0803daf4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0803dad4:
	ldr		r3, [sp, #0x34]
	ldr		r5, _0803daf8
	add		r0, r3, r5
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803db00
	ldr		r0, _0803daec
	ldr		r2, _0803dafc
	mov		r1, r9
	bl		sub_0800614c
	b		_0803db0a

_0803daec:	.4byte 0x02000CBC
_0803daf0:	.4byte 0x080d31c4 @ a_kobayashi/minigame/mg_Hurdle.coo
_0803daf4:	.4byte 0x000001FD
_0803daf8:	.4byte 0x00001B34
_0803dafc:	.4byte 0x080d31e8

_0803db00:
	ldr		r0, _0803db1c
	ldr		r1, _0803db20
	ldr		r2, _0803db24
	bl		sub_0800614c
_0803db0a:
	add		sp, #0x64
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3DB1A, 0x2

_0803db1c:	.4byte 0x02000CBC
_0803db20:	.4byte 0x80808080
_0803db24:	.4byte 0x080d31f0
	thumb_func_end sub_0803d868

	thumb_func_start sub_0803db28
sub_0803db28:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r9, r2
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0803db90
	str		r0, [r5, #0x4c]
	ldr		r0, _0803db94
	str		r0, [r5, #0xc]
	bl		sub_080706ac
	str		r0, [r5, #0x54]
	add		r0, r5, #0x0
	add		r0, #0x5c
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0xcc
	bl		sub_0808b374
	add		r0, r5, #0x0
	add		r0, #0xc8
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r0, #0x24
	bl		sub_0808e21c
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r2, #0xac
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	str		r4, [r0, #0x0]
	cmp		r6, #0x1
	beq		_0803dbd8
	cmp		r6, #0x1
	bgt		_0803db98
	cmp		r6, #0x0
	beq		_0803dba2
	b		_0803dc14

.incbin "base.gba", 0x3DB8E, 0x2

_0803db90:	.4byte 0x080e18e4
_0803db94:	.4byte 0x080e18fc

_0803db98:
	cmp		r6, #0x2
	beq		_0803dc00
	cmp		r6, #0x3
	beq		_0803dbec
	b		_0803dc14
_0803dba2:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	mov		r0, #0x0
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0803dbc4
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x16
	strh	r1, [r0, #0x0]
	mov		r2, #0xc7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0x17
	b		_0803dc12
_0803dbc4:
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0xa
	strh	r1, [r0, #0x0]
	mov		r2, #0xc7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0xb
	b		_0803dc12
_0803dbd8:
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0xe
	strh	r1, [r0, #0x0]
	mov		r2, #0xc7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0xf
	b		_0803dc12
_0803dbec:
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x10
	strh	r1, [r0, #0x0]
	mov		r2, #0xc7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0x11
	b		_0803dc12
_0803dc00:
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0xc
	strh	r1, [r0, #0x0]
	mov		r2, #0xc7
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0xd
_0803dc12:
	strh	r0, [r1, #0x0]
_0803dc14:
	mov		r1, #0x0
	str		r1, [r5, #0x58]
	mov		r2, #0xbf
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	sub		r2, #0x1
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	sub		r2, #0x1
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r0, r0, r5
	mov		r12, r0
	str		r1, [r0, #0x0]
	add		r2, #0xc
	add		r0, r5, r2
	mov		r7, #0x0
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x6
	add		r0, r5, r2
	strb	r7, [r0, #0x0]
	ldr		r0, _0803dcc0
	add		r0, r0, r5
	mov		r8, r0
	mov		r2, r9
	strb	r2, [r0, #0x0]
	mov		r0, #0xc9
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	strb	r6, [r4, #0x0]
	ldr		r2, _0803dcc4
	add		r0, r5, r2
	strb	r7, [r0, #0x0]
	add		r2, #0x1
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	ldr		r0, _0803dcc8
	ldr		r1, [r0, #0x0]
	mov		r2, #0x0
	ldrsb	r2, [r4, r2]
	mov		r3, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0803dc80
	mov		r3, #0x1
_0803dc80:
	add		r0, r1, #0x0
	mov		r1, r12
	bl		sub_0802ee9c
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strb	r7, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xec
	mov		r1, #0x15
	bl		sub_0808e03c
	ldr		r2, _0803dccc
	add		r1, r5, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	sub		r0, r0, r1
	sub		r2, #0xd
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3DCBE, 0x2

_0803dcc0:	.4byte 0x00000191
_0803dcc4:	.4byte 0x00000193
_0803dcc8:	.4byte 0x0200D528
_0803dccc:	.4byte 0x00000155
	thumb_func_end sub_0803db28

	thumb_func_start sub_0803dcd0
sub_0803dcd0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803dcf2
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803dcf2
	cmp		r0, #0x3
	beq		_0803dcf2
	cmp		r0, #0x4
	beq		_0803dcf2
	add		r0, r4, #0x0
	add		r0, #0xcc
	bl		sub_0808b3d4
_0803dcf2:
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	beq		_0803dd54
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803dd32
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803dd32
	cmp		r0, #0x3
	beq		_0803dd32
	cmp		r0, #0x4
	beq		_0803dd32
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808b3d4
	ldrb	r0, [r5, #0x0]
	add		r1, r0, #0x1
	strb	r1, [r5, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x1c
	ble		_0803dd32
	mov		r0, #0x0
	strb	r0, [r5, #0x0]
_0803dd32:
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrh	r1, [r0, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xb2
	ldrh	r0, [r0, #0x0]
	add		r2, #0x2
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xec
	bl		sub_0808e4a0
_0803dd54:
	add		r0, r4, #0x0
	add		r0, #0x5c
	bl		sub_0808e4a0
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3DD62, 0x2
	thumb_func_end sub_0803dcd0

	thumb_func_start sub_0803dd64
sub_0803dd64:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r5, #0x0
	strb	r5, [r0, #0x0]
	add		r4, r6, #0x0
	add		r4, #0x5c
	add		r0, r4, #0x0
	bl		sub_0808e278
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r1, r6, #0x0
	add		r1, #0xc5
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r1, _0803ddcc
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	sub		r0, r0, r1
	add		r1, r6, #0x0
	add		r1, #0xb8
	strh	r0, [r1, #0x0]
	mov		r1, #0xc5
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strh	r5, [r0, #0x0]
	sub		r1, #0xa
	add		r0, r6, r1
	str		r5, [r0, #0x0]
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803ddd0
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803ddcc:	.4byte 0x00000191
_0803ddd0:	.4byte 0xFFFF8000
	thumb_func_end sub_0803dd64

	thumb_func_start sub_0803ddd4
sub_0803ddd4:
	push	{ r4, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r1, _0803ddf4
	mov		r0, sp
	mov		r2, #0x4
	bl		sub_0808c818
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrb	r4, [r0, #0x0]
	cmp		r4, #0x3
	bne		_0803ddfc
	ldr		r0, _0803ddf8
	b		_0803de32

_0803ddf4:	.4byte 0x080d3208
_0803ddf8:	.4byte 0x080d320c @ ms_ta_0053

_0803ddfc:
	cmp		r4, #0x0
	bne		_0803de08
	ldr		r0, _0803de04
	b		_0803de32

_0803de04:	.4byte 0x080d3218 @ ms_ta_0044

_0803de08:
	cmp		r4, #0x1
	bne		_0803de14
	ldr		r0, _0803de10
	b		_0803de32

_0803de10:	.4byte 0x080d3224 @ ms_ta_0049

_0803de14:
	cmp		r4, #0x2
	beq		_0803de30
	ldr		r0, _0803de28
	ldr		r1, _0803de2c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	mov		r0, #0x0
	b		_0803de36

_0803de28:	.4byte 0x080d31c4 @ a_kobayashi/minigame/mg_Hurdle.coo
_0803de2c:	.4byte 0x00000313

_0803de30:
	ldr		r0, _0803de40
_0803de32:
	bl		sub_0800f354
_0803de36:
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3DE3E, 0x2

_0803de40:	.4byte 0x080d3230 @ ms_ta_0058
	thumb_func_end sub_0803ddd4

	thumb_func_start sub_0803de44
sub_0803de44:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r7, r6, r0
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	mov		r1, #0xa
	bl		sub_080bbcac
	ldr		r1, [r7, #0x0]
	add		r1, r1, r0
	str		r1, [r7, #0x0]
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803def4
	ldr		r0, _0803df00
	cmp		r1, r0
	ble		_0803def4
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803dee2
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r5, r6, r2
	ldr		r4, _0803df04
	ldr		r1, [r4, #0x0]
	ldr		r0, _0803df08
	add		r1, r1, r0
	mov		r0, sp
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r5, #0x0
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803df0c
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, _0803df10
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803df14
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r6, #0x54]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x55
	bl		sub_0808f690
_0803dee2:
	ldr		r0, [r7, #0x0]
	mov		r1, #0xb9
	lsl		r1, r1, #0xc
	cmp		r0, r1
	ble		_0803deee
	str		r1, [r7, #0x0]
_0803deee:
	mov		r0, #0x1
	mov		r1, r8
	str		r0, [r1, #0x0]
_0803def4:
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803df00:	.4byte 0x000A9FFF
_0803df04:	.4byte 0x0200D520
_0803df08:	.4byte 0x0000056C
_0803df0c:	.4byte 0xFFFF8001
_0803df10:	.4byte 0x0200D518
_0803df14:	.4byte 0xFFFF8003
	thumb_func_end sub_0803de44

	thumb_func_start sub_0803df18
sub_0803df18:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r10, r0
	bl		sub_0803db28
	ldr		r0, _0803dfe8
	mov		r1, r10
	str		r0, [r1, #0x4c]
	ldr		r0, _0803dfec
	str		r0, [r1, #0xc]
	ldr		r0, _0803dff0
	mov		r8, r0
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r1, r10
	mov		r9, r1
	ldr		r0, _0803dff4
	add		r0, r8
	mov		r1, #0xf0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r7, r0, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0803dff8
	str		r0, [r7, #0x4c]
	ldr		r0, _0803dffc
	str		r0, [r7, #0xc]
	add		r6, r7, #0x0
	add		r6, #0x54
	add		r0, r6, #0x0
	bl		sub_0808e21c
	add		r0, r7, #0x0
	add		r0, #0xc4
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xe4
	bl		sub_080706ac
	str		r0, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x27
	bl		sub_0808e03c
	mov		r0, r9
	str		r7, [r0, #0x0]
	mov		r0, r8
	add		r1, r7, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r10
	str		r5, [r0, #0x0]
	mov		r0, #0xd4
	lsl		r0, r0, #0x1
	add		r0, r10
	str		r5, [r0, #0x0]
	mov		r0, #0xd6
	lsl		r0, r0, #0x1
	add		r0, r10
	str		r5, [r0, #0x0]
	mov		r1, #0xbf
	lsl		r1, r1, #0x1
	add		r1, r10
	mov		r0, #0xff
	strb	r0, [r1, #0x0]
	ldr		r1, _0803e000
	add		r1, r10
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r1, #0x0]
	mov		r1, #0xbe
	lsl		r1, r1, #0x1
	add		r1, r10
	strb	r0, [r1, #0x0]
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r10
	strb	r5, [r0, #0x0]
	mov		r0, r10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0803dfe8:	.4byte 0x080e18e4
_0803dfec:	.4byte 0x080e1874
_0803dff0:	.4byte 0x0200DB50
_0803dff4:	.4byte 0xFFFFFEB0
_0803dff8:	.4byte 0x080e18a4
_0803dffc:	.4byte 0x080e18bc
_0803e000:	.4byte 0x0000017D
	thumb_func_end sub_0803df18

	thumb_func_start sub_0803e004
sub_0803e004:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, _0803e104
	ldr		r6, [r0, #0x0]
	ldr		r0, _0803e108
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	beq		_0803e02c
	add		r4, r1, #0x0
_0803e020:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x1
	bne		_0803e020
_0803e02c:
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _0803e108
	add		r1, r1, r6
	mov		r8, r1
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r1, r1, r5
	mov		r10, r1
	add		r0, #0x26
	add		r6, r5, r0
	ldr		r1, _0803e104
	mov		r9, r1
_0803e052:
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x2
	beq		_0803e05e
	cmp		r0, #0x6
	bne		_0803e08c
_0803e05e:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_0803e08c
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_0803e08c
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_0803e08c
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_0803e08c
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
_0803e08c:
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	cmp		r0, r1
	beq		_0803e0aa
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803e170
_0803e0aa:
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x2
	beq		_0803e0ba
	cmp		r0, #0x6
	bne		_0803e118
_0803e0ba:
	bl		sub_080706ac
	ldr		r0, [r0, #0x58]
	cmp		r0, #0x2
	beq		_0803e170
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x2
	beq		_0803e170
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x3
	beq		_0803e170
	bl		sub_080706ac
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x4
	beq		_0803e170
	ldr		r1, _0803e10c
	ldr		r0, [r1, #0x0]
	ldr		r1, _0803e110
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803e114
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803e170

.incbin "base.gba", 0x3E102, 0x2

_0803e104:	.4byte 0x0200D518
_0803e108:	.4byte 0x00000101
_0803e10c:	.4byte 0x0200D51C
_0803e110:	.4byte 0x0000122B
_0803e114:	.4byte 0xFFFF8002

_0803e118:
	mov		r0, #0x4e
	bl		sub_0808f690
	ldr		r0, _0803e148
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0803e12e
	ldrb	r0, [r6, #0x0]
	add		r0, #0x1
	strb	r0, [r6, #0x0]
_0803e12e:
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x2
	bgt		_0803e150
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803e14c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803e164

.incbin "base.gba", 0x3E146, 0x2

_0803e148:	.4byte 0x00000282
_0803e14c:	.4byte 0xFFFF8002

_0803e150:
	ldr		r0, _0803e178
	bl		sub_08002268
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0803e17c
	mov		r3, #0x0
	bl		sub_080b7724
_0803e164:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803e180
	mov		r3, #0x0
	bl		sub_080b7724
_0803e170:
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0803e052

_0803e178:	.4byte 0x00000311
_0803e17c:	.4byte 0xFFFF8004
_0803e180:	.4byte 0xFFFF8007
	thumb_func_end sub_0803e004

	thumb_func_start sub_0803e184
sub_0803e184:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r6, r0, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r4, r6, #0x0
	add		r4, #0x5c
	add		r0, r4, #0x0
	bl		sub_0808e278
	mov		r1, #0xc7
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r2, r6, #0x0
	add		r2, #0xc5
	mov		r0, #0x1
	strb	r0, [r2, #0x0]
	ldr		r1, _0803e274
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	sub		r0, r0, r1
	add		r1, r6, #0x0
	add		r1, #0xb8
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	mov		r9, r0
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r0, r6, r0
	str		r0, [sp, #0x0]
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r8, r0
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r0, r6, r0
	str		r0, [sp, #0x4]
	mov		r0, #0xc7
	lsl		r0, r0, #0x1
	add		r0, r6, r0
	str		r0, [sp, #0x8]
	str		r2, [sp, #0xC]
	ldr		r2, _0803e274
	add		r2, r6, r2
	str		r2, [sp, #0x10]
	str		r1, [sp, #0x14]
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r10, r0
_0803e20c:
	ldr		r1, [r6, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	bne		_0803e216
	b		_0803e380
_0803e216:
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	bne		_0803e21e
	b		_0803e380
_0803e21e:
	cmp		r0, #0x3
	bne		_0803e224
	b		_0803e380
_0803e224:
	cmp		r0, #0x4
	bne		_0803e22a
	b		_0803e380
_0803e22a:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803e242
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803e278
	mov		r3, #0x0
	bl		sub_080b7724
_0803e242:
	mov		r0, #0x0
	mov		r1, #0xf0
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803e25a
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803e27c
	mov		r3, #0x0
	bl		sub_080b7724
_0803e25a:
	mov		r2, #0xd4
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	ldr		r5, [r1, #0x0]
	cmp		r5, #0x0
	beq		_0803e280
	add		r0, r5, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x14
	ble		_0803e298
	mov		r0, r9
	str		r0, [r1, #0x0]
	b		_0803e298

_0803e274:	.4byte 0x00000191
_0803e278:	.4byte 0xFFFF8004
_0803e27c:	.4byte 0xFFFF8003

_0803e280:
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	ldr		r0, [r4, #0x0]
	add		r0, #0x1
	str		r0, [r4, #0x0]
	cmp		r0, #0xf
	ble		_0803e298
	mov		r0, #0x14
	bl		sub_0808f690
	str		r5, [r4, #0x0]
_0803e298:
	ldr		r2, _0803e388
	add		r4, r6, r2
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x9
	bhi		_0803e35e
	ldr		r0, [sp, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	ldrb	r0, [r4, #0x0]
	mov		r2, #0xe2
	mul		r0, r2
	add		r2, #0x71
	add		r0, r0, r2
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803e35e
	mov		r7, #0x5
	mov		r0, r8
	strb	r7, [r0, #0x0]
	mov		r2, r9
	ldr		r1, [sp, #0x4]
	strh	r2, [r1, #0x0]
	add		r5, r6, #0x0
	add		r5, #0x5c
	add		r0, r5, #0x0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0x1
	bl		sub_0808f690
	ldrb	r0, [r4, #0x0]
	mov		r1, #0xa8
	mul		r0, r1
	ldr		r1, [r6, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r3, r6, r2
	ldr		r0, _0803e38c
	ldr		r1, [r0, #0x0]
	ldr		r2, _0803e390
	add		r0, r1, r2
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	ldrh	r0, [r3, #0x0]
	sub		r0, r0, r2
	strh	r0, [r3, #0x0]
	ldr		r2, _0803e394
	add		r1, r1, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r1
	bge		_0803e322
	strh	r1, [r3, #0x0]
_0803e322:
	mov		r0, r8
	strb	r7, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0808e278
	ldr		r2, [sp, #0x8]
	ldrh	r1, [r2, #0x0]
	add		r0, r5, #0x0
	bl		sub_0808e03c
	add		r0, r5, #0x0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, #0x1
	ldr		r0, [sp, #0xC]
	strb	r1, [r0, #0x0]
	ldr		r2, [sp, #0x10]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0xf
	sub		r0, r1, r0
	ldr		r2, [sp, #0x14]
	strh	r0, [r2, #0x0]
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803e398
	mov		r3, #0x0
	bl		sub_080b7724
_0803e35e:
	ldr		r1, [r6, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803e380
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	ldr		r2, _0803e39c
	mov		r3, #0x0
	bl		sub_080b7724
_0803e380:
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0803e20c

_0803e388:	.4byte 0x00000193
_0803e38c:	.4byte 0x0200D51C
_0803e390:	.4byte 0x00001227
_0803e394:	.4byte 0x0000122C
_0803e398:	.4byte 0xFFFF8005
_0803e39c:	.4byte 0xFFFF8006
	thumb_func_end sub_0803e184

	thumb_func_start sub_0803e3a0
sub_0803e3a0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r4, #0x0
	mov		r0, #0x4
	strb	r0, [r1, #0x0]
	add		r6, r5, #0x0
	add		r6, #0x5c
	add		r0, r6, #0x0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, #0xc5
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r4, [r0, #0x0]
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r4, r5, r2
	mov		r0, #0x0
	ldrsh	r3, [r4, r0]
	mov		r8, r3
	ldr		r3, _0803e40c
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r2, _0803e410
	add		r0, r1, r2
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	ldrh	r0, [r4, #0x0]
	sub		r0, r0, r2
	strh	r0, [r4, #0x0]
	ldr		r2, _0803e414
	add		r1, r1, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r10, r3
	cmp		r0, r1
	bge		_0803e404
	strh	r1, [r4, #0x0]
_0803e404:
	mov		r3, #0x0
	mov		r9, r3
	b		_0803e41e

.incbin "base.gba", 0x3E40A, 0x2

_0803e40c:	.4byte 0x080d323c
_0803e410:	.4byte 0x00001225
_0803e414:	.4byte 0x0000122C

_0803e418:
	add		r0, r5, #0x0
	bl		sub_080b7690
_0803e41e:
	ldr		r1, [r5, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803e418
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803e418
	cmp		r0, #0x3
	beq		_0803e418
	cmp		r0, #0x4
	beq		_0803e418
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r3, _0803e49c
	add		r4, r5, r3
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x9
	bls		_0803e44e
	b		_0803e55a
_0803e44e:
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	ldrb	r3, [r4, #0x0]
	mov		r0, #0xe2
	mul		r0, r3
	ldr		r2, _0803e4a0
	add		r0, r0, r2
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803e55a
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	ldrh	r0, [r2, #0x0]
	sub		r0, #0xa
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x5
	bhi		_0803e4a4
	mov		r0, #0xa8
	mul		r0, r3
	ldr		r1, [r5, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	mov		r1, #0x1
	mov		r9, r1
	b		_0803e55a

_0803e49c:	.4byte 0x00000193
_0803e4a0:	.4byte 0x00000153

_0803e4a4:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r1, #0x0
	mov		r7, #0x5
	strb	r7, [r0, #0x0]
	strh	r1, [r2, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0x1
	bl		sub_0808f690
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xa8
	mul		r0, r1
	ldr		r1, [r5, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	mov		r1, r8
	strh	r1, [r2, #0x0]
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r3, _0803e584
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r3, r8
	sub		r0, r3, r0
	strh	r0, [r2, #0x0]
	ldr		r3, _0803e588
	add		r1, r1, r3
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r1
	bge		_0803e510
	strh	r1, [r2, #0x0]
_0803e510:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strb	r7, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0808e278
	mov		r2, #0xc7
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0808e03c
	add		r0, r6, #0x0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xc5
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r3, _0803e58c
	add		r0, r5, r3
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	sub		r0, r0, r1
	add		r1, r5, #0x0
	add		r1, #0xb8
	strh	r0, [r1, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803e590
	mov		r3, #0x0
	bl		sub_080b7724
_0803e55a:
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x14
	beq		_0803e570
	b		_0803e418
_0803e570:
	mov		r1, r9
	cmp		r1, #0x0
	bne		_0803e594
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	mov		r3, r8
	strh	r3, [r0, #0x0]
	b		_0803e5c6

.incbin "base.gba", 0x3E582, 0x2

_0803e584:	.4byte 0x00001227
_0803e588:	.4byte 0x0000122C
_0803e58c:	.4byte 0x00000191
_0803e590:	.4byte 0xFFFF8005

_0803e594:
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r2, _0803e5ec
	add		r0, r1, r2
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	ldrh	r0, [r4, #0x0]
	sub		r0, r0, r2
	strh	r0, [r4, #0x0]
	ldr		r3, _0803e5f0
	add		r1, r1, r3
	mov		r3, #0x0
	ldrsb	r3, [r1, r3]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r3
	bge		_0803e5c0
	strh	r3, [r4, #0x0]
_0803e5c0:
	mov		r0, #0x1
	bl		sub_0808f690
_0803e5c6:
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, _0803e5f4
	cmp		r1, r0
	bgt		_0803e5fc
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803e5f8
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803e608

_0803e5ec:	.4byte 0x00001226
_0803e5f0:	.4byte 0x0000122C
_0803e5f4:	.4byte 0x000A9FFF
_0803e5f8:	.4byte 0xFFFF8002

_0803e5fc:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803e618
	mov		r3, #0x0
	bl		sub_080b7724
_0803e608:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3E616, 0x2

_0803e618:	.4byte 0xFFFF8006
	thumb_func_end sub_0803e3a0

	thumb_func_start sub_0803e61c
sub_0803e61c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r5, r0, #0x0
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r6, r5, r0
	mov		r0, #0x0
	strh	r0, [r6, #0x0]
	mov		r2, #0xc8
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x5c
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r3, #0xc4
	lsl		r3, r3, #0x1
	add		r2, r5, r3
	ldr		r4, _0803e720
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r1, _0803e724
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldrh	r0, [r2, #0x0]
	sub		r0, r0, r1
	strh	r0, [r2, #0x0]
	ldr		r2, _0803e728
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	mov		r3, #0x0
	str		r3, [sp, #0x4]
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	str		r3, [r0, #0x0]
	mov		r0, #0x4
	bl		sub_0808f690
	ldrh	r0, [r6, #0x0]
	add		r0, #0x1
	strh	r0, [r6, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x9
	bgt		_0803e746
	mov		r2, #0xe2
	mov		r10, r2
	mov		r3, #0xa8
	mov		r9, r3
	mov		r4, #0xc2
	lsl		r4, r4, #0x1
	add		r4, r4, r5
	mov		r8, r4
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r7, r5, r0
_0803e6a2:
	ldr		r1, [r5, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803e72c
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803e72c
	cmp		r0, #0x3
	beq		_0803e72c
	cmp		r0, #0x4
	beq		_0803e72c
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r6, r5, r1
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r3, _0803e728
	add		r4, r5, r3
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x9
	bhi		_0803e716
	ldr		r1, [r6, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	add		r1, r1, r0
	ldrb	r0, [r4, #0x0]
	mov		r2, r10
	mul		r2, r0
	add		r0, r2, #0x0
	sub		r3, #0x40
	add		r0, r0, r3
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803e716
	mov		r0, #0x1
	str		r0, [sp, #0x4]
	mov		r0, #0x2
	bl		sub_0808f690
	ldrb	r0, [r4, #0x0]
	mov		r1, r9
	mul		r1, r0
	add		r0, r1, #0x0
	ldr		r1, [r5, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
_0803e716:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	b		_0803e732

_0803e720:	.4byte 0x080d3240
_0803e724:	.4byte 0x00001224
_0803e728:	.4byte 0x00000193

_0803e72c:
	ldrh	r0, [r7, #0x0]
	sub		r0, #0x1
	strh	r0, [r7, #0x0]
_0803e732:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x9
	ble		_0803e6a2
_0803e746:
	mov		r3, #0xc5
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r4, #0xc2
	lsl		r4, r4, #0x1
	add		r1, r5, r4
	mov		r0, #0xa
	str		r0, [r1, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x5c
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r9, r4
	b		_0803e7de
_0803e76c:
	mov		r1, #0xc5
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x18
	bgt		_0803e7fe
	ldr		r1, [r5, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803e7cc
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803e7cc
	cmp		r0, #0x3
	beq		_0803e7cc
	cmp		r0, #0x4
	beq		_0803e7cc
	ldr		r1, [r5, #0xc]
	mov		r3, #0x28
	ldrsh	r0, [r1, r3]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r4, _0803e7c8
	add		r2, r5, r4
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x9
	bhi		_0803e7d8
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldrb	r3, [r2, #0x0]
	mov		r0, #0xe2
	mul		r0, r3
	sub		r4, #0x40
	add		r0, r0, r4
	lsl		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	ble		_0803e7d8
	add		r0, r3, #0x1
	strb	r0, [r2, #0x0]
	b		_0803e7d8

.incbin "base.gba", 0x3E7C6, 0x2

_0803e7c8:	.4byte 0x00000193

_0803e7cc:
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
_0803e7d8:
	add		r0, r5, #0x0
	bl		sub_080b7690
_0803e7de:
	mov		r2, #0xc5
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x9
	ble		_0803e76c
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001884
	cmp		r0, #0x0
	bne		_0803e76c
_0803e7fe:
	mov		r3, #0x0
	mov		r8, r3
	mov		r10, r3
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	mov		r1, r10
	strh	r1, [r4, #0x0]
	mov		r0, r9
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x18
	bgt		_0803e91a
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r2, r5, r2
	str		r2, [sp, #0x8]
	mov		r3, #0xc2
	lsl		r3, r3, #0x1
	add		r7, r5, r3
	mov		r4, #0xc5
	lsl		r4, r4, #0x1
	add		r6, r5, r4
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	str		r0, [sp, #0xC]
_0803e842:
	ldr		r1, [r5, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803e900
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803e900
	cmp		r0, #0x3
	beq		_0803e900
	cmp		r0, #0x4
	beq		_0803e900
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r3, _0803e8c8
	add		r4, r5, r3
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x9
	bhi		_0803e8ae
	ldr		r0, [sp, #0x8]
	ldr		r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	ldrb	r0, [r4, #0x0]
	mov		r3, #0xe2
	mul		r0, r3
	ldr		r2, _0803e8cc
	add		r0, r0, r2
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803e8ae
	mov		r3, #0x1
	str		r3, [sp, #0x4]
	mov		r0, #0x2
	bl		sub_0808f690
	ldrb	r0, [r4, #0x0]
	mov		r1, #0xa8
	mul		r0, r1
	ldr		r1, [r5, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
_0803e8ae:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0803e8de
	mov		r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp		r0, #0xc
	bgt		_0803e8d0
	mov		r3, #0x1
	mov		r8, r3
	b		_0803e8de

_0803e8c8:	.4byte 0x00000193
_0803e8cc:	.4byte 0x00000153

_0803e8d0:
	cmp		r0, #0x12
	bgt		_0803e8de
	mov		r4, r8
	cmp		r4, #0x0
	bne		_0803e8de
	mov		r0, #0x1
	mov		r10, r0
_0803e8de:
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0xd
	bne		_0803e906
	mov		r0, #0x3
	bl		sub_0808f690
	mov		r3, #0x1
	ldr		r2, [sp, #0xC]
	strb	r3, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xec
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_0803e906
_0803e900:
	ldrh	r0, [r6, #0x0]
	sub		r0, #0x1
	strh	r0, [r6, #0x0]
_0803e906:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldrh	r0, [r6, #0x0]
	add		r0, #0x1
	strh	r0, [r6, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x18
	ble		_0803e842
_0803e91a:
	mov		r4, #0xc2
	lsl		r4, r4, #0x1
	add		r1, r5, r4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, r9
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _0803e974
	add		r0, r5, r1
	ldr		r2, [sp, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	beq		_0803ea0c
	ldr		r3, [sp, #0x4]
	cmp		r3, #0x0
	bne		_0803ea0c
	add		r4, #0x4
	add		r0, r5, r4
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r2, r10
	cmp		r2, #0x0
	beq		_0803e984
	ldr		r0, _0803e978
	ldr		r1, [r0, #0x0]
	ldr		r4, _0803e97c
	add		r0, r1, r4
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	add		r4, #0x4
	add		r0, r1, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r2, r2, r0
	ldr		r0, _0803e980
	add		r1, r1, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	add		r2, r2, r0
	add		r1, r3, r2
	b		_0803e9a0

_0803e974:	.4byte 0x00000193
_0803e978:	.4byte 0x0200D51C
_0803e97c:	.4byte 0x00001224
_0803e980:	.4byte 0x00001229

_0803e984:
	ldr		r0, _0803e9fc
	ldr		r0, [r0, #0x0]
	ldr		r2, _0803ea00
	add		r1, r0, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	ldr		r4, _0803ea04
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r1, r1, r0
	add		r1, r3, r1
_0803e9a0:
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	ldr		r3, _0803ea08
	mov		r4, r10
	cmp		r4, #0x0
	beq		_0803e9b2
	sub		r3, #0x1
_0803e9b2:
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r1, [r1, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x6
	add		r1, r1, r4
	add		r2, r0, #0x0
	add		r2, #0xe8
	str		r1, [r2, #0x0]
	add		r2, #0x4
	mov		r1, #0xc0
	lsl		r1, r1, #0x7
	str		r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	add		r2, r3, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x52
	mov		r1, r10
	cmp		r1, #0x0
	beq		_0803e9ea
	mov		r0, #0x53
_0803e9ea:
	bl		sub_0808f690
	mov		r2, #0xd4
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	b		_0803ea26

_0803e9fc:	.4byte 0x0200D51C
_0803ea00:	.4byte 0x00001224
_0803ea04:	.4byte 0x00001228
_0803ea08:	.4byte 0xFFFF8001

_0803ea0c:
	mov		r3, #0xc4
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	ldr		r0, _0803ea6c
	ldr		r0, [r0, #0x0]
	ldr		r4, _0803ea70
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	ldrh	r2, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
_0803ea26:
	mov		r3, #0xc4
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	ldr		r0, _0803ea6c
	ldr		r4, [r0, #0x0]
	ldr		r2, _0803ea74
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	cmp		r2, r0
	bgt		_0803ea50
	ldr		r3, _0803ea78
	add		r0, r4, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r2, r0
	bge		_0803ea52
_0803ea50:
	strh	r0, [r1, #0x0]
_0803ea52:
	mov		r4, #0xcc
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803ea80
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803ea7c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803ea8c

_0803ea6c:	.4byte 0x0200D51C
_0803ea70:	.4byte 0x00001224
_0803ea74:	.4byte 0x0000122A
_0803ea78:	.4byte 0x0000122C
_0803ea7c:	.4byte 0xFFFF8002

_0803ea80:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803ea9c
	mov		r3, #0x0
	bl		sub_080b7724
_0803ea8c:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803ea9c:	.4byte 0xFFFF8006
	thumb_func_end sub_0803e61c

	thumb_func_start sub_0803eaa0
sub_0803eaa0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r2, #0xc5
	lsl		r2, r2, #0x1
	add		r5, r4, r2
_0803eab4:
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803eada
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803eada
	cmp		r0, #0x3
	beq		_0803eada
	cmp		r0, #0x4
	beq		_0803eada
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	b		_0803eae0
_0803eada:
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	strh	r0, [r5, #0x0]
_0803eae0:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldrh	r0, [r5, #0x0]
	add		r0, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x31
	ble		_0803eab4
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803eb10
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0803eb10:	.4byte 0xFFFF8002
	thumb_func_end sub_0803eaa0

	thumb_func_start sub_0803eb14
sub_0803eb14:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	ldr		r0, _0803eb94
	ldr		r0, [r0, #0x0]
	ldr		r1, _0803eb98
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x5c
	add		r0, r4, #0x0
	bl		sub_0808e278
	mov		r1, #0xc7
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xc5
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r2, _0803eb9c
	add		r0, r5, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	sub		r0, r0, r1
	add		r1, r5, #0x0
	add		r1, #0xb8
	strh	r0, [r1, #0x0]
	mov		r4, #0x3b
_0803eb72:
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0803eb72
_0803eb8c:
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0803eb8c

_0803eb94:	.4byte 0x0200D51C
_0803eb98:	.4byte 0x0000122B
_0803eb9c:	.4byte 0x00000191
	thumb_func_end sub_0803eb14

	thumb_func_start sub_0803eba0
sub_0803eba0:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	bl		sub_0803db28
	ldr		r0, _0803ebd8
	str		r0, [r6, #0x4c]
	ldr		r0, _0803ebdc
	str		r0, [r6, #0xc]
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r2, #0xd7
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strb	r4, [r0, #0x0]
	mov		r0, #0xa6
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0803ebe0
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strb	r4, [r0, #0x0]
	b		_0803ec20

_0803ebd8:	.4byte 0x080e18e4
_0803ebdc:	.4byte 0x080e1844

_0803ebe0:
	ldr		r0, _0803ebf8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0803ebfc
	mov		r2, #0xd6
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803ec20

.incbin "base.gba", 0x3EBF6, 0x2

_0803ebf8:	.4byte 0x00000299

_0803ebfc:
	ldr		r0, _0803ec14
	bl		sub_0800227c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0803ec18
	mov		r0, #0xd6
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	b		_0803ec20

_0803ec14:	.4byte 0x0000029A

_0803ec18:
	mov		r2, #0xd6
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
_0803ec20:
	ldr		r0, _0803ec44
	mov		r1, #0x3
	bl		sub_080b63dc
	ldr		r2, _0803ec48
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803ec4c
	mov		r3, #0x0
	cmp		r0, #0x3
	bne		_0803ec4e
	mov		r3, #0x1
	b		_0803ec4e

_0803ec44:	.4byte 0x0200BDD4
_0803ec48:	.4byte 0x000001AD

_0803ec4c:
	mov		r3, #0x2
_0803ec4e:
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r4, r6, r2
	ldr		r2, _0803ecfc
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r1, r0, #0x7
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, [r2, #0x0]
	add		r1, r1, r0
	lsl		r0, r3, #0x7
	add		r0, r0, r3
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	ldr		r2, _0803ed00
	add		r0, r6, r2
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r0, #0xac
	mul		r0, r2
	add		r1, r1, r0
	str		r1, [r4, #0x0]
	ldr		r5, [r1, #0x0]
	mov		r3, #0x0
	ldr		r0, [r1, #0x8]
	add		r5, r5, r0
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	beq		_0803ecba
	add		r7, r1, #0x0
_0803ec9c:
	add		r3, #0x1
	cmp		r3, #0x14
	bgt		_0803ecba
	ldr		r1, [r4, #0x0]
	lsl		r2, r3, #0x3
	add		r0, r1, #0x0
	add		r0, #0x8
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	add		r5, r5, r0
	add		r1, r1, r2
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	cmp		r0, r7
	bne		_0803ec9c
_0803ecba:
	ldr		r4, _0803ed04
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080bbcac
	mov		r2, #0xbf
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	mul		r0, r4
	sub		r5, r5, r0
	mov		r4, #0x64
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	ldr		r2, _0803ed08
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	mul		r0, r4
	sub		r5, r5, r0
	mov		r1, #0xbe
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0803ecfc:	.4byte 0x0200D51C
_0803ed00:	.4byte 0x000001AD
_0803ed04:	.4byte 0x00001770
_0803ed08:	.4byte 0x0000017D
	thumb_func_end sub_0803eba0

	thumb_func_start sub_0803ed0c
sub_0803ed0c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	mov		r1, #0x0
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	mov		r2, #0xd7
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	ldr		r7, _0803ed84
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r6, r4, r1
_0803ed32:
	ldr		r0, [r7, #0x0]
	ldr		r2, _0803ed88
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0803ed42
	cmp		r0, #0x6
	bne		_0803ed7c
_0803ed42:
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803ed7c
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803ed7c
	cmp		r0, #0x3
	beq		_0803ed7c
	cmp		r0, #0x4
	beq		_0803ed7c
	ldrh	r1, [r5, #0x0]
	add		r0, r1, #0x1
	strh	r0, [r5, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_0803ed7c
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803ed8c
	mov		r3, #0x0
	bl		sub_080b7724
_0803ed7c:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803ed32

_0803ed84:	.4byte 0x0200D518
_0803ed88:	.4byte 0x00000101
_0803ed8c:	.4byte 0xFFFF8002
	thumb_func_end sub_0803ed0c

	thumb_func_start sub_0803ed90
sub_0803ed90:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x5c
	add		r0, r4, #0x0
	bl		sub_0808e278
	mov		r1, #0xc7
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r1, r5, #0x0
	add		r1, #0xc5
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r2, _0803eed4
	add		r0, r5, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	sub		r0, r0, r1
	add		r1, r5, #0x0
	add		r1, #0xb8
	strh	r0, [r1, #0x0]
	mov		r0, #0xd7
	lsl		r0, r0, #0x1
	add		r3, r5, r0
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x0
	ble		_0803ee10
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r2, r5, r1
	sub		r1, #0x4
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	sub		r0, #0x1
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r3, #0x6
	ldrsh	r1, [r1, r3]
	lsl		r1, r1, #0x8
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_0803ee10:
	mov		r0, #0xd4
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r1, r1, r5
	mov		r9, r1
	mov		r2, #0xd4
	lsl		r2, r2, #0x1
	add		r2, r2, r5
	mov		r8, r2
	mov		r3, #0xc0
	lsl		r3, r3, #0x1
	add		r7, r5, r3
	mov		r0, #0xa8
	mov		r10, r0
_0803ee34:
	ldr		r1, [r5, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	bne		_0803ee3e
	b		_0803ef4c
_0803ee3e:
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	bne		_0803ee46
	b		_0803ef4c
_0803ee46:
	cmp		r0, #0x3
	bne		_0803ee4c
	b		_0803ef4c
_0803ee4c:
	cmp		r0, #0x4
	bne		_0803ee52
	b		_0803ef4c
_0803ee52:
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_0803ee74
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803eed8
	mov		r3, #0x0
	bl		sub_080b7724
_0803ee74:
	mov		r0, #0xd7
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x13
	bgt		_0803ef10
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r6, r5, r1
	ldr		r2, [r6, #0x0]
	lsl		r1, r0, #0x3
	add		r0, r2, r1
	mov		r3, #0x6
	ldrsh	r0, [r0, r3]
	mov		r3, #0x1
	neg		r3, r3
	cmp		r0, r3
	beq		_0803ef10
	add		r0, r2, #0x0
	add		r0, #0x8
	add		r0, r0, r1
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	blt		_0803ef10
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	ldr		r1, [r6, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r3, #0x4
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x2
	beq		_0803eee2
	cmp		r0, #0x2
	bgt		_0803eedc
	cmp		r0, #0x1
	beq		_0803eef0
	b		_0803ef10

.incbin "base.gba", 0x3EED2, 0x2

_0803eed4:	.4byte 0x00000191
_0803eed8:	.4byte 0xFFFF8006

_0803eedc:
	cmp		r0, #0x3
	beq		_0803ef04
	b		_0803ef10
_0803eee2:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803eeec
	b		_0803eef6

.incbin "base.gba", 0x3EEEA, 0x2

_0803eeec:	.4byte 0xFFFF8004

_0803eef0:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803ef00
_0803eef6:
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803ef10

.incbin "base.gba", 0x3EEFE, 0x2

_0803ef00:	.4byte 0xFFFF8003

_0803ef04:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803ef54
	mov		r3, #0x0
	bl		sub_080b7724
_0803ef10:
	ldr		r0, _0803ef58
	add		r4, r5, r0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x9
	bhi		_0803ef4c
	ldr		r1, [r7, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	add		r2, r0, #0x0
	mov		r3, #0xe2
	add		r0, r2, #0x0
	mul		r0, r3
	add		r3, #0x71
	add		r0, r0, r3
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803ef4c
	mov		r0, r10
	mul		r0, r2
	ldr		r1, [r5, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
_0803ef4c:
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0803ee34

_0803ef54:	.4byte 0xFFFF8005
_0803ef58:	.4byte 0x00000193
	thumb_func_end sub_0803ed90

	thumb_func_start sub_0803ef5c
sub_0803ef5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r5, r0, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r2, #0x0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	mov		r1, #0xc5
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	strh	r2, [r4, #0x0]
	add		r6, r5, #0x0
	add		r6, #0x5c
	add		r0, r6, #0x0
	mov		r1, #0x1
	bl		sub_0808e3c0
	mov		r2, #0x0
	mov		r9, r2
	mov		r7, #0xd7
	lsl		r7, r7, #0x1
	add		r3, r5, r7
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x0
	ble		_0803efc0
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	sub		r0, #0x1
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r3, #0x6
	ldrsh	r1, [r1, r3]
	lsl		r1, r1, #0x8
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_0803efc0:
	mov		r7, #0xd4
	lsl		r7, r7, #0x1
	add		r0, r5, r7
	mov		r1, r9
	str		r1, [r0, #0x0]
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	str		r6, [sp, #0x4]
	add		r2, r5, #0x0
	add		r2, #0xec
	str		r2, [sp, #0x0]
	cmp		r0, #0xa
	bgt		_0803f08a
	mov		r3, #0xa8
	mov		r10, r3
	sub		r7, #0x24
	add		r7, r7, r5
	mov		r8, r7
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r7, r5, r0
_0803eff0:
	ldr		r1, [r5, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803f070
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803f070
	cmp		r0, #0x3
	beq		_0803f070
	cmp		r0, #0x4
	beq		_0803f070
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r6, r5, r1
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r3, r9
	cmp		r3, #0x0
	bne		_0803f060
	ldr		r0, _0803f06c
	add		r4, r5, r0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x9
	bhi		_0803f060
	ldr		r1, [r6, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	add		r2, r0, #0x0
	mov		r3, #0xe2
	add		r0, r2, #0x0
	mul		r0, r3
	add		r3, #0x71
	add		r0, r0, r3
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803f060
	mov		r0, #0x1
	mov		r9, r0
	mov		r0, r10
	mul		r0, r2
	ldr		r1, [r5, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
_0803f060:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	b		_0803f076

.incbin "base.gba", 0x3F06A, 0x2

_0803f06c:	.4byte 0x00000193

_0803f070:
	ldrh	r0, [r7, #0x0]
	sub		r0, #0x1
	strh	r0, [r7, #0x0]
_0803f076:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xa
	ble		_0803eff0
_0803f08a:
	mov		r2, #0xc5
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r3, #0xc2
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	mov		r0, #0xa
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r4, #0x0
	mov		r7, #0xd0
	lsl		r7, r7, #0x1
	add		r0, r5, r7
	ldr		r1, [r0, #0x0]
	mov		r2, #0xd7
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x3
	add		r1, #0x8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x23
	cmp		r4, r0
	bge		_0803f154
	mov		r3, #0xc0
	lsl		r3, r3, #0x1
	add		r3, r3, r5
	mov		r8, r3
	mov		r7, #0xe2
	mov		r10, r7
	mov		r0, #0xd0
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	str		r0, [sp, #0x8]
	add		r6, r5, r2
_0803f0e2:
	ldr		r1, [r5, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803f134
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803f134
	cmp		r0, #0x3
	beq		_0803f134
	cmp		r0, #0x4
	beq		_0803f134
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r7, _0803f130
	add		r3, r5, r7
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x9
	bhi		_0803f136
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	ldrb	r2, [r3, #0x0]
	mov		r0, r10
	mul		r0, r2
	sub		r7, #0x40
	add		r0, r0, r7
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803f136
	add		r0, r2, #0x1
	strb	r0, [r3, #0x0]
	b		_0803f136

_0803f130:	.4byte 0x00000193

_0803f134:
	sub		r4, #0x1
_0803f136:
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r4, #0x1
	ldr		r0, [sp, #0x8]
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x3
	add		r1, #0x8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x23
	cmp		r4, r0
	blt		_0803f0e2
_0803f154:
	mov		r1, #0xc5
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x19
	bgt		_0803f21a
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r2, r2, r5
	mov		r8, r2
	mov		r3, #0xa8
	mov		r10, r3
	mov		r0, #0xc2
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r1, #0xc5
	lsl		r1, r1, #0x1
	add		r6, r5, r1
_0803f18e:
	ldr		r1, [r5, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803f200
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803f200
	cmp		r0, #0x3
	beq		_0803f200
	cmp		r0, #0x4
	beq		_0803f200
	ldr		r1, [r5, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	mov		r3, r9
	cmp		r3, #0x0
	bne		_0803f206
	ldr		r0, _0803f1fc
	add		r4, r5, r0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x9
	bhi		_0803f206
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r1, r1, r3
	add		r2, r0, #0x0
	mov		r3, #0xe2
	add		r0, r2, #0x0
	mul		r0, r3
	add		r3, #0x71
	add		r0, r0, r3
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803f206
	mov		r0, #0x1
	mov		r9, r0
	mov		r0, r10
	mul		r0, r2
	ldr		r1, [r5, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	b		_0803f206

_0803f1fc:	.4byte 0x00000193

_0803f200:
	ldrh	r0, [r6, #0x0]
	sub		r0, #0x1
	strh	r0, [r6, #0x0]
_0803f206:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldrh	r0, [r6, #0x0]
	add		r0, #0x1
	strh	r0, [r6, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x19
	ble		_0803f18e
_0803f21a:
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	mov		r4, #0x0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r3, #0xc2
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	str		r4, [r0, #0x0]
	mov		r7, #0xcc
	lsl		r7, r7, #0x1
	add		r0, r5, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803f2a4
	mov		r0, #0xd7
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	strb	r0, [r2, #0x0]
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r2, #0x4
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x1
	beq		_0803f284
	cmp		r0, #0x1
	bgt		_0803f272
	cmp		r0, #0x0
	beq		_0803f278
	b		_0803f2b0
_0803f272:
	cmp		r0, #0x3
	beq		_0803f290
	b		_0803f2b0
_0803f278:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803f280
	b		_0803f296

_0803f280:	.4byte 0xFFFF8002

_0803f284:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803f28c
	b		_0803f296

_0803f28c:	.4byte 0xFFFF8003

_0803f290:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803f2a0
_0803f296:
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803f2b0

.incbin "base.gba", 0x3F29E, 0x2

_0803f2a0:	.4byte 0xFFFF8005

_0803f2a4:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _0803f2c0
	mov		r3, #0x0
	bl		sub_080b7724
_0803f2b0:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803f2c0:	.4byte 0xFFFF8006
	thumb_func_end sub_0803ef5c

	thumb_func_start sub_0803f2c4
sub_0803f2c4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r4, r0, #0x0
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x4
	strb	r1, [r0, #0x0]
	mov		r2, #0xd7
	lsl		r2, r2, #0x1
	add		r3, r4, r2
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x0
	ble		_0803f30e
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	sub		r0, #0x1
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r3, #0x6
	ldrsh	r1, [r1, r3]
	lsl		r1, r1, #0x8
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_0803f30e:
	mov		r0, #0xd4
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r3, r4, r1
	mov		r0, #0x0
	ldrsh	r2, [r3, r0]
	str		r2, [sp, #0x0]
	ldr		r5, _0803f400
	ldr		r1, [r5, #0x0]
	ldr		r2, _0803f404
	add		r0, r1, r2
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	ldrh	r0, [r3, #0x0]
	sub		r0, r0, r2
	strh	r0, [r3, #0x0]
	ldr		r2, _0803f408
	add		r1, r1, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r1
	bge		_0803f34a
	strh	r1, [r3, #0x0]
_0803f34a:
	mov		r3, #0x0
	mov		r9, r3
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r8, r0
	mov		r1, #0xc5
	lsl		r1, r1, #0x1
	add		r7, r4, r1
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r2, r4, r2
	str		r2, [sp, #0x4]
	mov		r3, #0xd7
	lsl		r3, r3, #0x1
	add		r6, r4, r3
	mov		r0, #0xd0
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r10, r0
_0803f372:
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	bne		_0803f37c
	b		_0803f4cc
_0803f37c:
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	bne		_0803f384
	b		_0803f4cc
_0803f384:
	cmp		r0, #0x3
	bne		_0803f38a
	b		_0803f4cc
_0803f38a:
	cmp		r0, #0x4
	bne		_0803f390
	b		_0803f4cc
_0803f390:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	ldr		r3, _0803f40c
	add		r5, r4, r3
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x9
	bhi		_0803f3e2
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	ldrb	r2, [r5, #0x0]
	mov		r3, #0xe2
	add		r0, r2, #0x0
	mul		r0, r3
	add		r3, #0x71
	add		r0, r0, r3
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_0803f3e2
	mov		r1, #0xa8
	add		r0, r2, #0x0
	mul		r0, r1
	ldr		r1, [r4, #0x58]
	add		r0, r0, r1
	add		r0, #0x14
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	strb	r0, [r5, #0x0]
	mov		r2, #0x1
	mov		r9, r2
_0803f3e2:
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x14
	bne		_0803f4cc
	mov		r3, r9
	cmp		r3, #0x0
	bne		_0803f410
	mov		r0, sp
	ldrh	r1, [r0, #0x0]
	ldr		r0, [sp, #0x4]
	strh	r1, [r0, #0x0]
	b		_0803f43c

_0803f400:	.4byte 0x0200D51C
_0803f404:	.4byte 0x00001225
_0803f408:	.4byte 0x0000122C
_0803f40c:	.4byte 0x00000193

_0803f410:
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r3, r4, r2
	ldr		r0, _0803f47c
	ldr		r1, [r0, #0x0]
	ldr		r2, _0803f480
	add		r0, r1, r2
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	ldrh	r0, [r3, #0x0]
	sub		r0, r0, r2
	strh	r0, [r3, #0x0]
	ldr		r2, _0803f484
	add		r1, r1, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r1
	bge		_0803f43c
	strh	r1, [r3, #0x0]
_0803f43c:
	add		r0, r4, #0x0
	add		r0, #0x5c
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	ldr		r1, _0803f488
	cmp		r0, r1
	bgt		_0803f4c0
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldrb	r0, [r6, #0x0]
	add		r0, #0x1
	strb	r0, [r6, #0x0]
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r3, #0x4
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x2
	beq		_0803f4a0
	cmp		r0, #0x2
	bgt		_0803f48c
	cmp		r0, #0x0
	beq		_0803f492
	b		_0803f4cc

_0803f47c:	.4byte 0x0200D51C
_0803f480:	.4byte 0x00001226
_0803f484:	.4byte 0x0000122C
_0803f488:	.4byte 0x000A9FFF

_0803f48c:
	cmp		r0, #0x3
	beq		_0803f4ac
	b		_0803f4cc
_0803f492:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803f49c
	b		_0803f4b2

.incbin "base.gba", 0x3F49A, 0x2

_0803f49c:	.4byte 0xFFFF8002

_0803f4a0:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803f4a8
	b		_0803f4b2

_0803f4a8:	.4byte 0xFFFF8004

_0803f4ac:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803f4bc
_0803f4b2:
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803f4cc

.incbin "base.gba", 0x3F4BA, 0x2

_0803f4bc:	.4byte 0xFFFF8005

_0803f4c0:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803f4d4
	mov		r3, #0x0
	bl		sub_080b7724
_0803f4cc:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803f372

_0803f4d4:	.4byte 0xFFFF8006
	thumb_func_end sub_0803f2c4

	thumb_func_start sub_0803f4d8
sub_0803f4d8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r6, #0x0
	mov		r1, #0x5
	strb	r1, [r0, #0x0]
	mov		r2, #0xc5
	lsl		r2, r2, #0x1
	add		r3, r4, r2
	strh	r6, [r3, #0x0]
	mov		r0, #0xd7
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	ble		_0803f520
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	sub		r1, #0x4
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	sub		r0, #0x1
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r0, #0x6
	ldrsh	r1, [r1, r0]
	lsl		r1, r1, #0x8
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_0803f520:
	mov		r1, #0xd4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	str		r6, [r0, #0x0]
	ldrh	r0, [r3, #0x0]
	add		r0, #0x1
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x32
	bgt		_0803f57c
	mov		r2, #0xc5
	lsl		r2, r2, #0x1
	add		r5, r4, r2
_0803f53c:
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803f562
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803f562
	cmp		r0, #0x3
	beq		_0803f562
	cmp		r0, #0x4
	beq		_0803f562
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	b		_0803f568
_0803f562:
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	strh	r0, [r5, #0x0]
_0803f568:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldrh	r0, [r5, #0x0]
	add		r0, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x32
	ble		_0803f53c
_0803f57c:
	add		r0, r4, #0x0
	bl		sub_080b7690
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r1, #0xd7
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	strb	r0, [r2, #0x0]
	sub		r1, #0xe
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r2, #0x4
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x1
	beq		_0803f5e0
	cmp		r0, #0x1
	bgt		_0803f5b8
	cmp		r0, #0x0
	beq		_0803f5be
	b		_0803f5ec
_0803f5b8:
	cmp		r0, #0x2
	beq		_0803f5cc
	b		_0803f5ec
_0803f5be:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803f5c8
	b		_0803f5d2

.incbin "base.gba", 0x3F5C6, 0x2

_0803f5c8:	.4byte 0xFFFF8002

_0803f5cc:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803f5dc
_0803f5d2:
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0803f5ec

.incbin "base.gba", 0x3F5DA, 0x2

_0803f5dc:	.4byte 0xFFFF8004

_0803f5e0:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803f5f4
	mov		r3, #0x0
	bl		sub_080b7724
_0803f5ec:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3F5F2, 0x2

_0803f5f4:	.4byte 0xFFFF8003
	thumb_func_end sub_0803f4d8

	thumb_func_start sub_0803f5f8
sub_0803f5f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r0, #0xd4
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r5, r6, r1
	ldr		r1, [r5, #0x0]
	mov		r2, #0xd7
	lsl		r2, r2, #0x1
	add		r4, r6, r2
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x8
	mov		r8, r0
	cmp		r0, #0x0
	bne		_0803f63a
	ldr		r0, _0803f6d4
	ldr		r1, _0803f6d8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0803f63a:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x14
	beq		_0803f654
	ldr		r1, [r5, #0x0]
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r0, #0x6
	ldrsh	r1, [r1, r0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0803f664
_0803f654:
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0xaa
	lsl		r0, r0, #0xc
	sub		r0, r0, r1
	mov		r8, r0
_0803f664:
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r1, [r0, #0x0]
	add		r2, #0xe
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x3
	add		r1, #0x8
	add		r1, r1, r0
	ldr		r7, [r1, #0x0]
	cmp		r7, #0x0
	bne		_0803f68e
	ldr		r0, _0803f6d4
	ldr		r1, _0803f6dc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0803f68e:
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r5, r6, r0
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	mov		r2, #0xd4
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	mov		r1, r8
	mul		r1, r0
	add		r0, r1, #0x0
	add		r1, r7, #0x0
	bl		sub_080bbcac
	ldr		r1, [r4, #0x0]
	add		r1, r1, r0
	str		r1, [r5, #0x0]
	mov		r2, #0xcc
	lsl		r2, r2, #0x1
	add		r4, r6, r2
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0803f6ca
	ldr		r0, _0803f6e0
	cmp		r1, r0
	ble		_0803f6ca
	mov		r0, #0x1
	str		r0, [r4, #0x0]
_0803f6ca:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803f6d4:	.4byte 0x080d31c4 @ a_kobayashi/minigame/mg_Hurdle.coo
_0803f6d8:	.4byte 0x00000811
_0803f6dc:	.4byte 0x00000817
_0803f6e0:	.4byte 0x000A9FFF
	thumb_func_end sub_0803f5f8

	thumb_func_start sub_0803f6e4
sub_0803f6e4:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	add		r5, r0, #0x0
	mov		r12, r3
	mov		r4, sp
	ldr		r0, _0803f760
	ldmia	r0!, { r3, r6, r7 }
	stmia	r4!, {  r3, r6, r7 }
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	mov		r0, #0xe2
	mul		r0, r2
	asr		r1, r1, #0x8
	sub		r0, r0, r1
	ldr		r1, _0803f764
	add		r0, r0, r1
	add		r1, r5, #0x0
	add		r1, #0x68
	strh	r0, [r1, #0x0]
	mov		r6, r12
	lsl		r3, r6, #0x2
	mov		r7, sp
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	add		r1, #0x2
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xa4
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803f73a
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803f73a
	cmp		r0, #0x3
	beq		_0803f73a
	cmp		r0, #0x4
	beq		_0803f73a
	add		r0, r5, #0x0
	add		r0, #0x84
	bl		sub_0808b3d4
_0803f73a:
	add		r0, r5, #0x0
	add		r0, #0x68
	ldrh	r0, [r0, #0x0]
	add		r0, #0x1f
	lsl		r0, r0, #0x10
	mov		r1, #0x97
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_0803f756
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0803f756:
	add		sp, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3F75E, 0x2

_0803f760:	.4byte 0x080d31f8
_0803f764:	.4byte 0x00000177
	thumb_func_end sub_0803f6e4

	thumb_func_start sub_0803f768
sub_0803f768:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0x88
	lsl		r0, r0, #0x7
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r1, r4, #0x0
	add		r1, #0x68
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x24
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xa4
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803f7a2
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803f7a2
	cmp		r0, #0x3
	beq		_0803f7a2
	cmp		r0, #0x4
	beq		_0803f7a2
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b3d4
_0803f7a2:
	add		r0, r4, #0x0
	add		r0, #0x68
	ldrh	r0, [r0, #0x0]
	add		r0, #0x1f
	lsl		r0, r0, #0x10
	mov		r1, #0x97
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_0803f7be
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0803f7be:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803f768

	thumb_func_start sub_0803f7c4
sub_0803f7c4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, _0803f7dc
	cmp		r1, r0
	beq		_0803f812
	cmp		r1, r0
	bgt		_0803f7e0
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0803f804
	b		_0803f81e

.incbin "base.gba", 0x3F7DA, 0x2

_0803f7dc:	.4byte 0xFFFF8001

_0803f7e0:
	ldr		r0, _0803f800
	cmp		r1, r0
	beq		_0803f7ea
	cmp		r1, #0x0
	bne		_0803f81e
_0803f7ea:
	add		r1, r4, #0x0
	add		r1, #0xbd
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	sub		r1, #0xd
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
_0803f7f8:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803f7f8

_0803f800:	.4byte 0xFFFF8002

_0803f804:
	add		r0, r4, #0x0
	add		r0, #0x54
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_0803f81e
_0803f812:
	add		r0, r4, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
_0803f81e:
	mov		r5, #0x0
	add		r7, r4, #0x0
	add		r7, #0xe4
	add		r6, r4, #0x0
	add		r6, #0x40
_0803f828:
	ldr		r1, [r7, #0x0]
	ldr		r0, [r1, #0x58]
	cmp		r0, #0x2
	beq		_0803f848
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	beq		_0803f848
	cmp		r0, #0x3
	beq		_0803f848
	cmp		r0, #0x4
	beq		_0803f848
	add		r0, r4, #0x0
	add		r0, #0xc4
	bl		sub_0808b3d4
	b		_0803f84a
_0803f848:
	sub		r5, #0x1
_0803f84a:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	cmp		r5, #0x15
	ble		_0803f828
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803f874
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3F872, 0x2

_0803f874:	.4byte 0xFFFF8002

.incbin "base.gba", 0x3F878, 0x194
	thumb_func_end sub_0803f7c4

	thumb_func_start sub_0803fa0c
sub_0803fa0c:
	add		r1, r0, #0x0
	mov		r0, #0xbf
	lsl		r0, r0, #0x1
	add		r2, r1, r0
	mov		r0, #0xff
	strb	r0, [r2, #0x0]
	add		r0, #0x7e
	add		r2, r1, r0
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r2, #0x0]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r1, #0x0]
	bx		lr
	thumb_func_end sub_0803fa0c

	thumb_func_start sub_0803fa30
sub_0803fa30:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x5c
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, _0803fa84
	cmp		r0, r1
	bgt		_0803fa7a
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r5, r4, r2
	add		r6, r1, #0x0
_0803fa60:
	ldr		r1, [r4, #0xc]
	mov		r2, #0x28
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x2c]
	bl		sub_080bbc74
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	cmp		r0, r6
	ble		_0803fa60
_0803fa7a:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803fa7a

.incbin "base.gba", 0x3FA82, 0x2

_0803fa84:	.4byte 0x000B8FFF
	thumb_func_end sub_0803fa30

	thumb_func_start sub_0803fa88
sub_0803fa88:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0803faa8
	cmp		r1, r0
	beq		_0803fb08
	cmp		r1, r0
	bgt		_0803fac0
	sub		r0, #0x3
	cmp		r1, r0
	beq		_0803faf0
	cmp		r1, r0
	bgt		_0803faac
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0803fae2
	b		_0803fb28

_0803faa8:	.4byte 0xFFFF8004

_0803faac:
	ldr		r0, _0803fabc
	cmp		r1, r0
	beq		_0803faf8
	add		r0, #0x1
	cmp		r1, r0
	beq		_0803fb00
	b		_0803fb28

.incbin "base.gba", 0x3FABA, 0x2

_0803fabc:	.4byte 0xFFFF8002

_0803fac0:
	ldr		r0, _0803fad8
	cmp		r1, r0
	beq		_0803fb20
	cmp		r1, r0
	bgt		_0803fadc
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0803fb10
	add		r0, #0x1
	cmp		r1, r0
	beq		_0803fb18
	b		_0803fb28

_0803fad8:	.4byte 0xFFFF8007

_0803fadc:
	ldr		r0, _0803faec
	cmp		r1, r0
	bne		_0803fb28
_0803fae2:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803fae2

.incbin "base.gba", 0x3FAEA, 0x2

_0803faec:	.4byte 0xFFFF800A

_0803faf0:
	add		r0, r4, #0x0
	bl		sub_0803e004
	b		_0803fb30
_0803faf8:
	add		r0, r4, #0x0
	bl		sub_0803e184
	b		_0803fb30
_0803fb00:
	add		r0, r4, #0x0
	bl		sub_0803e3a0
	b		_0803fb30
_0803fb08:
	add		r0, r4, #0x0
	bl		sub_0803e61c
	b		_0803fb30
_0803fb10:
	add		r0, r4, #0x0
	bl		sub_0803eaa0
	b		_0803fb30
_0803fb18:
	add		r0, r4, #0x0
	bl		sub_0803fa30
	b		_0803fb30
_0803fb20:
	add		r0, r4, #0x0
	bl		sub_0803eb14
	b		_0803fb30
_0803fb28:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0803fb28
_0803fb30:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3FB36, 0xBA
	thumb_func_end sub_0803fa88

	thumb_func_start sub_0803fbf0
sub_0803fbf0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x5c
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0803fc1c
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0803fc1c:	.4byte 0xFFFF8001
	thumb_func_end sub_0803fbf0

	thumb_func_start sub_0803fc20
sub_0803fc20:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x10
	add		r3, r0, #0x0
	mov		r2, sp
	ldr		r0, _0803fc7c
	ldmia	r0!, { r4, r5, r6 }
	stmia	r2!, {  r4, r5, r6 }
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r0, #0x24
	add		r1, r3, #0x0
	add		r1, #0xb0
	strh	r0, [r1, #0x0]
	ldr		r4, _0803fc80
	add		r0, r3, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, sp
	ldr		r0, [r0, #0x0]
	add		r2, r3, #0x0
	add		r2, #0xb2
	strh	r0, [r2, #0x0]
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1f
	lsl		r0, r0, #0x10
	mov		r1, #0x97
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_0803fc72
	add		r0, r3, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0803fc72:
	add		sp, #0x10
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3FC7A, 0x2

_0803fc7c:	.4byte 0x080d31f8
_0803fc80:	.4byte 0x00000191
	thumb_func_end sub_0803fc20

	thumb_func_start sub_0803fc84
sub_0803fc84:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0803fcd0
	str		r0, [r6, #0x4c]
	ldr		r0, _0803fcd4
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0xec
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	add		r0, #0x5c
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0803fcc8
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0803fcc8:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3FCCE, 0x2

_0803fcd0:	.4byte 0x080e18e4
_0803fcd4:	.4byte 0x080e18fc
	thumb_func_end sub_0803fc84

	thumb_func_start sub_0803fcd8
sub_0803fcd8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x50]
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r3, _0803fd08
	add		r1, r4, r3
	sub		r3, #0x4
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x6
	cmp		r2, r0
	ble		_0803fd2c
	ldr		r0, _0803fd0c
	cmp		r2, r0
	bgt		_0803fd14
	ldr		r1, _0803fd10
	add		r0, r2, r1
	lsl		r3, r0, #0x8
	b		_0803fd18

_0803fd08:	.4byte 0x00001B30
_0803fd0c:	.4byte 0x000A9FFF
_0803fd10:	.4byte 0xFFFFD000

_0803fd14:
	mov		r3, #0xa7
	lsl		r3, r3, #0x14
_0803fd18:
	ldr		r2, _0803fd34
	ldr		r1, _0803fd38
	ldr		r0, _0803fd3c
	str		r3, [r0, #0x0]
	str		r3, [r1, #0x0]
	str		r3, [r2, #0x0]
	ldr		r0, _0803fd40
	add		r1, r4, r0
	asr		r0, r3, #0x8
	str		r0, [r1, #0x0]
_0803fd2c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3FD32, 0x2

_0803fd34:	.4byte 0x0200CE30
_0803fd38:	.4byte 0x0200CE2C
_0803fd3c:	.4byte 0x0200CE28
_0803fd40:	.4byte 0x00001B2C

.incbin "base.gba", 0x3FD44, 0x174
	thumb_func_end sub_0803fcd8

	thumb_func_start sub_0803feb8
sub_0803feb8:
	push	{ lr }
	add		r3, r1, #0x0
	add		r1, r0, #0x0
	add		r1, #0xe8
	str		r2, [r1, #0x0]
	add		r2, r0, #0x0
	add		r2, #0xec
	mov		r1, #0xc0
	lsl		r1, r1, #0x7
	str		r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	add		r2, r3, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3FEDA, 0x22
	thumb_func_end sub_0803feb8

	thumb_func_start sub_0803fefc
sub_0803fefc:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0803ff3c
	str		r0, [r6, #0x4c]
	ldr		r0, _0803ff40
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0803ff36
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0803ff36:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803ff3c:	.4byte 0x080e18a4
_0803ff40:	.4byte 0x080e18bc
	thumb_func_end sub_0803fefc

	thumb_func_start sub_0803ff44
sub_0803ff44:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0803ff90
	str		r0, [r6, #0x4c]
	ldr		r0, _0803ff94
	str		r0, [r6, #0xc]
	add		r5, r6, #0x0
	add		r5, #0x54
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r0, r6, #0x0
	add		r0, #0xc4
	bl		sub_0808b374
	add		r1, r6, #0x0
	add		r1, #0xc0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r4, r6, #0x0
	add		r4, #0xe4
	bl		sub_080706ac
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x27
	bl		sub_0808e03c
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0803ff90:	.4byte 0x080e18a4
_0803ff94:	.4byte 0x080e18bc

.incbin "base.gba", 0x3FF98, 0x30
	thumb_func_end sub_0803ff44

	thumb_func_start sub_0803ffc8
sub_0803ffc8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3FFE2, 0x2A
	thumb_func_end sub_0803ffc8

	thumb_func_start sub_0804000c
sub_0804000c:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	ldr		r2, _0804001c
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0804001c:	.4byte 0xFFFF800A
	thumb_func_end sub_0804000c

	thumb_func_start sub_08040020
sub_08040020:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _080400ec
	str		r0, [r7, #0x4c]
	ldr		r0, _080400f0
	str		r0, [r7, #0xc]
	add		r4, r7, #0x0
	add		r4, #0x6c
	mov		r5, #0x5
	ldr		r0, _080400f4
	mov		r10, r0
	ldr		r1, _080400f8
	mov		r9, r1
	mov		r2, #0x0
	mov		r8, r2
	mov		r6, #0x1
	neg		r6, r6
_08040058:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r3, r8
	str		r3, [r4, #0x6c]
	add		r4, #0x90
	sub		r5, #0x1
	cmp		r5, r6
	bne		_08040058
	mov		r0, r10
	ldr		r4, [r0, #0x0]
	mov		r0, #0x18
	bl		sub_0808af94
	str		r0, [r4, #0x0]
	mov		r2, #0xf3
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r0, #0xf0
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	mov		r3, #0xf4
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r2, #0xd0
	lsl		r2, r2, #0x8
	str		r2, [r0, #0x0]
	ldr		r0, _080400fc
	ldr		r1, [r1, #0x0]
	lsl		r1, r1, #0x8
	str		r1, [r0, #0x0]
	ldr		r0, _08040100
	lsl		r2, r2, #0x8
	str		r2, [r0, #0x0]
	ldr		r0, _08040104
	str		r1, [r0, #0x0]
	ldr		r0, _08040108
	str		r2, [r0, #0x0]
	ldr		r0, _0804010c
	str		r1, [r0, #0x0]
	ldr		r0, _08040110
	str		r2, [r0, #0x0]
	mov		r0, #0x0
	str		r0, [r7, #0x54]
	str		r0, [r7, #0x58]
	str		r0, [r7, #0x5c]
	str		r0, [r7, #0x60]
	str		r0, [r7, #0x64]
	ldr		r0, _08040114
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08040144
	ldr		r4, [r4, #0x0]
	ldr		r0, _08040118
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08040134
	ldr		r0, _0804011c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08040124
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r2, _08040120
	add		r0, r0, r2
	b		_08040140

_080400ec:	.4byte 0x080e1b34
_080400f0:	.4byte 0x080e1b4c
_080400f4:	.4byte 0x080d3258
_080400f8:	.4byte 0x080d325c
_080400fc:	.4byte 0x0200CE30
_08040100:	.4byte 0x0200CE44
_08040104:	.4byte 0x0200CE2C
_08040108:	.4byte 0x0200CE40
_0804010c:	.4byte 0x0200CE28
_08040110:	.4byte 0x0200CE3C
_08040114:	.4byte 0x00000A03
_08040118:	.4byte 0x00000A02
_0804011c:	.4byte 0x00000A01
_08040120:	.4byte 0x000009BC

_08040124:
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r1, _08040130
	add		r0, r0, r1
	b		_08040140

_08040130:	.4byte 0x00000858

_08040134:
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r3, #0xb2
	lsl		r3, r3, #0x4
	add		r0, r0, r3
_08040140:
	str		r0, [r4, #0x0]
	b		_0804019c
_08040144:
	ldr		r5, [r4, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	mov		r4, #0x0
	cmp		r0, #0x0
	beq		_08040156
	mov		r4, #0x3
_08040156:
	ldr		r0, _08040174
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804018a
	ldr		r0, _08040178
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804017c
	mov		r0, r9
	ldr		r2, [r0, #0x0]
	add		r1, r4, #0x1
	b		_08040190

.incbin "base.gba", 0x40172, 0x2

_08040174:	.4byte 0x00000A02
_08040178:	.4byte 0x00000A01

_0804017c:
	mov		r1, r9
	ldr		r2, [r1, #0x0]
	mov		r0, #0xb2
	lsl		r0, r0, #0x1
	add		r1, r4, #0x0
	mul		r1, r0
	b		_08040196
_0804018a:
	mov		r3, r9
	ldr		r2, [r3, #0x0]
	add		r1, r4, #0x2
_08040190:
	mov		r0, #0xb2
	lsl		r0, r0, #0x1
	mul		r1, r0
_08040196:
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r5, #0x0]
_0804019c:
	ldr		r4, _080401e4
	ldr		r1, _080401e8
	add		r0, r4, r1
	mov		r1, #0xd9
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, _080401ec
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xb4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r1, #0x8
	add		r2, #0xb6
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	sub		r2, #0x2
	mov		r3, #0x10
	bl		sub_08042ad8
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	cmp		r5, #0x0
	beq		_080401f0
	add		r0, r5, #0x0
	add		r0, #0x40
	str		r0, [r7, #0x54]
	b		_080401f2

.incbin "base.gba", 0x401E2, 0x2

_080401e4:	.4byte 0x0200DB90
_080401e8:	.4byte 0xFFFFFE70
_080401ec:	.4byte 0x0200D568

_080401f0:
	str		r5, [r7, #0x54]
_080401f2:
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	str		r5, [r0, #0x4]
	ldr		r5, _08040244
	ldr		r1, _08040248
	add		r0, r5, r1
	mov		r1, #0x95
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, _0804024c
	ldr		r1, [r1, #0x0]
	add		r2, r1, #0x0
	add		r2, #0xc4
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	neg		r2, r2
	add		r3, r1, #0x0
	add		r3, #0xc6
	mov		r4, #0x0
	ldrsh	r3, [r3, r4]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	bl		sub_0804601c
	mov		r8, r0
	add		r0, r5, #0x0
	mov		r1, r8
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, r8
	cmp		r0, #0x0
	beq		_08040250
	add		r0, #0x40
	str		r0, [r7, #0x58]
	b		_08040254

_08040244:	.4byte 0x0200DBA0
_08040248:	.4byte 0xFFFFFE60
_0804024c:	.4byte 0x0200D56C

_08040250:
	mov		r1, r8
	str		r1, [r7, #0x58]
_08040254:
	ldr		r5, _080402a4
	ldr		r2, _080402a8
	add		r0, r5, r2
	mov		r1, #0x9a
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, _080402ac
	ldr		r3, [r1, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x26
	add		r2, r3, #0x0
	add		r2, #0xc8
	mov		r4, #0x0
	ldrsh	r2, [r2, r4]
	neg		r2, r2
	add		r3, #0xca
	mov		r4, #0x0
	ldrsh	r3, [r3, r4]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r4, #0x1
	str		r4, [sp, #0x4]
	bl		sub_080462d0
	add		r6, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	cmp		r6, #0x0
	beq		_080402b0
	add		r0, r6, #0x0
	add		r0, #0x40
	str		r0, [r7, #0x5c]
	b		_080402b2

.incbin "base.gba", 0x402A2, 0x2

_080402a4:	.4byte 0x0200DBA0
_080402a8:	.4byte 0xFFFFFE60
_080402ac:	.4byte 0x0200D56C

_080402b0:
	str		r6, [r7, #0x5c]
_080402b2:
	mov		r0, #0x8e
	lsl		r0, r0, #0x2
	mov		r2, r8
	add		r1, r2, r0
	str		r6, [r1, #0x0]
	add		r0, r6, r0
	str		r2, [r0, #0x0]
	mov		r3, r10
	ldr		r4, [r3, #0x0]
	ldr		r0, [r4, #0x0]
	str		r2, [r0, #0x8]
	str		r6, [r0, #0xc]
	ldr		r5, _08040318
	ldr		r1, _0804031c
	add		r0, r5, r1
	mov		r1, #0x9a
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, [r4, #0x0]
	ldr		r1, [r1, #0x0]
	mov		r3, #0x9e
	lsl		r3, r3, #0x1
	add		r2, r1, r3
	mov		r4, #0x0
	ldrsh	r2, [r2, r4]
	mov		r4, #0x9f
	lsl		r4, r4, #0x1
	add		r3, r1, r4
	mov		r4, #0x0
	ldrsh	r3, [r3, r4]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r4, #0x2
	str		r4, [sp, #0x4]
	bl		sub_080462d0
	add		r6, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	cmp		r6, #0x0
	beq		_08040320
	add		r0, r6, #0x0
	add		r0, #0x40
	str		r0, [r7, #0x60]
	b		_08040322

_08040318:	.4byte 0x0200DBA0
_0804031c:	.4byte 0xFFFFFE60

_08040320:
	str		r6, [r7, #0x60]
_08040322:
	ldr		r5, _08040378
	ldr		r1, _0804037c
	add		r0, r5, r1
	mov		r1, #0x9a
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	ldr		r1, [r1, #0x0]
	ldr		r3, [r1, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x9e
	mov		r4, #0xa0
	lsl		r4, r4, #0x1
	add		r2, r3, r4
	mov		r4, #0x0
	ldrsh	r2, [r2, r4]
	mov		r4, #0xa1
	lsl		r4, r4, #0x1
	add		r3, r3, r4
	mov		r4, #0x0
	ldrsh	r3, [r3, r4]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r4, #0x3
	str		r4, [sp, #0x4]
	bl		sub_080462d0
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	cmp		r4, #0x0
	beq		_08040380
	add		r0, r4, #0x0
	add		r0, #0x40
	str		r0, [r7, #0x64]
	b		_08040382

_08040378:	.4byte 0x0200DBA0
_0804037c:	.4byte 0xFFFFFE60

_08040380:
	str		r4, [r7, #0x64]
_08040382:
	mov		r0, #0x8e
	lsl		r0, r0, #0x2
	add		r1, r6, r0
	str		r4, [r1, #0x0]
	add		r0, r4, r0
	str		r6, [r0, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	str		r6, [r0, #0x10]
	str		r4, [r0, #0x14]
	ldr		r4, _080403cc
	ldr		r2, _080403d0
	add		r0, r4, r2
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x0
	mov		r2, #0x6c
	mov		r3, #0x3c
	bl		sub_080446f0
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	cmp		r5, #0x0
	beq		_080403d4
	add		r0, r5, #0x0
	add		r0, #0x40
	str		r0, [r7, #0x68]
	b		_080403d6

_080403cc:	.4byte 0x0200DB90
_080403d0:	.4byte 0xFFFFFE70

_080403d4:
	str		r5, [r7, #0x68]
_080403d6:
	mov		r3, #0xf5
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	mov		r4, #0xf6
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	str		r5, [r0, #0x0]
	ldr		r0, [r7, #0x54]
	mov		r4, #0x0
	cmp		r0, #0x0
	beq		_080403f4
	add		r4, r0, #0x0
	sub		r4, #0x40
_080403f4:
	ldr		r0, _080404f0
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xb4
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r1, #0x8
	lsl		r1, r1, #0x8
	add		r2, #0xb6
	mov		r0, #0x0
	ldrsh	r2, [r2, r0]
	sub		r2, #0x2
	lsl		r2, r2, #0x8
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r0, r4, #0x0
	bl		sub_08043958
	add		r0, r7, #0x0
	bl		sub_08041fc4
	ldr		r0, [r7, #0x58]
	mov		r2, #0x0
	cmp		r0, #0x0
	beq		_0804042a
	add		r2, r0, #0x0
	sub		r2, #0x40
_0804042a:
	mov		r3, #0x90
	lsl		r3, r3, #0x2
	add		r1, r2, r3
	mov		r0, #0x3
	str		r0, [r1, #0x0]
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r4, _080404f4
	add		r0, r7, r4
	strb	r5, [r0, #0x0]
	ldr		r1, _080404f8
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	ldr		r2, _080404fc
	add		r0, r7, r2
	strb	r5, [r0, #0x0]
	mov		r3, #0xf8
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	strb	r5, [r0, #0x0]
	sub		r4, #0x4
	add		r0, r7, r4
	strb	r5, [r0, #0x0]
	sub		r1, #0x4
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	strb	r5, [r0, #0x0]
	add		r3, #0x4
	add		r0, r7, r3
	mov		r4, #0x1
	strb	r4, [r0, #0x0]
	ldr		r0, _08040500
	add		r2, r7, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	sub		r1, #0x2
	and		r0, r1
	strb	r0, [r2, #0x0]
	add		r0, r7, #0x0
	bl		sub_08041060
	add		r0, r7, #0x0
	bl		sub_08041fc4
	ldr		r1, _08040504
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	ldr		r2, _08040508
	add		r0, r7, r2
	strb	r4, [r0, #0x0]
	ldr		r3, _0804050c
	add		r1, r7, r3
	mov		r0, #0xb
	strb	r0, [r1, #0x0]
	mov		r4, #0xfc
	lsl		r4, r4, #0x2
	add		r1, r7, r4
	mov		r0, #0xe
	strb	r0, [r1, #0x0]
	ldr		r0, _08040510
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804057c
	mov		r0, #0xa0
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804051c
	ldr		r0, _08040514
	add		r1, r7, r0
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	mov		r2, #0xfb
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r0, #0x12
	strb	r0, [r1, #0x0]
	ldr		r3, _08040518
	add		r1, r7, r3
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	sub		r4, #0x2
	add		r1, r7, r4
	mov		r0, #0xa
	b		_0804053c

.incbin "base.gba", 0x404EE, 0x2

_080404f0:	.4byte 0x0200D568
_080404f4:	.4byte 0x000003E5
_080404f8:	.4byte 0x000003E6
_080404fc:	.4byte 0x000003DF
_08040500:	.4byte 0x000003F1
_08040504:	.4byte 0x000003E9
_08040508:	.4byte 0x000003EA
_0804050c:	.4byte 0x000003EF
_08040510:	.4byte 0x00000A05
_08040514:	.4byte 0x000003EB
_08040518:	.4byte 0x000003ED

_0804051c:
	ldr		r0, _08040560
	add		r1, r7, r0
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	mov		r2, #0xfb
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r0, #0xa
	strb	r0, [r1, #0x0]
	ldr		r3, _08040564
	add		r1, r7, r3
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	ldr		r4, _08040568
	add		r1, r7, r4
	mov		r0, #0x12
_0804053c:
	strb	r0, [r1, #0x0]
	ldr		r0, _0804056c
	add		r5, r7, r0
	mov		r0, #0x2
	strb	r0, [r5, #0x0]
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	add		r4, r7, r1
	strb	r0, [r4, #0x0]
	ldr		r0, _08040570
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08040574
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	strb	r0, [r5, #0x0]
	b		_080405ec

_08040560:	.4byte 0x000003EB
_08040564:	.4byte 0x000003ED
_08040568:	.4byte 0x000003EE
_0804056c:	.4byte 0x000003E7
_08040570:	.4byte 0x00000303

_08040574:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	b		_080405ec
_0804057c:
	mov		r0, #0xa0
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080405b8
	ldr		r2, _080405ac
	add		r1, r7, r2
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	mov		r3, #0xfb
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r0, #0x12
	strb	r0, [r1, #0x0]
	ldr		r4, _080405b0
	add		r1, r7, r4
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	ldr		r0, _080405b4
	add		r1, r7, r0
	mov		r0, #0xa
	b		_080405d8

.incbin "base.gba", 0x405AA, 0x2

_080405ac:	.4byte 0x000003EB
_080405b0:	.4byte 0x000003ED
_080405b4:	.4byte 0x000003EE

_080405b8:
	ldr		r2, _0804066c
	add		r1, r7, r2
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	mov		r3, #0xfb
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r0, #0xa
	strb	r0, [r1, #0x0]
	ldr		r4, _08040670
	add		r1, r7, r4
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	ldr		r0, _08040674
	add		r1, r7, r0
	mov		r0, #0x12
_080405d8:
	strb	r0, [r1, #0x0]
	ldr		r2, _08040678
	add		r1, r7, r2
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	mov		r3, #0xfa
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
_080405ec:
	ldr		r6, _0804067c
	ldr		r4, _08040678
	add		r0, r7, r4
	ldrb	r1, [r0, #0x0]
	ldr		r2, _08040680
	add		r0, r7, r2
	ldrb	r2, [r0, #0x0]
	ldr		r3, _08040684
	add		r0, r7, r3
	ldrb	r3, [r0, #0x0]
	add		r4, #0x4
	add		r0, r7, r4
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	add		r4, #0x1
	add		r0, r7, r4
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, #0x0
	str		r0, [sp, #0x8]
	mov		r5, #0x7
	str		r5, [sp, #0xC]
	add		r0, r6, #0x0
	bl		sub_080061f0
	ldr		r0, _08040688
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080406e8
	mov		r0, #0xa0
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08040690
	ldr		r0, _0804068c
	mov		r1, #0x5
	bl		sub_080b63dc
	mov		r2, #0xfa
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	ldrb	r1, [r1, #0x0]
	ldr		r3, _08040670
	add		r2, r7, r3
	ldrb	r2, [r2, #0x0]
	add		r4, #0x2
	add		r3, r7, r4
	ldrb	r3, [r3, #0x0]
	add		r4, #0x1
	ldrb	r4, [r4, r7]
	str		r4, [sp, #0x0]
	mov		r4, #0xfc
	lsl		r4, r4, #0x2
	ldrb	r4, [r4, r7]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	str		r0, [sp, #0xC]
	add		r0, r6, #0x0
	bl		sub_080061f0
	b		_080406c4

.incbin "base.gba", 0x4066A, 0x2

_0804066c:	.4byte 0x000003EB
_08040670:	.4byte 0x000003ED
_08040674:	.4byte 0x000003EE
_08040678:	.4byte 0x000003E7
_0804067c:	.4byte 0x02000E8C
_08040680:	.4byte 0x000003E9
_08040684:	.4byte 0x000003EA
_08040688:	.4byte 0x00000A05
_0804068c:	.4byte 0x0200BDD4

_08040690:
	ldr		r0, _080406d0
	mov		r1, #0x5
	bl		sub_080b63dc
	mov		r2, #0xfa
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	ldrb	r1, [r1, #0x0]
	ldr		r3, _080406d4
	add		r2, r7, r3
	ldrb	r2, [r2, #0x0]
	ldr		r4, _080406d8
	add		r3, r7, r4
	ldrb	r3, [r3, #0x0]
	add		r4, #0x1
	ldrb	r4, [r4, r7]
	str		r4, [sp, #0x0]
	mov		r4, #0xfc
	lsl		r4, r4, #0x2
	ldrb	r4, [r4, r7]
	str		r4, [sp, #0x4]
	str		r0, [sp, #0x8]
	str		r5, [sp, #0xC]
	add		r0, r6, #0x0
	bl		sub_080061f0
_080406c4:
	ldr		r0, _080406dc
	ldr		r1, _080406e0
	ldr		r2, _080406e4
	bl		sub_08005ec8
	b		_08040726

_080406d0:	.4byte 0x0200BDD4
_080406d4:	.4byte 0x000003ED
_080406d8:	.4byte 0x000003EE
_080406dc:	.4byte 0x02000E8C
_080406e0:	.4byte 0x80808080
_080406e4:	.4byte 0x080d3248

_080406e8:
	ldr		r0, _08040738
	mov		r1, #0x5
	bl		sub_080b63dc
	mov		r2, #0xfa
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	ldrb	r1, [r1, #0x0]
	ldr		r3, _0804073c
	add		r2, r7, r3
	ldrb	r2, [r2, #0x0]
	ldr		r4, _08040740
	add		r3, r7, r4
	ldrb	r3, [r3, #0x0]
	add		r4, #0x1
	ldrb	r4, [r4, r7]
	str		r4, [sp, #0x0]
	mov		r4, #0xfc
	lsl		r4, r4, #0x2
	ldrb	r4, [r4, r7]
	str		r4, [sp, #0x4]
	str		r0, [sp, #0x8]
	str		r5, [sp, #0xC]
	add		r0, r6, #0x0
	bl		sub_080061f0
	ldr		r1, _08040744
	ldr		r2, _08040748
	add		r0, r6, #0x0
	bl		sub_08005ec8
_08040726:
	add		r0, r7, #0x0
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08040738:	.4byte 0x0200BDD4
_0804073c:	.4byte 0x000003ED
_08040740:	.4byte 0x000003EE
_08040744:	.4byte 0x80808080
_08040748:	.4byte 0x080d3250
	thumb_func_end sub_08040020

	thumb_func_start sub_0804074c
sub_0804074c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x54
	add		r6, r0, #0x0
	cmp		r1, #0x5
	bls		_08040762
	bl		sub_0804101e
_08040762:
	lsl		r0, r1, #0x2
	ldr		r1, _0804076c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0804076c:	.4byte 0x08040770
_08040770:	.4byte 0x08040788

.incbin "base.gba", 0x40774, 0x14
	thumb_func_end sub_0804074c


.incbin "base.gba", 0x40788, 0x896
	non_word_aligned_thumb_func_start sub_0804101e
sub_0804101e:
	add		sp, #0x54
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4102E, 0x32
	thumb_func_end sub_0804101e

	thumb_func_start sub_08041060
sub_08041060:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	ldr		r0, _08041090
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08041094
	mov		r0, #0xa0
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	mov		r1, #0x1
	str		r1, [sp, #0x0]
	cmp		r0, #0x0
	beq		_08041098
	mov		r0, #0x3
	str		r0, [sp, #0x0]
	b		_08041098

.incbin "base.gba", 0x4108E, 0x2

_08041090:	.4byte 0x00000A03

_08041094:
	mov		r1, #0x0
	str		r1, [sp, #0x0]
_08041098:
	add		r4, r7, #0x0
	add		r4, #0x6c
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	add		r0, #0xdc
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r1, #0x0
	mov		r8, r1
	mov		r1, #0x40
	mov		r10, r1
	mov		r1, r10
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r5, #0x68
	strh	r5, [r0, #0x0]
	add		r0, #0x6
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0xd
	mov		r6, #0x1
	strb	r6, [r0, #0x0]
	add		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xb6
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0xb0
	mov		r9, r1
	mov		r1, r9
	strh	r1, [r0, #0x0]
	mov		r1, #0xa9
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _08041250
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x70
	strh	r0, [r1, #0x0]
	mov		r1, #0xf1
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r5, #0x78
	strh	r5, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _08041254
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r0, #0x87
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xa3
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r0, #0x9c
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x80
	strh	r0, [r1, #0x0]
	ldr		r1, _08041258
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _0804125c
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r0, #0xab
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xc7
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, r10
	strh	r1, [r0, #0x0]
	ldr		r1, _08041260
	add		r0, r7, r1
	mov		r5, #0x30
	strh	r5, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _08041264
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r0, #0xcf
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0808e03c
	add		r0, r4, #0x0
	ldr		r1, [sp, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0xeb
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	bl		sub_0808b3d4
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, r9
	strh	r1, [r0, #0x0]
	ldr		r1, _08041268
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	add		r1, #0x6
	add		r0, r7, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _0804126c
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r0, #0xf7
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x90
	strh	r0, [r1, #0x0]
	mov		r4, #0x0
_0804122c:
	lsl		r1, r4, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	mov		r2, #0xbc
	mov		r3, #0x90
	bl		sub_0804292c
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0804122c
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08041250:	.4byte 0x00000165
_08041254:	.4byte 0x000001F5
_08041258:	.4byte 0x00000272
_0804125c:	.4byte 0x00000285
_08041260:	.4byte 0x00000302
_08041264:	.4byte 0x00000315
_08041268:	.4byte 0x00000392
_0804126c:	.4byte 0x000003A5
	thumb_func_end sub_08041060

	thumb_func_start sub_08041270
sub_08041270:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r10, r0
	ldr		r0, _080412bc
	mov		r1, #0x3
	bl		sub_080b63dc
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x4]
	mov		r6, #0x0
	ldr		r7, _080412c0
	add		r7, r10
	ldr		r0, _080412c4
	mov		r8, r0
	ldr		r1, [sp, #0x4]
	lsl		r0, r1, #0x3
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r2, r2, r0
	mov		r12, r2
	mov		r3, #0x1
	mov		r9, r3
_080412a6:
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	cmp		r0, #0x0
	beq		_080412c8
	mov		r4, r8
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	add		r5, r0, r1
	b		_080412d2

_080412bc:	.4byte 0x0200BDD4
_080412c0:	.4byte 0x000003E5
_080412c4:	.4byte 0x0200D54C

_080412c8:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r3, r12
	add		r5, r0, r3
_080412d2:
	mov		r4, r8
	ldr		r2, [r4, #0x0]
	ldrb	r1, [r7, #0x0]
	mov		r0, r9
	eor		r1, r0
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	lsl		r0, r1, #0x1
	add		r0, r0, r6
	lsl		r0, r0, #0x2
	add		r2, #0x8
	add		r0, r2, r0
	ldr		r3, [r0, #0x0]
	add		r3, #0xec
	lsl		r4, r6, #0x2
	add		r4, r4, r5
	mov		r0, #0x0
	ldrsh	r5, [r4, r0]
	lsl		r1, r1, #0x3
	add		r1, r2, r1
	ldr		r0, [r1, #0x0]
	ldr		r1, _0804149c
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mul		r0, r5
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	ldrb	r0, [r7, #0x0]
	mov		r3, r9
	eor		r0, r3
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x17
	add		r0, r0, r6
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	ldr		r1, [r2, #0x0]
	add		r1, #0xf0
	mov		r5, #0x2
	ldrsh	r0, [r4, r5]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r6, #0x1
	cmp		r6, #0x1
	ble		_080412a6
	ldr		r0, _080414a0
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_0804133e
	b		_080414b4
_0804133e:
	mov		r3, #0x0
	ldr		r6, _080414a4
	ldr		r0, [r6, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xcc
	add		r0, #0xd0
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r1, r0
	blt		_08041358
	mov		r3, #0x1
_08041358:
	str		r3, [sp, #0x0]
	ldr		r5, _080414a8
	mov		r9, r5
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x4]
	ldr		r1, _080414ac
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xb4
	mov		r6, #0x0
	ldrsh	r1, [r1, r6]
	add		r1, #0x8
	lsl		r1, r1, #0x8
	add		r2, #0xb6
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	sub		r2, #0x2
	lsl		r2, r2, #0x8
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	bl		sub_08043958
	mov		r0, r10
	bl		sub_08041fc4
	ldr		r1, [r5, #0x0]
	ldr		r7, _080414b0
	add		r7, r10
	ldrb	r0, [r7, #0x0]
	lsl		r0, r0, #0x2
	add		r1, #0x8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	mov		r4, #0x90
	lsl		r4, r4, #0x2
	add		r2, r0, r4
	mov		r1, #0x3
	str		r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r5, #0x0]
	ldrb	r0, [r7, #0x0]
	mov		r4, #0x1
	eor		r0, r4
	lsl		r0, r0, #0x2
	add		r1, #0x8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r6, [r5, #0x0]
	ldrb	r0, [r7, #0x0]
	eor		r0, r4
	lsl		r0, r0, #0x2
	add		r3, r6, #0x0
	add		r3, #0x8
	add		r0, r3, r0
	ldr		r1, [r0, #0x0]
	add		r1, #0xec
	mov		r12, r1
	ldr		r5, _080414a4
	ldr		r2, [r5, #0x0]
	ldr		r0, [sp, #0x0]
	lsl		r0, r0, #0x2
	mov		r8, r0
	add		r0, r2, #0x0
	add		r0, #0xcc
	add		r0, r8
	mov		r5, #0x0
	ldrsh	r1, [r0, r5]
	mov		r10, r1
	ldr		r0, [r6, #0x8]
	ldr		r1, _0804149c
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r5, r10
	mul		r5, r0
	add		r0, r5, #0x0
	lsl		r0, r0, #0x8
	mov		r1, r12
	str		r0, [r1, #0x0]
	ldrb	r0, [r7, #0x0]
	eor		r4, r0
	lsl		r4, r4, #0x2
	add		r3, r3, r4
	ldr		r1, [r3, #0x0]
	add		r1, #0xf0
	add		r2, #0xce
	add		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	ldr		r0, [r6, #0x10]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r4, r9
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x14]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x1
	beq		_08041446
	b		_0804164c
_08041446:
	ldr		r5, [r4, #0x0]
	lsl		r0, r0, #0x2
	add		r4, r5, #0x0
	add		r4, #0x8
	add		r0, r4, r0
	ldr		r1, [r0, #0x0]
	mov		r6, #0x94
	lsl		r6, r6, #0x2
	add		r1, r1, r6
	ldr		r0, _080414a4
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xcc
	mov		r6, #0x0
	ldrsh	r3, [r0, r6]
	ldr		r0, [r5, #0x8]
	ldr		r5, _0804149c
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mul		r0, r3
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	ldrb	r0, [r7, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r1, [r0, #0x0]
	mov		r6, #0x95
	lsl		r6, r6, #0x2
	add		r1, r1, r6
	add		r2, #0xce
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	ldrb	r0, [r7, #0x0]
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldr		r0, [r4, #0x0]
	bl		sub_08046f7c
	b		_0804164c

_0804149c:	.4byte 0x0000024B
_080414a0:	.4byte 0x000003E5
_080414a4:	.4byte 0x0200D56C
_080414a8:	.4byte 0x0200D54C
_080414ac:	.4byte 0x0200D568
_080414b0:	.4byte 0x000003E3

_080414b4:
	mov		r3, #0x0
	ldr		r5, _0804165c
	ldr		r4, [r5, #0x0]
	ldr		r1, [r4, #0x0]
	ldr		r6, [sp, #0x4]
	lsl		r7, r6, #0x3
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	add		r0, r0, r7
	mov		r5, #0xa4
	lsl		r5, r5, #0x1
	add		r1, r1, r5
	add		r1, r1, r7
	mov		r6, #0x0
	ldrsh	r2, [r0, r6]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r2, r0
	blt		_080414de
	mov		r3, #0x1
_080414de:
	str		r3, [sp, #0x0]
	ldr		r0, [r4, #0x4]
	ldr		r1, _08041660
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xb8
	mov		r6, #0x0
	ldrsh	r1, [r1, r6]
	sub		r1, #0x8
	lsl		r1, r1, #0x8
	add		r2, #0xba
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	sub		r2, #0x2
	lsl		r2, r2, #0x8
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	bl		sub_08043958
	mov		r0, r10
	bl		sub_08041fc4
	ldr		r4, _0804165c
	ldr		r1, [r4, #0x0]
	mov		r5, #0xf9
	lsl		r5, r5, #0x2
	add		r5, r10
	mov		r9, r5
	ldrb	r0, [r5, #0x0]
	add		r0, #0x2
	lsl		r0, r0, #0x2
	add		r1, #0x8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	mov		r6, #0x90
	lsl		r6, r6, #0x2
	add		r2, r0, r6
	mov		r1, #0x3
	str		r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r4, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r4, #0x1
	eor		r0, r4
	add		r0, #0x2
	lsl		r0, r0, #0x2
	add		r1, #0x8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, _0804165c
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	ldrb	r0, [r5, #0x0]
	eor		r0, r4
	add		r0, #0x2
	lsl		r0, r0, #0x2
	mov		r1, r8
	add		r1, #0x8
	str		r1, [sp, #0x8]
	add		r0, r1, r0
	ldr		r1, [r0, #0x0]
	add		r1, #0xec
	mov		r3, r8
	ldr		r2, [r3, #0x0]
	ldr		r5, [sp, #0x0]
	lsl		r3, r5, #0x2
	add		r3, r3, r7
	sub		r6, #0xfc
	add		r0, r2, r6
	add		r0, r0, r3
	mov		r6, #0x0
	ldrsh	r5, [r0, r6]
	mov		r12, r5
	mov		r5, r8
	ldr		r0, [r5, #0x10]
	ldr		r6, _08041664
	mov		r10, r6
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r5, r12
	mul		r5, r0
	add		r0, r5, #0x0
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	mov		r6, r9
	ldrb	r0, [r6, #0x0]
	eor		r4, r0
	add		r4, #0x2
	lsl		r4, r4, #0x2
	ldr		r0, [sp, #0x8]
	add		r5, r0, r4
	ldr		r1, [r5, #0x0]
	add		r1, #0xf0
	mov		r4, #0xa3
	lsl		r4, r4, #0x1
	add		r2, r2, r4
	add		r2, r2, r3
	mov		r5, #0x0
	ldrsh	r0, [r2, r5]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	mov		r6, r8
	ldr		r0, [r6, #0x8]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, _0804165c
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0xc]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r2, _0804165c
	ldr		r3, [r2, #0x0]
	mov		r4, r9
	ldrb	r0, [r4, #0x0]
	add		r0, #0x2
	lsl		r0, r0, #0x2
	add		r5, r3, #0x0
	add		r5, #0x8
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	mov		r6, #0x94
	lsl		r6, r6, #0x2
	add		r1, r1, r6
	ldr		r2, [r3, #0x0]
	mov		r4, #0xa2
	lsl		r4, r4, #0x1
	add		r0, r2, r4
	add		r0, r0, r7
	mov		r4, #0x0
	ldrsh	r6, [r0, r4]
	mov		r8, r6
	ldr		r0, [r3, #0x10]
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r6, r8
	mul		r6, r0
	add		r0, r6, #0x0
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	add		r0, #0x2
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	mov		r3, #0x95
	lsl		r3, r3, #0x2
	add		r1, r1, r3
	mov		r4, #0xa3
	lsl		r4, r4, #0x1
	add		r2, r2, r4
	add		r2, r2, r7
	mov		r6, #0x0
	ldrsh	r0, [r2, r6]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	add		r0, #0x2
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	ldr		r0, [r5, #0x0]
	bl		sub_08046f7c
_0804164c:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804165c:	.4byte 0x0200D54C
_08041660:	.4byte 0x0200D568
_08041664:	.4byte 0x0000024B
	thumb_func_end sub_08041270

	thumb_func_start sub_08041668
sub_08041668:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, _080416e4
	add		r6, r5, r0
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	ldr		r2, _080416e8
	add		r1, r5, r2
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	lsl		r4, r1, #0x3
	add		r4, r4, r1
	lsl		r4, r4, #0x4
	add		r4, #0x6c
	add		r4, r5, r4
	sub		r2, #0x2
	add		r0, r5, r2
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	mov		r1, #0xa
	bl		sub_080bbeac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r0, r0, r5
	add		r0, #0xdc
	bl		sub_0808b3d4
	ldr		r1, _080416ec
	add		r0, r5, r1
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r1, r0
	beq		_080416de
	add		r0, r1, #0x0
	ldr		r2, _080416f0
	add		r1, r5, r2
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	eor		r0, r2
	strb	r0, [r1, #0x0]
_080416de:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080416e4:	.4byte 0x000003E5
_080416e8:	.4byte 0x000003E1
_080416ec:	.4byte 0x000003E6
_080416f0:	.4byte 0x000003E3
	thumb_func_end sub_08041668

	thumb_func_start sub_080416f4
sub_080416f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	ldr		r1, _08041718
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	add		r0, #0xf0
	ldr		r2, [r0, #0x0]
	ldr		r3, _0804171c
	mov		r12, r1
	cmp		r2, r3
	bge		_08041720
	str		r3, [r0, #0x0]
	b		_0804172a

.incbin "base.gba", 0x41716, 0x2

_08041718:	.4byte 0x080d3290
_0804171c:	.4byte 0xFFFFE800

_08041720:
	mov		r1, #0xc8
	lsl		r1, r1, #0x7
	cmp		r2, r1
	ble		_0804172a
	str		r1, [r0, #0x0]
_0804172a:
	mov		r1, r12
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	add		r0, #0xec
	ldr		r1, [r0, #0x0]
	mov		r2, #0xb0
	lsl		r2, r2, #0x8
	cmp		r1, r2
	bgt		_08041744
	ldr		r2, _080417a0
	cmp		r1, r2
	bge		_08041746
_08041744:
	str		r2, [r0, #0x0]
_08041746:
	mov		r1, #0x0
	add		r6, r4, #0x0
	add		r6, #0x54
	add		r5, r6, #0x0
	ldr		r2, _080417a4
	mov		r9, r2
	ldr		r3, _080417a8
	mov		r8, r3
	mov		r7, #0x80
	lsl		r7, r7, #0x5
_0804175a:
	add		r1, #0x1
	lsl		r0, r1, #0x2
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	mov		r4, #0x0
	cmp		r0, #0x0
	beq		_0804176c
	add		r4, r0, #0x0
	sub		r4, #0x40
_0804176c:
	add		r0, r4, #0x0
	add		r0, #0xf0
	ldr		r2, [r0, #0x0]
	ldr		r3, _080417ac
	cmp		r2, r3
	blt		_08041780
	mov		r3, #0xc8
	lsl		r3, r3, #0x7
	cmp		r2, r3
	ble		_08041782
_08041780:
	str		r3, [r0, #0x0]
_08041782:
	mov		r2, r9
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x1
	bne		_080417ba
	add		r0, r4, #0x0
	add		r0, #0xec
	ldr		r2, [r0, #0x0]
	cmp		r2, r8
	bgt		_080417b0
	str		r7, [r0, #0x0]
	b		_080417ce

.incbin "base.gba", 0x4179E, 0x2

_080417a0:	.4byte 0xFFFF5000
_080417a4:	.4byte 0x0000024B
_080417a8:	.4byte 0x00000FFF
_080417ac:	.4byte 0xFFFFE800

_080417b0:
	mov		r3, #0xb0
	lsl		r3, r3, #0x8
	cmp		r2, r3
	ble		_080417ce
	b		_080417cc
_080417ba:
	add		r0, r4, #0x0
	add		r0, #0xec
	ldr		r2, [r0, #0x0]
	ldr		r3, _0804182c
	cmp		r2, r3
	bgt		_080417cc
	ldr		r3, _08041830
	cmp		r2, r3
	bge		_080417ce
_080417cc:
	str		r3, [r0, #0x0]
_080417ce:
	cmp		r1, #0x3
	ble		_0804175a
	mov		r3, r12
	ldr		r7, [r3, #0x0]
	ldr		r0, [r7, #0x0]
	ldr		r5, [r0, #0x4]
	add		r1, r5, #0x0
	add		r1, #0xf4
	ldr		r0, _08041834
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xee
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r3, r0, #0x8
	ldr		r1, [r1, #0x0]
	sub		r1, r1, r3
	mov		r4, #0x2
	ldrsh	r0, [r2, r4]
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bgt		_08041838
	mov		r0, #0x0
	ldrsh	r4, [r2, r0]
	mov		r1, #0x4
	ldrsh	r0, [r2, r1]
	add		r1, r5, #0x0
	add		r1, #0xec
	ldr		r2, [r1, #0x0]
	sub		r1, r2, r3
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bgt		_08041838
	lsl		r1, r4, #0x8
	add		r0, r2, r3
	cmp		r1, r0
	bgt		_08041838
	mov		r0, #0x28
	bl		sub_0808f690
	ldr		r0, [r7, #0x0]
	ldr		r0, [r0, #0x4]
	bl		sub_0804418c
_08041826:
	mov		r0, #0x1
	b		_08041888

.incbin "base.gba", 0x4182A, 0x2

_0804182c:	.4byte 0xFFFFF000
_08041830:	.4byte 0xFFFF5000
_08041834:	.4byte 0x0200D568

_08041838:
	mov		r2, r12
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x4]
	mov		r3, #0xd4
	lsl		r3, r3, #0x2
	add		r0, r1, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x9
	bgt		_08041886
	mov		r4, #0xcb
	lsl		r4, r4, #0x2
	add		r0, r1, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08041886
	mov		r0, #0x0
_0804185a:
	add		r4, r0, #0x1
	lsl		r0, r4, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_0804186c
	add		r1, r0, #0x0
	sub		r1, #0x40
_0804186c:
	ldr		r2, _08041894
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08041880
	add		r0, r1, #0x0
	bl		sub_08045ba0
	cmp		r0, #0x0
	bne		_08041826
_08041880:
	add		r0, r4, #0x0
	cmp		r0, #0x3
	ble		_0804185a
_08041886:
	mov		r0, #0x0
_08041888:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08041894:	.4byte 0x0000024A
	thumb_func_end sub_080416f4

	thumb_func_start sub_08041898
sub_08041898:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	ldr		r1, [sp, #0x0]
	add		r1, #0x54
	mov		r10, r1
_080418b0:
	ldr		r2, [sp, #0x4]
	lsl		r1, r2, #0x1
	add		r7, r1, #0x1
	lsl		r0, r7, #0x2
	mov		r3, r10
	add		r5, r3, r0
	ldr		r2, [r5, #0x0]
	mov		r0, #0x0
	add		r6, r1, #0x0
	cmp		r2, #0x0
	beq		_080418ca
	add		r0, r2, #0x0
	sub		r0, #0x40
_080418ca:
	ldr		r4, _08041968
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [sp, #0x8]
	ldr		r4, _0804196c
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x4]
	mov		r2, #0xbd
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	ldr		r3, [sp, #0x8]
	mul		r0, r3
	cmp		r0, #0x0
	bgt		_080418ee
	b		_08041d90
_080418ee:
	ldr		r4, [sp, #0x4]
	cmp		r4, #0x1
	bne		_080418fe
	ldr		r5, _08041970
	add		r0, r1, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_0804190e
_080418fe:
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	bne		_080419e8
	ldr		r2, _08041970
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_080419e8
_0804190e:
	add		r3, r6, #0x1
	mov		r8, r3
	lsl		r0, r3, #0x2
	add		r0, r10
	ldr		r2, [r0, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041922
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041922:
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bgt		_08041946
	add		r7, r6, #0x2
	lsl		r0, r7, #0x2
	mov		r4, r10
	add		r5, r4, r0
	ldr		r1, [r5, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_0804193e
	add		r0, r1, #0x0
	sub		r0, #0x40
_0804193e:
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	ble		_08041980
_08041946:
	add		r2, r6, #0x1
	lsl		r0, r2, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08041958
	add		r1, r0, #0x0
	sub		r1, #0x40
_08041958:
	add		r0, r1, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	ble		_08041974
	add		r7, r6, #0x2
	b		_08041976

.incbin "base.gba", 0x41966, 0x2

_08041968:	.4byte 0x0000024B
_0804196c:	.4byte 0x0200D54C
_08041970:	.4byte 0x00000361

_08041974:
	add		r7, r2, #0x0
_08041976:
	sub		r0, r7, #0x1
	sub		r0, r0, r6
	mov		r5, #0x1
	eor		r0, r5
	b		_080419dc
_08041980:
	mov		r3, #0x0
	cmp		r2, #0x0
	beq		_0804198a
	add		r3, r2, #0x0
	sub		r3, #0x40
_0804198a:
	ldr		r1, _080419e4
	ldr		r0, [r1, #0x0]
	ldr		r2, [r0, #0x4]
	mov		r4, #0xbd
	lsl		r4, r4, #0x2
	add		r0, r2, r4
	ldr		r1, [r0, #0x0]
	add		r4, #0x4
	add		r0, r2, r4
	ldr		r2, [r0, #0x0]
	add		r0, r3, #0x0
	bl		sub_08047220
	add		r4, r0, #0x0
	ldr		r0, [r5, #0x0]
	mov		r3, #0x0
	cmp		r0, #0x0
	beq		_080419b2
	add		r3, r0, #0x0
	sub		r3, #0x40
_080419b2:
	ldr		r5, _080419e4
	ldr		r0, [r5, #0x0]
	ldr		r2, [r0, #0x4]
	mov		r1, #0xbd
	lsl		r1, r1, #0x2
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	mov		r5, #0xbe
	lsl		r5, r5, #0x2
	add		r0, r2, r5
	ldr		r2, [r0, #0x0]
	add		r0, r3, #0x0
	bl		sub_08047220
	cmp		r0, r4
	bcc		_080419d4
	mov		r7, r8
_080419d4:
	sub		r0, r7, #0x1
	sub		r0, r0, r6
	mov		r1, #0x1
	eor		r0, r1
_080419dc:
	add		r0, #0x1
	add		r6, r6, r0
	str		r6, [sp, #0xc]
	b		_08041a00

_080419e4:	.4byte 0x0200D54C

_080419e8:
	ldr		r2, _08041a50
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x4]
	ldr		r3, _08041a54
	add		r0, r0, r3
	ldrb	r0, [r0, #0x0]
	add		r7, r6, #0x1
	cmp		r0, r6
	bne		_080419fc
	add		r7, r6, #0x2
_080419fc:
	add		r0, #0x1
	str		r0, [sp, #0xc]
_08041a00:
	ldr		r4, [sp, #0x4]
	add		r4, #0x1
	str		r4, [sp, #0x18]
	cmp		r7, #0x1
	bne		_08041a0c
	b		_08041c6a
_08041a0c:
	ldr		r5, _08041a50
	ldr		r0, [r5, #0x0]
	ldr		r1, [r0, #0x4]
	ldr		r2, _08041a58
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	lsl		r3, r7, #0x2
	mov		r8, r3
	cmp		r0, #0x2
	beq		_08041a22
	b		_08041c10
_08041a22:
	mov		r4, #0xbe
	lsl		r4, r4, #0x2
	add		r1, r1, r4
	mov		r0, r10
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	cmp		r0, #0x0
	beq		_08041a38
	add		r2, r0, #0x0
	sub		r2, #0x40
_08041a38:
	add		r0, r2, #0x0
	add		r0, #0xf0
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	beq		_08041a46
	b		_08041c10
_08041a46:
	mov		r5, #0x0
	mov		r9, r5
	mov		r4, #0x0
	mov		r2, #0x0
	b		_08041a5e

_08041a50:	.4byte 0x0200D54C
_08041a54:	.4byte 0x00000361
_08041a58:	.4byte 0x00000362

_08041a5c:
	add		r2, #0x1
_08041a5e:
	ldr		r0, _08041ab0
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xea
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r1, r0, #0x0
	mul		r1, r2
	add		r0, r3, #0x0
	add		r0, #0xe8
	mov		r5, #0x0
	ldrsh	r0, [r0, r5]
	mul		r0, r2
	mul		r0, r2
	asr		r0, r0, #0x1
	sub		r1, r1, r0
	cmp		r4, r1
	bge		_08041a86
	add		r4, r1, #0x0
	mov		r9, r2
_08041a86:
	cmp		r1, #0x0
	bge		_08041a5c
	ldr		r1, _08041ab4
	ldr		r0, [r1, #0x0]
	ldr		r2, [r0, #0x4]
	mov		r5, #0x2e
	ldrsh	r1, [r3, r5]
	lsl		r1, r1, #0x8
	mov		r3, #0xc8
	lsl		r3, r3, #0x2
	add		r0, r2, r3
	ldr		r3, [r0, #0x0]
	mov		r5, #0xc5
	lsl		r5, r5, #0x2
	add		r0, r2, r5
	add		r4, r4, r1
	str		r4, [sp, #0x24]
	ldr		r4, [r0, #0x0]
	mov		r6, #0x1
	add		r5, r3, r4
	b		_08041abe

_08041ab0:	.4byte 0x0200D568
_08041ab4:	.4byte 0x0200D54C

_08041ab8:
	add		r4, r1, #0x0
	add		r5, r5, r3
	add		r6, #0x1
_08041abe:
	ldr		r0, _08041b4c
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	mul		r0, r6
	mul		r0, r6
	add		r1, #0xe4
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	str		r3, [sp, #0x20]
	bl		sub_080bbcac
	sub		r1, r5, r0
	sub		r0, r1, r4
	ldr		r3, [sp, #0x20]
	cmp		r0, #0x0
	bge		_08041ab8
	ldr		r4, _08041b4c
	ldr		r0, [r4, #0x0]
	add		r0, #0xf2
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	ldr		r4, [sp, #0x24]
	add		r0, r4, r0
	cmp		r1, r0
	bgt		_08041ab8
	add		r1, r6, #0x0
	mov		r5, r9
	sub		r0, r1, r5
	sub		r0, #0x1
	cmp		r0, #0x0
	bgt		_08041b54
	mov		r0, r10
	add		r0, r8
	ldr		r2, [r0, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041b14
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041b14:
	mov		r3, #0x94
	lsl		r3, r3, #0x2
	add		r1, r0, r3
	ldr		r4, _08041b50
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x4]
	mov		r5, #0xbd
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041b34
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041b34:
	mov		r3, #0x95
	lsl		r3, r3, #0x2
	add		r1, r0, r3
	ldr		r4, _08041b50
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x4]
	mov		r5, #0xbe
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	b		_08041bfc

_08041b4c:	.4byte 0x0200D568
_08041b50:	.4byte 0x0200D54C

_08041b54:
	mov		r0, r10
	add		r0, r8
	ldr		r2, [r0, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041b64
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041b64:
	mov		r3, #0x97
	lsl		r3, r3, #0x2
	add		r0, r0, r3
	mov		r4, r9
	str		r4, [r0, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041b78
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041b78:
	mov		r5, #0x96
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	str		r1, [r0, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041b8a
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041b8a:
	mov		r1, #0x94
	lsl		r1, r1, #0x2
	add		r4, r0, r1
	ldr		r3, _08041c0c
	ldr		r0, [r3, #0x0]
	ldr		r3, [r0, #0x4]
	mov		r5, #0xc9
	lsl		r5, r5, #0x2
	add		r1, r3, r5
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041ba6
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041ba6:
	mov		r5, #0x96
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	sub		r0, #0x1
	ldr		r1, [r1, #0x0]
	mul		r1, r0
	add		r0, r3, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	str		r1, [r4, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041bc8
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041bc8:
	mov		r1, #0x95
	lsl		r1, r1, #0x2
	add		r4, r0, r1
	ldr		r3, _08041c0c
	ldr		r0, [r3, #0x0]
	ldr		r3, [r0, #0x4]
	mov		r5, #0xca
	lsl		r5, r5, #0x2
	add		r1, r3, r5
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041be4
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041be4:
	mov		r5, #0x96
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	sub		r0, #0x1
	ldr		r1, [r1, #0x0]
	mul		r1, r0
	add		r0, r3, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	str		r1, [r4, #0x0]
_08041bfc:
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041c06
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041c06:
	bl		sub_08046f7c
	b		_08041c6a

_08041c0c:	.4byte 0x0200D54C

_08041c10:
	mov		r0, r10
	add		r0, r8
	ldr		r2, [r0, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041c20
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041c20:
	mov		r3, #0x94
	lsl		r3, r3, #0x2
	add		r1, r0, r3
	ldr		r4, _08041d2c
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x4]
	mov		r5, #0xbd
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041c40
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041c40:
	mov		r3, #0x95
	lsl		r3, r3, #0x2
	add		r1, r0, r3
	ldr		r4, _08041d2c
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x4]
	mov		r5, #0xbe
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041c60
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041c60:
	bl		sub_08046f7c
	ldr		r0, [sp, #0x4]
	add		r0, #0x1
	str		r0, [sp, #0x18]
_08041c6a:
	ldr		r1, [sp, #0xc]
	cmp		r1, #0x1
	beq		_08041cc6
	lsl		r0, r1, #0x2
	add		r0, r10
	ldr		r2, [r0, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041c80
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041c80:
	mov		r3, #0x94
	lsl		r3, r3, #0x2
	add		r1, r0, r3
	ldr		r4, _08041d30
	ldr		r0, [r4, #0x0]
	add		r0, #0xa4
	mov		r5, #0x0
	ldrsh	r0, [r0, r5]
	lsl		r0, r0, #0x8
	ldr		r3, [sp, #0x8]
	mul		r0, r3
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041ca2
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041ca2:
	mov		r4, #0x95
	lsl		r4, r4, #0x2
	add		r1, r0, r4
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041cb2
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041cb2:
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041cc2
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041cc2:
	bl		sub_08046f7c
_08041cc6:
	ldr		r5, _08041d2c
	ldr		r0, [r5, #0x0]
	ldr		r1, [r0, #0x4]
	ldr		r2, _08041d34
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_08041cf2
	mov		r3, #0xd4
	lsl		r3, r3, #0x2
	add		r0, r1, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x5
	beq		_08041cf2
	cmp		r0, #0x6
	beq		_08041cf2
	cmp		r0, #0x7
	beq		_08041cf2
	cmp		r0, #0x8
	beq		_08041cf2
	cmp		r0, #0x9
	bne		_08041d38
_08041cf2:
	lsl		r0, r7, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08041d02
	add		r1, r0, #0x0
	sub		r1, #0x40
_08041d02:
	mov		r4, #0x92
	lsl		r4, r4, #0x2
	add		r0, r1, r4
	mov		r5, #0x1
	strb	r5, [r0, #0x0]
	ldr		r1, [sp, #0xc]
	lsl		r0, r1, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08041d1e
	add		r1, r0, #0x0
	sub		r1, #0x40
_08041d1e:
	mov		r2, #0x92
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	b		_08041fa0

.incbin "base.gba", 0x41D2A, 0x2

_08041d2c:	.4byte 0x0200D54C
_08041d30:	.4byte 0x0200D568
_08041d34:	.4byte 0x00000362

_08041d38:
	ldr		r4, [sp, #0x4]
	cmp		r4, #0x0
	beq		_08041d40
	b		_08041fa0
_08041d40:
	mov		r5, #0xd8
	lsl		r5, r5, #0x2
	add		r0, r1, r5
	ldr		r0, [r0, #0x0]
	ldr		r1, _08041d8c
	and		r0, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	cmp		r0, r2
	beq		_08041d56
	b		_08041fa0
_08041d56:
	ldr		r3, [sp, #0x0]
	ldr		r2, [r3, #0x5c]
	mov		r0, #0x0
	add		r1, r2, #0x0
	cmp		r1, #0x0
	beq		_08041d66
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041d66:
	mov		r4, #0x92
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08041d74
	b		_08041fa0
_08041d74:
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_08041d7e
	add		r0, r2, #0x0
	sub		r0, #0x40
_08041d7e:
	mov		r5, #0x92
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	b		_08041fa0

.incbin "base.gba", 0x41D8A, 0x2

_08041d8c:	.4byte 0x00FFFF00

_08041d90:
	ldr		r2, [sp, #0x4]
	cmp		r2, #0x0
	bne		_08041e6a
	ldr		r3, _08041e28
	ldr		r1, [r3, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xcc
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	ldr		r5, [sp, #0x8]
	mul		r0, r5
	lsl		r7, r0, #0x8
	add		r0, r1, #0x0
	add		r0, #0xce
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	mov		r8, r0
	add		r0, r1, #0x0
	add		r0, #0xd0
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r5
	lsl		r5, r0, #0x8
	add		r0, r1, #0x0
	add		r0, #0xd2
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r6, r0, #0x8
	ldr		r0, [sp, #0x0]
	ldr		r1, [r0, #0x58]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041dd8
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041dd8:
	add		r1, r7, #0x0
	mov		r2, r8
	bl		sub_08047220
	add		r4, r0, #0x0
	mov		r2, r10
	ldr		r1, [r2, #0x4]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041df0
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041df0:
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_08047220
	cmp		r4, r0
	bcs		_08041e2c
	mov		r3, r10
	ldr		r1, [r3, #0x8]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041e0a
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041e0a:
	mov		r4, #0x94
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	str		r5, [r0, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041e1c
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041e1c:
	mov		r5, #0x95
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	str		r6, [r0, #0x0]
	b		_08041e56

.incbin "base.gba", 0x41E26, 0x2

_08041e28:	.4byte 0x0200D56C

_08041e2c:
	mov		r2, r10
	ldr		r1, [r2, #0x8]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041e3a
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041e3a:
	mov		r3, #0x94
	lsl		r3, r3, #0x2
	add		r0, r0, r3
	str		r7, [r0, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041e4c
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041e4c:
	mov		r4, #0x95
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	mov		r5, r8
	str		r5, [r0, #0x0]
_08041e56:
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041e60
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041e60:
	bl		sub_08046f7c
	mov		r0, #0x1
	str		r0, [sp, #0x18]
	b		_08041fa0
_08041e6a:
	ldr		r2, _08041fbc
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	ldr		r3, [sp, #0x4]
	add		r3, #0x1
	str		r3, [sp, #0x18]
	cmp		r0, #0x3
	beq		_08041e7c
	b		_08041fa0
_08041e7c:
	ldr		r0, _08041fc0
	mov		r1, #0x3
	bl		sub_080b63dc
	lsl		r0, r0, #0x18
	ldr		r1, [r4, #0x0]
	ldr		r2, [r1, #0x0]
	lsr		r0, r0, #0x15
	mov		r4, #0xa2
	lsl		r4, r4, #0x1
	add		r1, r2, r4
	add		r1, r1, r0
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	ldr		r4, [sp, #0x8]
	mul		r1, r4
	lsl		r1, r1, #0x8
	mov		r8, r1
	mov		r3, #0xa3
	lsl		r3, r3, #0x1
	add		r1, r2, r3
	add		r1, r1, r0
	mov		r4, #0x0
	ldrsh	r1, [r1, r4]
	lsl		r1, r1, #0x8
	mov		r9, r1
	add		r3, #0x2
	add		r1, r2, r3
	add		r1, r1, r0
	mov		r4, #0x0
	ldrsh	r1, [r1, r4]
	ldr		r3, [sp, #0x8]
	mul		r1, r3
	lsl		r1, r1, #0x8
	str		r1, [sp, #0x10]
	mov		r4, #0xa5
	lsl		r4, r4, #0x1
	add		r1, r2, r4
	add		r1, r1, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x8
	str		r0, [sp, #0x14]
	ldr		r1, [r5, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041ede
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041ede:
	mov		r1, r8
	mov		r2, r9
	bl		sub_08047220
	add		r4, r0, #0x0
	add		r5, r6, #0x2
	lsl		r0, r5, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08041efa
	add		r1, r0, #0x0
	sub		r1, #0x40
_08041efa:
	add		r0, r1, #0x0
	mov		r1, r8
	mov		r2, r9
	bl		sub_08047220
	cmp		r4, r0
	bcc		_08041f0a
	add		r7, r5, #0x0
_08041f0a:
	sub		r0, r7, #0x1
	sub		r0, r0, r6
	mov		r3, #0x1
	eor		r0, r3
	add		r0, #0x1
	add		r6, r6, r0
	str		r6, [sp, #0xc]
	cmp		r7, #0x1
	beq		_08041f58
	lsl		r0, r7, #0x2
	add		r0, r10
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041f2c
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041f2c:
	mov		r4, #0x94
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	mov		r5, r8
	str		r5, [r0, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041f40
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041f40:
	mov		r2, #0x95
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	mov		r3, r9
	str		r3, [r0, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041f54
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041f54:
	bl		sub_08046f7c
_08041f58:
	ldr		r4, [sp, #0x4]
	add		r4, #0x1
	str		r4, [sp, #0x18]
	ldr		r5, [sp, #0xc]
	cmp		r5, #0x1
	beq		_08041fa0
	lsl		r0, r5, #0x2
	add		r0, r10
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041f74
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041f74:
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	ldr		r3, [sp, #0x10]
	str		r3, [r0, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041f88
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041f88:
	mov		r4, #0x95
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	ldr		r5, [sp, #0x14]
	str		r5, [r0, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08041f9c
	add		r0, r1, #0x0
	sub		r0, #0x40
_08041f9c:
	bl		sub_08046f7c
_08041fa0:
	ldr		r0, [sp, #0x18]
	str		r0, [sp, #0x4]
	cmp		r0, #0x1
	bgt		_08041faa
	b		_080418b0
_08041faa:
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41FBA, 0x2

_08041fbc:	.4byte 0x00000362
_08041fc0:	.4byte 0x0200BDD4
	thumb_func_end sub_08041898

	thumb_func_start sub_08041fc4
sub_08041fc4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r2, [r5, #0x54]
	mov		r1, #0x0
	cmp		r2, #0x0
	beq		_08041fde
	add		r1, r2, #0x0
	sub		r1, #0x40
_08041fde:
	add		r6, r1, #0x0
	add		r6, #0xec
	mov		r0, #0x0
	add		r4, r2, #0x0
	cmp		r4, #0x0
	beq		_08041fee
	add		r0, r4, #0x0
	sub		r0, #0x40
_08041fee:
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x16
	mov		r8, r1
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	mov		r3, #0xd8
	lsl		r3, r3, #0x6
	mov		r9, r3
	mov		r1, r9
	bl		sub_080bbcac
	add		r1, r0, #0x0
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_08042014
	add		r0, r4, #0x0
	sub		r0, #0x40
_08042014:
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	mul		r0, r1
	asr		r0, r0, #0x8
	ldr		r1, [r6, #0x0]
	sub		r1, r1, r0
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	cmp		r4, #0x0
	beq		_0804202c
	add		r1, r4, #0x0
	sub		r1, #0x40
_0804202c:
	add		r1, #0xf0
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_08042038
	add		r0, r4, #0x0
	sub		r0, #0x40
_08042038:
	add		r0, #0xf4
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	neg		r1, r1
	mov		r10, r1
	mov		r0, #0xf3
	lsl		r0, r0, #0x2
	add		r6, r5, r0
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_08042054
	add		r0, r4, #0x0
	sub		r0, #0x40
_08042054:
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	add		r7, r0, r1
	str		r7, [r6, #0x0]
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_0804206a
	add		r0, r4, #0x0
	sub		r0, #0x40
_0804206a:
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	mov		r1, r9
	bl		sub_080bbcac
	add		r1, r0, #0x0
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_08042086
	add		r0, r4, #0x0
	sub		r0, #0x40
_08042086:
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	mul		r0, r1
	asr		r0, r0, #0x8
	sub		r0, r7, r0
	lsl		r0, r0, #0x8
	ldr		r3, _080420e4
	add		r0, r0, r3
	str		r0, [r6, #0x0]
	mov		r0, #0xf4
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	mov		r1, #0x0
	cmp		r4, #0x0
	beq		_080420a8
	add		r1, r4, #0x0
	sub		r1, #0x40
_080420a8:
	add		r1, #0xf0
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_080420b4
	add		r0, r4, #0x0
	sub		r0, #0x40
_080420b4:
	add		r0, #0xf4
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	mov		r0, #0x90
	lsl		r0, r0, #0x9
	sub		r0, r0, r1
	lsl		r0, r0, #0x8
	ldr		r1, _080420e8
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r7, #0x0
	mov		r2, #0x0
	mov		r12, r2
	add		r0, r6, #0x0
	ldr		r1, [r0, #0x0]
	mov		r2, #0xb0
	lsl		r2, r2, #0x10
	cmp		r1, r2
	ble		_080420f0
	ldr		r3, _080420ec
	add		r7, r1, r3
	str		r2, [r0, #0x0]
	b		_08042100

_080420e4:	.4byte 0xFF880000
_080420e8:	.4byte 0xFFB00000
_080420ec:	.4byte 0xFF500000

_080420f0:
	ldr		r0, _0804211c
	cmp		r1, r0
	bgt		_08042100
	ldr		r0, _08042120
	add		r7, r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0xf
	str		r0, [r6, #0x0]
_08042100:
	mov		r2, #0xf4
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	ldr		r0, [r1, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x11
	cmp		r0, r2
	ble		_08042128
	ldr		r3, _08042124
	add		r3, r3, r0
	mov		r12, r3
	str		r2, [r1, #0x0]
	b		_08042132

.incbin "base.gba", 0x4211A, 0x2

_0804211c:	.4byte 0x003FFFFF
_08042120:	.4byte 0xFFC00000
_08042124:	.4byte 0xFEC00000

_08042128:
	cmp		r0, #0x0
	bge		_08042132
	mov		r12, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08042132:
	ldr		r1, _08042198
	mov		r2, #0xf3
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r2, [r0, #0x0]
	str		r2, [r1, #0x0]
	ldr		r3, _0804219c
	mov		r1, #0xf4
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	str		r1, [r3, #0x0]
	ldr		r0, _080421a0
	str		r2, [r0, #0x0]
	ldr		r0, _080421a4
	str		r1, [r0, #0x0]
	ldr		r0, _080421a8
	str		r2, [r0, #0x0]
	ldr		r0, _080421ac
	str		r1, [r0, #0x0]
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_08042164
	add		r0, r4, #0x0
	sub		r0, #0x40
_08042164:
	mov		r2, #0xc3
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	ldr		r3, [sp, #0x0]
	str		r3, [r0, #0x0]
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_08042178
	add		r0, r4, #0x0
	sub		r0, #0x40
_08042178:
	mov		r1, #0xc4
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r2, r10
	str		r2, [r0, #0x0]
	cmp		r7, #0x0
	beq		_080421d8
	cmp		r7, #0x0
	bge		_080421b8
	mov		r3, #0xf5
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	ldr		r0, _080421b0
	ldr		r0, [r0, #0x0]
	ldr		r2, _080421b4
	b		_080421c6

_08042198:	.4byte 0x0200CE30
_0804219c:	.4byte 0x0200CE44
_080421a0:	.4byte 0x0200CE2C
_080421a4:	.4byte 0x0200CE40
_080421a8:	.4byte 0x0200CE28
_080421ac:	.4byte 0x0200CE3C
_080421b0:	.4byte 0x0200D568
_080421b4:	.4byte 0x00000121

_080421b8:
	mov		r3, #0xf5
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	ldr		r0, _080421d4
	ldr		r0, [r0, #0x0]
	mov		r2, #0x90
	lsl		r2, r2, #0x1
_080421c6:
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	b		_080421e0

_080421d4:	.4byte 0x0200D568

_080421d8:
	mov		r3, #0xf5
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r7, [r0, #0x0]
_080421e0:
	mov		r0, r12
	cmp		r0, #0x0
	beq		_08042224
	cmp		r0, #0x0
	bge		_08042204
	mov		r2, #0xf6
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	ldr		r0, _080421fc
	ldr		r0, [r0, #0x0]
	ldr		r3, _08042200
	add		r0, r0, r3
	b		_08042214

.incbin "base.gba", 0x421FA, 0x2

_080421fc:	.4byte 0x0200D568
_08042200:	.4byte 0x00000123

_08042204:
	mov		r0, #0xf6
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	ldr		r0, _08042220
	ldr		r0, [r0, #0x0]
	mov		r2, #0x91
	lsl		r2, r2, #0x1
	add		r0, r0, r2
_08042214:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	b		_0804222e

_08042220:	.4byte 0x0200D568

_08042224:
	mov		r3, #0xf6
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	mov		r1, r12
	str		r1, [r0, #0x0]
_0804222e:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4223E, 0x6EE
	thumb_func_end sub_08041fc4

	thumb_func_start sub_0804292c
sub_0804292c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r4, r1, #0x18
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r12, r2
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	mov		r9, r3
	mov		r8, r9
	cmp		r4, #0x3
	bhi		_080429fe
	lsl		r2, r4, #0x3
	add		r0, r2, r4
	lsl		r0, r0, #0x4
	add		r6, r5, r0
	ldr		r0, _08042994
	add		r0, r4, r0
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0xf7
	lsl		r0, r0, #0x2
	add		r3, r5, r0
	mov		r7, #0x0
	ldrsh	r0, [r3, r7]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0804296e
	add		r0, #0xff
_0804296e:
	asr		r0, r0, #0x8
	add		r0, r12
	add		r1, r6, #0x0
	add		r1, #0xc0
	strh	r0, [r1, #0x0]
	cmp		r4, #0x1
	bhi		_08042998
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	cmp		r0, #0x0
	bge		_0804298c
	add		r0, #0xff
_0804298c:
	asr		r0, r0, #0x8
	add		r0, r9
	b		_080429ac

.incbin "base.gba", 0x42992, 0x2

_08042994:	.4byte 0x080d32fa

_08042998:
	mov		r7, #0x0
	ldrsh	r1, [r3, r7]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	cmp		r0, #0x0
	bge		_080429a8
	add		r0, #0xff
_080429a8:
	asr		r0, r0, #0x8
	add		r0, r8
_080429ac:
	add		r1, r6, #0x0
	add		r1, #0xc2
	strh	r0, [r1, #0x0]
	mov		r1, #0xf7
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_080429d0
	add		r0, r2, r4
	lsl		r0, r0, #0x4
	add		r0, r5, r0
	add		r0, #0xd0
	mov		r1, #0x0
	b		_080429da
_080429d0:
	add		r0, r2, r4
	lsl		r0, r0, #0x4
	add		r0, r5, r0
	add		r0, #0xd0
	mov		r1, #0x1
_080429da:
	strb	r1, [r0, #0x0]
	add		r0, r2, r4
	lsl		r0, r0, #0x4
	add		r3, r5, r0
	mov		r7, #0xf7
	lsl		r7, r7, #0x2
	add		r1, r5, r7
	ldrh	r0, [r1, #0x0]
	add		r2, r3, #0x0
	add		r2, #0xca
	strh	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xcc
	strh	r1, [r0, #0x0]
	add		r0, #0x10
	bl		sub_0808b3d4
_080429fe:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x42A0A, 0x2
	thumb_func_end sub_0804292c

	thumb_func_start sub_08042a0c
sub_08042a0c:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r0, #0xac
	ldr		r6, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	add		r4, r6, r0
	ldr		r0, _08042a9c
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	add		r5, r7, #0x0
	add		r5, #0xb0
	ldr		r1, [r5, #0x0]
	mov		r0, #0x16
	mul		r0, r1
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r6
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	add		r0, r7, #0x0
	add		r0, #0x68
	strh	r4, [r0, #0x0]
	add		r3, r7, #0x0
	add		r3, #0xb4
	ldr		r0, [r5, #0x0]
	ldr		r1, [r3, #0x0]
	add		r0, r0, r1
	mov		r1, #0x90
	lsl		r1, r1, #0x9
	sub		r1, r1, r0
	ldr		r0, _08042aa0
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	add		r0, r7, #0x0
	add		r0, #0x6a
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	add		r1, r7, #0x0
	add		r1, #0x70
	strh	r0, [r1, #0x0]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	blt		_08042a94
	ldr		r0, _08042aa4
	ldr		r0, [r0, #0x0]
	mov		r4, #0x2
	ldrsh	r2, [r0, r4]
	lsl		r2, r2, #0x8
	add		r0, #0xee
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r1, r1, #0x8
	ldr		r0, [r3, #0x0]
	sub		r0, r0, r1
	cmp		r2, r0
	bge		_08042aa8
_08042a94:
	add		r1, r7, #0x0
	add		r1, #0x7d
	mov		r0, #0x1
	b		_08042ab2

_08042a9c:	.4byte 0x0200CE30
_08042aa0:	.4byte 0x0200CE44
_08042aa4:	.4byte 0x0200D568

_08042aa8:
	add		r0, r7, #0x0
	add		r0, #0xaa
	ldrb	r0, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x7d
_08042ab2:
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xab
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08042ac6
	add		r0, r7, #0x0
	add		r0, #0x84
	bl		sub_0808b3d4
_08042ac6:
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x42AD6, 0x2
	thumb_func_end sub_08042a0c

	thumb_func_start sub_08042ad8
sub_08042ad8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	str		r0, [sp, #0x0]
	bl		sub_0804d3ec
	ldr		r1, _08042dd0
	mov		r8, r1
	ldr		r0, _08042dd4
	str		r0, [r7, #0x4c]
	ldr		r0, _08042dd8
	str		r0, [r7, #0xc]
	add		r2, r7, #0x0
	add		r2, #0xf8
	str		r2, [sp, #0x4]
	add		r0, r2, #0x0
	bl		sub_0808e21c
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0x8]
	bl		sub_0808b374
	mov		r1, #0xb2
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r1, #0x28
	add		r0, r7, r1
	bl		sub_0804d3ec
	mov		r2, #0xcc
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r2, #0xb0
	add		r2, r7, r2
	str		r2, [sp, #0xC]
	add		r0, r2, #0x0
	bl		sub_0804d3ec
	mov		r1, #0x95
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, r8
	str		r2, [r0, #0x0]
	add		r1, #0xf4
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r2, #0xec
	add		r2, r2, r7
	mov		r10, r2
	lsl		r4, r4, #0x8
	str		r4, [r2, #0x0]
	mov		r0, #0xf0
	add		r0, r0, r7
	mov		r9, r0
	lsl		r5, r5, #0x8
	str		r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xf4
	str		r1, [sp, #0x10]
	lsl		r6, r6, #0x8
	str		r6, [r1, #0x0]
	mov		r2, #0xd1
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0xc5
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r1, #0x10
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r2, #0xca
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	ldr		r0, _08042ddc
	add		r1, r7, r0
	mov		r0, #0xff
	strb	r0, [r1, #0x0]
	ldr		r1, _08042de0
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	ldr		r2, _08042de4
	add		r1, r7, r2
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r1, #0x0]
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0xc
	str		r0, [r1, #0x0]
	mov		r1, #0xd5
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r2, #0xd7
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	mov		r0, r10
	ldr		r6, [r0, #0x0]
	mov		r5, #0xf0
	lsl		r5, r5, #0x8
	add		r4, r6, r5
	ldr		r1, _08042de8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r1, #0x16
	mul		r0, r1
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r6
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	add		r0, r7, #0x0
	add		r0, #0xa8
	strh	r4, [r0, #0x0]
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	add		r1, r1, r0
	mov		r6, #0x90
	lsl		r6, r6, #0x9
	sub		r1, r6, r1
	ldr		r2, _08042dec
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	add		r0, r7, #0x0
	add		r0, #0xaa
	strh	r1, [r0, #0x0]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r7, #0x0
	add		r1, #0xe8
	strh	r0, [r1, #0x0]
	sub		r1, #0x38
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xea
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	sub		r0, #0x2d
	strb	r1, [r0, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0xd
	bl		sub_0808e03c
	ldr		r0, [sp, #0x4]
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x8]
	bl		sub_0808b3d4
	mov		r2, r10
	ldr		r2, [r2, #0x0]
	mov		r8, r2
	add		r4, r2, r5
	ldr		r1, _08042de8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r1, #0x16
	mul		r0, r1
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r4, [r0, #0x0]
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	add		r1, r1, r0
	sub		r1, r6, r1
	ldr		r2, _08042dec
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r0, r0, r2
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	ldr		r1, _08042df0
	add		r0, r7, r1
	mov		r2, #0x2
	strb	r2, [r0, #0x0]
	ldr		r0, [sp, #0xC]
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	mov		r0, #0xbd
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xbe
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xbf
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, r10
	ldr		r4, [r0, #0x0]
	add		r5, r4, r5
	ldr		r1, _08042de8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r1, #0x16
	mul		r0, r1
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r4
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	asr		r5, r5, #0x8
	mov		r2, #0xac
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x10]
	ldr		r1, [r2, #0x0]
	add		r0, r0, r1
	sub		r6, r6, r0
	ldr		r1, _08042dec
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r6, r6, r0
	asr		r6, r6, #0x8
	ldr		r2, _08042df4
	add		r0, r7, r2
	strh	r6, [r0, #0x0]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r0, r0, r2
	mov		r2, #0xbc
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	sub		r2, #0x38
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	ldr		r1, _08042df8
	add		r0, r7, r1
	mov		r2, #0x2
	strb	r2, [r0, #0x0]
	sub		r1, #0x2d
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	mov		r0, #0xac
	bl		sub_0808af94
	mov		r1, #0x0
	bl		sub_08046f10
	str		r0, [r4, #0x0]
	mov		r1, #0xc3
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08042dd0:	.4byte 0x080e1b14
_08042dd4:	.4byte 0x080e1acc
_08042dd8:	.4byte 0x080e1aec
_08042ddc:	.4byte 0x00000361
_08042de0:	.4byte 0x00000362
_08042de4:	.4byte 0x00000363
_08042de8:	.4byte 0x0200CE30
_08042dec:	.4byte 0x0200CE44
_08042df0:	.4byte 0x00000161
_08042df4:	.4byte 0x000002B2
_08042df8:	.4byte 0x000002F2
	thumb_func_end sub_08042ad8

	thumb_func_start sub_08042dfc
sub_08042dfc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	add		r7, r6, #0x0
	add		r7, #0x40
	ldr		r0, _08042eb8
	str		r0, [r6, #0x4c]
	ldr		r0, _08042ebc
	str		r0, [r6, #0xc]
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_08042e34
	ldr		r0, _08042ec0
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080006b4
_08042e34:
	mov		r0, #0x92
	lsl		r0, r0, #0x2
	add		r5, r6, r0
	mov		r1, #0x95
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	ldr		r4, _08042ec4
	str		r4, [r0, #0x0]
	add		r1, #0x8
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r5, #0x0
	mov		r1, #0x2
	bl		sub_080006b4
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r5, r6, r0
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	add		r1, #0x8
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r5, #0x0
	mov		r1, #0x2
	bl		sub_080006b4
	add		r0, r6, #0x0
	add		r0, #0xf8
	mov		r1, #0x2
	bl		sub_0808e28c
	str		r4, [r6, #0x4c]
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042eac
	add		r0, r6, #0x0
	bl		sub_080b74c8
_08042eac:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x42EB6, 0x2

_08042eb8:	.4byte 0x080e1acc
_08042ebc:	.4byte 0x080e1aec
_08042ec0:	.4byte 0x080e192c
_08042ec4:	.4byte 0x080e1b74
	thumb_func_end sub_08042dfc

	thumb_func_start sub_08042ec8
sub_08042ec8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r0, #0x40
	bl		sub_08042a0c
	add		r5, r7, #0x0
	add		r5, #0xa8
	ldrh	r1, [r5, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xf0
	ldr		r0, [r4, #0x0]
	neg		r0, r0
	asr		r0, r0, #0x8
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r1, _08042f7c
	mov		r10, r1
	mov		r2, #0x2
	ldrsh	r1, [r1, r2]
	sub		r0, r0, r1
	add		r3, #0x2e
	add		r1, r7, r3
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	mov		r3, #0xd5
	lsl		r3, r3, #0x2
	add		r3, r3, r7
	mov		r9, r3
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_08042fec
	cmp		r0, #0x1
	bne		_08042f3e
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x7
	bl		sub_08046e4c
_08042f3e:
	mov		r2, #0xd4
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xc
	bne		_08042f80
	mov		r3, #0xc4
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	add		r2, r7, #0x0
	add		r2, #0xaa
	ldrh	r2, [r2, #0x0]
	add		r2, #0x8
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	ldr		r3, [r4, #0x0]
	asr		r3, r3, #0x8
	lsl		r3, r3, #0x13
	asr		r3, r3, #0x10
	add		r4, r7, #0x0
	add		r4, #0xeb
	ldrb	r4, [r4, #0x0]
	str		r4, [sp, #0x0]
	bl		sub_08046e84
	mov		r3, r9
	str		r0, [r3, #0x0]
	b		_08042fec

_08042f7c:	.4byte 0x0200CE44

_08042f80:
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r2, #0xcf
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldr		r6, [r0, #0x0]
	mov		r3, #0xf0
	lsl		r3, r3, #0x8
	add		r5, r6, r3
	ldr		r0, _08043060
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	mov		r1, #0xd0
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x16
	mul		r0, r4
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r6
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	lsl		r5, r5, #0x8
	asr		r5, r5, #0x10
	mov		r2, #0x90
	lsl		r2, r2, #0x9
	sub		r2, r2, r4
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	sub		r2, r2, r0
	lsl		r2, r2, #0x8
	asr		r2, r2, #0x10
	asr		r4, r4, #0x8
	lsl		r4, r4, #0x13
	asr		r4, r4, #0x10
	add		r0, r7, #0x0
	add		r0, #0xeb
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	mov		r0, r8
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08046e84
	mov		r1, r9
	str		r0, [r1, #0x0]
_08042fec:
	mov		r2, #0xd6
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08043014
	mov		r3, #0x92
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	bl		sub_08042a0c
	mov		r0, #0xae
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	strh	r0, [r1, #0x0]
_08043014:
	mov		r0, #0xd7
	lsl		r0, r0, #0x2
	add		r2, r7, r0
	ldr		r0, [r2, #0x0]
	mov		r3, #0x1
	neg		r3, r3
	cmp		r0, r3
	beq		_08043050
	mov		r1, #0x88
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08043036
	str		r3, [r2, #0x0]
_08043036:
	mov		r2, #0xc6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	bl		sub_08042a0c
	mov		r3, #0x8d
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	ldrh	r1, [r0, #0x0]
	mov		r2, #0xfe
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
_08043050:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08043060:	.4byte 0x0200CE30
	thumb_func_end sub_08042ec8

	thumb_func_start sub_08043064
sub_08043064:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r5, r7, r0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0xc
	bne		_0804307c
	b		_080431ee
_0804307c:
	cmp		r0, #0x2
	bne		_08043082
	b		_080431ee
_08043082:
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r2, [r0, #0x0]
	add		r2, #0x1
	str		r2, [r0, #0x0]
	add		r6, r7, #0x0
	add		r6, #0xf4
	mov		r3, #0xc5
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r4, #0xc8
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	ldr		r0, [r0, #0x0]
	mul		r0, r2
	ldr		r4, [r1, #0x0]
	add		r4, r4, r0
	ldr		r0, _08043164
	mov		r8, r0
	ldr		r1, [r0, #0x0]
	mov		r9, r1
	ldr		r1, [r1, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r2
	mul		r0, r2
	add		r1, #0xe4
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_080bbcac
	sub		r4, r4, r0
	str		r4, [r6, #0x0]
	mov		r3, #0xcb
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r2, #0xc2
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	sub		r4, r4, r0
	str		r4, [r1, #0x0]
	sub		r3, #0x8
	add		r0, r7, r3
	ldr		r1, [r0, #0x0]
	mov		r4, r8
	add		r3, r7, #0x0
	add		r3, #0xec
	cmp		r1, #0x0
	beq		_080430f2
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
_080430f2:
	mov		r1, #0xca
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_08043108
	add		r1, r7, #0x0
	add		r1, #0xf0
	ldr		r0, [r1, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_08043108:
	ldr		r0, [r3, #0x0]
	mov		r1, #0x1
	cmp		r0, #0x0
	bgt		_08043116
	mov		r2, #0x1
	neg		r2, r2
	add		r1, r2, #0x0
_08043116:
	mov		r2, #0xd8
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r2, #0x0
	strb	r1, [r0, #0x0]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0xf2
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	ldr		r1, [r6, #0x0]
	cmp		r1, r0
	bgt		_080431ee
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x3
	beq		_0804315a
	mov		r0, #0xd5
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0xcf
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldr		r0, [r3, #0x0]
	str		r0, [r1, #0x0]
	mov		r3, #0xd0
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	add		r0, r7, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
_0804315a:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0xb
	bne		_08043168
	mov		r0, #0xc
	b		_08043184

_08043164:	.4byte 0x080d32a0

_08043168:
	cmp		r0, #0x4
	bne		_0804317c
	ldr		r3, _08043178
	add		r0, r7, r3
	strb	r2, [r0, #0x0]
	mov		r0, #0xc
	b		_08043184

.incbin "base.gba", 0x43176, 0x2

_08043178:	.4byte 0x00000363

_0804317c:
	ldr		r3, _080431fc
	add		r0, r7, r3
	strb	r2, [r0, #0x0]
	mov		r0, #0xb
_08043184:
	str		r0, [r5, #0x0]
	mov		r1, #0xd6
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r3, [r0, #0x0]
	add		r2, r3, #0x0
	add		r2, #0xf2
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	lsl		r0, r0, #0x8
	str		r0, [r6, #0x0]
	mov		r0, #0xc5
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	mov		r0, #0xc9
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x2
	str		r0, [r1, #0x0]
	mov		r2, #0xca
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x2
	str		r0, [r1, #0x0]
	mov		r4, #0xcb
	lsl		r4, r4, #0x2
	add		r1, r7, r4
	mov		r0, #0x81
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	str		r0, [r1, #0x0]
	sub		r4, #0xc
	add		r1, r7, r4
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	str		r0, [r1, #0x0]
	add		r4, #0x18
	add		r1, r7, r4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0x49
	bl		sub_0808f690
_080431ee:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x431FA, 0x2

_080431fc:	.4byte 0x00000363
	thumb_func_end sub_08043064

	thumb_func_start sub_08043200
sub_08043200:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, r0, #0x0
	str		r1, [sp, #0x0]
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r9, r2
	add		r0, r1, #0x0
	add		r0, #0xe4
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x8
	bne		_08043238
	ldr		r1, _08043234
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r4, [r0, r3]
	b		_08043248

.incbin "base.gba", 0x43232, 0x2

_08043234:	.4byte 0x080d32a4

_08043238:
	ldr		r1, _080432d8
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r6, #0x84
	lsl		r6, r6, #0x1
	add		r0, r0, r6
	mov		r2, #0x0
	ldrsh	r4, [r0, r2]
_08043248:
	ldr		r3, [sp, #0x0]
	ldr		r6, _080432dc
	add		r0, r3, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_08043310
	mov		r2, #0xd4
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	sub		r0, #0x6
	cmp		r0, #0x1
	bhi		_08043310
	sub		r6, #0x9
	add		r0, r3, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x4
	bne		_08043310
	add		r2, #0x11
	add		r0, r7, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08043310
	ldr		r0, [r1, #0x0]
	ldr		r2, [r0, #0x0]
	mov		r3, #0x2
	ldrsh	r0, [r2, r3]
	add		r1, r2, #0x0
	add		r1, #0xf2
	mov		r6, #0x0
	ldrsh	r1, [r1, r6]
	add		r0, r0, r1
	lsl		r0, r0, #0x8
	mov		r10, r0
	mov		r3, #0x0
	ldr		r0, _080432e0
	mov		r8, r0
	mov		r1, #0xc5
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r5, [r0, #0x0]
	mov		r6, #0x8d
	lsl		r6, r6, #0x1
	add		r1, r2, r6
	mov		r2, #0x2
_080432a2:
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	lsl		r0, r0, #0x8
	add		r0, r10
	cmp		r0, r5
	bgt		_080432b4
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
_080432b4:
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080432a2
	mov		r1, #0xd4
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x7
	bne		_080432e4
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r6, #0xae
	lsl		r6, r6, #0x1
	add		r0, r0, r6
	b		_080432f2

_080432d8:	.4byte 0x080d32a4
_080432dc:	.4byte 0x00000249
_080432e0:	.4byte 0x080d32a8

_080432e4:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
_080432f2:
	add		r0, r0, r3
	ldrb	r5, [r0, #0x0]
	ldr		r0, _0804330c
	mov		r1, #0x64
	bl		sub_080b63dc
	cmp		r0, r5
	bge		_08043310
	add		r0, r7, #0x0
	ldr		r1, [sp, #0x0]
	bl		sub_08043c0c
	b		_0804344c

_0804330c:	.4byte 0x0200BDD4

_08043310:
	mov		r3, #0xd4
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	ldr		r6, [sp, #0x0]
	ldr		r1, _08043378
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	add		r3, #0x11
	add		r0, r7, r3
	strb	r1, [r0, #0x0]
	mov		r6, #0xd5
	lsl		r6, r6, #0x2
	add		r1, r7, r6
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_08043336
	str		r2, [r1, #0x0]
_08043336:
	mov		r0, #0xc5
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	add		r0, r7, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r2, #0xcb
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	mov		r3, #0xc8
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r4, [r0, #0x0]
	mov		r10, r4
	ldr		r5, [r1, #0x0]
	mov		r8, r5
	mov		r6, #0x1
	mov		r0, r9
	lsl		r0, r0, #0x2
	mov		r9, r0
	add		r1, r7, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x4]
	add		r2, r7, #0x0
	add		r2, #0xec
	str		r2, [sp, #0x8]
	add		r3, r7, #0x0
	add		r3, #0xf0
	str		r3, [sp, #0xc]
	b		_08043380

.incbin "base.gba", 0x43376, 0x2

_08043378:	.4byte 0x00000249

_0804337c:
	add		r5, r4, #0x0
	add		r6, #0x1
_08043380:
	mov		r4, r10
	mul		r4, r6
	add		r4, r8
	ldr		r2, _0804345c
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r6
	mul		r0, r6
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	str		r2, [sp, #0x10]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r5
	ldr		r2, [sp, #0x10]
	cmp		r0, #0x0
	bge		_0804337c
	ldr		r5, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf2
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_0804337c
	ldr		r2, [sp, #0x0]
	ldr		r3, _08043460
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	add		r0, r5, #0x0
	add		r0, #0xa4
	add		r0, r9
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	add		r3, r1, #0x0
	mul		r3, r0
	mov		r8, r3
	mov		r0, #0xc9
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	sub		r0, r3, r0
	sub		r6, #0x1
	add		r1, r6, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xa6
	add		r0, r9
	mov		r2, #0x0
	ldrsh	r4, [r0, r2]
	lsl		r4, r4, #0x8
	mov		r3, #0xca
	lsl		r3, r3, #0x2
	add		r5, r7, r3
	ldr		r1, [sp, #0xc]
	ldr		r0, [r1, #0x0]
	sub		r0, r4, r0
	add		r1, r6, #0x0
	bl		sub_080bbcac
	str		r0, [r5, #0x0]
	mov		r2, #0xce
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r3, #0xbd
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r6, r8
	str		r6, [r0, #0x0]
	sub		r2, #0x40
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	add		r3, #0x8
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	mov		r6, #0xd6
	lsl		r6, r6, #0x2
	add		r1, r7, r6
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r0, _08043464
	add		r1, r7, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
_0804344c:
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804345c:	.4byte 0x0200D568
_08043460:	.4byte 0x0000024B
_08043464:	.4byte 0x00000362
	thumb_func_end sub_08043200

	thumb_func_start sub_08043468
sub_08043468:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r7, r0, #0x0
	add		r3, r1, #0x0
	mov		r8, r2
	add		r0, r3, #0x0
	add		r0, #0xe4
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x7
	bne		_08043494
	ldr		r0, _08043490
	ldr		r0, [r0, #0x0]
	mov		r1, #0x83
	lsl		r1, r1, #0x1
	b		_0804349c

.incbin "base.gba", 0x4348E, 0x2

_08043490:	.4byte 0x0200D568

_08043494:
	ldr		r0, _08043510
	ldr		r0, [r0, #0x0]
	mov		r1, #0x84
	lsl		r1, r1, #0x1
_0804349c:
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r4, [r0, r2]
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, _08043514
	add		r0, r3, r1
	ldrb	r1, [r0, #0x0]
	ldr		r2, _08043518
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	mov		r3, #0xd5
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_080434c8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_080434c8:
	mov		r0, #0xc5
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	add		r0, r7, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r2, #0xcb
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	mov		r3, #0xc8
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r4, [r0, #0x0]
	mov		r10, r4
	ldr		r6, [r1, #0x0]
	mov		r9, r6
	mov		r5, #0x1
	mov		r0, r8
	add		r0, #0xec
	str		r0, [sp, #0x8]
	add		r1, r7, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xec
	str		r2, [sp, #0x4]
	mov		r3, r8
	add		r3, #0xf0
	str		r3, [sp, #0x10]
	add		r0, r7, #0x0
	add		r0, #0xf0
	str		r0, [sp, #0xc]
	b		_08043520

.incbin "base.gba", 0x4350E, 0x2

_08043510:	.4byte 0x0200D568
_08043514:	.4byte 0x00000249
_08043518:	.4byte 0x00000361

_0804351c:
	add		r6, r4, #0x0
	add		r5, #0x1
_08043520:
	mov		r4, r10
	mul		r4, r5
	add		r4, r9
	ldr		r2, _08043594
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r5
	mul		r0, r5
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	str		r2, [sp, #0x14]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r6
	ldr		r2, [sp, #0x14]
	cmp		r0, #0x0
	bge		_0804351c
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xf2
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_0804351c
	add		r6, r5, #0x0
	ldr		r0, _08043598
	add		r0, r8
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	add		r4, r1, #0x0
	mov		r3, #0x0
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	add		r5, r0, #0x0
	mul		r5, r2
	mov		r0, #0xc0
	lsl		r0, r0, #0x6
	cmp		r5, r0
	ble		_0804357c
	mov		r3, #0x1
_0804357c:
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	cmp		r5, r0
	ble		_08043586
	add		r3, #0x1
_08043586:
	mov		r0, #0x90
	lsl		r0, r0, #0x8
	cmp		r5, r0
	ble		_0804359c
	add		r0, r3, #0x1
	lsl		r1, r0, #0x1
	b		_0804359e

_08043594:	.4byte 0x0200D568
_08043598:	.4byte 0x0000024B

_0804359c:
	lsl		r1, r3, #0x1
_0804359e:
	add		r0, r4, #0x0
	add		r0, #0xbc
	add		r0, r0, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	add		r1, r2, #0x0
	mul		r1, r0
	mov		r8, r1
	mov		r2, #0xc9
	lsl		r2, r2, #0x2
	add		r5, r7, r2
	ldr		r3, [sp, #0x4]
	ldr		r0, [r3, #0x0]
	sub		r0, r1, r0
	sub		r4, r6, #0x1
	add		r1, r4, #0x0
	bl		sub_080bbcac
	str		r0, [r5, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x2
	add		r5, r7, r0
	ldr		r1, [sp, #0x10]
	ldr		r6, [r1, #0x0]
	ldr		r2, [sp, #0xc]
	ldr		r0, [r2, #0x0]
	sub		r0, r6, r0
	add		r1, r4, #0x0
	bl		sub_080bbcac
	str		r0, [r5, #0x0]
	mov		r3, #0xce
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, #0xbd
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r3, r8
	str		r3, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r6, [r0, #0x0]
	mov		r3, #0xbf
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	mov		r0, #0xd6
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r2, _08043630
	add		r1, r7, r2
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4362E, 0x2

_08043630:	.4byte 0x00000362
	thumb_func_end sub_08043468

	thumb_func_start sub_08043634
sub_08043634:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x40
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	ldr		r1, _08043678
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	neg		r0, r0
	str		r0, [sp, #0x8]
	add		r0, r6, #0x0
	add		r0, #0xe4
	ldrh	r0, [r0, #0x0]
	sub		r5, r0, #0x4
	cmp		r5, #0x0
	beq		_08043680
	ldr		r1, _0804367c
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r3, #0x86
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	mov		r3, #0x0
	ldrsh	r4, [r0, r3]
	mov		r8, r1
	b		_08043692

.incbin "base.gba", 0x43676, 0x2

_08043678:	.4byte 0x0000024B
_0804367c:	.4byte 0x080d32ac

_08043680:
	ldr		r0, _080436a4
	ldr		r1, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	mov		r4, #0x85
	lsl		r4, r4, #0x1
	add		r1, r1, r4
	mov		r3, #0x0
	ldrsh	r4, [r1, r3]
	mov		r8, r0
_08043692:
	add		r3, sp, #0x4
	cmp		r5, #0x0
	beq		_080436a8
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	lsl		r1, r2, #0x2
	add		r1, #0x5c
	b		_080436b0

.incbin "base.gba", 0x436A2, 0x2

_080436a4:	.4byte 0x080d32ac

_080436a8:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	lsl		r1, r2, #0x2
	add		r1, #0x38
_080436b0:
	ldr		r0, [r0, #0x0]
	add		r1, r0, r1
	add		r0, r3, #0x0
	mov		r2, #0x4
	bl		sub_0808c818
	ldr		r2, _08043720
	add		r2, r6, r2
	str		r2, [sp, #0x10]
	ldrb	r0, [r2, #0x0]
	ldr		r3, _08043724
	add		r1, r7, r3
	strb	r0, [r1, #0x0]
	mov		r0, #0xd5
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_080436da
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_080436da:
	cmp		r5, #0x0
	beq		_080437bc
	mov		r2, #0xc5
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	add		r0, r7, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r3, #0xcb
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r4, [r0, #0x0]
	mov		r5, #0xc8
	lsl		r5, r5, #0x2
	add		r0, r7, r5
	str		r4, [r0, #0x0]
	str		r4, [sp, #0x14]
	ldr		r6, [r1, #0x0]
	mov		r9, r6
	mov		r5, #0x1
	mov		r0, #0xec
	add		r0, r0, r7
	mov		r10, r0
	mov		r1, sp
	add		r1, #0x6
	str		r1, [sp, #0x34]
	mov		r2, #0xf0
	add		r2, r2, r7
	mov		r8, r2
	add		r3, r7, #0x0
	add		r3, #0x40
	str		r3, [sp, #0x38]
	b		_0804372c

.incbin "base.gba", 0x4371E, 0x2

_08043720:	.4byte 0x00000249
_08043724:	.4byte 0x00000361

_08043728:
	add		r6, r4, #0x0
	add		r5, #0x1
_0804372c:
	ldr		r0, [sp, #0x14]
	add		r4, r0, #0x0
	mul		r4, r5
	add		r4, r9
	ldr		r2, _080437b8
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r5
	mul		r0, r5
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	str		r2, [sp, #0x3c]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r6
	ldr		r2, [sp, #0x3c]
	cmp		r0, #0x0
	bge		_08043728
	ldr		r0, [r2, #0x0]
	add		r0, #0xf2
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_08043728
	add		r0, sp, #0x4
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	ldr		r4, [sp, #0x8]
	add		r3, r4, #0x0
	mul		r3, r0
	str		r3, [sp, #0xc]
	mov		r0, #0xc9
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	sub		r0, r3, r0
	sub		r5, #0x1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	mov		r2, #0xca
	lsl		r2, r2, #0x2
	add		r4, r7, r2
	ldr		r3, [sp, #0x34]
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	lsl		r0, r0, #0x8
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	mov		r3, #0xd4
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r0, #0x8
	str		r0, [r1, #0x0]
	b		_080438fc

.incbin "base.gba", 0x437B6, 0x2

_080437b8:	.4byte 0x0200D568

_080437bc:
	mov		r4, r8
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	mov		r5, #0x2
	ldrsh	r0, [r0, r5]
	mov		r1, r9
	add		r1, #0xf2
	str		r1, [sp, #0x1c]
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	add		r0, r0, r1
	lsl		r0, r0, #0x8
	str		r0, [sp, #0x18]
	mov		r3, #0x1
	neg		r3, r3
	str		r3, [sp, #0x20]
	mov		r4, #0xc5
	lsl		r4, r4, #0x2
	add		r4, r7, r4
	str		r4, [sp, #0x24]
	add		r5, r7, #0x0
	add		r5, #0xf4
	str		r5, [sp, #0x28]
	ldr		r0, [r5, #0x0]
	str		r0, [r4, #0x0]
	mov		r0, #0xc9
	lsl		r0, r0, #0x2
	add		r2, r7, r0
	mov		r1, #0x8f
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r3, #0x24
	ldrsh	r0, [r0, r3]
	ldr		r4, [sp, #0x8]
	add		r1, r4, #0x0
	mul		r1, r0
	str		r1, [r2, #0x0]
	add		r0, sp, #0x4
	mov		r5, #0x0
	ldrsh	r0, [r0, r5]
	lsl		r0, r0, #0x8
	add		r2, r4, #0x0
	mul		r2, r0
	str		r2, [sp, #0xc]
	add		r3, r7, #0x0
	add		r3, #0xec
	str		r3, [sp, #0x2c]
	ldr		r0, [r3, #0x0]
	sub		r0, r2, r0
	bl		sub_080bbcac
	mov		r10, r0
	mov		r5, #0xca
	lsl		r5, r5, #0x2
	add		r4, r7, r5
	mov		r0, sp
	add		r0, #0x6
	str		r0, [sp, #0x30]
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	mov		r2, #0xf0
	add		r2, r2, r7
	mov		r8, r2
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	mov		r1, r10
	sub		r1, #0x1
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	mov		r3, #0xcb
	lsl		r3, r3, #0x2
	add		r6, r7, r3
	mov		r4, #0xc8
	lsl		r4, r4, #0x2
	add		r5, r7, r4
	ldr		r0, [sp, #0x1c]
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	lsl		r4, r4, #0x8
	ldr		r2, [sp, #0x24]
	ldr		r0, [r2, #0x0]
	sub		r4, r4, r0
	mov		r0, r9
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mov		r1, r10
	mul		r1, r0
	add		r0, r1, #0x0
	mov		r2, r10
	mul		r2, r0
	add		r0, r2, #0x0
	mov		r1, r9
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	bl		sub_080bbcac
	add		r4, r4, r0
	add		r0, r4, #0x0
	mov		r1, r10
	bl		sub_080bbcac
	str		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
	mov		r4, #0xd4
	lsl		r4, r4, #0x2
	add		r1, r7, r4
	mov		r0, #0x7
	str		r0, [r1, #0x0]
	ldr		r5, [sp, #0x10]
	ldrb	r0, [r5, #0x0]
	ldr		r4, [sp, #0x28]
	ldr		r1, [sp, #0x2c]
	mov		r10, r1
	ldr		r2, [sp, #0x30]
	str		r2, [sp, #0x34]
	add		r3, r7, #0x0
	add		r3, #0x40
	str		r3, [sp, #0x38]
	cmp		r0, #0x0
	bne		_080438fc
	ldr		r5, [sp, #0x24]
	ldr		r3, [r5, #0x0]
	mov		r1, #0x8d
	lsl		r1, r1, #0x1
	add		r1, r9
	mov		r2, #0x2
_080438c4:
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	lsl		r0, r0, #0x8
	ldr		r5, [sp, #0x18]
	add		r0, r5, r0
	cmp		r0, r3
	bgt		_080438d8
	ldr		r0, [sp, #0x20]
	add		r0, #0x1
	str		r0, [sp, #0x20]
_080438d8:
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080438c4
	mov		r0, #0x1
	neg		r0, r0
	ldr		r1, [sp, #0x20]
	cmp		r1, r0
	beq		_080438fc
	mov		r3, r10
	ldr		r2, [r3, #0x0]
	mov		r5, r8
	ldr		r3, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	str		r0, [sp, #0x0]
	add		r0, r7, #0x0
	bl		sub_08044640
_080438fc:
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	mov		r3, #0xbd
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	ldr		r4, [sp, #0xc]
	str		r4, [r0, #0x0]
	mov		r5, #0xbe
	lsl		r5, r5, #0x2
	add		r1, r7, r5
	ldr		r3, [sp, #0x34]
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r5, #0x4
	add		r0, r7, r5
	str		r2, [r0, #0x0]
	mov		r0, #0xd6
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x38]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r2, _08043954
	add		r1, r7, r2
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	add		sp, #0x40
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08043954:	.4byte 0x00000362
	thumb_func_end sub_08043634

	thumb_func_start sub_08043958
sub_08043958:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	mov		r0, #0x2
	str		r0, [r4, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x40
	add		r0, r5, #0x0
	add		r0, #0xec
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	mov		r1, #0xc5
	lsl		r1, r1, #0x2
	add		r2, r5, r1
	add		r1, r5, #0x0
	add		r1, #0xf4
	ldr		r0, _080439f0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf2
	mov		r6, #0x0
	ldrsh	r0, [r0, r6]
	lsl		r0, r0, #0x8
	cmp		r3, r0
	bge		_08043990
	add		r3, r0, #0x0
_08043990:
	str		r3, [r1, #0x0]
	str		r3, [r2, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, #0xca
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r6, #0xcb
	lsl		r6, r6, #0x2
	add		r0, r5, r6
	str		r1, [r0, #0x0]
	sub		r2, #0x8
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	add		r6, #0xc
	add		r0, r5, r6
	str		r1, [r0, #0x0]
	ldr		r0, _080439f4
	add		r2, r5, r0
	mov		r0, #0xff
	strb	r0, [r2, #0x0]
	mov		r2, #0xd6
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	add		r6, #0x29
	add		r1, r5, r6
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080439f0:	.4byte 0x0200D568
_080439f4:	.4byte 0x00000363
	thumb_func_end sub_08043958

	thumb_func_start sub_080439f8
sub_080439f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r7, r0, #0x0
	str		r1, [sp, #0x4]
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r9, r2
	ldr		r2, _08043a94
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	neg		r0, r0
	str		r0, [sp, #0x8]
	mov		r3, #0xd4
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r0, #0x5
	str		r0, [r1, #0x0]
	ldr		r5, [sp, #0x4]
	ldr		r6, _08043a98
	add		r0, r5, r6
	ldrb	r1, [r0, #0x0]
	ldr		r2, _08043a9c
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	add		r3, #0x4
	add		r1, r7, r3
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_08043a42
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08043a42:
	mov		r5, #0xc5
	lsl		r5, r5, #0x2
	add		r3, r7, r5
	add		r2, r7, #0x0
	add		r2, #0xf4
	ldr		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	mov		r6, #0xcb
	lsl		r6, r6, #0x2
	add		r1, r7, r6
	ldr		r0, _08043aa0
	ldr		r0, [r0, #0x0]
	mov		r5, #0x89
	lsl		r5, r5, #0x1
	add		r4, r0, r5
	mov		r6, #0x0
	ldrsh	r0, [r4, r6]
	str		r0, [r1, #0x0]
	mov		r0, #0xc8
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r5, #0x0
	ldrsh	r0, [r4, r5]
	str		r0, [r1, #0x0]
	mov		r10, r0
	ldr		r6, [r3, #0x0]
	mov		r8, r6
	mov		r5, #0x1
	str		r2, [sp, #0x14]
	mov		r0, r9
	lsl		r0, r0, #0x2
	mov		r9, r0
	add		r1, r7, #0x0
	add		r1, #0x40
	str		r1, [sp, #0x18]
	sub		r2, #0x8
	str		r2, [sp, #0xc]
	add		r3, r7, #0x0
	add		r3, #0xf0
	str		r3, [sp, #0x10]
	b		_08043aa8

_08043a94:	.4byte 0x0000024B
_08043a98:	.4byte 0x00000249
_08043a9c:	.4byte 0x00000361
_08043aa0:	.4byte 0x0200D568

_08043aa4:
	add		r6, r4, #0x0
	add		r5, #0x1
_08043aa8:
	mov		r4, r10
	mul		r4, r5
	add		r4, r8
	ldr		r0, _08043c00
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	mul		r0, r5
	mul		r0, r5
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r6
	cmp		r0, #0x0
	bge		_08043aa4
	ldr		r6, _08043c00
	ldr		r2, [r6, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xf2
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_08043aa4
	add		r0, r2, #0x0
	add		r0, #0x80
	add		r0, r9
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	ldr		r1, [sp, #0x8]
	add		r6, r1, #0x0
	mul		r6, r0
	mov		r8, r6
	mov		r3, #0xc9
	lsl		r3, r3, #0x2
	add		r4, r7, r3
	ldr		r6, [sp, #0xc]
	ldr		r0, [r6, #0x0]
	mov		r1, r8
	sub		r0, r1, r0
	sub		r5, #0x1
	add		r1, r5, #0x0
	str		r2, [sp, #0x1c]
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	mov		r3, #0xca
	lsl		r3, r3, #0x2
	add		r6, r7, r3
	ldr		r2, [sp, #0x1c]
	add		r4, r2, #0x0
	add		r4, #0x82
	add		r4, r9
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x8
	ldr		r2, [sp, #0x10]
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r6, #0x0]
	mov		r3, #0xce
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	mov		r5, #0xbd
	lsl		r5, r5, #0x2
	add		r0, r7, r5
	mov		r6, r8
	str		r6, [r0, #0x0]
	mov		r0, #0xbe
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r5, #0x8
	add		r0, r7, r5
	str		r2, [r0, #0x0]
	mov		r6, #0xd6
	lsl		r6, r6, #0x2
	add		r0, r7, r6
	mov		r4, #0x1
	str		r4, [r0, #0x0]
	ldr		r0, [sp, #0x18]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r1, _08043c04
	add		r0, r7, r1
	strb	r4, [r0, #0x0]
	ldr		r2, [sp, #0x4]
	ldr		r3, _08043c08
	add		r0, r2, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08043bee
	add		r0, r2, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	ble		_08043bee
	ldr		r5, _08043c00
	ldr		r2, [r5, #0x0]
	mov		r6, #0x2
	ldrsh	r0, [r2, r6]
	add		r1, r2, #0x0
	add		r1, #0xf2
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	lsl		r5, r0, #0x8
	sub		r4, #0x2
	mov		r6, #0xd4
	lsl		r6, r6, #0x2
	add		r1, r7, r6
	mov		r0, #0x6
	str		r0, [r1, #0x0]
	mov		r1, #0xc5
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r3, [r0, #0x0]
	mov		r6, #0x8d
	lsl		r6, r6, #0x1
	add		r1, r2, r6
	mov		r2, #0x2
_08043bba:
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	lsl		r0, r0, #0x8
	add		r0, r5, r0
	cmp		r0, r3
	bgt		_08043bc8
	add		r4, #0x1
_08043bc8:
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08043bba
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_08043bee
	ldr		r0, [sp, #0xc]
	ldr		r2, [r0, #0x0]
	ldr		r1, [sp, #0x10]
	ldr		r3, [r1, #0x0]
	ldr		r5, [sp, #0x14]
	ldr		r0, [r5, #0x0]
	str		r0, [sp, #0x0]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08044640
_08043bee:
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x43BFE, 0x2

_08043c00:	.4byte 0x0200D568
_08043c04:	.4byte 0x00000362
_08043c08:	.4byte 0x00000249
	thumb_func_end sub_080439f8

	thumb_func_start sub_08043c0c
sub_08043c0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	mov		r8, r0
	mov		r10, r1
	ldr		r4, _08043c78
	add		r4, r10
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	neg		r0, r0
	str		r0, [sp, #0x0]
	ldr		r0, _08043c7c
	mov		r1, #0x8
	bl		sub_080b63dc
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	mov		r0, r8
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	add		r6, r1, #0x0
	mul		r6, r0
	ldr		r2, _08043c80
	ldr		r0, [r2, #0x0]
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xc4
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r1, r1, #0x8
	sub		r1, r6, r1
	add		r0, #0x2a
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r4, r0, #0x8
	mov		r7, #0x80
	lsl		r7, r7, #0x5
	add		r0, r4, r7
	mov		r9, r2
	cmp		r1, r0
	bgt		_08043c84
	cmp		r5, #0x0
	beq		_08043c74
	cmp		r5, #0x4
	beq		_08043c74
	cmp		r5, #0x6
	bne		_08043cac
_08043c74:
	add		r0, r5, #0x1
	b		_08043ca8

_08043c78:	.4byte 0x0000024B
_08043c7c:	.4byte 0x0200BDD4
_08043c80:	.4byte 0x080d32b0

_08043c84:
	mov		r1, #0xb0
	lsl		r1, r1, #0x8
	sub		r1, r1, r4
	add		r0, r3, #0x0
	add		r0, #0xc6
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	sub		r0, r6, r0
	cmp		r1, r0
	bgt		_08043cac
	cmp		r5, #0x1
	beq		_08043ca6
	cmp		r5, #0x5
	beq		_08043ca6
	cmp		r5, #0x7
	bne		_08043cac
_08043ca6:
	sub		r0, r5, #0x1
_08043ca8:
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
_08043cac:
	mov		r2, r8
	add		r2, #0xf0
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xda
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r1, r1, #0x8
	ldr		r6, [r2, #0x0]
	add		r1, r6, r1
	add		r0, #0x16
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r4, r0, #0x8
	ldr		r7, _08043cf4
	add		r0, r4, r7
	str		r2, [sp, #0xC]
	cmp		r1, r0
	bgt		_08043cf8
	cmp		r5, #0x3
	beq		_08043ce2
	cmp		r5, #0x6
	beq		_08043ce2
	cmp		r5, #0x7
	bne		_08043d22
_08043ce2:
	lsr		r0, r5, #0x1
	mov		r2, #0x1
	and		r0, r2
	lsr		r1, r5, #0x2
	and		r1, r2
	add		r0, r0, r1
	sub		r0, r5, r0
	b		_08043d1e

.incbin "base.gba", 0x43CF2, 0x2

_08043cf4:	.4byte 0xFFFFE800

_08043cf8:
	mov		r1, #0xc8
	lsl		r1, r1, #0x7
	sub		r1, r1, r4
	add		r0, r3, #0x0
	add		r0, #0xd8
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	add		r0, r6, r0
	cmp		r1, r0
	bgt		_08043d22
	cmp		r5, #0x2
	beq		_08043d1a
	cmp		r5, #0x4
	beq		_08043d1a
	cmp		r5, #0x5
	bne		_08043d22
_08043d1a:
	lsr		r0, r5, #0x1
	add		r0, r5, r0
_08043d1e:
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
_08043d22:
	mov		r1, #0xd4
	lsl		r1, r1, #0x2
	add		r1, r8
	mov		r2, #0x0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08043d32
	mov		r2, #0x1
_08043d32:
	str		r2, [r1, #0x0]
	ldr		r0, _08043d9c
	add		r0, r10
	ldrb	r1, [r0, #0x0]
	ldr		r0, _08043da0
	add		r0, r8
	strb	r1, [r0, #0x0]
	mov		r1, #0xd5
	lsl		r1, r1, #0x2
	add		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_08043d50
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08043d50:
	mov		r3, #0xc5
	lsl		r3, r3, #0x2
	add		r3, r8
	mov		r0, r8
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x0]
	mov		r2, #0xcb
	lsl		r2, r2, #0x2
	add		r2, r8
	mov		r4, r9
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r7, #0x84
	lsl		r7, r7, #0x1
	add		r0, r0, r7
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	str		r1, [r2, #0x0]
	mov		r1, #0xc8
	lsl		r1, r1, #0x2
	add		r1, r8
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	str		r0, [r1, #0x0]
	str		r0, [sp, #0x4]
	ldr		r6, [r3, #0x0]
	mov		r10, r6
	mov		r7, #0x1
	mov		r0, r8
	add		r0, #0xec
	str		r0, [sp, #0x8]
	lsl		r5, r5, #0x1
	mov		r9, r5
	mov		r1, r8
	add		r1, #0x40
	str		r1, [sp, #0x10]
	b		_08043da8

_08043d9c:	.4byte 0x00000249
_08043da0:	.4byte 0x00000361

_08043da4:
	add		r6, r4, #0x0
	add		r7, #0x1
_08043da8:
	ldr		r2, [sp, #0x4]
	add		r4, r2, #0x0
	mul		r4, r7
	add		r4, r10
	ldr		r5, _08043e90
	ldr		r1, [r5, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r7
	mul		r0, r7
	add		r1, #0xe4
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r6
	cmp		r0, #0x0
	bge		_08043da4
	ldr		r5, [r5, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_08043da4
	add		r0, r5, #0x0
	add		r0, #0xc4
	add		r0, r9
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r0, r0, #0x8
	ldr		r2, [sp, #0x0]
	add		r1, r2, #0x0
	mul		r1, r0
	mov		r10, r1
	mov		r4, #0xc9
	lsl		r4, r4, #0x2
	add		r4, r8
	sub		r6, r7, #0x1
	mov		r0, r10
	add		r1, r6, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd4
	add		r0, r9
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r5, r0, #0x8
	ldr		r4, [sp, #0xC]
	ldr		r1, [r4, #0x0]
	add		r0, r5, r1
	mov		r2, #0xc8
	lsl		r2, r2, #0x7
	cmp		r0, r2
	ble		_08043e24
	sub		r5, r2, r1
_08043e24:
	mov		r4, #0xca
	lsl		r4, r4, #0x2
	add		r4, r8
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	mov		r0, #0xce
	lsl		r0, r0, #0x2
	add		r0, r8
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	mov		r1, #0xbd
	lsl		r1, r1, #0x2
	add		r1, r8
	ldr		r7, [sp, #0x8]
	ldr		r0, [r7, #0x0]
	add		r0, r10
	str		r0, [r1, #0x0]
	mov		r1, #0xbe
	lsl		r1, r1, #0x2
	add		r1, r8
	ldr		r3, [sp, #0xC]
	ldr		r0, [r3, #0x0]
	add		r0, r5, r0
	str		r0, [r1, #0x0]
	mov		r0, #0xbf
	lsl		r0, r0, #0x2
	add		r0, r8
	str		r2, [r0, #0x0]
	mov		r1, #0xd6
	lsl		r1, r1, #0x2
	add		r1, r8
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x10]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r1, _08043e94
	add		r1, r8
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08043e90:	.4byte 0x0200D568
_08043e94:	.4byte 0x00000362
	thumb_func_end sub_08043c0c

	thumb_func_start sub_08043e98
sub_08043e98:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	ldr		r2, _08043f24
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	neg		r0, r0
	str		r0, [sp, #0x0]
	mov		r3, #0xd4
	lsl		r3, r3, #0x2
	add		r2, r7, r3
	mov		r0, #0x8
	str		r0, [r2, #0x0]
	ldr		r4, _08043f28
	add		r1, r1, r4
	ldrb	r1, [r1, #0x0]
	ldr		r2, _08043f2c
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	add		r3, #0x4
	add		r1, r7, r3
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_08043ed8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08043ed8:
	mov		r4, #0xc5
	lsl		r4, r4, #0x2
	add		r3, r7, r4
	add		r0, r7, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x0]
	mov		r0, #0xcb
	lsl		r0, r0, #0x2
	add		r2, r7, r0
	ldr		r0, _08043f30
	ldr		r0, [r0, #0x0]
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	str		r1, [r2, #0x0]
	mov		r2, #0xc8
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	str		r0, [r1, #0x0]
	mov		r9, r0
	ldr		r5, [r3, #0x0]
	mov		r8, r5
	mov		r2, #0x1
	add		r0, r7, #0x0
	add		r0, #0x40
	str		r0, [sp, #0x8]
	mov		r1, #0xec
	add		r1, r1, r7
	mov		r10, r1
	add		r3, r7, #0x0
	add		r3, #0xf0
	str		r3, [sp, #0x4]
	b		_08043f38

_08043f24:	.4byte 0x0000024B
_08043f28:	.4byte 0x00000249
_08043f2c:	.4byte 0x00000361
_08043f30:	.4byte 0x0200D568

_08043f34:
	add		r5, r4, #0x0
	add		r2, #0x1
_08043f38:
	mov		r4, r9
	mul		r4, r2
	add		r4, r8
	ldr		r6, _08044010
	ldr		r1, [r6, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r2
	mul		r0, r2
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	str		r2, [sp, #0xc]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r5
	ldr		r2, [sp, #0xc]
	cmp		r0, #0x0
	bge		_08043f34
	ldr		r6, [r6, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xf2
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_08043f34
	add		r0, r6, #0x0
	add		r0, #0xb0
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	ldr		r1, [sp, #0x0]
	add		r4, r1, #0x0
	mul		r4, r0
	mov		r8, r4
	mov		r3, #0xc9
	lsl		r3, r3, #0x2
	add		r4, r7, r3
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	mov		r3, r8
	sub		r0, r3, r0
	sub		r5, r2, #0x1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r6, #0xb2
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x8
	ldr		r2, [sp, #0x4]
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	mov		r3, #0xce
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	mov		r4, #0xbd
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	mov		r1, r8
	str		r1, [r0, #0x0]
	sub		r3, #0x40
	add		r1, r7, r3
	mov		r4, #0x0
	ldrsh	r0, [r6, r4]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	mov		r1, #0xbf
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r2, #0xd6
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x8]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r3, _08044014
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08044010:	.4byte 0x0200D568
_08044014:	.4byte 0x00000362
	thumb_func_end sub_08043e98

	thumb_func_start sub_08044018
sub_08044018:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r2, r7, r0
	mov		r0, #0x9
	str		r0, [r2, #0x0]
	ldr		r2, _080440a0
	add		r1, r1, r2
	ldrb	r1, [r1, #0x0]
	ldr		r3, _080440a4
	add		r0, r7, r3
	mov		r2, #0x0
	strb	r1, [r0, #0x0]
	mov		r4, #0xd5
	lsl		r4, r4, #0x2
	add		r1, r7, r4
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_0804404c
	str		r2, [r1, #0x0]
_0804404c:
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r3, #0xc5
	lsl		r3, r3, #0x2
	add		r2, r7, r3
	add		r0, r7, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	mov		r4, #0xcb
	lsl		r4, r4, #0x2
	add		r1, r7, r4
	ldr		r0, _080440a8
	ldr		r0, [r0, #0x0]
	mov		r4, #0x87
	lsl		r4, r4, #0x1
	add		r3, r0, r4
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	str		r0, [r1, #0x0]
	mov		r0, #0xc8
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	str		r0, [r1, #0x0]
	mov		r10, r0
	ldr		r6, [r2, #0x0]
	mov		r9, r6
	mov		r5, #0x1
	add		r0, r7, #0x0
	add		r0, #0x40
	str		r0, [sp, #0x0]
	mov		r1, #0xec
	add		r1, r1, r7
	mov		r8, r1
	add		r2, r7, #0x0
	add		r2, #0xf0
	str		r2, [sp, #0x4]
	b		_080440b0

_080440a0:	.4byte 0x00000249
_080440a4:	.4byte 0x00000361
_080440a8:	.4byte 0x0200D568

_080440ac:
	add		r6, r4, #0x0
	add		r5, #0x1
_080440b0:
	mov		r4, r10
	mul		r4, r5
	add		r4, r9
	ldr		r2, _08044168
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r5
	mul		r0, r5
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	str		r2, [sp, #0x8]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r6
	ldr		r2, [sp, #0x8]
	cmp		r0, #0x0
	bge		_080440ac
	ldr		r0, [r2, #0x0]
	add		r0, #0xf2
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_080440ac
	mov		r2, #0xc9
	lsl		r2, r2, #0x2
	add		r6, r7, r2
	mov		r3, #0xbd
	lsl		r3, r3, #0x2
	add		r4, r7, r3
	ldr		r0, [r4, #0x0]
	neg		r0, r0
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	sub		r5, #0x1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r6, #0x0]
	mov		r3, #0xca
	lsl		r3, r3, #0x2
	add		r6, r7, r3
	mov		r1, #0xbe
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r2, [sp, #0x4]
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r6, #0x0]
	ldr		r0, [r4, #0x0]
	neg		r0, r0
	str		r0, [r4, #0x0]
	mov		r3, #0xbf
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r5, [r0, #0x0]
	mov		r2, #0xd6
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r6, #0x1
	str		r6, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	mov		r3, r8
	ldr		r1, [r3, #0x0]
	ldr		r0, [r4, #0x0]
	mul		r0, r1
	cmp		r0, #0x0
	blt		_08044170
	ldr		r4, _0804416c
	add		r0, r7, r4
	strb	r5, [r0, #0x0]
	b		_08044176

.incbin "base.gba", 0x44166, 0x2

_08044168:	.4byte 0x0200D568
_0804416c:	.4byte 0x00000362

_08044170:
	ldr		r1, _08044188
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
_08044176:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x44186, 0x2

_08044188:	.4byte 0x00000362
	thumb_func_end sub_08044018

	thumb_func_start sub_0804418c
sub_0804418c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r5, r0, #0x0
	mov		r0, #0xcb
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r12, r0
	mov		r1, #0xd4
	lsl		r1, r1, #0x2
	add		r1, r1, r5
	mov		r9, r1
	ldr		r0, [r1, #0x0]
	cmp		r0, #0xa
	bne		_080441c8
	mov		r0, #0x0
	mov		r2, r12
	str		r0, [r2, #0x0]
	mov		r3, #0xc8
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	str		r0, [r1, #0x0]
	mov		r4, #0xce
	lsl		r4, r4, #0x2
	add		r1, r5, r4
	str		r0, [r1, #0x0]
	b		_0804462c
_080441c8:
	mov		r7, #0xc5
	lsl		r7, r7, #0x2
	add		r7, r5, r7
	str		r7, [sp, #0x14]
	mov		r0, #0xf4
	add		r0, r0, r5
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x0]
	mov		r1, #0xca
	lsl		r1, r1, #0x2
	add		r1, r1, r5
	mov		r10, r1
	mov		r4, #0x0
	str		r4, [r1, #0x0]
	mov		r2, #0xce
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r4, [r0, #0x0]
	mov		r3, #0xc2
	lsl		r3, r3, #0x2
	add		r3, r5, r3
	ldr		r2, _08044244
	ldr		r0, [r2, #0x0]
	ldr		r6, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xf2
	mov		r7, #0x0
	ldrsh	r1, [r0, r7]
	lsl		r1, r1, #0x8
	ldr		r3, [r3, #0x0]
	sub		r1, r3, r1
	mov		r7, #0x2
	ldrsh	r0, [r6, r7]
	lsl		r0, r0, #0x8
	cmp		r1, r0
	ble		_08044214
	b		_08044348
_08044214:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	cmp		r0, #0xb
	bne		_08044248
	add		r1, r5, #0x0
	add		r1, #0xec
	mov		r2, #0xc0
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r3, #0xc9
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r4, [r0, #0x0]
	mov		r7, r10
	str		r4, [r7, #0x0]
	mov		r1, #0xd6
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r5, #0x40
	mov		r9, r5
	b		_08044622

_08044244:	.4byte 0x080d32b4

_08044248:
	add		r2, r5, #0x0
	add		r2, #0xec
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	mov		r7, r12
	str		r4, [r7, #0x0]
	mov		r0, #0xc8
	lsl		r0, r0, #0x2
	add		r3, r5, r0
	str		r4, [r3, #0x0]
	mov		r4, #0xc9
	lsl		r4, r4, #0x2
	add		r1, r5, r4
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	ldr		r3, [r3, #0x0]
	str		r3, [sp, #0x0]
	ldr		r0, [sp, #0x14]
	ldr		r7, [r0, #0x0]
	mov		r10, r7
	mov		r6, #0x1
	str		r2, [sp, #0xC]
	mov		r1, #0xf0
	add		r1, r1, r5
	mov		r8, r1
	mov		r2, #0x40
	add		r2, r2, r5
	mov		r9, r2
	b		_08044290
_0804428c:
	add		r7, r4, #0x0
	add		r6, #0x1
_08044290:
	ldr		r3, [sp, #0x0]
	add		r4, r3, #0x0
	mul		r4, r6
	add		r4, r10
	ldr		r2, _08044318
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r6
	mul		r0, r6
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	str		r2, [sp, #0x10]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r7
	ldr		r2, [sp, #0x10]
	cmp		r0, #0x0
	bge		_0804428c
	ldr		r0, [r2, #0x0]
	add		r0, #0xf2
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_0804428c
	mov		r0, #0xbd
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	mov		r1, #0xc9
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	sub		r1, r6, #0x1
	ldr		r0, [r0, #0x0]
	mul		r0, r1
	ldr		r3, [sp, #0xC]
	ldr		r1, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r4, #0xbe
	lsl		r4, r4, #0x2
	add		r1, r5, r4
	mov		r7, r8
	ldr		r0, [r7, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, #0xbf
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	add		r4, #0x6a
	add		r2, r5, r4
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	bhi		_0804432a
	mov		r7, #0xd4
	lsl		r7, r7, #0x2
	add		r1, r5, r7
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x9
	bne		_0804431c
	str		r3, [r1, #0x0]
	b		_08044322

.incbin "base.gba", 0x44316, 0x2

_08044318:	.4byte 0x0200D568

_0804431c:
	ldrb	r0, [r2, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
_08044322:
	mov		r0, #0xd6
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	b		_0804461e
_0804432a:
	mov		r2, #0xd4
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	mov		r0, #0xb
	str		r0, [r1, #0x0]
	mov		r4, #0xd6
	lsl		r4, r4, #0x2
	add		r0, r5, r4
	str		r3, [r0, #0x0]
	ldr		r7, _08044344
	add		r0, r5, r7
	strb	r3, [r0, #0x0]
	b		_08044622

_08044344:	.4byte 0x00000363

_08044348:
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r0, r3, r4
	ldr		r1, [sp, #0x14]
	str		r0, [r1, #0x0]
	mov		r2, r8
	str		r0, [r2, #0x0]
	ldr		r3, _08044380
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bhi		_08044384
	add		r0, r5, #0x0
	add		r0, #0xec
	ldr		r1, [r0, #0x0]
	str		r0, [sp, #0xC]
	cmp		r1, #0x0
	blt		_080443a6
	mov		r7, #0xc9
	lsl		r7, r7, #0x2
	add		r2, r5, r7
	add		r0, r6, r4
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	blt		_080443a6
	b		_0804450c

_08044380:	.4byte 0x00000361

_08044384:
	add		r0, r5, #0x0
	add		r0, #0xec
	ldr		r1, [r0, #0x0]
	str		r0, [sp, #0xC]
	cmp		r1, #0x0
	bge		_080443a6
	mov		r7, #0xc9
	lsl		r7, r7, #0x2
	add		r0, r5, r7
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	add		r1, r6, r4
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	cmp		r0, r1
	blt		_080443a6
	b		_0804450c
_080443a6:
	mov		r4, #0xcb
	lsl		r4, r4, #0x2
	add		r3, r5, r4
	ldr		r0, [r3, #0x0]
	neg		r2, r0
	str		r2, [r3, #0x0]
	ldr		r0, _080443c8
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xfa
	mov		r7, #0x0
	ldrsh	r1, [r1, r7]
	cmp		r2, r1
	bgt		_080443cc
	str		r1, [r3, #0x0]
	b		_080443d8

.incbin "base.gba", 0x443C6, 0x2

_080443c8:	.4byte 0x0200D568

_080443cc:
	add		r0, #0xf8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, r2
	bgt		_080443d8
	str		r0, [r3, #0x0]
_080443d8:
	mov		r2, #0xc8
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	mov		r3, #0xcb
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r7, #0xc9
	lsl		r7, r7, #0x2
	add		r4, r5, r7
	ldr		r0, [r4, #0x0]
	asr		r0, r0, #0x1
	neg		r3, r0
	str		r3, [r4, #0x0]
	ldr		r0, _0804440c
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xf6
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	cmp		r3, r1
	bgt		_08044410
	str		r1, [r4, #0x0]
	b		_0804441c

.incbin "base.gba", 0x4440A, 0x2

_0804440c:	.4byte 0x0200D568

_08044410:
	add		r0, #0xf4
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r0, r3
	bgt		_0804441c
	str		r0, [r4, #0x0]
_0804441c:
	mov		r1, #0xc8
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	mov		r2, #0xc5
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r7, [r0, #0x0]
	mov		r10, r7
	mov		r6, #0x1
	mov		r3, #0xf0
	add		r3, r3, r5
	mov		r8, r3
	mov		r4, #0x40
	add		r4, r4, r5
	mov		r9, r4
	b		_08044444
_08044440:
	add		r7, r4, #0x0
	add		r6, #0x1
_08044444:
	ldr		r0, [sp, #0x4]
	add		r4, r0, #0x0
	mul		r4, r6
	add		r4, r10
	ldr		r2, _080444e4
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r6
	mul		r0, r6
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	str		r2, [sp, #0x10]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r7
	ldr		r2, [sp, #0x10]
	cmp		r0, #0x0
	bge		_08044440
	ldr		r0, [r2, #0x0]
	add		r0, #0xf2
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_08044440
	mov		r0, #0xbd
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	mov		r1, #0xc9
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	sub		r1, r6, #0x1
	ldr		r0, [r0, #0x0]
	mul		r0, r1
	ldr		r3, [sp, #0xC]
	ldr		r1, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r4, #0xbe
	lsl		r4, r4, #0x2
	add		r1, r5, r4
	mov		r7, r8
	ldr		r0, [r7, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, #0xbf
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	add		r4, #0x6a
	add		r2, r5, r4
	ldrb	r0, [r2, #0x0]
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bls		_080444f8
	mov		r7, #0xd4
	lsl		r7, r7, #0x2
	add		r1, r5, r7
	mov		r0, #0xb
	str		r0, [r1, #0x0]
	mov		r1, #0xd6
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	str		r3, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_080444ec
	ldr		r2, _080444e8
	add		r1, r5, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_08044622

.incbin "base.gba", 0x444E2, 0x2

_080444e4:	.4byte 0x0200D568
_080444e8:	.4byte 0x00000363

_080444ec:
	ldr		r4, _080444f4
	add		r0, r5, r4
	strb	r3, [r0, #0x0]
	b		_08044622

_080444f4:	.4byte 0x00000363

_080444f8:
	mov		r7, #0xd4
	lsl		r7, r7, #0x2
	add		r1, r5, r7
	ldrb	r0, [r2, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0xd6
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	b		_0804461e
_0804450c:
	mov		r1, #0xcb
	lsl		r1, r1, #0x2
	add		r3, r5, r1
	ldr		r0, [r3, #0x0]
	neg		r2, r0
	str		r2, [r3, #0x0]
	ldr		r0, _0804452c
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xfa
	mov		r4, #0x0
	ldrsh	r1, [r1, r4]
	cmp		r2, r1
	bgt		_08044530
	str		r1, [r3, #0x0]
	b		_0804453c

_0804452c:	.4byte 0x0200D568

_08044530:
	add		r0, #0xf8
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r0, r2
	bgt		_0804453c
	str		r0, [r3, #0x0]
_0804453c:
	mov		r0, #0xc8
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	mov		r2, #0xcb
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r3, #0xc9
	lsl		r3, r3, #0x2
	add		r4, r5, r3
	ldr		r0, [r4, #0x0]
	asr		r3, r0, #0x1
	str		r3, [r4, #0x0]
	ldr		r0, _0804456c
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xf6
	mov		r7, #0x0
	ldrsh	r1, [r1, r7]
	cmp		r3, r1
	bgt		_08044570
	str		r1, [r4, #0x0]
	b		_0804457c

_0804456c:	.4byte 0x0200D568

_08044570:
	add		r0, #0xf4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, r3
	bgt		_0804457c
	str		r0, [r4, #0x0]
_0804457c:
	mov		r2, #0xc8
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x8]
	mov		r3, #0xc5
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	ldr		r7, [r0, #0x0]
	mov		r10, r7
	mov		r6, #0x1
	mov		r4, #0xf0
	add		r4, r4, r5
	mov		r8, r4
	mov		r0, #0x40
	add		r0, r0, r5
	mov		r9, r0
	b		_080445a4
_080445a0:
	add		r7, r4, #0x0
	add		r6, #0x1
_080445a4:
	ldr		r1, [sp, #0x8]
	add		r4, r1, #0x0
	mul		r4, r6
	add		r4, r10
	ldr		r2, _0804463c
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe6
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r0, r6
	mul		r0, r6
	add		r1, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	str		r2, [sp, #0x10]
	bl		sub_080bbcac
	sub		r4, r4, r0
	sub		r0, r4, r7
	ldr		r2, [sp, #0x10]
	cmp		r0, #0x0
	bge		_080445a0
	ldr		r0, [r2, #0x0]
	add		r0, #0xf2
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bgt		_080445a0
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	mov		r0, #0x8
	str		r0, [r1, #0x0]
	mov		r1, #0xbd
	lsl		r1, r1, #0x2
	add		r2, r5, r1
	mov		r3, #0xc9
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	sub		r1, r6, #0x1
	ldr		r0, [r0, #0x0]
	mul		r0, r1
	ldr		r4, [sp, #0xC]
	ldr		r1, [r4, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r7, #0xbe
	lsl		r7, r7, #0x2
	add		r1, r5, r7
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	sub		r3, #0x28
	add		r1, r5, r3
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r4, #0xd6
	lsl		r4, r4, #0x2
	add		r1, r5, r4
_0804461e:
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_08044622:
	mov		r0, r9
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
_0804462c:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804463c:	.4byte 0x0200D568
	thumb_func_end sub_0804418c

	thumb_func_start sub_08044640
sub_08044640:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	add		r5, r3, #0x0
	mov		r1, #0xd7
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	mov		r2, #0xc6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r1, #0x10
	add		r2, r4, #0x0
	mov		r3, #0x0
	bl		sub_0804d2f4
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	mov		r2, #0x8f
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r1, #0x8
	add		r0, r7, r1
	ldr		r2, [sp, #0x0+0x14]
	str		r2, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	add		r4, r6, r0
	ldr		r0, _080446e4
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	mov		r0, #0x16
	mul		r0, r5
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r6
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	mov		r1, #0xfa
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r4, [r0, #0x0]
	ldr		r2, [sp, #0x0+0x14]
	add		r5, r5, r2
	mov		r1, #0x90
	lsl		r1, r1, #0x9
	sub		r1, r1, r5
	ldr		r0, _080446e8
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	mov		r2, #0xfb
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	mov		r1, #0x8d
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, #0xa
	strh	r1, [r0, #0x0]
	add		r2, #0x6
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	ldr		r1, _080446ec
	add		r0, r7, r1
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r2, #0xd
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080446e4:	.4byte 0x0200CE30
_080446e8:	.4byte 0x0200CE44
_080446ec:	.4byte 0x00000236
	thumb_func_end sub_08044640

	thumb_func_start sub_080446f0
sub_080446f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	bl		sub_080b74f4
	mov		r0, #0x40
	add		r0, r0, r7
	mov		r9, r0
	bl		sub_0804d3ec
	ldr		r0, _08044884
	str		r0, [r7, #0x4c]
	ldr		r0, _08044888
	str		r0, [r7, #0xc]
	add		r1, r7, #0x0
	add		r1, #0xf8
	str		r1, [sp, #0x0]
	add		r0, r1, #0x0
	bl		sub_0808e21c
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	add		r2, r7, r2
	str		r2, [sp, #0x4]
	add		r0, r2, #0x0
	bl		sub_0808b374
	mov		r1, #0xb2
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, #0xec
	add		r2, r2, r7
	mov		r10, r2
	lsl		r4, r4, #0x8
	str		r4, [r2, #0x0]
	mov		r0, #0xf0
	add		r0, r0, r7
	mov		r8, r0
	lsl		r5, r5, #0x8
	str		r5, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xf4
	str		r2, [sp, #0x8]
	lsl		r6, r6, #0x8
	str		r6, [r2, #0x0]
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	mov		r0, r9
	mov		r1, #0x11
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	mov		r0, r10
	ldr		r6, [r0, #0x0]
	mov		r5, #0xf0
	lsl		r5, r5, #0x8
	add		r4, r6, r5
	ldr		r1, _0804488c
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r1, #0x16
	mul		r0, r1
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r6
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	add		r0, r7, #0x0
	add		r0, #0xa8
	strh	r4, [r0, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	ldr		r2, [sp, #0x8]
	ldr		r0, [r2, #0x0]
	add		r1, r1, r0
	mov		r4, #0x90
	lsl		r4, r4, #0x9
	sub		r1, r4, r1
	ldr		r2, _08044890
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	add		r0, r7, #0x0
	add		r0, #0xaa
	strh	r1, [r0, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r7, #0x0
	add		r1, #0xe8
	strh	r0, [r1, #0x0]
	sub		r1, #0x38
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xea
	mov		r1, #0x2
	mov		r9, r1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	sub		r0, #0x2d
	strb	r2, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0xd
	bl		sub_0808e03c
	ldr		r0, [sp, #0x0]
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x4]
	bl		sub_0808b3d4
	mov		r0, r10
	ldr		r6, [r0, #0x0]
	add		r5, r6, r5
	ldr		r1, _0804488c
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r1, #0x16
	mul		r0, r1
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r6
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	asr		r5, r5, #0x8
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x8]
	ldr		r1, [r2, #0x0]
	add		r0, r0, r1
	sub		r4, r4, r0
	ldr		r1, _08044890
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	mov		r0, #0xa7
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	strh	r4, [r2, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r0, r0, r2
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	ldr		r1, _08044894
	add		r0, r7, r1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x0
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x44882, 0x2

_08044884:	.4byte 0x080e1a84
_08044888:	.4byte 0x080e1aa4
_0804488c:	.4byte 0x0200CE30
_08044890:	.4byte 0x0200CE44
_08044894:	.4byte 0x00000161
	thumb_func_end sub_080446f0

	thumb_func_start sub_08044898
sub_08044898:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	cmp		r1, #0x1
	beq		_080448ca
	cmp		r1, #0x1
	bgt		_080448b2
	cmp		r1, #0x0
	beq		_080448bc
	b		_0804497c
_080448b2:
	cmp		r1, #0x2
	beq		_08044926
	cmp		r1, #0x5
	beq		_08044968
	b		_0804497c
_080448bc:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0804497c
_080448ca:
	ldr		r0, _08044904
	mov		r10, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	mov		r9, r1
	mov		r2, #0xc6
	lsl		r2, r2, #0x1
	add		r5, r4, r2
	mov		r0, #0x3
	mov		r8, r0
	ldr		r7, _08044908
	mov		r6, #0x4
_080448e2:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x4]
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	cmp		r0, r9
	ble		_0804490c
	mov		r2, r8
	str		r2, [r5, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0804491e

.incbin "base.gba", 0x44902, 0x2

_08044904:	.4byte 0x0200D54C
_08044908:	.4byte 0xFFFFE000

_0804490c:
	cmp		r0, r7
	bge		_0804491e
	str		r6, [r5, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
_0804491e:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_080448e2
_08044926:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r2, #0xc6
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r2, [r1, #0x0]
	sub		r2, #0x2
	mov		r1, #0x11
	mov		r3, #0x0
	bl		sub_0804d2f4
	ldr		r6, _08044964
	mov		r5, #0x80
	lsl		r5, r5, #0x7
_08044942:
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0x4]
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	cmp		r0, r5
	bhi		_0804495a
	add		r0, r4, #0x0
	bl		sub_080472dc
_0804495a:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08044942

.incbin "base.gba", 0x44962, 0x2

_08044964:	.4byte 0x0200D54C

_08044968:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_08044974:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08044974
_0804497c:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4498A, 0x22

_080449ac:	.4byte 0x080449f4

.incbin "base.gba", 0x449B0, 0x44
	thumb_func_end sub_08044898


.incbin "base.gba", 0x449F4, 0x2A0

_08044c94:

.incbin "base.gba", 0x44C94, 0x60

_08044cf4:

.incbin "base.gba", 0x44CF4, 0x16

_08044d0a:

.incbin "base.gba", 0x44D0A, 0xE96
	thumb_func_start sub_08045ba0
sub_08045ba0:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x10
	add		r5, r0, #0x0
	ldr		r2, _08045bd4
	add		r1, r5, r2
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mov		r4, #0x1
	neg		r4, r4
	cmp		r1, r4
	bne		_08045bba
	mov		r4, #0x1
_08045bba:
	mov		r2, #0x90
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	ldr		r1, [r1, #0x0]
	sub		r1, #0x3
	cmp		r1, #0x9
	bls		_08045bca
	b		_08045e8a
_08045bca:
	lsl		r1, r1, #0x2
	ldr		r2, _08045bd8
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	mov		pc, r1

_08045bd4:	.4byte 0x0000024B
_08045bd8:	.4byte 0x08045bdc
_08045bdc:	.4byte 0x08045cd0

.incbin "base.gba", 0x45BE0, 0x24
	thumb_func_end sub_08045ba0


.incbin "base.gba", 0x45C04, 0x286

_08045e8a:

.incbin "base.gba", 0x45E8A, 0x192
	thumb_func_start sub_0804601c
sub_0804601c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	mov		r10, r3
	ldr		r5, [sp, #0x4+0x34]
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	str		r0, [sp, #0x0]
	bl		sub_0804d3ec
	ldr		r4, _080462a8
	str		r4, [r7, #0x4c]
	ldr		r0, _080462ac
	str		r0, [r7, #0xc]
	add		r1, r7, #0x0
	add		r1, #0xf8
	str		r1, [sp, #0x4]
	add		r0, r1, #0x0
	bl		sub_0808e21c
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	add		r2, r7, r2
	str		r2, [sp, #0x8]
	add		r0, r2, #0x0
	bl		sub_0808b374
	mov		r3, #0xb2
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	bl		sub_0808e21c
	mov		r3, #0xfc
	lsl		r3, r3, #0x1
	add		r3, r7, r3
	str		r3, [sp, #0xC]
	add		r0, r3, #0x0
	bl		sub_0808b374
	mov		r1, #0xfa
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	str		r4, [r7, #0x4c]
	ldr		r0, _080462b0
	str		r0, [r7, #0xc]
	mov		r3, #0x8f
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r6, [r0, #0x0]
	add		r1, #0x4c
	add		r0, r7, r1
	mov		r2, #0x2
	str		r2, [r0, #0x0]
	add		r3, #0xd
	add		r2, r7, r3
	strb	r5, [r2, #0x0]
	add		r1, #0x8
	add		r0, r7, r1
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
	mov		r1, #0x1
	cmp		r5, #0x1
	bgt		_080460be
	mov		r0, #0x1
	neg		r0, r0
	add		r1, r0, #0x0
_080460be:
	ldr		r3, _080462b4
	add		r0, r7, r3
	strb	r1, [r0, #0x0]
	mov		r1, #0x91
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	mov		r0, #0xec
	add		r0, r0, r7
	mov		r9, r0
	mov		r1, r8
	lsl		r0, r1, #0x8
	mov		r3, r9
	str		r0, [r3, #0x0]
	mov		r0, #0xf0
	add		r0, r0, r7
	mov		r8, r0
	mov		r1, r10
	lsl		r0, r1, #0x8
	mov		r3, r8
	str		r0, [r3, #0x0]
	mov		r0, #0xf4
	add		r0, r0, r7
	mov		r10, r0
	ldr		r0, [sp, #0x0+0x34]
	lsl		r0, r0, #0x8
	mov		r1, r10
	str		r0, [r1, #0x0]
	mov		r3, #0x87
	lsl		r3, r3, #0x2
	add		r3, r7, r3
	str		r3, [sp, #0x10]
	ldrb	r0, [r2, #0x0]
	lsl		r1, r0, #0x2
	add		r1, r1, r0
	add		r1, #0x14
	str		r1, [r3, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	mov		r0, r9
	ldr		r6, [r0, #0x0]
	mov		r5, #0xf0
	lsl		r5, r5, #0x8
	add		r4, r6, r5
	ldr		r1, _080462b8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r3, #0x16
	mul		r0, r3
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r6
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	add		r0, r7, #0x0
	add		r0, #0xa8
	strh	r4, [r0, #0x0]
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	add		r1, r1, r0
	mov		r6, #0x90
	lsl		r6, r6, #0x9
	sub		r1, r6, r1
	ldr		r3, _080462bc
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	add		r0, r7, #0x0
	add		r0, #0xaa
	strh	r1, [r0, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r7, #0x0
	add		r1, #0xe8
	strh	r0, [r1, #0x0]
	sub		r1, #0x38
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xea
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	sub		r0, #0x2d
	strb	r3, [r0, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0xd
	bl		sub_0808e03c
	ldr		r0, [sp, #0x4]
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x8]
	bl		sub_0808b3d4
	mov		r0, r9
	ldr		r4, [r0, #0x0]
	add		r5, r4, r5
	ldr		r1, _080462b8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r3, #0x16
	mul		r0, r3
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r4
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	asr		r5, r5, #0x8
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	add		r1, r1, r0
	sub		r1, r6, r1
	ldr		r2, _080462bc
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	mov		r3, #0xa7
	lsl		r3, r3, #0x1
	add		r2, r7, r3
	strh	r1, [r2, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r0, r0, r2
	add		r3, #0x6
	add		r1, r7, r3
	strh	r0, [r1, #0x0]
	ldr		r1, _080462c0
	add		r0, r7, r1
	mov		r2, #0x2
	strb	r2, [r0, #0x0]
	add		r3, #0x34
	add		r4, r7, r3
	ldr		r0, [sp, #0x10]
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x5
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [sp, #0xC]
	bl		sub_0808b3d4
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	strh	r2, [r0, #0x0]
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	sub		r6, r6, r0
	ldr		r1, _080462bc
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r6, r6, r0
	asr		r6, r6, #0x8
	mov		r2, #0xef
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r6, [r0, #0x0]
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	ldr		r0, _080462c4
	add		r1, r7, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r1, #0x86
	lsl		r1, r1, #0x2
	add		r4, r7, r1
	mov		r0, #0xac
	bl		sub_0808af94
	mov		r1, #0x1
	bl		sub_08046f10
	str		r0, [r4, #0x0]
	mov		r2, #0x88
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	ldr		r1, _080462c8
	add		r0, r7, r1
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	ldr		r3, _080462cc
	add		r0, r7, r3
	strb	r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080462a8:	.4byte 0x080e1a04
_080462ac:	.4byte 0x080e1a24
_080462b0:	.4byte 0x080e19a4
_080462b4:	.4byte 0x0000024B
_080462b8:	.4byte 0x0200CE30
_080462bc:	.4byte 0x0200CE44
_080462c0:	.4byte 0x00000161
_080462c4:	.4byte 0x000001F1
_080462c8:	.4byte 0x0000024A
_080462cc:	.4byte 0x0000024D
	thumb_func_end sub_0804601c

	thumb_func_start sub_080462d0
sub_080462d0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	mov		r9, r2
	str		r3, [sp, #0x0]
	bl		sub_080b74f4
	add		r6, r7, #0x0
	add		r6, #0x40
	add		r0, r6, #0x0
	bl		sub_0804d3ec
	ldr		r4, _08046598
	str		r4, [r7, #0x4c]
	ldr		r0, _0804659c
	str		r0, [r7, #0xc]
	add		r0, r7, #0x0
	add		r0, #0xf8
	str		r0, [sp, #0x4]
	bl		sub_0808e21c
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	add		r1, r7, r1
	str		r1, [sp, #0x8]
	add		r0, r1, #0x0
	bl		sub_0808b374
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808e21c
	mov		r2, #0xfc
	lsl		r2, r2, #0x1
	add		r2, r7, r2
	str		r2, [sp, #0xC]
	add		r0, r2, #0x0
	bl		sub_0808b374
	mov		r3, #0xfa
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	str		r4, [r7, #0x4c]
	ldr		r0, _080465a0
	str		r0, [r7, #0xc]
	mov		r2, #0x98
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r3, #0x48
	add		r0, r7, r3
	str		r5, [r0, #0x0]
	mov		r1, #0x90
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x2
	str		r2, [r0, #0x0]
	add		r3, #0xd
	add		r2, r7, r3
	add		r0, sp, #0x38
	ldrb	r0, [r0, #0x0]
	strb	r0, [r2, #0x0]
	add		r1, #0x8
	add		r0, r7, r1
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
	mov		r1, #0x1
	ldr		r0, [sp, #0x4+0x34]
	cmp		r0, #0x1
	bgt		_0804637c
	mov		r3, #0x1
	neg		r3, r3
	add		r1, r3, #0x0
_0804637c:
	ldr		r3, _080465a4
	add		r0, r7, r3
	strb	r1, [r0, #0x0]
	mov		r1, #0x91
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	mov		r0, #0xec
	add		r0, r0, r7
	mov		r8, r0
	mov		r1, r9
	lsl		r0, r1, #0x8
	mov		r3, r8
	str		r0, [r3, #0x0]
	mov		r0, #0xf0
	add		r0, r0, r7
	mov		r10, r0
	ldr		r1, [sp, #0x0]
	lsl		r0, r1, #0x8
	mov		r3, r10
	str		r0, [r3, #0x0]
	mov		r0, #0xf4
	add		r0, r0, r7
	mov		r9, r0
	ldr		r0, [sp, #0x0+0x34]
	lsl		r0, r0, #0x8
	mov		r1, r9
	str		r0, [r1, #0x0]
	mov		r3, #0x87
	lsl		r3, r3, #0x2
	add		r3, r7, r3
	str		r3, [sp, #0x10]
	ldrb	r0, [r2, #0x0]
	lsl		r1, r0, #0x2
	add		r1, r1, r0
	add		r1, #0x14
	str		r1, [r3, #0x0]
	add		r0, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	mov		r0, r8
	ldr		r6, [r0, #0x0]
	mov		r5, #0xf0
	lsl		r5, r5, #0x8
	add		r4, r6, r5
	ldr		r1, _080465a8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	mov		r3, #0x16
	mul		r0, r3
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r6
	asr		r0, r0, #0x8
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	add		r0, r7, #0x0
	add		r0, #0xa8
	strh	r4, [r0, #0x0]
	mov		r0, r10
	ldr		r1, [r0, #0x0]
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	add		r1, r1, r0
	mov		r3, #0x90
	lsl		r3, r3, #0x9
	sub		r1, r3, r1
	ldr		r6, _080465ac
	ldr		r0, [r6, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	add		r0, r7, #0x0
	add		r0, #0xaa
	strh	r1, [r0, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r7, #0x0
	add		r1, #0xe8
	strh	r0, [r1, #0x0]
	sub		r1, #0x38
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xea
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	sub		r0, #0x2d
	strb	r3, [r0, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0xd
	bl		sub_0808e03c
	ldr		r0, [sp, #0x4]
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [sp, #0x8]
	bl		sub_0808b3d4
	mov		r0, r8
	ldr		r4, [r0, #0x0]
	add		r5, r4, r5
	ldr		r1, _080465a8
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	mov		r3, #0x16
	mul		r0, r3
	mov		r1, #0xd8
	lsl		r1, r1, #0x6
	bl		sub_080bbcac
	mul		r0, r4
	asr		r0, r0, #0x8
	sub		r5, r5, r0
	asr		r5, r5, #0x8
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	add		r1, r1, r0
	mov		r0, #0x90
	lsl		r0, r0, #0x9
	sub		r1, r0, r1
	ldr		r0, [r6, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	add		r2, #0x6
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	ldr		r3, _080465b0
	add		r0, r7, r3
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	add		r2, #0x34
	add		r4, r7, r2
	ldr		r3, [sp, #0x10]
	ldr		r1, [r3, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x5
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [sp, #0xC]
	bl		sub_0808b3d4
	mov		r1, #0x0
	ldr		r0, [sp, #0x4+0x34]
	cmp		r0, #0x1
	ble		_080464f0
	mov		r1, #0xf0
_080464f0:
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	mov		r3, r10
	ldr		r1, [r3, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x9
	sub		r1, r0, r1
	ldr		r0, [r6, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	mov		r3, #0xef
	lsl		r3, r3, #0x1
	add		r2, r7, r3
	strh	r1, [r2, #0x0]
	mov		r0, #0xf2
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	ldr		r2, _080465b4
	add		r1, r7, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r3, #0x3a
	add		r4, r7, r3
	mov		r0, #0xac
	bl		sub_0808af94
	mov		r1, #0x1
	bl		sub_08046f10
	str		r0, [r4, #0x0]
	mov		r1, #0x88
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	ldr		r3, _080465b8
	add		r0, r7, r3
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	mov		r1, #0x95
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r3, [r0, #0x0]
	add		r2, #0x8
	add		r0, r7, r2
	str		r3, [r0, #0x0]
	mov		r3, #0x97
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r2, #0xc
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	add		r3, #0xa
	add		r0, r7, r3
	strh	r1, [r0, #0x0]
	sub		r2, #0x17
	add		r0, r7, r2
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
	ldr		r1, _080465bc
	add		r0, r7, r1
	strb	r3, [r0, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x46596, 0x2

_08046598:	.4byte 0x080e1a04
_0804659c:	.4byte 0x080e1a24
_080465a0:	.4byte 0x080e1944
_080465a4:	.4byte 0x0000024B
_080465a8:	.4byte 0x0200CE30
_080465ac:	.4byte 0x0200CE44
_080465b0:	.4byte 0x00000161
_080465b4:	.4byte 0x000001F1
_080465b8:	.4byte 0x0000024A
_080465bc:	.4byte 0x0000024E
	thumb_func_end sub_080462d0

	thumb_func_start sub_080465c0
sub_080465c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r12, r0
	lsl		r1, r1, #0x18
	lsr		r3, r1, #0x18
	mov		r8, r3
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r7, #0x0
	mov		r4, #0x0
	ldr		r0, _08046618
	add		r0, r12
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	mov		r2, #0x0
	cmp		r0, #0x0
	bne		_080465ee
	mov		r2, #0x2
_080465ee:
	mov		r10, r2
	ldr		r2, _0804661c
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r5, r10
	lsl		r0, r5, #0x2
	add		r1, #0x8
	add		r0, r1, r0
	ldr		r5, [r0, #0x0]
	ldr		r6, _08046620
	add		r0, r5, r6
	ldrb	r6, [r0, #0x0]
	cmp		r3, #0x1
	bne		_0804660c
	b		_08046742
_0804660c:
	cmp		r3, #0x1
	bgt		_08046624
	cmp		r3, #0x0
	beq		_0804662e
	b		_0804688a

.incbin "base.gba", 0x46616, 0x2

_08046618:	.4byte 0x00000249
_0804661c:	.4byte 0x080d32d4
_08046620:	.4byte 0x0000024B

_08046624:
	mov		r0, r8
	cmp		r0, #0x2
	bne		_0804662c
	b		_08046854
_0804662c:
	b		_0804688a
_0804662e:
	mov		r2, #0x0
	mov		r9, r2
	mov		r2, r10
	add		r2, #0x1
	lsl		r0, r2, #0x2
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xec
	lsl		r1, r6, #0x18
	asr		r4, r1, #0x18
	ldr		r0, [r0, #0x0]
	mul		r0, r4
	mov		r6, #0xc0
	lsl		r6, r6, #0x6
	mov		r8, r2
	add		r7, r1, #0x0
	cmp		r0, r6
	ble		_08046656
	mov		r0, #0x1
	mov		r9, r0
_08046656:
	mov		r3, #0x0
	add		r0, r5, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	mul		r1, r4
	cmp		r1, r6
	ble		_08046668
	mov		r3, #0x1
_08046668:
	mov		r0, #0x98
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x0
	add		r2, #0x26
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_08046684
	add		r1, r3, #0x1
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	b		_08046688
_08046684:
	lsl		r0, r3, #0x3
	add		r0, r0, r3
_08046688:
	add		r3, r2, r0
	ldr		r0, _080466b4
	ldr		r0, [r0, #0x0]
	mov		r2, r8
	lsl		r1, r2, #0x2
	add		r0, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0xec
	asr		r1, r7, #0x18
	ldr		r0, [r0, #0x0]
	mul		r1, r0
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_080466b8
	mov		r1, r9
	add		r1, #0x1
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	b		_080466be

.incbin "base.gba", 0x466B2, 0x2

_080466b4:	.4byte 0x0200D54C

_080466b8:
	mov		r5, r9
	lsl		r0, r5, #0x1
	add		r0, r9
_080466be:
	add		r0, r3, r0
	add		r7, r0, #0x0
	mov		r4, #0x0
	ldr		r0, _08046710
	ldr		r1, [r0, #0x0]
	mov		r6, r8
	lsl		r0, r6, #0x2
	add		r1, #0x8
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	cmp		r0, r3
	ble		_080466e0
	mov		r4, #0x1
_080466e0:
	mov		r2, #0x0
	mov		r5, r10
	lsl		r0, r5, #0x2
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf0
	ldr		r1, [r0, #0x0]
	cmp		r1, r3
	ble		_080466f4
	mov		r2, #0x1
_080466f4:
	mov		r0, #0x98
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	add		r3, r0, #0x0
	add		r3, #0x41
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_08046714
	add		r1, r2, #0x1
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	b		_08046718

_08046710:	.4byte 0x0200D54C

_08046714:
	lsl		r0, r2, #0x3
	add		r0, r0, r2
_08046718:
	add		r3, r3, r0
	ldr		r0, _08046738
	ldr		r0, [r0, #0x0]
	mov		r6, r8
	lsl		r1, r6, #0x2
	add		r0, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0xf0
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_0804673c
_08046734:
	add		r1, r4, #0x1
	b		_08046882

_08046738:	.4byte 0x0200D54C

_0804673c:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	b		_08046886
_08046742:
	mov		r0, #0x0
	mov		r9, r0
	mov		r0, r10
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xec
	lsl		r1, r6, #0x18
	asr		r3, r1, #0x18
	ldr		r0, [r0, #0x0]
	mul		r0, r3
	mov		r4, #0xc0
	lsl		r4, r4, #0x6
	add		r7, r1, #0x0
	cmp		r0, r4
	ble		_08046768
	mov		r1, #0x1
	mov		r9, r1
_08046768:
	mov		r2, #0x0
	add		r0, r5, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	mul		r1, r3
	cmp		r1, r4
	ble		_0804677a
	mov		r2, #0x1
_0804677a:
	mov		r0, #0x98
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	add		r3, r0, #0x0
	add		r3, #0x5c
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_08046796
	add		r1, r2, #0x1
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	b		_0804679a
_08046796:
	lsl		r0, r2, #0x3
	add		r0, r0, r2
_0804679a:
	add		r3, r3, r0
	ldr		r0, _080467c8
	ldr		r0, [r0, #0x0]
	mov		r2, r10
	add		r2, #0x1
	lsl		r1, r2, #0x2
	add		r0, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0xec
	asr		r1, r7, #0x18
	ldr		r0, [r0, #0x0]
	mul		r1, r0
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	mov		r8, r2
	cmp		r1, r0
	ble		_080467cc
	mov		r1, r9
	add		r1, #0x1
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	b		_080467d2

_080467c8:	.4byte 0x0200D54C

_080467cc:
	mov		r2, r9
	lsl		r0, r2, #0x1
	add		r0, r9
_080467d2:
	add		r0, r3, r0
	add		r7, r0, #0x0
	mov		r4, #0x0
	ldr		r0, _08046824
	ldr		r1, [r0, #0x0]
	mov		r5, r8
	lsl		r0, r5, #0x2
	add		r1, #0x8
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	cmp		r0, r3
	ble		_080467f4
	mov		r4, #0x1
_080467f4:
	mov		r2, #0x0
	mov		r6, r10
	lsl		r0, r6, #0x2
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xf0
	ldr		r1, [r0, #0x0]
	cmp		r1, r3
	ble		_08046808
	mov		r2, #0x1
_08046808:
	mov		r0, #0x98
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	add		r3, r0, #0x0
	add		r3, #0x77
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_08046828
	add		r1, r2, #0x1
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	b		_0804682c

_08046824:	.4byte 0x0200D54C

_08046828:
	lsl		r0, r2, #0x3
	add		r0, r0, r2
_0804682c:
	add		r3, r3, r0
	ldr		r0, _08046850
	ldr		r0, [r0, #0x0]
	mov		r2, r8
	lsl		r1, r2, #0x2
	add		r0, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0xf0
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_0804684a
	b		_08046734
_0804684a:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	b		_08046886

_08046850:	.4byte 0x0200D54C

_08046854:
	mov		r1, #0x0
	mov		r0, #0x8e
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	add		r0, #0xf0
	ldr		r2, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r2, r0
	ble		_0804686c
	mov		r1, #0x1
_0804686c:
	mov		r0, #0x98
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	add		r3, r0, #0x0
	add		r3, #0x92
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r2, r0
	ble		_08046882
	add		r1, #0x1
_08046882:
	lsl		r0, r1, #0x1
	add		r0, r0, r1
_08046886:
	add		r0, r3, r0
	add		r4, r0, #0x0
_0804688a:
	ldr		r5, _080468c0
	cmp		r7, #0x0
	beq		_080468d0
	ldr		r0, [r5, #0x0]
	ldrb	r1, [r7, #0x0]
	ldrb	r2, [r7, #0x1]
	add		r1, r1, r2
	ldrb	r6, [r7, #0x2]
	add		r1, r1, r6
	bl		sub_080b63dc
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	ldrb	r0, [r7, #0x0]
	cmp		r3, r0
	bcc		_080468c4
	ldr		r2, [sp, #0x0]
	ldrb	r0, [r7, #0x0]
	ldrb	r1, [r7, #0x1]
	add		r0, r0, r1
	cmp		r3, r0
	blt		_080468ca
	mov		r2, #0x2
	ldr		r1, [sp, #0x0]
	orr		r2, r1
	b		_080468ca

.incbin "base.gba", 0x468BE, 0x2

_080468c0:	.4byte 0x080d32d8

_080468c4:
	mov		r2, #0x1
	ldr		r6, [sp, #0x0]
	orr		r2, r6
_080468ca:
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
_080468d0:
	ldr		r0, [r5, #0x0]
	ldrb	r1, [r4, #0x0]
	ldrb	r2, [r4, #0x1]
	add		r1, r1, r2
	ldrb	r2, [r4, #0x2]
	add		r1, r1, r2
	bl		sub_080b63dc
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	ldrb	r5, [r4, #0x0]
	cmp		r3, r5
	bcc		_080468fe
	ldr		r2, [sp, #0x0]
	ldrb	r0, [r4, #0x0]
	ldrb	r1, [r4, #0x1]
	add		r0, r0, r1
	cmp		r3, r0
	blt		_08046904
	mov		r2, #0x4
	ldr		r6, [sp, #0x0]
	orr		r2, r6
	b		_08046904
_080468fe:
	mov		r2, #0x8
	ldr		r0, [sp, #0x0]
	orr		r2, r0
_08046904:
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4691A, 0x42A
	thumb_func_end sub_080465c0

	thumb_func_start sub_08046d44
sub_08046d44:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r0, #0x0
	mov		r12, r0
	ldr		r1, _08046e28
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	mov		r2, #0x0
	mov		r8, r2
	cmp		r0, #0x0
	bne		_08046d6a
	mov		r7, #0x2
	mov		r8, r7
_08046d6a:
	ldr		r0, _08046e2c
	mov		r9, r0
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	mov		r10, r0
	mov		r1, r10
	add		r1, #0xf0
	ldr		r0, _08046e30
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xf0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r5, r0, #0x8
	ldr		r4, [r1, #0x0]
	sub		r2, r4, r5
	add		r1, r6, #0x0
	add		r1, #0xf0
	mov		r7, #0x36
	ldrsh	r0, [r3, r7]
	lsl		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	add		r0, r1, r0
	cmp		r2, r0
	bgt		_08046e3c
	mov		r2, #0x34
	ldrsh	r0, [r3, r2]
	lsl		r0, r0, #0x8
	add		r0, r1, r0
	add		r1, r4, r5
	cmp		r0, r1
	bgt		_08046e3c
	mov		r1, r10
	add		r1, #0xf4
	add		r0, r3, #0x0
	add		r0, #0xf2
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r5, r0, #0x8
	ldr		r4, [r1, #0x0]
	sub		r2, r4, r5
	add		r1, r6, #0x0
	add		r1, #0xf4
	mov		r7, #0x2e
	ldrsh	r0, [r3, r7]
	lsl		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	add		r0, r1, r0
	cmp		r2, r0
	bgt		_08046e3c
	mov		r2, #0x32
	ldrsh	r0, [r3, r2]
	lsl		r0, r0, #0x8
	add		r0, r1, r0
	add		r1, r4, r5
	cmp		r0, r1
	bgt		_08046e3c
	ldr		r0, _08046e34
	mov		r1, #0x64
	bl		sub_080b63dc
	mov		r7, #0x98
	lsl		r7, r7, #0x2
	add		r1, r6, r7
	ldr		r1, [r1, #0x0]
	add		r1, #0x9b
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bge		_08046e38
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	mov		r2, r8
	lsl		r0, r2, #0x2
	add		r1, #0x8
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	sub		r7, #0x20
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xc
	beq		_08046e20
	mov		r0, r8
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r1, r7, #0x0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xc
	bne		_08046e38
_08046e20:
	mov		r2, #0x11
	mov		r12, r2
	b		_08046e3c

.incbin "base.gba", 0x46E26, 0x2

_08046e28:	.4byte 0x00000249
_08046e2c:	.4byte 0x0200D54C
_08046e30:	.4byte 0x0200D568
_08046e34:	.4byte 0x0200BDD4

_08046e38:
	mov		r7, #0x10
	mov		r12, r7
_08046e3c:
	mov		r0, r12
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08046d44

	thumb_func_start sub_08046e4c
sub_08046e4c:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, #0xa8
	str		r1, [r0, #0x0]
	sub		r0, #0x4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08046e70
	cmp		r1, #0x7
	beq		_08046e70
	cmp		r1, #0x6
	beq		_08046e70
	add		r0, r2, #0x0
	add		r0, #0x14
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_08046e80
_08046e70:
	add		r0, r2, #0x0
	add		r0, #0x14
	add		r1, r2, #0x0
	add		r1, #0xa8
	ldr		r1, [r1, #0x0]
	mov		r2, #0x0
	bl		sub_0808e3c0
_08046e80:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08046e4c

	thumb_func_start sub_08046e84
sub_08046e84:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, [sp, #0x0+0x14]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r5, r1, #0x0
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	add		r6, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	lsl		r0, r5, #0x10
	mov		r1, #0xf8
	lsl		r1, r1, #0xd
	add		r0, r0, r1
	mov		r1, #0x97
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_08046efc
	lsl		r0, r2, #0x10
	asr		r2, r0, #0x10
	mov		r0, #0x20
	neg		r0, r0
	cmp		r2, r0
	ble		_08046efc
	cmp		r2, #0xbf
	bgt		_08046efc
	add		r0, r4, #0x0
	add		r0, #0x94
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08046ed0
	mov		r0, #0x0
	b		_08046efe
_08046ed0:
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r5, [r0, #0x0]
	add		r0, #0x2
	strh	r6, [r0, #0x0]
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	add		r0, #0xfe
	add		r1, r4, #0x0
	add		r1, #0x70
	strh	r0, [r1, #0x0]
	cmp		r7, #0x0
	bne		_08046ef2
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b3d4
_08046ef2:
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_08046efc:
	mov		r0, #0x2
_08046efe:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x46F04, 0xC
	thumb_func_end sub_08046e84

	thumb_func_start sub_08046f10
sub_08046f10:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r1
	bl		sub_080006ec
	ldr		r0, _08046f78
	str		r0, [r7, #0xc]
	add		r4, r7, #0x0
	add		r4, #0x14
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r5, r7, #0x0
	add		r5, #0x84
	add		r0, r5, #0x0
	bl		sub_0808b374
	add		r0, r7, #0x0
	add		r0, #0x80
	mov		r6, #0x0
	str		r6, [r0, #0x0]
	add		r0, #0x24
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xf
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	bl		sub_0808b3d4
	add		r1, r7, #0x0
	add		r1, #0x7d
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xa8
	str		r6, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x46F76, 0x2

_08046f78:	.4byte 0x080e192c
	thumb_func_end sub_08046f10

	thumb_func_start sub_08046f7c
sub_08046f7c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r0, #0x98
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x9c
	ldrb	r0, [r0, #0x0]
	mov		r2, #0x99
	lsl		r2, r2, #0x2
	add		r4, r5, r2
	mov		r6, #0x0
	strh	r0, [r4, #0x0]
	ldr		r0, _08046fb4
	ldr		r1, [r1, #0x0]
	add		r1, #0x9d
	ldrb	r1, [r1, #0x0]
	bl		sub_080b63dc
	ldrh	r1, [r4, #0x0]
	add		r1, r1, r0
	strh	r1, [r4, #0x0]
	ldr		r0, _08046fb8
	add		r5, r5, r0
	strh	r6, [r5, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08046fb4:	.4byte 0x0200BDD4
_08046fb8:	.4byte 0x00000266
	thumb_func_end sub_08046f7c

	thumb_func_start sub_08046fbc
sub_08046fbc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x40
	mov		r2, #0x87
	lsl		r2, r2, #0x2
	add		r1, r4, r2
	ldr		r1, [r1, #0x0]
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	ldr		r3, _08047010
	add		r0, r4, r3
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r3, #0xa
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	add		r2, #0x14
	add		r0, r4, r2
	mov		r2, #0x0
	strh	r1, [r0, #0x0]
	add		r3, #0x12
	add		r0, r4, r3
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xf4
	str		r1, [r0, #0x0]
	sub		r3, #0xa
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	ldr		r1, _08047014
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4700E, 0x2

_08047010:	.4byte 0x0000024A
_08047014:	.4byte 0x0000024D
	thumb_func_end sub_08046fbc

	thumb_func_start sub_08047018
sub_08047018:
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r0, _08047058
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	mov		r1, #0xcb
	lsl		r1, r1, #0x2
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08047060
	add		r2, #0xf4
	ldr		r0, _0804705c
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xf2
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r0, r0, #0x8
	ldr		r2, [r2, #0x0]
	sub		r2, r2, r0
	add		r0, r3, #0x0
	add		r0, #0xf4
	mov		r3, #0x2e
	ldrsh	r1, [r1, r3]
	lsl		r1, r1, #0x8
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	cmp		r2, r0
	bgt		_08047060
	mov		r0, #0x10
	b		_08047062

_08047058:	.4byte 0x0200D54C
_0804705c:	.4byte 0x0200D568

_08047060:
	mov		r0, #0x0
_08047062:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x47068, 0x1B8
	thumb_func_end sub_08047018

	thumb_func_start sub_08047220
sub_08047220:
	push	{ lr }
	sub		sp, #0x4
	add		r3, r0, #0x0
	add		r3, #0xec
	ldr		r3, [r3, #0x0]
	sub		r1, r1, r3
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	sub		r2, r2, r0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	add		r0, r1, #0x0
	mul		r0, r1
	add		r1, r2, #0x0
	mul		r1, r2
	add		r0, r0, r1
	mov		r1, #0x8
	mov		r2, sp
	bl		sub_0808c5c0
	add		sp, #0x4
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4724E, 0x8E
	thumb_func_end sub_08047220

	thumb_func_start sub_080472dc
sub_080472dc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x40
	mov		r1, #0x11
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080472dc

	thumb_func_start sub_08047308
sub_08047308:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x40
	bl		sub_08042a0c
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldrh	r1, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xaa
	ldrh	r0, [r0, #0x0]
	add		r2, #0x2
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x3
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	add		r2, #0x6
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08047308

	thumb_func_start sub_08047348
sub_08047348:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0xa8
	ldrh	r0, [r0, #0x0]
	add		r0, #0x1f
	lsl		r0, r0, #0x10
	mov		r1, #0x97
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_08047378
	add		r0, r4, #0x0
	add		r0, #0xaa
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r0, #0x20
	neg		r0, r0
	cmp		r1, r0
	ble		_08047378
	cmp		r1, #0xbf
	bgt		_08047378
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_0808e4a0
_08047378:
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	add		r0, #0x1f
	lsl		r0, r0, #0x10
	mov		r1, #0x97
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_080473aa
	mov		r2, #0xa7
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r0, #0x20
	neg		r0, r0
	cmp		r1, r0
	ble		_080473aa
	cmp		r1, #0xbf
	bgt		_080473aa
	add		r0, r4, #0x0
	add		r0, #0xf8
	bl		sub_0808e4a0
_080473aa:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08047348

	thumb_func_start sub_080473b0
sub_080473b0:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _08047400
	str		r0, [r6, #0x4c]
	ldr		r0, _08047404
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0xf8
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r0, _08047408
	str		r0, [r6, #0x4c]
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080473f8
	add		r0, r6, #0x0
	bl		sub_080b74c8
_080473f8:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x473FE, 0x2

_08047400:	.4byte 0x080e1a84
_08047404:	.4byte 0x080e1aa4
_08047408:	.4byte 0x080e1b74
	thumb_func_end sub_080473b0

	thumb_func_start sub_0804740c
sub_0804740c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r1, r3, r0
	mov		r0, #0x4
	str		r0, [r1, #0x0]
	mov		r1, #0xc9
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r4, #0xca
	lsl		r4, r4, #0x2
	add		r0, r3, r4
	str		r1, [r0, #0x0]
	add		r4, #0x4
	add		r0, r3, r4
	str		r2, [r0, #0x0]
	sub		r4, #0xc
	add		r0, r3, r4
	str		r2, [r0, #0x0]
	mov		r2, #0xce
	lsl		r2, r2, #0x2
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	sub		r4, #0x2c
	add		r0, r3, r4
	str		r1, [r0, #0x0]
	sub		r2, #0x40
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	add		r4, #0x8
	add		r0, r3, r4
	str		r1, [r0, #0x0]
	ldr		r1, [r3, #0x2c]
	add		r0, r3, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x47464, 0x3F0
	thumb_func_end sub_0804740c

	thumb_func_start sub_08047854
sub_08047854:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x94
	add		r7, r0, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08047924
	str		r0, [r7, #0x4c]
	ldr		r0, _08047928
	str		r0, [r7, #0xc]
	mov		r0, #0x8d
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldr		r0, _0804792c
	strh	r0, [r1, #0x0]
	mov		r2, #0x8c
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x1
	neg		r0, r0
	strh	r0, [r1, #0x0]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r2, #0x0
	mov		r3, #0x0
	strh	r3, [r0, #0x0]
	mov		r4, #0x90
	lsl		r4, r4, #0x1
	add		r1, r7, r4
	mov		r0, #0x15
	strb	r0, [r1, #0x0]
	ldr		r5, _08047930
	add		r0, r7, r5
	strb	r2, [r0, #0x0]
	ldr		r1, _08047934
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r4, #0x2
	add		r0, r7, r4
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xe0
	str		r3, [r0, #0x0]
	add		r0, #0x4
	str		r3, [r0, #0x0]
	mov		r5, sp
	add		r5, #0x28
	str		r5, [sp, #0x7C]
	mov		r0, sp
	add		r0, #0x4c
	str		r0, [sp, #0x88]
	mov		r2, #0x0
	add		r1, r7, #0x0
	add		r1, #0x54
	str		r1, [sp, #0x8C]
	mov		r1, #0x19
	add		r0, r7, #0x0
	add		r0, #0xb8
_080478d8:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_080478d8
	ldr		r4, _08047938
	ldr		r2, _0804793c
	add		r0, r4, r2
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, _08047940
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xd4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r2, #0xd6
	mov		r5, #0x0
	ldrsh	r2, [r2, r5]
	mov		r3, #0x3
	bl		sub_080498f8
	mov		r8, r0
	add		r0, r4, #0x0
	mov		r1, r8
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, r8
	cmp		r0, #0x0
	beq		_08047944
	add		r0, #0x40
	str		r0, [r7, #0x54]
	b		_08047948

_08047924:	.4byte 0x080e1c1c
_08047928:	.4byte 0x080e1c34
_0804792c:	.4byte 0x0000FFFF
_08047930:	.4byte 0x00000121
_08047934:	.4byte 0x0000011F
_08047938:	.4byte 0x0200DB90
_0804793c:	.4byte 0xFFFFFE70
_08047940:	.4byte 0x0200D568

_08047944:
	mov		r1, r8
	str		r1, [r7, #0x54]
_08047948:
	mov		r6, #0x0
	add		r2, r7, #0x0
	add		r2, #0xbc
	str		r2, [sp, #0x70]
	add		r3, r7, #0x0
	add		r3, #0xc0
	str		r3, [sp, #0x74]
	add		r4, r7, #0x0
	add		r4, #0xc4
	str		r4, [sp, #0x78]
	add		r5, r7, #0x0
	add		r5, #0xc8
	str		r5, [sp, #0x80]
	add		r0, r7, #0x0
	add		r0, #0xe8
	str		r0, [sp, #0x84]
	ldr		r1, _08047ac4
	mov		r9, r1
	ldr		r2, [sp, #0x8C]
	add		r2, #0x4
	mov		r10, r2
_08047972:
	mov		r0, #0xcc
	bl		sub_0808af94
	mov		r3, r9
	ldr		r4, [r3, #0x0]
	mov		r5, #0x8f
	lsl		r5, r5, #0x1
	add		r1, r4, r5
	add		r1, r1, r6
	ldrb	r2, [r1, #0x0]
	lsl		r5, r6, #0x2
	add		r1, r4, #0x0
	add		r1, #0x40
	add		r1, r1, r5
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	lsl		r3, r1, #0x8
	add		r4, #0x42
	add		r1, r4, r5
	mov		r4, #0x0
	ldrsh	r1, [r1, r4]
	lsl		r1, r1, #0x8
	str		r1, [sp, #0x0]
	mov		r1, r8
	bl		sub_080494fc
	add		r3, r0, #0x0
	cmp		r6, #0x0
	ble		_080479d8
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	add		r1, #0x42
	add		r2, r1, r5
	sub		r0, r6, #0x1
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	mov		r4, #0x0
	ldrsh	r2, [r2, r4]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r2, r0
	bne		_080479d8
	add		r1, r3, #0x0
	add		r1, #0x70
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	add		r1, #0x54
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
_080479d8:
	mov		r0, r10
	add		r0, #0x4
	mov		r10, r0
	sub		r0, #0x4
	stmia	r0!, {  r3 }
	add		r6, #0x1
	cmp		r6, #0xd
	ble		_08047972
	mov		r6, #0x0
	mov		r1, #0xd0
	lsl		r1, r1, #0x6
	mov		r10, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	mov		r9, r2
	mov		r3, #0x2
	mov		r8, r3
	ldr		r5, [sp, #0x8C]
	add		r5, #0x3c
_080479fe:
	mov		r0, #0xb8
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0804d3ec
	ldr		r0, _08047ac8
	str		r0, [r4, #0xc]
	str		r4, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x11
	add		r2, r6, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	ldr		r1, [r5, #0x0]
	mov		r12, r1
	mov		r2, r12
	add		r2, #0xac
	str		r2, [sp, #0x90]
	ldr		r3, _08047ac4
	ldr		r2, [r3, #0x0]
	lsl		r4, r6, #0x2
	add		r1, r2, #0x0
	add		r1, #0xa8
	add		r1, r1, r4
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	lsl		r0, r0, #0x8
	ldr		r3, [sp, #0x90]
	str		r0, [r3, #0x0]
	mov		r3, r12
	add		r3, #0xb0
	add		r2, #0xaa
	add		r2, r2, r4
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	mov		r0, r12
	add		r0, #0xb4
	mov		r3, r10
	str		r3, [r0, #0x0]
	ldrh	r1, [r1, #0x0]
	sub		r0, #0x4c
	strh	r1, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	ldrh	r0, [r2, #0x0]
	sub		r0, #0x34
	add		r1, #0x6a
	strh	r0, [r1, #0x0]
	ldr		r2, [r5, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xb0
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x4
	mov		r4, r9
	sub		r0, r4, r0
	add		r1, r2, #0x0
	add		r1, #0xa8
	strh	r0, [r1, #0x0]
	sub		r1, #0x38
	strh	r0, [r1, #0x0]
	ldmia	r5!, { r0 }
	add		r1, r0, #0x0
	add		r1, #0xaa
	mov		r2, r8
	strb	r2, [r1, #0x0]
	add		r0, #0x7d
	strb	r2, [r0, #0x0]
	add		r6, #0x1
	cmp		r6, #0xa
	ble		_080479fe
	add		r1, sp, #0x4
	ldr		r0, _08047acc
	ldmia	r0!, { r3, r4, r5 }
	stmia	r1!, {  r3, r4, r5 }
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3, r5 }
	stmia	r1!, {  r2, r3, r5 }
	ldr		r4, [sp, #0x7C]
	mov		r0, #0x2
	str		r0, [sp, #0x4C]
	mov		r0, #0x1
	str		r0, [sp, #0x50]
	mov		r0, #0x0
	str		r0, [sp, #0x54]
	str		r0, [sp, #0x58]
	str		r0, [sp, #0x5C]
	str		r0, [sp, #0x60]
	ldr		r0, _08047ad0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08047ad8
	ldr		r0, _08047ad4
	b		_08047ada

_08047ac4:	.4byte 0x0200D568
_08047ac8:	.4byte 0x080e1bfc
_08047acc:	.4byte 0x080d3304
_08047ad0:	.4byte 0x00000836
_08047ad4:	.4byte 0x080d3329

_08047ad8:
	ldr		r0, _08047bf0
_08047ada:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r1, #0xb
	cmp		r0, #0x2e
	bne		_08047ae8
	mov		r1, #0xa
_08047ae8:
	str		r1, [sp, #0x64]
	mov		r0, #0x0
	str		r0, [sp, #0x68]
	str		r0, [sp, #0x6C]
	add		r0, r4, #0x0
	ldr		r1, [sp, #0x88]
	mov		r2, #0x24
	bl		sub_0808c818
	mov		r5, #0x0
	mov		r6, #0x1
	ldr		r4, [sp, #0x70]
	ldr		r0, [sp, #0x7C]
	mov		r9, r0
	add		r1, sp, #0x4
	mov		r8, r1
_08047b08:
	mov		r0, #0xac
	bl		sub_0808af94
	bl		sub_0804d3ec
	str		r0, [r4, #0x0]
	mov		r2, r8
	add		r2, #0x4
	mov		r8, r2
	sub		r2, #0x4
	ldmia	r2!, { r1 }
	mov		r3, r9
	add		r3, #0x4
	mov		r9, r3
	sub		r3, #0x4
	ldmia	r3!, { r2 }
	mov		r3, #0x2
	bl		sub_0804d2f4
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x10
	add		r0, #0x70
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0xa8
	strh	r1, [r0, #0x0]
	ldmia	r4!, { r0 }
	add		r1, r0, #0x0
	add		r1, #0xaa
	strb	r6, [r1, #0x0]
	add		r0, #0x7d
	strb	r6, [r0, #0x0]
	add		r5, #0x1
	cmp		r5, #0x8
	ble		_08047b08
	ldr		r4, [sp, #0x70]
	ldr		r1, [r4, #0x0]
	ldr		r0, _08047bf4
	ldr		r4, [r0, #0x0]
	mov		r5, #0xa2
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	ldrb	r0, [r0, #0x0]
	add		r1, #0x68
	mov		r2, #0x0
	mov		r3, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, [sp, #0x70]
	ldr		r0, [r1, #0x0]
	add		r5, #0x1
	add		r1, r4, r5
	ldrb	r1, [r1, #0x0]
	add		r0, #0x6a
	strh	r1, [r0, #0x0]
	ldr		r1, [sp, #0x74]
	ldr		r0, [r1, #0x0]
	mov		r1, #0xa3
	lsl		r1, r1, #0x1
	add		r5, r4, r1
	ldrb	r1, [r5, #0x0]
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	ldr		r1, [sp, #0x74]
	ldr		r0, [r1, #0x0]
	ldr		r1, _08047bf8
	add		r4, r4, r1
	ldrb	r1, [r4, #0x0]
	add		r0, #0x6a
	strh	r1, [r0, #0x0]
	ldr		r1, [sp, #0x78]
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r5, #0x0]
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	ldr		r5, [sp, #0x78]
	ldr		r0, [r5, #0x0]
	ldrb	r1, [r4, #0x0]
	add		r0, #0x6a
	strh	r1, [r0, #0x0]
	ldr		r1, [sp, #0x80]
	ldr		r0, [r1, #0x0]
	add		r0, #0x68
	mov		r1, #0x10
	strh	r1, [r0, #0x0]
	ldr		r4, [sp, #0x80]
	ldr		r0, [r4, #0x0]
	add		r0, #0x6a
	strh	r1, [r0, #0x0]
	mov		r5, #0x92
	lsl		r5, r5, #0x1
	add		r0, r7, r5
	strb	r2, [r0, #0x0]
	ldr		r0, [sp, #0x84]
	str		r3, [r0, #0x0]
	mov		r1, #0x8f
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_08049110
	ldr		r2, _08047bfc
	add		r1, r7, r2
	mov		r0, #0xff
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x94
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x47BEE, 0x2

_08047bf0:	.4byte 0x080d3331
_08047bf4:	.4byte 0x0200D568
_08047bf8:	.4byte 0x00000147
_08047bfc:	.4byte 0x00000125
	thumb_func_end sub_08047854

	thumb_func_start sub_08047c00
sub_08047c00:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	str		r1, [sp, #0x0]
	ldr		r0, _08047ce0
	str		r0, [r7, #0x4c]
	ldr		r0, _08047ce4
	str		r0, [r7, #0xc]
	mov		r6, #0x8
	ldr		r0, _08047ce8
	mov		r8, r0
	add		r5, r7, #0x0
	add		r5, #0xdc
_08047c22:
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_08047c3e
	mov		r1, r8
	str		r1, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080006b4
_08047c3e:
	sub		r5, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08047c22
	mov		r0, #0x54
	add		r0, r0, r7
	mov		r9, r0
	mov		r1, #0x40
	add		r1, r1, r7
	mov		r10, r1
	ldr		r0, _08047ce8
	mov		r8, r0
	add		r5, r7, #0x0
	add		r5, #0xb8
	mov		r6, #0xa
_08047c5c:
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_08047c78
	mov		r1, r8
	str		r1, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080006b4
_08047c78:
	sub		r5, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08047c5c
	mov		r6, #0xe
	ldr		r0, _08047ce8
	mov		r8, r0
	mov		r5, r9
	add		r5, #0x38
_08047c8a:
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_08047ca6
	mov		r1, r8
	str		r1, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080006b4
_08047ca6:
	sub		r5, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bgt		_08047c8a
	mov		r0, r10
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	ldr		r1, [sp, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_08047cce
	add		r0, r7, #0x0
	bl		sub_080b74c8
_08047cce:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x47CDE, 0x2

_08047ce0:	.4byte 0x080e1c1c
_08047ce4:	.4byte 0x080e1c34
_08047ce8:	.4byte 0x080e1b74
	thumb_func_end sub_08047c00

	thumb_func_start sub_08047cec
sub_08047cec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xe4
	mov		r8, r0
	add		r5, r1, #0x0
	cmp		r5, #0x1
	bne		_08047d02
	b		_08047f14
_08047d02:
	cmp		r5, #0x1
	bgt		_08047d0e
	cmp		r5, #0x0
	beq		_08047d1e
	bl		sub_08048510
_08047d0e:
	cmp		r5, #0x2
	bne		_08047d14
	b		_080481de
_08047d14:
	cmp		r5, #0x3
	bne		_08047d1a
	b		_080482ac
_08047d1a:
	bl		sub_08048510
_08047d1e:
	mov		r0, r8
	ldr		r1, [r0, #0x54]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08047d2c
	add		r0, r1, #0x0
	sub		r0, #0x40
_08047d2c:
	ldr		r2, _08047d8c
	add		r1, r0, r2
	mov		r4, #0x1
	strb	r4, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, r8
	add		r0, #0xe0
	mov		r1, #0xf0
	lsl		r1, r1, #0x11
	str		r1, [r0, #0x0]
	ldr		r0, _08047d90
	str		r1, [r0, #0x0]
	ldr		r0, _08047d94
	str		r1, [r0, #0x0]
	ldr		r0, _08047d98
	str		r1, [r0, #0x0]
	mov		r0, r8
	add		r0, #0xe4
	str		r5, [r0, #0x0]
	ldr		r0, _08047d9c
	str		r5, [r0, #0x0]
	ldr		r0, _08047da0
	str		r5, [r0, #0x0]
	ldr		r0, _08047da4
	str		r5, [r0, #0x0]
	ldr		r0, _08047da8
	strb	r4, [r0, #0x1b]
	strb	r4, [r0, #0x1a]
	strb	r4, [r0, #0x19]
	ldr		r0, _08047dac
	ldr		r4, [r0, #0x0]
	ldr		r0, _08047db0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08047db8
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08047db4
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08047dc4

.incbin "base.gba", 0x47D8A, 0x2

_08047d8c:	.4byte 0x000001D9
_08047d90:	.4byte 0x0200CE30
_08047d94:	.4byte 0x0200CE2C
_08047d98:	.4byte 0x0200CE28
_08047d9c:	.4byte 0x0200CE44
_08047da0:	.4byte 0x0200CE40
_08047da4:	.4byte 0x0200CE3C
_08047da8:	.4byte 0x02008AD4
_08047dac:	.4byte 0x0200D530
_08047db0:	.4byte 0x00000282
_08047db4:	.4byte 0xFFFF8000

_08047db8:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08047e5c
	mov		r3, #0x0
	bl		sub_080b7724
_08047dc4:
	ldr		r1, _08047e60
	ldr		r0, [r1, #0x0]
	mov		r5, sp
	add		r5, #0x5
	mov		r7, sp
	add		r7, #0x6
	add		r6, sp, #0x8
	mov		r3, #0x9
	add		r3, sp
	mov		r9, r3
	mov		r4, #0xa
	add		r4, sp
	mov		r10, r4
	cmp		r0, #0x0
	beq		_08047e04
	add		r4, r1, #0x0
_08047de4:
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_08047df8
	mov		r0, r8
	bl		sub_08048cf0
	mov		r0, r8
	bl		sub_08048528
_08047df8:
	mov		r0, r8
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08047de4
_08047e04:
	add		r1, sp, #0x4
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r0, _08047e64
	ldr		r4, [r0, #0x0]
	mov		r0, #0x8a
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r0, [r4, #0x0]
	mov		r1, #0x3c
	bl		sub_080bbeac
	strb	r0, [r5, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r1, #0x3c
	bl		sub_080bbe34
	strb	r0, [r7, #0x0]
	ldr		r4, _08047e68
	ldr		r5, [r4, #0x0]
	add		r0, r6, #0x0
	add		r1, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	ldrb	r1, [r6, #0x0]
	mov		r2, r9
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x8
	orr		r0, r1
	mov		r3, r10
	ldrb	r1, [r3, #0x0]
	lsl		r1, r1, #0x10
	orr		r1, r0
	add		r0, r5, #0x0
	bl		sub_0802cf58
	ldr		r0, [r4, #0x0]
	mov		r1, #0x1
	ldr		r4, _08047e6c
	add		r0, r0, r4
	str		r1, [r0, #0x0]
	b		_08047e82

.incbin "base.gba", 0x47E5A, 0x2

_08047e5c:	.4byte 0xFFFF8001
_08047e60:	.4byte 0x0200D530
_08047e64:	.4byte 0x0200D568
_08047e68:	.4byte 0x0200D520
_08047e6c:	.4byte 0x0000057C

_08047e70:
	mov		r0, r8
	bl		sub_08048cf0
	mov		r0, r8
	bl		sub_08048528
	mov		r0, r8
	bl		sub_080b7690
_08047e82:
	mov		r1, r8
	ldr		r0, [r1, #0x54]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08047e90
	add		r1, r0, #0x0
	sub		r1, #0x40
_08047e90:
	ldr		r2, _08047eac
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08047e70
	ldr		r4, _08047eb0
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08047eb4
	mov		r3, #0x1
	bl		sub_080b7724
	ldr		r5, _08047eb8
	b		_08047ece

_08047eac:	.4byte 0x000001D9
_08047eb0:	.4byte 0x0200D518
_08047eb4:	.4byte 0xFFFF8000
_08047eb8:	.4byte 0x0200D520

_08047ebc:
	mov		r0, r8
	bl		sub_08048cf0
	mov		r0, r8
	bl		sub_08048528
	mov		r0, r8
	bl		sub_080b7690
_08047ece:
	ldr		r0, [r4, #0x0]
	ldr		r3, _08047f0c
	add		r0, r0, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08047ebc
	ldr		r0, [r5, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08047f10
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x1
	mov		r1, #0xff
	bl		sub_0808f558
	mov		r0, #0x1
	mov		r1, #0xa
	bl		sub_0808f5cc
	mov		r1, #0x8f
	lsl		r1, r1, #0x1
	add		r1, r8
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r4, r8
	ldr		r1, [r4, #0x2c]
	mov		r0, r8
	mov		r2, #0x1
	b		_08048298

.incbin "base.gba", 0x47F0A, 0x2

_08047f0c:	.4byte 0x00000101
_08047f10:	.4byte 0xFFFF8000

_08047f14:
	bl		sub_080706ac
	add		r5, r0, #0x0
	ldr		r1, [r5, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, r8
	ldr		r1, [r0, #0x54]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08047f32
	add		r0, r1, #0x0
	sub		r0, #0x40
_08047f32:
	mov		r1, #0x1
	bl		sub_0804aa3c
	mov		r1, r8
	add		r1, #0xec
	str		r1, [sp, #0xb8]
	mov		r2, r8
	add		r2, #0xee
	str		r2, [sp, #0xc0]
	mov		r3, r8
	add		r3, #0xed
	str		r3, [sp, #0xbc]
	mov		r4, r8
	add		r4, #0xe8
	str		r4, [sp, #0xb4]
	mov		r0, r8
	add		r0, #0x54
	str		r0, [sp, #0xb0]
	ldr		r1, _08047fb4
	mov		r10, r1
	ldr		r2, _08047fb8
	add		r2, r8
	mov		r9, r2
	mov		r3, #0x8f
	lsl		r3, r3, #0x1
	add		r3, r8
	str		r3, [sp, #0x8c]
	mov		r4, #0x8c
	lsl		r4, r4, #0x1
	add		r4, r8
	str		r4, [sp, #0x90]
	mov		r0, #0x8d
	lsl		r0, r0, #0x1
	add		r0, r8
	str		r0, [sp, #0x94]
	mov		r7, #0x63
_08047f7a:
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	ldr		r3, _08047fbc
	add		r1, r1, r3
	add		r0, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, sp, #0x4
	add		r1, r0, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [sp, #0xb8]
	add		r1, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x2
	bne		_08047fc0
	mov		r4, r9
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08048000
	mov		r0, r8
	bl		sub_0804ad8c
	b		_080481c4

_08047fb4:	.4byte 0x0200D520
_08047fb8:	.4byte 0x0000011F
_08047fbc:	.4byte 0x0000056C

_08047fc0:
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08048000
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x1
	bne		_08047fdc
	mov		r0, r8
	bl		sub_0804ad40
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x1
	b		_0804819c
_08047fdc:
	cmp		r0, #0x1
	bge		_08047fe2
	b		_080481c4
_08047fe2:
	cmp		r0, #0x4
	ble		_08047fe8
	b		_080481c4
_08047fe8:
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_0804929c
	mov		r3, #0x3
	ldr		r2, [sp, #0x8c]
	strb	r3, [r2, #0x0]
	mov		r4, r8
	ldr		r1, [r4, #0x2c]
	mov		r0, r8
	mov		r2, #0x3
	b		_0804819c
_08048000:
	mov		r0, r8
	bl		sub_08048754
	add		r4, r0, #0x0
	cmp		r4, #0xff
	bne		_0804800e
	b		_08048130
_0804800e:
	cmp		r4, #0xfe
	beq		_08048014
	b		_08048110
_08048014:
	mov		r4, #0x0
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _080480fc
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r2, _08048100
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08048104
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r3, [sp, #0x90]
	strh	r4, [r3, #0x0]
	ldr		r0, [sp, #0x94]
	strh	r4, [r0, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r2, _08048108
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0804807c
	ldr		r3, [sp, #0xc0]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r4, [sp, #0xbc]
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	add		r0, r0, r1
	ldr		r2, _0804810c
	ldr		r1, [r2, #0x0]
	mov		r3, #0x8b
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	ldrh	r1, [r1, #0x0]
	add		r4, r1, #0x0
	mul		r4, r0
	ldr		r0, [sp, #0xb4]
	str		r4, [r0, #0x0]
_0804807c:
	mov		r0, #0x0
	ldr		r2, [sp, #0xb0]
	ldr		r6, _0804810c
	mov		r3, #0x8c
	lsl		r3, r3, #0x1
_08048086:
	add		r1, r0, #0x1
	lsl		r0, r1, #0x2
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	add		r0, #0xc7
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0804809e
	ldr		r0, [r6, #0x0]
	add		r0, r0, r3
	ldrh	r0, [r0, #0x0]
	add		r4, r4, r0
_0804809e:
	add		r0, r1, #0x0
	cmp		r0, #0xd
	ble		_08048086
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080480cc
	add		r1, r0, #0x0
	sub		r1, #0x1
	ldr		r3, _0804810c
	ldr		r2, [r3, #0x0]
	mov		r3, #0x8e
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldrh	r0, [r0, #0x0]
	sub		r3, #0x2
	add		r2, r2, r3
	mul		r0, r1
	ldrh	r2, [r2, #0x0]
	add		r0, r0, r2
	add		r4, r4, r0
_080480cc:
	add		r0, r4, #0x0
	mov		r1, #0xff
	and		r0, r1
	mov		r2, #0x64
	mul		r0, r2
	lsr		r0, r0, #0x8
	add		r2, #0xb6
	add		r2, r8
	strh	r0, [r2, #0x0]
	lsr		r0, r4, #0x8
	add		r1, #0x19
	add		r1, r8
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x63
	ble		_080480f2
	strh	r7, [r2, #0x0]
	strh	r7, [r1, #0x0]
_080480f2:
	mov		r3, r8
	ldr		r1, [r3, #0x2c]
	mov		r0, r8
	b		_0804819a

.incbin "base.gba", 0x480FA, 0x2

_080480fc:	.4byte 0xFFFF8001
_08048100:	.4byte 0x0200D518
_08048104:	.4byte 0xFFFF8003
_08048108:	.4byte 0x00000584
_0804810c:	.4byte 0x0200D568

_08048110:
	bl		sub_0808f71c
	mov		r0, #0x4a
	bl		sub_0808f690
	mov		r0, r8
	ldr		r1, [r0, #0x54]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08048128
	add		r0, r1, #0x0
	sub		r0, #0x40
_08048128:
	add		r1, r4, #0x0
	bl		sub_0804a9c8
	b		_080481c4
_08048130:
	ldr		r1, [sp, #0xc0]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x8
	ble		_080481c4
	ldr		r2, [sp, #0xbc]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x3a
	ble		_080481c4
	ldr		r3, [sp, #0xb8]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x59
	ble		_080481c4
	cmp		r0, #0x62
	ble		_080481b0
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _080481a4
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, _080481a8
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _080481ac
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r2, [sp, #0x90]
	strh	r7, [r2, #0x0]
	ldr		r3, [sp, #0x94]
	strh	r7, [r3, #0x0]
	mov		r4, r8
	ldr		r1, [r4, #0x54]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08048190
	add		r0, r1, #0x0
	sub		r0, #0x40
_08048190:
	mov		r1, #0x1
	bl		sub_0804a9f0
	mov		r0, r8
	ldr		r1, [r0, #0x2c]
_0804819a:
	mov		r2, #0x2
_0804819c:
	mov		r3, #0x0
	bl		sub_080b7724
	b		_080481c4

_080481a4:	.4byte 0xFFFF8001
_080481a8:	.4byte 0x0200D518
_080481ac:	.4byte 0xFFFF8003

_080481b0:
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080481c4
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_080481c4:
	mov		r0, r8
	bl		sub_08048fe4
	mov		r0, r8
	bl		sub_08048cf0
	mov		r0, r8
	bl		sub_08048528
	mov		r0, r8
	bl		sub_080b7690
	b		_08047f7a
_080481de:
	mov		r0, r8
	mov		r1, #0x1
	bl		sub_0804929c
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	bl		sub_0808f71c
	mov		r0, #0x55
	bl		sub_0808f690
	mov		r4, #0x0
	ldr		r5, _08048200
	b		_08048218

_08048200:	.4byte 0x080d3348

_08048204:
	mov		r0, r8
	bl		sub_08048cf0
	mov		r0, r8
	bl		sub_08048528
	mov		r0, r8
	bl		sub_080b7690
	add		r4, #0x1
_08048218:
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x4]
	cmp		r0, #0x0
	bne		_08048226
	mov		r0, #0x1
	bl		sub_0808f628
_08048226:
	cmp		r4, #0x1e
	bne		_08048264
	mov		r1, #0x8f
	lsl		r1, r1, #0x1
	add		r1, r8
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r0, r8
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	lsr		r1, r2, #0x8
	cmp		r1, #0x63
	bls		_0804824c
	mov		r0, r8
	mov		r1, #0x63
	mov		r2, #0x63
	bl		sub_080493c8
	b		_08048264
_0804824c:
	cmp		r2, #0x0
	beq		_08048264
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	mov		r0, #0xff
	and		r2, r0
	mov		r0, #0x64
	mul		r2, r0
	lsr		r2, r2, #0x8
	mov		r0, r8
	bl		sub_080493c8
_08048264:
	mov		r2, r8
	ldr		r0, [r2, #0x54]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08048272
	add		r1, r0, #0x0
	sub		r1, #0x40
_08048272:
	ldr		r3, _080482a0
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xb
	bne		_08048204
	ldr		r0, _080482a4
	ldr		r1, [r0, #0x0]
	ldr		r2, _080482a8
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_08048204
	add		r0, r1, #0x0
	bl		sub_080b75b0
	mov		r3, r8
	ldr		r1, [r3, #0x2c]
	mov		r0, r8
	mov		r2, #0x3
_08048298:
	mov		r3, #0x0
	bl		sub_080b7724
	b		sub_08048510

_080482a0:	.4byte 0x000001D9
_080482a4:	.4byte 0x0200D518
_080482a8:	.4byte 0x00000101

_080482ac:
	ldr		r4, _080483dc
	ldr		r1, _080483e0
	add		r0, r4, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0xa
	bl		sub_080300ac
	str		r0, [sp, #0x98]
	add		r0, r4, #0x0
	ldr		r1, [sp, #0x98]
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r2, [sp, #0x98]
	mov		r3, #0xf6
	lsl		r3, r3, #0x1
	add		r1, r2, r3
	ldr		r0, [r1, #0x0]
	mov		r5, r8
	add		r5, #0xe0
	mov		r6, r8
	add		r6, #0xe4
	mov		r4, sp
	add		r4, #0xc
	str		r4, [sp, #0xc8]
	mov		r2, sp
	add		r2, #0xe
	str		r2, [sp, #0xcc]
	mov		r3, sp
	add		r3, #0x11
	str		r3, [sp, #0xd0]
	mov		r4, r8
	add		r4, #0xf0
	str		r4, [sp, #0xc4]
	cmp		r0, #0x0
	bne		_08048312
	add		r4, r1, #0x0
_08048300:
	mov		r0, r8
	bl		sub_08048528
	mov		r0, r8
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08048300
_08048312:
	mov		r0, r8
	ldr		r1, [r0, #0x54]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08048320
	add		r0, r1, #0x0
	sub		r0, #0x40
_08048320:
	add		r0, #0x54
	bl		sub_0808e278
	mov		r1, #0xf0
	lsl		r1, r1, #0x11
	str		r1, [r5, #0x0]
	ldr		r0, _080483e4
	str		r1, [r0, #0x0]
	ldr		r0, _080483e8
	str		r1, [r0, #0x0]
	ldr		r0, _080483ec
	str		r1, [r0, #0x0]
	mov		r2, #0x0
	str		r2, [r6, #0x0]
	ldr		r0, _080483f0
	str		r2, [r0, #0x0]
	ldr		r0, _080483f4
	str		r2, [r0, #0x0]
	ldr		r0, _080483f8
	str		r2, [r0, #0x0]
	ldr		r1, _080483fc
	mov		r0, #0x1
	strb	r0, [r1, #0x1b]
	strb	r0, [r1, #0x1a]
	strb	r0, [r1, #0x19]
	ldr		r0, _08048400
	ldr		r0, [r0, #0x0]
	ldr		r3, _08048404
	add		r1, r0, r3
	str		r2, [r1, #0x0]
	bl		sub_080b75b0
	mov		r3, #0x0
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r4, r8
	str		r4, [sp, #0x9c]
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r0, r8
	str		r0, [sp, #0xa0]
	mov		r1, sp
	add		r1, #0xd
	str		r1, [sp, #0xa4]
	mov		r2, sp
	add		r2, #0xf
	str		r2, [sp, #0xa8]
	mov		r4, sp
	add		r4, #0x10
	str		r4, [sp, #0xac]
	ldr		r0, [sp, #0xc8]
	add		r0, #0x1
	str		r0, [sp, #0xe0]
	ldr		r1, [sp, #0xc8]
	add		r1, #0x4
	str		r1, [sp, #0xdc]
_08048390:
	lsl		r0, r3, #0x1
	ldr		r4, [sp, #0x9c]
	add		r2, r4, r0
	mov		r4, #0x0
	ldrsh	r1, [r2, r4]
	str		r0, [sp, #0xd8]
	cmp		r1, #0x0
	blt		_08048478
	mov		r0, #0x0
	ldrsh	r5, [r2, r0]
	mov		r7, #0x0
	lsl		r1, r3, #0x5
	mov		r9, r1
	add		r3, #0x1
	str		r3, [sp, #0xd4]
	ldr		r2, [sp, #0xc8]
	add		r2, r9
	mov		r10, r2
	ldr		r6, [sp, #0xe0]
	add		r6, r9
_080483b8:
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r5, r0, #0x0
	cmp		r7, #0x1
	bne		_08048408
	cmp		r4, #0x0
	bne		_08048408
	mov		r4, #0x20
	mov		r3, r10
	strb	r4, [r3, #0x0]
	b		_0804840e

_080483dc:	.4byte 0x0200DB40
_080483e0:	.4byte 0xFFFFFEC0
_080483e4:	.4byte 0x0200CE30
_080483e8:	.4byte 0x0200CE2C
_080483ec:	.4byte 0x0200CE28
_080483f0:	.4byte 0x0200CE44
_080483f4:	.4byte 0x0200CE40
_080483f8:	.4byte 0x0200CE3C
_080483fc:	.4byte 0x02008AD4
_08048400:	.4byte 0x0200D520
_08048404:	.4byte 0x0000057C

_08048408:
	add		r0, r4, #0x0
	add		r0, #0x30
	strb	r0, [r6, #0x0]
_0804840e:
	sub		r6, #0x1
	add		r7, #0x1
	cmp		r7, #0x1
	ble		_080483b8
	ldr		r4, [sp, #0xcc]
	add		r4, r9
	ldr		r0, _08048428
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08048430
	ldr		r0, _0804842c
	b		_08048432

_08048428:	.4byte 0x00000836
_0804842c:	.4byte 0x080d333a

_08048430:
	ldr		r0, _08048474
_08048432:
	ldrb	r0, [r0, #0x0]
	strb	r0, [r4, #0x0]
	ldr		r1, [sp, #0xa0]
	ldr		r2, [sp, #0xd8]
	add		r0, r1, r2
	mov		r3, #0x0
	ldrsh	r5, [r0, r3]
	ldr		r6, [sp, #0xdc]
	add		r6, r9
	mov		r7, #0x1
_08048446:
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	add		r0, #0x30
	strb	r0, [r6, #0x0]
	sub		r6, #0x1
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_08048446
	ldr		r0, [sp, #0xd0]
	add		r0, r9
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	b		_080484aa

.incbin "base.gba", 0x48472, 0x2

_08048474:	.4byte 0x080d3342

_08048478:
	lsl		r1, r3, #0x5
	ldr		r2, [sp, #0xc8]
	add		r0, r2, r1
	mov		r4, #0x2d
	strb	r4, [r0, #0x0]
	ldr		r2, [sp, #0xa4]
	add		r0, r2, r1
	strb	r4, [r0, #0x0]
	ldr		r4, [sp, #0xcc]
	add		r0, r4, r1
	mov		r2, #0x2e
	strb	r2, [r0, #0x0]
	ldr		r4, [sp, #0xa8]
	add		r0, r4, r1
	mov		r2, #0x2d
	strb	r2, [r0, #0x0]
	ldr		r4, [sp, #0xac]
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
	ldr		r0, [sp, #0xd0]
	add		r1, r0, r1
	mov		r2, #0x0
	strb	r2, [r1, #0x0]
	add		r3, #0x1
	str		r3, [sp, #0xd4]
_080484aa:
	ldr		r3, [sp, #0xd4]
	cmp		r3, #0x3
	bgt		_080484b2
	b		_08048390
_080484b2:
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r2, r8
	mov		r4, #0x4
	str		r4, [sp, #0x0]
	ldr		r0, [sp, #0x98]
	ldr		r1, [sp, #0xc4]
	ldr		r3, [sp, #0xc8]
	bl		sub_08033028
	ldr		r1, _08048520
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	mov		r3, r8
	ldr		r1, [r3, #0x54]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_080484dc
	add		r0, r1, #0x0
	sub		r0, #0x40
_080484dc:
	bl		sub_080b75b0
	mov		r0, #0x0
	mov		r1, r8
	str		r0, [r1, #0x54]
	mov		r0, #0x8f
	lsl		r0, r0, #0x1
	add		r0, r8
	strb	r4, [r0, #0x0]
	ldr		r1, _08048524
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0804850a
	add		r4, r1, #0x0
_080484f8:
	mov		r0, r8
	bl		sub_08048528
	mov		r0, r8
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080484f8
_0804850a:
	mov		r0, r8
	bl		sub_080b75b0
	thumb_func_end sub_08047cec

	thumb_func_start sub_08048510
sub_08048510:
	add		sp, #0xe4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08048520:	.4byte 0x0200DD2C
_08048524:	.4byte 0x0200D534
	thumb_func_end sub_08048510

	thumb_func_start sub_08048528
sub_08048528:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	add		r4, #0x54
	mov		r5, #0x19
_0804853c:
	ldr		r2, [r4, #0x0]
	cmp		r2, #0x0
	beq		_08048550
	ldr		r1, [r2, #0xc]
	mov		r3, #0x18
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
_08048550:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0804853c
	mov		r1, #0x8f
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x4
	bne		_08048566
	b		_08048744
_08048566:
	ldr		r2, _080485f8
	add		r0, r6, r2
	ldrb	r2, [r0, #0x0]
	cmp		r2, #0x0
	bne		_08048590
	ldr		r3, _080485fc
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1d
	bls		_08048590
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_08048590
	strb	r2, [r1, #0x0]
_08048590:
	mov		r5, #0x0
	mov		r1, #0x92
	lsl		r1, r1, #0x1
	add		r1, r1, r6
	mov		r10, r1
	mov		r2, #0x8f
	lsl		r2, r2, #0x1
	add		r2, r2, r6
	mov		r9, r2
	ldr		r3, _080485fc
	add		r3, r3, r6
	mov		r8, r3
	mov		r0, #0x91
	lsl		r0, r0, #0x1
	add		r0, r6, r0
	str		r0, [sp, #0x0]
	add		r7, r6, #0x0
	add		r7, #0xc8
	add		r1, r6, #0x0
	add		r1, #0xcc
	str		r1, [sp, #0x4]
	add		r4, r6, #0x0
	add		r4, #0xbc
_080485be:
	cmp		r5, #0x1
	bne		_08048634
	ldr		r1, [r6, #0x54]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_080485ce
	add		r0, r1, #0x0
	sub		r0, #0x40
_080485ce:
	mov		r2, #0xe4
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	cmp		r2, #0xa
	ble		_08048616
	ldr		r3, _08048600
	ldr		r0, [r3, #0x0]
	add		r0, #0xe2
	ldrh	r1, [r0, #0x0]
	lsl		r0, r1, #0x8
	cmp		r2, r0
	bge		_08048604
	asr		r0, r2, #0x8
	sub		r0, r0, r1
	mov		r1, #0x32
	bl		sub_080bbcac
	mov		r1, #0x1
	sub		r0, r1, r0
	b		_08048610

_080485f8:	.4byte 0x0000011F
_080485fc:	.4byte 0x00000123
_08048600:	.4byte 0x0200D568

_08048604:
	asr		r0, r2, #0x8
	sub		r0, r0, r1
	mov		r1, #0xa
	bl		sub_080bbcac
	neg		r0, r0
_08048610:
	lsl		r1, r0, #0x2
	add		r2, r1, r0
	b		_08048618
_08048616:
	mov		r2, #0xf
_08048618:
	ldr		r1, [r4, #0x0]
	ldr		r3, _0804862c
	ldr		r0, [r3, #0x0]
	ldr		r3, _08048630
	add		r0, r0, r3
	ldrb	r0, [r0, #0x0]
	add		r0, #0x26
	add		r0, r0, r2
	b		_08048662

.incbin "base.gba", 0x4862A, 0x2

_0804862c:	.4byte 0x0200D568
_08048630:	.4byte 0x00000147

_08048634:
	cmp		r5, #0x3
	ble		_080486a6
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_080486a6
	mov		r2, r9
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	bne		_08048668
	ldr		r1, [r4, #0x0]
	lsl		r0, r5, #0x3
	add		r0, #0xa8
	add		r1, #0x68
	strh	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	mov		r3, r8
	ldrb	r0, [r3, #0x0]
	mov		r2, #0xcc
	mul		r0, r2
	asr		r0, r0, #0x8
	mov		r3, #0xa0
	sub		r0, r3, r0
_08048662:
	add		r1, #0x6a
	strh	r0, [r1, #0x0]
	b		_080486a6
_08048668:
	ldr		r2, [r4, #0x0]
	ldr		r1, [r6, #0x54]
	add		r1, #0xac
	ldr		r3, _080486e0
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	sub		r0, r5, #0x6
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	add		r2, #0x68
	strh	r1, [r2, #0x0]
	ldr		r2, [r4, #0x0]
	ldr		r0, [r6, #0x54]
	add		r0, #0xb0
	ldr		r3, _080486e4
	ldr		r1, [r3, #0x0]
	asr		r1, r1, #0x8
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	mov		r3, r8
	ldrb	r1, [r3, #0x0]
	mov		r3, #0xcc
	mul		r1, r3
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r0, #0x10
	add		r2, #0x6a
	strh	r0, [r2, #0x0]
_080486a6:
	cmp		r5, #0x0
	bne		_080486b2
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_0804873a
_080486b2:
	cmp		r5, #0x3
	bne		_0804870e
	ldr		r2, [sp, #0x0]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0xb
	beq		_0804873a
	ldr		r3, _080486e8
	add		r2, r6, r3
	ldrb	r1, [r2, #0x0]
	add		r0, r1, #0x0
	cmp		r0, #0xff
	beq		_080486fc
	add		r1, #0x1
	strb	r1, [r2, #0x0]
	mov		r3, #0xff
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x77
	bls		_080486ec
	orr		r1, r3
	strb	r1, [r2, #0x0]
	b		_080486fc

.incbin "base.gba", 0x486DE, 0x2

_080486e0:	.4byte 0x0200CE30
_080486e4:	.4byte 0x0200CE44
_080486e8:	.4byte 0x00000125

_080486ec:
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1e
	bl		sub_080bbeac
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bls		_0804873a
_080486fc:
	ldr		r0, [r7, #0x0]
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	b		_0804873a
_0804870e:
	cmp		r5, #0x3
	ble		_0804871a
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_0804873a
_0804871a:
	cmp		r5, #0x4
	bne		_0804872a
	ldr		r2, [sp, #0x4]
	ldr		r0, [r2, #0x0]
	add		r0, #0xa4
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0804873a
_0804872a:
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
_0804873a:
	add		r4, #0x4
	add		r5, #0x1
	cmp		r5, #0x8
	bgt		_08048744
	b		_080485be
_08048744:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08048528

	thumb_func_start sub_08048754
sub_08048754:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x60
	mov		r10, r0
	ldr		r0, [r0, #0x54]
	mov		r7, #0x0
	cmp		r0, #0x0
	beq		_0804876e
	add		r7, r0, #0x0
	sub		r7, #0x40
_0804876e:
	add		r0, sp, #0x8
	add		r1, r7, #0x0
	bl		sub_0804a848
	ldr		r1, _080487fc
	add		r0, r7, r1
	ldrb	r2, [r0, #0x0]
	cmp		r2, #0x9
	bne		_08048782
	b		_08048cda
_08048782:
	ldr		r0, _08048800
	add		r0, r10
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0804878e
	b		_08048cda
_0804878e:
	mov		r4, #0x91
	lsl		r4, r4, #0x1
	add		r4, r10
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0xb
	bne		_08048804
	str		r1, [sp, #0x20]
	str		r1, [sp, #0x24]
	str		r1, [sp, #0x28]
	str		r1, [sp, #0x2C]
	add		r1, sp, #0x20
	add		r2, sp, #0x24
	add		r3, sp, #0x28
	add		r0, sp, #0x2c
	str		r0, [sp, #0x0]
	mov		r0, r10
	bl		sub_0804acb4
	add		r0, r7, #0x0
	add		r0, #0xf4
	ldr		r1, [r0, #0x0]
	str		r0, [sp, #0x54]
	add		r2, r7, #0x0
	add		r2, #0xec
	str		r2, [sp, #0x4C]
	add		r3, r7, #0x0
	add		r3, #0xf0
	str		r3, [sp, #0x50]
	cmp		r1, #0x0
	beq		_080487cc
	b		_08048928
_080487cc:
	ldr		r0, [sp, #0x24]
	ldr		r1, [r2, #0x0]
	cmp		r0, r1
	ble		_080487d6
	b		_08048928
_080487d6:
	ldr		r0, [sp, #0x20]
	cmp		r1, r0
	ble		_080487de
	b		_08048928
_080487de:
	ldr		r0, [sp, #0x2C]
	ldr		r1, [r3, #0x0]
	cmp		r0, r1
	ble		_080487e8
	b		_08048928
_080487e8:
	ldr		r0, [sp, #0x28]
	cmp		r1, r0
	ble		_080487f0
	b		_08048928
_080487f0:
	add		r0, r7, #0x0
	mov		r1, #0x1
	bl		sub_0804a9f0
	mov		r0, #0xfe
	b		_08048cdc

_080487fc:	.4byte 0x000001D9
_08048800:	.4byte 0x0000011F

_08048804:
	add		r0, r7, #0x0
	add		r0, #0xf4
	ldr		r5, [r0, #0x0]
	str		r0, [sp, #0x54]
	sub		r0, #0x8
	str		r0, [sp, #0x4C]
	add		r1, r7, #0x0
	add		r1, #0xf0
	str		r1, [sp, #0x50]
	cmp		r5, #0x0
	beq		_0804881c
	b		_08048928
_0804881c:
	cmp		r2, #0x8
	bne		_08048822
	b		_08048928
_08048822:
	ldr		r3, _080488c8
	add		r2, r7, r3
	ldr		r6, _080488cc
	ldr		r0, [r6, #0x0]
	mov		r1, #0x96
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrb	r3, [r4, #0x0]
	add		r0, r0, r3
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08048928
	mov		r3, #0xec
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, r1
	bne		_08048928
	str		r5, [sp, #0x30]
	str		r5, [sp, #0x34]
	str		r5, [sp, #0x38]
	str		r5, [sp, #0x3C]
	ldrb	r1, [r2, #0x0]
	add		r2, sp, #0x30
	add		r3, sp, #0x34
	add		r0, sp, #0x38
	str		r0, [sp, #0x0]
	add		r0, sp, #0x3c
	str		r0, [sp, #0x4]
	mov		r0, r10
	bl		sub_08048d98
	ldr		r0, [sp, #0x34]
	ldr		r2, [sp, #0x4C]
	ldr		r1, [r2, #0x0]
	cmp		r0, r1
	bgt		_08048928
	ldr		r0, [sp, #0x30]
	cmp		r1, r0
	bgt		_08048928
	ldr		r0, [sp, #0x3C]
	ldr		r3, [sp, #0x50]
	ldr		r1, [r3, #0x0]
	cmp		r0, r1
	bgt		_08048928
	ldr		r0, [sp, #0x38]
	cmp		r1, r0
	bgt		_08048928
	ldr		r2, [r6, #0x0]
	ldr		r1, _080488d0
	add		r0, r2, r1
	ldrb	r3, [r4, #0x0]
	add		r0, r0, r3
	mov		r3, #0xeb
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bcs		_080488d8
	add		r0, r7, #0x0
	bl		sub_0804aa20
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xa
	bls		_080488b2
	b		_08048cda
_080488b2:
	mov		r0, r10
	add		r0, #0xc8
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r4, #0x0]
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r0, _080488d4
	add		r0, r10
	strb	r5, [r0, #0x0]
	b		_08048cda

_080488c8:	.4byte 0x000001D7
_080488cc:	.4byte 0x0200D568
_080488d0:	.4byte 0x00000137
_080488d4:	.4byte 0x00000125

_080488d8:
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r0, r10
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080488ec
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	b		_080488f2
_080488ec:
	mov		r3, #0x8d
	lsl		r3, r3, #0x1
	add		r0, r2, r3
_080488f2:
	ldrh	r2, [r0, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r1, r10
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x12
	bls		_0804890c
	mov		r0, #0x12
	strh	r0, [r1, #0x0]
_0804890c:
	lsr		r1, r2, #0x8
	mov		r0, #0xff
	and		r2, r0
	mov		r0, #0x64
	mul		r2, r0
	lsr		r2, r2, #0x8
	mov		r0, r10
	bl		sub_080493c8
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_0804a9f0
	b		_08048cda
_08048928:
	mov		r5, #0x0
	ldr		r2, _08048950
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r1, #0x8
	ldrsh	r0, [r0, r1]
	lsl		r3, r0, #0x8
	ldr		r0, [sp, #0x50]
	ldr		r4, [r0, #0x0]
	sub		r1, r4, r3
	ldr		r0, _08048954
	cmp		r1, r0
	bgt		_08048958
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	add		r0, r3, r1
	ldr		r2, [sp, #0x50]
	str		r0, [r2, #0x0]
	mov		r5, #0x3
	b		_0804896a

_08048950:	.4byte 0x080d334c
_08048954:	.4byte 0x00000FFF

_08048958:
	add		r0, r4, r3
	mov		r1, #0xa0
	lsl		r1, r1, #0xa
	cmp		r0, r1
	ble		_0804896a
	sub		r0, r1, r3
	ldr		r3, [sp, #0x50]
	str		r0, [r3, #0x0]
	mov		r5, #0x4
_0804896a:
	ldr		r0, _08048990
	ldr		r0, [r0, #0x0]
	mov		r1, #0x10
	ldrsh	r0, [r0, r1]
	lsl		r2, r0, #0x8
	ldr		r0, [sp, #0x4C]
	ldr		r3, [r0, #0x0]
	sub		r1, r3, r2
	ldr		r0, _08048994
	cmp		r1, r0
	bgt		_08048998
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r2, r1
	ldr		r2, [sp, #0x4C]
	str		r0, [r2, #0x0]
	mov		r5, #0x2
	b		_080489ae

.incbin "base.gba", 0x4898E, 0x2

_08048990:	.4byte 0x0200D568
_08048994:	.4byte 0x000003FF

_08048998:
	add		r0, r3, r2
	mov		r1, #0xb3
	lsl		r1, r1, #0xa
	cmp		r0, r1
	ble		_080489aa
	sub		r0, r1, r2
	ldr		r3, [sp, #0x4C]
	str		r0, [r3, #0x0]
	mov		r5, #0x1
_080489aa:
	cmp		r5, #0x0
	beq		_080489b2
_080489ae:
	sub		r0, r5, #0x1
	b		_08048cdc
_080489b2:
	mov		r0, #0x0
	str		r0, [sp, #0x48]
	mov		r8, r0
	mov		r1, r10
	add		r1, #0x54
	str		r1, [sp, #0x5C]
_080489be:
	mov		r2, r8
	add		r2, #0x1
	lsl		r0, r2, #0x2
	ldr		r3, [sp, #0x5C]
	add		r0, r3, r0
	ldr		r6, [r0, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x40]
	str		r0, [sp, #0x44]
	add		r0, r6, #0x0
	add		r0, #0xc6
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1a
	mov		r9, r0
	str		r2, [sp, #0x58]
	cmp		r1, #0x7
	bhi		_080489e8
	b		_08048afe
_080489e8:
	ldr		r1, [sp, #0x54]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080489f2
	b		_08048cbc
_080489f2:
	add		r4, sp, #0x14
	add		r0, r4, #0x0
	add		r1, sp, #0x8
	mov		r2, #0xc
	bl		sub_0808c818
	add		r0, sp, #0x40
	str		r0, [sp, #0x0]
	add		r0, sp, #0x44
	str		r0, [sp, #0x4]
	ldrh	r2, [r4, #0x0]
	sub		r0, #0x2e
	ldrh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	orr		r1, r2
	add		r0, sp, #0x18
	ldrh	r3, [r0, #0x0]
	add		r0, #0x2
	ldrh	r2, [r0, #0x0]
	lsl		r2, r2, #0x10
	orr		r2, r3
	add		r0, sp, #0x1c
	ldrh	r4, [r0, #0x0]
	add		r0, #0x2
	ldrh	r3, [r0, #0x0]
	lsl		r3, r3, #0x10
	orr		r3, r4
	add		r0, r6, #0x0
	bl		sub_08049700
	add		r5, r0, #0x0
	cmp		r5, #0xff
	bne		_08048a36
	b		_08048cbc
_08048a36:
	mov		r2, #0x1
	str		r2, [sp, #0x48]
	mov		r3, #0xed
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08048a8c
	add		r4, r6, #0x0
	add		r4, #0xc7
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08048a8c
	bl		sub_0808f71c
	mov		r0, #0x32
	bl		sub_0808f690
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_0804ab88
	add		r0, sp, #0x48
	ldrb	r0, [r0, #0x0]
	strb	r0, [r4, #0x0]
	ldr		r0, _08048a88
	ldr		r0, [r0, #0x0]
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrh	r2, [r0, #0x0]
	lsr		r1, r2, #0x8
	mov		r0, #0xff
	and		r0, r2
	mov		r2, #0x64
	mul		r2, r0
	lsr		r2, r2, #0x8
	mov		r0, r10
	bl		sub_080493c8
	b		_08048cbc

_08048a88:	.4byte 0x0200D568

_08048a8c:
	mov		r2, #0xed
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08048a9a
	b		_08048cbc
_08048a9a:
	sub		r0, r5, #0x2
	cmp		r0, #0x1
	bhi		_08048ac8
	mov		r3, #0xda
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [sp, #0x4C]
	str		r0, [r1, #0x0]
	sub		r2, #0x22
	add		r1, r7, r2
	ldr		r0, [r1, #0x0]
	ldr		r3, [sp, #0x50]
	str		r0, [r3, #0x0]
	ldr		r2, [sp, #0x44]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	bne		_08048ac0
	b		_08048bc4
_08048ac0:
	mov		r1, #0xe2
	lsl		r1, r1, #0x1
	add		r4, r7, r1
	b		_08048b84
_08048ac8:
	cmp		r5, #0x1
	bhi		_08048bc4
	mov		r2, #0xda
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	ldr		r0, [r1, #0x0]
	ldr		r3, [sp, #0x4C]
	str		r0, [r3, #0x0]
	ldr		r2, [sp, #0x40]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	beq		_08048af0
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r4, r7, r1
	sub		r0, r2, r0
	mov		r1, #0x1c
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
_08048af0:
	mov		r2, #0xdc
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	ldr		r3, [sp, #0x50]
	str		r0, [r3, #0x0]
	b		_08048bc4
_08048afe:
	ldr		r1, [sp, #0x54]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08048bc8
	add		r4, sp, #0x14
	add		r0, r4, #0x0
	add		r1, sp, #0x8
	mov		r2, #0xc
	bl		sub_0808c818
	add		r0, sp, #0x40
	str		r0, [sp, #0x0]
	add		r0, sp, #0x44
	str		r0, [sp, #0x4]
	ldrh	r2, [r4, #0x0]
	sub		r0, #0x2e
	ldrh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	orr		r1, r2
	add		r0, sp, #0x18
	ldrh	r3, [r0, #0x0]
	add		r0, #0x2
	ldrh	r2, [r0, #0x0]
	lsl		r2, r2, #0x10
	orr		r2, r3
	add		r0, sp, #0x1c
	ldrh	r4, [r0, #0x0]
	add		r0, #0x2
	ldrh	r3, [r0, #0x0]
	lsl		r3, r3, #0x10
	orr		r3, r4
	add		r0, r6, #0x0
	bl		sub_08049700
	add		r5, r0, #0x0
	cmp		r5, #0xff
	bne		_08048b4a
	b		_08048cbc
_08048b4a:
	mov		r2, #0x1
	str		r2, [sp, #0x48]
	mov		r3, #0xed
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08048b5c
	b		_08048cbc
_08048b5c:
	sub		r0, r5, #0x2
	cmp		r0, #0x1
	bhi		_08048b90
	mov		r1, #0xda
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r2, [sp, #0x4C]
	str		r0, [r2, #0x0]
	sub		r3, #0x22
	add		r1, r7, r3
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x50]
	str		r0, [r2, #0x0]
	ldr		r2, [sp, #0x44]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	beq		_08048bc4
	add		r3, #0xc
	add		r4, r7, r3
_08048b84:
	sub		r0, r2, r0
	mov		r1, #0x1c
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	b		_08048bc4
_08048b90:
	cmp		r5, #0x1
	bhi		_08048bc4
	mov		r0, #0xda
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x4C]
	str		r0, [r2, #0x0]
	ldr		r2, [sp, #0x40]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	beq		_08048bb8
	mov		r3, #0xe0
	lsl		r3, r3, #0x1
	add		r4, r7, r3
	sub		r0, r2, r0
	mov		r1, #0x1c
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
_08048bb8:
	mov		r1, #0xdc
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r2, [sp, #0x50]
	str		r0, [r2, #0x0]
_08048bc4:
	add		r0, r5, #0x0
	b		_08048cdc
_08048bc8:
	add		r4, sp, #0x14
	add		r0, r4, #0x0
	add		r1, sp, #0x8
	mov		r2, #0xc
	bl		sub_0808c818
	add		r0, sp, #0x40
	str		r0, [sp, #0x0]
	add		r0, sp, #0x44
	str		r0, [sp, #0x4]
	ldrh	r2, [r4, #0x0]
	sub		r0, #0x2e
	ldrh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	orr		r1, r2
	add		r0, sp, #0x18
	ldrh	r3, [r0, #0x0]
	add		r0, #0x2
	ldrh	r2, [r0, #0x0]
	lsl		r2, r2, #0x10
	orr		r2, r3
	add		r0, sp, #0x1c
	ldrh	r4, [r0, #0x0]
	add		r0, #0x2
	ldrh	r3, [r0, #0x0]
	lsl		r3, r3, #0x10
	orr		r3, r4
	add		r0, r6, #0x0
	bl		sub_08049700
	add		r5, r0, #0x0
	cmp		r5, #0xff
	beq		_08048cbc
	mov		r5, #0x1
	neg		r5, r5
	mov		r3, #0xeb
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x5
	bhi		_08048c5c
	lsl		r0, r0, #0x2
	ldr		r1, _08048c24
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08048c24:	.4byte 0x08048c28
_08048c28:	.4byte 0x08048c5c

.incbin "base.gba", 0x48C2C, 0x14
	thumb_func_end sub_08048754


.incbin "base.gba", 0x48C40, 0x1C

_08048c5c:

.incbin "base.gba", 0x48C5C, 0x34
_08048c90:

.incbin "base.gba", 0x48C90, 0x6
_08048c96:

.incbin "base.gba", 0x48C96, 0x1E
_08048cb4:

.incbin "base.gba", 0x48CB4, 0x8
_08048cbc:

.incbin "base.gba", 0x48CBC, 0xA
_08048cc6:

.incbin "base.gba", 0x48CC6, 0x14
_08048cda:

.incbin "base.gba", 0x48CDA, 0x2
_08048cdc:

.incbin "base.gba", 0x48CDC, 0x10
_08048cec:	.4byte 0x0200D568
	thumb_func_start sub_08048cf0
sub_08048cf0:
	push	{ lr }
	add		r3, r0, #0x0
	add		r1, r3, #0x0
	add		r1, #0xe0
	ldr		r0, [r3, #0x54]
	add		r0, #0xac
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	ldr		r2, _08048d14
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r2, #0xf0
	lsl		r2, r2, #0x11
	cmp		r0, r2
	ble		_08048d18
	str		r2, [r1, #0x0]
	b		_08048d20

.incbin "base.gba", 0x48D12, 0x2

_08048d14:	.4byte 0xFF880000

_08048d18:
	cmp		r0, #0x0
	bge		_08048d20
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08048d20:
	ldr		r2, _08048d54
	add		r0, r3, #0x0
	add		r0, #0xe0
	ldr		r1, [r0, #0x0]
	ldr		r0, _08048d58
	and		r1, r0
	str		r1, [r2, #0x0]
	ldr		r0, _08048d5c
	str		r1, [r0, #0x0]
	ldr		r0, _08048d60
	str		r1, [r0, #0x0]
	add		r1, r3, #0x0
	add		r1, #0xe4
	ldr		r0, [r3, #0x54]
	add		r0, #0xb0
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	ldr		r2, _08048d64
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r2, #0xf0
	lsl		r2, r2, #0x11
	cmp		r0, r2
	ble		_08048d68
	str		r2, [r1, #0x0]
	b		_08048d70

_08048d54:	.4byte 0x0200CE30
_08048d58:	.4byte 0xffff0000
_08048d5c:	.4byte 0x0200CE2C
_08048d60:	.4byte 0x0200CE28
_08048d64:	.4byte 0xFFA00000

_08048d68:
	cmp		r0, #0x0
	bge		_08048d70
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08048d70:
	ldr		r2, _08048d88
	ldr		r1, [r1, #0x0]
	ldr		r0, _08048d8c
	and		r1, r0
	str		r1, [r2, #0x0]
	ldr		r0, _08048d90
	str		r1, [r0, #0x0]
	ldr		r0, _08048d94
	str		r1, [r0, #0x0]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48D86, 0x2

_08048d88:	.4byte 0x0200CE44
_08048d8c:	.4byte 0xffff0000
_08048d90:	.4byte 0x0200CE40
_08048d94:	.4byte 0x0200CE3C
	thumb_func_end sub_08048cf0

	thumb_func_start sub_08048d98
sub_08048d98:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	add		r5, r2, #0x0
	ldr		r6, [sp, #0x0+0x14]
	ldr		r7, [sp, #0x4+0x14]
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r1, #0x0
	cmp		r1, #0x1
	beq		_08048e4c
	cmp		r1, #0x1
	bgt		_08048db6
	cmp		r1, #0x0
	beq		_08048dc4
	b		_08048fd8
_08048db6:
	cmp		r0, #0x2
	bne		_08048dbc
	b		_08048ecc
_08048dbc:
	cmp		r0, #0x3
	bne		_08048dc2
	b		_08048f54
_08048dc2:
	b		_08048fd8
_08048dc4:
	ldr		r4, _08048e48
	ldr		r2, [r4, #0x0]
	mov		r0, #0x91
	lsl		r0, r0, #0x1
	add		r12, r0
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0x3a
	ldrsh	r2, [r2, r1]
	sub		r0, r0, r2
	lsl		r0, r0, #0x8
	str		r0, [r5, #0x0]
	ldr		r2, [r4, #0x0]
	mov		r5, r12
	ldrb	r1, [r5, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r5, #0x3e
	ldrsh	r1, [r2, r5]
	sub		r0, r0, r1
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x3c
	ldrsh	r0, [r3, r5]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r2, r0
	lsl		r2, r2, #0x8
	str		r2, [r6, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x38
	ldrsh	r0, [r3, r5]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r2, r0
	b		_08048fd4

.incbin "base.gba", 0x48E46, 0x2

_08048e48:	.4byte 0x0200D568

_08048e4c:
	ldr		r4, _08048ec8
	ldr		r2, [r4, #0x0]
	mov		r0, #0x91
	lsl		r0, r0, #0x1
	add		r12, r0
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0x3e
	ldrsh	r2, [r2, r1]
	add		r0, r0, r2
	lsl		r0, r0, #0x8
	str		r0, [r5, #0x0]
	ldr		r2, [r4, #0x0]
	mov		r5, r12
	ldrb	r1, [r5, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r5, #0x3a
	ldrsh	r1, [r2, r5]
	add		r0, r0, r1
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x38
	ldrsh	r0, [r3, r5]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	sub		r2, r2, r0
	lsl		r2, r2, #0x8
	str		r2, [r6, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x3c
	ldrsh	r0, [r3, r5]
	b		_08048fcc

.incbin "base.gba", 0x48EC6, 0x2

_08048ec8:	.4byte 0x0200D568

_08048ecc:
	ldr		r4, _08048f50
	ldr		r2, [r4, #0x0]
	mov		r0, #0x91
	lsl		r0, r0, #0x1
	add		r12, r0
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0x3c
	ldrsh	r2, [r2, r1]
	add		r0, r0, r2
	lsl		r0, r0, #0x8
	str		r0, [r5, #0x0]
	ldr		r2, [r4, #0x0]
	mov		r5, r12
	ldrb	r1, [r5, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r5, #0x38
	ldrsh	r1, [r2, r5]
	add		r0, r0, r1
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x3e
	ldrsh	r0, [r3, r5]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r2, r0
	lsl		r2, r2, #0x8
	str		r2, [r6, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x3a
	ldrsh	r0, [r3, r5]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r2, r0
	b		_08048fd4

.incbin "base.gba", 0x48F4E, 0x2

_08048f50:	.4byte 0x0200D568

_08048f54:
	ldr		r4, _08048fe0
	ldr		r2, [r4, #0x0]
	mov		r0, #0x91
	lsl		r0, r0, #0x1
	add		r12, r0
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0x38
	ldrsh	r2, [r2, r1]
	sub		r0, r0, r2
	lsl		r0, r0, #0x8
	str		r0, [r5, #0x0]
	ldr		r2, [r4, #0x0]
	mov		r5, r12
	ldrb	r1, [r5, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r5, #0x3c
	ldrsh	r1, [r2, r5]
	sub		r0, r0, r1
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x3a
	ldrsh	r0, [r3, r5]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	sub		r2, r2, r0
	lsl		r2, r2, #0x8
	str		r2, [r6, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r5, #0x3e
	ldrsh	r0, [r3, r5]
_08048fcc:
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	sub		r2, r2, r0
_08048fd4:
	lsl		r2, r2, #0x8
	str		r2, [r7, #0x0]
_08048fd8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48FDE, 0x2

_08048fe0:	.4byte 0x0200D568
	thumb_func_end sub_08048d98

	thumb_func_start sub_08048fe4
sub_08048fe4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x28
	add		r7, r0, #0x0
	ldr		r1, _08049048
	add		r0, sp, #0x8
	mov		r2, #0x4
	bl		sub_0808c818
	add		r4, sp, #0xc
	ldr		r1, _0804904c
	add		r0, r4, #0x0
	mov		r2, #0xb
	bl		sub_0808c818
	ldr		r0, [r7, #0x54]
	mov		r6, #0x0
	mov		r8, r4
	cmp		r0, #0x0
	beq		_08049012
	add		r6, r0, #0x0
	sub		r6, #0x40
_08049012:
	mov		r0, #0x0
	str		r0, [sp, #0x18]
	str		r0, [sp, #0x1C]
	str		r0, [sp, #0x20]
	str		r0, [sp, #0x24]
	mov		r5, #0x0
	ldr		r1, _08049050
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	add		r2, sp, #0x18
	add		r3, sp, #0x1c
	add		r0, sp, #0x20
	str		r0, [sp, #0x0]
	add		r0, sp, #0x24
	str		r0, [sp, #0x4]
	add		r0, r7, #0x0
	bl		sub_08048d98
	add		r0, r6, #0x0
	add		r0, #0xec
	ldr		r1, [sp, #0x18]
	ldr		r2, [r0, #0x0]
	cmp		r1, r2
	bge		_08049054
	mov		r5, #0x2
	b		_0804905c

.incbin "base.gba", 0x49046, 0x2

_08049048:	.4byte 0x080d3350
_0804904c:	.4byte 0x080d3354
_08049050:	.4byte 0x000001D7

_08049054:
	ldr		r0, [sp, #0x1C]
	cmp		r2, r0
	bge		_0804905c
	mov		r5, #0x1
_0804905c:
	add		r0, r6, #0x0
	add		r0, #0xf0
	ldr		r1, [sp, #0x20]
	ldr		r2, [r0, #0x0]
	cmp		r1, r2
	bge		_0804906e
	mov		r0, #0x4
	orr		r5, r0
	b		_0804907c
_0804906e:
	ldr		r0, [sp, #0x24]
	cmp		r2, r0
	bge		_0804907c
	mov		r0, #0x8
	orr		r5, r0
	lsl		r0, r5, #0x18
	lsr		r5, r0, #0x18
_0804907c:
	cmp		r5, #0x0
	bne		_0804909a
	ldr		r0, _080490a8
	ldr		r0, [r0, #0x0]
	mov		r2, #0x91
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	add		r2, #0xa
	add		r0, r0, r2
	ldrb	r1, [r1, #0x0]
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	add		r0, sp
	add		r0, #0x8
	ldrb	r5, [r0, #0x0]
_0804909a:
	mov		r1, r8
	add		r0, r1, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	bne		_080490ac
_080490a4:
	b		_080490a4

.incbin "base.gba", 0x490A6, 0x2

_080490a8:	.4byte 0x0200D568

_080490ac:
	add		r4, r7, #0x0
	add		r4, #0xbc
	ldr		r0, [r4, #0x0]
	mov		r2, r8
	add		r1, r2, r5
	ldrb	r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_0804d394
	ldr		r2, [r4, #0x0]
	lsr		r0, r5, #0x1
	mov		r1, #0x1
	and		r0, r1
	add		r2, #0x7b
	strb	r0, [r2, #0x0]
	ldr		r0, _0804910c
	add		r5, r7, r0
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	strb	r0, [r5, #0x0]
	mov		r1, #0xff
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x3c
	bls		_08049100
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	strb	r0, [r4, #0x0]
	and		r0, r1
	cmp		r0, #0x17
	bls		_080490f4
	mov		r0, #0x15
	strb	r0, [r4, #0x0]
_080490f4:
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x0
	strb	r0, [r5, #0x0]
_08049100:
	add		sp, #0x28
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804910c:	.4byte 0x00000121
	thumb_func_end sub_08048fe4

	thumb_func_start sub_08049110
sub_08049110:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	ldr		r0, _08049138
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804913c
	mov		r0, #0xa7
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08049132
	mov		r0, #0x1
_08049132:
	add		r3, r0, #0x0
	b		_0804913e

.incbin "base.gba", 0x49136, 0x2

_08049138:	.4byte 0x0000029D

_0804913c:
	mov		r3, #0x2
_0804913e:
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r2, #0x0
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	ldr		r5, _0804926c
	add		r1, r7, r5
	mov		r0, #0xc
	strb	r0, [r1, #0x0]
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x11
	strb	r0, [r1, #0x0]
	add		r5, #0x2
	add		r1, r7, r5
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
	mov		r0, #0x8a
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r5, #0x2
	add		r1, r7, r5
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	mov		r0, #0x8b
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	ldr		r1, _08049270
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	ldr		r0, _08049274
	ldr		r4, [r0, #0x0]
	lsl		r2, r3, #0x1
	add		r2, r2, r3
	mov		r3, #0xa4
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	sub		r5, #0x15
	add		r5, r5, r7
	mov		r8, r5
	strh	r0, [r5, #0x0]
	add		r1, #0x32
	add		r0, r4, r1
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	sub		r3, #0x46
	add		r1, r7, r3
	strh	r0, [r1, #0x0]
	mov		r5, #0xa5
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	add		r0, r0, r2
	ldrb	r1, [r0, #0x0]
	add		r3, #0x2
	add		r0, r7, r3
	strh	r1, [r0, #0x0]
	sub		r5, #0x44
	add		r0, r7, r5
	mov		r3, #0x63
	strh	r3, [r0, #0x0]
	ldr		r1, _08049278
	add		r0, r4, r1
	add		r0, r0, r2
	ldrb	r1, [r0, #0x0]
	add		r5, #0x2
	add		r0, r7, r5
	strh	r1, [r0, #0x0]
	mov		r1, #0xa9
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	add		r5, #0x2
	add		r1, r7, r5
	strh	r0, [r1, #0x0]
	ldr		r1, _0804927c
	add		r0, r4, r1
	add		r0, r0, r2
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x86
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	add		r5, #0x4
	add		r0, r7, r5
	strh	r3, [r0, #0x0]
	ldr		r0, _08049280
	bl		sub_0800f354
	add		r6, r0, #0x0
	ldr		r0, _08049284
	bl		sub_0800f354
	add		r5, r0, #0x0
	ldr		r0, _08049288
	bl		sub_0800f354
	add		r4, r0, #0x0
	ldr		r0, _0804928c
	bl		sub_0800f354
	add		r1, r7, #0x0
	add		r1, #0xf0
	str		r5, [r1, #0x0]
	add		r1, #0x4
	str		r4, [r1, #0x0]
	add		r1, #0x4
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xfc
	str		r6, [r0, #0x0]
	mov		r5, #0x0
	ldr		r6, _08049290
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	add		r7, r7, r0
	mov		r4, r8
_08049238:
	add		r0, r7, r5
	ldrb	r2, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r3, [r4, r1]
	mov		r1, #0x8
	ldrsh	r0, [r4, r1]
	str		r0, [sp, #0x0]
	ldr		r0, [r6, #0x0]
	add		r1, r5, #0x0
	bl		sub_08006314
	add		r4, #0x2
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08049238
	ldr		r0, [r6, #0x0]
	ldr		r1, _08049294
	ldr		r2, _08049298
	bl		sub_0800601c
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804926c:	.4byte 0x00000111
_08049270:	.4byte 0x00000117
_08049274:	.4byte 0x0200D568
_08049278:	.4byte 0x00000151
_0804927c:	.4byte 0x00000153
_08049280:	.4byte 0x080d3360 @ ms_ta_0048
_08049284:	.4byte 0x080d336c @ ms_ta_0051
_08049288:	.4byte 0x080d3378 @ ms_ta_0054
_0804928c:	.4byte 0x080d3384 @ ms_ta_0059
_08049290:	.4byte 0x080d3398
_08049294:	.4byte 0x80808080
_08049298:	.4byte 0x080d3390
	thumb_func_end sub_08049110

	thumb_func_start sub_0804929c
sub_0804929c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	mov		r12, r0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r9, r1
	mov		r0, #0xff
	mov		r8, r0
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r1, r12
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x83
	lsl		r2, r2, #0x1
	add		r2, r12
	strh	r0, [r2, #0x0]
	mov		r0, #0x8d
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrh	r0, [r0, #0x0]
	mov		r2, #0x87
	lsl		r2, r2, #0x1
	add		r2, r12
	strh	r0, [r2, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	blt		_0804935e
	mov		r6, #0x2
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r2, r12
	mov		r4, r12
	add		r4, #0xf8
	mov		r3, #0x89
	lsl		r3, r3, #0x1
	add		r3, r12
_080492ec:
	ldrh	r5, [r2, #0x2]
	mov		r7, #0x2
	ldrsh	r1, [r2, r7]
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	cmp		r1, r0
	blt		_0804930a
	cmp		r1, r0
	bne		_0804935e
	mov		r0, #0xa
	ldrsh	r1, [r2, r0]
	mov		r7, #0x8
	ldrsh	r0, [r2, r7]
	cmp		r1, r0
	bgt		_0804935e
_0804930a:
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	strh	r5, [r2, #0x0]
	strh	r1, [r2, #0x2]
	mov		r7, #0x8
	ldrsh	r1, [r2, r7]
	ldrh	r0, [r2, #0xa]
	strh	r0, [r2, #0x8]
	strh	r1, [r2, #0xa]
	ldrb	r1, [r3, #0x4]
	ldrb	r0, [r3, #0x5]
	strb	r0, [r3, #0x4]
	strb	r1, [r3, #0x5]
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r3, #0x1]
	strb	r0, [r3, #0x0]
	strb	r1, [r3, #0x1]
	ldr		r1, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	str		r0, [r4, #0x0]
	str		r1, [r4, #0x4]
	ldrh	r5, [r2, #0x2]
	mov		r0, #0x2
	ldrsh	r1, [r2, r0]
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	cmp		r1, r0
	bne		_08049352
	mov		r0, #0xa
	ldrsh	r1, [r2, r0]
	mov		r7, #0x8
	ldrsh	r0, [r2, r7]
	cmp		r1, r0
	bne		_08049352
	add		r0, r5, #0x1
	strh	r0, [r2, #0x2]
_08049352:
	sub		r2, #0x2
	sub		r4, #0x4
	sub		r3, #0x1
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_080492ec
_0804935e:
	mov		r5, #0x0
	mov		r6, #0x88
	lsl		r6, r6, #0x1
	add		r6, r12
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r4, r12
_0804936c:
	add		r1, r6, r5
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x6
	bne		_0804937a
	lsl		r0, r5, #0x18
	lsr		r0, r0, #0x18
	mov		r8, r0
_0804937a:
	mov		r0, r9
	cmp		r0, #0x1
	bne		_08049394
	ldrb	r2, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r3, [r4, r1]
	mov		r7, #0x8
	ldrsh	r0, [r4, r7]
	str		r0, [sp, #0x0]
	ldr		r0, _080493c0
	add		r1, r5, #0x0
	bl		sub_08006314
_08049394:
	add		r4, #0x2
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0804936c
	mov		r0, r9
	cmp		r0, #0x1
	bne		_080493b0
	ldr		r0, _080493c0
	mov		r2, r8
	lsl		r1, r2, #0x18
	asr		r1, r1, #0x18
	ldr		r2, _080493c4
	bl		sub_0800601c
_080493b0:
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x493BE, 0x2

_080493c0:	.4byte 0x02000E2C
_080493c4:	.4byte 0x080d339c
	thumb_func_end sub_0804929c

	thumb_func_start sub_080493c8
sub_080493c8:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	add		r0, #0xcc
	ldr		r6, [r0, #0x0]
	lsl		r5, r5, #0x10
	asr		r5, r5, #0x10
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r6, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	add		r0, r7, #0x0
	add		r0, #0xd0
	ldr		r6, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r6, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	add		r0, r7, #0x0
	add		r0, #0xd8
	ldr		r5, [r0, #0x0]
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	add		r0, r7, #0x0
	add		r0, #0xdc
	ldr		r5, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r2, #0x0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r1, _08049464
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x49462, 0x2

_08049464:	.4byte 0x00000123
	thumb_func_end sub_080493c8

	thumb_func_start sub_08049468
sub_08049468:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0xac
	ldr		r0, _080494bc
	ldr		r1, [r0, #0x0]
	asr		r1, r1, #0x8
	ldr		r0, [r2, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r1, r4, #0x0
	add		r1, #0x68
	strh	r0, [r1, #0x0]
	add		r3, r4, #0x0
	add		r3, #0xb0
	add		r2, #0x8
	ldr		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r1, r1, r0
	ldr		r0, _080494c0
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	add		r0, r4, #0x0
	add		r0, #0x6a
	strh	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_080494c4
	add		r0, r4, #0x0
	add		r0, #0xa8
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r1, r2, #0x0
	ldrh	r0, [r0, #0x0]
	add		r1, r1, r0
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x4
	sub		r1, r1, r0
	b		_080494ca

_080494bc:	.4byte 0x0200CE30
_080494c0:	.4byte 0x0200CE44

_080494c4:
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldrh	r1, [r0, #0x0]
_080494ca:
	add		r0, r4, #0x0
	add		r0, #0x70
	strh	r1, [r0, #0x0]
	add		r0, #0x3a
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x7d
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xab
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080494ec
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b3d4
_080494ec:
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08049468

	thumb_func_start sub_080494fc
sub_080494fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	mov		r9, r3
	lsl		r2, r2, #0x18
	lsr		r7, r2, #0x18
	bl		sub_0804d3ec
	ldr		r0, _08049540
	str		r0, [r6, #0xc]
	mov		r0, #0x0
	mov		r10, r0
	mov		r0, #0x4
	and		r0, r7
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x1a
	cmp		r7, #0x7
	bhi		_080495f6
	mov		r0, #0x2
	and		r0, r7
	cmp		r0, #0x0
	beq		_08049548
	ldr		r3, _08049544
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x0]
	lsl		r2, r4, #0x1
	add		r0, r2, r4
	lsl		r0, r0, #0x2
	add		r1, #0x1c
	b		_08049556

_08049540:	.4byte 0x080e1bdc
_08049544:	.4byte 0x080d33a4

_08049548:
	ldr		r3, _080495a8
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x0]
	lsl		r2, r4, #0x1
	add		r0, r2, r4
	lsl		r0, r0, #0x2
	add		r1, #0x20
_08049556:
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x11
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r10, r0
	mov		r0, #0x2
	and		r0, r7
	cmp		r0, #0x0
	beq		_080495ac
	ldr		r0, [r3, #0x0]
	ldr		r3, [r0, #0x0]
	add		r2, r2, r4
	lsl		r2, r2, #0x2
	add		r0, r3, #0x0
	add		r0, #0x22
	add		r0, r0, r2
	ldrh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xbc
	strh	r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x18
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x11
	add		r1, r6, #0x0
	add		r1, #0xbe
	strh	r0, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x20
	add		r0, r0, r2
	ldrh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xc0
	strh	r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x1c
	b		_080495e6

_080495a8:	.4byte 0x080d33a4

_080495ac:
	ldr		r0, [r3, #0x0]
	ldr		r3, [r0, #0x0]
	add		r2, r2, r4
	lsl		r2, r2, #0x2
	add		r0, r3, #0x0
	add		r0, #0x18
	add		r0, r0, r2
	ldrh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xbc
	strh	r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x22
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x11
	add		r1, r6, #0x0
	add		r1, #0xbe
	strh	r0, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x1c
	add		r0, r0, r2
	ldrh	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xc0
	strh	r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x20
_080495e6:
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x11
	add		r1, r6, #0x0
	add		r1, #0xc2
	strh	r0, [r1, #0x0]
	b		_08049634
_080495f6:
	cmp		r7, #0x8
	bne		_08049624
	add		r5, r6, #0x0
	add		r5, #0xbc
	ldr		r4, _08049620
	ldr		r1, [r4, #0x0]
	add		r1, #0x30
	add		r0, r5, #0x0
	mov		r2, #0x8
	bl		sub_0808c818
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r1, #0x34]
	neg		r0, r0
	strh	r0, [r5, #0x0]
	ldrh	r0, [r1, #0x30]
	neg		r0, r0
	add		r1, r6, #0x0
	add		r1, #0xc0
	strh	r0, [r1, #0x0]
	b		_08049634

_08049620:	.4byte 0x0200D568

_08049624:
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldr		r1, _08049658
	ldr		r1, [r1, #0x0]
	add		r1, #0x30
	mov		r2, #0x8
	bl		sub_0808c818
_08049634:
	add		r0, r6, #0x0
	add		r0, #0xb8
	mov		r1, r8
	str		r1, [r0, #0x0]
	cmp		r7, #0x7
	bhi		_0804965c
	mov		r0, #0xfe
	and		r0, r7
	add		r1, r6, #0x0
	add		r1, #0xc6
	strb	r0, [r1, #0x0]
	ldrb	r2, [r1, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0xf
	mov		r3, #0x0
	bl		sub_0804d2f4
	b		_08049674

_08049658:	.4byte 0x0200D568

_0804965c:
	add		r0, r6, #0x0
	add		r0, #0xc6
	strb	r7, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x8
	lsl		r2, r0, #0x1
	add		r2, r2, r0
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804d2f4
_08049674:
	add		r1, r6, #0x0
	add		r1, #0xac
	mov		r2, r9
	str		r2, [r1, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xb0
	ldr		r0, [sp, #0x0+0x20]
	str		r0, [r3, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xb4
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	sub		r1, #0x44
	strh	r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r1, r6, #0x0
	add		r1, #0x6a
	strh	r0, [r1, #0x0]
	cmp		r7, #0x7
	bhi		_080496bc
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	mov		r2, r10
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x10
	sub		r0, r0, r1
	lsl		r0, r0, #0x4
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	sub		r1, r1, r0
	b		_080496c2
_080496bc:
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	add		r1, r0, #0x0
_080496c2:
	add		r0, r6, #0x0
	add		r0, #0xc4
	strh	r1, [r0, #0x0]
	sub		r0, #0x54
	strh	r1, [r0, #0x0]
	mov		r1, #0x0
	cmp		r7, #0x7
	bls		_080496d8
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r1, r2, #0x0
_080496d8:
	add		r0, r6, #0x0
	add		r0, #0xa8
	strh	r1, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xaa
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0x2d
	strb	r0, [r1, #0x0]
	add		r1, #0x4a
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080494fc

	thumb_func_start sub_08049700
sub_08049700:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	mov		r12, r0
	str		r1, [sp, #0x0]
	add		r4, sp, #0x4
	str		r2, [sp, #0x4]
	str		r3, [sp, #0x8]
	mov		r0, #0xff
	mov		r9, r0
	mov		r1, r12
	add		r1, #0xac
	mov		r0, r12
	add		r0, #0xbc
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	ldr		r5, [r1, #0x0]
	add		r0, r0, r5
	mov		r10, r0
	mov		r0, r12
	add		r0, #0xb8
	ldr		r2, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xec
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x8
	ldr		r3, [r1, #0x0]
	add		r0, r3, r0
	add		r6, sp, #0x8
	cmp		r10, r0
	ble		_0804974a
	b		_0804984a
_0804974a:
	mov		r0, sp
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r1, r1, #0x8
	add		r1, r3, r1
	mov		r0, r12
	add		r0, #0xc0
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r0, r0, #0x8
	add		r5, r5, r0
	str		r5, [sp, #0x10]
	cmp		r1, r5
	bgt		_0804984a
	mov		r3, r12
	add		r3, #0xb0
	mov		r4, r12
	add		r4, #0xbe
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	lsl		r1, r1, #0x8
	ldr		r5, [r3, #0x0]
	add		r1, r5, r1
	add		r2, #0xf0
	mov		r7, #0x0
	ldrsh	r0, [r6, r7]
	lsl		r0, r0, #0x8
	ldr		r2, [r2, #0x0]
	add		r0, r2, r0
	mov		r8, r3
	str		r4, [sp, #0xC]
	cmp		r1, r0
	bgt		_0804984a
	mov		r3, sp
	add		r3, #0xa
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	lsl		r1, r1, #0x8
	add		r1, r2, r1
	mov		r2, r12
	add		r2, #0xc2
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	lsl		r0, r0, #0x8
	add		r0, r5, r0
	add		r5, r2, #0x0
	cmp		r1, r0
	bgt		_0804984a
	mov		r1, r12
	add		r1, #0xc8
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x1
	and		r0, r2
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_080497d8
	ldr		r0, _080497d4
	ldr		r0, [r0, #0x0]
	mov		r7, #0x10
	ldrsh	r0, [r0, r7]
	lsl		r0, r0, #0x8
	ldr		r1, [sp, #0x10]
	add		r0, r1, r0
	ldr		r2, [sp, #0x0+0x34]
	str		r0, [r2, #0x0]
	mov		r7, #0x1
	mov		r9, r7
	b		_080497f6

.incbin "base.gba", 0x497D2, 0x2

_080497d4:	.4byte 0x0200D568

_080497d8:
	mov		r0, #0x2
	and		r0, r2
	cmp		r0, #0x0
	beq		_080497f6
	ldr		r0, _08049820
	ldr		r0, [r0, #0x0]
	mov		r1, #0x10
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	mov		r2, r10
	sub		r0, r2, r0
	ldr		r7, [sp, #0x0+0x34]
	str		r0, [r7, #0x0]
	mov		r0, #0x0
	mov		r9, r0
_080497f6:
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08049824
	ldr		r1, [sp, #0xC]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x8
	mov		r3, r8
	ldr		r1, [r3, #0x0]
	add		r1, r1, r0
	mov		r4, #0x0
	ldrsh	r0, [r6, r4]
	lsl		r0, r0, #0x8
	sub		r1, r1, r0
	ldr		r5, [sp, #0x4+0x34]
	str		r1, [r5, #0x0]
	mov		r7, #0x3
	b		_08049846

.incbin "base.gba", 0x4981E, 0x2

_08049820:	.4byte 0x0200D568

_08049824:
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080498e4
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r0, r0, #0x8
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	add		r1, r1, r0
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	lsl		r0, r0, #0x8
	sub		r1, r1, r0
	ldr		r5, [sp, #0x4+0x34]
	str		r1, [r5, #0x0]
	mov		r7, #0x2
_08049846:
	mov		r9, r7
	b		_080498e4
_0804984a:
	mov		r4, r12
	add		r4, #0xc8
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	mov		r3, r12
	add		r3, #0xb8
	ldr		r0, [r3, #0x0]
	add		r0, #0xec
	mov		r2, sp
	mov		r5, #0x4
	ldrsh	r1, [r2, r5]
	lsl		r1, r1, #0x8
	ldr		r5, [r0, #0x0]
	add		r1, r5, r1
	mov		r2, r12
	add		r2, #0xac
	mov		r0, r12
	add		r0, #0xbc
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r0, r0, #0x8
	ldr		r2, [r2, #0x0]
	add		r0, r2, r0
	cmp		r1, r0
	bge		_08049880
	mov		r0, #0x2
	b		_08049894
_08049880:
	mov		r0, r12
	add		r0, #0xc0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	add		r1, r2, r0
	add		r0, r5, r0
	cmp		r1, r0
	bge		_08049896
	mov		r0, #0x1
_08049894:
	strb	r0, [r4, #0x0]
_08049896:
	ldr		r0, [r3, #0x0]
	add		r0, #0xf0
	mov		r2, #0x0
	ldrsh	r1, [r6, r2]
	lsl		r1, r1, #0x8
	ldr		r3, [r0, #0x0]
	add		r1, r3, r1
	mov		r2, r12
	add		r2, #0xb0
	mov		r0, r12
	add		r0, #0xbe
	mov		r5, #0x0
	ldrsh	r0, [r0, r5]
	lsl		r0, r0, #0x8
	ldr		r2, [r2, #0x0]
	add		r0, r2, r0
	cmp		r1, r0
	bge		_080498c0
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x4
	b		_080498e0
_080498c0:
	mov		r0, r12
	add		r0, #0xc2
	mov		r7, #0x0
	ldrsh	r1, [r0, r7]
	lsl		r1, r1, #0x8
	add		r1, r2, r1
	mov		r0, sp
	add		r0, #0xa
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	add		r0, r3, r0
	cmp		r1, r0
	bge		_080498e4
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x8
_080498e0:
	orr		r0, r1
	strb	r0, [r4, #0x0]
_080498e4:
	mov		r0, r9
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x498F6, 0x2
	thumb_func_end sub_08049700

	thumb_func_start sub_080498f8
sub_080498f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r6, r3, #0x18
	lsr		r6, r6, #0x18
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_0804d3ec
	ldr		r0, _080499b8
	mov		r8, r0
	ldr		r0, _080499bc
	str		r0, [r7, #0x4c]
	ldr		r0, _080499c0
	str		r0, [r7, #0xc]
	add		r0, r7, #0x0
	add		r0, #0xf8
	bl		sub_0804d3ec
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, r8
	str		r2, [r0, #0x0]
	add		r3, r7, #0x0
	add		r3, #0xec
	lsl		r4, r4, #0x8
	str		r4, [r3, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xf0
	lsl		r5, r5, #0x8
	str		r5, [r4, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xf4
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	mov		r0, #0xda
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldr		r0, [r3, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xdc
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldr		r0, [r4, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r1, #0xe
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x2
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	sub		r1, #0x1
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r0, #0xea
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x0
	strh	r2, [r1, #0x0]
	ldr		r2, _080499c4
	add		r1, r7, r2
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r1, r7, r2
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r1, r7, r2
	strb	r0, [r1, #0x0]
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080499b8:	.4byte 0x080e1bfc
_080499bc:	.4byte 0x080e1b94
_080499c0:	.4byte 0x080e1bb4
_080499c4:	.4byte 0x000001D9
	thumb_func_end sub_080498f8

	thumb_func_start sub_080499c8
sub_080499c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	cmp		r1, #0xa
	bls		_080499dc
	b		_08049c60
_080499dc:
	lsl		r0, r1, #0x2
	ldr		r1, _080499e8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x499E6, 0x2

_080499e8:	.4byte 0x080499ec
_080499ec:	.4byte 0x08049a18

.incbin "base.gba", 0x499F0, 0x28
	thumb_func_end sub_080499c8


.incbin "base.gba", 0x49A18, 0x1DA

_08049bf2:

.incbin "base.gba", 0x49BF2, 0x8
_08049bfa:

.incbin "base.gba", 0x49BFA, 0x8
_08049c02:

.incbin "base.gba", 0x49C02, 0x8
_08049c0a:

.incbin "base.gba", 0x49C0A, 0x8
_08049c12:

.incbin "base.gba", 0x49C12, 0x8
_08049c1a:

.incbin "base.gba", 0x49C1A, 0x46

_08049c60:

.incbin "base.gba", 0x49C60, 0x10
	thumb_func_start sub_08049c70
sub_08049c70:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r1, _08049c98
	add		r0, r5, r1
	ldrb	r4, [r0, #0x0]
	sub		r1, #0xf
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08049cec
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08049c9c
	cmp		r4, #0x1
	beq		_08049c9c
	mov		r4, #0x0
	b		_08049cd6

_08049c98:	.4byte 0x000001D7

_08049c9c:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08049cb0
	cmp		r4, #0x0
	beq		_08049cb0
	mov		r4, #0x1
	b		_08049cd6
_08049cb0:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08049cc4
	cmp		r4, #0x3
	beq		_08049cc4
	mov		r4, #0x2
	b		_08049cd6
_08049cc4:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08049cd6
	cmp		r4, #0x2
	beq		_08049cd6
	mov		r4, #0x3
_08049cd6:
	ldr		r0, _08049ce8
	add		r1, r5, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, r4
	beq		_08049cec
	strb	r4, [r1, #0x0]
	mov		r0, #0x1
	b		_08049cee

.incbin "base.gba", 0x49CE6, 0x2

_08049ce8:	.4byte 0x000001D7

_08049cec:
	mov		r0, #0x0
_08049cee:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08049c70

	thumb_func_start sub_08049cf4
sub_08049cf4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r2, r1, #0x18
	ldr		r3, _08049d24
	cmp		r2, #0x0
	bne		_08049d1e
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0xe0
	ldrh	r1, [r0, #0x0]
	lsl		r1, r1, #0x8
	mov		r5, #0xe4
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bgt		_08049d28
_08049d1e:
	mov		r7, #0x1
	neg		r7, r7
	b		_08049d2a

_08049d24:	.4byte 0x080d33a8

_08049d28:
	mov		r7, #0x1
_08049d2a:
	cmp		r2, #0x0
	bne		_08049d3c
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0xe0
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x10
	b		_08049d3e
_08049d3c:
	mov		r0, #0x0
_08049d3e:
	add		r6, r0, #0x0
	cmp		r2, #0x1
	bne		_08049d52
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r1, #0xa1
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	b		_08049d6a
_08049d52:
	cmp		r2, #0x2
	bne		_08049d68
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r5, _08049d64
	add		r0, r0, r5
	ldrb	r1, [r0, #0x0]
	b		_08049d6a

.incbin "base.gba", 0x49D62, 0x2

_08049d64:	.4byte 0x00000143

_08049d68:
	mov		r1, #0x1
_08049d6a:
	mov		r0, #0x0
	mov		r8, r0
	ldr		r0, [r3, #0x0]
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf8
	ldrh	r0, [r0, #0x0]
	str		r3, [sp, #0x0]
	bl		sub_080bbcac
	mov		r1, #0xea
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrh	r1, [r2, #0x0]
	add		r1, #0x1
	strh	r1, [r2, #0x0]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r3, [sp, #0x0]
	cmp		r0, r1
	bge		_08049e2e
	mov		r0, #0xe4
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	add		r0, r5, #0x0
	add		r0, #0xf6
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	add		r1, r7, #0x0
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	cmp		r7, #0x0
	bge		_08049db4
	cmp		r0, r6
	blt		_08049dbc
_08049db4:
	cmp		r7, #0x0
	ble		_08049dc8
	cmp		r6, r0
	bge		_08049dc8
_08049dbc:
	mov		r1, #0xe4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	str		r6, [r0, #0x0]
	mov		r5, #0x1
	mov		r8, r5
_08049dc8:
	mov		r0, #0xea
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldr		r0, [r3, #0x0]
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xe2
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	mov		r5, #0xe4
	lsl		r5, r5, #0x1
	add		r1, r4, r5
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	bgt		_08049dee
	mov		r2, #0x1
_08049dee:
	add		r0, r3, #0x0
	add		r0, #0xe4
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	cmp		r0, r1
	bgt		_08049dfc
	add		r2, #0x1
_08049dfc:
	add		r0, r3, #0x0
	add		r0, #0xe6
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	cmp		r0, r1
	bgt		_08049e0a
	add		r2, #0x1
_08049e0a:
	add		r0, r3, #0x0
	add		r0, #0xe8
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	cmp		r0, r1
	bgt		_08049e18
	add		r2, #0x1
_08049e18:
	add		r0, r3, #0x0
	add		r0, #0xea
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	cmp		r0, r1
	bgt		_08049e26
	add		r2, #0x1
_08049e26:
	mov		r1, #0xeb
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
_08049e2e:
	mov		r5, r8
	cmp		r5, #0x0
	bne		_08049e38
	mov		r0, #0x0
	b		_08049e3a
_08049e38:
	mov		r0, #0x1
_08049e3a:
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x49E46, 0xA02
	thumb_func_end sub_08049cf4

	thumb_func_start sub_0804a848
sub_0804a848:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0804a874
	add		r5, r4, r0
	mov		r1, #0xec
	lsl		r1, r1, #0x1
	add		r6, r4, r1
	ldrb	r0, [r5, #0x0]
	ldrb	r2, [r6, #0x0]
	cmp		r0, r2
	bne		_0804a8d8
	mov		r3, sp
	cmp		r0, #0x1
	bhi		_0804a87c
	ldr		r0, _0804a878
	ldr		r1, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	add		r2, r1, #0x0
	add		r2, #0xc
	b		_0804a882

_0804a874:	.4byte 0x000001D7
_0804a878:	.4byte 0x080d33c0

_0804a87c:
	ldr		r1, _0804a8ac
	ldr		r0, [r1, #0x0]
	ldr		r2, [r0, #0x0]
_0804a882:
	ldr		r5, _0804a8ac
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	mov		r2, #0xc
	bl		sub_0808c818
	ldr		r1, _0804a8b0
	add		r0, r4, r1
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x2
	beq		_0804a8a4
	mov		r2, #0xec
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0804a8b4
_0804a8a4:
	mov		r1, sp
	ldr		r0, [r5, #0x0]
	ldr		r2, [r0, #0x0]
	b		_0804a934

_0804a8ac:	.4byte 0x080d33c0
_0804a8b0:	.4byte 0x000001D7

_0804a8b4:
	cmp		r1, #0x1
	bne		_0804a952
	mov		r1, sp
	ldr		r0, [r5, #0x0]
	ldr		r2, [r0, #0x0]
	ldrh	r0, [r2, #0x10]
	neg		r0, r0
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0xc]
	neg		r0, r0
	add		r1, sp, #0x4
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x16]
	neg		r0, r0
	add		r1, sp, #0x8
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x14]
	b		_0804a94c
_0804a8d8:
	add		r0, r4, #0x0
	add		r0, #0xe4
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x1
	bhi		_0804a918
	ldr		r4, _0804a914
	ldr		r1, [r4, #0x0]
	add		r1, #0xc
	mov		r0, sp
	mov		r2, #0xc
	bl		sub_0808c818
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x1
	bne		_0804a952
	mov		r1, sp
	ldr		r2, [r4, #0x0]
	ldrh	r0, [r2, #0x10]
	neg		r0, r0
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0xc]
	neg		r0, r0
	add		r1, sp, #0x4
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x16]
	neg		r0, r0
	add		r1, sp, #0x8
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x14]
	b		_0804a94c

_0804a914:	.4byte 0x0200D568

_0804a918:
	ldr		r4, _0804a968
	ldr		r1, [r4, #0x0]
	mov		r0, sp
	mov		r2, #0xc
	bl		sub_0808c818
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x2
	beq		_0804a930
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x2
	bne		_0804a952
_0804a930:
	mov		r1, sp
	ldr		r2, [r4, #0x0]
_0804a934:
	ldrh	r0, [r2, #0x4]
	neg		r0, r0
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x0]
	neg		r0, r0
	add		r1, sp, #0x4
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0xa]
	neg		r0, r0
	add		r1, sp, #0x8
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x8]
_0804a94c:
	neg		r0, r0
	add		r1, #0x2
	strh	r0, [r1, #0x0]
_0804a952:
	add		r0, r7, #0x0
	mov		r1, sp
	mov		r2, #0xc
	bl		sub_0808c818
	add		r0, r7, #0x0
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4A966, 0x2

_0804a968:	.4byte 0x0200D568
	thumb_func_end sub_0804a848

	thumb_func_start sub_0804a96c
sub_0804a96c:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r0, #0xe4
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	ldr		r0, _0804a9b0
	ldr		r0, [r0, #0x0]
	add		r0, #0xee
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	mov		r3, #0x14
	cmp		r1, r0
	bge		_0804a98a
	mov		r3, #0x28
_0804a98a:
	add		r0, r2, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bgt		_0804a9c2
	ldr		r0, _0804a9b4
	add		r1, r2, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bne		_0804a9b8
	mov		r0, #0x2f
	bl		sub_0808f690
	b		_0804a9c2

.incbin "base.gba", 0x4A9AE, 0x2

_0804a9b0:	.4byte 0x0200D568
_0804a9b4:	.4byte 0x000001DB

_0804a9b8:
	ldrb	r0, [r1, #0x0]
	cmp		r3, r0
	bge		_0804a9c2
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_0804a9c2:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A9C6, 0x2
	thumb_func_end sub_0804a96c

	thumb_func_start sub_0804a9c8
sub_0804a9c8:
	push	{ lr }
	ldr		r3, _0804a9e8
	add		r2, r0, r3
	strb	r1, [r2, #0x0]
	ldr		r1, _0804a9ec
	add		r2, r0, r1
	mov		r1, #0x9
	strb	r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x9
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A9E6, 0x2

_0804a9e8:	.4byte 0x000001D7
_0804a9ec:	.4byte 0x000001D9
	thumb_func_end sub_0804a9c8

	thumb_func_start sub_0804a9f0
sub_0804a9f0:
	push	{ lr }
	add		r2, r0, #0x0
	cmp		r1, #0x0
	beq		_0804aa04
	ldr		r0, _0804aa00
	add		r1, r2, r0
	mov		r0, #0xa
	b		_0804aa0a

_0804aa00:	.4byte 0x000001D9

_0804aa04:
	ldr		r0, _0804aa1c
	add		r1, r2, r0
	mov		r0, #0x8
_0804aa0a:
	strb	r0, [r1, #0x0]
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x8
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0804aa1c:	.4byte 0x000001D9
	thumb_func_end sub_0804a9f0

	thumb_func_start sub_0804aa20
sub_0804aa20:
	push	{ lr }
	ldr		r1, _0804aa38
	add		r2, r0, r1
	mov		r1, #0x6
	strb	r1, [r2, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x6
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

_0804aa38:	.4byte 0x000001D9
	thumb_func_end sub_0804aa20

	thumb_func_start sub_0804aa3c
sub_0804aa3c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0xe4
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldr		r0, _0804aa74
	ldr		r0, [r0, #0x0]
	add		r0, #0xee
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	bge		_0804aa7c
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r2, #0xd8
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r1, [r1, #0x0]
	ldr		r3, _0804aa78
	add		r2, r4, r3
	ldrb	r2, [r2, #0x0]
	mov		r3, #0x2
	bl		sub_0804d2f4
	b		_0804aa96

.incbin "base.gba", 0x4AA72, 0x2

_0804aa74:	.4byte 0x0200D568
_0804aa78:	.4byte 0x000001D7

_0804aa7c:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r2, #0xd8
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	ldr		r3, _0804aab4
	add		r2, r4, r3
	ldrb	r2, [r2, #0x0]
	mov		r3, #0x2
	bl		sub_0804d2f4
_0804aa96:
	cmp		r5, #0x0
	beq		_0804aaae
	ldr		r0, _0804aab8
	add		r1, r4, r0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
_0804aaae:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0804aab4:	.4byte 0x000001D7
_0804aab8:	.4byte 0x000001D9
	thumb_func_end sub_0804aa3c

	thumb_func_start sub_0804aabc
sub_0804aabc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0804ab14
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_08049468
	mov		r2, #0xd2
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	add		r0, r4, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xd4
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	add		r0, r4, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r2, #0x8
	add		r1, r4, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xf8
	bl		sub_08049468
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
_0804ab14:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4AB1A, 0x6E
	thumb_func_end sub_0804aabc

	thumb_func_start sub_0804ab88
sub_0804ab88:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r0, #0xc7
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0804abc6
	add		r0, r4, #0x0
	add		r0, #0xa4
	ldrh	r1, [r0, #0x0]
	add		r1, #0x1
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_0804d394
	add		r0, r4, #0x0
	add		r0, #0xc6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x7
	bhi		_0804abbe
	mov		r1, #0x1
	and		r5, r1
	cmp		r5, #0x0
	beq		_0804abbe
	add		r0, r4, #0x0
	add		r0, #0x7b
	strb	r1, [r0, #0x0]
_0804abbe:
	add		r1, r4, #0x0
	add		r1, #0xc7
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
_0804abc6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0804ab88

	thumb_func_start sub_0804abcc
sub_0804abcc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0xc6
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x7
	bls		_0804abfa
	add		r0, r4, #0x0
	add		r0, #0x94
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804abfa
	ldrb	r0, [r2, #0x0]
	sub		r0, #0x8
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	add		r1, #0x2
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_0804d394
_0804abfa:
	add		r0, r4, #0x0
	bl		sub_08049468
	add		r0, r4, #0x0
	add		r0, #0xc4
	ldrh	r1, [r0, #0x0]
	sub		r0, #0x54
	strh	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0804abcc

	thumb_func_start sub_0804ac10
sub_0804ac10:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, #0xc6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bls		_0804ac4c
	add		r0, r2, #0x0
	add		r0, #0x68
	ldrh	r0, [r0, #0x0]
	add		r0, #0x2f
	lsl		r0, r0, #0x10
	mov		r1, #0xa7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_0804ac7a
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r0, #0x18
	neg		r0, r0
	cmp		r1, r0
	ble		_0804ac7a
	cmp		r1, #0xcf
	bgt		_0804ac7a
	add		r0, r2, #0x0
	add		r0, #0x14
	bl		sub_0808e4a0
	b		_0804ac7a
_0804ac4c:
	add		r0, r2, #0x0
	add		r0, #0x68
	ldrh	r0, [r0, #0x0]
	add		r0, #0x2f
	lsl		r0, r0, #0x10
	mov		r1, #0xa7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_0804ac7a
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r0, #0x18
	neg		r0, r0
	cmp		r1, r0
	ble		_0804ac7a
	cmp		r1, #0xcf
	bgt		_0804ac7a
	add		r0, r2, #0x0
	add		r0, #0x14
	bl		sub_0808e4a0
_0804ac7a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4AC7E, 0x36
	thumb_func_end sub_0804ac10

	thumb_func_start sub_0804acb4
sub_0804acb4:
	push	{ r4, r5, r6, r7, lr }
	ldr		r6, _0804ad3c
	ldr		r5, [r6, #0x0]
	mov		r4, #0x91
	lsl		r4, r4, #0x1
	add		r4, r4, r0
	mov		r12, r4
	ldrb	r4, [r4, #0x0]
	lsl		r4, r4, #0x2
	add		r0, r5, #0x0
	add		r0, #0x78
	add		r0, r0, r4
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	add		r5, #0xdc
	mov		r7, #0x0
	ldrsh	r4, [r5, r7]
	add		r0, r0, r4
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	ldr		r4, [r6, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r4, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r4, #0xd8
	mov		r5, #0x0
	ldrsh	r1, [r4, r5]
	add		r0, r0, r1
	lsl		r0, r0, #0x8
	str		r0, [r2, #0x0]
	ldr		r2, [r6, #0x0]
	mov		r7, r12
	ldrb	r1, [r7, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r2, #0xde
	mov		r4, #0x0
	ldrsh	r1, [r2, r4]
	add		r0, r0, r1
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	ldr		r2, [r6, #0x0]
	ldrb	r1, [r7, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x7a
	add		r0, r0, r1
	mov		r5, #0x0
	ldrsh	r0, [r0, r5]
	add		r2, #0xda
	mov		r7, #0x0
	ldrsh	r1, [r2, r7]
	add		r0, r0, r1
	lsl		r0, r0, #0x8
	ldr		r1, [sp, #0x0+0x14]
	str		r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804ad3c:	.4byte 0x0200D568
	thumb_func_end sub_0804acb4

	thumb_func_start sub_0804ad40
sub_0804ad40:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r3, #0x54
	add		r4, r0, #0x0
	add		r4, #0xbc
	ldr		r2, _0804ad84
	add		r1, r0, r2
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r2, _0804ad88
	ldr		r0, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xe
	orr		r0, r1
	str		r0, [r2, #0x0]
	mov		r2, #0x0
	mov		r1, #0x19
_0804ad62:
	ldmia	r3!, { r0 }
	add		r0, #0xab
	strb	r2, [r0, #0x0]
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0804ad62
	mov		r2, #0x0
	mov		r1, #0x8
_0804ad72:
	ldr		r0, [r4, #0x0]
	add		r0, #0xab
	strb	r2, [r0, #0x0]
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0804ad72
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0804ad84:	.4byte 0x0000011F
_0804ad88:	.4byte 0x0200DD2C
	thumb_func_end sub_0804ad40

	thumb_func_start sub_0804ad8c
sub_0804ad8c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r3, #0x54
	add		r4, r0, #0x0
	add		r4, #0xbc
	ldr		r2, _0804add0
	add		r1, r0, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r2, _0804add4
	ldr		r0, [r2, #0x0]
	ldr		r1, _0804add8
	and		r0, r1
	str		r0, [r2, #0x0]
	mov		r2, #0x1
	mov		r1, #0x19
_0804adac:
	ldmia	r3!, { r0 }
	add		r0, #0xab
	strb	r2, [r0, #0x0]
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0804adac
	mov		r2, #0x1
	mov		r1, #0x8
_0804adbc:
	ldr		r0, [r4, #0x0]
	add		r0, #0xab
	strb	r2, [r0, #0x0]
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0804adbc
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4ADCE, 0x2

_0804add0:	.4byte 0x0000011F
_0804add4:	.4byte 0x0200DD2C
_0804add8:	.4byte 0xffdfffff

.incbin "base.gba", 0x4ADDC, 0xF0
	thumb_func_end sub_0804ad8c

	thumb_func_start sub_0804aecc
sub_0804aecc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r7, r0, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0804af40
	str		r0, [r7, #0x4c]
	ldr		r0, _0804af44
	str		r0, [r7, #0xc]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x90
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	mov		r2, #0x0
	mov		r0, #0x54
	add		r0, r0, r7
	mov		r8, r0
_0804af04:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0804af04
	ldr		r4, _0804af48
	ldr		r1, _0804af4c
	add		r0, r4, r1
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0804c1f8
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	cmp		r5, #0x0
	beq		_0804af50
	add		r0, r5, #0x0
	add		r0, #0x40
	str		r0, [r7, #0x54]
	b		_0804af52

_0804af40:	.4byte 0x080e1ca4
_0804af44:	.4byte 0x080e1cbc
_0804af48:	.4byte 0x0200DBA0
_0804af4c:	.4byte 0xFFFFFE60

_0804af50:
	str		r5, [r7, #0x54]
_0804af52:
	mov		r0, #0xac
	bl		sub_0808af94
	bl		sub_0804d3ec
	str		r0, [r7, #0x58]
	mov		r1, #0x14
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	ldr		r0, [r7, #0x58]
	add		r0, #0x68
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r0, #0x6a
	mov		r1, #0x78
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r1, r0, #0x0
	add		r1, #0xa8
	mov		r6, #0x14
	strh	r6, [r1, #0x0]
	add		r0, #0x70
	strh	r6, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	add		r1, r0, #0x0
	add		r1, #0xaa
	mov		r5, #0x1
	strb	r5, [r1, #0x0]
	add		r0, #0x7d
	strb	r5, [r0, #0x0]
	mov		r0, #0xac
	bl		sub_0808af94
	bl		sub_0804d3ec
	str		r0, [r7, #0x5c]
	mov		r1, #0x19
	mov		r2, #0x3
	mov		r3, #0x2
	bl		sub_0804d2f4
	ldr		r0, [r7, #0x5c]
	add		r0, #0x68
	mov		r4, #0x50
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x5c]
	add		r0, #0x6a
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x5c]
	add		r1, r0, #0x0
	add		r1, #0xa8
	strh	r6, [r1, #0x0]
	add		r0, #0x70
	strh	r6, [r0, #0x0]
	ldr		r0, [r7, #0x5c]
	add		r1, r0, #0x0
	add		r1, #0xaa
	strb	r5, [r1, #0x0]
	add		r0, #0x7d
	strb	r5, [r0, #0x0]
	mov		r0, #0xac
	bl		sub_0808af94
	bl		sub_0804d3ec
	str		r0, [r7, #0x60]
	mov		r1, #0x15
	mov		r2, #0x5
	mov		r3, #0x2
	bl		sub_0804d2f4
	ldr		r0, [r7, #0x60]
	add		r0, #0x68
	strh	r4, [r0, #0x0]
	ldr		r0, [r7, #0x60]
	add		r0, #0x6a
	mov		r1, #0x66
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x60]
	add		r1, r0, #0x0
	add		r1, #0xa8
	strh	r6, [r1, #0x0]
	add		r0, #0x70
	strh	r6, [r0, #0x0]
	ldr		r0, [r7, #0x60]
	add		r1, r0, #0x0
	add		r1, #0xaa
	strb	r5, [r1, #0x0]
	add		r0, #0x7d
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x98
	mov		r0, #0xa0
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	mov		r6, #0x0
	mov		r2, #0xdc
	add		r2, r2, r7
	mov		r9, r2
	add		r3, r7, #0x0
	add		r3, #0xe5
	str		r3, [sp, #0x2C]
	add		r0, r7, #0x0
	add		r0, #0xe6
	str		r0, [sp, #0x30]
	add		r1, #0x4f
	str		r1, [sp, #0x34]
	add		r2, r7, #0x0
	add		r2, #0xe9
	str		r2, [sp, #0x38]
	add		r3, #0x5
	str		r3, [sp, #0x4]
	add		r0, #0x5
	str		r0, [sp, #0x8]
	add		r1, #0x5
	str		r1, [sp, #0xC]
	sub		r2, #0x65
	str		r2, [sp, #0x10]
	sub		r3, #0x62
	str		r3, [sp, #0x14]
	sub		r0, #0x5f
	str		r0, [sp, #0x18]
	sub		r1, #0x5f
	str		r1, [sp, #0x1C]
	add		r2, #0xa
	str		r2, [sp, #0x20]
	add		r3, #0x56
	str		r3, [sp, #0x24]
	add		r0, #0x58
	str		r0, [sp, #0x28]
	mov		r1, #0x2
	mov		r10, r1
	mov		r5, r8
	add		r5, #0x10
	mov		r2, #0x9c
	add		r2, r2, r7
	mov		r8, r2
_0804b06a:
	add		r0, r6, #0x0
	mov		r3, #0x7
	eor		r0, r3
	neg		r4, r0
	orr		r4, r0
	asr		r4, r4, #0x1f
	mov		r0, #0x8
	and		r4, r0
	ldr		r1, _0804b154
	ldr		r0, [r1, #0x0]
	lsl		r1, r6, #0x1
	add		r0, #0xc0
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	mov		r2, r8
	str		r0, [r2, #0x0]
	mov		r0, #0xac
	bl		sub_0808af94
	bl		sub_0804d3ec
	str		r0, [r5, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x1e
	add		r2, r4, #0x0
	mov		r3, #0x2
	bl		sub_0804d2f4
	ldr		r2, [r5, #0x0]
	ldr		r3, _0804b158
	ldr		r1, [r3, #0x0]
	asr		r1, r1, #0x8
	mov		r3, r8
	add		r3, #0x4
	mov		r8, r3
	sub		r3, #0x4
	ldmia	r3!, { r0 }
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r2, #0x68
	strh	r0, [r2, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x6a
	mov		r1, #0x78
	strh	r1, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xa8
	mov		r2, #0x1e
	strh	r2, [r0, #0x0]
	add		r1, #0x70
	strh	r2, [r1, #0x0]
	ldmia	r5!, { r0 }
	add		r1, r0, #0x0
	add		r1, #0xaa
	mov		r3, r10
	strb	r3, [r1, #0x0]
	add		r0, #0x7d
	strb	r3, [r0, #0x0]
	add		r6, #0x1
	cmp		r6, #0x7
	ble		_0804b06a
	ldr		r1, _0804b15c
	mov		r2, r9
	ldrh	r0, [r2, #0x0]
	mov		r2, #0x0
	ldr		r0, _0804b160
	mov		r3, r9
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldr		r3, _0804b164
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x3f
	strh	r0, [r1, #0x0]
	ldr		r0, [sp, #0x2C]
	strb	r2, [r0, #0x0]
	ldr		r1, [sp, #0x30]
	strb	r2, [r1, #0x0]
	ldr		r3, [sp, #0x34]
	strb	r2, [r3, #0x0]
	ldr		r0, [sp, #0x38]
	strb	r2, [r0, #0x0]
	ldr		r1, [sp, #0x4]
	strb	r2, [r1, #0x0]
	ldr		r3, [sp, #0x8]
	strb	r2, [r3, #0x0]
	mov		r0, #0xff
	ldr		r1, [sp, #0xC]
	strb	r0, [r1, #0x0]
	add		r0, #0x41
	bl		sub_0808afb8
	ldr		r2, [sp, #0x10]
	str		r0, [r2, #0x0]
	ldr		r3, [sp, #0x14]
	str		r0, [r3, #0x0]
	mov		r4, #0x0
	mov		r0, #0x50
	mov		r8, r0
	mov		r6, #0xa2
	lsl		r6, r6, #0x5
	mov		r5, #0xa0
_0804b146:
	lsl		r0, r4, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x50
	bhi		_0804b168
	mov		r1, r8
	sub		r0, r1, r0
	b		_0804b16a

_0804b154:	.4byte 0x0200D568
_0804b158:	.4byte 0x0200CE2C
_0804b15c:	.4byte 0x04000042
_0804b160:	.4byte 0x000050F0
_0804b164:	.4byte 0x00003B2B

_0804b168:
	sub		r0, #0x50
_0804b16a:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r1, #0x0
	cmp		r0, #0x48
	bhi		_0804b186
	add		r2, r0, #0x0
	mul		r2, r0
	add		r0, r2, #0x0
	sub		r0, r6, r0
	mov		r1, #0x4
	mov		r2, sp
	bl		sub_0808c5c0
	add		r1, r0, #0x0
_0804b186:
	mov		r2, #0x0
	cmp		r4, #0x70
	bgt		_0804b19c
	cmp		r1, #0x9f
	bgt		_0804b19c
	sub		r0, r5, r1
	lsl		r0, r0, #0x8
	add		r1, #0xa0
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_0804b19c:
	ldr		r3, [sp, #0x10]
	ldr		r1, [r3, #0x0]
	lsl		r0, r4, #0x1
	add		r0, r0, r1
	strh	r2, [r0, #0x0]
	add		r4, #0x1
	cmp		r4, #0x9f
	ble		_0804b146
	ldr		r1, [sp, #0x14]
	ldr		r0, [r1, #0x0]
	str		r0, [r3, #0x0]
	ldr		r1, _0804b200
	ldr		r3, _0804b204
	mov		r2, #0x2
	bl		sub_08000a2c
	ldr		r1, _0804b208
	mov		r0, #0x70
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldr		r2, [sp, #0x18]
	strb	r1, [r2, #0x0]
	mov		r0, #0x28
	ldr		r3, [sp, #0x1C]
	strb	r0, [r3, #0x0]
	ldr		r0, [sp, #0x20]
	strb	r1, [r0, #0x0]
	ldr		r1, [sp, #0x24]
	mov		r2, #0x0
	add		r0, r1, #0x5
_0804b1d8:
	strb	r2, [r0, #0x0]
	sub		r0, #0x1
	cmp		r0, r1
	bge		_0804b1d8
	mov		r0, #0x0
	ldr		r1, [sp, #0x28]
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_0804bfc0
	add		r0, r7, #0x0
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4B1FE, 0x2

_0804b200:	.4byte 0x04000040
_0804b204:	.4byte 0xA2600003
_0804b208:	.4byte 0x04000044
	thumb_func_end sub_0804aecc

	thumb_func_start sub_0804b20c
sub_0804b20c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xf0
	add		r6, r0, #0x0
	cmp		r1, #0x6
	bls		_0804b222
	bl		sub_0804bcc4
_0804b222:
	lsl		r0, r1, #0x2
	ldr		r1, _0804b22c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0804b22c:	.4byte 0x0804b230
_0804b230:	.4byte 0x0804b24c

.incbin "base.gba", 0x4B234, 0x18
	thumb_func_end sub_0804b20c


.incbin "base.gba", 0x4B24C, 0xA78
	thumb_func_start sub_0804bcc4
sub_0804bcc4:
	add		sp, #0xf0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4BCD4, 0x2EC
	thumb_func_end sub_0804bcc4

	thumb_func_start sub_0804bfc0
sub_0804bfc0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	ldr		r0, _0804bfe8
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804bfec
	mov		r0, #0xaa
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804bfe4
	mov		r0, #0x1
_0804bfe4:
	add		r3, r0, #0x0
	b		_0804bfee

_0804bfe8:	.4byte 0x000002A9

_0804bfec:
	mov		r3, #0x2
_0804bfee:
	mov		r0, #0xd4
	add		r0, r0, r7
	mov		r9, r0
	mov		r2, #0x0
	mov		r0, #0x7
	mov		r1, r9
	strb	r0, [r1, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xd5
	mov		r0, #0xc
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xd7
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	strb	r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xd9
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xdb
	strb	r2, [r0, #0x0]
	ldr		r0, _0804c0dc
	ldr		r1, [r0, #0x0]
	lsl		r2, r3, #0x1
	add		r2, r2, r3
	add		r0, r1, #0x0
	add		r0, #0xe4
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	mov		r3, #0xcc
	add		r3, r3, r7
	mov		r8, r3
	strh	r0, [r3, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xe5
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	add		r3, r7, #0x0
	add		r3, #0xce
	strh	r0, [r3, #0x0]
	add		r1, #0xe6
	add		r1, r1, r2
	ldrb	r1, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xd0
	strh	r1, [r0, #0x0]
	add		r0, #0x14
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r1, r7, #0x0
	add		r1, #0xd2
	strh	r0, [r1, #0x0]
	ldr		r0, _0804c0e0
	bl		sub_0800f354
	add		r6, r0, #0x0
	ldr		r0, _0804c0e4
	bl		sub_0800f354
	add		r5, r0, #0x0
	ldr		r0, _0804c0e8
	bl		sub_0800f354
	add		r4, r0, #0x0
	ldr		r0, _0804c0ec
	bl		sub_0800f354
	add		r1, r7, #0x0
	add		r1, #0xbc
	str		r5, [r1, #0x0]
	add		r1, #0x4
	str		r4, [r1, #0x0]
	add		r1, #0x4
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc8
	str		r6, [r0, #0x0]
	mov		r5, #0x0
	mov		r7, r9
	ldr		r6, _0804c0f0
	mov		r9, r5
	mov		r4, r8
_0804c0a6:
	add		r0, r7, r5
	ldrb	r2, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r3, [r4, r0]
	mov		r1, r9
	str		r1, [sp, #0x0]
	ldr		r0, [r6, #0x0]
	add		r1, r5, #0x0
	bl		sub_08006368
	add		r4, #0x2
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0804c0a6
	ldr		r0, [r6, #0x0]
	ldr		r1, _0804c0f4
	ldr		r2, _0804c0f8
	bl		sub_08006068
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4C0DA, 0x2

_0804c0dc:	.4byte 0x0200D568
_0804c0e0:	.4byte 0x080d33d4 @ ms_ta_0043
_0804c0e4:	.4byte 0x080d33e0 @ ms_ta_0049
_0804c0e8:	.4byte 0x080d33ec @ ms_ta_0054
_0804c0ec:	.4byte 0x080d33f8 @ ms_ta_0058
_0804c0f0:	.4byte 0x080d340c
_0804c0f4:	.4byte 0x80808080
_0804c0f8:	.4byte 0x080d3404
	thumb_func_end sub_0804bfc0

	thumb_func_start sub_0804c0fc
sub_0804c0fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	mov		r0, #0xff
	mov		r10, r0
	add		r0, r6, #0x0
	add		r0, #0xe4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r1, r6, #0x0
	add		r1, #0xd2
	strh	r0, [r1, #0x0]
	mov		r2, r8
	cmp		r2, #0x1
	bne		_0804c192
	mov		r3, #0x2
	mov		r9, r3
	add		r2, r6, #0x0
	add		r2, #0xd0
	add		r5, r6, #0x0
	add		r5, #0xc4
	add		r4, r6, #0x0
	add		r4, #0xd6
	mov		r7, #0xda
	add		r7, r7, r6
	mov		r12, r7
_0804c140:
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldrh	r3, [r2, #0x2]
	mov		r7, #0x2
	ldrsh	r0, [r2, r7]
	cmp		r1, r0
	bgt		_0804c192
	strh	r3, [r2, #0x0]
	strh	r1, [r2, #0x2]
	mov		r3, r12
	ldrb	r1, [r3, #0x0]
	ldrb	r0, [r3, #0x1]
	strb	r0, [r3, #0x0]
	strb	r1, [r3, #0x1]
	ldrb	r1, [r4, #0x0]
	ldrb	r0, [r4, #0x1]
	strb	r0, [r4, #0x0]
	strb	r1, [r4, #0x1]
	ldr		r1, [r5, #0x0]
	ldr		r0, [r5, #0x4]
	str		r0, [r5, #0x0]
	str		r1, [r5, #0x4]
	mov		r7, #0x0
	ldrsh	r1, [r2, r7]
	ldrh	r3, [r2, #0x2]
	mov		r7, #0x2
	ldrsh	r0, [r2, r7]
	cmp		r1, r0
	bne		_0804c17e
	sub		r0, r3, #0x1
	strh	r0, [r2, #0x2]
_0804c17e:
	sub		r2, #0x2
	sub		r5, #0x4
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	add		r12, r0
	add		r9, r0
	mov		r3, r9
	cmp		r3, #0x0
	bge		_0804c140
_0804c192:
	mov		r4, #0x0
	add		r7, r6, #0x0
	add		r7, #0xd4
	mov		r9, r4
	add		r5, r6, #0x0
	add		r5, #0xcc
_0804c19e:
	add		r1, r7, r4
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_0804c1ac
	lsl		r0, r4, #0x18
	lsr		r0, r0, #0x18
	mov		r10, r0
_0804c1ac:
	mov		r0, r8
	cmp		r0, #0x1
	bne		_0804c1c4
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r3, [r5, r0]
	mov		r0, r9
	str		r0, [sp, #0x0]
	ldr		r0, _0804c1f0
	add		r1, r4, #0x0
	bl		sub_08006368
_0804c1c4:
	add		r5, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0804c19e
	mov		r2, r8
	cmp		r2, #0x1
	bne		_0804c1e0
	ldr		r0, _0804c1f0
	mov		r3, r10
	lsl		r1, r3, #0x18
	asr		r1, r1, #0x18
	ldr		r2, _0804c1f4
	bl		sub_08006068
_0804c1e0:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804c1f0:	.4byte 0x02000E0C
_0804c1f4:	.4byte 0x080d3410
	thumb_func_end sub_0804c0fc

	thumb_func_start sub_0804c1f8
sub_0804c1f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080b74f4
	mov		r0, #0x40
	add		r0, r0, r7
	mov		r8, r0
	bl		sub_0804d3ec
	ldr		r0, _0804c300
	str		r0, [r7, #0x4c]
	ldr		r0, _0804c304
	str		r0, [r7, #0xc]
	add		r6, r7, #0x0
	add		r6, #0xf0
	lsl		r4, r4, #0x8
	str		r4, [r6, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xf4
	lsl		r5, r5, #0x8
	str		r5, [r4, #0x0]
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	mov		r0, #0x8a
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	str		r0, [r1, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	sub		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xec
	mov		r0, #0x19
	str		r0, [r1, #0x0]
	mov		r0, r8
	mov		r1, #0x19
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804d2f4
	ldr		r0, [r6, #0x0]
	asr		r0, r0, #0x8
	add		r0, #0xa0
	add		r1, r7, #0x0
	add		r1, #0xa8
	mov		r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	asr		r0, r0, #0x8
	add		r0, #0x50
	add		r1, #0x2
	strh	r0, [r1, #0x0]
	add		r1, #0x6
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	add		r1, #0xd
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4C2FE, 0x2

_0804c300:	.4byte 0x080e1c5c
_0804c304:	.4byte 0x080e1c7c
	thumb_func_end sub_0804c1f8

	thumb_func_start sub_0804c308
sub_0804c308:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r10, r0
	cmp		r1, #0x4
	bls		_0804c31c
	b		_0804c520
_0804c31c:
	lsl		r0, r1, #0x2
	ldr		r1, _0804c328
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x4C326, 0x2

_0804c328:	.4byte 0x0804c32c
_0804c32c:	.4byte 0x0804c340

.incbin "base.gba", 0x4C330, 0x10
	thumb_func_end sub_0804c308


.incbin "base.gba", 0x4C340, 0x170

_0804c4b0:

.incbin "base.gba", 0x4C4B0, 0x70

_0804c520:

.incbin "base.gba", 0x4C520, 0x10
	thumb_func_start sub_0804c530
sub_0804c530:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r2, #0x0
	add		r4, #0x40
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	add		r0, #0xa0
	add		r1, r2, #0x0
	add		r1, #0xa8
	strh	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	add		r0, #0x50
	add		r1, #0x2
	strh	r0, [r1, #0x0]
	add		r1, #0x6
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	add		r1, #0xd
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xeb
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0804c572
	add		r0, r2, #0x0
	add		r0, #0xc4
	bl		sub_0808b3d4
_0804c572:
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4C582, 0x95E
	thumb_func_end sub_0804c530

	thumb_func_start sub_0804cee0
sub_0804cee0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r10, r1
	ldr		r0, _0804cf68
	str		r0, [r6, #0x4c]
	ldr		r0, _0804cf6c
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x84
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0804cf04
	bl		sub_0808afd0
_0804cf04:
	mov		r7, #0xb
	mov		r0, #0x40
	add		r0, r0, r6
	mov		r8, r0
	ldr		r1, _0804cf70
	mov		r9, r1
	add		r5, r6, #0x0
	add		r5, #0x80
_0804cf14:
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_0804cf30
	mov		r0, r9
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080006b4
_0804cf30:
	sub		r5, #0x4
	sub		r7, #0x1
	cmp		r7, #0x0
	bgt		_0804cf14
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804cf58
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0804cf58:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4CF66, 0x2

_0804cf68:	.4byte 0x080e1ca4
_0804cf6c:	.4byte 0x080e1cbc
_0804cf70:	.4byte 0x080e1b74

.incbin "base.gba", 0x4CF74, 0x380
	thumb_func_end sub_0804cee0

	thumb_func_start sub_0804d2f4
sub_0804d2f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, r0, #0x0
	mov		r10, r1
	str		r2, [sp, #0x0]
	str		r3, [sp, #0x4]
	add		r0, #0xa6
	str		r0, [sp, #0x8]
	ldrh	r0, [r0, #0x0]
	cmp		r0, r10
	beq		_0804d36e
	add		r6, r7, #0x0
	add		r6, #0x68
	mov		r2, #0x0
	ldrsh	r1, [r6, r2]
	str		r1, [sp, #0xC]
	mov		r0, #0x6a
	add		r0, r0, r7
	mov		r9, r0
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	str		r1, [sp, #0x10]
	add		r5, r7, #0x0
	add		r5, #0x70
	ldrh	r0, [r5, #0x0]
	mov		r8, r0
	add		r4, r7, #0x0
	add		r4, #0x14
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, r10
	bl		sub_0808e03c
	mov		r1, sp
	ldrh		r1, [r1, #0xC]
	strh	r1, [r6, #0x0]
	mov		r2, sp
	ldrh		r0, [r2, #0x10]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r1, r8
	strh	r1, [r5, #0x0]
	mov		r0, r10
	ldr		r2, [sp, #0x8]
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	ldr		r1, [sp, #0x0]
	ldr		r2, [sp, #0x4]
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r1, sp
	ldrh	r1, [r1, #0x0]
	strh	r1, [r0, #0x0]
_0804d36e:
	add		r0, r7, #0x0
	add		r0, #0x14
	ldr		r1, [sp, #0x0]
	ldr		r2, [sp, #0x4]
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r2, sp
	ldrh	r2, [r2, #0x0]
	strh	r2, [r0, #0x0]
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0804d2f4

	thumb_func_start sub_0804d394
sub_0804d394:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	add		r5, r0, #0x0
	add		r5, #0xa4
	ldrh	r1, [r5, #0x0]
	cmp		r4, r1
	beq		_0804d3ac
	add		r0, #0x14
	add		r1, r4, #0x0
	bl		sub_0808e3c0
	strh	r4, [r5, #0x0]
_0804d3ac:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4D3B2, 0x2
	thumb_func_end sub_0804d394

	thumb_func_start sub_0804d3b4
sub_0804d3b4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0xa8
	ldrh	r1, [r0, #0x0]
	sub		r0, #0x38
	strh	r1, [r0, #0x0]
	add		r0, #0x3a
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x7d
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xab
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0804d3dc
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b3d4
_0804d3dc:
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0804d3b4

	thumb_func_start sub_0804d3ec
sub_0804d3ec:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _0804d42c
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b374
	add		r0, r4, #0x0
	add		r0, #0x80
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, #0x2b
	strb	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xa6
	ldr		r0, _0804d430
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	mov		r0, #0x1
	neg		r0, r0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0804d42c:	.4byte 0x080e1b74
_0804d430:	.4byte 0x0000FFFF
	thumb_func_end sub_0804d3ec

	thumb_func_start sub_0804d434
sub_0804d434:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0804d504
	str		r0, [r7, #0x4c]
	ldr		r0, _0804d508
	str		r0, [r7, #0xc]
	add		r5, r7, #0x0
	add		r5, #0x54
	add		r0, r5, #0x0
	bl		sub_0804d3ec
	ldr		r0, _0804d50c
	ldr		r1, [r0, #0x4]
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	ldr		r0, _0804d510
	ldr		r1, [r0, #0x4]
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x8]
	str		r1, [sp, #0xc]
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	ldr		r0, _0804d514
	add		r0, r0, r7
	mov		r9, r0
	strb	r6, [r0, #0x0]
	sub		r1, #0x4
	add		r0, r7, r1
	mov		r1, r8
	str		r1, [r0, #0x0]
	mov		r0, r9
	ldrb	r2, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x64
	mov		r3, #0x2
	bl		sub_0804d2f4
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r3, r7, r1
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r0, sp
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x0]
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r1, sp, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	add		r1, r7, #0x0
	add		r1, #0xbc
	mov		r3, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x8
	add		r1, #0x2
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xfc
	strh	r4, [r0, #0x0]
	sub		r0, #0x38
	strh	r4, [r0, #0x0]
	add		r0, #0x3a
	strb	r3, [r0, #0x0]
	sub		r0, #0x2d
	strb	r3, [r0, #0x0]
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x10
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0804d504:	.4byte 0x080e034c
_0804d508:	.4byte 0x080e1d4c
_0804d50c:	.4byte 0x080d341c
_0804d510:	.4byte 0x080d3424
_0804d514:	.4byte 0x00000111
	thumb_func_end sub_0804d434

	thumb_func_start sub_0804d518
sub_0804d518:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, _0804d564
	mov		r10, r0
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	add		r6, r5, #0x0
	add		r6, #0xbe
	mov		r1, #0xa0
	lsl		r1, r1, #0x7
	mov		r9, r1
	mov		r8, r6
_0804d540:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r7, #0x0]
	sub		r0, r0, r1
	str		r0, [r4, #0x0]
	asr		r0, r0, #0x8
	strh	r0, [r6, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r0, r9
	ble		_0804d568
	add		r0, r5, #0x0
	add		r0, #0x54
	bl		sub_0804d3b4
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_0804d540

.incbin "base.gba", 0x4D562, 0x2

_0804d564:	.4byte 0x080d342c

_0804d568:
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0xa0
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	mov		r0, #0x50
	mov		r1, r8
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_0804d70c
	mov		r0, r10
	ldr		r4, [r0, #0x0]
	ldr		r1, _0804d624
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	mov		r2, #0x3f
	mov		r3, #0x8
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r6, r5, #0x0
	add		r6, #0x54
	add		r7, r5, #0x0
	add		r7, #0x68
	mov		r4, #0x7
_0804d5b0:
	add		r0, r6, #0x0
	bl		sub_0804d3b4
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0804d5b0
	ldr		r4, _0804d628
	ldr		r3, _0804d62c
	ldr		r2, _0804d630
	ldr		r1, _0804d634
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_0808e278
	mov		r0, r10
	ldr		r4, [r0, #0x0]
	ldr		r1, _0804d624
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x19
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0x18
_0804d608:
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0804d608
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4D622, 0x2

_0804d624:	.4byte 0xFFFFFEB0
_0804d628:	.4byte 0x0200EB24
_0804d62c:	.4byte 0x0200EB1E
_0804d630:	.4byte 0x0200EB20
_0804d634:	.4byte 0x0200EB22
	thumb_func_end sub_0804d518

	thumb_func_start sub_0804d638
sub_0804d638:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r5, r6, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	mov		r8, r1
	add		r4, r6, r1
	add		r7, r6, #0x0
	add		r7, #0xbc
	mov		r0, #0xf0
	lsl		r0, r0, #0x7
	mov		r10, r0
	mov		r9, r7
_0804d65e:
	ldr		r0, [r5, #0x0]
	add		r0, r8
	str		r0, [r5, #0x0]
	ldr		r1, [r4, #0x0]
	sub		r1, r1, r0
	str		r1, [r4, #0x0]
	asr		r1, r1, #0x8
	strh	r1, [r7, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r0, r10
	ble		_0804d684
	add		r0, r6, #0x0
	add		r0, #0x54
	bl		sub_0804d3b4
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0804d65e
_0804d684:
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r5, r6, r4
	mov		r0, #0xf0
	lsl		r0, r0, #0x7
	str		r0, [r5, #0x0]
	mov		r0, #0x78
	mov		r1, r9
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804d70c
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	str		r0, [r1, #0x0]
	mov		r1, #0x68
	add		r1, r1, r6
	mov		r10, r1
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r7, r6, r0
	mov		r8, r4
	ldr		r4, _0804d6e0
_0804d6b8:
	ldr		r0, [r7, #0x0]
	add		r0, r8
	str		r0, [r7, #0x0]
	ldr		r1, [r5, #0x0]
	sub		r1, r1, r0
	str		r1, [r5, #0x0]
	asr		r1, r1, #0x8
	mov		r0, r9
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	cmp		r0, r4
	ble		_0804d6e4
	add		r0, r6, #0x0
	add		r0, #0x54
	bl		sub_0804d3b4
	add		r0, r6, #0x0
	bl		sub_080b7690
	b		_0804d6b8

_0804d6e0:	.4byte 0xFFFFC800

_0804d6e4:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldr		r0, _0804d708
	str		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r0, r10
	bl		sub_0808e278
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804d708:	.4byte 0xFFFFC800
	thumb_func_end sub_0804d638

	thumb_func_start sub_0804d70c
sub_0804d70c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r5, #0x59
_0804d712:
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_0804d3b4
	add		r0, r4, #0x0
	bl		sub_080b7690
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0804d712
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4D72C, 0xA4
	thumb_func_end sub_0804d70c

	thumb_func_start sub_0804d7d0
sub_0804d7d0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	bl		sub_080b74f4
	ldr		r0, _0804d878
	str		r0, [r6, #0xc]
	ldr		r4, _0804d87c
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0804d7f6
	ldr		r0, _0804d880
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0804d7f6:
	str		r6, [r4, #0x0]
	ldr		r5, _0804d884
	ldr		r4, _0804d888
	ldr		r3, _0804d88c
	ldr		r2, _0804d890
	ldr		r1, _0804d894
	mov		r7, #0x20
	neg		r7, r7
	add		r0, r7, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	strh	r0, [r5, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	mov		r0, r8
	str		r0, [r6, #0x78]
	mov		r0, #0x0
	str		r0, [r6, #0x50]
	add		r0, r6, #0x0
	bl		sub_0804d8a0
	mov		r0, #0xa0
	lsl		r0, r0, #0x3
	bl		sub_0808afb8
	str		r0, [r6, #0x40]
	add		r0, r6, #0x0
	bl		sub_0804db3c
	add		r0, r6, #0x0
	bl		sub_0804dbd4
	add		r0, r6, #0x0
	bl		sub_0804dc70
	add		r0, r6, #0x0
	bl		sub_0804dd0c
	ldr		r0, _0804d898
	mov		r1, #0x91
	lsl		r1, r1, #0x1
	bl		sub_08008f44
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0804d866
	add		r2, r1, #0x0
	add		r2, #0xf1
	mov		r0, #0x2
	strb	r0, [r2, #0x0]
	ldr		r2, _0804d89c
	add		r1, r1, r2
	strb	r0, [r1, #0x0]
_0804d866:
	add		r0, r6, #0x0
	bl		sub_0804df98
	add		r0, r6, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0804d878:	.4byte 0x080e1d74
_0804d87c:	.4byte 0x0200D564
_0804d880:	.4byte 0x080d3430 @ t_sasaki/ts_News.cpp
_0804d884:	.4byte 0x0200EB24
_0804d888:	.4byte 0x0200EB1C
_0804d88c:	.4byte 0x0200EB1E
_0804d890:	.4byte 0x0200EB20
_0804d894:	.4byte 0x0200EB22
_0804d898:	.4byte 0x0200A26C
_0804d89c:	.4byte 0x0000013B
	thumb_func_end sub_0804d7d0

	thumb_func_start sub_0804d8a0
sub_0804d8a0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x78]
	cmp		r0, #0x8
	bge		_0804d8ac
	b		_0804da22
_0804d8ac:
	cmp		r0, #0x9
	ble		_0804d8dc
	cmp		r0, #0xf
	ble		_0804d8b6
	b		_0804da22
_0804d8b6:
	cmp		r0, #0xe
	bge		_0804d8bc
	b		_0804da22
_0804d8bc:
	ldr		r0, _0804d8d4
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804d8c8
	b		_0804d9d0
_0804d8c8:
	ldr		r0, _0804d8d8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804d976
	b		_0804d95c

_0804d8d4:	.4byte 0x00000303
_0804d8d8:	.4byte 0x0000034A

_0804d8dc:
	mov		r0, #0xbc
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804d92c
	mov		r0, #0xc7
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804d902
	mov		r0, #0x22
	str		r0, [r4, #0x54]
	mov		r0, #0x2d
	str		r0, [r4, #0x5c]
	mov		r0, #0x2a
	str		r0, [r4, #0x60]
	b		_0804d952
_0804d902:
	ldr		r5, _0804d928
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x2d
	cmp		r0, #0x0
	beq		_0804d912
	mov		r1, #0x2a
_0804d912:
	str		r1, [r4, #0x54]
	mov		r0, #0x22
	str		r0, [r4, #0x5c]
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x2a
	cmp		r0, #0x0
	beq		_0804d950
	mov		r1, #0x2d
	b		_0804d950

_0804d928:	.4byte 0x000002D1

_0804d92c:
	ldr		r5, _0804d958
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x2a
	cmp		r0, #0x0
	beq		_0804d93c
	mov		r1, #0x2d
_0804d93c:
	str		r1, [r4, #0x54]
	mov		r0, #0x22
	str		r0, [r4, #0x5c]
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x2d
	cmp		r0, #0x0
	beq		_0804d950
	mov		r1, #0x2a
_0804d950:
	str		r1, [r4, #0x60]
_0804d952:
	mov		r0, #0x31
	str		r0, [r4, #0x64]
	b		_0804da22

_0804d958:	.4byte 0x000002D1

_0804d95c:
	mov		r0, #0x21
	str		r0, [r4, #0x54]
	mov		r0, #0x22
	str		r0, [r4, #0x58]
	mov		r0, #0x2c
	str		r0, [r4, #0x5c]
	mov		r0, #0x2f
	str		r0, [r4, #0x60]
	mov		r0, #0x28
	str		r0, [r4, #0x64]
	mov		r0, #0x2b
	str		r0, [r4, #0x68]
	b		_0804da1a
_0804d976:
	ldr		r5, _0804d9cc
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x31
	cmp		r0, #0x0
	beq		_0804d986
	mov		r1, #0x28
_0804d986:
	str		r1, [r4, #0x54]
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x33
	cmp		r0, #0x0
	beq		_0804d996
	mov		r1, #0x2b
_0804d996:
	str		r1, [r4, #0x58]
	mov		r0, #0x21
	str		r0, [r4, #0x5c]
	mov		r0, #0x22
	str		r0, [r4, #0x60]
	mov		r0, #0x2c
	str		r0, [r4, #0x64]
	mov		r0, #0x2f
	str		r0, [r4, #0x68]
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x28
	cmp		r0, #0x0
	beq		_0804d9b6
	mov		r1, #0x31
_0804d9b6:
	str		r1, [r4, #0x6c]
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x2b
	cmp		r0, #0x0
	beq		_0804d9c6
	mov		r1, #0x33
_0804d9c6:
	str		r1, [r4, #0x70]
	b		_0804da22

.incbin "base.gba", 0x4D9CA, 0x2

_0804d9cc:	.4byte 0x000002D2

_0804d9d0:
	ldr		r5, _0804da34
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x28
	cmp		r0, #0x0
	beq		_0804d9e0
	mov		r1, #0x2c
_0804d9e0:
	str		r1, [r4, #0x54]
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x2b
	cmp		r0, #0x0
	beq		_0804d9f0
	mov		r1, #0x2f
_0804d9f0:
	str		r1, [r4, #0x58]
	mov		r0, #0x21
	str		r0, [r4, #0x5c]
	mov		r0, #0x22
	str		r0, [r4, #0x60]
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x2c
	cmp		r0, #0x0
	beq		_0804da08
	mov		r1, #0x28
_0804da08:
	str		r1, [r4, #0x64]
	add		r0, r5, #0x0
	bl		sub_0800227c
	mov		r1, #0x2f
	cmp		r0, #0x0
	beq		_0804da18
	mov		r1, #0x2b
_0804da18:
	str		r1, [r4, #0x68]
_0804da1a:
	mov		r0, #0x31
	str		r0, [r4, #0x6c]
	mov		r0, #0x33
	str		r0, [r4, #0x70]
_0804da22:
	ldr		r0, [r4, #0x78]
	cmp		r0, #0x9
	beq		_0804da60
	cmp		r0, #0x9
	bgt		_0804da38
	cmp		r0, #0x8
	beq		_0804da42
	b		_0804db2c

.incbin "base.gba", 0x4DA32, 0x2

_0804da34:	.4byte 0x000002D2

_0804da38:
	cmp		r0, #0xe
	beq		_0804daac
	cmp		r0, #0xf
	beq		_0804dacc
	b		_0804db2c
_0804da42:
	ldr		r0, _0804da50
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804da58
	ldr		r0, _0804da54
	b		_0804daf2

_0804da50:	.4byte 0x000002D1
_0804da54:	.4byte 0x080d3458

_0804da58:
	ldr		r0, _0804da5c
	b		_0804daf2

_0804da5c:	.4byte 0x080d3454

_0804da60:
	mov		r0, #0xbc
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804da8c
	ldr		r0, _0804da7c
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804da84
	ldr		r0, _0804da80
	b		_0804daf2

.incbin "base.gba", 0x4DA7A, 0x2

_0804da7c:	.4byte 0x000002D1
_0804da80:	.4byte 0x080d3460

_0804da84:
	ldr		r0, _0804da88
	b		_0804daf2

_0804da88:	.4byte 0x080d345c

_0804da8c:
	ldr		r0, _0804da9c
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804daa4
	ldr		r0, _0804daa0
	b		_0804daf2

.incbin "base.gba", 0x4DA9A, 0x2

_0804da9c:	.4byte 0x000002D1
_0804daa0:	.4byte 0x080d3468

_0804daa4:
	ldr		r0, _0804daa8
	b		_0804daf2

_0804daa8:	.4byte 0x080d3464

_0804daac:
	ldr		r0, _0804dabc
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804dac4
	ldr		r0, _0804dac0
	b		_0804daf2

.incbin "base.gba", 0x4DABA, 0x2

_0804dabc:	.4byte 0x000002D2
_0804dac0:	.4byte 0x080d3470

_0804dac4:
	ldr		r0, _0804dac8
	b		_0804daf2

_0804dac8:	.4byte 0x080d346c

_0804dacc:
	ldr		r0, _0804dae4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0804db08
	ldr		r0, _0804dae8
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804daf0
	ldr		r0, _0804daec
	b		_0804daf2

_0804dae4:	.4byte 0x00000303
_0804dae8:	.4byte 0x000002D2
_0804daec:	.4byte 0x080d3478

_0804daf0:
	ldr		r0, _0804db00
_0804daf2:
	add		r1, r4, #0x0
	add		r1, #0x74
	ldr		r2, _0804db04
	bl		sub_080bb5fc
	b		_0804db2c

.incbin "base.gba", 0x4DAFE, 0x2

_0804db00:	.4byte 0x080d3474
_0804db04:	.4byte 0x04000001

_0804db08:
	ldr		r0, _0804db18
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0804db20
	ldr		r0, _0804db1c
	b		_0804db22

.incbin "base.gba", 0x4DB16, 0x2

_0804db18:	.4byte 0x000002D2
_0804db1c:	.4byte 0x080d3480

_0804db20:
	ldr		r0, _0804db34
_0804db22:
	add		r1, r4, #0x0
	add		r1, #0x74
	ldr		r2, _0804db38
	bl		sub_080bb5fc
_0804db2c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4DB32, 0x2

_0804db34:	.4byte 0x080d347c
_0804db38:	.4byte 0x04000001
	thumb_func_end sub_0804d8a0

	thumb_func_start sub_0804db3c
sub_0804db3c:
	push	{ r4, r5, lr }
	ldr		r1, _0804dbac
	ldr		r2, _0804dbb0
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldr		r2, _0804dbb4
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, _0804dbb8
	ldrh	r1, [r0, #0x0]
	mov		r2, #0xc0
	lsl		r2, r2, #0x7
	add		r0, r2, #0x0
	orr		r0, r1
	bl		sub_0800132c
	ldr		r0, _0804dbbc
	mov		r1, #0x2f
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	strb	r1, [r0, #0x0]
	ldr		r1, _0804dbc0
	mov		r0, #0x3f
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r0, _0804dbc4
	ldr		r4, [r0, #0x0]
	ldr		r2, [r4, #0x2c]
	ldr		r3, [r4, #0x34]
	add		r3, r2, r3
	ldr		r1, [r4, #0x30]
	ldr		r5, _0804dbc8
	lsl		r2, r2, #0x8
	add		r0, r2, #0x0
	orr		r0, r3
	strh	r0, [r5, #0x0]
	ldr		r0, _0804dbcc
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x38]
	add		r1, r1, r0
	sub		r3, #0x1c
	mov		r4, #0xa0
	ldr		r0, _0804dbd0
	orr		r2, r3
	strh	r2, [r0, #0x0]
	add		r0, #0x4
	lsl		r1, r1, #0x8
	orr		r1, r4
	strh	r1, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4DBAA, 0x2

_0804dbac:	.4byte 0x04000050
_0804dbb0:	.4byte 0x00000844
_0804dbb4:	.4byte 0x0000040C
_0804dbb8:	.4byte 0x02000B18
_0804dbbc:	.4byte 0x04000048
_0804dbc0:	.4byte 0x0400004A
_0804dbc4:	.4byte 0x0200D560
_0804dbc8:	.4byte 0x04000040
_0804dbcc:	.4byte 0x04000044
_0804dbd0:	.4byte 0x04000042
	thumb_func_end sub_0804db3c

	thumb_func_start sub_0804dbd4
sub_0804dbd4:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, _0804dbfc
	mov		r1, #0x14
	bl		sub_08008a04
	ldrh	r2, [r0, #0x1c]
	ldr		r1, _0804dc00
	and		r1, r2
	strh	r1, [r0, #0x1c]
	ldr		r3, [r0, #0x18]
	ldr		r0, [r4, #0x78]
	cmp		r0, #0x9
	beq		_0804dc3c
	cmp		r0, #0x9
	bgt		_0804dc04
	cmp		r0, #0x8
	beq		_0804dc0e
	b		_0804dc60

_0804dbfc:	.4byte 0x02008AD4
_0804dc00:	.4byte 0xfffffeff

_0804dc04:
	cmp		r0, #0xe
	beq		_0804dc0e
	cmp		r0, #0xf
	beq		_0804dc3c
	b		_0804dc60
_0804dc0e:
	add		r1, r3, #0x0
	add		r1, #0xa
	ldr		r0, _0804dc34
	ldr		r4, [r0, #0x0]
	ldr		r0, _0804dc38
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0804dc22
	add		r0, #0x7
_0804dc22:
	asr		r2, r0, #0x3
	mov		r5, #0x4
	ldrsh	r0, [r3, r5]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r3, #0x14
	bl		sub_0808c878
	b		_0804dc60

_0804dc34:	.4byte 0x0200CE54
_0804dc38:	.4byte 0x0200D560

_0804dc3c:
	add		r1, r3, #0x0
	add		r1, #0xa
	ldr		r0, _0804dc68
	ldr		r4, [r0, #0x0]
	ldr		r0, _0804dc6c
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0804dc50
	add		r0, #0x7
_0804dc50:
	asr		r2, r0, #0x3
	mov		r5, #0x4
	ldrsh	r0, [r3, r5]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r3, #0x28
	bl		sub_0808c878
_0804dc60:
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0804dc68:	.4byte 0x0200CE54
_0804dc6c:	.4byte 0x0200D560
	thumb_func_end sub_0804dbd4

	thumb_func_start sub_0804dc70
sub_0804dc70:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r0, _0804dcfc
	mov		r1, #0x0
	bl		sub_0800ed80
	add		r5, r0, #0x0
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	ldrh	r1, [r2, #0x1c]
	ldr		r0, _0804dd00
	and		r0, r1
	mov		r1, #0x0
	mov		r8, r1
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x1c]
	ldr		r4, [r2, #0x18]
	ldr		r1, [r6, #0x78]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	ldr		r1, _0804dd04
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	mov		r0, #0xc
	add		r1, #0x1
	mov		r3, r8
	strh	r3, [r5, #0x28]
	strh	r0, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r1, r4, #0x0
	add		r1, #0xa
	ldr		r0, _0804dd08
	mov		r5, #0x2
	ldrsh	r2, [r4, r5]
	lsl		r2, r2, #0x6
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r2, [r4, r3]
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r5, #0x4
	ldrsh	r2, [r4, r5]
	mov		r5, #0x6
	ldrsh	r3, [r4, r5]
	str		r2, [sp, #0x0]
	bl		sub_0808c878
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0804dcfc:	.4byte 0x0200AA18
_0804dd00:	.4byte 0xfffffeff
_0804dd04:	.4byte 0x080d136c
_0804dd08:	.4byte 0x0200CE50
	thumb_func_end sub_0804dc70

	thumb_func_start sub_0804dd0c
sub_0804dd0c:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x78]
	cmp		r0, #0x8
	beq		_0804dda2
	cmp		r0, #0xe
	beq		_0804dda2
	ldr		r0, _0804dd4c
	mov		r1, #0x1
	bl		sub_0800ed80
	add		r6, r0, #0x0
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	ldrh	r1, [r2, #0x1c]
	ldr		r0, _0804dd50
	and		r0, r1
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x1c]
	ldr		r5, [r2, #0x18]
	ldr		r0, [r4, #0x78]
	cmp		r0, #0x9
	bne		_0804dd54
	ldr		r0, [r4, #0x54]
	sub		r0, #0x21
	bl		sub_080068f8
	b		_0804dd60

_0804dd4c:	.4byte 0x0200AA18
_0804dd50:	.4byte 0xfffffeff

_0804dd54:
	ldr		r0, [r4, #0x54]
	sub		r0, #0x21
	bl		sub_080067cc
	bl		sub_080068e0
_0804dd60:
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x0
	mov		r3, #0x18
	add		r1, #0x1
	strh	r0, [r6, #0x28]
	strh	r3, [r6, #0x2a]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r1, r5, #0x0
	add		r1, #0xa
	ldr		r0, _0804ddac
	mov		r4, #0x2
	ldrsh	r2, [r5, r4]
	lsl		r2, r2, #0x6
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	mov		r3, #0x0
	ldrsh	r2, [r5, r3]
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r4, #0x4
	ldrsh	r2, [r5, r4]
	mov		r4, #0x6
	ldrsh	r3, [r5, r4]
	str		r2, [sp, #0x0]
	bl		sub_0808c878
_0804dda2:
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4DDAA, 0x2

_0804ddac:	.4byte 0x0200CE50
	thumb_func_end sub_0804dd0c

	thumb_func_start sub_0804ddb0
sub_0804ddb0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r6, #0x0
	ldr		r0, _0804ddfc
	mov		r8, r0
	mov		r1, #0x2
	mov		r9, r1
	ldr		r2, _0804de00
	mov		r10, r2
	add		r4, r5, #0x0
	add		r4, #0x74
_0804ddce:
	ldr		r7, _0804de04
	add		r1, r6, r7
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	bl		sub_0800bcd0
	add		r3, r0, #0x0
	add		r0, #0xf1
	mov		r7, r9
	strb	r7, [r0, #0x0]
	ldr		r1, _0804de08
	add		r0, r3, r1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	ldr		r0, [r5, #0x78]
	cmp		r0, #0x9
	beq		_0804de34
	cmp		r0, #0x9
	bgt		_0804de0c
	cmp		r0, #0x8
	beq		_0804de16
	b		_0804de66

.incbin "base.gba", 0x4DDFA, 0x2

_0804ddfc:	.4byte 0x080d3448
_0804de00:	.4byte 0x0200D560
_0804de04:	.4byte 0x00000123
_0804de08:	.4byte 0x0000013B

_0804de0c:
	cmp		r0, #0xe
	beq		_0804de16
	cmp		r0, #0xf
	beq		_0804de34
	b		_0804de66
_0804de16:
	mov		r7, r10
	ldr		r2, [r7, #0x0]
	ldrb	r1, [r4, #0x0]
	lsl		r1, r1, #0x3
	add		r0, r2, #0x0
	add		r0, #0x60
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	mov		r7, #0x8e
	lsl		r7, r7, #0x1
	add		r1, r3, r7
	str		r0, [r1, #0x0]
	ldrb	r0, [r4, #0x0]
	b		_0804de54
_0804de34:
	mov		r7, r10
	ldr		r2, [r7, #0x0]
	ldrb	r1, [r4, #0x0]
	add		r1, #0x4
	lsl		r1, r1, #0x3
	add		r0, r2, #0x0
	add		r0, #0x60
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	mov		r7, #0x8e
	lsl		r7, r7, #0x1
	add		r1, r3, r7
	str		r0, [r1, #0x0]
	ldrb	r0, [r4, #0x0]
	add		r0, #0x4
_0804de54:
	lsl		r0, r0, #0x3
	add		r2, #0x64
	add		r2, r2, r0
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	str		r0, [r1, #0x0]
_0804de66:
	add		r4, #0x1
	add		r6, #0x1
	cmp		r6, #0x3
	ble		_0804ddce
	ldr		r0, [r5, #0x78]
	cmp		r0, #0x9
	bne		_0804def4
	mov		r4, r8
	ldr		r0, [r4, #0x0]
	ldr		r1, [r5, #0x54]
	bl		sub_0800bcd0
	add		r3, r0, #0x0
	add		r1, r3, #0x0
	add		r1, #0xf1
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	ldr		r7, _0804dee8
	add		r1, r3, r7
	strb	r0, [r1, #0x0]
	ldr		r0, _0804deec
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	mov		r4, #0x8e
	lsl		r4, r4, #0x1
	add		r1, r3, r4
	str		r0, [r1, #0x0]
	add		r2, #0xac
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	sub		r7, #0x1b
	add		r1, r3, r7
	str		r0, [r1, #0x0]
	mov		r7, #0x2
	ldr		r6, _0804def0
	add		r4, r5, #0x0
	add		r4, #0x5c
	mov		r5, #0x2
_0804deb8:
	ldr		r1, [r4, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	bl		sub_08008f44
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0804dede
	add		r0, #0xf1
	strb	r7, [r0, #0x0]
	ldr		r2, _0804dee8
	add		r0, r1, r2
	strb	r7, [r0, #0x0]
	sub		r2, #0x1f
	add		r0, r1, r2
	str		r6, [r0, #0x0]
	add		r2, #0x4
	add		r0, r1, r2
	str		r6, [r0, #0x0]
_0804dede:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0804deb8
	b		_0804df7e

_0804dee8:	.4byte 0x0000013B
_0804deec:	.4byte 0x0200D560
_0804def0:	.4byte 0xFFF00000

_0804def4:
	cmp		r0, #0xf
	bne		_0804df7e
	mov		r4, #0x0
	mov		r7, #0x5c
	add		r7, r7, r5
	mov		r9, r7
	mov		r6, #0x2
	ldr		r7, _0804df8c
	add		r5, #0x54
_0804df06:
	ldmia	r5!, { r1 }
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	bl		sub_0800bcd0
	mov		r12, r0
	add		r0, #0xf1
	strb	r6, [r0, #0x0]
	ldr		r0, _0804df90
	add		r0, r12
	strb	r6, [r0, #0x0]
	ldr		r2, [r7, #0x0]
	lsl		r3, r4, #0x3
	add		r0, r2, #0x0
	add		r0, #0xb0
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r1, r12
	str		r0, [r1, #0x0]
	add		r2, #0xb4
	add		r2, r2, r3
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r1, r12
	str		r0, [r1, #0x0]
	add		r4, #0x1
	cmp		r4, #0x1
	ble		_0804df06
	mov		r7, #0x2
	ldr		r6, _0804df94
	mov		r4, r9
	mov		r5, #0x5
_0804df50:
	ldr		r1, [r4, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	bl		sub_08008f44
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0804df76
	add		r0, #0xf1
	strb	r7, [r0, #0x0]
	ldr		r2, _0804df90
	add		r0, r1, r2
	strb	r7, [r0, #0x0]
	sub		r2, #0x1f
	add		r0, r1, r2
	str		r6, [r0, #0x0]
	add		r2, #0x4
	add		r0, r1, r2
	str		r6, [r0, #0x0]
_0804df76:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0804df50
_0804df7e:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804df8c:	.4byte 0x0200D560
_0804df90:	.4byte 0x0000013B
_0804df94:	.4byte 0xFFF00000
	thumb_func_end sub_0804ddb0

	thumb_func_start sub_0804df98
sub_0804df98:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r0, _0804dfe4
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	mov		r4, #0x0
	mov		r3, #0x0
	mov		r0, #0xff
	lsl		r0, r0, #0x1
	add		r6, r0, #0x0
_0804dfb6:
	ldr		r0, [r5, #0x40]
	lsl		r2, r4, #0x3
	add		r0, r2, r0
	strh	r3, [r0, #0x0]
	ldr		r0, [r5, #0x40]
	add		r0, r2, r0
	sub		r1, r6, r4
	strh	r1, [r0, #0x2]
	ldr		r0, [r5, #0x40]
	add		r0, r2, r0
	strh	r3, [r0, #0x4]
	ldr		r0, [r5, #0x40]
	add		r2, r2, r0
	strh	r3, [r2, #0x6]
	add		r4, #0x1
	cmp		r4, #0x9f
	ble		_0804dfb6
	mov		r1, r12
	ldr		r0, [r1, #0x30]
	sub		r4, r0, #0x1
	ldr		r1, [r1, #0x38]
	b		_0804e00a

.incbin "base.gba", 0x4DFE2, 0x2

_0804dfe4:	.4byte 0x0200D560

_0804dfe8:
	ldr		r0, [r5, #0x44]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0804dff2
	neg		r1, r0
_0804dff2:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_0804dffa
	neg		r2, r2
_0804dffa:
	ldr		r1, [r5, #0x40]
	lsl		r0, r4, #0x3
	add		r0, r0, r1
	strh	r2, [r0, #0x6]
	add		r4, #0x1
	mov		r2, r12
	ldr		r0, [r2, #0x30]
	ldr		r1, [r2, #0x38]
_0804e00a:
	add		r0, r0, r1
	sub		r0, #0x1
	cmp		r4, r0
	blt		_0804dfe8
	mov		r6, r12
	ldr		r0, [r6, #0xc]
	sub		r4, r0, #0x1
	b		_0804e040
_0804e01a:
	ldr		r2, [r5, #0x40]
	lsl		r3, r4, #0x3
	add		r2, r3, r2
	mov		r1, r12
	ldr		r0, [r1, #0x8]
	ldr		r1, [r1, #0x18]
	add		r0, r0, r1
	neg		r0, r0
	strh	r0, [r2, #0x0]
	ldr		r0, [r5, #0x40]
	add		r3, r3, r0
	mov		r2, r12
	ldr		r0, [r2, #0xc]
	ldr		r1, [r2, #0x1c]
	add		r0, r0, r1
	mvn		r0, r0
	strh	r0, [r3, #0x2]
	add		r4, #0x1
	ldr		r0, [r2, #0xc]
_0804e040:
	add		r0, #0xf
	cmp		r4, r0
	blt		_0804e01a
	ldr		r0, [r5, #0x44]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0804e050
	neg		r1, r0
_0804e050:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0804e058
	neg		r1, r1
_0804e058:
	mov		r6, r12
	ldr		r0, [r6, #0x14]
	sub		r0, r0, r1
	str		r0, [sp, #0x0]
	mov		r0, #0xa0
	add		r0, r12
	mov		r9, r0
	mov		r1, #0xa4
	add		r1, r12
	mov		r8, r1
	mov		r2, #0x1b
	mov		r10, r2
	ldr		r6, [sp, #0x0]
	lsl		r4, r6, #0x3
	add		r3, r6, #0x0
	mov		r7, #0xb
_0804e078:
	ldr		r1, _0804e0dc
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x30]
	mov		r2, #0x0
	cmp		r1, r3
	bgt		_0804e08e
	ldr		r0, [r0, #0x38]
	add		r0, r1, r0
	cmp		r0, r3
	ble		_0804e08e
	mov		r2, #0x1
_0804e08e:
	cmp		r2, #0x1
	bne		_0804e0b6
	ldr		r2, [r5, #0x40]
	add		r2, r4, r2
	mov		r6, r12
	ldr		r0, [r6, #0x10]
	mov		r6, r9
	ldr		r1, [r6, #0x0]
	add		r0, r0, r1
	neg		r0, r0
	strh	r0, [r2, #0x0]
	ldr		r1, [r5, #0x40]
	add		r1, r4, r1
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	ldr		r6, [sp, #0x0]
	add		r0, r0, r6
	mov		r2, r10
	sub		r0, r2, r0
	strh	r0, [r1, #0x2]
_0804e0b6:
	add		r4, #0x8
	add		r3, #0x1
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0804e078
	ldr		r0, [r5, #0x40]
	ldr		r1, _0804e0e0
	ldr		r3, _0804e0e4
	mov		r2, #0x8
	bl		sub_08000a2c
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804e0dc:	.4byte 0x0200D560
_0804e0e0:	.4byte 0x04000014
_0804e0e4:	.4byte 0xA6600003
	thumb_func_end sub_0804df98

	thumb_func_start sub_0804e0e8
sub_0804e0e8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	cmp		r1, #0x5
	bls		_0804e0fc
	b		_0804e62c
_0804e0fc:
	lsl		r0, r1, #0x2
	ldr		r1, _0804e114
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x4c
	str		r1, [sp, #0x0]
	mov		r2, #0x54
	add		r2, r2, r6
	mov		r9, r2
	mov		pc, r0

.incbin "base.gba", 0x4E112, 0x2

_0804e114:	.4byte 0x0804e118
_0804e118:	.4byte 0x0804e130

.incbin "base.gba", 0x4E11C, 0x14
	thumb_func_end sub_0804e0e8


.incbin "base.gba", 0x4E130, 0x4FC

_0804e62c:

.incbin "base.gba", 0x4E62C, 0x10
	thumb_func_start sub_0804e63c
sub_0804e63c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0804e658
	bl		sub_0800223c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x4
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0804e658:	.4byte 0x00000A08
	thumb_func_end sub_0804e63c

	thumb_func_start sub_0804e65c
sub_0804e65c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0804e678
	bl		sub_0800223c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0804e678:	.4byte 0x00000A08
	thumb_func_end sub_0804e65c

	thumb_func_start sub_0804e67c
sub_0804e67c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0804e698
	bl		sub_0800223c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0804e698:	.4byte 0x00000A07
	thumb_func_end sub_0804e67c

	thumb_func_start sub_0804e69c
sub_0804e69c:
	push	{ lr }
	ldr		r0, _0804e6b4
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0x30]
	cmp		r2, r1
	bgt		_0804e6b8
	ldr		r0, [r0, #0x38]
	add		r0, r2, r0
	cmp		r0, r1
	ble		_0804e6b8
	mov		r0, #0x1
	b		_0804e6ba

_0804e6b4:	.4byte 0x0200D560

_0804e6b8:
	mov		r0, #0x0
_0804e6ba:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4E6BE, 0xEE
	thumb_func_end sub_0804e69c

	thumb_func_start sub_0804e7ac
sub_0804e7ac:
	push	{ r4, lr }
	ldr		r4, _0804e7cc
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0804e7c2
	ldr		r0, _0804e7d0
	mov		r1, #0x44
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0804e7c2:
	ldr		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4E7CA, 0x2

_0804e7cc:	.4byte 0x0200D564
_0804e7d0:	.4byte 0x080d3430 @ t_sasaki/ts_News.cpp

.incbin "base.gba", 0x4E7D4, 0xC
	thumb_func_end sub_0804e7ac

	thumb_func_start sub_0804e7e0
sub_0804e7e0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, _0804e804
	cmp		r1, r0
	beq		_0804e864
	cmp		r1, r0
	bhi		_0804e808
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0804e81c
	add		r0, #0x1
	cmp		r1, r0
	beq		_0804e840
	b		_0804e9c8

.incbin "base.gba", 0x4E802, 0x2

_0804e804:	.4byte 0x00000402

_0804e808:
	ldr		r0, _0804e818
	cmp		r1, r0
	bne		_0804e810
	b		_0804e958
_0804e810:
	add		r0, #0x1
	cmp		r1, r0
	beq		_0804e88c
	b		_0804e9c8

_0804e818:	.4byte 0x00000F82

_0804e81c:
	bl		sub_0804e7ac
	cmp		r0, #0x0
	bne		_0804e830
	ldr		r0, _0804e83c
	mov		r1, #0x19
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0804e830:
	bl		sub_0804e7ac
	bl		sub_0804e67c
	b		_0804e880

.incbin "base.gba", 0x4E83A, 0x2

_0804e83c:	.4byte 0x080d3488 @ t_sasaki/scriptcmd3.cpp

_0804e840:
	bl		sub_0804e7ac
	cmp		r0, #0x0
	bne		_0804e854
	ldr		r0, _0804e860
	mov		r1, #0x21
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0804e854:
	bl		sub_0804e7ac
	bl		sub_0804e65c
	b		_0804e880

.incbin "base.gba", 0x4E85E, 0x2

_0804e860:	.4byte 0x080d3488 @ t_sasaki/scriptcmd3.cpp

_0804e864:
	bl		sub_0804e7ac
	cmp		r0, #0x0
	bne		_0804e878
	ldr		r0, _0804e888
	mov		r1, #0x29
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0804e878:
	bl		sub_0804e7ac
	bl		sub_0804e63c
_0804e880:
	lsl		r0, r5, #0x2
	add		r0, r4, r0
	b		_0804e9ca

.incbin "base.gba", 0x4E886, 0x2

_0804e888:	.4byte 0x080d3488 @ t_sasaki/scriptcmd3.cpp

_0804e88c:
	lsl		r0, r3, #0x10
	asr		r3, r0, #0x10
	ldr		r0, _0804e8a4
	cmp		r3, r0
	beq		_0804e8dc
	cmp		r3, r0
	bgt		_0804e8a8
	sub		r0, #0x1
	cmp		r3, r0
	beq		_0804e8bc
	b		_0804e9c4

.incbin "base.gba", 0x4E8A2, 0x2

_0804e8a4:	.4byte 0x00002301

_0804e8a8:
	ldr		r0, _0804e8b8
	cmp		r3, r0
	beq		_0804e8fc
	add		r0, #0x1
	cmp		r3, r0
	beq		_0804e924
	b		_0804e9c4

.incbin "base.gba", 0x4E8B6, 0x2

_0804e8b8:	.4byte 0x00002302

_0804e8bc:
	ldr		r4, _0804e8d4
	ldr		r1, _0804e8d8
	add		r0, r4, r1
	mov		r1, #0xfd
	lsl		r1, r1, #0x2
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_08040020
	b		_0804e910

_0804e8d4:	.4byte 0x0200DBD0
_0804e8d8:	.4byte 0xFFFFFE30

_0804e8dc:
	ldr		r4, _0804e8f4
	ldr		r2, _0804e8f8
	add		r0, r4, r2
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_08047854
	b		_0804e910

_0804e8f4:	.4byte 0x0200DBD0
_0804e8f8:	.4byte 0xFFFFFE30

_0804e8fc:
	ldr		r4, _0804e91c
	ldr		r3, _0804e920
	add		r0, r4, r3
	mov		r1, #0xf0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0804aecc
_0804e910:
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	b		_0804e9c4

_0804e91c:	.4byte 0x0200DBD0
_0804e920:	.4byte 0xFFFFFE30

_0804e924:
	ldr		r4, _0804e94c
	ldr		r1, _0804e950
	add		r0, r4, r1
	mov		r1, #0x7c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, _0804e954
	mov		r2, #0x2
	ldrsh	r1, [r1, r2]
	bl		sub_0804d7d0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	b		_0804e9c4

.incbin "base.gba", 0x4E94A, 0x2

_0804e94c:	.4byte 0x0200DB50
_0804e950:	.4byte 0xFFFFFEB0
_0804e954:	.4byte 0x0200BEFC

_0804e958:
	ldr		r2, _0804e978
	ldr		r1, [r2, #0x0]
	ldr		r3, _0804e97c
	add		r0, r3, #0x0
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x5
	bhi		_0804e9c4
	lsl		r0, r0, #0x2
	ldr		r1, _0804e980
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x4E976, 0x2

_0804e978:	.4byte 0x080d34a0
_0804e97c:	.4byte 0xFFFFED00
_0804e980:	.4byte 0x0804e984
_0804e984:	.4byte 0x0804e9ac

.incbin "base.gba", 0x4E988, 0x14
	thumb_func_end sub_0804e7e0


.incbin "base.gba", 0x4E99C, 0x28

_0804e9c4:

.incbin "base.gba", 0x4E9C4, 0x4
_0804e9c8:

.incbin "base.gba", 0x4E9C8, 0x2
_0804e9ca:

.incbin "base.gba", 0x4E9CA, 0x6
	thumb_func_start sub_0804e9d0
sub_0804e9d0:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x20
	add		r6, r0, #0x0
	add		r7, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r5, r3, #0x10
	ldr		r0, _0804ea00
	cmp		r1, r0
	bne		_0804e9e4
	b		_0804eb50
_0804e9e4:
	cmp		r1, r0
	bhi		_0804ea30
	sub		r0, #0x4
	cmp		r1, r0
	beq		_0804eabc
	cmp		r1, r0
	bhi		_0804ea04
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0804ea8c
	cmp		r1, r0
	bhi		_0804eab4
	b		_0804ec90

.incbin "base.gba", 0x4E9FE, 0x2

_0804ea00:	.4byte 0x00000607

_0804ea04:
	ldr		r0, _0804ea28
	cmp		r1, r0
	beq		_0804eaf4
	cmp		r1, r0
	bls		_0804ea10
	b		_0804eb10
_0804ea10:
	mov		r0, #0x2c
	bl		sub_0808af94
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	ldr		r2, _0804ea2c
	ldr		r2, [r2, #0x0]
	add		r1, r1, r2
	add		r2, r6, #0x0
	bl		sub_08007684
	b		_0804ec94

_0804ea28:	.4byte 0x00000605
_0804ea2c:	.4byte 0x0200D58C

_0804ea30:
	ldr		r0, _0804ea60
	cmp		r1, r0
	bne		_0804ea38
	b		_0804ebbc
_0804ea38:
	cmp		r1, r0
	bhi		_0804ea70
	sub		r0, #0x2
	cmp		r1, r0
	bne		_0804ea44
	b		_0804eb74
_0804ea44:
	cmp		r1, r0
	bls		_0804ea4a
	b		_0804eb98
_0804ea4a:
	ldr		r4, _0804ea64
	ldr		r1, _0804ea68
	add		r0, r4, r1
	ldr		r1, _0804ea6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_080597a4
	b		_0804ebd6

_0804ea60:	.4byte 0x0000060B
_0804ea64:	.4byte 0x0200DB80
_0804ea68:	.4byte 0xFFFFFE80
_0804ea6c:	.4byte 0x00002AB8

_0804ea70:
	ldr		r0, _0804ea84
	cmp		r1, r0
	bhi		_0804ea78
	b		_0804ec94
_0804ea78:
	ldr		r0, _0804ea88
	cmp		r1, r0
	bne		_0804ea80
	b		_0804ebec
_0804ea80:
	b		_0804ec90

.incbin "base.gba", 0x4EA82, 0x2

_0804ea84:	.4byte 0x0000060F
_0804ea88:	.4byte 0x00000F82

_0804ea8c:
	ldr		r0, _0804eaa8
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	bl		sub_080b63dc
	mov		r1, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_0804eaac
	ldr		r0, [r6, #0x4]
	bl		sub_08002268
	b		_0804ec94

.incbin "base.gba", 0x4EAA6, 0x2

_0804eaa8:	.4byte 0x0200BDD4

_0804eaac:
	ldr		r0, [r6, #0x4]
	bl		sub_0800223c
	b		_0804ec94
_0804eab4:
	ldrh	r0, [r6, #0x4]
	bl		sub_0805ed8c
	b		_0804ec94
_0804eabc:
	mov		r1, sp
	add		r0, r6, #0x0
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	mov		r2, sp
	add		r2, #0xa
	ldr		r4, _0804eaf0
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r2, #0x0]
	sub		r0, r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x2c
	bl		sub_0808af94
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	ldr		r2, [r4, #0x0]
	add		r1, r1, r2
	mov		r2, sp
	bl		sub_08007268
	b		_0804ec94

_0804eaf0:	.4byte 0x0200D58C

_0804eaf4:
	mov		r0, #0x24
	bl		sub_0808af94
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	ldr		r2, _0804eb0c
	ldr		r2, [r2, #0x0]
	add		r1, r1, r2
	add		r2, r6, #0x0
	bl		sub_08007a14
	b		_0804ec94

_0804eb0c:	.4byte 0x0200D58C

_0804eb10:
	mov		r1, sp
	add		r0, r6, #0x0
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	sub		r1, #0x6
	ldr		r4, _0804eb4c
	ldr		r2, [r4, #0x0]
	ldrh	r0, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	add		r1, sp, #0x8
	ldrh	r0, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	mov		r0, #0x24
	bl		sub_0808af94
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	ldr		r2, [r4, #0x0]
	add		r1, r1, r2
	mov		r2, sp
	bl		sub_08007b58
	b		_0804ec94

.incbin "base.gba", 0x4EB4A, 0x2

_0804eb4c:	.4byte 0x0200D58C

_0804eb50:
	ldr		r4, _0804eb68
	ldr		r1, _0804eb6c
	add		r0, r4, r1
	ldr		r1, _0804eb70
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0804fc14
	b		_0804ebd6

.incbin "base.gba", 0x4EB66, 0x2

_0804eb68:	.4byte 0x0200DBD0
_0804eb6c:	.4byte 0xFFFFFE30
_0804eb70:	.4byte 0x00000DE8

_0804eb74:
	ldr		r4, _0804eb8c
	ldr		r2, _0804eb90
	add		r0, r4, r2
	ldr		r1, _0804eb94
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0805b874
	b		_0804ebd6

.incbin "base.gba", 0x4EB8A, 0x2

_0804eb8c:	.4byte 0x0200DB80
_0804eb90:	.4byte 0xFFFFFE80
_0804eb94:	.4byte 0x00003260

_0804eb98:
	ldr		r4, _0804ebb0
	ldr		r3, _0804ebb4
	add		r0, r4, r3
	ldr		r1, _0804ebb8
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_08060804
	b		_0804ebd6

.incbin "base.gba", 0x4EBAE, 0x2

_0804ebb0:	.4byte 0x0200DB80
_0804ebb4:	.4byte 0xFFFFFE80
_0804ebb8:	.4byte 0x00000FB4

_0804ebbc:
	ldr		r4, _0804ebe4
	ldr		r1, _0804ebe8
	add		r0, r4, r1
	mov		r1, #0x64
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, [r6, #0x4]
	ldr		r2, [r6, #0x8]
	ldr		r3, [r6, #0xc]
	bl		sub_08066640
_0804ebd6:
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	b		_0804ec94

.incbin "base.gba", 0x4EBE2, 0x2

_0804ebe4:	.4byte 0x0200DB80
_0804ebe8:	.4byte 0xFFFFFE80

_0804ebec:
	ldr		r2, _0804ec0c
	ldr		r1, [r2, #0x0]
	ldr		r3, _0804ec10
	add		r0, r3, #0x0
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x9
	bhi		_0804ec88
	lsl		r0, r0, #0x2
	ldr		r1, _0804ec14
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x4EC0A, 0x2

_0804ec0c:	.4byte 0x080d34a4
_0804ec10:	.4byte 0xFFFFEB00
_0804ec14:	.4byte 0x0804ec18
_0804ec18:	.4byte 0x0804ec40

.incbin "base.gba", 0x4EC1C, 0x24
	thumb_func_end sub_0804e9d0


.incbin "base.gba", 0x4EC40, 0x48

_0804ec88:

.incbin "base.gba", 0x4EC88, 0x8
_0804ec90:

.incbin "base.gba", 0x4EC90, 0x4
_0804ec94:

.incbin "base.gba", 0x4EC94, 0x4
_0804ec98:

.incbin "base.gba", 0x4EC98, 0x8
	thumb_func_start sub_0804eca0
sub_0804eca0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, #0xc2
	ldrb	r1, [r0, #0x0]
	mov		r5, #0x1
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804ecba
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b3d4
_0804ecba:
	add		r0, r4, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0804ecc6
	add		r0, #0xff
_0804ecc6:
	asr		r3, r0, #0x8
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0804ecd4
	add		r0, #0xff
_0804ecd4:
	asr		r2, r0, #0x8
	add		r1, r3, #0x0
	add		r1, #0x3f
	mov		r0, #0xb7
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_0804ed16
	mov		r0, #0x10
	neg		r0, r0
	cmp		r2, r0
	ble		_0804ed16
	cmp		r2, #0xdf
	bgt		_0804ed16
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x56
	ldrh	r1, [r0, #0x0]
	sub		r0, #0x50
	strh	r1, [r0, #0x0]
	add		r0, #0x4f
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804ed16
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0804ed16:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0804eca0

	thumb_func_start sub_0804ed1c
sub_0804ed1c:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	ldr		r0, [r7, #0x5c]
	add		r1, r0, #0x0
	mul		r1, r0
	add		r0, r1, #0x0
	ldr		r1, [r7, #0x60]
	add		r2, r1, #0x0
	mul		r2, r1
	add		r1, r2, #0x0
	add		r0, r0, r1
	mov		r1, #0x4
	mov		r2, sp
	bl		sub_0808c5c0
	add		r6, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r0, r6, r4
	sub		r0, #0x1
	add		r1, r4, #0x0
	bl		sub_080bbe34
	add		r1, r7, #0x0
	add		r1, #0x68
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_080bbe34
	add		r4, r0, #0x0
	ldr		r0, [r7, #0x5c]
	add		r1, r4, #0x0
	bl		sub_080bbe34
	add		r1, r7, #0x0
	add		r1, #0x64
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x60]
	add		r1, r4, #0x0
	bl		sub_080bbe34
	add		r1, r7, #0x0
	add		r1, #0x66
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x6c
	strh	r5, [r0, #0x0]
	sub		r0, #0x2
	strh	r5, [r0, #0x0]
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4ED96, 0x106
	thumb_func_end sub_0804ed1c

	thumb_func_start sub_0804ee9c
sub_0804ee9c:
	push	{ r4, lr }
	add		r4, r1, #0x0
	ldrb	r1, [r0, #0x0]
	ldrb	r2, [r4, #0x0]
	cmp		r1, r2
	bne		_0804eeac
	cmp		r1, #0x0
	bne		_0804eeb6
_0804eeac:
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r4, #0x0]
	b		_0804eede
_0804eeb2:
	mov		r0, #0x0
	b		_0804eee0
_0804eeb6:
	add		r2, r0, #0x4
	add		r3, r4, #0x4
	ldrb	r1, [r0, #0x0]
	ldrh	r0, [r0, #0x4]
	ldrh	r4, [r4, #0x4]
	cmp		r0, r4
	bne		_0804eeda
_0804eec4:
	cmp		r1, #0x1
	beq		_0804eeb2
	add		r2, #0x2
	add		r3, #0x2
	sub		r0, r1, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	ldrh	r0, [r2, #0x0]
	ldrh	r4, [r3, #0x0]
	cmp		r0, r4
	beq		_0804eec4
_0804eeda:
	ldrh	r0, [r2, #0x0]
	ldrh	r1, [r3, #0x0]
_0804eede:
	sub		r0, r0, r1
_0804eee0:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4EEE6, 0x3E
	thumb_func_end sub_0804ee9c

	thumb_func_start sub_0804ef24
sub_0804ef24:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0804ef78
	str		r0, [r6, #0x4c]
	ldr		r0, _0804ef7c
	str		r0, [r6, #0xc]
	str		r4, [r6, #0x54]
	str		r5, [r6, #0x58]
	mov		r1, #0x0
	str		r1, [r6, #0x5c]
	add		r0, r6, #0x0
	add		r0, #0x64
	strh	r1, [r0, #0x0]
	str		r1, [r6, #0x60]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r1, #0x1
	strh	r1, [r0, #0x0]
	add		r0, #0x4
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0x6e
	ldrb	r0, [r2, #0x0]
	mov		r1, #0xf
	orr		r0, r1
	strb	r0, [r2, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4EF76, 0x2

_0804ef78:	.4byte 0x080e034c
_0804ef7c:	.4byte 0x080e1d9c
	thumb_func_end sub_0804ef24

	thumb_func_start sub_0804ef80
sub_0804ef80:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	add		r0, #0x6c
	strh	r5, [r0, #0x0]
	sub		r0, #0x2
	strh	r5, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	ldr		r0, [r6, #0x5c]
	mul		r0, r5
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r1, r4, #0x0
	bl		sub_080bbcac
	add		r1, r6, #0x0
	add		r1, #0x64
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x60]
	mul		r0, r5
	add		r1, r4, #0x0
	bl		sub_080bbcac
	add		r1, r6, #0x0
	add		r1, #0x66
	strh	r0, [r1, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4EFC6, 0x62
	thumb_func_end sub_0804ef80

	thumb_func_start sub_0804f028
sub_0804f028:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r1, #0x0
	add		r3, r2, #0x0
	ldr		r2, [r0, #0x54]
	lsl		r1, r4, #0x8
	str		r1, [r2, #0x0]
	lsl		r4, r4, #0x10
	ldr		r2, [r0, #0x58]
	lsl		r1, r3, #0x8
	str		r1, [r2, #0x0]
	lsl		r3, r3, #0x10
	mov		r1, #0x0
	add		r5, r0, #0x0
	add		r5, #0x6e
	mov		r0, #0x1
	mov		r12, r0
	ldr		r7, _0804f07c
	ldr		r6, _0804f080
_0804f04c:
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	lsl		r1, r1, #0x10
	asr		r2, r1, #0x10
	asr		r0, r2
	mov		r1, r12
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804f06a
	lsl		r1, r2, #0x2
	add		r0, r1, r7
	str		r4, [r0, #0x0]
	add		r1, r1, r6
	str		r3, [r1, #0x0]
_0804f06a:
	add		r0, r2, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_0804f04c
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804f07c:	.4byte 0x0200CE24
_0804f080:	.4byte 0x0200CE38
	thumb_func_end sub_0804f028

	thumb_func_start sub_0804f084
sub_0804f084:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _0804f0e4
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b374
	add		r0, r4, #0x0
	add		r0, #0x80
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	mov		r0, #0xbf
	add		r0, r0, r4
	mov		r12, r0
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x2
	neg		r2, r2
	add		r0, r2, #0x0
	and		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x0]
	ldr		r0, _0804f0e8
	str		r0, [r4, #0xc]
	ldrb	r0, [r1, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xc0
	strh	r3, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xc2
	ldrb	r0, [r1, #0x0]
	and		r2, r0
	strb	r2, [r1, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4F0E2, 0x2

_0804f0e4:	.4byte 0x080e1dec
_0804f0e8:	.4byte 0x080e1dc4
	thumb_func_end sub_0804f084

	thumb_func_start sub_0804f0ec
sub_0804f0ec:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _0804f110
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080006b4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4F10E, 0x2

_0804f110:	.4byte 0x080e1dec
	thumb_func_end sub_0804f0ec

	thumb_func_start sub_0804f114
sub_0804f114:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _0804f14c
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b374
	add		r1, r4, #0x0
	add		r1, #0x80
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	sub		r0, #0x2
	and		r0, r1
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0804f14c:	.4byte 0x080e1dec
	thumb_func_end sub_0804f114

	thumb_func_start sub_0804f150
sub_0804f150:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	mov		r8, r3
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	mov		r0, r8
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	add		r6, r7, #0x0
	add		r6, #0x14
	add		r0, r6, #0x0
	bl		sub_0808e278
	add		r0, r7, #0x0
	add		r0, #0xbc
	strh	r4, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0808e03c
	add		r0, r7, #0x0
	add		r0, #0xbe
	strb	r5, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, r8
	bl		sub_0808e3c0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4F1A0, 0x18
	thumb_func_end sub_0804f150

	thumb_func_start sub_0804f1b8
sub_0804f1b8:
	push	{ lr }
	ldr		r2, [r0, #0xc]
	mov		r3, #0x20
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x24]
	bl		sub_080bbc74
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4F1CC, 0xC
	thumb_func_end sub_0804f1b8

	thumb_func_start sub_0804f1d8
sub_0804f1d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r6, r0, #0x0
	cmp		r1, #0x7
	bls		_0804f1ee
	bl		sub_0804fbf0
_0804f1ee:
	lsl		r0, r1, #0x2
	ldr		r1, _0804f1f8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0804f1f8:	.4byte 0x0804f1fc
_0804f1fc:	.4byte 0x0804f21c

.incbin "base.gba", 0x4F200, 0x1C

_0804f21c:
.incbin "base.gba", 0x4F21C, 0x4
.incbin "base.gba", 0x4F220, 0x4
.incbin "base.gba", 0x4F224, 0x4
_0804f228:
.incbin "base.gba", 0x4F228, 0x4
.incbin "base.gba", 0x4F22C, 0x4
.incbin "base.gba", 0x4F230, 0x4
.incbin "base.gba", 0x4F234, 0x4
.incbin "base.gba", 0x4F238, 0x4
.incbin "base.gba", 0x4F23C, 0x4
.incbin "base.gba", 0x4F240, 0x4

.incbin "base.gba", 0x4F244, 0x5D0
	thumb_func_end sub_0804f1d8


.incbin "base.gba", 0x4F814, 0x3DC
	thumb_func_start sub_0804fbf0
sub_0804fbf0:
	ldr		r0, _0804fc0c
	ldr		r1, _0804fc10
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804fc0c:	.4byte 0x080d34bc @ m_aioi/maTennis.cpp
_0804fc10:	.4byte 0x00000212
	thumb_func_end sub_0804fbf0

	thumb_func_start sub_0804fc14
sub_0804fc14:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _0804fda0
	str		r0, [r7, #0xc]
	add		r4, r7, #0x0
	add		r4, #0x60
	mov		r5, #0x11
	mov		r6, #0x1
	neg		r6, r6
_0804fc32:
	add		r0, r4, #0x0
	bl		sub_0804f114
	add		r4, #0xc0
	sub		r5, #0x1
	cmp		r5, r6
	bne		_0804fc32
	ldr		r4, _0804fda4
	mov		r0, #0xe0
	bl		sub_0808af94
	add		r2, r0, #0x0
	str		r2, [r4, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xc8
	mov		r0, #0x4
	str		r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xd6
	mov		r1, #0x0
	mov		r3, #0x0
	strh	r3, [r0, #0x0]
	sub		r0, #0x2
	strh	r3, [r0, #0x0]
	add		r0, #0x5
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	add		r2, #0xdb
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, [r4, #0x0]
	add		r1, #0xdb
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x11
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	add		r1, #0xdb
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x21
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	add		r1, #0xdb
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x7f
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	add		r1, #0xdc
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	add		r1, #0xdc
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x3
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r0, _0804fda8
	add		r1, r7, r0
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	ldr		r1, _0804fdac
	add		r0, r7, r1
	strh	r3, [r0, #0x0]
	ldr		r3, _0804fdb0
	add		r1, r7, r3
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x40
	mov		r1, #0x7
	add		r3, r7, #0x0
	add		r3, #0x60
	mov		r4, #0x0
_0804fcdc:
	stmia	r2!, {  r4 }
	lsl		r0, r1, #0x10
	ldr		r1, _0804fdb4
	add		r0, r0, r1
	lsr		r1, r0, #0x10
	cmp		r0, #0x0
	bne		_0804fcdc
	add		r6, r3, #0x0
	mov		r3, #0x12
	mov		r8, r3
	mov		r0, #0x0
	mov		r10, r0
	mov		r1, #0x2
	neg		r1, r1
	mov		r9, r1
	add		r5, r6, #0x0
	add		r5, #0xbf
	add		r4, r6, #0x0
	add		r4, #0x70
_0804fd02:
	add		r0, r6, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r3, r10
	strh	r3, [r4, #0x0]
	mov		r0, #0x0
	strb	r0, [r4, #0xd]
	ldrb	r0, [r5, #0x0]
	mov		r1, r9
	and		r0, r1
	strb	r0, [r5, #0x0]
	mov		r3, r8
	lsl		r0, r3, #0x10
	ldr		r1, _0804fdb4
	add		r0, r0, r1
	add		r5, #0xc0
	add		r4, #0xc0
	add		r6, #0xc0
	lsr		r3, r0, #0x10
	mov		r8, r3
	cmp		r0, #0x0
	bne		_0804fd02
	ldr		r4, _0804fdb8
	ldr		r1, _0804fdbc
	add		r0, r4, r1
	mov		r1, #0x70
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, _0804fda4
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xc0
	add		r2, #0xc4
	bl		sub_0804ef24
	add		r1, r0, #0x0
	str		r1, [r7, #0x5c]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r1, [r7, #0x5c]
	add		r1, #0x6e
	mov		r3, #0xc
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r2
	orr		r0, r3
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x5c]
	ldr		r1, _0804fdc0
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x70
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r2, #0x72
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	bl		sub_0804f028
	ldr		r0, _0804fdc4
	bl		sub_0800223c
	add		r0, r7, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4FD9E, 0x2

_0804fda0:	.4byte 0x080e1e04
_0804fda4:	.4byte 0x0200D58C
_0804fda8:	.4byte 0x00000DE2
_0804fdac:	.4byte 0x00000DE4
_0804fdb0:	.4byte 0x00000DE6
_0804fdb4:	.4byte 0xffff0000
_0804fdb8:	.4byte 0x0200DBC0
_0804fdbc:	.4byte 0xFFFFFE40
_0804fdc0:	.4byte 0x0200D580
_0804fdc4:	.4byte 0x00000B04
	thumb_func_end sub_0804fc14

	thumb_func_start sub_0804fdc8
sub_0804fdc8:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	bl		sub_080706ac
	add		r6, r0, #0x0
	ldr		r1, _0804fe04
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804fe84
	ldr		r0, [r6, #0x58]
	cmp		r0, #0x2
	beq		_0804fee0
	ldr		r0, [r6, #0x5c]
	cmp		r0, #0x1
	beq		_0804fe08
	cmp		r0, #0x1
	blt		_0804fee0
	cmp		r0, #0x4
	bgt		_0804fee0
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x6
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0804fee0

.incbin "base.gba", 0x4FE02, 0x2

_0804fe04:	.4byte 0x00000DE6

_0804fe08:
	ldr		r0, _0804fe78
	ldr		r1, [r0, #0x0]
	mov		r2, #0x98
	lsl		r2, r2, #0x11
	orr		r1, r2
	str		r1, [r0, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x40
	mov		r4, #0x7
	mov		r7, #0x5
	neg		r7, r7
_0804fe1e:
	ldr		r2, [r3, #0x0]
	cmp		r2, #0x0
	beq		_0804fe2e
	add		r2, #0xc4
	ldrb	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
_0804fe2e:
	lsl		r0, r4, #0x10
	ldr		r1, _0804fe7c
	add		r0, r0, r1
	add		r3, #0x4
	lsr		r4, r0, #0x10
	cmp		r0, #0x0
	bgt		_0804fe1e
	mov		r0, #0x15
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x16
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x11
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x1a
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, _0804fe80
	add		r2, r5, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x7f
	and		r0, r1
	strb	r0, [r2, #0x0]
	b		_0804fee0

.incbin "base.gba", 0x4FE76, 0x2

_0804fe78:	.4byte 0x0200DD2C
_0804fe7c:	.4byte 0xffff0000
_0804fe80:	.4byte 0x00000DE6

_0804fe84:
	ldr		r0, [r6, #0x58]
	cmp		r0, #0x2
	bne		_0804fee0
	ldr		r1, _0804fee8
	ldr		r0, _0804feec
	str		r0, [r1, #0x0]
	mov		r0, #0x99
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0xa0
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x9a
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x9b
	mov		r1, #0x1
	bl		sub_08009650
	add		r2, r5, #0x0
	add		r2, #0x40
	mov		r3, #0x7
	mov		r4, #0x4
_0804feb8:
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	beq		_0804fec6
	add		r1, #0xc4
	ldrb	r0, [r1, #0x0]
	orr		r0, r4
	strb	r0, [r1, #0x0]
_0804fec6:
	lsl		r0, r3, #0x10
	ldr		r1, _0804fef0
	add		r0, r0, r1
	add		r2, #0x4
	lsr		r3, r0, #0x10
	cmp		r0, #0x0
	bgt		_0804feb8
	ldr		r1, _0804fef4
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x80
	orr		r1, r2
	strb	r1, [r0, #0x0]
_0804fee0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4FEE6, 0x2

_0804fee8:	.4byte 0x0200DD2C
_0804feec:	.4byte 0xfecfffff
_0804fef0:	.4byte 0xffff0000
_0804fef4:	.4byte 0x00000DE6
	thumb_func_end sub_0804fdc8

	thumb_func_start sub_0804fef8
sub_0804fef8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r5, r0, #0x0
	ldr		r1, _08050004
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804ffc8
	add		r0, r5, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_080526f4
	add		r0, r5, #0x0
	mov		r1, #0x3c
	mov		r2, #0x0
	bl		sub_08052838
	mov		r2, #0xcc
	lsl		r2, r2, #0x3
	add		r7, r5, r2
	ldr		r3, _08050008
	add		r0, r5, r3
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x0]
	ldr		r4, _0805000c
	ldr		r0, _08050010
	mov		r10, r0
	add		r6, r5, r3
	mov		r1, #0x1
	mov		r9, r1
	mov		r2, #0x2
	neg		r2, r2
	mov		r8, r2
_0804ff4c:
	mov		r3, r10
	strh	r4, [r3, #0x0]
	ldr		r0, _08050014
	strh	r4, [r0, #0x0]
	ldr		r1, _08050018
	strh	r4, [r1, #0x0]
	ldr		r2, _0805001c
	strh	r4, [r2, #0x0]
	mov		r0, #0x5
	bl		sub_08009680
	add		r0, r5, #0x0
	bl		sub_08050338
	add		r0, r5, #0x0
	bl		sub_08050b44
	add		r0, r5, #0x0
	bl		sub_080527c8
	ldrb	r1, [r6, #0x0]
	mov		r0, r9
	and		r0, r1
	lsl		r4, r4, #0x10
	cmp		r0, #0x0
	beq		_0804ff98
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	asr		r0, r4, #0x10
	cmp		r0, #0xe
	ble		_0804ff98
	ldrb	r0, [r6, #0x0]
	mov		r3, r8
	and		r0, r3
	strb	r0, [r6, #0x0]
_0804ff98:
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r4, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x1f
	ble		_0804ff4c
	ldr		r0, _08050020
	bl		sub_08002228
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _08050024
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_0804ffc8:
	ldr		r0, _08050028
	ldr		r0, [r0, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08050034
	ldr		r0, [r5, #0x5c]
	ldr		r4, _0805002c
	ldr		r2, [r4, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x70
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r2, #0x74
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	bl		sub_0804f028
	ldr		r0, [r4, #0x0]
	add		r0, #0x7e
	ldrb	r2, [r0, #0x0]
	ldr		r3, _08050030
	add		r1, r5, r3
	strb	r2, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	mov		r2, #0xde
	lsl		r2, r2, #0x4
	b		_08050062

_08050004:	.4byte 0x00000DE6
_08050008:	.4byte 0x0000071F
_0805000c:	.4byte 0x0000FFF1
_08050010:	.4byte 0x0200EB22
_08050014:	.4byte 0x0200EB20
_08050018:	.4byte 0x0200EB1E
_0805001c:	.4byte 0x0200EB24
_08050020:	.4byte 0x00000B04
_08050024:	.4byte 0x0200BABC
_08050028:	.4byte 0x0200D58C
_0805002c:	.4byte 0x0200D580
_08050030:	.4byte 0x00000DE1

_08050034:
	ldr		r0, [r5, #0x5c]
	ldr		r4, _08050100
	ldr		r2, [r4, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x70
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r2, #0x72
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	bl		sub_0804f028
	ldr		r1, [r4, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x7c
	ldrb	r2, [r0, #0x0]
	mov		r3, #0xde
	lsl		r3, r3, #0x4
	add		r0, r5, r3
	strb	r2, [r0, #0x0]
	add		r1, #0x7d
	ldrb	r1, [r1, #0x0]
	ldr		r2, _08050104
_08050062:
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	ldr		r7, _08050108
	ldr		r1, [r7, #0x0]
	add		r1, #0xdb
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x41
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r1, [r7, #0x0]
	add		r1, #0xdc
	ldrb	r2, [r1, #0x0]
	mov		r6, #0x2
	neg		r6, r6
	add		r0, r6, #0x0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r0, [r5, #0x48]
	mov		r4, #0x0
	cmp		r0, #0x0
	beq		_08050092
	add		r4, r0, #0x0
	sub		r4, #0x40
_08050092:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r3, #0x82
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x1b
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	lsr		r1, r1, #0x1f
	ldrb	r2, [r3, #0x0]
	add		r0, r6, #0x0
	and		r0, r2
	orr		r0, r1
	mov		r1, #0x7
	neg		r1, r1
	and		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r1, [r5, #0x58]
	add		r1, #0xbf
	ldrb	r2, [r1, #0x0]
	add		r0, r6, #0x0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0xdb
	ldrb	r0, [r0, #0x0]
	lsl		r2, r0, #0x1b
	lsr		r0, r2, #0x1f
	lsl		r0, r0, #0x2
	add		r1, r5, #0x0
	add		r1, #0x40
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0805010c
	lsr		r0, r2, #0x1f
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	sub		r0, #0x40
	b		_0805010e

.incbin "base.gba", 0x500FE, 0x2

_08050100:	.4byte 0x0200D580
_08050104:	.4byte 0x00000DE1
_08050108:	.4byte 0x0200D58C

_0805010c:
	mov		r0, #0x0
_0805010e:
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, _08050148
	ldr		r0, [r0, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	mov		r0, #0x0
	cmp		r1, #0x0
	bne		_08050130
	mov		r0, #0x4
_08050130:
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805014c
	mov		r0, #0x0
	cmp		r1, #0x0
	bne		_08050140
	mov		r0, #0x4
_08050140:
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	sub		r0, #0x40
	b		_0805014e

_08050148:	.4byte 0x0200D58C

_0805014c:
	mov		r0, #0x0
_0805014e:
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r1, [r5, #0x4c]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08050164
	add		r0, r1, #0x0
	sub		r0, #0x40
_08050164:
	ldr		r1, _080501e4
	add		r4, r5, r1
	ldrb	r1, [r4, #0x0]
	lsl		r1, r1, #0x19
	lsr		r1, r1, #0x1f
	bl		sub_08057918
	ldr		r1, [r5, #0x50]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_0805017e
	add		r0, r1, #0x0
	sub		r0, #0x40
_0805017e:
	ldrb	r1, [r4, #0x0]
	lsl		r1, r1, #0x19
	lsr		r1, r1, #0x1f
	bl		sub_08057734
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_080501fc
	mov		r4, #0x20
	ldr		r2, _080501e8
	mov		r9, r2
	ldr		r3, _080501ec
	mov		r8, r3
	ldr		r7, _080501f0
	ldr		r6, _080501f4
_080501a0:
	strh	r4, [r6, #0x0]
	strh	r4, [r7, #0x0]
	mov		r0, r8
	strh	r4, [r0, #0x0]
	mov		r1, r9
	strh	r4, [r1, #0x0]
	mov		r0, #0x5
	bl		sub_08009680
	add		r0, r5, #0x0
	bl		sub_08050338
	add		r0, r5, #0x0
	bl		sub_08050b44
	add		r0, r5, #0x0
	bl		sub_08051e74
	add		r0, r5, #0x0
	bl		sub_080527c8
	add		r0, r5, #0x0
	bl		sub_08052778
	add		r0, r5, #0x0
	bl		sub_080b7690
	lsl		r0, r4, #0x10
	ldr		r2, _080501f8
	add		r0, r0, r2
	lsr		r4, r0, #0x10
	cmp		r0, #0x0
	bge		_080501a0
	b		_08050250

_080501e4:	.4byte 0x00000DE6
_080501e8:	.4byte 0x0200EB24
_080501ec:	.4byte 0x0200EB1E
_080501f0:	.4byte 0x0200EB20
_080501f4:	.4byte 0x0200EB22
_080501f8:	.4byte 0xffff0000

_080501fc:
	mov		r0, #0xf
	ldr		r3, _0805029c
	mov		r9, r3
	ldr		r1, _080502a0
	mov		r8, r1
	ldr		r7, _080502a4
	ldr		r6, _080502a8
_0805020a:
	lsl		r4, r0, #0x10
	asr		r4, r4, #0x10
	neg		r0, r4
	strh	r0, [r6, #0x0]
	strh	r0, [r7, #0x0]
	mov		r2, r8
	strh	r0, [r2, #0x0]
	mov		r3, r9
	strh	r0, [r3, #0x0]
	mov		r0, #0x5
	bl		sub_08009680
	add		r0, r5, #0x0
	bl		sub_08050338
	add		r0, r5, #0x0
	bl		sub_08050b44
	add		r0, r5, #0x0
	bl		sub_08051e74
	add		r0, r5, #0x0
	bl		sub_080527c8
	add		r0, r5, #0x0
	bl		sub_08052778
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	lsl		r4, r4, #0x10
	lsr		r0, r4, #0x10
	cmp		r4, #0x0
	bge		_0805020a
_08050250:
	ldr		r0, _080502ac
	ldr		r1, [r0, #0x0]
	add		r1, #0xdc
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x3
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r0, _080502b0
	add		r3, r5, r0
	ldrb	r2, [r3, #0x0]
	lsl		r1, r2, #0x1e
	lsr		r1, r1, #0x1e
	add		r1, #0x1
	mov		r0, #0x3
	and		r1, r0
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	mov		r1, #0x9
	neg		r1, r1
	and		r0, r1
	sub		r1, #0x8
	and		r0, r1
	sub		r1, #0x10
	and		r0, r1
	sub		r1, #0x20
	and		r0, r1
	strb	r0, [r3, #0x0]
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805029c:	.4byte 0x0200EB24
_080502a0:	.4byte 0x0200EB1E
_080502a4:	.4byte 0x0200EB20
_080502a8:	.4byte 0x0200EB22
_080502ac:	.4byte 0x0200D58C
_080502b0:	.4byte 0x00000DE6
	thumb_func_end sub_0804fef8

	thumb_func_start sub_080502b4
sub_080502b4:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	ldr		r0, _08050330
	ldr		r3, [r0, #0x0]
	add		r4, r3, #0x0
	add		r4, #0xdc
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050328
	add		r2, r3, #0x0
	add		r2, #0xcc
	ldr		r1, [r5, #0x44]
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	add		r2, #0x4
	add		r1, #0xa8
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	lsl		r0, r6, #0x1
	add		r1, r3, #0x0
	add		r1, #0xd4
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r4, #0x0]
	ldr		r0, _08050334
	add		r2, r5, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08050314
	add		r1, r0, #0x0
	sub		r1, #0x40
_08050314:
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	add		r1, #0xbf
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
_08050328:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5032E, 0x2

_08050330:	.4byte 0x0200D58C
_08050334:	.4byte 0x00000DE6
	thumb_func_end sub_080502b4

	thumb_func_start sub_08050338
sub_08050338:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x34
	add		r7, r0, #0x0
	ldr		r0, [r7, #0x48]
	mov		r1, #0x0
	mov		r10, r1
	cmp		r0, #0x0
	beq		_08050354
	sub		r0, #0x40
	mov		r10, r0
_08050354:
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x1f
	str		r1, [sp, #0x28]
	cmp		r0, #0x0
	bne		_08050378
	ldr		r0, _08050374
	ldr		r1, [r0, #0x0]
	add		r1, #0xdb
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	b		_08050556

.incbin "base.gba", 0x50372, 0x2

_08050374:	.4byte 0x0200D58C

_08050378:
	mov		r0, r10
	add		r0, #0xe8
	mov		r1, r10
	add		r1, #0xf4
	ldr		r3, [r0, #0x0]
	ldr		r2, [r1, #0x0]
	str		r0, [sp, #0x24]
	mov		r9, r1
	cmp		r3, r2
	bge		_0805039c
	ldr		r1, _08050398
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7b
	ldrb	r3, [r0, #0x0]
	b		_080503ac

_08050398:	.4byte 0x080d34e4

_0805039c:
	ldr		r1, _08050460
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7b
	ldrb	r0, [r0, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
_080503ac:
	mov		r1, sp
	mov		r2, #0x0
	ldr		r0, _08050464
	strh	r0, [r1, #0x0]
	mov		r6, sp
	add		r6, #0x2
	mov		r0, #0xc
	strh	r0, [r6, #0x0]
	add		r5, sp, #0x4
	mov		r0, #0x64
	strh	r0, [r5, #0x0]
	mov		r4, sp
	add		r4, #0x6
	strh	r2, [r4, #0x0]
	sub		r2, #0xd0
	lsl		r3, r3, #0x10
	mov		r8, r3
	asr		r3, r3, #0x10
	add		r0, r7, #0x0
	bl		sub_08050eb8
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_080503de
	b		_08050564
_080503de:
	ldr		r2, _08050468
	add		r0, r7, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050402
	ldr		r0, _0805046c
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050402
	mov		r0, #0x29
	bl		sub_0808f690
_08050402:
	mov		r4, sp
	mov		r5, #0x2
	ldrsh	r3, [r4, r5]
	ldr		r0, _08050470
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r6, [r0, #0x0]
	lsr		r0, r6, #0x1
	add		r1, r3, r0
	mov		r4, r10
	add		r4, #0x40
	mov		r2, r10
	add		r2, #0xec
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_08050424
	add		r0, #0xff
_08050424:
	asr		r0, r0, #0x8
	add		r0, #0x1
	cmp		r1, r0
	bge		_080504c4
	ldr		r0, [sp, #0x24]
	ldr		r1, [r0, #0x0]
	mov		r5, r9
	ldr		r0, [r5, #0x0]
	cmp		r1, r0
	beq		_080504c4
	add		r0, r3, r6
	lsl		r0, r0, #0x8
	add		r0, #0xff
	str		r0, [r2, #0x0]
	add		r3, r4, #0x0
	mov		r2, #0x85
	lsl		r2, r2, #0x1
	add		r2, r10
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r1, r0, #0x4
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	cmp		r0, #0x0
	bge		_08050474
	neg		r0, r1
	b		_08050476

.incbin "base.gba", 0x5045E, 0x2

_08050460:	.4byte 0x080d34e4
_08050464:	.4byte 0x0000FF9C
_08050468:	.4byte 0x00000DE6
_0805046c:	.4byte 0x0200D58C
_08050470:	.4byte 0x0200D580

_08050474:
	add		r0, r1, #0x0
_08050476:
	cmp		r0, #0x0
	bge		_0805047c
	add		r0, #0xff
_0805047c:
	asr		r1, r0, #0x8
	add		r0, r3, #0x0
	add		r0, #0xc0
	strh	r1, [r0, #0x0]
	mov		r2, #0x85
	lsl		r2, r2, #0x1
	add		r2, r10
	mov		r5, #0x0
	ldrsh	r1, [r2, r5]
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	cmp		r0, #0x0
	bge		_0805049a
	add		r0, #0xff
_0805049a:
	asr		r0, r0, #0x8
	strh	r0, [r2, #0x0]
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r1, r10
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	bge		_080504ae
	add		r0, #0x3
_080504ae:
	asr		r0, r0, #0x2
	strh	r0, [r1, #0x0]
	ldr		r3, _080504c0
	add		r2, r7, r3
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x8
	orr		r0, r1
	strb	r0, [r2, #0x0]
	b		_08050510

_080504c0:	.4byte 0x00000DE6

_080504c4:
	ldr		r1, [r7, #0x50]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_080504d0
	add		r0, r1, #0x0
	sub		r0, #0x40
_080504d0:
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r4, [sp, #0x28]
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r4, #0x0]
	ldr		r5, [sp, #0x24]
	ldr		r0, [r5, #0x0]
	add		r0, #0xff
	str		r0, [r5, #0x0]
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	add		r0, r10
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r0, r10
	strh	r1, [r0, #0x0]
	ldr		r0, _0805055c
	ldr		r0, [r0, #0x0]
	add		r0, #0x88
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r10
	strh	r1, [r0, #0x0]
_08050510:
	ldr		r3, _08050560
	ldr		r1, [r3, #0x0]
	add		r1, #0xdc
	ldrb	r2, [r1, #0x0]
	mov		r4, #0x2
	neg		r4, r4
	add		r0, r4, #0x0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r1, [r3, #0x0]
	add		r1, #0xdb
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	mov		r0, r10
	bl		sub_08056d20
	ldr		r0, [r7, #0x44]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08050542
	add		r1, r0, #0x0
	sub		r1, #0x40
_08050542:
	add		r0, r1, #0x0
	bl		sub_08055898
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r10
	ldr		r1, [r0, #0x0]
	add		r1, #0xbf
	ldrb	r2, [r1, #0x0]
	add		r0, r4, #0x0
_08050556:
	and		r0, r2
	strb	r0, [r1, #0x0]
	b		_08050b26

_0805055c:	.4byte 0x0200D580
_08050560:	.4byte 0x0200D58C

_08050564:
	ldr		r2, _0805060c
	ldr		r3, [r2, #0x0]
	ldr		r4, [r3, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	mov		r1, r8
	str		r1, [sp, #0x2C]
	cmp		r0, #0x0
	bne		_0805057e
	b		_08050790
_0805057e:
	mov		r2, #0xf
	mov		r8, r2
	mov		r5, #0xd4
	add		r5, r10
	mov		r9, r5
	ldr		r0, _08050610
	add		r0, r7, r0
	str		r0, [sp, #0x30]
	mov		r6, #0x89
	lsl		r6, r6, #0x1
	add		r6, r10
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r1, r10
	str		r1, [sp, #0x8]
	add		r2, #0xfb
	add		r2, r10
	str		r2, [sp, #0xC]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r3, r10
	str		r3, [sp, #0x10]
	mov		r5, #0x86
	lsl		r5, r5, #0x1
	add		r5, r10
	str		r5, [sp, #0x14]
	mov		r0, #0x87
	lsl		r0, r0, #0x1
	add		r0, r10
	str		r0, [sp, #0x18]
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r1, r10
	str		r1, [sp, #0x1C]
	mov		r2, r10
	add		r2, #0xec
	str		r2, [sp, #0x20]
_080505c8:
	mov		r3, #0x8
	ldrsh	r2, [r4, r3]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	ldr		r5, [sp, #0x2C]
	asr		r3, r5, #0x10
	bl		sub_08050eb8
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_080505e0
	b		_08050760
_080505e0:
	ldrb	r0, [r4, #0x16]
	mov		r1, r8
	and		r1, r0
	cmp		r1, #0x0
	beq		_0805063a
	cmp		r1, #0x1
	beq		_080505f0
	b		_08050b26
_080505f0:
	ldrb	r0, [r4, #0x17]
	lsl		r2, r0, #0x1e
	lsr		r0, r2, #0x1c
	add		r1, r7, #0x0
	add		r1, #0x40
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08050614
	lsr		r0, r2, #0x1c
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	sub		r0, #0x40
	b		_08050616

_0805060c:	.4byte 0x080d34e0
_08050610:	.4byte 0x00000DE6

_08050614:
	mov		r0, #0x0
_08050616:
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x1
	orr		r0, r3
	strb	r0, [r1, #0x0]
	mov		r5, r9
	ldrh	r0, [r5, #0x0]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	strh	r0, [r5, #0x0]
	ldr		r2, _08050658
	ldr		r0, [r2, #0x0]
	add		r0, #0xda
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
_0805063a:
	ldr		r5, [sp, #0x30]
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050666
	ldrb	r0, [r4, #0x16]
	mov		r1, #0x30
	and		r1, r0
	cmp		r1, #0x10
	beq		_0805065c
	cmp		r1, #0x20
	beq		_08050660
	mov		r0, #0x27
	b		_08050662

_08050658:	.4byte 0x0200D58C

_0805065c:
	mov		r0, #0x2d
	b		_08050662
_08050660:
	mov		r0, #0x2e
_08050662:
	bl		sub_0808f690
_08050666:
	ldr		r0, [sp, #0x30]
	ldrb	r2, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r2
	cmp		r0, #0x0
	beq		_080506a2
	ldr		r1, _0805075c
	ldr		r0, [r1, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x1b
	ldrb	r0, [r4, #0x17]
	lsl		r0, r0, #0x1e
	lsr		r1, r1, #0x1f
	lsr		r0, r0, #0x1e
	cmp		r1, r0
	beq		_080506a2
	mov		r0, #0x8
	and		r0, r2
	cmp		r0, #0x0
	beq		_08050696
	add		r0, r7, #0x0
	bl		sub_08052380
_08050696:
	ldrb	r1, [r6, #0x0]
	lsl		r1, r1, #0x1f
	lsr		r1, r1, #0x1f
	add		r0, r7, #0x0
	bl		sub_080502b4
_080506a2:
	ldrh	r0, [r4, #0xa]
	ldr		r2, [sp, #0x8]
	strh	r0, [r2, #0x0]
	ldrh	r0, [r4, #0xc]
	ldr		r3, [sp, #0xC]
	strh	r0, [r3, #0x0]
	ldrh	r0, [r4, #0xe]
	ldr		r5, [sp, #0x10]
	strh	r0, [r5, #0x0]
	ldrh	r0, [r4, #0x10]
	ldr		r1, [sp, #0x14]
	strh	r0, [r1, #0x0]
	ldrh	r0, [r4, #0x12]
	ldr		r2, [sp, #0x18]
	strh	r0, [r2, #0x0]
	ldrh	r0, [r4, #0x14]
	ldr		r3, [sp, #0x1C]
	strh	r0, [r3, #0x0]
	ldrb	r0, [r6, #0x0]
	mov		r5, #0x7
	neg		r5, r5
	and		r0, r5
	strb	r0, [r6, #0x0]
	ldr		r1, [sp, #0x20]
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r2, [sp, #0x30]
	ldrb	r0, [r2, #0x0]
	mov		r3, #0x11
	neg		r3, r3
	and		r0, r3
	sub		r5, #0x2
	and		r0, r5
	strb	r0, [r2, #0x0]
	ldrb	r1, [r4, #0x17]
	lsl		r1, r1, #0x1e
	lsr		r1, r1, #0x1e
	add		r2, r1, #0x0
	mov		r0, #0x1
	and		r2, r0
	ldrb	r3, [r6, #0x0]
	add		r5, #0x7
	add		r0, r5, #0x0
	and		r0, r3
	orr		r0, r2
	strb	r0, [r6, #0x0]
	mov		r2, #0x1
	and		r1, r2
	cmp		r1, #0x0
	bne		_08050726
	ldr		r3, _0805075c
	ldr		r0, [r3, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xda
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0xfe
	bhi		_0805071a
	add		r0, #0x1
	strb	r0, [r1, #0x0]
_0805071a:
	ldr		r0, [r7, #0x54]
	add		r0, #0xbf
	ldrb	r2, [r0, #0x0]
	add		r1, r5, #0x0
	and		r1, r2
	strb	r1, [r0, #0x0]
_08050726:
	ldr		r5, _0805075c
	ldr		r2, [r5, #0x0]
	ldrb	r1, [r4, #0x16]
	lsr		r1, r1, #0x7
	add		r2, #0xdc
	mov		r0, #0x1
	and		r1, r0
	and		r1, r0
	ldrb	r0, [r2, #0x0]
	mov		r3, #0x2
	neg		r3, r3
	and		r0, r3
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r0, r10
	bl		sub_08056d20
	ldr		r0, [r7, #0x44]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08050754
	add		r1, r0, #0x0
	sub		r1, #0x40
_08050754:
	add		r0, r1, #0x0
	bl		sub_08055898
	b		_08050b26

_0805075c:	.4byte 0x0200D58C

_08050760:
	ldr		r5, _080508d8
	ldr		r2, [r5, #0x0]
	add		r2, #0xdb
	ldrb	r1, [r2, #0x0]
	lsl		r0, r1, #0x1c
	lsr		r0, r0, #0x1c
	sub		r0, #0x1
	mov		r3, r8
	and		r0, r3
	mov		r5, #0x10
	neg		r5, r5
	and		r1, r5
	orr		r1, r0
	strb	r1, [r2, #0x0]
	add		r4, #0x18
	ldr		r1, _080508d8
	ldr		r0, [r1, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	mov		r0, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08050790
	b		_080505c8
_08050790:
	mov		r2, #0x0
	ldr		r3, [sp, #0x24]
	ldr		r1, [r3, #0x0]
	cmp		r1, #0x0
	bge		_0805079c
	add		r1, #0xff
_0805079c:
	asr		r1, r1, #0x8
	mov		r0, #0xd0
	neg		r0, r0
	cmp		r1, r0
	bgt		_080507a8
	mov		r2, #0x1
_080507a8:
	add		r6, r2, #0x0
	lsl		r1, r6, #0x2
	add		r0, r7, #0x0
	add		r0, #0x40
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r4, #0x0
	cmp		r0, #0x0
	beq		_080507be
	add		r4, r0, #0x0
	sub		r4, #0x40
_080507be:
	mov		r5, #0x82
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1f
	cmp		r0, #0x0
	bne		_080507ce
	b		_080508e0
_080507ce:
	mov		r3, sp
	add		r5, r4, #0x0
	add		r5, #0xe4
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_080507dc
	add		r0, #0xff
_080507dc:
	asr		r0, r0, #0x8
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldr		r1, [r2, #0x0]
	add		r1, #0xaa
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	strh	r0, [r3, #0x0]
	add		r3, r4, #0x0
	add		r3, #0xec
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	bge		_080507fa
	add		r0, #0xff
_080507fa:
	ldr		r1, [r2, #0x0]
	add		r1, #0xac
	asr		r0, r0, #0x8
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r1, sp
	strh		r0, [r1, #0x2]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_08050810
	add		r0, #0xff
_08050810:
	ldr		r1, [r2, #0x0]
	add		r1, #0xaa
	asr		r0, r0, #0x8
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r2, sp
	strh		r0, [r2, #0x4]
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	bge		_08050826
	add		r0, #0xff
_08050826:
	asr		r0, r0, #0x8
	mov		r3, sp
	strh		r0, [r3, #0x6]
	add		r0, r4, #0x0
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08050838
	add		r0, #0xff
_08050838:
	lsl		r2, r0, #0x8
	asr		r2, r2, #0x10
	ldr		r5, [sp, #0x2C]
	asr		r3, r5, #0x10
	add		r0, r7, #0x0
	mov		r1, sp
	bl		sub_08050eb8
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_080508e0
	ldr		r1, _080508dc
	add		r0, r7, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805087c
	add		r0, r4, #0x0
	add		r0, #0xfc
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x16
	bhi		_0805087c
	ldr		r0, _080508d8
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805087c
	mov		r0, #0x29
	bl		sub_0808f690
_0805087c:
	ldr		r2, _080508dc
	add		r0, r7, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08050890
	add		r0, r7, #0x0
	bl		sub_08052380
_08050890:
	mov		r1, #0x0
	cmp		r6, #0x0
	bne		_08050898
	mov		r1, #0x1
_08050898:
	add		r0, r7, #0x0
	bl		sub_080502b4
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x9
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r10
	ldr		r1, [r0, #0x0]
	add		r1, #0xbf
	ldrb	r3, [r1, #0x0]
	mov		r2, #0x2
	neg		r2, r2
	add		r0, r2, #0x0
	and		r0, r3
	strb	r0, [r1, #0x0]
	ldr		r0, _080508d8
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	and		r2, r1
	strb	r2, [r0, #0x0]
	ldr		r3, [sp, #0x24]
	ldr		r0, [r3, #0x0]
	add		r0, #0xff
	str		r0, [r3, #0x0]
	b		_08050a28

.incbin "base.gba", 0x508D6, 0x2

_080508d8:	.4byte 0x0200D58C
_080508dc:	.4byte 0x00000DE6

_080508e0:
	ldr		r0, [r7, #0x4c]
	mov		r5, #0x0
	cmp		r0, #0x0
	beq		_080508ec
	add		r5, r0, #0x0
	sub		r5, #0x40
_080508ec:
	mov		r2, sp
	add		r1, r5, #0x0
	add		r1, #0xe4
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_080508fa
	add		r0, #0xff
_080508fa:
	asr		r0, r0, #0x8
	sub		r0, #0xc
	strh	r0, [r2, #0x0]
	mov		r0, #0x20
	mov		r2, sp
	strh		r0, [r2, #0x2]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_0805090e
	add		r0, #0xff
_0805090e:
	asr		r0, r0, #0x8
	add		r0, #0xc
	mov		r3, sp
	strh		r0, [r3, #0x4]
	mov		r0, #0x0
	strh		r0, [r3, #0x6]
	add		r0, r5, #0x0
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08050926
	add		r0, #0xff
_08050926:
	asr		r2, r0, #0x8
	add		r2, #0x8
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	ldr		r0, [sp, #0x2C]
	asr		r4, r0, #0x10
	add		r0, r7, #0x0
	mov		r1, sp
	add		r3, r4, #0x0
	bl		sub_08050eb8
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x0
	beq		_08050980
	ldr		r1, _08050978
	add		r0, r7, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050968
	ldr		r0, _0805097c
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050968
	mov		r0, #0x29
	bl		sub_0808f690
_08050968:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08050ab8

.incbin "base.gba", 0x50976, 0x2

_08050978:	.4byte 0x00000DE6
_0805097c:	.4byte 0x0200D58C

_08050980:
	ldr		r0, [r7, #0x50]
	mov		r5, #0x0
	cmp		r0, #0x0
	beq		_0805098c
	add		r5, r0, #0x0
	sub		r5, #0x40
_0805098c:
	mov		r2, sp
	add		r1, r5, #0x0
	add		r1, #0xe4
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_0805099a
	add		r0, #0xff
_0805099a:
	asr		r0, r0, #0x8
	sub		r0, #0xa
	strh	r0, [r2, #0x0]
	mov		r0, #0x1a
	mov		r2, sp
	strh		r0, [r2, #0x2]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_080509ae
	add		r0, #0xff
_080509ae:
	asr		r0, r0, #0x8
	add		r0, #0xa
	mov		r1, sp
	strh		r0, [r1, #0x4]
	strh		r3, [r1, #0x6]
	add		r0, r5, #0x0
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_080509c4
	add		r0, #0xff
_080509c4:
	lsl		r2, r0, #0x8
	asr		r2, r2, #0x10
	add		r3, r4, #0x0
	add		r0, r7, #0x0
	mov		r1, sp
	bl		sub_08050eb8
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x0
	beq		_08050a70
	ldr		r2, _08050a64
	add		r0, r7, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_080509fe
	ldr		r0, _08050a68
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_080509fe
	mov		r0, #0x29
	bl		sub_0808f690
_080509fe:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r10
	ldr		r2, [r0, #0x0]
	add		r2, #0xbf
	ldrb	r3, [r2, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r1, #0x0
	and		r0, r3
	strb	r0, [r2, #0x0]
	ldr		r3, [sp, #0x28]
	ldrb	r0, [r3, #0x0]
	and		r1, r0
	strb	r1, [r3, #0x0]
_08050a28:
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r1, r10
	mov		r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp		r0, #0x0
	bge		_08050a38
	add		r0, #0x3
_08050a38:
	asr		r0, r0, #0x2
	strh	r0, [r1, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x1
	add		r1, r10
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	neg		r0, r0
	cmp		r0, #0x0
	bge		_08050a4e
	add		r0, #0x3
_08050a4e:
	asr		r0, r0, #0x2
	strh	r0, [r1, #0x0]
	ldr		r0, _08050a6c
	ldr		r0, [r0, #0x0]
	add		r0, #0x88
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r10
	strh	r1, [r0, #0x0]
	b		_08050b26

_08050a64:	.4byte 0x00000DE6
_08050a68:	.4byte 0x0200D58C
_08050a6c:	.4byte 0x0200D580

_08050a70:
	mov		r1, sp
	mov		r0, #0xf8
	lsl		r0, r0, #0x8
	strh	r0, [r1, #0x0]
	mov		r0, #0x50
	strh		r0, [r1, #0x2]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	strh		r0, [r1, #0x4]
	strh		r2, [r1, #0x6]
	ldr		r2, _08050b38
	add		r0, r7, #0x0
	add		r3, r4, #0x0
	bl		sub_08050eb8
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08050b26
	ldr		r1, _08050b3c
	add		r0, r7, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050ab8
	ldr		r0, _08050b40
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050ab8
	mov		r0, #0x29
	bl		sub_0808f690
_08050ab8:
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r10
	ldr		r2, [r0, #0x0]
	add		r2, #0xbf
	ldrb	r3, [r2, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r1, #0x0
	and		r0, r3
	strb	r0, [r2, #0x0]
	ldr		r2, [sp, #0x28]
	ldrb	r0, [r2, #0x0]
	and		r1, r0
	strb	r1, [r2, #0x0]
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r2, r10
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x5
	cmp		r0, #0x0
	bge		_08050aec
	add		r0, #0xff
_08050aec:
	asr		r0, r0, #0x8
	strh	r0, [r2, #0x0]
	mov		r2, #0x85
	lsl		r2, r2, #0x1
	add		r2, r10
	mov		r4, #0x0
	ldrsh	r1, [r2, r4]
	neg		r1, r1
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x5
	cmp		r0, #0x0
	bge		_08050b08
	add		r0, #0xff
_08050b08:
	asr		r0, r0, #0x8
	strh	r0, [r2, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r2, r10
	mov		r5, #0x0
	ldrsh	r1, [r2, r5]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x6
	cmp		r0, #0x0
	bge		_08050b22
	add		r0, #0xff
_08050b22:
	asr		r0, r0, #0x8
	strh	r0, [r2, #0x0]
_08050b26:
	add		sp, #0x34
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x50B36, 0x2

_08050b38:	.4byte 0xFFFFFDD8
_08050b3c:	.4byte 0x00000DE6
_08050b40:	.4byte 0x0200D58C
	thumb_func_end sub_08050338

	thumb_func_start sub_08050b44
sub_08050b44:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x48]
	mov		r7, #0x0
	cmp		r0, #0x0
	beq		_08050b5a
	add		r7, r0, #0x0
	sub		r7, #0x40
_08050b5a:
	add		r1, r7, #0x0
	add		r1, #0xec
	ldr		r2, _08050c18
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	mov		r8, r2
	cmp		r1, r0
	beq		_08050b74
	b		_08050ea8
_08050b74:
	mov		r1, #0x89
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050bb6
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_08050bb6
	ldr		r4, _08050c1c
	add		r0, r5, r4
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050bb6
	ldr		r0, _08050c20
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050bb6
	mov		r0, #0x28
	bl		sub_0808f690
_08050bb6:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x7c
	ldrb	r2, [r0, #0x0]
	mov		r3, #0xde
	lsl		r3, r3, #0x4
	add		r0, r5, r3
	strb	r2, [r0, #0x0]
	add		r1, #0x7d
	ldrb	r1, [r1, #0x0]
	ldr		r4, _08050c24
	add		r0, r5, r4
	strb	r1, [r0, #0x0]
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	ldrb	r3, [r4, #0x0]
	lsl		r0, r3, #0x1d
	lsr		r0, r0, #0x1e
	cmp		r0, #0x1
	bls		_08050c28
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x1
	bic		r1, r0
	add		r0, r5, #0x0
	bl		sub_08052280
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08050bf8
	b		_08050ea8
_08050bf8:
	ldr		r1, _08050c1c
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08050c10
	add		r0, r5, #0x0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_080526f4
_08050c10:
	ldrb	r1, [r4, #0x0]
	lsl		r1, r1, #0x1f
	lsr		r1, r1, #0x1f
	b		_08050e54

_08050c18:	.4byte 0x080d34e8
_08050c1c:	.4byte 0x00000DE6
_08050c20:	.4byte 0x0200D58C
_08050c24:	.4byte 0x00000DE1

_08050c28:
	add		r1, r7, #0x0
	add		r1, #0xe8
	ldr		r0, [r1, #0x0]
	mov		r4, #0xd0
	lsl		r4, r4, #0x8
	add		r2, r0, r4
	mov		r0, #0x1
	and		r0, r3
	mov		r12, r1
	cmp		r0, #0x0
	beq		_08050c46
	neg		r0, r2
	cmp		r0, #0x0
	bgt		_08050c4a
	b		_08050c84
_08050c46:
	cmp		r2, #0x0
	ble		_08050c84
_08050c4a:
	ldr		r0, _08050c80
	ldr		r0, [r0, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050c60
	add		r0, r5, #0x0
	bl		sub_08052380
_08050c60:
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	ldrb	r0, [r4, #0x0]
	mov		r6, #0x1
	add		r1, r6, #0x0
	bic		r1, r0
	add		r0, r5, #0x0
	bl		sub_08052280
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08050c7c
	b		_08050ea8
_08050c7c:
	b		_08050e4e

.incbin "base.gba", 0x50C7E, 0x2

_08050c80:	.4byte 0x0200D58C

_08050c84:
	ldr		r1, _08050cc0
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050c94
	b		_08050dc0
_08050c94:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r3, r0, #0x8
	ldr		r2, _08050cc4
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	mov		r9, r2
	cmp		r0, #0x0
	beq		_08050cc8
	add		r1, r7, #0x0
	add		r1, #0xe4
	ldr		r0, [r1, #0x0]
	add		r2, r0, r3
	b		_08050cd0

.incbin "base.gba", 0x50CBE, 0x2

_08050cc0:	.4byte 0x00000DE6
_08050cc4:	.4byte 0x080d34ec

_08050cc8:
	add		r1, r7, #0x0
	add		r1, #0xe4
	ldr		r0, [r1, #0x0]
	sub		r2, r3, r0
_08050cd0:
	add		r6, r1, #0x0
	mov		r3, r12
	ldr		r0, [r3, #0x0]
	mov		r1, #0xd0
	lsl		r1, r1, #0x8
	add		r4, r0, r1
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x76
	add		r1, #0x7a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	ldrb	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r3, r0, #0x8
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08050d08
	sub		r0, r3, r4
	b		_08050d0a
_08050d08:
	add		r0, r4, r3
_08050d0a:
	cmp		r2, #0x0
	blt		_08050d12
	cmp		r0, #0x0
	bge		_08050d34
_08050d12:
	mov		r2, #0x89
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	ldrb	r0, [r4, #0x0]
	mov		r6, #0x1
	add		r1, r6, #0x0
	bic		r1, r0
	add		r0, r5, #0x0
	bl		sub_08052280
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08050d2e
	b		_08050ea8
_08050d2e:
	add		r0, r5, #0x0
	mov		r1, #0x2
	b		_08050e48
_08050d34:
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	sub		r0, #0x48
	lsl		r0, r0, #0x8
	ldr		r2, [r6, #0x0]
	cmp		r2, r0
	blt		_08050d68
	mov		r0, #0x48
	sub		r0, r0, r1
	lsl		r0, r0, #0x8
	cmp		r2, r0
	bgt		_08050d68
	ldr		r4, _08050d9c
	add		r0, r1, r4
	lsl		r0, r0, #0x8
	mov		r3, r12
	ldr		r2, [r3, #0x0]
	cmp		r2, r0
	blt		_08050d68
	lsl		r0, r1, #0x8
	cmn		r2, r0
	ble		_08050da0
_08050d68:
	mov		r4, r8
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r2, [r0, #0x0]
	add		r3, r2, #0x0
	add		r3, #0x48
	lsl		r0, r3, #0x8
	ldr		r1, [r6, #0x0]
	cmn		r1, r0
	blt		_08050e2a
	cmp		r1, r0
	bgt		_08050e2a
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	lsl		r0, r0, #0x8
	mov		r3, r12
	ldr		r1, [r3, #0x0]
	cmn		r1, r0
	blt		_08050e2a
	lsl		r0, r2, #0x8
	cmp		r1, r0
	bgt		_08050e2a
	b		_08050e60

.incbin "base.gba", 0x50D9A, 0x2

_08050d9c:	.4byte 0xFFFFFE60

_08050da0:
	ldr		r3, _08050dbc
	add		r0, r5, r3
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08050e92
	add		r0, r5, #0x0
	bl		sub_08052380
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08050ea8
	b		_08050e92

_08050dbc:	.4byte 0x00000DE6

_08050dc0:
	add		r1, r7, #0x0
	add		r1, #0xe4
	mov		r4, r8
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r2, [r0, #0x0]
	add		r0, r2, #0x0
	sub		r0, #0x48
	lsl		r0, r0, #0x8
	ldr		r3, [r1, #0x0]
	add		r6, r1, #0x0
	cmp		r3, r0
	blt		_08050dfa
	mov		r0, #0x48
	sub		r0, r0, r2
	lsl		r0, r0, #0x8
	cmp		r3, r0
	bgt		_08050dfa
	ldr		r1, _08050e5c
	add		r0, r2, r1
	lsl		r0, r0, #0x8
	mov		r3, r12
	ldr		r1, [r3, #0x0]
	cmp		r1, r0
	blt		_08050dfa
	lsl		r0, r2, #0x8
	cmn		r1, r0
	ble		_08050e92
_08050dfa:
	mov		r4, r8
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r2, [r0, #0x0]
	add		r3, r2, #0x0
	add		r3, #0x48
	lsl		r0, r3, #0x8
	ldr		r1, [r6, #0x0]
	cmn		r1, r0
	blt		_08050e2a
	cmp		r1, r0
	bgt		_08050e2a
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	lsl		r0, r0, #0x8
	mov		r3, r12
	ldr		r1, [r3, #0x0]
	cmn		r1, r0
	blt		_08050e2a
	lsl		r0, r2, #0x8
	cmp		r1, r0
	ble		_08050e60
_08050e2a:
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	ldrb	r0, [r4, #0x0]
	mov		r6, #0x1
	add		r1, r6, #0x0
	bic		r1, r0
	add		r0, r5, #0x0
	bl		sub_08052280
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08050ea8
	add		r0, r5, #0x0
	mov		r1, #0x5
_08050e48:
	mov		r2, #0x0
	bl		sub_080526f4
_08050e4e:
	ldrb	r0, [r4, #0x0]
	add		r1, r6, #0x0
	bic		r1, r0
_08050e54:
	add		r0, r5, #0x0
	bl		sub_080502b4
	b		_08050e92

_08050e5c:	.4byte 0xFFFFFE60

_08050e60:
	mov		r1, #0x89
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1d
	lsr		r0, r0, #0x1e
	cmp		r0, #0x1
	bhi		_08050e92
	ldr		r2, _08050eb4
	add		r4, r5, r2
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08050e8a
	add		r0, r5, #0x0
	bl		sub_08052380
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08050ea8
_08050e8a:
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x10
	orr		r0, r1
	strb	r0, [r4, #0x0]
_08050e92:
	ldr		r3, _08050eb4
	add		r2, r5, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050ea8
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
_08050ea8:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08050eb4:	.4byte 0x00000DE6
	thumb_func_end sub_08050b44

	thumb_func_start sub_08050eb8
sub_08050eb8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r8, r1
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r9, r2
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	mov		r10, r3
	ldr		r0, [r0, #0x48]
	mov		r1, #0x0
	mov		r12, r1
	cmp		r0, #0x0
	beq		_08050ee0
	sub		r0, #0x40
	mov		r12, r0
_08050ee0:
	mov		r0, r12
	add		r0, #0xe4
	ldr		r1, [r0, #0x0]
	str		r0, [sp, #0x0]
	cmp		r1, #0x0
	bge		_08050eee
	add		r1, #0xff
_08050eee:
	asr		r1, r1, #0x8
	ldr		r2, _08050fec
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r5, [r0, #0x0]
	sub		r1, r1, r5
	mov		r3, r8
	mov		r0, #0x4
	ldrsh	r4, [r3, r0]
	cmp		r1, r4
	ble		_08050f1a
	mov		r0, r12
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08050f12
	add		r0, #0xff
_08050f12:
	asr		r0, r0, #0x8
	sub		r0, r0, r5
	cmp		r0, r4
	bgt		_08050f56
_08050f1a:
	ldr		r2, [sp, #0x0]
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_08050f24
	add		r1, #0xff
_08050f24:
	asr		r1, r1, #0x8
	ldr		r0, _08050ff0
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r4, [r0, #0x0]
	add		r1, r1, r4
	mov		r3, r8
	mov		r5, #0x0
	ldrsh	r2, [r3, r5]
	mov		r7, r12
	add		r7, #0xe8
	mov		r6, r12
	add		r6, #0xf4
	cmp		r1, r2
	bge		_08050fbc
	mov		r0, r12
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08050f4e
	add		r0, #0xff
_08050f4e:
	asr		r0, r0, #0x8
	add		r0, r0, r4
	cmp		r0, r2
	bge		_08050fbc
_08050f56:
	mov		r0, r12
	add		r0, #0xe8
	ldr		r1, [r0, #0x0]
	add		r7, r0, #0x0
	cmp		r1, #0x0
	bge		_08050f64
	add		r1, #0xff
_08050f64:
	asr		r1, r1, #0x8
	ldr		r0, _08050ff0
	ldr		r0, [r0, #0x0]
	add		r0, #0x7b
	ldrb	r4, [r0, #0x0]
	sub		r1, r1, r4
	mov		r2, r9
	lsl		r0, r2, #0x10
	asr		r2, r0, #0x10
	add		r5, r0, #0x0
	mov		r6, r12
	add		r6, #0xf4
	cmp		r1, r2
	ble		_08050f92
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bge		_08050f88
	add		r0, #0xff
_08050f88:
	asr		r0, r0, #0x8
	sub		r0, r0, r4
	cmp		r0, r2
	ble		_08050f92
	b		_080510aa
_08050f92:
	ldr		r1, [r7, #0x0]
	cmp		r1, #0x0
	bge		_08050f9a
	add		r1, #0xff
_08050f9a:
	asr		r1, r1, #0x8
	ldr		r0, _08050ff0
	ldr		r0, [r0, #0x0]
	add		r0, #0x7b
	ldrb	r4, [r0, #0x0]
	add		r1, r1, r4
	asr		r2, r5, #0x10
	cmp		r1, r2
	bge		_08050fbc
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bge		_08050fb4
	add		r0, #0xff
_08050fb4:
	asr		r0, r0, #0x8
	add		r0, r0, r4
	cmp		r0, r2
	blt		_080510aa
_08050fbc:
	ldr		r1, [r7, #0x0]
	ldr		r3, [r6, #0x0]
	cmp		r1, r3
	bne		_08050ff4
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_08050fcc
	add		r0, #0xff
_08050fcc:
	asr		r5, r0, #0x8
	mov		r4, r10
	lsl		r0, r4, #0x10
	asr		r4, r0, #0x10
	sub		r1, r5, r4
	str		r1, [sp, #0x4]
	mov		r2, r9
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x10
	mov		r10, r0
	ldr		r0, [sp, #0x4]
	cmp		r0, r1
	blt		_080510aa
	add		r0, r5, r4
	b		_0805104a

.incbin "base.gba", 0x50FEA, 0x2

_08050fec:	.4byte 0x080d34f0
_08050ff0:	.4byte 0x0200D580

_08050ff4:
	mov		r2, r10
	lsl		r0, r2, #0x10
	asr		r2, r0, #0x10
	mov		r10, r0
	cmp		r2, #0x0
	ble		_08051026
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08051008
	add		r0, #0xff
_08051008:
	asr		r0, r0, #0x8
	sub		r0, r0, r2
	mov		r4, r9
	lsl		r1, r4, #0x10
	asr		r1, r1, #0x10
	cmp		r0, r1
	bgt		_080510aa
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0805101e
	add		r0, #0xff
_0805101e:
	asr		r0, r0, #0x8
	cmp		r0, r1
	bge		_0805104e
	b		_080510aa
_08051026:
	cmp		r2, #0x0
	bge		_0805104e
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_08051032
	add		r0, #0xff
_08051032:
	asr		r0, r0, #0x8
	sub		r0, r0, r2
	mov		r5, r9
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	cmp		r0, r1
	blt		_080510aa
	add		r0, r3, #0x0
	cmp		r0, #0x0
	bge		_08051048
	add		r0, #0xff
_08051048:
	asr		r0, r0, #0x8
_0805104a:
	cmp		r0, r1
	bgt		_080510aa
_0805104e:
	ldr		r0, [sp, #0x0]
	ldr		r2, [r0, #0x0]
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0805105a
	add		r1, #0xff
_0805105a:
	asr		r4, r1, #0x8
	ldr		r0, _080510b0
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r3, [r0, #0x0]
	sub		r1, r4, r3
	str		r1, [sp, #0x8]
	mov		r5, r8
	mov		r1, #0x4
	ldrsh	r0, [r5, r1]
	ldr		r5, [sp, #0x8]
	cmp		r5, r0
	bgt		_080510aa
	add		r1, r4, r3
	mov		r2, r8
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	cmp		r1, r0
	blt		_080510aa
	mov		r0, r12
	add		r0, #0xec
	ldr		r2, [r0, #0x0]
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0805108e
	add		r1, #0xff
_0805108e:
	asr		r4, r1, #0x8
	sub		r5, r4, r3
	mov		r12, r5
	mov		r1, r8
	mov		r5, #0x2
	ldrsh	r0, [r1, r5]
	cmp		r12, r0
	bgt		_080510aa
	add		r1, r4, r3
	mov		r2, r8
	mov		r3, #0x6
	ldrsh	r0, [r2, r3]
	cmp		r1, r0
	bge		_080510b4
_080510aa:
	mov		r0, #0x0
	b		_080510ce

.incbin "base.gba", 0x510AE, 0x2

_080510b0:	.4byte 0x0200D580

_080510b4:
	ldr		r1, [r7, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r1, r0
	beq		_080510cc
	mov		r4, r9
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	mov		r5, r10
	asr		r1, r5, #0x10
	add		r0, r0, r1
	lsl		r0, r0, #0x8
	str		r0, [r7, #0x0]
_080510cc:
	mov		r0, #0x1
_080510ce:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x510DE, 0x6AA
	thumb_func_end sub_08050eb8

	thumb_func_start sub_08051788
sub_08051788:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x98
	add		r7, r0, #0x0
	ldr		r0, _08051980
	ldr		r1, [r0, #0x0]
	mov		r8, r1
	ldr		r0, [r1, #0x0]
	add		r2, r0, #0x0
	add		r2, #0xd8
	str		r2, [sp, #0x0]
	add		r0, #0xd9
	str		r0, [sp, #0x4]
	add		r3, r7, #0x0
	add		r3, #0xc8
	str		r3, [sp, #0x8]
	mov		r1, #0x5b
	strh	r1, [r3, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xca
	str		r4, [sp, #0xC]
	mov		r4, #0x34
	ldr		r6, [sp, #0xC]
	strh	r4, [r6, #0x0]
	ldr		r0, _08051984
	add		r2, r7, r0
	ldrb	r0, [r2, #0x0]
	mov		r3, #0x1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	mov		r6, #0xc4
	lsl		r6, r6, #0x1
	add		r6, r7, r6
	str		r6, [sp, #0x10]
	strh	r1, [r6, #0x0]
	mov		r0, #0xc5
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0x14]
	mov		r6, #0x64
	strh	r6, [r0, #0x0]
	ldr		r2, _08051988
	add		r1, r7, r2
	ldrb	r0, [r1, #0x0]
	orr		r0, r3
	strb	r0, [r1, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r3, r7, r0
	ldr		r1, [sp, #0x0]
	ldrb	r2, [r1, #0x0]
	add		r0, r3, #0x0
	mov		r1, #0x13
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r2, #0x92
	lsl		r2, r2, #0x2
	add		r2, r7, r2
	str		r2, [sp, #0x18]
	mov		r5, #0x80
	strh	r5, [r2, #0x0]
	ldr		r3, _0805198c
	add		r3, r7, r3
	str		r3, [sp, #0x1C]
	strh	r4, [r3, #0x0]
	mov		r4, #0x94
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	mov		r4, #0x5
	strh	r4, [r0, #0x0]
	ldr		r0, _08051990
	add		r0, r7, r0
	str		r0, [sp, #0x20]
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r2, _08051994
	add		r1, r7, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x1
	orr		r0, r3
	strb	r0, [r1, #0x0]
	mov		r0, #0xa8
	lsl		r0, r0, #0x2
	add		r3, r7, r0
	ldr		r1, [sp, #0x4]
	ldrb	r2, [r1, #0x0]
	add		r0, r3, #0x0
	mov		r1, #0x13
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r2, #0xc2
	lsl		r2, r2, #0x2
	add		r2, r7, r2
	str		r2, [sp, #0x24]
	strh	r5, [r2, #0x0]
	ldr		r3, _08051998
	add		r3, r3, r7
	mov		r10, r3
	strh	r6, [r3, #0x0]
	mov		r6, #0xc4
	lsl		r6, r6, #0x2
	add		r0, r7, r6
	strh	r4, [r0, #0x0]
	ldr		r0, _0805199c
	add		r5, r7, r0
	mov		r1, #0x1
	strb	r1, [r5, #0x0]
	ldr		r2, _080519a0
	add		r1, r7, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x1
	orr		r0, r3
	strb	r0, [r1, #0x0]
	mov		r2, #0x0
	mov		r4, r8
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xd4
	add		r0, #0xd6
	ldrh	r1, [r1, #0x0]
	ldrh	r0, [r0, #0x0]
	cmp		r1, r0
	bcs		_0805188a
	mov		r2, #0x1
_0805188a:
	str		r2, [sp, #0x28]
	mov		r6, #0xd2
	lsl		r6, r6, #0x4
	add		r6, r7, r6
	str		r6, [sp, #0x2C]
	add		r0, r6, #0x0
	mov		r1, #0x11
	mov		r2, #0x3
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r0, _080519a4
	add		r2, r7, r0
	mov		r0, #0xf8
	strh	r0, [r2, #0x0]
	mov		r1, #0xd9
	lsl		r1, r1, #0x4
	add		r1, r1, r7
	mov		r12, r1
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r4, _080519a8
	add		r3, r7, r4
	mov		r6, #0x1
	strb	r6, [r3, #0x0]
	ldr		r0, _080519ac
	add		r1, r7, r0
	ldrb	r0, [r1, #0x0]
	mov		r4, #0x1
	orr		r0, r4
	strb	r0, [r1, #0x0]
	mov		r6, #0x4c
	mov		r8, r6
	ldr		r0, [sp, #0x28]
	cmp		r0, #0x0
	beq		_080518d6
	mov		r4, #0x7c
	mov		r8, r4
_080518d6:
	ldr		r6, _080519b0
	add		r0, r7, r6
	mov		r4, r8
	strh	r4, [r0, #0x0]
	mov		r6, #0x0
	ldrsh	r4, [r2, r6]
	ldr		r6, [sp, #0x8]
	str		r6, [sp, #0x8C]
	ldr		r6, [sp, #0xC]
	str		r6, [sp, #0x94]
	ldr		r6, [sp, #0x10]
	str		r6, [sp, #0x7C]
	ldr		r6, [sp, #0x14]
	str		r6, [sp, #0x80]
	ldr		r6, [sp, #0x18]
	str		r6, [sp, #0x6C]
	ldr		r6, [sp, #0x1C]
	str		r6, [sp, #0x70]
	ldr		r6, [sp, #0x20]
	str		r6, [sp, #0x84]
	ldr		r6, [sp, #0x24]
	str		r6, [sp, #0x64]
	mov		r6, r10
	str		r6, [sp, #0x68]
	str		r5, [sp, #0x74]
	mov		r8, r2
	ldr		r2, _080519b4
	add		r2, r2, r7
	mov		r9, r2
	mov		r6, #0xc2
	lsl		r6, r6, #0x2
	add		r5, r7, r6
	mov		r10, r0
	mov		r0, r12
	str		r0, [sp, #0x34]
	str		r3, [sp, #0x40]
	add		r6, r1, #0x0
	ldr		r1, _080519b8
	add		r1, r7, r1
	str		r1, [sp, #0x58]
	ldr		r2, _080519bc
	add		r2, r7, r2
	str		r2, [sp, #0x3C]
	ldr		r3, _080519a0
	add		r3, r7, r3
	str		r3, [sp, #0x90]
	ldr		r0, [sp, #0x28]
	lsl		r0, r0, #0x1
	str		r0, [sp, #0x78]
	ldr		r1, [sp, #0x0]
	ldr		r2, [sp, #0x28]
	add		r1, r1, r2
	str		r1, [sp, #0x88]
	mov		r3, #0x91
	lsl		r3, r3, #0x3
	add		r3, r7, r3
	str		r3, [sp, #0x50]
	ldr		r0, _080519c0
	add		r0, r7, r0
	str		r0, [sp, #0x54]
	ldr		r1, _080519c4
	add		r1, r7, r1
	str		r1, [sp, #0x60]
	mov		r2, #0xa9
	lsl		r2, r2, #0x3
	add		r2, r7, r2
	str		r2, [sp, #0x44]
	ldr		r3, _080519c8
	add		r3, r7, r3
	str		r3, [sp, #0x48]
	ldr		r0, _080519cc
	add		r0, r7, r0
	str		r0, [sp, #0x5C]
	mov		r1, #0xc1
	lsl		r1, r1, #0x3
	add		r1, r7, r1
	str		r1, [sp, #0x30]
	ldr		r2, _080519d0
	add		r2, r7, r2
	str		r2, [sp, #0x38]
	ldr		r3, _080519d4
	add		r3, r7, r3
	str		r3, [sp, #0x4C]
	b		_080519dc

.incbin "base.gba", 0x5197E, 0x2

_08051980:	.4byte 0x080d34fc
_08051984:	.4byte 0x0000011F
_08051988:	.4byte 0x000001DF
_0805198c:	.4byte 0x0000024A
_08051990:	.4byte 0x0000025D
_08051994:	.4byte 0x0000029F
_08051998:	.4byte 0x0000030A
_0805199c:	.4byte 0x0000031D
_080519a0:	.4byte 0x0000035F
_080519a4:	.4byte 0x00000D88
_080519a8:	.4byte 0x00000D9D
_080519ac:	.4byte 0x00000DDF
_080519b0:	.4byte 0x00000D8A
_080519b4:	.4byte 0x00000DA4
_080519b8:	.4byte 0x00000DB4
_080519bc:	.4byte 0x00000D9B
_080519c0:	.4byte 0x0000048A
_080519c4:	.4byte 0x0000049D
_080519c8:	.4byte 0x0000054A
_080519cc:	.4byte 0x0000055D
_080519d0:	.4byte 0x0000060A
_080519d4:	.4byte 0x0000061D

_080519d8:
	mov		r0, r8
	strh	r4, [r0, #0x0]
_080519dc:
	add		r0, r7, #0x0
	bl		sub_08050338
	add		r0, r7, #0x0
	bl		sub_08050b44
	add		r0, r7, #0x0
	bl		sub_080527c8
	add		r0, r7, #0x0
	bl		sub_08052778
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, r9
	bl		sub_0808b3d4
	sub		r4, #0x2
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r4, r0
	bge		_080519d8
	ldrh	r0, [r5, #0x0]
	mov		r2, r8
	strh	r0, [r2, #0x0]
	ldr		r3, _08051b14
	add		r0, r7, r3
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08051a24
	mov		r0, #0x78
	bl		sub_0808f690
_08051a24:
	mov		r0, r8
	ldrh	r4, [r0, #0x0]
	mov		r1, r10
	ldrh	r5, [r1, #0x0]
	ldr		r0, [sp, #0x2C]
	mov		r1, #0x19
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0804f150
	mov		r0, #0x0
	mov		r2, r8
	strh	r4, [r2, #0x0]
	mov		r3, r10
	strh	r5, [r3, #0x0]
	ldr		r1, [sp, #0x34]
	strh	r0, [r1, #0x0]
	mov		r1, #0x1
	mov		r0, #0x1
	ldr		r2, [sp, #0x40]
	strb	r0, [r2, #0x0]
	ldrb	r0, [r6, #0x0]
	orr		r0, r1
	strb	r0, [r6, #0x0]
_08051a54:
	add		r0, r7, #0x0
	bl		sub_08050338
	add		r0, r7, #0x0
	bl		sub_08050b44
	add		r0, r7, #0x0
	bl		sub_080527c8
	add		r0, r7, #0x0
	bl		sub_08052778
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, r9
	bl		sub_0808b3d4
	ldr		r3, [sp, #0x58]
	ldrh	r1, [r3, #0x0]
	lsr		r1, r1, #0x3
	mov		r0, #0x1
	bic		r0, r1
	cmp		r0, #0x0
	beq		_08051a54
	ldr		r0, [sp, #0x2C]
	mov		r1, #0x11
	mov		r2, #0x3
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x0
	mov		r1, r8
	strh	r4, [r1, #0x0]
	mov		r2, r10
	strh	r5, [r2, #0x0]
	ldr		r3, [sp, #0x34]
	strh	r0, [r3, #0x0]
	mov		r2, #0x1
	mov		r1, #0x1
	ldr		r4, [sp, #0x40]
	strb	r1, [r4, #0x0]
	ldrb	r0, [r6, #0x0]
	orr		r0, r2
	strb	r0, [r6, #0x0]
	ldr		r0, [sp, #0x3C]
	strb	r1, [r0, #0x0]
	ldr		r1, [sp, #0x90]
	ldrb	r0, [r1, #0x0]
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r2, [sp, #0x78]
	ldr		r3, [sp, #0x28]
	add		r0, r2, r3
	lsl		r0, r0, #0x6
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	add		r3, r7, r0
	ldr		r1, [sp, #0x88]
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r3, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08051aec
	add		r0, r3, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_08051aec:
	ldr		r2, [sp, #0x28]
	cmp		r2, #0x0
	bne		_08051b02
	ldr		r1, [r7, #0x44]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08051afe
	add		r0, r1, #0x0
	sub		r0, #0x40
_08051afe:
	bl		sub_08055b90
_08051b02:
	mov		r3, r8
	mov		r0, #0x0
	ldrsh	r4, [r3, r0]
	add		r5, r6, #0x0
	mov		r1, #0x2
	neg		r1, r1
	add		r6, r1, #0x0
	b		_08051b1c

.incbin "base.gba", 0x51B12, 0x2

_08051b14:	.4byte 0x00000DE6

_08051b18:
	mov		r2, r8
	strh	r4, [r2, #0x0]
_08051b1c:
	add		r0, r7, #0x0
	bl		sub_08050338
	add		r0, r7, #0x0
	bl		sub_08050b44
	add		r0, r7, #0x0
	bl		sub_080527c8
	add		r0, r7, #0x0
	bl		sub_08052778
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r0, r9
	bl		sub_0808b3d4
	add		r4, #0x2
	cmp		r4, #0xf8
	ble		_08051b18
	ldrb	r0, [r5, #0x0]
	and		r0, r6
	strb	r0, [r5, #0x0]
	ldr		r0, _08051c68
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xd6
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	ldr		r3, [sp, #0x0]
	ldrb	r0, [r3, #0x0]
	ldr		r4, [sp, #0x4]
	ldrb	r1, [r4, #0x0]
	add		r0, r0, r1
	mov		r5, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08051b90
	add		r3, r2, #0x0
	add		r3, #0xdb
	ldrb	r2, [r3, #0x0]
	lsr		r1, r2, #0x7
	mov		r0, #0x1
	eor		r1, r0
	lsl		r1, r1, #0x7
	mov		r0, #0x7f
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r6, _08051c6c
	add		r2, r7, r6
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x40
	orr		r0, r1
	strb	r0, [r2, #0x0]
_08051b90:
	add		r0, r7, #0x0
	mov		r1, #0x28
	bl		sub_080528bc
	add		r0, r7, #0x0
	bl		sub_08052748
	mov		r0, #0x1c
	ldr		r1, [sp, #0x8C]
	strh	r0, [r1, #0x0]
	mov		r1, #0x4c
	ldr		r2, [sp, #0x94]
	strh	r1, [r2, #0x0]
	mov		r0, #0xd4
	ldr		r3, [sp, #0x7C]
	strh	r0, [r3, #0x0]
	ldr		r4, [sp, #0x80]
	strh	r1, [r4, #0x0]
	mov		r6, #0xf0
	lsl		r6, r6, #0x1
	add		r3, r7, r6
	add		r0, r3, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x5c
	ldr		r1, [sp, #0x6C]
	strh	r0, [r1, #0x0]
	mov		r4, #0x60
	ldr		r2, [sp, #0x70]
	strh	r4, [r2, #0x0]
	ldr		r3, [sp, #0x84]
	strb	r5, [r3, #0x0]
	mov		r6, #0x84
	lsl		r6, r6, #0x3
	add		r3, r7, r6
	add		r0, r3, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x40
	ldr		r1, [sp, #0x50]
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x54]
	strh	r4, [r2, #0x0]
	ldr		r3, [sp, #0x60]
	strb	r5, [r3, #0x0]
	mov		r6, #0xa8
	lsl		r6, r6, #0x2
	add		r3, r7, r6
	add		r0, r3, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0xb0
	ldr		r1, [sp, #0x64]
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x68]
	strh	r4, [r2, #0x0]
	ldr		r3, [sp, #0x74]
	strb	r5, [r3, #0x0]
	mov		r6, #0x9c
	lsl		r6, r6, #0x3
	add		r3, r7, r6
	add		r0, r3, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x94
	ldr		r1, [sp, #0x44]
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x48]
	strh	r4, [r2, #0x0]
	ldr		r3, [sp, #0x5C]
	strb	r5, [r3, #0x0]
	mov		r4, #0xb4
	lsl		r4, r4, #0x3
	add		r3, r7, r4
	add		r0, r3, #0x0
	mov		r1, #0x12
	mov		r2, #0xa
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x78
	ldr		r6, [sp, #0x30]
	strh	r0, [r6, #0x0]
	mov		r0, #0x70
	ldr		r1, [sp, #0x38]
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x4C]
	strb	r5, [r2, #0x0]
	add		sp, #0x98
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08051c68:	.4byte 0x0200D58C
_08051c6c:	.4byte 0x00000DE6
	thumb_func_end sub_08051788

	thumb_func_start sub_08051c70
sub_08051c70:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	ldr		r1, _08051d40
	mov		r0, #0x3f
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x3d
	strh	r0, [r1, #0x0]
	ldr		r4, _08051d44
	ldr		r0, [r4, #0x0]
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r0, r2, #0x0
	orr		r0, r1
	bl		sub_0800132c
	mov		r7, #0x80
	lsl		r7, r7, #0x7
	mov		r6, #0xd0
	lsl		r6, r6, #0x6
	mov		r1, #0x40
	mov		r2, #0x34
	ldr		r3, _08051d48
	mov		r10, r3
	mov		r0, #0x4c
	mov		r9, r0
	ldr		r3, _08051d4c
	mov		r8, r3
	ldr		r0, _08051d50
	add		r4, r0, #0x0
_08051cb6:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	mov		r3, #0x78
	sub		r0, r3, r1
	lsl		r0, r0, #0x8
	add		r1, #0x78
	orr		r0, r1
	ldr		r1, _08051d54
	strh	r0, [r1, #0x0]
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x10
	mov		r2, r9
	sub		r0, r2, r1
	lsl		r0, r0, #0x8
	add		r1, #0x4c
	orr		r0, r1
	mov		r3, r10
	strh	r0, [r3, #0x0]
	add		r0, r5, #0x0
	bl		sub_08050338
	add		r0, r5, #0x0
	bl		sub_08050b44
	add		r0, r5, #0x0
	bl		sub_080527c8
	add		r0, r5, #0x0
	bl		sub_080b7690
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
	add		r0, r8
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08051d04
	add		r0, #0xff
_08051d04:
	lsl		r0, r0, #0x8
	lsr		r1, r0, #0x10
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r4
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08051d1a
	add		r0, #0xff
_08051d1a:
	lsl		r0, r0, #0x8
	lsr		r2, r0, #0x10
	cmp		r1, #0x0
	beq		_08051d26
	cmp		r2, #0x0
	bne		_08051cb6
_08051d26:
	ldr		r0, _08051d58
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08051d5c
	and		r0, r1
	bl		sub_0800132c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08051d40:	.4byte 0x04000048
_08051d44:	.4byte 0x080d3500
_08051d48:	.4byte 0x04000044
_08051d4c:	.4byte 0xFFFFFC00
_08051d50:	.4byte 0xFFFFFCC0
_08051d54:	.4byte 0x04000040
_08051d58:	.4byte 0x02000B18
_08051d5c:	.4byte 0xffffddff
	thumb_func_end sub_08051c70

	thumb_func_start sub_08051d60
sub_08051d60:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	mov		r0, #0x99
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0xa0
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x9a
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x9b
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r7, _08051e48
	ldr		r1, _08051e4c
	add		r0, r7, r1
	mov		r1, #0xa0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r5, r0, #0x0
	ldr		r0, _08051e50
	bl		sub_0800227c
	mov		r1, #0x8
	cmp		r0, #0x0
	beq		_08051da8
	mov		r1, #0x9
_08051da8:
	lsl		r2, r6, #0x18
	lsr		r2, r2, #0x18
	add		r0, r5, #0x0
	bl		sub_080391f4
	add		r6, r0, #0x0
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r1, r6, #0x0
	add		r1, #0x98
	ldrb	r0, [r1, #0x0]
	add		r7, r4, #0x0
	add		r7, #0x40
	cmp		r0, #0x0
	bne		_08051de0
	add		r5, r1, #0x0
_08051dce:
	add		r0, r4, #0x0
	bl		sub_080527c8
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08051dce
_08051de0:
	add		r3, r7, #0x0
	mov		r5, #0x7
	add		r6, #0x9c
	mov		r7, #0x2
	neg		r7, r7
_08051dea:
	ldr		r2, [r3, #0x0]
	cmp		r2, #0x0
	beq		_08051dfa
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
_08051dfa:
	lsl		r0, r5, #0x10
	ldr		r1, _08051e54
	add		r0, r0, r1
	add		r3, #0x4
	lsr		r5, r0, #0x10
	cmp		r0, #0x0
	bgt		_08051dea
	ldr		r0, [r4, #0x4c]
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x0]
	ldr		r1, [r4, #0x4c]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_08051e20
	add		r0, r1, #0x0
	sub		r0, #0x40
_08051e20:
	mov		r3, #0xcf
	lsl		r3, r3, #0x1
	add		r2, r0, r3
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x4
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, [r4, #0x5c]
	ldr		r1, _08051e58
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x70
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r2, #0x72
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	bl		sub_0804f028
	b		_08051e68

_08051e48:	.4byte 0x0200DB40
_08051e4c:	.4byte 0xFFFFFEC0
_08051e50:	.4byte 0x00000B07
_08051e54:	.4byte 0xffff0000
_08051e58:	.4byte 0x0200D580

_08051e5c:
	add		r0, r4, #0x0
	bl		sub_080527c8
	add		r0, r4, #0x0
	bl		sub_080b7690
_08051e68:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_08051e5c
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08051d60

	thumb_func_start sub_08051e74
sub_08051e74:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r9, r0
	ldr		r0, [r0, #0x48]
	mov		r1, #0x0
	mov		r8, r1
	cmp		r0, #0x0
	beq		_08051e90
	sub		r0, #0x40
	mov		r8, r0
_08051e90:
	mov		r2, r9
	ldr		r0, [r2, #0x40]
	mov		r3, #0x0
	str		r3, [sp, #0x0]
	cmp		r0, #0x0
	beq		_08051ea0
	sub		r0, #0x40
	str		r0, [sp, #0x0]
_08051ea0:
	mov		r1, r9
	ldr		r0, [r1, #0x44]
	mov		r2, #0x0
	str		r2, [sp, #0x4]
	cmp		r0, #0x0
	beq		_08051eb0
	sub		r0, #0x40
	str		r0, [sp, #0x4]
_08051eb0:
	mov		r0, r8
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08051ebc
	add		r0, #0xff
_08051ebc:
	asr		r7, r0, #0x8
	mov		r0, r8
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	str		r0, [sp, #0x8]
	cmp		r2, #0x0
	bge		_08051ecc
	add		r2, #0xff
_08051ecc:
	asr		r6, r2, #0x8
	ldr		r5, _08051f1c
	ldr		r0, [r5, #0x0]
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xc8
	ldr		r0, [r0, #0x0]
	mul		r0, r6
	mov		r1, #0x90
	lsl		r1, r1, #0x7
	add		r0, r0, r1
	mul		r0, r7
	bl		sub_080bbcac
	lsl		r7, r0, #0x8
	add		r4, #0xc0
	ldr		r4, [r4, #0x0]
	sub		r0, r7, r4
	cmp		r0, #0x0
	bge		_08051ef6
	add		r0, #0xff
_08051ef6:
	asr		r6, r0, #0x8
	add		r7, r6, #0x0
	add		r7, #0xf0
	mov		r0, #0xde
	lsl		r0, r0, #0x4
	add		r0, r9
	ldrb	r1, [r0, #0x0]
	sub		r0, r7, r1
	cmp		r0, #0x0
	bge		_08051f20
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08051f12
	add		r0, #0xff
_08051f12:
	asr		r0, r0, #0x8
	sub		r0, r0, r1
	add		r7, r7, r0
	b		_08051fe6

.incbin "base.gba", 0x51F1A, 0x2

_08051f1c:	.4byte 0x080d3504

_08051f20:
	add		r0, r7, r1
	cmp		r0, #0xf0
	ble		_08051f36
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08051f2e
	add		r0, #0xff
_08051f2e:
	asr		r0, r0, #0x8
	add		r0, r0, r1
	add		r7, r6, r0
	b		_08051fe6
_08051f36:
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08051f3e
	add		r0, #0xff
_08051f3e:
	asr		r3, r0, #0x8
	ldr		r1, _08051f60
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x70
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r3, r0
	bge		_08051f98
	ldr		r0, _08051f64
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r7, r0
	ble		_08051f68
	sub		r0, r3, r0
	add		r7, r7, r0
	b		_08051f6a

_08051f60:	.4byte 0x080d3508
_08051f64:	.4byte 0x00000DE1

_08051f68:
	add		r7, r3, #0x0
_08051f6a:
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x70
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r7, r0
	ble		_08051f7e
	add		r0, #0xf0
	cmp		r7, r0
	blt		_08051fdc
_08051f7e:
	ldr		r0, _08051f94
	ldr		r0, [r0, #0x0]
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08051f8c
	add		r0, #0xff
_08051f8c:
	asr		r0, r0, #0x8
	cmp		r7, r0
	bge		_08051fe6
	b		_08051fdc

_08051f94:	.4byte 0x0200D58C

_08051f98:
	ldr		r0, _08051fac
	add		r0, r9
	ldrb	r2, [r0, #0x0]
	mov		r0, #0xf0
	sub		r0, r0, r2
	cmp		r7, r0
	bge		_08051fb0
	add		r0, r3, r2
	add		r7, r6, r0
	b		_08051fb2

_08051fac:	.4byte 0x00000DE1

_08051fb0:
	add		r7, r3, #0x0
_08051fb2:
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x70
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	add		r0, r2, #0x0
	sub		r0, #0xf0
	cmp		r7, r0
	ble		_08051fc8
	cmp		r7, r2
	blt		_08051fdc
_08051fc8:
	ldr		r0, _08052030
	ldr		r0, [r0, #0x0]
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08051fd6
	add		r0, #0xff
_08051fd6:
	asr		r0, r0, #0x8
	cmp		r7, r0
	ble		_08051fe6
_08051fdc:
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x70
	mov		r1, #0x0
	ldrsh	r7, [r0, r1]
_08051fe6:
	mov		r2, #0x89
	lsl		r2, r2, #0x1
	add		r2, r8
	mov		r10, r2
	ldrb	r1, [r2, #0x0]
	mov		r3, #0x1
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08051ffc
	b		_08052114
_08051ffc:
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	add		r0, r8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08052060
	mov		r0, r8
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r4, r0, r2
	ldr		r0, _08052034
	cmp		r4, r0
	bgt		_08052038
	ldr		r0, [sp, #0x4]
	add		r0, #0xe8
	ldr		r1, [sp, #0x4]
	add		r1, #0xec
	ldr		r1, [r1, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x6
	add		r4, r1, r3
	ldr		r0, [r0, #0x0]
	b		_0805203c

_08052030:	.4byte 0x0200D58C
_08052034:	.4byte 0x000023FF

_08052038:
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
_0805203c:
	cmp		r0, #0x0
	bge		_08052042
	add		r0, #0xff
_08052042:
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x7
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	sub		r0, r0, r4
	cmp		r0, #0x0
	bge		_08052058
	add		r0, #0xff
_08052058:
	asr		r0, r0, #0x8
	add		r6, r0, #0x0
	add		r6, #0xdc
	b		_080521e2
_08052060:
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r8
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805208c
	add		r0, r2, #0x0
	add		r0, #0xa8
	add		r1, r2, #0x0
	add		r1, #0xac
	ldr		r1, [r1, #0x0]
	ldr		r2, _08052088
	add		r4, r1, r2
	ldr		r0, [r0, #0x0]
	b		_0805209a

_08052088:	.4byte 0xFFFFF800

_0805208c:
	mov		r0, r8
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	ldr		r3, _0805210c
	add		r4, r0, r3
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
_0805209a:
	cmp		r0, #0x0
	bge		_080520a0
	add		r0, #0xff
_080520a0:
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x7
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	sub		r0, r0, r4
	cmp		r0, #0x0
	bge		_080520b6
	add		r0, #0xff
_080520b6:
	asr		r0, r0, #0x8
	add		r6, r0, #0x0
	add		r6, #0x44
	ldr		r0, [sp, #0x0]
	add		r0, #0xe8
	ldr		r1, [sp, #0x0]
	add		r1, #0xec
	ldr		r1, [r1, #0x0]
	ldr		r2, _0805210c
	add		r4, r1, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_080520d2
	add		r0, #0xff
_080520d2:
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x7
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	sub		r0, r0, r4
	cmp		r0, #0x0
	bge		_080520e8
	add		r0, #0xff
_080520e8:
	asr		r0, r0, #0x8
	add		r0, #0x44
	cmp		r6, r0
	bge		_080520f2
	add		r6, r0, #0x0
_080520f2:
	ldr		r0, _08052110
	ldr		r0, [r0, #0x0]
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08052102
	add		r1, #0xff
_08052102:
	asr		r1, r1, #0x8
	cmp		r6, r1
	bge		_080521e2
	add		r6, r1, #0x0
	b		_080521e2

_0805210c:	.4byte 0xFFFFF800
_08052110:	.4byte 0x0200D58C

_08052114:
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	add		r0, r8
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	bne		_0805214a
	ldr		r0, [sp, #0x0]
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0805212e
	add		r0, #0xff
_0805212e:
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x7
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	cmp		r0, #0x0
	bge		_08052142
	add		r0, #0xff
_08052142:
	asr		r0, r0, #0x8
	add		r6, r0, #0x0
	add		r6, #0x44
	b		_080521e2
_0805214a:
	mov		r0, r8
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x4
	add		r4, r0, r1
	ldr		r2, [sp, #0x8]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_08052160
	add		r0, #0xff
_08052160:
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x7
	mov		r5, #0xd0
	lsl		r5, r5, #0x1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	sub		r0, r0, r4
	cmp		r0, #0x0
	bge		_08052178
	add		r0, #0xff
_08052178:
	asr		r0, r0, #0x8
	add		r6, r0, #0x0
	add		r6, #0xdc
	ldr		r1, [sp, #0x4]
	add		r1, #0xe8
	ldr		r0, [sp, #0x4]
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x6
	add		r4, r0, r3
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_08052196
	add		r0, #0xff
_08052196:
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x7
	add		r1, r5, #0x0
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	sub		r0, r0, r4
	cmp		r0, #0x0
	bge		_080521aa
	add		r0, #0xff
_080521aa:
	asr		r0, r0, #0x8
	add		r3, r0, #0x0
	add		r3, #0xdc
	cmp		r6, r3
	bgt		_080521c0
	mov		r0, r10
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x6
	and		r0, r1
	cmp		r0, #0x0
	beq		_080521e2
_080521c0:
	ldr		r0, _080521dc
	ldr		r0, [r0, #0x0]
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080521d0
	add		r1, #0xff
_080521d0:
	asr		r2, r1, #0x8
	cmp		r3, r2
	bge		_080521e0
	add		r6, r3, #0x0
	b		_080521e2

.incbin "base.gba", 0x521DA, 0x2

_080521dc:	.4byte 0x0200D58C

_080521e0:
	add		r6, r2, #0x0
_080521e2:
	ldr		r0, _0805224c
	ldr		r0, [r0, #0x0]
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080521f2
	add		r1, #0xff
_080521f2:
	asr		r1, r1, #0x8
	cmp		r6, r1
	ble		_080521fe
	add		r1, #0x1
	cmp		r6, r1
	bgt		_0805221a
_080521fe:
	ldr		r0, _0805224c
	ldr		r0, [r0, #0x0]
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0805220e
	add		r1, #0xff
_0805220e:
	asr		r1, r1, #0x8
	cmp		r6, r1
	bge		_0805221c
	sub		r1, #0x1
	cmp		r6, r1
	bge		_0805221c
_0805221a:
	add		r6, r1, #0x0
_0805221c:
	ldr		r0, _0805224c
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0805222c
	add		r0, #0xff
_0805222c:
	asr		r0, r0, #0x8
	cmp		r7, r0
	bne		_08052244
	add		r0, r5, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0805223e
	add		r0, #0xff
_0805223e:
	asr		r0, r0, #0x8
	cmp		r6, r0
	beq		_08052270
_08052244:
	cmp		r7, #0xa0
	ble		_08052250
	mov		r7, #0xa0
	b		_08052256

_0805224c:	.4byte 0x0200D58C

_08052250:
	cmp		r7, #0x4f
	bgt		_08052256
	mov		r7, #0x50
_08052256:
	cmp		r6, #0x70
	ble		_0805225e
	mov		r6, #0x70
	b		_08052264
_0805225e:
	cmp		r6, #0x1f
	bgt		_08052264
	mov		r6, #0x20
_08052264:
	mov		r1, r9
	ldr		r0, [r1, #0x5c]
	add		r1, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_0804f028
_08052270:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08051e74

	thumb_func_start sub_08052280
sub_08052280:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	ldr		r1, _080522a4
	ldr		r7, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0xdc
	ldrb	r2, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r2
	mov		r8, r1
	cmp		r0, #0x0
	beq		_080522a8
	lsl		r0, r2, #0x1e
	b		_0805236c

_080522a4:	.4byte 0x080d350c

_080522a8:
	ldr		r0, _080522bc
	add		r5, r4, r0
	ldrb	r1, [r5, #0x0]
	lsl		r0, r1, #0x1e
	lsr		r0, r0, #0x1e
	cmp		r0, #0x1
	beq		_080522c0
	cmp		r0, #0x2
	beq		_0805231c
	b		_08052360

_080522bc:	.4byte 0x00000DE6

_080522c0:
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_080522ce
	mov		r0, #0x2c
	bl		sub_0808f690
_080522ce:
	mov		r1, #0xcc
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	mov		r1, #0x14
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0xd9
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	mov		r0, #0x78
	strh	r0, [r1, #0x0]
	ldr		r0, _08052314
	add		r1, r4, r0
	mov		r0, #0x48
	strh	r0, [r1, #0x0]
	ldr		r1, _08052318
	add		r2, r4, r1
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, [r7, #0x0]
	add		r1, #0xdc
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x2
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0x20
	orr		r0, r1
	strb	r0, [r5, #0x0]
	b		_08052360

.incbin "base.gba", 0x52312, 0x2

_08052314:	.4byte 0x000006CA
_08052318:	.4byte 0x0000071F

_0805231c:
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805232a
	mov		r0, #0x2c
	bl		sub_0808f690
_0805232a:
	mov		r1, #0xcc
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	mov		r1, #0x14
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0xd9
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	mov		r0, #0x78
	strh	r0, [r1, #0x0]
	ldr		r0, _08052378
	add		r1, r4, r0
	mov		r0, #0x48
	strh	r0, [r1, #0x0]
	ldr		r1, _0805237c
	add		r2, r4, r1
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080502b4
_08052360:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1e
_0805236c:
	lsr		r0, r0, #0x1f
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08052378:	.4byte 0x000006CA
_0805237c:	.4byte 0x0000071F
	thumb_func_end sub_08052280

	thumb_func_start sub_08052380
sub_08052380:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r0, _080523ac
	add		r5, r4, r0
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x3
	and		r0, r1
	ldr		r2, _080523b0
	cmp		r0, #0x0
	beq		_080523a4
	ldr		r6, [r2, #0x0]
	ldr		r0, [r6, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080523b4
_080523a4:
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	b		_0805240a

.incbin "base.gba", 0x523AA, 0x2

_080523ac:	.4byte 0x00000DE6
_080523b0:	.4byte 0x080d3510

_080523b4:
	mov		r1, #0xcc
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	mov		r1, #0x14
	mov		r2, #0x3
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0xd9
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	mov		r0, #0x78
	strh	r0, [r1, #0x0]
	ldr		r0, _08052418
	add		r1, r4, r0
	mov		r0, #0x48
	strh	r0, [r1, #0x0]
	ldr		r1, _0805241c
	add		r2, r4, r1
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, [r6, #0x0]
	add		r1, #0xdc
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x2
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x20
	orr		r1, r0
	lsl		r0, r1, #0x1e
	lsr		r0, r0, #0x1e
	sub		r0, #0x1
	mov		r2, #0x3
	and		r0, r2
	mov		r2, #0x4
	neg		r2, r2
	and		r1, r2
	orr		r1, r0
	strb	r1, [r5, #0x0]
	ldr		r0, [r6, #0x0]
_0805240a:
	add		r0, #0xdc
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1e
	lsr		r0, r0, #0x1f
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08052418:	.4byte 0x000006CA
_0805241c:	.4byte 0x0000071F
	thumb_func_end sub_08052380

	thumb_func_start sub_08052420
sub_08052420:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x8
	mov		r9, r0
	ldr		r2, _080524b0
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xd4
	ldrh	r7, [r1, #0x0]
	add		r0, #0xd6
	ldrh	r6, [r0, #0x0]
	cmp		r7, #0x3
	bls		_08052446
	add		r0, r6, #0x1
	cmp		r7, r0
	bgt		_08052454
_08052446:
	cmp		r6, #0x3
	bhi		_0805244c
	b		_080526be
_0805244c:
	add		r0, r7, #0x1
	cmp		r6, r0
	bgt		_08052454
	b		_080526be
_08052454:
	mov		r0, #0x0
	cmp		r7, r6
	bcs		_0805245c
	mov		r0, #0x1
_0805245c:
	mov		r8, r0
	ldr		r0, [r2, #0x0]
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xd8
	ldrb	r0, [r0, #0x0]
	mov		r1, r8
	cmp		r1, #0x0
	bne		_08052470
	add		r0, #0x1
_08052470:
	add		r7, r0, #0x0
	add		r0, r2, #0x0
	add		r0, #0xd9
	ldrb	r0, [r0, #0x0]
	mov		r1, r8
	add		r6, r1, r0
	ldr		r4, _080524b4
	add		r0, r4, #0x0
	bl		sub_0800227c
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_0805248c
	mov		r5, #0x1
_0805248c:
	add		r0, r4, #0x0
	bl		sub_0800227c
	neg		r1, r0
	orr		r1, r0
	asr		r4, r1, #0x1f
	mov		r0, #0x2
	and		r4, r0
	mov		r0, #0xbc
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080524b8
	mov		r0, #0x1
	eor		r0, r5
	orr		r4, r0
	b		_080524ba

_080524b0:	.4byte 0x080d3544
_080524b4:	.4byte 0x00000B07

_080524b8:
	orr		r4, r5
_080524ba:
	lsl		r0, r4, #0x10
	lsr		r4, r0, #0x10
	ldr		r5, _08052524
	add		r5, r9
	ldrh	r0, [r5, #0x0]
	cmp		r7, r0
	bcc		_0805254c
	ldr		r0, _08052528
	mov		r9, r0
	bl		sub_0800227c
	mov		r3, #0xc
	cmp		r0, #0x0
	beq		_080524d8
	mov		r3, #0x9
_080524d8:
	ldr		r1, _0805252c
	mov		r8, r1
	str		r7, [sp, #0x0]
	str		r6, [sp, #0x4]
	mov		r0, r8
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800625c
	mov		r0, r9
	bl		sub_0800227c
	mov		r6, #0xc
	cmp		r0, #0x0
	bne		_080524f8
	mov		r6, #0x9
_080524f8:
	ldr		r0, _08052530
	ldrh	r1, [r5, #0x0]
	bl		sub_080b63dc
	mov		r1, #0x1
	eor		r4, r1
	ldrh	r1, [r5, #0x0]
	str		r1, [sp, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r8
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	mov		r3, #0x10
	bl		sub_0800625c
	ldr		r0, _08052534
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0805253c
	ldr		r2, _08052538
	b		_0805253e

_08052524:	.4byte 0x00000DE2
_08052528:	.4byte 0x00000B05
_0805252c:	.4byte 0x02000E6C
_08052530:	.4byte 0x0200BDD4
_08052534:	.4byte 0x00000B07
_08052538:	.4byte 0x080d3514

_0805253c:
	ldr		r2, _08052548
_0805253e:
	mov		r0, r8
	mov		r1, #0x1
	bl		sub_08005f4c
	b		_080526be

_08052548:	.4byte 0x080d351c

_0805254c:
	cmp		r6, r0
	bcc		_08052604
	ldr		r6, _080525b0
	add		r0, r6, #0x0
	bl		sub_0800227c
	mov		r3, #0xc
	cmp		r0, #0x0
	beq		_08052560
	mov		r3, #0x9
_08052560:
	ldr		r0, _080525b4
	mov		r8, r0
	str		r7, [sp, #0x0]
	ldrh	r0, [r5, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r8
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800625c
	ldr		r0, _080525b8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080525c4
	add		r0, r6, #0x0
	bl		sub_0800227c
	mov		r6, #0xc
	cmp		r0, #0x0
	bne		_0805258c
	mov		r6, #0x9
_0805258c:
	ldr		r0, _080525bc
	ldrh	r1, [r5, #0x0]
	bl		sub_080b63dc
	mov		r1, #0x1
	eor		r4, r1
	ldrh	r1, [r5, #0x0]
	str		r1, [sp, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r8
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	mov		r3, #0x10
	bl		sub_0800625c
	ldr		r2, _080525c0
	b		_080525f2

.incbin "base.gba", 0x525AE, 0x2

_080525b0:	.4byte 0x00000B05
_080525b4:	.4byte 0x02000E6C
_080525b8:	.4byte 0x00000B07
_080525bc:	.4byte 0x0200BDD4
_080525c0:	.4byte 0x080d3524

_080525c4:
	add		r0, r6, #0x0
	bl		sub_0800227c
	mov		r6, #0xc
	cmp		r0, #0x0
	bne		_080525d2
	mov		r6, #0x9
_080525d2:
	ldr		r0, _080525fc
	ldrh	r1, [r5, #0x0]
	bl		sub_080b63dc
	mov		r1, #0x1
	eor		r4, r1
	str		r0, [sp, #0x0]
	ldrh	r0, [r5, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r8
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	mov		r3, #0x10
	bl		sub_0800625c
	ldr		r2, _08052600
_080525f2:
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_08005f4c
	b		_080526be

_080525fc:	.4byte 0x0200BDD4
_08052600:	.4byte 0x080d352c

_08052604:
	mov		r1, r8
	cmp		r1, #0x0
	bne		_080526be
	ldr		r6, _08052670
	add		r0, r6, #0x0
	bl		sub_0800227c
	mov		r3, #0xc
	cmp		r0, #0x0
	beq		_0805261a
	mov		r3, #0x9
_0805261a:
	ldr		r0, _08052674
	mov		r8, r0
	str		r7, [sp, #0x0]
	ldrh	r0, [r5, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r8
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800625c
	ldr		r0, _08052678
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08052688
	add		r0, r6, #0x0
	bl		sub_0800227c
	mov		r6, #0xc
	cmp		r0, #0x0
	bne		_08052646
	mov		r6, #0x9
_08052646:
	ldr		r0, _0805267c
	ldrh	r1, [r5, #0x0]
	bl		sub_080b63dc
	mov		r1, #0x1
	eor		r4, r1
	ldrh	r1, [r5, #0x0]
	str		r1, [sp, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r8
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	mov		r3, #0x10
	bl		sub_0800625c
	ldr		r1, _08052680
	ldr		r2, _08052684
	mov		r0, r8
	bl		sub_08005f4c
	b		_080526be

_08052670:	.4byte 0x00000B05
_08052674:	.4byte 0x02000E6C
_08052678:	.4byte 0x00000B07
_0805267c:	.4byte 0x0200BDD4
_08052680:	.4byte 0x80808080
_08052684:	.4byte 0x080d3534

_08052688:
	add		r0, r6, #0x0
	bl		sub_0800227c
	mov		r6, #0xc
	cmp		r0, #0x0
	bne		_08052696
	mov		r6, #0x9
_08052696:
	ldr		r0, _080526cc
	ldrh	r1, [r5, #0x0]
	bl		sub_080b63dc
	mov		r1, #0x1
	eor		r4, r1
	str		r0, [sp, #0x0]
	ldrh	r0, [r5, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r8
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	mov		r3, #0x10
	bl		sub_0800625c
	ldr		r1, _080526d0
	ldr		r2, _080526d4
	mov		r0, r8
	bl		sub_08005f4c
_080526be:
	add		sp, #0x8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080526cc:	.4byte 0x0200BDD4
_080526d0:	.4byte 0x80808080
_080526d4:	.4byte 0x080d353c
	thumb_func_end sub_08052420

	thumb_func_start sub_080526d8
sub_080526d8:
	push	{ r4, lr }
	ldr		r4, _080526ec
	ldr		r0, _080526f0
	bl		sub_08002148
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x526EA, 0x2

_080526ec:	.4byte 0x0200BABC
_080526f0:	.4byte 0x080d3548 @ scrMA_TennisCoatChange
	thumb_func_end sub_080526d8

	thumb_func_start sub_080526f4
sub_080526f4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r3, r1, #0x0
	add		r4, r2, #0x0
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	mov		r1, #0xcc
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	mov		r1, #0x14
	add		r2, r3, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r2, #0xd9
	lsl		r2, r2, #0x3
	add		r1, r5, r2
	mov		r0, #0x78
	strh	r0, [r1, #0x0]
	mov		r1, #0x48
	cmp		r4, #0x0
	beq		_08052726
	mov		r1, #0x2c
_08052726:
	ldr		r2, _08052740
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	ldr		r0, _08052744
	add		r2, r5, r0
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5273E, 0x2

_08052740:	.4byte 0x000006CA
_08052744:	.4byte 0x0000071F
	thumb_func_end sub_080526f4

	thumb_func_start sub_08052748
sub_08052748:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r3, #0x60
	mov		r4, #0x12
	mov		r5, #0x2
	neg		r5, r5
_08052754:
	add		r2, r3, #0x0
	add		r2, #0xbf
	ldrb	r0, [r2, #0x0]
	add		r1, r5, #0x0
	and		r1, r0
	strb	r1, [r2, #0x0]
	lsl		r0, r4, #0x10
	ldr		r1, _08052774
	add		r0, r0, r1
	add		r3, #0xc0
	lsr		r4, r0, #0x10
	cmp		r0, #0x0
	bne		_08052754
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08052774:	.4byte 0xffff0000
	thumb_func_end sub_08052748

	thumb_func_start sub_08052778
sub_08052778:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldr		r1, _080527c0
	add		r0, r2, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x1
	beq		_080527b8
	add		r4, r2, #0x0
	add		r4, #0x60
	mov		r5, #0x12
	mov		r6, #0x1
_08052792:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080527aa
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_080527aa:
	lsl		r0, r5, #0x10
	ldr		r1, _080527c4
	add		r0, r0, r1
	add		r4, #0xc0
	lsr		r5, r0, #0x10
	cmp		r0, #0x0
	bne		_08052792
_080527b8:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x527BE, 0x2

_080527c0:	.4byte 0x00000DE6
_080527c4:	.4byte 0xffff0000
	thumb_func_end sub_08052778

	thumb_func_start sub_080527c8
sub_080527c8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r4, #0x40
	mov		r5, #0x7
	mov		r6, #0x1
_080527d2:
	ldr		r2, [r4, #0x0]
	cmp		r2, #0x0
	beq		_080527f4
	add		r0, r2, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080527f4
	ldr		r1, [r2, #0xc]
	mov		r3, #0x18
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
_080527f4:
	lsl		r0, r5, #0x10
	ldr		r1, _08052808
	add		r0, r0, r1
	add		r4, #0x4
	lsr		r5, r0, #0x10
	cmp		r0, #0x0
	bne		_080527d2
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08052808:	.4byte 0xffff0000
	thumb_func_end sub_080527c8

	thumb_func_start sub_0805280c
sub_0805280c:
	push	{ r4, lr }
	add		r4, r2, #0x0
	cmp		r1, #0x0
	bge		_08052816
	add		r1, #0xff
_08052816:
	asr		r0, r1, #0x8
	lsl		r0, r0, #0x7
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	bl		sub_080bbcac
	lsl		r0, r0, #0x8
	sub		r0, r0, r4
	cmp		r0, #0x0
	bge		_0805282c
	add		r0, #0xff
_0805282c:
	asr		r0, r0, #0x8
	add		r0, #0xe0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x52836, 0x2
	thumb_func_end sub_0805280c

	thumb_func_start sub_08052838
sub_08052838:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r8, r2
	mov		r0, #0xcc
	lsl		r0, r0, #0x3
	add		r6, r4, r0
	cmp		r5, #0x0
	beq		_080528a0
	add		r0, #0xbf
	add		r7, r4, r0
	mov		r0, #0x1
	mov		r9, r0
_0805285e:
	add		r0, r4, #0x0
	bl		sub_08050338
	add		r0, r4, #0x0
	bl		sub_08050b44
	mov		r0, r8
	cmp		r0, #0x0
	beq		_08052876
	add		r0, r4, #0x0
	bl		sub_08051e74
_08052876:
	add		r0, r4, #0x0
	bl		sub_080527c8
	ldrb	r1, [r7, #0x0]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_08052890
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_08052890:
	add		r0, r4, #0x0
	bl		sub_080b7690
	sub		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	bne		_0805285e
_080528a0:
	add		r2, r6, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x528BA, 0x2
	thumb_func_end sub_08052838

	thumb_func_start sub_080528bc
sub_080528bc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	cmp		r5, #0x0
	beq		_080528f0
_080528c8:
	add		r0, r4, #0x0
	bl		sub_08050338
	add		r0, r4, #0x0
	bl		sub_08050b44
	add		r0, r4, #0x0
	bl		sub_080527c8
	add		r0, r4, #0x0
	bl		sub_08052778
	add		r0, r4, #0x0
	bl		sub_080b7690
	sub		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	bne		_080528c8
_080528f0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x528F6, 0x96
	thumb_func_end sub_080528bc

	thumb_func_start sub_0805298c
sub_0805298c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r0, #0xc4
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_080529a8
	add		r0, r4, #0x0
	add		r0, #0x84
	bl		sub_0808b3d4
_080529a8:
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldr		r0, _08052a98
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xc8
	add		r1, r4, #0x0
	add		r1, #0xa8
	ldr		r0, [r0, #0x0]
	ldr		r7, [r1, #0x0]
	mul		r0, r7
	mov		r8, r1
	cmp		r0, #0x0
	bge		_080529c6
	add		r0, #0xff
_080529c6:
	asr		r0, r0, #0x8
	mov		r1, #0x90
	lsl		r1, r1, #0x7
	add		r0, r0, r1
	ldr		r2, [r2, #0x0]
	mul		r0, r2
	bl		sub_080bbcac
	add		r6, r0, #0x0
	lsl		r0, r7, #0x7
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	bl		sub_080bbcac
	add		r1, r4, #0x0
	add		r1, #0xac
	ldr		r1, [r1, #0x0]
	sub		r2, r0, r1
	add		r0, r5, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	sub		r0, r6, r0
	cmp		r0, #0x0
	bge		_080529f8
	add		r0, #0xff
_080529f8:
	asr		r1, r0, #0x8
	add		r6, r1, #0x0
	add		r6, #0xf0
	add		r0, r5, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	sub		r0, r2, r0
	cmp		r0, #0x0
	bge		_08052a0c
	add		r0, #0xff
_08052a0c:
	asr		r0, r0, #0x8
	add		r2, r0, #0x0
	add		r2, #0xe0
	ldr		r0, _08052a9c
	add		r1, r1, r0
	add		r0, #0x3f
	cmp		r1, r0
	bhi		_08052a28
	mov		r0, #0x10
	neg		r0, r0
	cmp		r2, r0
	ble		_08052a28
	cmp		r2, #0xdf
	ble		_08052a36
_08052a28:
	add		r0, r4, #0x0
	add		r0, #0xc4
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08052a8c
_08052a36:
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r6, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	neg		r0, r0
	cmp		r0, #0x0
	bge		_08052a4c
	add		r0, #0xff
_08052a4c:
	add		r1, r4, #0x0
	add		r1, #0xc2
	asr		r0, r0, #0x8
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	add		r1, r4, #0x0
	add		r1, #0x70
	strh	r0, [r1, #0x0]
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	ldr		r0, _08052aa0
	mov		r2, #0x2
	cmp		r1, r0
	bge		_08052a70
	mov		r2, #0x3
_08052a70:
	add		r0, r4, #0x0
	add		r0, #0x7d
	strb	r2, [r0, #0x0]
	add		r0, #0x42
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08052a8c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_08052a8c:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x52A96, 0x2

_08052a98:	.4byte 0x0200D58C
_08052a9c:	.4byte 0x0000012F
_08052aa0:	.4byte 0xFFFF3000
	thumb_func_end sub_0805298c

	thumb_func_start sub_08052aa4
sub_08052aa4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	cmp		r1, #0xc
	bls		_08052ab6
	b		_080531f8
_08052ab6:
	lsl		r0, r1, #0x2
	ldr		r1, _08052ac0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08052ac0:	.4byte 0x08052ac4
_08052ac4:	.4byte 0x08052af8

.incbin "base.gba", 0x52AC8, 0x30
	thumb_func_end sub_08052aa4


.incbin "base.gba", 0x52AF8, 0x700

_080531f8:

.incbin "base.gba", 0x531F8, 0x1C
_08053214:	.4byte 0x080d3560 @ m_aioi/maTennisChr.cpp
_08053218:	.4byte 0x0000013F
	thumb_func_start sub_0805321c
sub_0805321c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x40
	bl		sub_0805298c
	mov		r2, #0x0
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldrh	r0, [r0, #0x0]
	add		r0, #0x3f
	lsl		r0, r0, #0x10
	mov		r1, #0xb7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_08053250
	add		r0, r4, #0x0
	add		r0, #0xaa
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r0, #0x10
	neg		r0, r0
	cmp		r1, r0
	ble		_08053250
	cmp		r1, #0xdf
	bgt		_08053250
	mov		r2, #0x1
_08053250:
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	lsl		r2, r2, #0x2
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x5
	neg		r0, r0
	and		r0, r1
	orr		r0, r2
	mov		r1, #0x9
	neg		r1, r1
	and		r0, r1
	strb	r0, [r3, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xfe
	ldrb	r0, [r0, #0x0]
	sub		r0, #0xf
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_080532f4
	mov		r1, #0xbe
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldrh	r0, [r0, #0x0]
	mov		r3, #0xb0
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xaa
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xb1
	lsl		r1, r1, #0x1
	add		r1, r1, r4
	mov		r12, r1
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrh	r0, [r0, #0x0]
	sub		r0, #0x1
	add		r3, #0x8
	add		r1, r4, r3
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xbd
	ldrb	r0, [r0, #0x0]
	add		r3, #0xd
	add		r1, r4, r3
	strb	r0, [r1, #0x0]
	mov		r3, #0x0
	ldrh	r0, [r2, #0x0]
	add		r0, #0x3f
	lsl		r0, r0, #0x10
	mov		r1, #0xb7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_080532e0
	mov		r0, r12
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r0, #0x10
	neg		r0, r0
	cmp		r1, r0
	ble		_080532e0
	cmp		r1, #0xdf
	bgt		_080532e0
	mov		r3, #0x1
_080532e0:
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	lsl		r3, r3, #0x3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x9
	neg		r0, r0
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
_080532f4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x532FA, 0x2EA

_080535e4:	.4byte 0x08053614

.incbin "base.gba", 0x535E8, 0x2C
	thumb_func_end sub_0805321c


.incbin "base.gba", 0x53614, 0x210
	thumb_func_start sub_08053824
sub_08053824:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r7, #0x1
	and		r1, r7
	cmp		r1, #0x0
	beq		_08053898
	add		r6, r5, #0x0
	add		r6, #0x40
	add		r4, r5, #0x0
	add		r4, #0xfe
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x8
	beq		_08053850
	add		r0, r5, #0x0
	add		r0, #0x54
	mov		r1, #0x8
	strb	r1, [r4, #0x0]
	mov		r2, #0x0
	bl		sub_0808e3c0
_08053850:
	ldr		r3, _08053894
	ldr		r1, [r3, #0x0]
	add		r1, #0xdb
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x40
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1e
	lsr		r2, r0, #0x1e
	ldrb	r4, [r4, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805387c
	eor		r2, r7
_0805387c:
	sub		r2, r4, r2
	add		r0, r6, #0x0
	add		r0, #0xbe
	mov		r1, #0x0
	strb	r2, [r0, #0x0]
	mov		r2, #0xd2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	b		_0805389a

.incbin "base.gba", 0x53892, 0x2

_08053894:	.4byte 0x0200D58C

_08053898:
	mov		r0, #0x1
_0805389a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08053824

	thumb_func_start sub_080538a0
sub_080538a0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	mov		r9, r0
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r0, r9
	str		r0, [sp, #0x18]
	ldr		r6, [r0, #0x0]
	mov		r4, #0xd2
	lsl		r4, r4, #0x1
	add		r4, r9
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	ldrh	r2, [r4, #0x0]
	ldrh	r0, [r6, #0x0]
	ldrh	r1, [r6, #0x2]
	add		r0, r0, r1
	cmp		r2, r0
	blt		_080538d2
	b		_08053bac
_080538d2:
	mov		r2, r9
	ldr		r1, [r2, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x50
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r0, r9
	ldr		r1, [r1, #0x54]
	bl		sub_080bbc74
	mov		r1, #0xa
	and		r1, r0
	mov		r0, r9
	bl		sub_080553b4
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r12, r0
	ldrh	r3, [r4, #0x0]
	ldrh	r5, [r6, #0x0]
	cmp		r3, r5
	bhi		_08053900
	b		_08053bd0
_08053900:
	ldrh	r0, [r4, #0x0]
	ldrh	r1, [r6, #0x0]
	ldrh	r2, [r6, #0x2]
	add		r1, r1, r2
	cmp		r0, r1
	blt		_0805390e
	b		_08053bd0
_0805390e:
	ldr		r0, _080539a4
	ldr		r4, [r0, #0x0]
	ldr		r2, [r4, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xdb
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x1c
	lsr		r1, r1, #0x1c
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r7, r2, r0
	mov		r1, #0x18
	add		r1, r1, r7
	mov		r10, r1
	mov		r5, sp
	add		r5, #0x12
	mov		r2, sp
	add		r2, #0x14
	str		r2, [sp, #0x1c]
	str		r2, [sp, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x12
	str		r0, [sp, #0x4]
	add		r0, #0x2
	str		r0, [sp, #0x8]
	ldrh	r0, [r6, #0x0]
	sub		r0, r3, r0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [sp, #0xc]
	mov		r0, r9
	mov		r1, r12
	add		r2, sp, #0x10
	add		r3, r5, #0x0
	bl		sub_08057c1c
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r9
	ldrb	r2, [r0, #0x0]
	lsl		r1, r2, #0x1e
	lsr		r1, r1, #0x1e
	ldr		r0, [r4, #0x0]
	add		r0, #0xdb
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1a
	lsr		r0, r0, #0x1f
	eor		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r0, #0x2a
	ldr		r3, [sp, #0x18]
	ldr		r1, [r3, #0x0]
	add		r4, r1, r0
	mov		r6, #0x0
	ldrsh	r1, [r4, r6]
	add		r0, sp, #0x10
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r3, r1, r0
	mov		r0, #0xd6
	lsl		r0, r0, #0x1
	add		r0, r9
	mov		r6, #0x0
	ldrsh	r1, [r0, r6]
	mov		r0, #0x3
	and		r0, r2
	mov		r8, r5
	cmp		r0, #0x0
	beq		_080539a8
	sub		r0, r1, r3
	b		_080539aa

.incbin "base.gba", 0x539A2, 0x2

_080539a4:	.4byte 0x080d357c

_080539a8:
	add		r0, r3, r1
_080539aa:
	strh	r0, [r7, #0xa]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _08053ac0
	ldr		r6, [r1, #0x0]
	add		r3, r6, #0x0
	add		r3, #0x9c
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_080539c4
	add		r0, #0xff
_080539c4:
	asr		r0, r0, #0x8
	mov		r1, r10
	strh	r0, [r1, #0xa]
	mov		r2, #0x2
	ldrsh	r1, [r4, r2]
	mov		r5, r8
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	add		r5, r1, r0
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r9
	mov		r8, r0
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x3
	mov		r12, r2
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080539ee
	neg		r5, r5
_080539ee:
	strh	r5, [r7, #0xc]
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08053a00
	add		r0, #0xff
_08053a00:
	asr		r0, r0, #0x8
	mov		r1, r10
	strh	r0, [r1, #0xc]
	mov		r2, sp
	ldrh	r0, [r2, #0x14]
	ldrh	r4, [r4, #0x4]
	add		r0, r0, r4
	strh	r0, [r7, #0xe]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08053a20
	add		r0, #0xff
_08053a20:
	asr		r0, r0, #0x8
	mov		r1, r10
	strh	r0, [r1, #0xe]
	add		r1, r6, #0x0
	add		r1, #0x8a
	ldrh	r0, [r1, #0x0]
	strh	r0, [r7, #0x10]
	ldrh	r0, [r1, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x10]
	ldrh	r0, [r7, #0x12]
	strh	r0, [r2, #0x12]
	ldrh	r0, [r7, #0x14]
	strh	r0, [r2, #0x14]
	mov		r0, r9
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08053a48
	add		r0, #0xff
_08053a48:
	asr		r0, r0, #0x8
	strh	r0, [r7, #0x8]
	mov		r3, r10
	strh	r0, [r3, #0x8]
	mov		r0, #0x1
	strb	r0, [r7, #0x16]
	strb	r0, [r3, #0x16]
	mov		r5, r8
	ldrb	r1, [r5, #0x0]
	lsl		r1, r1, #0x1e
	lsr		r1, r1, #0x1e
	mov		r6, r12
	and		r1, r6
	ldrb	r3, [r7, #0x17]
	mov		r2, #0x4
	neg		r2, r2
	add		r0, r2, #0x0
	and		r0, r3
	orr		r0, r1
	strb	r0, [r7, #0x17]
	and		r1, r6
	mov		r3, r10
	ldrb	r0, [r3, #0x17]
	and		r2, r0
	orr		r2, r1
	strb	r2, [r3, #0x17]
	ldr		r0, _08053ac4
	ldr		r2, [r0, #0x0]
	add		r2, #0xdb
	ldrb	r3, [r2, #0x0]
	lsl		r1, r3, #0x1c
	lsr		r1, r1, #0x1c
	add		r1, #0x2
	mov		r0, #0xf
	and		r1, r0
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r3
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r5, _08053ac0
	ldr		r3, [r5, #0x0]
	mov		r0, r9
	add		r0, #0xe4
	ldr		r1, [r0, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	bge		_08053aaa
	add		r1, #0xff
_08053aaa:
	asr		r2, r1, #0x8
	mov		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08053ac8
	mov		r1, #0x4
	ldrsh	r0, [r3, r1]
	sub		r0, r2, r0
	b		_08053ace

_08053ac0:	.4byte 0x0200D580
_08053ac4:	.4byte 0x0200D58C

_08053ac8:
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	add		r0, r2, r0
_08053ace:
	strh	r0, [r7, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bge		_08053ad8
	add		r0, #0xff
_08053ad8:
	asr		r2, r0, #0x8
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r9
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08053af2
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	sub		r0, r2, r0
	b		_08053af8
_08053af2:
	mov		r5, #0x4
	ldrsh	r0, [r3, r5]
	add		r0, r2, r0
_08053af8:
	strh	r0, [r7, #0x4]
	mov		r0, r9
	add		r0, #0xec
	ldr		r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	bge		_08053b08
	add		r1, #0xff
_08053b08:
	asr		r0, r1, #0x8
	ldrh	r1, [r3, #0x2]
	add		r0, r0, r1
	strh	r0, [r7, #0x2]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_08053b18
	add		r0, #0xff
_08053b18:
	asr		r0, r0, #0x8
	ldrh	r3, [r3, #0x6]
	add		r0, r0, r3
	strh	r0, [r7, #0x6]
	ldr		r0, _08053b4c
	ldr		r2, [r0, #0x0]
	add		r3, r2, #0x0
	add		r3, #0x38
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bge		_08053b30
	add		r0, #0xff
_08053b30:
	asr		r4, r0, #0x8
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r9
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08053b50
	mov		r1, #0x3c
	ldrsh	r0, [r2, r1]
	sub		r0, r4, r0
	b		_08053b56

.incbin "base.gba", 0x53B4A, 0x2

_08053b4c:	.4byte 0x0200D580

_08053b50:
	mov		r1, #0x38
	ldrsh	r0, [r2, r1]
	add		r0, r4, r0
_08053b56:
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bge		_08053b62
	add		r0, #0xff
_08053b62:
	asr		r2, r0, #0x8
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r9
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08053b7c
	mov		r6, #0x0
	ldrsh	r0, [r3, r6]
	sub		r0, r2, r0
	b		_08053b82
_08053b7c:
	mov		r1, #0x4
	ldrsh	r0, [r3, r1]
	add		r0, r2, r0
_08053b82:
	mov		r2, r10
	strh	r0, [r2, #0x4]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_08053b8e
	add		r0, #0xff
_08053b8e:
	asr		r0, r0, #0x8
	ldrh	r6, [r3, #0x2]
	add		r0, r0, r6
	mov		r1, r10
	strh	r0, [r1, #0x2]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_08053ba0
	add		r0, #0xff
_08053ba0:
	asr		r0, r0, #0x8
	ldrh	r3, [r3, #0x6]
	add		r0, r0, r3
	mov		r2, r10
	strh	r0, [r2, #0x6]
	b		_08053bd0
_08053bac:
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r9
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_08053bd0
	mov		r0, #0xd0
	lsl		r0, r0, #0x1
	add		r0, r9
	ldr		r1, [r0, #0x0]
	add		r1, #0xbf
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
_08053bd0:
	mov		r0, r9
	bl		sub_080b7690
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53BE6, 0x17CE
	thumb_func_end sub_080538a0

	thumb_func_start sub_080553b4
sub_080553b4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r8, r1
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	mov		r9, r0
	add		r0, r4, #0x0
	add		r0, #0xfe
	ldrb	r1, [r0, #0x0]
	mov		r2, #0xd8
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1e
	lsr		r0, r0, #0x1e
	eor		r1, r0
	mov		r0, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_08055400
	ldr		r1, _080553fc
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r3, r0, #0x0
	add		r3, #0x82
	ldrh	r7, [r3, #0x0]
	add		r0, #0x84
	ldrh	r6, [r0, #0x0]
	b		_0805541e

_080553fc:	.4byte 0x080d3590

_08055400:
	ldr		r2, _08055480
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x84
	ldrh	r0, [r0, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	add		r1, #0x82
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r1, r2, #0x0
_0805541e:
	mov		r0, #0x8
	mov		r3, r8
	and		r0, r3
	cmp		r0, #0x0
	beq		_08055484
	mov		r0, #0xd6
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x80
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r2, #0xd7
	lsl		r2, r2, #0x1
	add		r6, r4, r2
	ldrh	r1, [r6, #0x0]
	bl		sub_080bbcac
	ldrh	r1, [r5, #0x0]
	sub		r1, r1, r0
	strh	r1, [r5, #0x0]
	lsl		r1, r1, #0x10
	lsl		r0, r7, #0x10
	cmp		r1, r0
	bge		_08055454
	strh	r7, [r5, #0x0]
_08055454:
	mov		r3, #0xd8
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080554ea
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r2, [r0, #0x0]
	add		r2, #0xa4
	mov		r3, #0x0
	ldrsh	r1, [r5, r3]
	mov		r3, r9
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	sub		r1, r1, r0
	ldrh	r0, [r6, #0x0]
	b		_080554e2

.incbin "base.gba", 0x5547E, 0x2

_08055480:	.4byte 0x080d3590

_08055484:
	mov		r0, #0x2
	mov		r2, r8
	and		r0, r2
	cmp		r0, #0x0
	beq		_080554ea
	mov		r3, #0xd6
	lsl		r3, r3, #0x1
	add		r5, r4, r3
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x80
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r2, #0xd7
	lsl		r2, r2, #0x1
	add		r7, r4, r2
	ldrh	r1, [r7, #0x0]
	bl		sub_080bbcac
	ldrh	r1, [r5, #0x0]
	add		r1, r1, r0
	strh	r1, [r5, #0x0]
	lsl		r1, r1, #0x10
	lsl		r0, r6, #0x10
	cmp		r1, r0
	ble		_080554ba
	strh	r6, [r5, #0x0]
_080554ba:
	mov		r3, #0xd8
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080554ea
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r2, [r0, #0x0]
	add		r2, #0xa4
	mov		r3, #0x0
	ldrsh	r1, [r5, r3]
	mov		r3, r9
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	sub		r1, r1, r0
	ldrh	r0, [r7, #0x0]
_080554e2:
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_080554ea:
	mov		r0, r8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080553b4

	thumb_func_start sub_080554f8
sub_080554f8:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08055534
	mov		r3, #0x84
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	add		r0, #0x9c
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x2]
	ldr		r0, _0805552c
	ldr		r0, [r0, #0x0]
	add		r0, #0x79
	ldrb	r1, [r0, #0x0]
	ldr		r5, _08055530
	add		r0, r5, #0x0
	sub		r0, r0, r1
	b		_0805554c

_0805552c:	.4byte 0x0200D580
_08055530:	.4byte 0x0000FE50

_08055534:
	ldr		r0, _08055584
	ldr		r0, [r0, #0x0]
	add		r0, #0x79
	ldrb	r0, [r0, #0x0]
	add		r0, #0x10
	strh	r0, [r4, #0x2]
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0xa0
	ldrh	r0, [r0, #0x0]
_0805554c:
	strh	r0, [r4, #0x6]
	ldr		r0, _08055588
	ldr		r3, [r0, #0x0]
	add		r3, #0xdb
	ldrb	r1, [r3, #0x0]
	lsl		r1, r1, #0x1a
	lsr		r1, r1, #0x1f
	neg		r1, r1
	mov		r0, #0x48
	neg		r0, r0
	and		r1, r0
	mov		r5, #0x84
	lsl		r5, r5, #0x1
	add		r0, r2, r5
	ldr		r2, [r0, #0x0]
	add		r2, #0xaa
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	strh	r0, [r4, #0x0]
	ldrh	r2, [r2, #0x0]
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805558c
	mov		r0, #0x48
	sub		r0, r0, r2
	b		_0805558e

_08055584:	.4byte 0x0200D580
_08055588:	.4byte 0x0200D58C

_0805558c:
	neg		r0, r2
_0805558e:
	strh	r0, [r4, #0x4]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55596, 0x2
	thumb_func_end sub_080554f8

	thumb_func_start sub_08055598
sub_08055598:
	push	{ r4, r5, r6, lr }
	mov		r12, r0
	mov		r4, #0x0
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r3, [r0, #0x0]
	mov		r1, #0x89
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x1f
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	lsl		r2, r0, #0x1e
	lsr		r1, r1, #0x1f
	lsr		r0, r2, #0x1e
	cmp		r1, r0
	beq		_08055604
	add		r6, r0, #0x0
	mov		r5, r12
	add		r5, #0xe4
	add		r4, r3, #0x0
	add		r4, #0xe4
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r0, r12
	add		r0, #0xe8
	add		r1, r3, #0x0
	add		r1, #0xe8
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	mul		r0, r2
	mov		r2, #0x85
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_080bbcac
	ldr		r1, [r4, #0x0]
	add		r1, r1, r0
	ldr		r0, [r5, #0x0]
	cmp		r0, r1
	blt		_08055602
	mov		r0, #0x1
	eor		r6, r0
_08055602:
	add		r4, r6, #0x0
_08055604:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08055598

	thumb_func_start sub_0805560c
sub_0805560c:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	mov		r4, #0xce
	lsl		r4, r4, #0x1
	add		r4, r12
	ldr		r1, [r4, #0x0]
	add		r6, r1, #0x0
	add		r6, #0xf0
	add		r1, #0xe4
	mov		r3, r12
	add		r3, #0xe4
	mov		r5, #0x84
	lsl		r5, r5, #0x1
	add		r5, r12
	ldr		r0, [r5, #0x0]
	add		r0, #0xa6
	mov		r7, #0x0
	ldrsh	r2, [r0, r7]
	ldr		r0, [r3, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	str		r0, [r6, #0x0]
	ldr		r1, [r4, #0x0]
	add		r6, r1, #0x0
	add		r6, #0xf8
	add		r1, #0xec
	add		r3, #0x8
	ldr		r0, [r5, #0x0]
	add		r0, #0xa8
	mov		r5, #0x0
	ldrsh	r2, [r0, r5]
	ldr		r0, [r3, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	str		r0, [r6, #0x0]
	ldr		r2, [r4, #0x0]
	add		r4, r2, #0x0
	add		r4, #0xf4
	add		r2, #0xe8
	sub		r3, #0x4
	ldr		r0, _08055688
	ldr		r0, [r0, #0x0]
	add		r0, #0x7b
	ldrb	r1, [r0, #0x0]
	sub		r1, #0x1
	mov		r0, #0xd8
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1e
	lsr		r0, r0, #0x15
	ldr		r7, _0805568c
	add		r0, r0, r7
	mul		r1, r0
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	str		r0, [r4, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55686, 0x2

_08055688:	.4byte 0x0200D580
_0805568c:	.4byte 0xFFFFFF00
	thumb_func_end sub_0805560c

	thumb_func_start sub_08055690
sub_08055690:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r0, _08055720
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xcc
	add		r2, r4, #0x0
	add		r2, #0xe4
	ldr		r3, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r7, r3, r0
	add		r1, #0xd0
	add		r0, r4, #0x0
	add		r0, #0xe8
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	sub		r6, r1, r0
	cmp		r7, #0x0
	bge		_080556bc
	neg		r7, r7
_080556bc:
	cmp		r6, #0x0
	bge		_080556c2
	neg		r6, r6
_080556c2:
	lsl		r0, r7, #0x8
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r2, #0x0
	ldrsh	r5, [r1, r2]
	lsl		r4, r5, #0x1
	add		r4, r4, r5
	lsl		r4, r4, #0x6
	add		r1, r4, #0x0
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	lsl		r0, r6, #0x8
	add		r1, r4, #0x0
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	mov		r2, r8
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x10
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r1, r0
	bge		_08055724
	mul		r1, r5
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x6
	cmp		r0, #0x0
	bge		_08055706
	add		r0, #0xff
_08055706:
	asr		r0, r0, #0x8
	sub		r6, r6, r0
	lsr		r0, r5, #0x1f
	add		r0, r5, r0
	asr		r0, r0, #0x1
	add		r0, r6, r0
	add		r1, r5, #0x0
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	b		_0805574c

.incbin "base.gba", 0x5571E, 0x2

_08055720:	.4byte 0x0200D58C

_08055724:
	add		r1, r0, #0x0
	mul		r1, r5
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x6
	cmp		r0, #0x0
	bge		_08055734
	add		r0, #0xff
_08055734:
	asr		r0, r0, #0x8
	sub		r7, r7, r0
	lsr		r0, r5, #0x1f
	add		r0, r5, r0
	asr		r0, r0, #0x1
	add		r0, r7, r0
	add		r1, r5, #0x0
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
_0805574c:
	mov		r1, r8
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r4, #0x10
	asr		r1, r1, #0x10
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x55766, 0x132
	thumb_func_end sub_08055690

	thumb_func_start sub_08055898
sub_08055898:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r6, r5, r0
	ldr		r0, [r6, #0x0]
	mov		r1, #0x89
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x1
	add		r0, r4, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080558f8
	ldr		r0, _080558f4
	ldr		r1, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0xcc
	mov		r3, #0xd4
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	str		r0, [r2, #0x0]
	add		r1, #0xd0
	mov		r2, #0xd5
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	mov		r0, #0xd3
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_08055b76

.incbin "base.gba", 0x558F2, 0x2

_080558f4:	.4byte 0x0200D58C

_080558f8:
	ldr		r2, _0805599c
	ldr		r1, [r2, #0x0]
	mov		r9, r1
	ldr		r3, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08055910
	b		_08055aec
_08055910:
	add		r0, r3, #0x0
	add		r0, #0xcc
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	add		r0, r3, #0x0
	add		r0, #0xd0
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	ldr		r4, _080559a0
	ldr		r7, [r4, #0x0]
	ldr		r1, [r7, #0x0]
	add		r1, #0x20
	add		r0, r5, #0x0
	bl		sub_0805635c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_080559a8
	ldr		r1, [r7, #0x0]
	add		r1, #0x8
	add		r0, r5, #0x0
	bl		sub_080566e0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0805595e
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	add		r2, r1, #0x0
	add		r2, #0xcc
	add		r0, r5, #0x0
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	add		r1, #0xd0
	add		r0, r5, #0x0
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
_0805595e:
	mov		r3, #0xd3
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc6
	ldrh	r2, [r0, #0x6]
	add		r0, r5, #0x0
	bl		sub_08057a98
	mov		r2, #0xdc
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc9
	ldrh	r2, [r0, #0xa]
	add		r0, r5, #0x0
	bl		sub_08057a98
	ldr		r3, _080559a4
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	b		_08055ae0

.incbin "base.gba", 0x5599A, 0x2

_0805599c:	.4byte 0x080d3594
_080559a0:	.4byte 0x080d3598
_080559a4:	.4byte 0x000001B9

_080559a8:
	ldr		r0, [r6, #0x0]
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	add		r1, #0xd0
	ldr		r1, [r1, #0x0]
	bl		sub_08056de0
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r7, r5, r2
	ldr		r4, [r7, #0x0]
	mov		r3, #0x14
	add		r3, r3, r4
	mov		r8, r3
	ldr		r1, [r6, #0x0]
	add		r3, r1, #0x0
	add		r3, #0xe4
	add		r1, r1, r2
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl		r0, r0, #0x10
	asr		r6, r0, #0x10
	add		r0, r1, #0x0
	mul		r0, r6
	ldr		r1, [r3, #0x0]
	add		r1, r1, r0
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	add		r0, #0xcc
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	ble		_080559ec
	add		r4, #0x18
	mov		r8, r4
_080559ec:
	mov		r4, #0x0
	ldr		r0, _08055a90
	mov		r1, #0x64
	bl		sub_080b63dc
	ldr		r1, [r7, #0x0]
	add		r1, #0xfc
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bge		_08055a16
	add		r0, r5, #0x0
	bl		sub_08055690
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, r8
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	add		r1, r6, #0x3
	cmp		r0, r1
	ble		_08055a18
_08055a16:
	mov		r4, #0x1
_08055a18:
	add		r0, r4, #0x1
	mov		r2, #0xd3
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	cmp		r0, #0x2
	bne		_08055aa0
	ldr		r6, _08055a94
	ldr		r0, [r6, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xcc
	mov		r3, r10
	str		r3, [r1, #0x0]
	add		r0, #0xd0
	ldr		r1, [sp, #0x0]
	str		r1, [r0, #0x0]
	ldr		r0, _08055a98
	ldr		r1, [r0, #0x0]
	add		r1, #0x8
	add		r0, r5, #0x0
	bl		sub_080566e0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08055a62
	ldr		r1, [r6, #0x0]
	add		r2, r1, #0x0
	add		r2, #0xcc
	add		r0, r5, #0x0
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	add		r1, #0xd0
	add		r0, r5, #0x0
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
_08055a62:
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r4, r5, r2
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc6
	ldrh	r2, [r0, #0x6]
	add		r0, r5, #0x0
	bl		sub_08057a98
	mov		r3, #0xdc
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc9
	ldrh	r2, [r0, #0xa]
	add		r0, r5, #0x0
	bl		sub_08057a98
	ldr		r2, _08055a9c
	b		_08055ab8

_08055a90:	.4byte 0x0200BDD4
_08055a94:	.4byte 0x0200D58C
_08055a98:	.4byte 0x0200D580
_08055a9c:	.4byte 0x000001B9

_08055aa0:
	mov		r3, #0x84
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xcc
	ldrh	r2, [r0, #0x16]
	add		r0, r5, #0x0
	bl		sub_08057a98
	mov		r2, #0xdc
	lsl		r2, r2, #0x1
_08055ab8:
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	mov		r3, #0xdc
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	ldrh	r2, [r0, #0x16]
	cmp		r1, r2
	ble		_08055ada
	ldrh	r0, [r0, #0x1a]
	sub		r0, r0, r2
	add		r1, r1, r0
_08055ada:
	ldr		r3, _08055ae8
	add		r0, r5, r3
	strb	r1, [r0, #0x0]
_08055ae0:
	add		r0, r5, #0x0
	bl		sub_08056858
	b		_08055b76

_08055ae8:	.4byte 0x000001B9

_08055aec:
	ldr		r0, _08055b88
	ldr		r0, [r0, #0x0]
	add		r4, r0, #0x0
	add		r4, #0x8
	add		r0, r3, #0x0
	add		r0, #0xd0
	add		r6, r5, #0x0
	add		r6, #0xe8
	ldr		r1, [r0, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r1, r0
	ble		_08055b12
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080564f0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08055b36
_08055b12:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0805635c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08055b36
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0xcc
	add		r0, r5, #0x0
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	add		r1, #0xd0
	ldr		r0, [r6, #0x0]
	str		r0, [r1, #0x0]
_08055b36:
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc6
	ldrh	r2, [r0, #0x6]
	add		r0, r5, #0x0
	bl		sub_08057a98
	mov		r2, #0xdc
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc9
	ldrh	r2, [r0, #0xa]
	add		r0, r5, #0x0
	bl		sub_08057a98
	ldr		r3, _08055b8c
	add		r1, r5, r3
	strb	r0, [r1, #0x0]
	mov		r0, #0xd3
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_08056858
_08055b76:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55B86, 0x2

_08055b88:	.4byte 0x0200D580
_08055b8c:	.4byte 0x000001B9
	thumb_func_end sub_08055898

	thumb_func_start sub_08055b90
sub_08055b90:
	push	{ lr }
	mov		r12, r0
	mov		r3, #0x0
	ldr		r0, _08055bc0
	ldr		r1, [r0, #0x0]
	add		r1, #0xd8
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xc4
	ldrb	r1, [r1, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bcc		_08055bb2
	mov		r3, #0x1
_08055bb2:
	add		r0, r2, #0x0
	add		r0, #0xc5
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bcc		_08055bc4
	add		r1, r3, #0x1
	b		_08055bc6

_08055bc0:	.4byte 0x0200D58C

_08055bc4:
	add		r1, r3, #0x0
_08055bc6:
	mov		r3, #0x84
	lsl		r3, r3, #0x1
	add		r3, r12
	ldr		r0, [r3, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0xf
	add		r0, #0xb8
	add		r0, r0, r1
	ldrh	r2, [r0, #0x0]
	mov		r0, #0xd4
	lsl		r0, r0, #0x1
	add		r0, r12
	strh	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xbe
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	sub		r0, #0xd0
	mov		r2, #0xd5
	lsl		r2, r2, #0x1
	add		r2, r12
	strh	r0, [r2, #0x0]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55BF6, 0x766
	thumb_func_end sub_08055b90

	thumb_func_start sub_0805635c
sub_0805635c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r9, r0
	mov		r8, r1
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	ldr		r1, _0805641c
	ldr		r0, [r1, #0x0]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r7, r0, #0x8
	mov		r3, #0x0
	mov		r10, r3
	cmp		r7, #0x0
	bgt		_08056392
	b		_080564da
_08056392:
	mov		r4, #0x84
	lsl		r4, r4, #0x1
	add		r4, r9
	str		r4, [sp, #0x4]
	mov		r0, r9
	add		r0, #0xe4
	str		r0, [sp, #0x8]
_080563a0:
	mov		r1, r8
	mov		r2, #0x2
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x8
	cmp		r7, r0
	ble		_08056424
	mov		r3, r10
	lsl		r0, r3, #0x10
	asr		r3, r0, #0x10
	cmp		r3, #0x2
	ble		_08056424
	ldr		r4, [sp, #0x4]
	ldr		r0, [r4, #0x0]
	add		r0, #0xa0
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r1, r1, #0x8
	ldr		r4, _08056420
	ldr		r4, [r4, #0x0]
	mov		r12, r4
	mov		r5, r12
	add		r5, #0xd0
	mov		r6, #0xce
	lsl		r6, r6, #0x1
	add		r6, r9
	ldr		r0, [r6, #0x0]
	mov		r2, #0x85
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r2, #0x0
	ldrsh	r4, [r0, r2]
	sub		r3, #0x3
	add		r0, r4, #0x0
	mul		r0, r3
	ldr		r2, [r5, #0x0]
	sub		r0, r2, r0
	cmp		r1, r0
	ble		_08056424
	lsl		r1, r3, #0x10
	asr		r1, r1, #0x10
	add		r0, r4, #0x0
	mul		r0, r1
	sub		r0, r2, r0
	str		r0, [r5, #0x0]
	mov		r2, r12
	add		r2, #0xcc
	ldr		r0, [r6, #0x0]
	mov		r3, #0x84
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	sub		r1, r0, r1
	str		r1, [r2, #0x0]
	ldr		r3, [sp, #0x8]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bgt		_08056494
	b		_080564a4

.incbin "base.gba", 0x5641A, 0x2

_0805641c:	.4byte 0x0200D580
_08056420:	.4byte 0x0200D58C

_08056424:
	ldr		r4, [sp, #0x0]
	lsl		r0, r4, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	bge		_080564b4
	mov		r1, r8
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	lsl		r0, r0, #0x8
	cmp		r7, r0
	blt		_080564da
	ldr		r3, [sp, #0x4]
	ldr		r0, [r3, #0x0]
	add		r0, #0xa0
	mov		r4, #0x0
	ldrsh	r2, [r0, r4]
	lsl		r2, r2, #0x8
	ldr		r0, _080564a0
	ldr		r6, [r0, #0x0]
	add		r4, r6, #0x0
	add		r4, #0xd0
	mov		r5, #0xce
	lsl		r5, r5, #0x1
	add		r5, r9
	ldr		r0, [r5, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r3, r10
	lsl		r0, r3, #0x10
	asr		r3, r0, #0x10
	mul		r1, r3
	ldr		r0, [r4, #0x0]
	sub		r0, r0, r1
	cmp		r2, r0
	ble		_080564da
	str		r0, [r4, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xcc
	ldr		r0, [r5, #0x0]
	mov		r4, #0x84
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r1, r0, #0x0
	mul		r1, r3
	ldr		r0, [r2, #0x0]
	sub		r1, r0, r1
	str		r1, [r2, #0x0]
	ldr		r3, [sp, #0x8]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	ble		_080564a4
_08056494:
	mov		r4, r8
	mov		r3, #0x4
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x8
	sub		r0, r1, r0
	b		_080564ae

_080564a0:	.4byte 0x0200D58C

_080564a4:
	mov		r4, r8
	mov		r3, #0x4
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x8
	add		r0, r1, r0
_080564ae:
	str		r0, [r2, #0x0]
	mov		r0, #0x1
	b		_080564dc
_080564b4:
	add		r7, r7, r1
	ldr		r4, _080564ec
	ldr		r0, [r4, #0x0]
	add		r0, #0x88
	ldrh	r0, [r0, #0x0]
	add		r0, r1, r0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [sp, #0x0]
	mov		r1, r10
	lsl		r0, r1, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	lsr		r0, r0, #0x10
	mov		r10, r0
	cmp		r7, #0x0
	ble		_080564da
	b		_080563a0
_080564da:
	mov		r0, #0x0
_080564dc:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080564ec:	.4byte 0x0200D580
	thumb_func_end sub_0805635c

	thumb_func_start sub_080564f0
sub_080564f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	mov		r12, r1
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	ldrh	r3, [r1, #0x0]
	add		r0, #0xec
	ldr		r2, [r0, #0x0]
	ldr		r1, _08056588
	ldr		r0, [r1, #0x0]
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r4, r0, #0x8
	mov		r8, r1
	cmp		r2, r4
	ble		_08056540
	add		r0, r5, #0x0
	add		r0, #0x88
	ldrh	r5, [r0, #0x0]
	add		r1, r4, #0x0
_08056530:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	add		r2, r2, r0
	add		r0, r0, r5
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r2, r1
	bgt		_08056530
_08056540:
	mov		r6, #0xce
	lsl		r6, r6, #0x1
	add		r0, r7, r6
	ldr		r0, [r0, #0x0]
	mov		r4, #0x88
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	mov		r5, #0x0
	ldrsh	r1, [r0, r5]
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0805655e
	add		r0, #0xff
_0805655e:
	lsl		r0, r0, #0x8
	lsr		r3, r0, #0x10
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r2, r0, #0x8
	mov		r4, #0x0
	ldr		r5, _0805658c
	mov		r8, r6
	mov		r6, #0x87
	lsl		r6, r6, #0x1
	mov		r9, r6
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	mov		r10, r0
	add		r6, r7, #0x0
	add		r6, #0xe4
	str		r6, [sp, #0x0]
	b		_080565aa

_08056588:	.4byte 0x080d35a8
_0805658c:	.4byte 0x0200D58C

_08056590:
	add		r2, r2, r1
	ldr		r3, _08056630
	ldr		r0, [r3, #0x0]
	add		r0, #0x88
	ldrh	r0, [r0, #0x0]
	add		r0, r1, r0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	lsl		r0, r4, #0x10
	mov		r4, #0x80
	lsl		r4, r4, #0x9
	add		r0, r0, r4
	lsr		r4, r0, #0x10
_080565aa:
	mov		r6, r12
	mov		r1, #0x2
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x8
	cmp		r2, r0
	ble		_08056634
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_08056634
	sub		r0, #0x4
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldr		r6, [r5, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xd0
	mov		r2, r8
	add		r5, r7, r2
	ldr		r1, [r5, #0x0]
	mov		r7, r9
	add		r0, r1, r7
	mov		r7, #0x0
	ldrsh	r2, [r0, r7]
	add		r1, r10
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	add		r1, r2, #0x0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_080565e8
	add		r1, #0xff
_080565e8:
	asr		r1, r1, #0x8
	lsl		r0, r4, #0x10
	asr		r4, r0, #0x10
	mul		r1, r4
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xcc
	ldr		r1, [r5, #0x0]
	mov		r2, #0x86
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	mov		r5, #0x0
	ldrsh	r2, [r0, r5]
	mov		r6, #0x84
	lsl		r6, r6, #0x1
	add		r1, r1, r6
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08056618
	add		r0, #0xff
_08056618:
	asr		r0, r0, #0x8
	add		r1, r0, #0x0
	mul		r1, r4
	ldr		r0, [r3, #0x0]
	add		r1, r0, r1
	str		r1, [r3, #0x0]
	add		r2, r3, #0x0
	ldr		r3, [sp, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bgt		_080566b2
	b		_080566be

_08056630:	.4byte 0x0200D580

_08056634:
	lsl		r0, r3, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	bge		_08056590
	mov		r1, r12
	mov		r3, #0x6
	ldrsh	r0, [r1, r3]
	lsl		r0, r0, #0x8
	cmp		r2, r0
	blt		_080566ce
	ldr		r6, [r5, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xd0
	mov		r0, r8
	add		r5, r7, r0
	ldr		r1, [r5, #0x0]
	mov		r2, r9
	add		r0, r1, r2
	mov		r7, #0x0
	ldrsh	r2, [r0, r7]
	add		r1, r10
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	add		r1, r2, #0x0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_0805666c
	add		r1, #0xff
_0805666c:
	asr		r1, r1, #0x8
	lsl		r0, r4, #0x10
	asr		r4, r0, #0x10
	mul		r1, r4
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xcc
	ldr		r1, [r5, #0x0]
	mov		r2, #0x86
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	mov		r5, #0x0
	ldrsh	r2, [r0, r5]
	mov		r6, #0x84
	lsl		r6, r6, #0x1
	add		r1, r1, r6
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0805669c
	add		r0, #0xff
_0805669c:
	asr		r0, r0, #0x8
	add		r1, r0, #0x0
	mul		r1, r4
	ldr		r0, [r3, #0x0]
	add		r1, r0, r1
	str		r1, [r3, #0x0]
	add		r2, r3, #0x0
	ldr		r3, [sp, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	ble		_080566be
_080566b2:
	mov		r4, r12
	mov		r5, #0x4
	ldrsh	r0, [r4, r5]
	lsl		r0, r0, #0x8
	sub		r0, r1, r0
	b		_080566c8
_080566be:
	mov		r6, r12
	mov		r7, #0x4
	ldrsh	r0, [r6, r7]
	lsl		r0, r0, #0x8
	add		r0, r1, r0
_080566c8:
	str		r0, [r2, #0x0]
	mov		r0, #0x1
	b		_080566d0
_080566ce:
	mov		r0, #0x0
_080566d0:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080564f0

	thumb_func_start sub_080566e0
sub_080566e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	mov		r12, r1
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	ldrh	r3, [r1, #0x0]
	add		r0, #0xec
	ldr		r2, [r0, #0x0]
	ldr		r1, _08056770
	ldr		r0, [r1, #0x0]
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r4, r0, #0x8
	add		r6, r1, #0x0
	cmp		r2, r4
	ble		_0805672e
	add		r0, r5, #0x0
	add		r0, #0x88
	ldrh	r5, [r0, #0x0]
	add		r1, r4, #0x0
_0805671e:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	add		r2, r2, r0
	add		r0, r0, r5
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r2, r1
	bgt		_0805671e
_0805672e:
	mov		r5, #0xce
	lsl		r5, r5, #0x1
	add		r0, r7, r5
	ldr		r0, [r0, #0x0]
	mov		r4, #0x88
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0805674c
	add		r0, #0xff
_0805674c:
	lsl		r0, r0, #0x8
	lsr		r3, r0, #0x10
	ldr		r1, [r6, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r2, r0, #0x8
	mov		r4, #0x0
	mov		r9, r5
	mov		r5, #0x87
	lsl		r5, r5, #0x1
	mov		r10, r5
	mov		r6, #0xe4
	add		r6, r6, r7
	mov		r8, r6
	add		r5, r1, #0x0
	b		_08056790

.incbin "base.gba", 0x5676E, 0x2

_08056770:	.4byte 0x080d35ac

_08056774:
	lsl		r1, r3, #0x10
	asr		r1, r1, #0x10
	add		r2, r2, r1
	ldr		r0, [r5, #0x0]
	add		r0, #0x88
	ldrh	r0, [r0, #0x0]
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x10
	lsl		r0, r4, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r4, r0, #0x10
_08056790:
	lsl		r0, r3, #0x10
	cmp		r0, #0x0
	bge		_08056774
	mov		r6, r12
	mov		r1, #0x2
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x8
	cmp		r2, r0
	bgt		_0805683c
	lsl		r0, r4, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	lsr		r4, r0, #0x10
	ldr		r3, _08056828
	ldr		r6, [r3, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xd0
	mov		r0, r9
	add		r5, r7, r0
	ldr		r1, [r5, #0x0]
	mov		r2, r10
	add		r0, r1, r2
	mov		r7, #0x0
	ldrsh	r2, [r0, r7]
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	add		r1, r2, #0x0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_080567d6
	add		r1, #0xff
_080567d6:
	asr		r1, r1, #0x8
	lsl		r0, r4, #0x10
	asr		r4, r0, #0x10
	mul		r1, r4
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xcc
	ldr		r1, [r5, #0x0]
	mov		r2, #0x86
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	mov		r5, #0x0
	ldrsh	r2, [r0, r5]
	mov		r6, #0x84
	lsl		r6, r6, #0x1
	add		r1, r1, r6
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08056806
	add		r0, #0xff
_08056806:
	asr		r0, r0, #0x8
	add		r1, r0, #0x0
	mul		r1, r4
	ldr		r0, [r3, #0x0]
	add		r1, r0, r1
	str		r1, [r3, #0x0]
	add		r2, r3, #0x0
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	ble		_0805682c
	mov		r4, r12
	mov		r5, #0x4
	ldrsh	r0, [r4, r5]
	lsl		r0, r0, #0x8
	sub		r0, r1, r0
	b		_08056836

_08056828:	.4byte 0x0200D58C

_0805682c:
	mov		r6, r12
	mov		r7, #0x4
	ldrsh	r0, [r6, r7]
	lsl		r0, r0, #0x8
	add		r0, r1, r0
_08056836:
	str		r0, [r2, #0x0]
	mov		r0, #0x1
	b		_0805684a
_0805683c:
	ldr		r0, [r5, #0x0]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	cmp		r2, r0
	bge		_08056774
	mov		r0, #0x0
_0805684a:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080566e0

	thumb_func_start sub_08056858
sub_08056858:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	bl		sub_080579e4
	lsl		r0, r0, #0x10
	asr		r6, r0, #0x10
	cmp		r6, #0x0
	bne		_080568c2
	ldr		r0, _080568c8
	mov		r1, #0x64
	bl		sub_080b63dc
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r1, [r1, #0x0]
	add		r1, #0xfe
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bge		_080568c2
	ldr		r0, _080568cc
	ldr		r3, [r0, #0x0]
	add		r4, r3, #0x0
	add		r4, #0xcc
	add		r1, r5, #0x0
	add		r1, #0xe4
	ldr		r0, [r4, #0x0]
	ldr		r2, [r1, #0x0]
	sub		r0, r0, r2
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r2, r0
	str		r2, [r4, #0x0]
	add		r3, #0xd0
	add		r1, r5, #0x0
	add		r1, #0xe8
	ldr		r0, [r3, #0x0]
	ldr		r2, [r1, #0x0]
	sub		r0, r0, r2
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r2, r0
	str		r2, [r3, #0x0]
	mov		r1, #0xd3
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r6, [r0, #0x0]
_080568c2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080568c8:	.4byte 0x0200BDD4
_080568cc:	.4byte 0x0200D58C
	thumb_func_end sub_08056858

	thumb_func_start sub_080568d0
sub_080568d0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	cmp		r2, #0x1
	beq		_0805694a
	cmp		r2, #0x1
	bgt		_080568ee
	cmp		r2, #0x0
	beq		_080568f6
	b		_08056c96
_080568ee:
	cmp		r2, #0x2
	bne		_080568f4
	b		_08056b74
_080568f4:
	b		_08056c96
_080568f6:
	add		r1, r4, #0x0
	add		r1, #0xff
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x1
	orr		r0, r3
	strb	r0, [r1, #0x0]
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x21
	neg		r0, r0
	and		r0, r1
	strb	r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	strh	r2, [r0, #0x0]
	mov		r5, #0x85
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	strh	r2, [r0, #0x0]
	mov		r7, #0x84
	lsl		r7, r7, #0x1
	add		r0, r4, r7
	strh	r2, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xd4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x4
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldrb	r0, [r1, #0x0]
	orr		r0, r3
	strb	r0, [r1, #0x0]
_08056942:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08056942
_0805694a:
	add		r1, r4, #0x0
	add		r1, #0xf0
	str		r1, [sp, #0x20]
	add		r2, r4, #0x0
	add		r2, #0xf4
	str		r2, [sp, #0x24]
	add		r3, r4, #0x0
	add		r3, #0xf8
	str		r3, [sp, #0x28]
	add		r7, r4, #0x0
	add		r7, #0xfe
	add		r5, r4, #0x0
	add		r5, #0x54
	str		r5, [sp, #0x30]
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r4, r0
	str		r0, [sp, #0x1c]
	sub		r1, #0xc
	str		r1, [sp, #0x0]
	mov		r2, #0xe8
	add		r2, r2, r4
	mov		r9, r2
	mov		r3, #0xec
	add		r3, r3, r4
	mov		r8, r3
	mov		r5, #0x84
	lsl		r5, r5, #0x1
	add		r5, r4, r5
	str		r5, [sp, #0x4]
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r10, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r6, r4, r1
	mov		r2, #0x86
	lsl		r2, r2, #0x1
	add		r2, r4, r2
	str		r2, [sp, #0x8]
	mov		r3, #0x87
	lsl		r3, r3, #0x1
	add		r3, r4, r3
	str		r3, [sp, #0xc]
	mov		r5, #0x88
	lsl		r5, r5, #0x1
	add		r5, r4, r5
	str		r5, [sp, #0x10]
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r0, r4, r0
	str		r0, [sp, #0x14]
_080569b4:
	ldr		r1, [sp, #0x0]
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x20]
	str		r0, [r2, #0x0]
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	ldr		r5, [sp, #0x24]
	str		r0, [r5, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x28]
	str		r0, [r2, #0x0]
	ldr		r3, [sp, #0x4]
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	ldr		r2, [sp, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r3, r10
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r1, [r6, r3]
	mov		r5, r8
	ldr		r0, [r5, #0x0]
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	ldr		r0, _08056af0
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x88
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r6, #0x0]
	add		r0, r0, r1
	strh	r0, [r6, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	ldr		r3, [r5, #0x0]
	cmp		r3, r0
	bgt		_08056af8
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x1
	bls		_08056a26
	mov		r2, #0x1
	strb	r2, [r7, #0x0]
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
_08056a26:
	ldr		r3, [sp, #0x1c]
	ldr		r1, [r3, #0x0]
	add		r1, #0xbf
	ldrb	r2, [r1, #0x0]
	mov		r5, #0x2
	neg		r5, r5
	add		r0, r5, #0x0
	and		r0, r2
	strb	r0, [r1, #0x0]
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	ldrb	r2, [r3, #0x0]
	lsl		r0, r2, #0x1d
	lsr		r1, r0, #0x1e
	add		r0, r1, #0x0
	cmp		r0, #0x2
	bhi		_08056a4c
	add		r1, #0x1
_08056a4c:
	mov		r0, #0x3
	and		r1, r0
	lsl		r1, r1, #0x1
	sub		r0, #0xa
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r1, _08056af0
	ldr		r0, [r1, #0x0]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	mov		r2, r8
	str		r0, [r2, #0x0]
	ldr		r3, [sp, #0x8]
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	ldr		r2, [sp, #0x4]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08056a7c
	add		r0, #0xff
_08056a7c:
	asr		r0, r0, #0x8
	ldr		r1, [sp, #0x4]
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0xc]
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r2, r10
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08056a96
	add		r0, #0xff
_08056a96:
	asr		r0, r0, #0x8
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x10]
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r2, #0x0
	ldrsh	r0, [r6, r2]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08056aae
	add		r0, #0xff
_08056aae:
	asr		r0, r0, #0x8
	strh	r0, [r6, #0x0]
	ldr		r3, _08056af4
	ldr		r1, [r3, #0x0]
	add		r1, #0xdc
	ldrb	r2, [r1, #0x0]
	add		r0, r5, #0x0
	and		r0, r2
	strb	r0, [r1, #0x0]
	mov		r5, #0x0
	ldrsh	r2, [r6, r5]
	ldr		r1, _08056af0
	ldr		r0, [r1, #0x0]
	add		r0, #0x88
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	neg		r1, r1
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	cmp		r2, r0
	bge		_08056b6c
	mov		r5, #0x0
	strh	r5, [r6, #0x0]
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08056b6c

_08056af0:	.4byte 0x0200D580
_08056af4:	.4byte 0x0200D58C

_08056af8:
	ldr		r1, _08056b54
	ldr		r0, [r1, #0x0]
	add		r0, #0xdc
	ldrb	r1, [r0, #0x0]
	mov		r5, #0x1
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08056b58
	ldr		r0, [sp, #0x14]
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08056b58
	add		r0, r2, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	sub		r0, #0xd0
	lsl		r0, r0, #0x8
	mov		r5, r9
	ldr		r1, [r5, #0x0]
	cmp		r1, r0
	ble		_08056b58
	mov		r1, #0x26
	ldrsh	r0, [r2, r1]
	lsl		r0, r0, #0x8
	cmp		r3, r0
	blt		_08056b6c
	add		r0, r2, #0x0
	add		r0, #0x5a
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	cmp		r3, r0
	bgt		_08056b6c
	mov		r1, #0x6
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x6
	beq		_08056b6c
	strb	r1, [r7, #0x0]
	ldr		r0, [sp, #0x30]
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_08056b6c

_08056b54:	.4byte 0x0200D58C

_08056b58:
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x1
	bls		_08056b6c
	mov		r3, #0x1
	strb	r3, [r7, #0x0]
	ldr		r0, [sp, #0x30]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
_08056b6c:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_080569b4
_08056b74:
	mov		r5, #0x89
	lsl		r5, r5, #0x1
	add		r2, r4, r5
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x20
	orr		r0, r1
	strb	r0, [r2, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xfe
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1
	bls		_08056b9a
	mov		r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x54
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_08056b9a:
	mov		r7, #0x84
	lsl		r7, r7, #0x1
	add		r5, r4, r7
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrh	r1, [r5, #0x0]
	ldrh	r0, [r2, #0x0]
	orr		r1, r0
	add		r3, r4, #0x0
	add		r3, #0xd4
	str		r3, [sp, #0x18]
	sub		r7, #0x4
	add		r7, r4, r7
	str		r7, [sp, #0x2c]
	add		r0, r4, #0x0
	add		r0, #0xf0
	str		r0, [sp, #0x20]
	add		r3, #0x10
	add		r7, r4, #0x0
	add		r7, #0xf4
	str		r7, [sp, #0x24]
	sub		r0, #0x8
	cmp		r1, #0x0
	beq		_08056c76
	mov		r1, #0x89
	lsl		r1, r1, #0x1
	add		r1, r1, r4
	mov		r8, r1
	str		r0, [sp, #0x38]
	add		r6, r5, #0x0
	add		r5, r2, #0x0
	mov		r2, #0x86
	lsl		r2, r2, #0x1
	add		r2, r2, r4
	mov		r10, r2
	mov		r7, #0x87
	lsl		r7, r7, #0x1
	add		r7, r7, r4
	mov		r9, r7
_08056bea:
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x6
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r7, [sp, #0x20]
	str		r0, [r7, #0x0]
	ldr		r1, [sp, #0x38]
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x24]
	str		r0, [r2, #0x0]
	mov		r7, #0x0
	ldrsh	r1, [r6, r7]
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r3, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	ldr		r2, [sp, #0x38]
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r7, r10
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	mov		r2, #0x0
	ldrsh	r0, [r6, r2]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08056c2a
	add		r0, #0xff
_08056c2a:
	asr		r0, r0, #0x8
	mov		r2, #0x0
	strh	r0, [r6, #0x0]
	mov		r7, r9
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	mov		r7, #0x0
	ldrsh	r0, [r5, r7]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08056c42
	add		r0, #0xff
_08056c42:
	asr		r0, r0, #0x8
	strh	r0, [r5, #0x0]
	ldrh	r0, [r6, #0x0]
	add		r0, #0x7
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0xe
	bhi		_08056c54
	strh	r2, [r6, #0x0]
_08056c54:
	ldrh	r0, [r5, #0x0]
	add		r0, #0x7
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0xe
	bhi		_08056c62
	strh	r2, [r5, #0x0]
_08056c62:
	add		r0, r4, #0x0
	str		r3, [sp, #0x34]
	bl		sub_080b7690
	ldrh	r0, [r6, #0x0]
	ldrh	r1, [r5, #0x0]
	orr		r0, r1
	ldr		r3, [sp, #0x34]
	cmp		r0, #0x0
	bne		_08056bea
_08056c76:
	ldr		r0, [sp, #0x18]
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x4
	orr		r0, r1
	ldr		r1, [sp, #0x18]
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x2c]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
_08056c8e:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08056c8e
_08056c96:
	ldr		r0, _08056cb4
	ldr		r1, _08056cb8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x56CB2, 0x2

_08056cb4:	.4byte 0x080d3560 @ m_aioi/maTennisChr.cpp
_08056cb8:	.4byte 0x000009B2
	thumb_func_end sub_080568d0

	thumb_func_start sub_08056cbc
sub_08056cbc:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r2, #0x85
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	mov		r2, #0x0
	strh	r2, [r0, #0x0]
	mov		r4, #0x84
	lsl		r4, r4, #0x1
	add		r0, r3, r4
	strh	r2, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	strh	r1, [r0, #0x0]
	ldr		r0, _08056d1c
	ldr		r1, [r0, #0x0]
	add		r1, #0x8a
	ldrh	r0, [r1, #0x0]
	add		r4, #0x6
	add		r2, r3, r4
	strh	r0, [r2, #0x0]
	ldrh	r2, [r1, #0x0]
	sub		r4, #0x2
	add		r0, r3, r4
	strh	r2, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	mov		r2, #0x88
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	strh	r0, [r1, #0x0]
	sub		r4, #0x8
	add		r2, r3, r4
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, [r3, #0x2c]
	add		r0, r3, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x56D1A, 0x2

_08056d1c:	.4byte 0x0200D580
	thumb_func_end sub_08056cbc

	thumb_func_start sub_08056d20
sub_08056d20:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	mov		r12, r0
	add		r0, #0xec
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x1
	ldr		r0, _08056dd8
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r4, r0, #0x8
	cmp		r1, r4
	ble		_08056d66
	add		r0, r5, #0x0
	add		r0, #0x88
	ldrh	r5, [r0, #0x0]
_08056d4c:
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	add		r1, r1, r0
	add		r0, r0, r5
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	lsl		r0, r3, #0x10
	mov		r3, #0x80
	lsl		r3, r3, #0x9
	add		r0, r0, r3
	lsr		r3, r0, #0x10
	cmp		r1, r4
	bgt		_08056d4c
_08056d66:
	mov		r6, #0xd2
	lsl		r6, r6, #0x1
	add		r6, r12
	ldr		r2, [r6, #0x0]
	add		r2, #0xa4
	ldr		r0, _08056ddc
	ldr		r5, [r0, #0x0]
	mov		r0, #0xcc
	add		r0, r0, r5
	mov		r8, r0
	mov		r4, r12
	add		r4, #0xe4
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r1, r0, #0x0
	mul		r1, r3
	ldr		r0, [r4, #0x0]
	add		r0, r0, r1
	mov		r1, r8
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldr		r2, [r6, #0x0]
	add		r2, #0xa8
	add		r5, #0xd0
	add		r4, #0x4
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r1, r0, #0x0
	mul		r1, r3
	ldr		r0, [r4, #0x0]
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	str		r0, [r2, #0x0]
	ldr		r0, [r6, #0x0]
	add		r0, #0xac
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r1, [r6, #0x0]
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x56DD6, 0x2

_08056dd8:	.4byte 0x0200D580
_08056ddc:	.4byte 0x0200D58C
	thumb_func_end sub_08056d20

	thumb_func_start sub_08056de0
sub_08056de0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r12, r0
	mov		r8, r1
	add		r0, #0xe8
	ldr		r6, [r0, #0x0]
	mov		r0, #0x85
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	ldrh	r5, [r0, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_08056e12
_08056e08:
	mov		r0, #0x0
	b		_08056ed4
_08056e0c:
	mov		r3, #0x0
	str		r3, [sp, #0x0]
	b		_08056ece
_08056e12:
	cmp		r0, #0x0
	ble		_08056e24
	mov		r5, r8
	neg		r5, r5
	mov		r8, r5
	neg		r6, r6
	neg		r0, r0
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
_08056e24:
	cmp		r6, r8
	ble		_08056ece
	mov		r0, r12
	add		r0, #0xec
	ldr		r4, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrh	r3, [r0, #0x0]
	lsl		r2, r5, #0x10
	ldr		r0, _08056ee4
	ldr		r0, [r0, #0x0]
	mov		r7, #0x88
	add		r7, r7, r0
	mov		r9, r7
	ldrh	r5, [r7, #0x0]
	mov		r1, sp
	strh		r5, [r1, #0x4]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	str		r0, [sp, #0x8]
	mov		r7, #0x87
	lsl		r7, r7, #0x1
	add		r7, r12
	mov		r10, r7
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	add		r12, r0
_08056e5e:
	asr		r1, r2, #0x10
	add		r6, r6, r1
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	add		r4, r4, r0
	mov		r3, sp
	ldrh		r3, [r3, #0x4]
	add		r0, r0, r3
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	ldr		r5, [sp, #0x8]
	cmp		r4, r5
	bgt		_08056ebc
	add		r4, r5, #0x0
	mov		r7, r10
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08056e88
	add		r0, #0xff
_08056e88:
	lsl		r0, r0, #0x8
	lsr		r5, r0, #0x10
	mov		r7, r12
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08056e9e
	add		r0, #0xff
_08056e9e:
	lsl		r2, r0, #0x8
	lsr		r3, r2, #0x10
	asr		r2, r2, #0x10
	mov		r7, r9
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	neg		r1, r1
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	cmp		r2, r0
	blt		_08056e0c
	lsl		r0, r5, #0x10
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08056e08
_08056ebc:
	ldr		r1, [sp, #0x0]
	lsl		r0, r1, #0x10
	mov		r5, #0x80
	lsl		r5, r5, #0x9
	add		r0, r0, r5
	lsr		r0, r0, #0x10
	str		r0, [sp, #0x0]
	cmp		r6, r8
	bgt		_08056e5e
_08056ece:
	ldr		r7, [sp, #0x0]
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
_08056ed4:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08056ee4:	.4byte 0x0200D580
	thumb_func_end sub_08056de0

	thumb_func_start sub_08056ee8
sub_08056ee8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x40
	bl		sub_0805298c
	add		r3, r4, #0x0
	add		r3, #0xa8
	ldrh	r1, [r3, #0x0]
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	mov		r0, #0xaa
	add		r0, r0, r4
	mov		r12, r0
	add		r0, r4, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08056f12
	add		r0, #0xff
_08056f12:
	asr		r0, r0, #0x8
	mov		r1, r12
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r2, #0xb5
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrh	r0, [r0, #0x0]
	add		r0, #0x40
	add		r2, #0x6
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xbd
	ldrb	r0, [r0, #0x0]
	add		r2, #0xd
	add		r1, r4, r2
	strb	r0, [r1, #0x0]
	mov		r2, #0x0
	ldrh	r0, [r3, #0x0]
	add		r0, #0x3f
	lsl		r0, r0, #0x10
	mov		r1, #0xb7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_08056f60
	mov		r3, r12
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	mov		r0, #0x10
	neg		r0, r0
	cmp		r1, r0
	ble		_08056f60
	cmp		r1, #0xdf
	bgt		_08056f60
	mov		r2, #0x1
_08056f60:
	mov		r1, #0x89
	lsl		r1, r1, #0x1
	add		r3, r4, r1
	lsl		r2, r2, #0x3
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x9
	neg		r0, r0
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x0]
	mov		r2, #0x0
	mov		r3, #0xb4
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	add		r0, #0x3f
	lsl		r0, r0, #0x10
	mov		r1, #0xb7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_08056fa2
	mov		r1, #0xb5
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r0, #0x10
	neg		r0, r0
	cmp		r1, r0
	ble		_08056fa2
	cmp		r1, #0xdf
	bgt		_08056fa2
	mov		r2, #0x1
_08056fa2:
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	lsl		r2, r2, #0x4
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x11
	neg		r0, r0
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xec
	ldr		r0, _08056ff8
	ldr		r0, [r0, #0x0]
	add		r0, #0x7a
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	sub		r0, r1, r0
	ldr		r1, _08056ffc
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_08056fd2
	mov		r0, #0x0
_08056fd2:
	cmp		r0, #0x0
	bge		_08056fd8
	add		r0, #0x7f
_08056fd8:
	asr		r0, r0, #0x7
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r4, #0x0
	add		r1, #0xb4
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	strh	r0, [r1, #0x0]
	add		r1, #0x6
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x56FF6, 0x2

_08056ff8:	.4byte 0x0200D580
_08056ffc:	.4byte 0xFFFFE800
	thumb_func_end sub_08056ee8

	thumb_func_start sub_08057000
sub_08057000:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	mov		r9, r1
	bl		sub_080b74f4
	mov		r0, #0x40
	add		r0, r0, r7
	mov		r8, r0
	bl		sub_0804f114
	ldr		r0, _080570e4
	str		r0, [r7, #0x4c]
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r5, r7, r1
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	sub		r1, #0x2
	and		r0, r1
	strb	r0, [r5, #0x0]
	ldr		r0, _080570e8
	str		r0, [r7, #0x4c]
	ldr		r0, _080570ec
	str		r0, [r7, #0xc]
	mov		r0, #0x8a
	lsl		r0, r0, #0x1
	add		r6, r7, r0
	add		r0, r6, #0x0
	bl		sub_0808e21c
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r0, r8
	mov		r1, #0xc
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	add		r1, r7, #0x0
	add		r1, #0xe4
	add		r0, r7, #0x0
	add		r0, #0xf0
	str		r4, [r0, #0x0]
	str		r4, [r1, #0x0]
	add		r1, #0x4
	add		r0, #0x4
	str		r4, [r0, #0x0]
	str		r4, [r1, #0x0]
	add		r1, #0x4
	add		r0, #0x4
	str		r4, [r0, #0x0]
	str		r4, [r1, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r4, [r0, #0x0]
	sub		r1, #0x2
	add		r0, r7, r1
	strh	r4, [r0, #0x0]
	add		r1, #0x9c
	add		r0, r7, r1
	mov		r1, r9
	str		r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xff
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r1, #0x81
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r4, [r0, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r5, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0xc
	bl		sub_0808e03c
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	add		r0, r6, #0x0
	mov		r1, #0x2
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x570E2, 0x2

_080570e4:	.4byte 0x080e2024
_080570e8:	.4byte 0x080e1e9c
_080570ec:	.4byte 0x080e1ebc
	thumb_func_end sub_08057000

	thumb_func_start sub_080570f0
sub_080570f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	cmp		r1, #0x2
	beq		_08057180
	cmp		r1, #0x2
	ble		_0805710a
	cmp		r1, #0x3
	beq		_080571f8
	b		_08057200
_0805710a:
	cmp		r1, #0x0
	blt		_08057200
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r6, r5, r1
	ldr		r2, _08057154
	mov		r10, r2
	mov		r0, #0xd0
	neg		r0, r0
	mov		r8, r0
	mov		r1, #0xff
	mov		r9, r1
_08057128:
	ldrb	r4, [r7, #0x0]
	ldr		r0, [r6, #0x0]
	add		r0, #0xe8
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	add		r1, #0x78
	ldrb	r3, [r1, #0x0]
	mov		r2, r8
	sub		r1, r2, r3
	lsl		r1, r1, #0x8
	ldr		r2, [r0, #0x0]
	cmp		r2, r1
	blt		_08057158
	add		r1, r4, #0x0
	add		r0, r3, #0x0
	sub		r0, #0xd0
	lsl		r0, r0, #0x8
	cmp		r2, r0
	ble		_08057150
	add		r1, r4, #0x2
_08057150:
	add		r0, r1, #0x0
	b		_0805715a

_08057154:	.4byte 0x0200D580

_08057158:
	add		r0, r4, #0x1
_0805715a:
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	add		r1, r5, #0x0
	add		r1, #0xfe
	ldrb	r0, [r1, #0x0]
	cmp		r0, r2
	beq		_08057178
	strb	r2, [r1, #0x0]
	mov		r1, r9
	and		r1, r2
	add		r0, r5, #0x0
	add		r0, #0x54
	mov		r2, #0x0
	bl		sub_0808e3c0
_08057178:
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_08057128
_08057180:
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	add		r0, #0x3
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r5, #0x0
	add		r2, #0xfe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_080571a4
	add		r0, r5, #0x0
	add		r0, #0x54
	strb	r1, [r2, #0x0]
	mov		r2, #0x0
	bl		sub_0808e3c0
_080571a4:
	mov		r4, #0x0
	add		r7, r5, #0x0
	add		r7, #0xd4
_080571aa:
	add		r0, r5, #0x0
	bl		sub_080b7690
	lsl		r0, r4, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_080571aa
	ldr		r0, _080571f4
	add		r6, r5, r0
	mov		r4, #0x0
	mov		r0, #0xfc
	strb	r0, [r6, #0x0]
	add		r0, r5, #0x0
	bl		sub_080b7690
	strb	r4, [r6, #0x0]
	mov		r4, #0x1
_080571d4:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldrh	r1, [r7, #0x0]
	lsr		r1, r1, #0x3
	add		r0, r4, #0x0
	bic		r0, r1
	cmp		r0, #0x0
	beq		_080571d4
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0805720c

_080571f4:	.4byte 0x0000019D

_080571f8:
	add		r0, r5, #0x0
	bl		sub_080b7690
	b		_080571f8
_08057200:
	ldr		r0, _0805721c
	ldr		r1, _08057220
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0805720c:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5721A, 0x2

_0805721c:	.4byte 0x080d3560 @ m_aioi/maTennisChr.cpp
_08057220:	.4byte 0x00000B19
	thumb_func_end sub_080570f0

	thumb_func_start sub_08057224
sub_08057224:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, #0x40
	bl		sub_0805298c
	add		r3, r4, #0x0
	add		r3, #0xa8
	ldrh	r1, [r3, #0x0]
	mov		r2, #0xae
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	mov		r0, #0xaa
	add		r0, r0, r4
	mov		r12, r0
	add		r0, r4, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0805724e
	add		r0, #0xff
_0805724e:
	asr		r1, r0, #0x8
	mov		r2, r12
	ldrh	r2, [r2, #0x0]
	add		r1, r1, r2
	ldr		r2, _08057304
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r0, r0, r1
	mov		r1, #0xaf
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrh	r0, [r0, #0x0]
	add		r0, #0x1
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xbd
	ldrb	r0, [r0, #0x0]
	add		r2, #0xd
	add		r1, r4, r2
	strb	r0, [r1, #0x0]
	mov		r5, #0x0
	ldrh	r0, [r3, #0x0]
	add		r0, #0x3f
	lsl		r0, r0, #0x10
	mov		r1, #0xb7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_080572aa
	mov		r3, r12
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	mov		r0, #0x10
	neg		r0, r0
	cmp		r1, r0
	ble		_080572aa
	cmp		r1, #0xdf
	bgt		_080572aa
	mov		r5, #0x1
_080572aa:
	mov		r1, #0xcf
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	orr		r0, r5
	strb	r0, [r2, #0x0]
	mov		r2, #0x0
	mov		r3, #0xae
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	add		r0, #0x3f
	lsl		r0, r0, #0x10
	mov		r1, #0xb7
	lsl		r1, r1, #0x11
	cmp		r0, r1
	bhi		_080572ea
	mov		r1, #0xaf
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r0, #0x10
	neg		r0, r0
	cmp		r1, r0
	ble		_080572ea
	cmp		r1, #0xdf
	bgt		_080572ea
	mov		r2, #0x1
_080572ea:
	mov		r0, #0xcf
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	lsl		r2, r2, #0x1
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x3
	neg		r0, r0
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08057304:	.4byte 0x0000019D
	thumb_func_end sub_08057224

	thumb_func_start sub_08057308
sub_08057308:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	mov		r10, r1
	bl		sub_080b74f4
	mov		r0, #0x40
	add		r0, r0, r7
	mov		r9, r0
	bl		sub_0804f114
	ldr		r0, _080573f4
	str		r0, [r7, #0x4c]
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r6, r7, r1
	ldrb	r1, [r6, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	mov		r5, #0x5
	neg		r5, r5
	and		r0, r5
	strb	r0, [r6, #0x0]
	ldr		r0, _080573f8
	str		r0, [r7, #0x4c]
	ldr		r0, _080573fc
	str		r0, [r7, #0xc]
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r0, r0, r7
	mov		r8, r0
	bl		sub_0808e21c
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808b374
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r1, #0x24
	add		r0, r7, r1
	mov		r1, r10
	str		r1, [r0, #0x0]
	mov		r0, r9
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	add		r1, r7, #0x0
	add		r1, #0xe4
	mov		r0, #0xf8
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r0, _08057400
	str		r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	str		r0, [r1, #0x0]
	ldr		r1, _08057404
	add		r0, r7, r1
	strb	r4, [r0, #0x0]
	sub		r1, #0x1
	add		r0, r7, r1
	strb	r4, [r0, #0x0]
	sub		r1, #0x9a
	add		r0, r7, r1
	strh	r4, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xff
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldrb	r0, [r6, #0x0]
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r6, #0x0]
	mov		r0, #0xcf
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldrb	r0, [r1, #0x0]
	and		r5, r0
	strb	r5, [r1, #0x0]
	mov		r0, r8
	mov		r1, #0xf
	bl		sub_0808e03c
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_0808e3c0
	add		r0, r7, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080573f4:	.4byte 0x080e2024
_080573f8:	.4byte 0x080e1e54
_080573fc:	.4byte 0x080e1e74
_08057400:	.4byte 0xFFFF3000
_08057404:	.4byte 0x0000019D
	thumb_func_end sub_08057308

	thumb_func_start sub_08057408
sub_08057408:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	add		r4, r0, #0x0
	cmp		r1, #0x4
	bls		_0805741c
	b		_0805770e
_0805741c:
	lsl		r0, r1, #0x2
	ldr		r1, _08057428
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x57426, 0x2

_08057428:	.4byte 0x0805742c
_0805742c:	.4byte 0x08057440

.incbin "base.gba", 0x57430, 0x10
	thumb_func_end sub_08057408


.incbin "base.gba", 0x57440, 0x276

_080576b6:

.incbin "base.gba", 0x576B6, 0x58

_0805770e:

.incbin "base.gba", 0x5770E, 0x1E
_0805772c:	.4byte 0x080d3560 @ m_aioi/maTennisChr.cpp
_08057730:	.4byte 0x00000C1B
	thumb_func_start sub_08057734
sub_08057734:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	cmp		r1, #0x0
	beq		_08057760
	add		r2, r4, #0x0
	add		r2, #0xe4
	add		r1, r4, #0x0
	add		r1, #0xf8
	ldr		r0, [r1, #0x0]
	neg		r0, r0
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	ble		_08057756
	mov		r1, #0x1
_08057756:
	mov		r2, #0x86
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	b		_0805776c
_08057760:
	add		r0, r4, #0x0
	add		r0, #0xe4
	add		r1, r4, #0x0
	add		r1, #0xf8
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
_0805776c:
	add		r0, r4, #0x0
	add		r0, #0xe8
	ldr		r1, _080577b4
	str		r1, [r0, #0x0]
	add		r3, r4, #0x0
	add		r3, #0xfe
	mov		r0, #0x86
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldrb	r0, [r3, #0x0]
	ldrb	r2, [r1, #0x0]
	cmp		r0, r2
	beq		_080577a2
	add		r2, r4, #0x0
	add		r2, #0xbb
	mov		r0, #0x0
	strb	r0, [r2, #0x0]
	ldrb	r1, [r1, #0x0]
	ldrb	r0, [r3, #0x0]
	cmp		r0, r1
	beq		_080577a2
	add		r0, r4, #0x0
	add		r0, #0x54
	strb	r1, [r3, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_080577a2:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080577b4:	.4byte 0xFFFF3000
	thumb_func_end sub_08057734

	thumb_func_start sub_080577b8
sub_080577b8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	add		r4, r6, #0x0
	add		r4, #0x40
	add		r0, r4, #0x0
	bl		sub_0804f114
	ldr		r3, _08057848
	str		r3, [r6, #0x4c]
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	sub		r1, #0x2
	and		r0, r1
	strb	r0, [r2, #0x0]
	str		r3, [r6, #0x4c]
	ldr		r0, _0805784c
	str		r0, [r6, #0xc]
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r5, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	add		r3, r6, #0x0
	add		r3, #0xe4
	ldr		r0, _08057850
	str		r0, [r3, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xe8
	ldr		r0, _08057854
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xec
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xf8
	ldr		r0, [r3, #0x0]
	str		r0, [r2, #0x0]
	mov		r2, #0x86
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	sub		r2, #0xa
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xff
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x57846, 0x2

_08057848:	.4byte 0x080e2024
_0805784c:	.4byte 0x080e1e2c
_08057850:	.4byte 0xFFFF6C00
_08057854:	.4byte 0xFFFF3000
	thumb_func_end sub_080577b8

	thumb_func_start sub_08057858
sub_08057858:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r0, #0x40
	ldr		r1, _0805788c
	str		r1, [r5, #0x4c]
	ldr		r1, _08057890
	str		r1, [r5, #0xc]
	mov		r1, #0x0
	bl		sub_0804f0ec
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08057884
	add		r0, r5, #0x0
	bl		sub_080b74c8
_08057884:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5788A, 0x2

_0805788c:	.4byte 0x080e2024
_08057890:	.4byte 0x080e1e2c
	thumb_func_end sub_08057858

	thumb_func_start sub_08057894
sub_08057894:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _080578d8
	str		r0, [r6, #0x4c]
	ldr		r0, _080578dc
	str		r0, [r6, #0xc]
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0804f0ec
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080578d0
	add		r0, r6, #0x0
	bl		sub_080b74c8
_080578d0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x578D6, 0x2

_080578d8:	.4byte 0x080e1e54
_080578dc:	.4byte 0x080e1e74
	thumb_func_end sub_08057894

	thumb_func_start sub_080578e0
sub_080578e0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0xcf
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x5
	and		r0, r1
	cmp		r0, #0x1
	bne		_080578fc
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_0808e4a0
_080578fc:
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08057910
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808e4a0
_08057910:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x57916, 0x2
	thumb_func_end sub_080578e0

	thumb_func_start sub_08057918
sub_08057918:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	cmp		r1, #0x0
	beq		_0805794e
	add		r0, #0xe4
	ldr		r1, [r0, #0x0]
	neg		r1, r1
	str		r1, [r0, #0x0]
	asr		r1, r1, #0x1f
	mov		r0, #0x4
	and		r1, r0
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	sub		r2, #0x94
	add		r0, r4, r2
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	neg		r1, r1
	asr		r1, r1, #0x1f
	mov		r2, #0x2
	and		r1, r2
	mov		r2, #0x0
	bl		sub_0808e3c0
_0805794e:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08057918

	thumb_func_start sub_08057960
sub_08057960:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _080579a4
	str		r0, [r6, #0x4c]
	ldr		r0, _080579a8
	str		r0, [r6, #0xc]
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0804f0ec
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0805799c
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0805799c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x579A2, 0x2

_080579a4:	.4byte 0x080e1e9c
_080579a8:	.4byte 0x080e1ebc
	thumb_func_end sub_08057960

	thumb_func_start sub_080579ac
sub_080579ac:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080579c8
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_0808e4a0
_080579c8:
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_080579dc
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808e4a0
_080579dc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x579E2, 0x2
	thumb_func_end sub_080579ac

	thumb_func_start sub_080579e4
sub_080579e4:
	push	{ lr }
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08057a02
	mov		r0, #0x1
	neg		r0, r0
	b		_08057a24
_08057a02:
	mov		r3, #0x0
	add		r0, r2, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	ldr		r1, _08057a28
	add		r0, r0, r1
	ldr		r1, _08057a2c
	cmp		r0, r1
	bhi		_08057a22
	add		r0, r2, #0x0
	add		r0, #0xa8
	ldr		r1, [r0, #0x0]
	ldr		r0, _08057a30
	cmp		r1, r0
	ble		_08057a22
	mov		r3, #0x1
_08057a22:
	add		r0, r3, #0x0
_08057a24:
	pop		{ r1 }
	bx		r1

_08057a28:	.4byte 0x000057FF
_08057a2c:	.4byte 0x0000AFFE
_08057a30:	.4byte 0xFFFE5000
	thumb_func_end sub_080579e4

	thumb_func_start sub_08057a34
sub_08057a34:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	add		r0, #0xec
	ldr		r3, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r5, #0x0
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	b		_08057a84
_08057a4e:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r3, r3, r0
	ldr		r1, _08057a74
	ldr		r2, [r1, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x88
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r2, #0x7a
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x8
	cmp		r3, r0
	bgt		_08057a78
	mov		r5, #0x0
	b		_08057a8c

.incbin "base.gba", 0x57A72, 0x2

_08057a74:	.4byte 0x0200D580

_08057a78:
	lsl		r0, r5, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	lsr		r5, r0, #0x10
	lsl		r0, r1, #0x10
_08057a84:
	cmp		r0, #0x0
	bge		_08057a4e
	cmp		r3, r4
	bge		_08057a4e
_08057a8c:
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x57A96, 0x2
	thumb_func_end sub_08057a34

	thumb_func_start sub_08057a98
sub_08057a98:
	push	{ r4, r5, r6, lr }
	add		r4, r1, #0x0
	lsl		r2, r2, #0x10
	lsr		r6, r2, #0x10
	ldr		r5, _08057ac0
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080b63dc
	ldrb	r1, [r4, #0x0]
	cmp		r0, r1
	blt		_08057ac4
	add		r0, r5, #0x0
	mov		r1, #0x8
	bl		sub_080b63dc
	add		r0, r0, r6
	add		r0, #0x1
	b		_08057ad8

.incbin "base.gba", 0x57ABE, 0x2

_08057ac0:	.4byte 0x0200BDD4

_08057ac4:
	ldrb	r1, [r4, #0x2]
	ldrb	r0, [r4, #0x1]
	sub		r1, r1, r0
	add		r1, #0x1
	add		r0, r5, #0x0
	bl		sub_080b63dc
	add		r1, r0, #0x0
	ldrb	r0, [r4, #0x1]
	add		r0, r0, r1
_08057ad8:
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x57AE2, 0x116
	thumb_func_end sub_08057a98

	thumb_func_start sub_08057bf8
sub_08057bf8:
	push	{ lr }
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x0
	add		r2, #0x72
	b		_08057c0e
_08057c0c:
	add		r2, #0x4
_08057c0e:
	ldrh	r0, [r2, #0x0]
	cmp		r0, r1
	bcc		_08057c0c
	mov		r1, #0x2
	ldrsh	r0, [r2, r1]
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08057bf8

	thumb_func_start sub_08057c1c
sub_08057c1c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r2
	add		r4, r3, #0x0
	ldr		r5, [sp, #0x0+0x18]
	ldr		r2, [sp, #0x4+0x18]
	ldr		r3, [sp, #0x8+0x18]
	ldr		r0, [sp, #0xc+0x18]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08057c64
	ldr		r1, _08057c60
	ldr		r0, [r1, #0x0]
	add		r0, #0x8c
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x8e
	ldrh	r0, [r0, #0x0]
	strh	r0, [r5, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x90
	ldrh	r0, [r0, #0x0]
	strh	r0, [r2, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x92
	b		_08057ca6

_08057c60:	.4byte 0x0200D580

_08057c64:
	mov		r0, #0x4
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08057c94
	ldr		r1, _08057c90
	ldr		r0, [r1, #0x0]
	add		r0, #0x94
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x96
	ldrh	r0, [r0, #0x0]
	strh	r0, [r5, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x98
	ldrh	r0, [r0, #0x0]
	strh	r0, [r2, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x9a
	b		_08057ca6

_08057c90:	.4byte 0x0200D580

_08057c94:
	strh	r0, [r5, #0x0]
	strh	r0, [r4, #0x0]
	ldr		r1, _08057cd8
	ldr		r0, [r1, #0x0]
	add		r0, #0x8a
	ldrh	r0, [r0, #0x0]
	strh	r0, [r2, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0x8a
_08057ca6:
	ldrh	r0, [r0, #0x0]
	neg		r0, r0
	strh	r0, [r3, #0x0]
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_08057bf8
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r1, r8
	strh	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	add		r1, r0, r1
	strh	r1, [r4, #0x0]
	ldrh	r1, [r5, #0x0]
	add		r0, r0, r1
	strh	r0, [r5, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x57CD6, 0x2

_08057cd8:	.4byte 0x0200D580
	thumb_func_end sub_08057c1c

	thumb_func_start sub_08057cdc
sub_08057cdc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08055598
	add		r0, #0xd
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r4, #0x0
	add		r2, #0xfe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08057d00
	add		r0, r4, #0x0
	add		r0, #0x54
	strb	r1, [r2, #0x0]
	mov		r2, #0x0
	bl		sub_0808e3c0
_08057d00:
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_080b7690
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x57D16, 0x31A
	thumb_func_end sub_08057cdc

	thumb_func_start sub_08058030
sub_08058030:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x44
	add		r7, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	str		r1, [sp, #0x3C]
	ldr		r0, _080582a8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0805804e
	add		r0, #0xff
_0805804e:
	asr		r0, r0, #0x8
	neg		r0, r0
	lsl		r0, r0, #0x10
	ldr		r1, _080582ac
	add		r5, r7, r1
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	lsr		r2, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r1, r0
	bne		_08058066
	b		_08058166
_08058066:
	strh	r2, [r5, #0x0]
	mov		r3, #0xe0
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r2, #0xd0
	lsl		r2, r2, #0x7
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	add		r3, #0xc4
	add		r1, r7, r3
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r0, #0xd2
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r2, #0xb0
	lsl		r2, r2, #0x7
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	ldr		r3, _080582b0
	add		r1, r7, r3
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r0, #0x9a
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r3, #0xfc
	lsl		r3, r3, #0x6
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	ldr		r0, _080582b4
	add		r1, r7, r0
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r3, #0xd8
	lsl		r3, r3, #0x7
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	mov		r0, #0xcb
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r3, #0xd0
	lsl		r3, r3, #0x5
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	ldr		r0, _080582b8
	add		r1, r7, r0
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r3, #0xa0
	lsl		r3, r3, #0x7
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	mov		r0, #0xfc
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r2, #0xee
	lsl		r2, r2, #0x7
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	ldr		r3, _080582bc
	add		r1, r7, r3
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	ldr		r0, _080582c0
	add		r2, r7, r0
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	mov		r1, #0x8e
	lsl		r1, r1, #0x7
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r3, _080582c4
	add		r2, r7, r3
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	mov		r0, #0xaf
	lsl		r0, r0, #0x4
	add		r2, r7, r0
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, _080582c8
	add		r2, r7, r0
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, _080582cc
	add		r2, r7, r0
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, _080582d0
	add		r1, r7, r0
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r3, #0xe0
	lsl		r3, r3, #0x4
	add		r1, r7, r3
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_08058166:
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _080582d4
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	ldr		r0, _080582d8
	ldr		r0, [r0, #0x0]
	ldr		r1, _080582dc
	ldr		r2, [sp, #0x3C]
	lsl		r4, r2, #0x10
	asr		r3, r4, #0x10
	mov		r8, r3
	lsl		r2, r3, #0x2
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	bl		sub_0808b7e0
	add		r6, r0, #0x0
	str		r4, [sp, #0x40]
	cmp		r6, #0x0
	beq		_080581b0
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r6, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
_080581b0:
	add		r6, r7, #0x0
	add		r6, #0x54
	ldr		r0, _080582e0
	mov		r9, r0
	ldr		r1, [r0, #0x0]
	mov		r2, r8
	lsl		r0, r2, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r4, #0x1
	mov		r3, #0x1
	mov		r10, r3
	add		r0, r7, #0x0
	add		r0, #0xd1
	strb	r4, [r0, #0x0]
	ldr		r0, _080582e4
	add		r1, r7, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r3, r8
	cmp		r3, #0x2d
	beq		_080581ec
	b		_08058308
_080581ec:
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x6
	mov		r3, #0xe0
	lsl		r3, r3, #0x7
	add		r1, r1, r3
	add		r0, r7, #0x0
	add		r0, #0xf8
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	mov		r0, #0x8c
	lsl		r0, r0, #0x1
	add		r6, r7, r0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0x5a
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r2, _080582e8
	add		r0, r7, r2
	strb	r4, [r0, #0x0]
	ldr		r3, _080582ec
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x5
	add		r6, r7, r3
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0x5a
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r2, _080582f0
	add		r0, r7, r2
	strb	r4, [r0, #0x0]
	ldr		r3, _080582f4
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x5
	add		r6, r7, r3
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0x5a
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r2, _080582f8
	add		r0, r7, r2
	strb	r4, [r0, #0x0]
	ldr		r3, _080582fc
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x5
	add		r6, r7, r3
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0x5a
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r2, _08058300
	add		r0, r7, r2
	strb	r4, [r0, #0x0]
	ldr		r3, _08058304
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	b		_08058352

_080582a8:	.4byte 0x0200CE40
_080582ac:	.4byte 0x00000FA6
_080582b0:	.4byte 0x0000040C
_080582b4:	.4byte 0x00000594
_080582b8:	.4byte 0x0000071C
_080582bc:	.4byte 0x000008A4
_080582c0:	.4byte 0x00000968
_080582c4:	.4byte 0x00000A2C
_080582c8:	.4byte 0x00000BB4
_080582cc:	.4byte 0x00000C78
_080582d0:	.4byte 0x00000D3C
_080582d4:	.4byte 0x0200BAC4
_080582d8:	.4byte 0x0200BF08
_080582dc:	.4byte 0x0200D584
_080582e0:	.4byte 0x0200D588
_080582e4:	.4byte 0x00000113
_080582e8:	.4byte 0x00000195
_080582ec:	.4byte 0x000001D7
_080582f0:	.4byte 0x00000259
_080582f4:	.4byte 0x0000029B
_080582f8:	.4byte 0x0000031D
_080582fc:	.4byte 0x0000035F
_08058300:	.4byte 0x000003E1
_08058304:	.4byte 0x00000423

_08058308:
	mov		r3, #0x0
	ldrsh	r1, [r5, r3]
	mov		r2, #0xe0
	lsl		r2, r2, #0x6
	mov		r0, #0xd8
	lsl		r0, r0, #0x7
	add		r1, r1, r0
	add		r0, r7, #0x0
	add		r0, #0xf8
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	ldr		r1, _0805838c
	add		r3, r7, r1
	ldrb	r2, [r3, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r1, #0x0
	and		r0, r2
	strb	r0, [r3, #0x0]
	ldr		r2, _08058390
	add		r3, r7, r2
	ldrb	r2, [r3, #0x0]
	add		r0, r1, #0x0
	and		r0, r2
	strb	r0, [r3, #0x0]
	ldr		r0, _08058394
	add		r3, r7, r0
	ldrb	r2, [r3, #0x0]
	add		r0, r1, #0x0
	and		r0, r2
	strb	r0, [r3, #0x0]
	ldr		r3, _08058398
	add		r2, r7, r3
	ldrb	r0, [r2, #0x0]
	and		r1, r0
	strb	r1, [r2, #0x0]
_08058352:
	ldr		r0, [sp, #0x40]
	asr		r2, r0, #0x10
	ldr		r4, _0805839c
	ldr		r6, [r4, #0x0]
	ldr		r1, [r6, #0x0]
	lsl		r0, r2, #0x2
	add		r0, r0, r2
	lsl		r5, r0, #0x1
	add		r1, r5, r1
	mov		r0, sp
	mov		r2, #0xa
	bl		sub_0808c818
	add		r0, sp, #0x4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r8, r4
	mov		r10, r0
	cmp		r1, #0x0
	blt		_080583a0
	ldr		r1, [r6, #0x0]
	add		r1, r5, r1
	add		r0, sp, #0xc
	mov		r2, #0xa
	bl		sub_0808c818
	add		r0, sp, #0x10
	ldrh	r4, [r0, #0x0]
	b		_080583a2

_0805838c:	.4byte 0x000001D7
_08058390:	.4byte 0x0000029B
_08058394:	.4byte 0x0000035F
_08058398:	.4byte 0x00000423
_0805839c:	.4byte 0x080d35b0

_080583a0:
	mov		r4, #0xc
_080583a2:
	mov		r3, #0xe7
	lsl		r3, r3, #0x3
	add		r6, r7, r3
	add		r1, r4, #0x0
	add		r1, #0x19
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r0, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r5, _08058458
	ldr		r0, [r5, #0x0]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	add		r0, #0x19
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r0, _0805845c
	add		r6, r7, r0
	ldr		r1, [sp, #0x40]
	asr		r2, r1, #0x10
	mov		r3, r8
	ldr		r3, [r3, #0x0]
	mov		r9, r3
	ldr		r1, [r3, #0x0]
	lsl		r0, r2, #0x2
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	mov		r8, r0
	add		r1, r8
	mov		r0, sp
	mov		r2, #0xa
	bl		sub_0808c818
	add		r4, sp, #0x8
	ldrh	r1, [r4, #0x0]
	add		r1, #0x2b
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r0, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	add		r1, r8
	mov		r0, sp
	mov		r2, #0xa
	bl		sub_0808c818
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	ldr		r1, [r5, #0x0]
	add		r0, r0, r1
	ldrb	r0, [r0, #0x12]
	add		r0, #0x19
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r0, _08058460
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08058464
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	add		r1, r8
	mov		r0, r10
	mov		r2, #0xa
	bl		sub_0808c818
	mov		r0, sp
	add		r0, #0x6
	ldrh	r0, [r0, #0x0]
	mov		r4, sp
	add		r4, #0x2
	strb	r0, [r4, #0x0]
	mov		r3, r9
	ldr		r1, [r3, #0x0]
	add		r1, r8
	mov		r0, r10
	mov		r2, #0xa
	bl		sub_0808c818
	mov		r1, r10
	ldrh	r0, [r1, #0x0]
	b		_08058490

_08058458:	.4byte 0x0200D580
_0805845c:	.4byte 0x000007FC
_08058460:	.4byte 0x00000836

_08058464:
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	add		r1, r8
	mov		r0, r10
	mov		r2, #0xa
	bl		sub_0808c818
	mov		r3, r10
	ldrh	r0, [r3, #0x0]
	mov		r4, sp
	add		r4, #0x2
	strb	r0, [r4, #0x0]
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	add		r1, r8
	mov		r0, r10
	mov		r2, #0xa
	bl		sub_0808c818
	mov		r0, sp
	add		r0, #0x6
	ldrh	r0, [r0, #0x0]
_08058490:
	mov		r1, sp
	add		r1, #0x3
	strb	r0, [r1, #0x0]
	mov		r8, r4
	add		r5, r1, #0x0
	mov		r1, r8
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	ble		_080584f2
	mov		r4, sp
	mov		r1, #0xa
	bl		sub_080bbcac
	strb	r0, [r4, #0x0]
	mov		r2, r8
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	mov		r1, sp
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	ldrb	r2, [r5, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r9, r1
	cmp		r0, #0x9
	bgt		_080584d6
	mov		r3, r8
	strb	r2, [r3, #0x0]
	mov		r0, #0xff
	strb	r0, [r5, #0x0]
	b		_0805850a
_080584d6:
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0xa
	bl		sub_080bbcac
	mov		r1, r8
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	strb	r0, [r5, #0x0]
	b		_0805850a
_080584f2:
	mov		r2, #0x0
	mov		r0, #0xa
	mov		r3, r8
	strb	r0, [r3, #0x0]
	mov		r1, sp
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, sp
	strb	r2, [r0, #0x0]
	mov		r0, #0xff
	strb	r0, [r5, #0x0]
	mov		r9, r1
_0805850a:
	add		r6, #0xc4
	mov		r0, sp
	ldrb	r1, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08058526
	add		r0, r6, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_08058526:
	mov		r3, #0x0
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	ble		_08058536
	mov		r3, #0x1
_08058536:
	add		r2, r6, #0x0
	add		r2, #0xbf
	ldrb	r0, [r2, #0x0]
	mov		r4, #0x2
	neg		r4, r4
	add		r1, r4, #0x0
	and		r1, r0
	orr		r1, r3
	strb	r1, [r2, #0x0]
	add		r6, #0xc4
	mov		r0, r9
	ldrb	r1, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08058564
	add		r0, r6, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_08058564:
	add		r6, #0xc4
	mov		r2, r8
	ldrb	r1, [r2, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08058580
	add		r0, r6, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_08058580:
	add		r6, #0xc4
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	blt		_080585ae
	ldrb	r1, [r5, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_080585a2
	add		r0, r6, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_080585a2:
	add		r2, r6, #0x0
	add		r2, #0xbf
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	b		_080585b8
_080585ae:
	add		r2, r6, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
_080585b8:
	strb	r0, [r2, #0x0]
	mov		r3, #0xc4
	lsl		r3, r3, #0x1
	add		r6, r6, r3
	ldr		r0, [sp, #0x40]
	asr		r4, r0, #0x10
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	mov		r3, #0xd4
	bl		sub_08058ea4
	add		r0, r4, #0x0
	add		r0, #0xc8
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r0, _08058640
	mov		r1, #0x0
	bl		sub_0800ed80
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080068f8
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r4, r0, #0x0
	ldr		r1, [r5, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldrb	r2, [r4, #0x0]
	mov		r0, #0x4
	mov		r1, #0x10
	add		r4, #0x1
	mov		r6, #0x0
	strh	r0, [r5, #0x28]
	strh	r1, [r5, #0x2a]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	ldr		r1, _08058644
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
	ldr		r3, _08058648
	add		r0, r7, r3
	mov		r1, sp
	ldrh		r1, [r1, #0x3C]
	strh	r1, [r0, #0x0]
	ldr		r2, _0805864c
	add		r0, r7, r2
	strb	r6, [r0, #0x0]
	add		sp, #0x44
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5863E, 0x2

_08058640:	.4byte 0x0200AA18
_08058644:	.4byte 0x02008AD4
_08058648:	.4byte 0x00000FA4
_0805864c:	.4byte 0x00000FA9
	thumb_func_end sub_08058030

	thumb_func_start sub_08058650
sub_08058650:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, _08058664
	add		r7, r6, r0
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_08058668
	mov		r0, #0x0
	b		_080586d8

.incbin "base.gba", 0x58662, 0x2

_08058664:	.4byte 0x00000FA9

_08058668:
	ldr		r1, _080586b0
	add		r5, r6, r1
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r0, #0x2d
	bne		_080586b8
	mov		r1, #0xa8
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	ldr		r4, _080586b4
	ldr		r2, [r4, #0x0]
	lsl		r1, r1, #0x1
	add		r1, r1, r2
	ldrb	r2, [r1, #0x1]
	mov		r1, #0x11
	mov		r3, #0x0
	bl		sub_0804f150
	mov		r1, #0xd9
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	ldr		r2, [r4, #0x0]
	lsl		r1, r1, #0x1
	add		r1, r1, r2
	ldrb	r2, [r1, #0x1]
	mov		r1, #0x11
	mov		r3, #0x0
	bl		sub_0804f150
	mov		r0, #0x80
	b		_080586d4

.incbin "base.gba", 0x586AE, 0x2

_080586b0:	.4byte 0x00000FA4
_080586b4:	.4byte 0x0200D588

_080586b8:
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	ldr		r2, _080586e0
	ldr		r2, [r2, #0x0]
	lsl		r1, r1, #0x1
	add		r1, r1, r2
	ldrb	r2, [r1, #0x1]
	mov		r1, #0x11
	mov		r3, #0x0
	bl		sub_0804f150
	mov		r0, #0x10
_080586d4:
	strb	r0, [r7, #0x0]
	mov		r0, #0x1
_080586d8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x586DE, 0x2

_080586e0:	.4byte 0x0200D588
	thumb_func_end sub_08058650

	thumb_func_start sub_080586e4
sub_080586e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x40
	add		r6, r0, #0x0
	add		r7, r6, #0x0
	add		r7, #0x54
	mov		r4, #0x0
	mov		r0, #0x2
	neg		r0, r0
	add		r5, r0, #0x0
_080586fe:
	add		r0, r7, #0x0
	add		r0, #0x14
	bl		sub_0808e1ac
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	and		r0, r5
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	lsl		r0, r4, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x13
	ble		_080586fe
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _08058b18
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	strh	r3, [r0, #0x0]
	ldr		r4, _08058b1c
	add		r5, r6, r4
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x6
	mov		r10, r2
	mov		r4, #0xd0
	lsl		r4, r4, #0x7
	add		r1, r1, r4
	mov		r3, #0xde
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	str		r2, [r0, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r3, #0x1c
	add		r0, r6, r3
	mov		r3, #0xc0
	lsl		r3, r3, #0x5
	strh	r3, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0x90
	lsl		r2, r2, #0x7
	add		r1, r1, r4
	mov		r4, #0xa0
	lsl		r4, r4, #0x2
	add		r0, r6, r4
	str		r2, [r0, #0x0]
	mov		r2, #0xa1
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r4, #0x1c
	add		r0, r6, r4
	strh	r3, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0xb0
	lsl		r2, r2, #0x6
	mov		r4, #0xb0
	lsl		r4, r4, #0x7
	add		r1, r1, r4
	mov		r3, #0xd1
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	str		r2, [r0, #0x0]
	mov		r2, #0xd2
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r3, #0x1c
	add		r0, r6, r3
	mov		r3, #0xe0
	lsl		r3, r3, #0x5
	strh	r3, [r0, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0x88
	lsl		r2, r2, #0x7
	add		r1, r1, r4
	mov		r4, #0x81
	lsl		r4, r4, #0x3
	add		r0, r6, r4
	str		r2, [r0, #0x0]
	ldr		r2, _08058b20
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r4, #0x1c
	add		r0, r6, r4
	strh	r3, [r0, #0x0]
	mov		r0, #0x85
	lsl		r0, r0, #0x3
	add		r7, r6, r0
	add		r0, r7, #0x0
	mov		r1, #0xf
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	mov		r2, #0xa1
	lsl		r2, r2, #0x8
	mov		r3, #0xfc
	lsl		r3, r3, #0x6
	add		r1, r1, r3
	add		r4, #0xa8
	add		r0, r6, r4
	str		r2, [r0, #0x0]
	mov		r2, #0x9a
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _08058b24
	add		r0, r6, r3
	mov		r4, #0x2
	strb	r4, [r0, #0x0]
	ldr		r0, _08058b28
	add		r1, r6, r0
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	mov		r9, r2
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r1, #0x0]
	mov		r4, #0x9d
	lsl		r4, r4, #0x3
	add		r0, r6, r4
	mov		r1, r10
	strh	r1, [r0, #0x0]
	ldr		r2, _08058b2c
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x1
	mov		r8, r3
	mov		r4, r8
	orr		r0, r4
	strb	r0, [r1, #0x0]
	ldr		r0, _08058b30
	add		r7, r6, r0
	add		r0, r7, #0x0
	mov		r1, #0x17
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	mov		r2, #0xe0
	lsl		r2, r2, #0x6
	mov		r3, #0xd8
	lsl		r3, r3, #0x7
	add		r1, r1, r3
	mov		r4, #0xb2
	lsl		r4, r4, #0x3
	add		r0, r6, r4
	str		r2, [r0, #0x0]
	ldr		r2, _08058b34
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _08058b38
	add		r0, r6, r3
	mov		r4, #0x2
	strb	r4, [r0, #0x0]
	mov		r0, #0xb0
	lsl		r0, r0, #0x3
	add		r1, r6, r0
	ldrh	r0, [r1, #0x0]
	mov		r2, r9
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r3, #0x43
	add		r0, r6, r3
	mov		r4, r10
	strh	r4, [r0, #0x0]
	ldr		r0, _08058b3c
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x4
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0x18
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r4, #0x0
	ldrsh	r1, [r5, r4]
	mov		r2, #0xd4
	lsl		r2, r2, #0x8
	mov		r0, #0xd0
	lsl		r0, r0, #0x5
	add		r1, r1, r0
	ldr		r3, _08058b40
	add		r0, r6, r3
	str		r2, [r0, #0x0]
	mov		r4, #0xcb
	lsl		r4, r4, #0x3
	add		r0, r6, r4
	str		r1, [r0, #0x0]
	ldr		r1, _08058b44
	add		r0, r6, r1
	mov		r2, #0x2
	strb	r2, [r0, #0x0]
	sub		r3, #0x10
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	mov		r4, r9
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r1, #0xce
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	mov		r2, r10
	strh	r2, [r0, #0x0]
	add		r3, #0x2b
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	mov		r4, r8
	orr		r0, r4
	strb	r0, [r1, #0x0]
	ldr		r0, _08058b48
	add		r7, r6, r0
	add		r0, r7, #0x0
	mov		r1, #0x16
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xa0
	lsl		r1, r1, #0x7
	mov		r2, #0xe3
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	ldr		r4, _08058b4c
	add		r0, r6, r4
	str		r1, [r0, #0x0]
	mov		r1, #0x1
	sub		r2, #0x27
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	mov		r3, #0xe1
	lsl		r3, r3, #0x3
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	mov		r4, r9
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r1, _08058b50
	add		r0, r6, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	strh	r2, [r0, #0x0]
	add		r3, #0x2b
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	mov		r4, r8
	orr		r0, r4
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0xd2
	lsl		r2, r2, #0x7
	mov		r3, #0xee
	lsl		r3, r3, #0x7
	add		r1, r1, r3
	ldr		r4, _08058b54
	add		r0, r6, r4
	str		r2, [r0, #0x0]
	mov		r2, #0xfc
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	sub		r4, #0x27
	add		r0, r6, r4
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	sub		r2, #0x14
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r4, r9
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r0, _08058b58
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r4, #0x0
	ldrsh	r1, [r5, r4]
	mov		r0, #0x91
	lsl		r0, r0, #0x8
	mov		r10, r0
	add		r1, r1, r3
	mov		r2, #0x8a
	lsl		r2, r2, #0x4
	add		r0, r6, r2
	mov		r3, r10
	str		r3, [r0, #0x0]
	ldr		r4, _08058b5c
	add		r0, r6, r4
	str		r1, [r0, #0x0]
	ldr		r1, _08058b60
	add		r0, r6, r1
	mov		r2, #0x2
	strb	r2, [r0, #0x0]
	mov		r3, #0x89
	lsl		r3, r3, #0x4
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	mov		r4, r9
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r0, _08058b64
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x30
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r4, #0x0
	ldrsh	r1, [r5, r4]
	mov		r4, #0x8e
	lsl		r4, r4, #0x7
	add		r1, r1, r4
	ldr		r2, _08058b68
	add		r0, r6, r2
	mov		r3, r10
	str		r3, [r0, #0x0]
	add		r2, #0x4
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _08058b6c
	add		r0, r6, r3
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	sub		r2, #0x14
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r1, #0x0]
	ldr		r0, _08058b70
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r3, _08058b74
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0x9b
	lsl		r2, r2, #0x8
	add		r1, r1, r4
	ldr		r3, _08058b78
	add		r0, r6, r3
	str		r2, [r0, #0x0]
	ldr		r2, _08058b7c
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	sub		r3, #0x27
	add		r0, r6, r3
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	sub		r2, #0x14
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r1, #0x0]
	ldr		r0, _08058b80
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r3, _08058b84
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0xb9
	lsl		r2, r2, #0x8
	add		r1, r1, r4
	ldr		r3, _08058b88
	add		r0, r6, r3
	str		r2, [r0, #0x0]
	mov		r2, #0xaf
	lsl		r2, r2, #0x4
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	sub		r3, #0x27
	add		r0, r6, r3
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	sub		r2, #0x14
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r1, #0x0]
	ldr		r0, _08058b8c
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r3, _08058b90
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0xc3
	lsl		r2, r2, #0x8
	add		r1, r1, r4
	mov		r3, #0xbb
	lsl		r3, r3, #0x4
	add		r0, r6, r3
	str		r2, [r0, #0x0]
	ldr		r2, _08058b94
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	sub		r3, #0x27
	add		r0, r6, r3
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	sub		r2, #0x14
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r1, #0x0]
	ldr		r0, _08058b98
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r3, #0xbd
	lsl		r3, r3, #0x4
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xe
	mov		r2, #0xb
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r2, #0xaa
	lsl		r2, r2, #0x8
	add		r1, r1, r4
	ldr		r3, _08058b9c
	add		r0, r6, r3
	str		r2, [r0, #0x0]
	ldr		r4, _08058ba0
	add		r0, r6, r4
	str		r1, [r0, #0x0]
	ldr		r1, _08058ba4
	add		r0, r6, r1
	mov		r2, #0x2
	strb	r2, [r0, #0x0]
	sub		r3, #0x10
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	mov		r4, r9
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r0, _08058ba8
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	b		_08058bac

.incbin "base.gba", 0x58B16, 0x2

_08058b18:	.4byte 0x0200BAC0
_08058b1c:	.4byte 0x00000FA6
_08058b20:	.4byte 0x0000040C
_08058b24:	.4byte 0x000004A5
_08058b28:	.4byte 0x000004BC
_08058b2c:	.4byte 0x000004E7
_08058b30:	.4byte 0x000004EC
_08058b34:	.4byte 0x00000594
_08058b38:	.4byte 0x00000569
_08058b3c:	.4byte 0x000005AB
_08058b40:	.4byte 0x00000654
_08058b44:	.4byte 0x0000062D
_08058b48:	.4byte 0x00000674
_08058b4c:	.4byte 0x0000071C
_08058b50:	.4byte 0x00000734
_08058b54:	.4byte 0x000007DC
_08058b58:	.4byte 0x000007F7
_08058b5c:	.4byte 0x000008A4
_08058b60:	.4byte 0x00000879
_08058b64:	.4byte 0x000008BB
_08058b68:	.4byte 0x00000964
_08058b6c:	.4byte 0x0000093D
_08058b70:	.4byte 0x0000097F
_08058b74:	.4byte 0x00000984
_08058b78:	.4byte 0x00000A28
_08058b7c:	.4byte 0x00000A2C
_08058b80:	.4byte 0x00000A43
_08058b84:	.4byte 0x00000A48
_08058b88:	.4byte 0x00000AEC
_08058b8c:	.4byte 0x00000B07
_08058b90:	.4byte 0x00000B0C
_08058b94:	.4byte 0x00000BB4
_08058b98:	.4byte 0x00000BCB
_08058b9c:	.4byte 0x00000C74
_08058ba0:	.4byte 0x00000C78
_08058ba4:	.4byte 0x00000C4D
_08058ba8:	.4byte 0x00000C8F

_08058bac:
	add		r3, #0x30
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r4, _08058c48
	add		r1, r6, r4
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r4, #0x80
	lsl		r4, r4, #0x6
	add		r0, r0, r4
	str		r0, [r1, #0x0]
	ldr		r3, _08058c4c
	add		r0, r6, r3
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	ldr		r2, _08058c50
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r1, #0x0]
	ldr		r1, _08058c54
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	add		r2, #0x2b
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, r8
	orr		r0, r3
	strb	r0, [r1, #0x0]
	ldr		r0, _08058c58
	add		r7, r6, r0
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r2, #0xe0
	lsl		r2, r2, #0x4
	add		r1, r6, r2
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	add		r0, r0, r4
	str		r0, [r1, #0x0]
	ldr		r1, _08058c5c
	add		r0, r6, r1
	mov		r2, #0x2
	strb	r2, [r0, #0x0]
	ldr		r3, _08058c60
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	mov		r2, r9
	orr		r2, r0
	strh	r2, [r1, #0x0]
	ldr		r1, _08058c64
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	ldr		r2, _08058c68
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, r8
	orr		r0, r3
	strb	r0, [r1, #0x0]
	add		sp, #0x40
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x58C46, 0x2

_08058c48:	.4byte 0x00000D3C
_08058c4c:	.4byte 0x00000D11
_08058c50:	.4byte 0x00000D28
_08058c54:	.4byte 0x00000D54
_08058c58:	.4byte 0x00000D58
_08058c5c:	.4byte 0x00000DD5
_08058c60:	.4byte 0x00000DEC
_08058c64:	.4byte 0x00000E18
_08058c68:	.4byte 0x00000E17
	thumb_func_end sub_080586e4

	thumb_func_start sub_08058c6c
sub_08058c6c:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	add		r5, r2, #0x0
	add		r5, #0x54
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x11
	bne		_08058cc2
	add		r4, r2, #0x0
	add		r4, #0xe8
	ldrh	r3, [r4, #0x0]
	lsr		r1, r3, #0x3
	mov		r0, #0x1
	bic		r0, r1
	cmp		r0, #0x0
	beq		_08058cc2
	mov		r0, #0x4
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldr		r0, _08058cc8
	add		r1, r2, r0
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08058cc2
	ldr		r1, _08058ccc
	add		r0, r2, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	ldr		r1, _08058cd0
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
_08058cc2:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08058cc8:	.4byte 0x00000FA9
_08058ccc:	.4byte 0x00000FA4
_08058cd0:	.4byte 0x0200D588
	thumb_func_end sub_08058c6c

	thumb_func_start sub_08058cd4
sub_08058cd4:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	mov		r0, #0xd9
	lsl		r0, r0, #0x2
	add		r6, r7, r0
	mov		r1, #0x84
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x11
	bne		_08058d16
	mov		r0, #0xfe
	lsl		r0, r0, #0x2
	add		r3, r7, r0
	ldrh	r2, [r3, #0x0]
	lsr		r1, r2, #0x3
	mov		r0, #0x1
	bic		r0, r1
	cmp		r0, #0x0
	beq		_08058d16
	mov		r1, #0x4
	add		r0, r1, #0x0
	orr		r0, r2
	strh	r0, [r3, #0x0]
	mov		r0, #0xa8
	lsl		r0, r0, #0x2
	add		r6, r7, r0
	add		r0, #0x94
	add		r2, r7, r0
	ldrh	r0, [r2, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	b		_08058d18
_08058d16:
	sub		r6, #0xc4
_08058d18:
	sub		r6, #0xc4
	ldr		r1, _08058d5c
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x90
	bne		_08058d68
	ldr		r0, _08058d60
	add		r5, r7, r0
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	ldr		r4, _08058d64
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x1]
	add		r0, r6, #0x0
	mov		r1, #0x11
	mov		r3, #0x0
	bl		sub_0804f150
	sub		r6, #0xc4
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x1]
	add		r0, r6, #0x0
	mov		r1, #0x11
	mov		r3, #0x0
	bl		sub_0804f150
	b		_08058d9a

.incbin "base.gba", 0x58D5A, 0x2

_08058d5c:	.4byte 0x00000FA9
_08058d60:	.4byte 0x00000FA4
_08058d64:	.4byte 0x0200D588

_08058d68:
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x11
	bne		_08058d98
	add		r3, r6, #0x0
	add		r3, #0x94
	ldrh	r2, [r3, #0x0]
	lsr		r1, r2, #0x3
	mov		r0, #0x1
	bic		r0, r1
	cmp		r0, #0x0
	beq		_08058d98
	mov		r1, #0x4
	add		r0, r1, #0x0
	orr		r0, r2
	strh	r0, [r3, #0x0]
	sub		r6, #0xc4
	add		r2, r6, #0x0
	add		r2, #0x94
	ldrh	r0, [r2, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	b		_08058d9a
_08058d98:
	sub		r6, #0xc4
_08058d9a:
	sub		r6, #0xc4
	ldr		r0, _08058dc4
	add		r4, r7, r0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0xa0
	bne		_08058dd0
	ldr		r1, _08058dc8
	add		r0, r7, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	ldr		r1, _08058dcc
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x1]
	add		r0, r6, #0x0
	mov		r1, #0x11
	mov		r3, #0x0
	bl		sub_0804f150
	b		_08058df8

_08058dc4:	.4byte 0x00000FA9
_08058dc8:	.4byte 0x00000FA4
_08058dcc:	.4byte 0x0200D588

_08058dd0:
	cmp		r0, #0x80
	bls		_08058df8
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x11
	bne		_08058df8
	add		r3, r6, #0x0
	add		r3, #0x94
	ldrh	r2, [r3, #0x0]
	lsr		r1, r2, #0x3
	mov		r0, #0x1
	bic		r0, r1
	cmp		r0, #0x0
	beq		_08058df8
	mov		r0, #0x4
	orr		r0, r2
	strh	r0, [r3, #0x0]
	mov		r0, #0x10
	strb	r0, [r4, #0x0]
_08058df8:
	ldr		r0, _08058e0c
	add		r1, r7, r0
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bge		_08058e10
	add		r0, r2, #0x1
	strb	r0, [r1, #0x0]
	b		_08058e96

_08058e0c:	.4byte 0x00000FA9

_08058e10:
	sub		r0, r2, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08058e96
	ldr		r1, _08058e9c
	add		r5, r7, r1
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	ldr		r4, _08058ea0
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	add		r6, #0xc4
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	add		r6, #0xc4
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	add		r6, #0xc4
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
	add		r6, #0xc4
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x10
	mov		r3, #0x2
	bl		sub_0804f150
_08058e96:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08058e9c:	.4byte 0x00000FA4
_08058ea0:	.4byte 0x0200D588
	thumb_func_end sub_08058cd4

	thumb_func_start sub_08058ea4
sub_08058ea4:
	push	{ r4, r5, r6, lr }
	add		r4, r1, #0x0
	lsl		r2, r2, #0x10
	lsl		r3, r3, #0x10
	lsr		r6, r3, #0x10
	lsr		r1, r2, #0x10
	asr		r0, r2, #0x10
	cmp		r0, #0x33
	ble		_08058ebc
	sub		r0, #0x33
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
_08058ebc:
	lsl		r0, r1, #0x10
	asr		r5, r0, #0x10
	cmp		r5, #0x9
	bgt		_08058f02
	mov		r0, #0xc
	cmp		r5, #0x0
	beq		_08058ecc
	add		r0, r1, #0x0
_08058ecc:
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r4, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08058ee6
	add		r0, r4, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_08058ee6:
	add		r1, r4, #0x0
	add		r1, #0xa4
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x8
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0xaf
	lsl		r0, r0, #0x9
	b		_08058f5e
_08058f02:
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r4, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08058f24
	add		r0, r4, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_08058f24:
	add		r1, r4, #0x0
	add		r1, #0xa4
	lsl		r0, r6, #0x10
	asr		r6, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x8
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r4, #0xc4
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r4, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08058f58
	add		r0, r4, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_08058f58:
	add		r1, r4, #0x0
	add		r1, #0xa4
	lsl		r0, r6, #0x8
_08058f5e:
	str		r0, [r1, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x58F66, 0x2
	push	{ r4, lr }
	ldr		r4, _08058f84
	ldr		r0, _08058f88
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _08058f8c
	ldr		r0, _08058f90
	bl		sub_08002148
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08058f84:	.4byte 0x0200BAC4
_08058f88:	.4byte 0x080d35b4 @ scrMA_HameegoHamData
_08058f8c:	.4byte 0x0200BAC0
_08058f90:	.4byte 0x080d35cc @ scrMA_HameegoCardInit
	thumb_func_end sub_08058ea4

	thumb_func_start sub_08058f94
sub_08058f94:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r4, #0x54
	mov		r5, #0x0
	mov		r6, #0x1
_08058f9e:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08058fba
	ldr		r1, [r4, #0xc]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	bl		sub_080bbc74
_08058fba:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x13
	ble		_08058f9e
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x58FD2, 0x2
	thumb_func_end sub_08058f94

	thumb_func_start sub_08058fd4
sub_08058fd4:
	push	{ r4, r5, lr }
	ldr		r1, _08059010
	add		r2, r0, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x2
	ble		_08059020
	ldr		r3, _08059014
	ldr		r1, [r3, #0x0]
	ldr		r4, _08059018
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_08058ff6
	mov		r5, #0xef
	lsl		r5, r5, #0x10
	add		r0, r1, r5
_08058ff6:
	str		r0, [r3, #0x0]
	ldr		r3, _0805901c
	ldr		r1, [r3, #0x0]
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_08059008
	mov		r4, #0x9f
	lsl		r4, r4, #0x10
	add		r0, r1, r4
_08059008:
	str		r0, [r3, #0x0]
	mov		r0, #0x0
	b		_08059022

.incbin "base.gba", 0x5900E, 0x2

_08059010:	.4byte 0x00000FA8
_08059014:	.4byte 0x0200CE30
_08059018:	.4byte 0xffff0000
_0805901c:	.4byte 0x0200CE44

_08059020:
	add		r0, r1, #0x1
_08059022:
	strb	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5902A, 0x62
	thumb_func_end sub_08058fd4

	thumb_func_start sub_0805908c
sub_0805908c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _080590e0
	str		r0, [r5, #0x4c]
	ldr		r0, _080590e4
	str		r0, [r5, #0xc]
	add		r4, r5, #0x0
	add		r4, #0x54
	mov		r6, #0x13
	mov		r7, #0x1
	neg		r7, r7
_080590ae:
	add		r0, r4, #0x0
	bl		sub_0804f084
	add		r4, #0xc4
	sub		r6, #0x1
	cmp		r6, r7
	bne		_080590ae
	ldr		r1, _080590e8
	add		r0, r5, r1
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r3, _080590ec
	add		r0, r5, r3
	strb	r2, [r0, #0x0]
	ldr		r0, _080590f0
	str		r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080586e4
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x590DE, 0x2

_080590e0:	.4byte 0x080e034c
_080590e4:	.4byte 0x080e2044
_080590e8:	.4byte 0x00000FA6
_080590ec:	.4byte 0x00000FA8
_080590f0:	.4byte 0x0200D58C
	thumb_func_end sub_0805908c

	thumb_func_start sub_080590f4
sub_080590f4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _0805910c
	add		r5, r4, r0
_080590fc:
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x2d
	bne		_08059110
	add		r0, r4, #0x0
	bl		sub_08058cd4
	b		_08059116

_0805910c:	.4byte 0x00000FA4

_08059110:
	add		r0, r4, #0x0
	bl		sub_08058c6c
_08059116:
	add		r0, r4, #0x0
	bl		sub_08058fd4
	add		r0, r4, #0x0
	bl		sub_08058f94
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_080590fc

.incbin "base.gba", 0x5912A, 0x26

_08059150:	.4byte 0x08059170

.incbin "base.gba", 0x59154, 0x1C
	thumb_func_end sub_080590f4


.incbin "base.gba", 0x59170, 0x634
	thumb_func_start sub_080597a4
sub_080597a4:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08059858
	str		r0, [r6, #0x4c]
	ldr		r0, _0805985c
	str		r0, [r6, #0xc]
	add		r4, r6, #0x0
	add		r4, #0x58
	mov		r5, #0x31
	mov		r7, #0x1
	neg		r7, r7
_080597c6:
	add		r0, r4, #0x0
	bl		sub_0804f084
	add		r4, #0xc4
	sub		r5, #0x1
	cmp		r5, r7
	bne		_080597c6
	ldr		r0, _08059860
	add		r5, r6, r0
	ldr		r1, _08059864
	add		r4, r6, r1
	mov		r0, #0xc
	bl		sub_0808af94
	str		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r4, r1, #0x0
	str		r5, [r4, #0x8]
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	mov		r7, #0x6
_080597f0:
	mov		r2, #0xc4
	lsl		r2, r2, #0x2
	add		r5, r5, r2
	mov		r0, #0xc
	bl		sub_0808af94
	add		r1, r0, #0x0
	str		r5, [r1, #0x8]
	str		r4, [r1, #0x4]
	str		r1, [r4, #0x0]
	add		r4, r1, #0x0
	lsl		r0, r7, #0x10
	ldr		r3, _08059868
	add		r0, r0, r3
	lsr		r7, r0, #0x10
	asr		r2, r0, #0x10
	cmp		r2, #0x0
	bne		_080597f0
	ldr		r3, _0805986c
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	str		r2, [r1, #0x0]
	ldr		r1, _08059870
	add		r0, r6, r1
	strb	r2, [r0, #0x0]
	add		r3, #0xf
	add		r0, r6, r3
	strb	r2, [r0, #0x0]
	add		r1, #0x2
	add		r0, r6, r1
	strb	r2, [r0, #0x0]
	ldr		r0, _08059874
	str		r2, [r0, #0x0]
	ldr		r0, _08059878
	bl		sub_0800223c
	ldr		r0, _0805987c
	bl		sub_0800223c
	ldr		r0, _08059880
	bl		sub_0800223c
	bl		sub_0805acdc
	ldr		r2, _08059884
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x59856, 0x2

_08059858:	.4byte 0x080e034c
_0805985c:	.4byte 0x080e206c
_08059860:	.4byte 0x00000A4C
_08059864:	.4byte 0x00002AA4
_08059868:	.4byte 0xffff0000
_0805986c:	.4byte 0x00002AA0
_08059870:	.4byte 0x00002AAE
_08059874:	.4byte 0x0200D58C
_08059878:	.4byte 0x00000B08
_0805987c:	.4byte 0x00000B09
_08059880:	.4byte 0x00000B0A
_08059884:	.4byte 0x00002AB3
	thumb_func_end sub_080597a4

	thumb_func_start sub_08059888
sub_08059888:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x5c
	add		r4, r0, #0x0
	add		r7, r4, #0x0
	add		r7, #0x58
	mov		r5, #0x0
	mov		r0, #0x2
	neg		r0, r0
	add		r6, r0, #0x0
_080598a2:
	add		r0, r7, #0x0
	add		r0, #0x14
	bl		sub_0808e1ac
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	and		r0, r6
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x31
	ble		_080598a2
	ldr		r2, _08059bd4
	add		r0, r4, r2
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r3, _08059bd8
	add		r0, r4, r3
	strb	r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _08059bdc
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	mov		r5, #0x8c
	lsl		r5, r5, #0x1
	add		r1, r4, r5
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	mov		r1, #0xb8
	lsl		r1, r1, #0x8
	mov		r0, #0x98
	lsl		r0, r0, #0x7
	mov		r9, r0
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xe2
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	mov		r5, r9
	str		r5, [r0, #0x0]
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r2, #0xe0
	lsl		r2, r2, #0x5
	strh	r2, [r0, #0x0]
	mov		r1, #0xd0
	lsl		r1, r1, #0x8
	add		r3, #0xc0
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	mov		r5, #0xa2
	lsl		r5, r5, #0x2
	add		r0, r4, r5
	mov		r1, r9
	str		r1, [r0, #0x0]
	add		r3, #0x1c
	add		r0, r4, r3
	strh	r2, [r0, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0x8
	mov		r2, #0xb8
	lsl		r2, r2, #0x7
	add		r5, #0xc0
	add		r0, r4, r5
	str		r1, [r0, #0x0]
	mov		r1, #0xd3
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	str		r2, [r0, #0x0]
	add		r3, #0xc4
	add		r0, r4, r3
	mov		r5, #0xc0
	lsl		r5, r5, #0x5
	mov		r10, r5
	mov		r1, r10
	strh	r1, [r0, #0x0]
	mov		r1, #0xd4
	lsl		r1, r1, #0x8
	add		r3, #0xa8
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	mov		r5, #0x82
	lsl		r5, r5, #0x3
	add		r0, r4, r5
	str		r2, [r0, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	mov		r2, r10
	strh	r2, [r0, #0x0]
	add		r3, #0x20
	add		r7, r4, r3
	add		r0, r7, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x90
	lsl		r1, r1, #0x4
	add		r5, #0xc0
	add		r0, r4, r5
	mov		r2, r9
	str		r2, [r0, #0x0]
	ldr		r3, _08059be0
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	mov		r6, #0x1
	sub		r5, #0x27
	add		r0, r4, r5
	strb	r6, [r0, #0x0]
	mov		r0, #0x98
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	ldrh	r0, [r1, #0x0]
	mov		r5, #0x4
	orr		r0, r5
	strh	r0, [r1, #0x0]
	ldr		r2, _08059be4
	add		r1, r4, r2
	mov		r0, #0x98
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	add		r3, #0x17
	add		r1, r4, r3
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	mov		r0, #0x9e
	lsl		r0, r0, #0x3
	add		r7, r4, r0
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xd4
	lsl		r1, r1, #0x7
	mov		r2, #0x97
	lsl		r2, r2, #0x8
	ldr		r3, _08059be8
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xb3
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	str		r2, [r0, #0x0]
	ldr		r2, _08059bec
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	sub		r3, #0x10
	add		r1, r4, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r5
	strh	r0, [r1, #0x0]
	mov		r1, #0xb6
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	mov		r2, #0x90
	lsl		r2, r2, #0x5
	mov		r8, r2
	mov		r3, r8
	strh	r3, [r0, #0x0]
	ldr		r0, _08059bf0
	add		r1, r4, r0
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	ldr		r1, _08059bf4
	add		r7, r4, r1
	add		r0, r7, #0x0
	mov		r1, #0xb
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x84
	lsl		r1, r1, #0x8
	mov		r2, #0x98
	lsl		r2, r2, #0x8
	mov		r3, #0xcb
	lsl		r3, r3, #0x3
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	ldr		r1, _08059bf8
	add		r0, r4, r1
	str		r2, [r0, #0x0]
	ldr		r2, _08059bfc
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	sub		r3, #0x10
	add		r1, r4, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r5
	strh	r0, [r1, #0x0]
	ldr		r0, _08059c00
	add		r1, r4, r0
	mov		r0, #0x94
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	add		r2, #0x42
	add		r1, r4, r2
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	add		r3, #0x30
	add		r7, r4, r3
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc8
	lsl		r1, r1, #0x8
	mov		r2, #0x99
	lsl		r2, r2, #0x8
	ldr		r3, _08059c04
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xe4
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	str		r2, [r0, #0x0]
	ldr		r2, _08059c08
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	sub		r3, #0x10
	add		r1, r4, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r5
	strh	r0, [r1, #0x0]
	mov		r0, #0xe7
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	mov		r0, #0x88
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	add		r2, #0x42
	add		r1, r4, r2
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	add		r3, #0x30
	add		r7, r4, r3
	add		r0, r7, #0x0
	mov		r1, #0x14
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x3
	ldr		r2, _08059c0c
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	ldr		r3, _08059c10
	add		r1, r4, r3
	mov		r0, #0xc8
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
	ldr		r0, _08059c14
	add		r1, r4, r0
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	ldr		r1, _08059c18
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r0, #0x1
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0xb
	add		r2, #0x47
	add		r1, r1, r2
	add		r0, r4, #0x0
	bl		sub_0805adc0
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	add		r7, r4, r3
	add		r0, r7, #0x0
	mov		r1, #0x13
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r1, _08059c1c
	add		r0, r4, r1
	mov		r2, r9
	str		r2, [r0, #0x0]
	ldr		r3, _08059c20
	add		r0, r4, r3
	mov		r1, r10
	str		r1, [r0, #0x0]
	ldr		r2, _08059c24
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	add		r3, #0x18
	add		r0, r4, r3
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r2, #0x42
	add		r1, r4, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x1
	orr		r0, r3
	strb	r0, [r1, #0x0]
	ldr		r0, _08059c28
	add		r7, r4, r0
	add		r0, r7, #0x0
	mov		r1, #0x13
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x88
	lsl		r1, r1, #0x8
	ldr		r2, _08059c2c
	add		r0, r4, r2
	mov		r3, r9
	str		r3, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	ldr		r3, _08059c30
	add		r0, r4, r3
	strb	r6, [r0, #0x0]
	ldr		r1, _08059c34
	add		r0, r4, r1
	mov		r2, r8
	strh	r2, [r0, #0x0]
	add		r3, #0x42
	add		r1, r4, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x5
	add		r7, r4, r3
	add		r0, r7, #0x0
	mov		r1, #0x15
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc4
	lsl		r1, r1, #0x8
	mov		r2, #0xc0
	lsl		r2, r2, #0x4
	ldr		r3, _08059c38
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xa3
	lsl		r1, r1, #0x4
	add		r0, r4, r1
	str		r2, [r0, #0x0]
	ldr		r2, _08059c3c
	add		r0, r4, r2
	strb	r6, [r0, #0x0]
	sub		r3, #0x10
	add		r1, r4, r3
	ldrh	r0, [r1, #0x0]
	orr		r5, r0
	strh	r5, [r1, #0x0]
	ldr		r5, _08059c40
	add		r0, r4, r5
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r2, #0x42
	add		r1, r4, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x1
	orr		r0, r3
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_0805ab70
	ldr		r5, _08059c44
	add		r0, r4, r5
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x3c]
	ldr		r0, _08059c48
	add		r1, r4, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	beq		_08059c4c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	b		_08059c4e

_08059bd4:	.4byte 0x00002AB1
_08059bd8:	.4byte 0x00002AB2
_08059bdc:	.4byte 0x0200BACC
_08059be0:	.4byte 0x000004D4
_08059be4:	.4byte 0x000004EC
_08059be8:	.4byte 0x00000594
_08059bec:	.4byte 0x0000056D
_08059bf0:	.4byte 0x000005AF
_08059bf4:	.4byte 0x000005B4
_08059bf8:	.4byte 0x0000065C
_08059bfc:	.4byte 0x00000631
_08059c00:	.4byte 0x00000674
_08059c04:	.4byte 0x0000071C
_08059c08:	.4byte 0x000006F5
_08059c0c:	.4byte 0x000007B9
_08059c10:	.4byte 0x000007FC
_08059c14:	.4byte 0x000007FB
_08059c18:	.4byte 0x00002AAF
_08059c1c:	.4byte 0x000008A4
_08059c20:	.4byte 0x000008A8
_08059c24:	.4byte 0x0000087D
_08059c28:	.4byte 0x000008C4
_08059c2c:	.4byte 0x00000968
_08059c30:	.4byte 0x00000941
_08059c34:	.4byte 0x00000984
_08059c38:	.4byte 0x00000A2C
_08059c3c:	.4byte 0x00000A05
_08059c40:	.4byte 0x00000A48
_08059c44:	.4byte 0x00002AA0
_08059c48:	.4byte 0x00002AAE

_08059c4c:
	mov		r0, #0x33
_08059c4e:
	mov		r8, r0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08059c60
	add		r0, #0x32
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
_08059c60:
	mov		r5, #0x0
	ldr		r1, [sp, #0x3c]
	cmp		r1, #0x0
	bne		_08059c6a
	b		_08059f96
_08059c6a:
	ldr		r2, _08059d58
	add		r2, r4, r2
	str		r2, [sp, #0x44]
_08059c70:
	ldr		r3, [sp, #0x3c]
	ldr		r7, [r3, #0x8]
	add		r0, r7, #0x0
	mov		r1, #0xf
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	lsl		r2, r5, #0x10
	asr		r3, r2, #0x10
	lsl		r0, r3, #0x1
	add		r0, r0, r3
	lsl		r0, r0, #0xb
	str		r0, [sp, #0x40]
	mov		r5, #0x80
	lsl		r5, r5, #0x4
	add		r0, r0, r5
	mov		r10, r0
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r1, #0xc0
	lsl		r1, r1, #0x4
	str		r1, [r0, #0x0]
	add		r0, #0x4
	mov		r5, r10
	str		r5, [r0, #0x0]
	sub		r0, #0x2b
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r5, #0x4
	orr		r0, r5
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r1, #0xc4
	lsl		r1, r1, #0x6
	strh	r1, [r0, #0x0]
	mov		r5, #0x0
	sub		r0, r3, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r9, r0
	str		r2, [sp, #0x58]
	cmp		r0, #0x4
	bhi		_08059cd2
	mov		r5, #0x1
_08059cd2:
	add		r2, r7, #0x0
	add		r2, #0xbf
	mov		r6, #0x1
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	and		r1, r0
	orr		r1, r5
	strb	r1, [r2, #0x0]
	add		r7, #0xc4
	ldr		r2, [sp, #0x44]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	add		r0, #0x1
	mov		r2, #0x0
	cmp		r3, r0
	beq		_08059cf6
	mov		r2, #0x3
_08059cf6:
	add		r0, r7, #0x0
	mov		r1, #0x13
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r3, #0x88
	lsl		r3, r3, #0x8
	str		r3, [r0, #0x0]
	add		r0, #0x4
	mov		r5, r10
	str		r5, [r0, #0x0]
	sub		r0, #0x2b
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	add		r0, #0x43
	mov		r2, #0xc4
	lsl		r2, r2, #0x6
	strh	r2, [r0, #0x0]
	mov		r0, #0x0
	mov		r3, r9
	cmp		r3, #0x4
	bhi		_08059d28
	mov		r0, #0x1
_08059d28:
	add		r3, r7, #0x0
	add		r3, #0xbf
	add		r1, r6, #0x0
	and		r1, r0
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	add		r7, #0xc4
	mov		r5, r8
	lsl		r0, r5, #0x10
	asr		r1, r0, #0x10
	str		r0, [sp, #0x54]
	cmp		r1, #0x9
	bgt		_08059e18
	cmp		r1, #0x1
	beq		_08059d5c
	mov		r0, r8
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	b		_08059d5e

_08059d58:	.4byte 0x00002AAF

_08059d5c:
	mov		r2, #0xc
_08059d5e:
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r0, [sp, #0x58]
	asr		r1, r0, #0x10
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0xb
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r5, r0, r2
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	str		r3, [r0, #0x0]
	add		r0, #0x4
	str		r5, [r0, #0x0]
	mov		r0, #0x3
	mov		r10, r0
	add		r0, r7, #0x0
	add		r0, #0x7d
	mov		r2, r10
	strb	r2, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x94
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x4
	mov		r9, r3
	mov		r6, #0x0
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r2, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r2, #0xc2
	lsl		r2, r2, #0x6
	mov		r8, r2
	mov		r3, r8
	strh	r3, [r0, #0x0]
	mov		r0, #0x0
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	cmp		r1, #0x4
	bhi		_08059dc0
	mov		r0, #0x1
_08059dc0:
	add		r3, r7, #0x0
	add		r3, #0xbf
	mov		r1, #0x1
	and		r1, r0
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	add		r7, #0xc4
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r1, #0xaf
	lsl		r1, r1, #0x9
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r5, [r0, #0x0]
	sub		r0, #0x2b
	mov		r2, r10
	strb	r2, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r5, r8
	strh	r5, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	b		_08059ee8
_08059e18:
	sub		r5, r1, #0x1
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r0, [sp, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	add		r0, r0, r1
	mov		r8, r0
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r2, #0xc0
	lsl		r2, r2, #0x4
	str		r2, [r0, #0x0]
	add		r0, #0x4
	mov		r3, r8
	str		r3, [r0, #0x0]
	sub		r0, #0x2b
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r3, #0xc2
	lsl		r3, r3, #0x6
	mov		r10, r3
	mov		r1, r10
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	mov		r2, r9
	cmp		r2, #0x4
	bhi		_08059e76
	mov		r0, #0x1
_08059e76:
	add		r3, r7, #0x0
	add		r3, #0xbf
	add		r1, r6, #0x0
	and		r1, r0
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	add		r7, #0xc4
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	str		r3, [r0, #0x0]
	add		r0, #0x4
	mov		r5, r8
	str		r5, [r0, #0x0]
	sub		r0, #0x2b
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r3, r10
	strh	r3, [r0, #0x0]
	mov		r0, #0x0
	mov		r5, r9
	cmp		r5, #0x4
	bhi		_08059ed8
	mov		r0, #0x1
_08059ed8:
	add		r2, r7, #0x0
	add		r2, #0xbf
	and		r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	orr		r0, r6
_08059ee8:
	strb	r0, [r2, #0x0]
	ldr		r1, [sp, #0x58]
	asr		r0, r1, #0x10
	add		r0, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r1, r0, #0x0
	ldr		r0, _08059f28
	bl		sub_0800ed80
	add		r6, r0, #0x0
	ldr		r2, [sp, #0x54]
	asr		r5, r2, #0x10
	ldr		r3, _08059f2c
	add		r0, r5, r3
	bl		sub_0800227c
	str		r0, [sp, #0x4c]
	ldr		r1, _08059f30
	add		r0, r5, r1
	bl		sub_0800227c
	ldr		r2, [sp, #0x4c]
	orr		r2, r0
	cmp		r2, #0x0
	beq		_08059f34
	sub		r0, r5, #0x1
	bl		sub_080068f8
	b		_08059f38

.incbin "base.gba", 0x59F26, 0x2

_08059f28:	.4byte 0x0200AA18
_08059f2c:	.4byte 0x00000451
_08059f30:	.4byte 0x00000485

_08059f34:
	ldr		r3, _08059fe0
	ldr		r0, [r3, #0x0]
_08059f38:
	mov		r1, #0x0
	bl		sub_0800f2c8
	str		r0, [sp, #0x48]
	ldr		r1, [r6, #0xc]
	mov		r5, #0x18
	ldrsh	r0, [r1, r5]
	add		r0, r6, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldr		r0, [sp, #0x48]
	ldrb	r2, [r0, #0x0]
	add		r0, #0x1
	str		r0, [sp, #0x50]
	mov		r1, #0x2
	strh	r1, [r6, #0x28]
	mov		r3, #0xc
	strh	r3, [r6, #0x2a]
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x50]
	mov		r3, #0x0
	bl		sub_0800f18c
	ldr		r5, [sp, #0x54]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r5, r1
	lsr		r2, r0, #0x10
	mov		r8, r2
	asr		r0, r0, #0x10
	cmp		r0, #0x33
	ble		_08059f7e
	mov		r3, #0x1
	mov		r8, r3
_08059f7e:
	ldr		r5, [sp, #0x3c]
	ldr		r5, [r5, #0x4]
	str		r5, [sp, #0x3c]
	ldr		r1, [sp, #0x58]
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r1, r2
	lsr		r5, r0, #0x10
	ldr		r3, [sp, #0x3c]
	cmp		r3, #0x0
	beq		_08059f96
	b		_08059c70
_08059f96:
	ldr		r0, _08059fe4
	mov		r1, #0xff
	bl		sub_08000700
	ldr		r1, _08059fe8
	mov		r0, #0x1
	strb	r0, [r1, #0x1a]
	ldr		r5, _08059fec
	add		r0, r4, r5
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	mov		r1, #0x0
	bl		sub_0808c828
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0805a85c
	ldr		r5, _08059ff0
	ldr		r3, _08059ff4
	ldr		r2, _08059ff8
	ldr		r1, _08059ffc
	mov		r4, #0x20
	neg		r4, r4
	add		r0, r4, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r5, #0x0]
	add		sp, #0x5c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08059fe0:	.4byte 0x0200BAC8
_08059fe4:	.4byte 0x03005918
_08059fe8:	.4byte 0x02008AD4
_08059fec:	.4byte 0x000026A0
_08059ff0:	.4byte 0x0200EB24
_08059ff4:	.4byte 0x0200EB1E
_08059ff8:	.4byte 0x0200EB20
_08059ffc:	.4byte 0x0200EB22
	thumb_func_end sub_08059888

	thumb_func_start sub_0805a000
sub_0805a000:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	ldr		r1, _0805a14c
	add		r0, r6, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r2, _0805a150
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r0, r1, r0
	cmp		r0, #0x32
	ble		_0805a024
	sub		r0, #0x33
_0805a024:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r9, r0
	add		r3, r6, #0x0
	add		r3, #0x58
	lsl		r4, r0, #0x10
	asr		r4, r4, #0x10
	add		r5, r4, #0x0
	add		r5, #0x64
	lsl		r1, r5, #0x10
	lsr		r1, r1, #0x10
	ldr		r7, _0805a154
	ldr		r2, [r7, #0x0]
	lsl		r0, r4, #0x1
	add		r0, r0, r2
	ldrb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r5, #0x0
	mov		r1, #0x1
	bl		sub_08009650
	mov		r5, #0x1
	mov		r0, #0x1
	mov		r8, r0
	add		r0, r6, #0x0
	add		r0, #0xd5
	strb	r5, [r0, #0x0]
	ldr		r2, _0805a158
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	cmp		r4, #0x2d
	beq		_0805a072
	b		_0805a17c
_0805a072:
	mov		r1, #0xc4
	lsl		r1, r1, #0x8
	mov		r2, #0xc0
	lsl		r2, r2, #0x7
	add		r0, r6, #0x0
	add		r0, #0xfc
	str		r1, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r3, r6, r2
	ldr		r0, [r7, #0x0]
	add		r0, #0x5a
	ldrb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	mov		r1, #0x91
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x91
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r1, _0805a15c
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	ldr		r2, _0805a160
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r3, r6, r0
	ldr		r0, [r7, #0x0]
	add		r0, #0x5a
	ldrb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	mov		r1, #0x91
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x91
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r1, _0805a164
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	ldr		r2, _0805a168
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r0, #0xa9
	lsl		r0, r0, #0x2
	add		r3, r6, r0
	ldr		r0, [r7, #0x0]
	add		r0, #0x5a
	ldrb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	mov		r1, #0x91
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x91
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r1, _0805a16c
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	ldr		r2, _0805a170
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r0, #0xda
	lsl		r0, r0, #0x2
	add		r3, r6, r0
	ldr		r0, [r7, #0x0]
	add		r0, #0x5a
	ldrb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	mov		r1, #0x91
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x91
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r1, _0805a174
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	ldr		r2, _0805a178
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	b		_0805a1c4

.incbin "base.gba", 0x5A14A, 0x2

_0805a14c:	.4byte 0x00002AAE
_0805a150:	.4byte 0x00002AAF
_0805a154:	.4byte 0x0200D588
_0805a158:	.4byte 0x00000117
_0805a15c:	.4byte 0x00000199
_0805a160:	.4byte 0x000001DB
_0805a164:	.4byte 0x0000025D
_0805a168:	.4byte 0x0000029F
_0805a16c:	.4byte 0x00000321
_0805a170:	.4byte 0x00000363
_0805a174:	.4byte 0x000003E5
_0805a178:	.4byte 0x00000427

_0805a17c:
	mov		r1, #0xc4
	lsl		r1, r1, #0x8
	mov		r2, #0xb8
	lsl		r2, r2, #0x7
	add		r0, r6, #0x0
	add		r0, #0xfc
	str		r1, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0805a200
	add		r3, r6, r2
	ldrb	r2, [r3, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r1, #0x0
	and		r0, r2
	strb	r0, [r3, #0x0]
	ldr		r0, _0805a204
	add		r3, r6, r0
	ldrb	r2, [r3, #0x0]
	add		r0, r1, #0x0
	and		r0, r2
	strb	r0, [r3, #0x0]
	ldr		r2, _0805a208
	add		r3, r6, r2
	ldrb	r2, [r3, #0x0]
	add		r0, r1, #0x0
	and		r0, r2
	strb	r0, [r3, #0x0]
	ldr		r0, _0805a20c
	add		r2, r6, r0
	ldrb	r0, [r2, #0x0]
	and		r1, r0
	strb	r1, [r2, #0x0]
_0805a1c4:
	ldr		r7, _0805a210
	ldr		r6, _0805a214
	ldr		r5, _0805a218
	ldr		r4, _0805a21c
	mov		r1, r9
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	ldr		r2, _0805a220
	add		r0, r0, r2
	bl		sub_0800227c
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0805a1e6
	mov		r0, #0x20
	neg		r0, r0
	add		r1, r0, #0x0
_0805a1e6:
	strh	r1, [r4, #0x0]
	strh	r1, [r5, #0x0]
	strh	r1, [r6, #0x0]
	strh	r1, [r7, #0x0]
	mov		r0, #0x5
	bl		sub_08009680
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805a200:	.4byte 0x000001DB
_0805a204:	.4byte 0x0000029F
_0805a208:	.4byte 0x00000363
_0805a20c:	.4byte 0x00000427
_0805a210:	.4byte 0x0200EB24
_0805a214:	.4byte 0x0200EB1E
_0805a218:	.4byte 0x0200EB20
_0805a21c:	.4byte 0x0200EB22
_0805a220:	.4byte 0x00000486
	thumb_func_end sub_0805a000

	thumb_func_start sub_0805a224
sub_0805a224:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	mov		r7, r9
	add		r7, #0x58
	mov		r4, #0x0
	mov		r0, #0x2
	neg		r0, r0
	add		r5, r0, #0x0
_0805a23a:
	add		r0, r7, #0x0
	add		r0, #0x14
	bl		sub_0808e1ac
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	and		r0, r5
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	lsl		r0, r4, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x31
	ble		_0805a23a
	ldr		r4, _0805a37c
	ldr		r5, _0805a380
	add		r0, r4, r5
	ldr		r1, _0805a384
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0805908c
	add		r1, r0, #0x0
	mov		r0, r9
	str		r1, [r0, #0x54]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r7, r9
	add		r7, #0x58
	add		r0, r7, #0x0
	mov		r1, #0xa
	mov		r2, #0xa
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	mov		r5, #0xb0
	lsl		r5, r5, #0x7
	mov		r8, r5
	mov		r0, r9
	add		r0, #0xfc
	str		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r9
	str		r5, [r0, #0x0]
	mov		r4, #0x1
	mov		r6, #0x1
	mov		r0, r9
	add		r0, #0xd5
	strb	r4, [r0, #0x0]
	mov		r0, #0x8c
	lsl		r0, r0, #0x1
	add		r0, r9
	mov		r5, #0x88
	lsl		r5, r5, #0x5
	strh	r5, [r0, #0x0]
	sub		r1, #0xe9
	add		r1, r9
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	mov		r7, #0x8e
	lsl		r7, r7, #0x1
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0xa
	mov		r2, #0x12
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xe2
	lsl		r1, r1, #0x8
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r0, r9
	str		r1, [r0, #0x0]
	mov		r0, #0xe2
	lsl		r0, r0, #0x1
	add		r0, r9
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r0, _0805a388
	add		r0, r9
	strb	r4, [r0, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r0, r9
	strh	r5, [r0, #0x0]
	ldr		r1, _0805a38c
	add		r1, r9
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	mov		r7, #0xf0
	lsl		r7, r7, #0x1
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc8
	lsl		r1, r1, #0x8
	mov		r2, #0x96
	lsl		r2, r2, #0x8
	mov		r0, #0xa1
	lsl		r0, r0, #0x2
	add		r0, r9
	str		r1, [r0, #0x0]
	mov		r0, #0xa2
	lsl		r0, r0, #0x2
	add		r0, r9
	str		r2, [r0, #0x0]
	ldr		r0, _0805a390
	add		r0, r9
	strb	r4, [r0, #0x0]
	mov		r2, #0x9d
	lsl		r2, r2, #0x2
	add		r2, r9
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x4
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0xa8
	lsl		r0, r0, #0x2
	add		r0, r9
	strh	r5, [r0, #0x0]
	ldr		r1, _0805a394
	add		r1, r9
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	ldr		r4, _0805a398
	ldr		r3, _0805a39c
	ldr		r2, _0805a3a0
	ldr		r1, _0805a3a4
	mov		r5, #0x20
	neg		r5, r5
	add		r0, r5, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5A37A, 0x2

_0805a37c:	.4byte 0x0200DB90
_0805a380:	.4byte 0xFFFFFE70
_0805a384:	.4byte 0x00000FAC
_0805a388:	.4byte 0x00000199
_0805a38c:	.4byte 0x000001DB
_0805a390:	.4byte 0x0000025D
_0805a394:	.4byte 0x0000029F
_0805a398:	.4byte 0x0200EB24
_0805a39c:	.4byte 0x0200EB1E
_0805a3a0:	.4byte 0x0200EB20
_0805a3a4:	.4byte 0x0200EB22
	thumb_func_end sub_0805a224

	thumb_func_start sub_0805a3a8
sub_0805a3a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r10, r0
	ldr		r2, _0805a3f4
	add		r2, r10
	mov		r0, #0x0
	ldrsh	r3, [r2, r0]
	cmp		r3, #0x0
	ble		_0805a3ce
	ldr		r0, _0805a3f8
	add		r0, r10
	add		r1, r3, #0x0
	ldr		r0, [r0, #0x0]
	cmp		r0, r1
	bgt		_0805a3e0
_0805a3ce:
	cmp		r3, #0x0
	bge		_0805a3fc
	ldr		r0, _0805a3f8
	add		r0, r10
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	ldr		r0, [r0, #0x0]
	cmp		r0, r1
	bge		_0805a3fc
_0805a3e0:
	ldr		r0, _0805a3f4
	add		r0, r10
	mov		r4, #0x0
	ldrsh	r2, [r0, r4]
	ldr		r1, _0805a3f8
	add		r1, r10
	ldr		r0, [r1, #0x0]
	sub		r0, r0, r2
	b		_0805a404

.incbin "base.gba", 0x5A3F2, 0x2

_0805a3f4:	.4byte 0x00002AAC
_0805a3f8:	.4byte 0x00002AA8

_0805a3fc:
	ldr		r1, _0805a4dc
	add		r1, r10
	ldr		r2, [r1, #0x0]
	mov		r0, #0x0
_0805a404:
	str		r0, [r1, #0x0]
	ldr		r3, _0805a4e0
	add		r3, r10
	ldr		r1, [r3, #0x0]
	ldr		r0, [r1, #0x8]
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	str		r0, [sp, #0x0]
	ldr		r0, _0805a4e4
	add		r0, r10
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bge		_0805a4f8
	ldr		r0, _0805a4e8
	ldr		r4, [sp, #0x0]
	cmp		r4, r0
	bgt		_0805a4f8
	ldr		r6, _0805a4ec
	add		r6, r10
	ldr		r0, [r6, #0x0]
	str		r1, [r0, #0x4]
	ldr		r1, [r3, #0x0]
	ldr		r0, [r6, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x4]
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x4]
	str		r0, [r3, #0x0]
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0x4]
	str		r0, [r6, #0x0]
	str		r4, [r0, #0x4]
	ldr		r0, [r6, #0x0]
	ldr		r1, [r0, #0x8]
	mov		r0, #0xc1
	lsl		r0, r0, #0x1
	add		r2, r1, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x3
	beq		_0805a46c
	add		r0, r1, #0x0
	add		r0, #0xd8
	mov		r1, #0x3
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805a46c:
	ldr		r1, [sp, #0x0]
	mov		r2, #0xc0
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	str		r1, [sp, #0x0]
	ldr		r5, _0805a4f0
	add		r5, r10
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	strb	r0, [r5, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x32
	ble		_0805a48a
	strb	r4, [r5, #0x0]
_0805a48a:
	ldr		r4, _0805a4f4
	add		r4, r10
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	add		r0, #0x1
	mov		r1, #0x7
	bl		sub_080bbd44
	strb	r0, [r4, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	add		r0, #0x5
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	mov		r2, #0x0
	ldrsb	r2, [r5, r2]
	add		r2, #0x5
	mov		r0, r10
	bl		sub_0805a7d0
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0x8]
	mov		r3, #0xc4
	lsl		r3, r3, #0x1
	add		r1, r0, r3
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	add		r2, r0, #0x5
	cmp		r2, #0x33
	bne		_0805a4d0
	mov		r2, #0x0
_0805a4d0:
	mov		r0, r10
	mov		r3, #0x4
	bl		sub_0805a70c
	b		_0805a5f6

.incbin "base.gba", 0x5A4DA, 0x2

_0805a4dc:	.4byte 0x00002AA8
_0805a4e0:	.4byte 0x00002AA0
_0805a4e4:	.4byte 0x00002AAC
_0805a4e8:	.4byte 0x000007FF
_0805a4ec:	.4byte 0x00002AA4
_0805a4f0:	.4byte 0x00002AAE
_0805a4f4:	.4byte 0x00002AB1

_0805a4f8:
	ldr		r0, _0805a5a0
	add		r0, r10
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	ble		_0805a5f6
	ldr		r0, _0805a5a4
	ldr		r1, [sp, #0x0]
	cmp		r1, r0
	ble		_0805a5f6
	ldr		r3, _0805a5a8
	add		r3, r10
	ldr		r2, [r3, #0x0]
	ldr		r1, _0805a5ac
	add		r1, r10
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldr		r2, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	str		r0, [r2, #0x4]
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	str		r2, [r0, #0x4]
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x0]
	str		r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x8]
	mov		r3, #0xc1
	lsl		r3, r3, #0x1
	add		r2, r1, r3
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x3
	beq		_0805a554
	add		r0, r1, #0x0
	add		r0, #0xd8
	mov		r1, #0x3
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805a554:
	ldr		r4, [sp, #0x0]
	ldr		r0, _0805a5b0
	add		r4, r4, r0
	str		r4, [sp, #0x0]
	ldr		r5, _0805a5b4
	add		r5, r10
	ldrb	r0, [r5, #0x0]
	sub		r0, #0x1
	strb	r0, [r5, #0x0]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_0805a570
	mov		r0, #0x32
	strb	r0, [r5, #0x0]
_0805a570:
	ldr		r4, _0805a5b8
	add		r4, r10
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	add		r0, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	strb	r0, [r4, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	add		r0, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	beq		_0805a5bc
	sub		r2, r0, #0x1
	b		_0805a5be

.incbin "base.gba", 0x5A59E, 0x2

_0805a5a0:	.4byte 0x00002AAC
_0805a5a4:	.4byte 0x00001FFF
_0805a5a8:	.4byte 0x00002AA0
_0805a5ac:	.4byte 0x00002AA4
_0805a5b0:	.4byte 0xFFFFE800
_0805a5b4:	.4byte 0x00002AAE
_0805a5b8:	.4byte 0x00002AB1

_0805a5bc:
	mov		r2, #0x32
_0805a5be:
	mov		r0, r10
	bl		sub_0805a7d0
	ldr		r0, _0805a5e4
	add		r0, r10
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x8]
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	ldr		r2, _0805a5e8
	add		r2, r10
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	beq		_0805a5ec
	sub		r2, r0, #0x1
	b		_0805a5ee

.incbin "base.gba", 0x5A5E2, 0x2

_0805a5e4:	.4byte 0x00002AA0
_0805a5e8:	.4byte 0x00002AAE

_0805a5ec:
	mov		r2, #0x32
_0805a5ee:
	mov		r0, r10
	mov		r3, #0x4
	bl		sub_0805a70c
_0805a5f6:
	ldr		r1, [sp, #0x0]
	cmp		r1, #0x0
	bge		_0805a5fe
	add		r1, #0xff
_0805a5fe:
	asr		r1, r1, #0x8
	sub		r1, #0x8
	mov		r0, r10
	bl		sub_0805a85c
	ldr		r0, _0805a6fc
	add		r0, r10
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	mov		r0, #0x0
	mov		r3, r12
	cmp		r3, #0x0
	beq		_0805a6cc
_0805a618:
	mov		r1, r12
	ldr		r4, [r1, #0x8]
	add		r1, r4, #0x0
	add		r1, #0xa8
	lsl		r0, r0, #0x10
	asr		r7, r0, #0x10
	lsl		r0, r7, #0x1
	add		r0, r0, r7
	str		r0, [sp, #0x4]
	lsl		r0, r0, #0xb
	ldr		r2, [sp, #0x0]
	add		r3, r0, r2
	str		r3, [r1, #0x0]
	mov		r2, #0x0
	ldr		r0, _0805a700
	add		r6, r3, r0
	mov		r1, #0x8e
	lsl		r1, r1, #0x8
	cmp		r6, r1
	bhi		_0805a642
	mov		r2, #0x1
_0805a642:
	add		r5, r4, #0x0
	add		r5, #0xbf
	mov		r0, #0x1
	mov		r8, r0
	ldrb	r0, [r5, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	mov		r9, r1
	and		r1, r0
	orr		r1, r2
	strb	r1, [r5, #0x0]
	add		r4, #0xc4
	add		r0, r4, #0x0
	add		r0, #0xa8
	str		r3, [r0, #0x0]
	mov		r5, #0x0
	mov		r2, #0x8e
	lsl		r2, r2, #0x8
	cmp		r6, r2
	bhi		_0805a66c
	mov		r5, #0x1
_0805a66c:
	add		r3, r4, #0x0
	add		r3, #0xbf
	mov		r2, r8
	and		r2, r5
	ldrb	r1, [r3, #0x0]
	mov		r0, r9
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x0]
	add		r4, #0xc4
	add		r2, r4, #0x0
	add		r2, #0xa8
	mov		r3, #0xb6
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	ldr		r3, [sp, #0x4]
	lsl		r0, r3, #0xb
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	add		r0, r0, r3
	ldr		r3, [sp, #0x0]
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldr		r0, _0805a704
	add		r3, r4, r0
	mov		r2, #0x1
	and		r2, r5
	ldrb	r1, [r3, #0x0]
	mov		r0, r9
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x0]
	add		r3, r4, #0x0
	add		r3, #0xbf
	ldrb	r1, [r3, #0x0]
	mov		r0, r9
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x0]
	mov		r1, r12
	ldr		r1, [r1, #0x4]
	mov		r12, r1
	add		r0, r7, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r1, #0x0
	bne		_0805a618
_0805a6cc:
	mov		r0, r10
	bl		sub_0805ad54
	mov		r0, r10
	bl		sub_0805ad14
	mov		r0, r10
	bl		sub_080b7690
	ldr		r0, _0805a708
	add		r0, r10
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805a6ea
	mov		r0, #0x1
_0805a6ea:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5A6FA, 0x2

_0805a6fc:	.4byte 0x00002AA0
_0805a700:	.4byte 0xFFFFF700
_0805a704:	.4byte 0x00000183
_0805a708:	.4byte 0x00002AA8
	thumb_func_end sub_0805a3a8

	thumb_func_start sub_0805a70c
sub_0805a70c:
	push	{ r4, r5, r6, lr }
	add		r4, r1, #0x0
	lsl		r2, r2, #0x10
	lsl		r3, r3, #0x10
	lsr		r6, r3, #0x10
	lsr		r1, r2, #0x10
	asr		r0, r2, #0x10
	cmp		r0, #0x33
	ble		_0805a724
	sub		r0, #0x33
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
_0805a724:
	lsl		r0, r1, #0x10
	asr		r5, r0, #0x10
	cmp		r5, #0x9
	bgt		_0805a76a
	mov		r0, #0xc
	cmp		r5, #0x0
	beq		_0805a734
	add		r0, r1, #0x0
_0805a734:
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r4, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805a74e
	add		r0, r4, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805a74e:
	add		r1, r4, #0x0
	add		r1, #0xa4
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x8
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0xaf
	lsl		r0, r0, #0x9
	b		_0805a7c6
_0805a76a:
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r4, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805a78c
	add		r0, r4, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805a78c:
	add		r1, r4, #0x0
	add		r1, #0xa4
	lsl		r0, r6, #0x10
	asr		r6, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x8
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r4, #0xc4
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r4, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805a7c0
	add		r0, r4, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805a7c0:
	add		r1, r4, #0x0
	add		r1, #0xa4
	lsl		r0, r6, #0x8
_0805a7c6:
	str		r0, [r1, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5A7CE, 0x2
	thumb_func_end sub_0805a70c

	thumb_func_start sub_0805a7d0
sub_0805a7d0:
	push	{ r4, r5, r6, lr }
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r4, r2, #0x10
	asr		r0, r2, #0x10
	cmp		r0, #0x32
	ble		_0805a7e6
	sub		r0, #0x33
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
_0805a7e6:
	ldr		r0, _0805a824
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_0800ed80
	add		r6, r0, #0x0
	ldr		r1, [r6, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	lsl		r0, r4, #0x10
	asr		r5, r0, #0x10
	ldr		r1, _0805a828
	add		r0, r5, r1
	bl		sub_0800227c
	add		r4, r0, #0x0
	ldr		r2, _0805a82c
	add		r0, r5, r2
	bl		sub_0800227c
	orr		r4, r0
	cmp		r4, #0x0
	beq		_0805a830
	add		r0, r5, #0x0
	bl		sub_080068f8
	b		_0805a834

_0805a824:	.4byte 0x0200AA18
_0805a828:	.4byte 0x00000452
_0805a82c:	.4byte 0x00000486

_0805a830:
	ldr		r0, _0805a858
	ldr		r0, [r0, #0x0]
_0805a834:
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x2
	mov		r3, #0xc
	add		r1, #0x1
	strh	r0, [r6, #0x28]
	strh	r3, [r6, #0x2a]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5A856, 0x2

_0805a858:	.4byte 0x0200BAC8
	thumb_func_end sub_0805a7d0

	thumb_func_start sub_0805a85c
sub_0805a85c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r3, r0, #0x0
	add		r5, r1, #0x0
	ldr		r1, _0805a924
	add		r0, r3, r1
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	eor		r1, r2
	strb	r1, [r0, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0xf
	ldr		r2, _0805a928
	add		r1, r1, r2
	add		r1, r1, r3
	mov		r8, r1
	mov		r4, #0x0
	mov		r6, #0xfe
_0805a886:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r0, #0x1
	add		r1, r8
	sub		r2, r6, r0
	strh	r2, [r1, #0x0]
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x9f
	ble		_0805a886
	mov		r4, #0x6
	ldr		r0, _0805a92c
	add		r0, r0, r3
	mov		r10, r0
	mov		r1, #0xff
	mov		r9, r1
_0805a8aa:
	mov		r2, r10
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl		r4, r4, #0x10
	asr		r1, r4, #0x10
	add		r0, r0, r1
	mov		r1, #0x7
	bl		sub_080bbd44
	lsl		r0, r0, #0x14
	lsl		r1, r5, #0x10
	lsr		r2, r1, #0x10
	mov		r3, #0x0
	add		r7, r4, #0x0
	add		r6, r5, #0x0
	add		r6, #0x18
	ldr		r1, _0805a930
	add		r0, r0, r1
	asr		r0, r0, #0x10
	sub		r4, r0, r5
_0805a8d2:
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	add		r1, r0, #0x0
	mov		r2, r9
	and		r1, r2
	lsl		r1, r1, #0x1
	add		r1, r8
	strh	r4, [r1, #0x0]
	lsl		r1, r3, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r1, r1, r2
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	lsr		r3, r1, #0x10
	asr		r1, r1, #0x10
	cmp		r1, #0xf
	ble		_0805a8d2
	add		r5, r6, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r7, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xc
	ble		_0805a8aa
	ldr		r1, _0805a934
	ldr		r3, _0805a938
	mov		r0, r8
	mov		r2, #0x2
	bl		sub_08000a2c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5A922, 0x2

_0805a924:	.4byte 0x00002AB2
_0805a928:	.4byte 0x000026A0
_0805a92c:	.4byte 0x00002AB1
_0805a930:	.4byte 0xFFFE0000
_0805a934:	.4byte 0x0400001A
_0805a938:	.4byte 0xA2600000
	thumb_func_end sub_0805a85c

	thumb_func_start sub_0805a93c
sub_0805a93c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r8, r0
	add		r4, r2, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	mov		r0, #0x6
	cmp		r4, #0x0
	beq		_0805a964
	mov		r0, #0x7
_0805a964:
	str		r0, [sp, #0x0]
	ldr		r6, _0805a9cc
	ldr		r0, _0805a9d0
	add		r0, r8
	mov		r9, r0
	mov		r1, r8
	add		r1, #0x58
	str		r1, [sp, #0x4]
	lsl		r0, r5, #0x10
	mov		r7, r9
	asr		r0, r0, #0x10
	mov		r10, r0
_0805a97c:
	ldr		r3, _0805a9d4
	strh	r6, [r3, #0x0]
	ldr		r0, _0805a9d8
	strh	r6, [r0, #0x0]
	ldr		r1, _0805a9dc
	strh	r6, [r1, #0x0]
	ldr		r3, _0805a9e0
	strh	r6, [r3, #0x0]
	ldr		r0, [sp, #0x0]
	bl		sub_08009680
	ldrb	r1, [r7, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	cmp		r0, #0x2
	ble		_0805a9f0
	ldr		r2, _0805a9e4
	ldr		r1, [r2, #0x0]
	ldr		r3, _0805a9e8
	add		r0, r1, r3
	cmp		r0, #0x0
	bge		_0805a9ae
	mov		r3, #0xef
	lsl		r3, r3, #0x10
	add		r0, r1, r3
_0805a9ae:
	str		r0, [r2, #0x0]
	ldr		r2, _0805a9ec
	ldr		r1, [r2, #0x0]
	ldr		r3, _0805a9e8
	add		r0, r1, r3
	cmp		r0, #0x0
	bge		_0805a9c2
	mov		r3, #0x9f
	lsl		r3, r3, #0x10
	add		r0, r1, r3
_0805a9c2:
	str		r0, [r2, #0x0]
	mov		r0, #0x0
	strb	r0, [r7, #0x0]
	b		_0805a9f6

.incbin "base.gba", 0x5A9CA, 0x2

_0805a9cc:	.4byte 0x0000FFE0
_0805a9d0:	.4byte 0x00002AB0
_0805a9d4:	.4byte 0x0200EB22
_0805a9d8:	.4byte 0x0200EB20
_0805a9dc:	.4byte 0x0200EB1E
_0805a9e0:	.4byte 0x0200EB24
_0805a9e4:	.4byte 0x0200CE30
_0805a9e8:	.4byte 0xffff0000
_0805a9ec:	.4byte 0x0200CE44

_0805a9f0:
	add		r0, r1, #0x1
	mov		r1, r9
	strb	r0, [r1, #0x0]
_0805a9f6:
	ldr		r4, [sp, #0x4]
	mov		r5, #0x0
	lsl		r6, r6, #0x10
	mov		r2, #0x1
_0805a9fe:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805aa1e
	ldr		r1, [r4, #0xc]
	mov		r3, #0x20
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	str		r2, [sp, #0x8]
	bl		sub_080bbc74
	ldr		r2, [sp, #0x8]
_0805aa1e:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x31
	ble		_0805a9fe
	mov		r0, r8
	bl		sub_080b7690
	asr		r0, r6, #0x10
	add		r0, r10
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r0, #0x0
	ble		_0805a97c
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5AA52, 0x11E
	thumb_func_end sub_0805a93c

	thumb_func_start sub_0805ab70
sub_0805ab70:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r4, r0, #0x0
	ldr		r0, _0805abd0
	mov		r1, #0x7
	bl		sub_0800ed80
	add		r7, r0, #0x0
	add		r7, #0x18
	mov		r6, #0x0
	mov		r1, #0x7
	strh	r1, [r0, #0x2c]
	ldr		r0, _0805abd4
	add		r4, r4, r0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	sub		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r5, r0, #0x10
	cmp		r5, #0x9
	ble		_0805abd8
	mov		r4, sp
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r0, #0x30
	strb	r0, [r4, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r0, #0x30
	mov		r1, sp
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, sp
	add		r0, #0x2
	strb	r6, [r0, #0x0]
	mov		r9, r1
	mov		r10, r0
	b		_0805abea

.incbin "base.gba", 0x5ABCE, 0x2

_0805abd0:	.4byte 0x0200AA18
_0805abd4:	.4byte 0x00002AB3

_0805abd8:
	mov		r0, sp
	add		r1, #0x30
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	strb	r6, [r0, #0x0]
	mov		r9, r0
	mov		r1, #0x2
	add		r1, sp
	mov		r10, r1
_0805abea:
	add		r6, r7, #0x0
	add		r6, #0x18
	add		r0, r6, #0x0
	mov		r1, sp
	bl		sub_0808ed5c
	add		r4, r7, #0x0
	add		r4, #0x1a
	ldrb	r0, [r7, #0x18]
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	add		r2, r3, #0x0
	str		r3, [sp, #0x4]
	bl		sub_0808f1a8
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x18
	sub		r1, r1, r0
	mov		r5, #0x12
	mov		r0, #0x0
	mov		r8, r0
	strh	r1, [r7, #0x10]
	strh	r5, [r7, #0x12]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	ldr		r3, [sp, #0x4]
	add		r2, r3, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r1, sp
	mov		r0, #0x2f
	strb	r0, [r1, #0x0]
	mov		r0, r8
	mov		r1, r9
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	mov		r1, sp
	bl		sub_0808ed5c
	ldrb	r0, [r7, #0x18]
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	mov		r0, #0x19
	strh	r0, [r7, #0x10]
	strh	r5, [r7, #0x12]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	add		r2, r3, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r1, sp
	mov		r0, #0x35
	strb	r0, [r1, #0x0]
	mov		r0, #0x30
	mov		r1, r9
	strb	r0, [r1, #0x0]
	mov		r1, r8
	mov		r0, r10
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, sp
	bl		sub_0808ed5c
	ldrb	r0, [r7, #0x18]
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	mov		r0, #0x21
	strh	r0, [r7, #0x10]
	strh	r5, [r7, #0x12]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	add		r2, r3, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5AC9A, 0x2
	thumb_func_end sub_0805ab70

	thumb_func_start sub_0805ac9c
	push	{ r4, lr }
	ldr		r4, _0805acc4
	ldr		r0, _0805acc8
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _0805accc
	ldr		r0, _0805acd0
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _0805acd4
	ldr		r0, _0805acd8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5ACC2, 0x2

_0805acc4:	.4byte 0x0200BAD0
_0805acc8:	.4byte 0x080d35fc @ scrMA_HameegoHamData
_0805accc:	.4byte 0x0200BACC
_0805acd0:	.4byte 0x080d3614 @ scrMA_HameegoListInit
_0805acd4:	.4byte 0x0200BAC8
_0805acd8:	.4byte 0x080d362c @ ms_who_is
	thumb_func_end sub_0805ab70

	thumb_func_start sub_0805acdc
sub_0805acdc:
	push	{ r4, r5, lr }
	mov		r5, #0x0
	mov		r1, #0x0
_0805ace2:
	lsl		r0, r1, #0x10
	asr		r4, r0, #0x10
	ldr		r1, _0805ad10
	add		r0, r4, r1
	bl		sub_0800227c
	add		r1, r5, #0x0
	cmp		r0, #0x0
	beq		_0805acf6
	add		r1, r5, #0x1
_0805acf6:
	lsl		r0, r1, #0x10
	lsr		r5, r0, #0x10
	add		r0, r4, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x32
	ble		_0805ace2
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5AD0E, 0x2

_0805ad10:	.4byte 0x00000486
	thumb_func_end sub_0805acdc

	thumb_func_start sub_0805ad14
sub_0805ad14:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r4, #0x58
	mov		r5, #0x0
	mov		r6, #0x1
_0805ad1e:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805ad3a
	ldr		r1, [r4, #0xc]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	bl		sub_080bbc74
_0805ad3a:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x31
	ble		_0805ad1e
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5AD52, 0x2
	thumb_func_end sub_0805ad14

	thumb_func_start sub_0805ad54
sub_0805ad54:
	push	{ r4, r5, lr }
	ldr		r1, _0805ad90
	add		r2, r0, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x2
	ble		_0805ada0
	ldr		r3, _0805ad94
	ldr		r1, [r3, #0x0]
	ldr		r4, _0805ad98
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_0805ad76
	mov		r5, #0xef
	lsl		r5, r5, #0x10
	add		r0, r1, r5
_0805ad76:
	str		r0, [r3, #0x0]
	ldr		r3, _0805ad9c
	ldr		r1, [r3, #0x0]
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_0805ad88
	mov		r4, #0x9f
	lsl		r4, r4, #0x10
	add		r0, r1, r4
_0805ad88:
	str		r0, [r3, #0x0]
	mov		r0, #0x0
	b		_0805ada2

.incbin "base.gba", 0x5AD8E, 0x2

_0805ad90:	.4byte 0x00002AB0
_0805ad94:	.4byte 0x0200CE30
_0805ad98:	.4byte 0xffff0000
_0805ad9c:	.4byte 0x0200CE44

_0805ada0:
	add		r0, r1, #0x1
_0805ada2:
	strb	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5ADAA, 0x2
	thumb_func_end sub_0805ad54

	thumb_func_start sub_0805adac
sub_0805adac:
	ldr		r2, _0805adbc
	add		r0, r0, r2
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	ldr		r2, [r0, #0x0]
	add		r2, r2, r1
	str		r2, [r0, #0x0]
	bx		lr

_0805adbc:	.4byte 0x000007E4
	thumb_func_end sub_0805adac

	thumb_func_start sub_0805adc0
sub_0805adc0:
	push	{ r4, lr }
	mov		r3, #0xc0
	lsl		r3, r3, #0x5
	mov		r4, #0xfc
	lsl		r4, r4, #0x3
	add		r2, r0, r4
	str		r3, [r2, #0x0]
	ldr		r2, _0805addc
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5ADDA, 0x2

_0805addc:	.4byte 0x000007E4
	thumb_func_end sub_0805adc0

	thumb_func_start sub_0805ade0
sub_0805ade0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	lsl		r4, r1, #0x10
	lsr		r4, r4, #0x10
	mov		r0, #0x54
	bl		sub_0808f690
	ldr		r0, _0805ae10
	add		r2, r5, r0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	neg		r1, r4
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0xb
	str		r0, [r2, #0x0]
	cmp		r4, #0x0
	ble		_0805ae1c
	ldr		r2, _0805ae14
	add		r1, r2, #0x0
	cmp		r4, #0x1
	ble		_0805ae30
	ldr		r0, _0805ae18
	b		_0805ae2e

_0805ae10:	.4byte 0x00002AA8
_0805ae14:	.4byte 0xFFFFFE00
_0805ae18:	.4byte 0xFFFFFC00

_0805ae1c:
	mov		r0, #0x1
	neg		r0, r0
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r1, r2, #0x0
	cmp		r4, r0
	bge		_0805ae30
	mov		r0, #0x80
	lsl		r0, r0, #0x3
_0805ae2e:
	add		r1, r0, #0x0
_0805ae30:
	ldr		r2, _0805ae48
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x4
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0805ae48:	.4byte 0x00002AAC
	thumb_func_end sub_0805ade0

	thumb_func_start sub_0805ae4c
sub_0805ae4c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0805ae68
	add		r2, r4, r0
	ldr		r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	cmp		r0, r3
	ble		_0805ae70
	add		r1, r3, #0x0
	ldr		r3, _0805ae6c
	add		r0, r0, r3
	b		_0805ae84

.incbin "base.gba", 0x5AE66, 0x2

_0805ae68:	.4byte 0x00002AA8
_0805ae6c:	.4byte 0xFFFFFC00

_0805ae70:
	ldr		r1, _0805ae7c
	cmp		r0, r1
	bge		_0805ae80
	add		r0, r0, r3
	b		_0805ae84

.incbin "base.gba", 0x5AE7A, 0x2

_0805ae7c:	.4byte 0xFFFFFC00

_0805ae80:
	add		r1, r0, #0x0
	mov		r0, #0x0
_0805ae84:
	str		r0, [r2, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r4, #0x0
	bl		sub_0805adac
	add		r0, r4, #0x0
	bl		sub_0805ad54
	add		r0, r4, #0x0
	bl		sub_0805ad14
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r1, _0805aeb4
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805aeae
	mov		r0, #0x1
_0805aeae:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0805aeb4:	.4byte 0x00002AA8
	thumb_func_end sub_0805ae4c

	thumb_func_start sub_0805aeb8
sub_0805aeb8:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r0, _0805aedc
	add		r7, r5, r0
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	lsl		r1, r1, #0x10
	asr		r4, r1, #0x10
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x4
	bls		_0805aee0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0805ade0
	b		_0805af00

_0805aedc:	.4byte 0x00002AAF

_0805aee0:
	mov		r0, #0x54
	bl		sub_0808f690
	ldr		r1, _0805af08
	add		r0, r5, r1
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	lsl		r1, r1, #0xb
	str		r1, [r0, #0x0]
	strb	r6, [r7, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
_0805af00:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5AF06, 0x2

_0805af08:	.4byte 0x00002AA8
	thumb_func_end sub_0805aeb8

	thumb_func_start sub_0805af0c
sub_0805af0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	ldr		r0, _0805af88
	str		r0, [r6, #0x4c]
	ldr		r0, _0805af8c
	str		r0, [r6, #0xc]
	ldr		r1, _0805af90
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_0805af34
_0805af28:
	add		r0, r4, #0x0
	bl		sub_0808afac
	ldr		r4, [r4, #0x4]
	cmp		r4, #0x0
	bne		_0805af28
_0805af34:
	ldr		r0, _0805af94
	bl		sub_08002268
	add		r5, r6, #0x0
	add		r5, #0x58
	add		r7, r6, #0x0
	add		r7, #0x40
	cmp		r5, #0x0
	beq		_0805af5c
	ldr		r0, _0805af98
	add		r4, r6, r0
	cmp		r5, r4
	beq		_0805af5c
_0805af4e:
	sub		r4, #0xc4
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0804f0ec
	cmp		r5, r4
	bne		_0805af4e
_0805af5c:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805af7c
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0805af7c:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5AF86, 0x2

_0805af88:	.4byte 0x080e034c
_0805af8c:	.4byte 0x080e206c
_0805af90:	.4byte 0x00002AA0
_0805af94:	.4byte 0x00000835
_0805af98:	.4byte 0x000026A0
	thumb_func_end sub_0805af0c

	thumb_func_start sub_0805af9c
sub_0805af9c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	cmp		r1, #0x8
	bls		_0805afb2
	bl		sub_0805b852
_0805afb2:
	lsl		r0, r1, #0x2
	ldr		r1, _0805afbc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0805afbc:	.4byte 0x0805afc0
_0805afc0:	.4byte 0x0805afe4

.incbin "base.gba", 0x5AFC4, 0x20
	thumb_func_end sub_0805af9c


.incbin "base.gba", 0x5AFE4, 0x3A8

_0805b38c:

.incbin "base.gba", 0x5B38C, 0x4C6
	non_word_aligned_thumb_func_start sub_0805b852
sub_0805b852:
	ldr		r0, _0805b870
	mov		r1, #0xea
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805b870:	.4byte 0x080d3638 @ m_aioi/maFriends.cpp
	thumb_func_end sub_0805b852

	thumb_func_start sub_0805b874
sub_0805b874:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0805b944
	str		r0, [r6, #0x4c]
	ldr		r0, _0805b948
	str		r0, [r6, #0xc]
	add		r4, r6, #0x0
	add		r4, #0x58
	mov		r5, #0x3b
	mov		r7, #0x1
	neg		r7, r7
_0805b896:
	add		r0, r4, #0x0
	bl		sub_0804f084
	add		r4, #0xc4
	sub		r5, #0x1
	cmp		r5, r7
	bne		_0805b896
	ldr		r0, _0805b94c
	add		r5, r6, r0
	ldr		r1, _0805b950
	add		r4, r6, r1
	mov		r0, #0xc
	bl		sub_0808af94
	str		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r4, r1, #0x0
	str		r5, [r4, #0x8]
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	mov		r7, #0x6
_0805b8c0:
	mov		r2, #0xf5
	lsl		r2, r2, #0x2
	add		r5, r5, r2
	mov		r0, #0xc
	bl		sub_0808af94
	add		r1, r0, #0x0
	str		r5, [r1, #0x8]
	str		r4, [r1, #0x4]
	str		r1, [r4, #0x0]
	add		r4, r1, #0x0
	lsl		r0, r7, #0x10
	ldr		r2, _0805b954
	add		r0, r0, r2
	lsr		r7, r0, #0x10
	asr		r3, r0, #0x10
	cmp		r3, #0x0
	bne		_0805b8c0
	ldr		r2, _0805b958
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	str		r3, [r1, #0x0]
	ldr		r1, _0805b95c
	add		r0, r6, r1
	strb	r3, [r0, #0x0]
	add		r2, #0x11
	add		r0, r6, r2
	strb	r3, [r0, #0x0]
	add		r1, #0x2
	add		r0, r6, r1
	strb	r3, [r0, #0x0]
	ldr		r0, _0805b960
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, _0805b964
	str		r3, [r0, #0x0]
	ldr		r0, _0805b968
	bl		sub_0800223c
	ldr		r0, _0805b96c
	bl		sub_0800223c
	ldr		r0, _0805b970
	bl		sub_0800223c
	ldr		r0, _0805b974
	mov		r1, #0xf8
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	ldr		r2, _0805b978
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	ldr		r2, _0805b97c
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0805b980
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0805b944:	.4byte 0x080e034c
_0805b948:	.4byte 0x080e2094
_0805b94c:	.4byte 0x00000EE4
_0805b950:	.4byte 0x0000324C
_0805b954:	.4byte 0xffff0000
_0805b958:	.4byte 0x00003248
_0805b95c:	.4byte 0x00003258
_0805b960:	.4byte 0x0000325E
_0805b964:	.4byte 0x0200D58C
_0805b968:	.4byte 0x00000B08
_0805b96c:	.4byte 0x00000B09
_0805b970:	.4byte 0x00000B0A
_0805b974:	.4byte 0x02000BAC
_0805b978:	.4byte 0x0000325D
_0805b97c:	.4byte 0x02000B18
_0805b980:	.4byte 0x0000E0FF
	thumb_func_end sub_0805b874

	thumb_func_start sub_0805b984
sub_0805b984:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4c
	add		r6, r0, #0x0
	add		r7, r6, #0x0
	add		r7, #0x58
	mov		r4, #0x0
	mov		r0, #0x2
	neg		r0, r0
	add		r5, r0, #0x0
_0805b99e:
	add		r0, r7, #0x0
	add		r0, #0x14
	bl		sub_0808e1ac
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	and		r0, r5
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	lsl		r0, r4, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	ble		_0805b99e
	ldr		r2, _0805bbf8
	add		r0, r6, r2
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r3, _0805bbfc
	add		r0, r6, r3
	strb	r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805bc00
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x1
	bl		sub_08018e6c
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805bc04
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	mov		r5, #0xf0
	lsl		r5, r5, #0x1
	add		r7, r6, r5
	add		r0, r7, #0x0
	mov		r1, #0x14
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x98
	lsl		r1, r1, #0x7
	mov		r2, #0x90
	lsl		r2, r2, #0x4
	mov		r3, #0xa1
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	add		r5, #0xa8
	add		r0, r6, r5
	str		r2, [r0, #0x0]
	mov		r0, #0x1
	mov		r9, r0
	mov		r1, #0x1
	mov		r10, r1
	ldr		r2, _0805bc08
	add		r0, r6, r2
	mov		r3, r9
	strb	r3, [r0, #0x0]
	sub		r5, #0x14
	add		r1, r6, r5
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	mov		r8, r2
	mov		r4, #0x0
	mov		r3, r8
	orr		r0, r3
	strh	r0, [r1, #0x0]
	add		r5, #0x2c
	add		r1, r6, r5
	mov		r0, #0x98
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	ldr		r0, _0805bc0c
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r3, #0xa9
	lsl		r3, r3, #0x2
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0x16
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xa0
	lsl		r1, r1, #0x8
	mov		r2, #0xc0
	lsl		r2, r2, #0x7
	add		r5, #0xa8
	add		r0, r6, r5
	str		r1, [r0, #0x0]
	mov		r1, #0xd3
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0805bc10
	add		r0, r6, r2
	mov		r3, r9
	strb	r3, [r0, #0x0]
	sub		r5, #0x10
	add		r1, r6, r5
	ldrh	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strh	r0, [r1, #0x0]
	mov		r3, #0xd9
	lsl		r3, r3, #0x2
	add		r1, r6, r3
	mov		r0, #0xd0
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	add		r5, #0x2b
	add		r1, r6, r5
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x4
	add		r7, r6, r3
	ldr		r5, _0805bc14
	add		r0, r6, r5
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0805bacc
	b		_0805bc48
_0805bacc:
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r4, #0x90
	lsl		r4, r4, #0x5
	mov		r5, #0x97
	lsl		r5, r5, #0x8
	ldr		r1, _0805bc18
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	mov		r2, #0x82
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	str		r5, [r0, #0x0]
	ldr		r3, _0805bc1c
	add		r0, r6, r3
	mov		r1, r9
	strb	r1, [r0, #0x0]
	sub		r2, #0x14
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r3, r8
	orr		r0, r3
	strh	r0, [r1, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	add		r2, #0x2b
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, r10
	orr		r0, r3
	strb	r0, [r1, #0x0]
	ldr		r0, _0805bc20
	add		r7, r6, r0
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x4
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xba
	lsl		r1, r1, #0x7
	mov		r2, #0x9a
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805bc24
	add		r0, r6, r3
	str		r5, [r0, #0x0]
	ldr		r5, _0805bc28
	add		r0, r6, r5
	mov		r1, r9
	strb	r1, [r0, #0x0]
	sub		r2, #0x10
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r3, r8
	orr		r0, r3
	strh	r0, [r1, #0x0]
	add		r5, #0x43
	add		r0, r6, r5
	strh	r4, [r0, #0x0]
	ldr		r0, _0805bc2c
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r3, #0x9e
	lsl		r3, r3, #0x3
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xb
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xb0
	lsl		r1, r1, #0x6
	mov		r5, #0x98
	lsl		r5, r5, #0x8
	ldr		r2, _0805bc30
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xb3
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	str		r5, [r0, #0x0]
	ldr		r1, _0805bc34
	add		r0, r6, r1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	sub		r3, #0x14
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r3, #0x2c
	add		r0, r6, r3
	add		r4, #0x80
	strh	r4, [r0, #0x0]
	ldr		r0, _0805bc38
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x4
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xb
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x84
	lsl		r1, r1, #0x8
	mov		r2, #0xcb
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805bc3c
	add		r0, r6, r3
	str		r5, [r0, #0x0]
	ldr		r5, _0805bc40
	add		r0, r6, r5
	mov		r1, r9
	strb	r1, [r0, #0x0]
	sub		r2, #0x10
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	mov		r3, r8
	orr		r0, r3
	strh	r0, [r1, #0x0]
	add		r5, #0x43
	add		r0, r6, r5
	strh	r4, [r0, #0x0]
	ldr		r0, _0805bc44
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	b		_0805bc4c

_0805bbf8:	.4byte 0x0000325B
_0805bbfc:	.4byte 0x0000325C
_0805bc00:	.4byte 0x0200BB04
_0805bc04:	.4byte 0x0200BB08
_0805bc08:	.4byte 0x0000025D
_0805bc0c:	.4byte 0x0000029F
_0805bc10:	.4byte 0x00000321
_0805bc14:	.4byte 0x0000325D
_0805bc18:	.4byte 0x0000040C
_0805bc1c:	.4byte 0x000003E5
_0805bc20:	.4byte 0x0000042C
_0805bc24:	.4byte 0x000004D4
_0805bc28:	.4byte 0x000004A9
_0805bc2c:	.4byte 0x000004EB
_0805bc30:	.4byte 0x00000594
_0805bc34:	.4byte 0x0000056D
_0805bc38:	.4byte 0x000005AF
_0805bc3c:	.4byte 0x0000065C
_0805bc40:	.4byte 0x00000631
_0805bc44:	.4byte 0x00000673

_0805bc48:
	ldr		r3, _0805bfb8
	add		r7, r6, r3
_0805bc4c:
	add		r7, #0xc4
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc8
	lsl		r1, r1, #0x8
	mov		r2, #0x99
	lsl		r2, r2, #0x8
	add		r0, r7, #0x0
	add		r0, #0xa4
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	mov		r5, #0x1
	mov		r9, r5
	mov		r0, #0x1
	mov		r8, r0
	add		r0, r7, #0x0
	add		r0, #0x7d
	mov		r1, r9
	strb	r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x94
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x4
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xc0
	mov		r0, #0x90
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	sub		r1, #0x1
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r3, _0805bfbc
	add		r5, r6, r3
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	bgt		_0805bcaa
	b		_0805bdde
_0805bcaa:
	add		r7, #0xc4
	add		r0, r7, #0x0
	mov		r1, #0x1d
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r4, #0x3
	add		r0, r7, #0x0
	add		r0, #0x7d
	strb	r4, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xc0
	mov		r0, #0xc2
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
	sub		r1, #0x1
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	add		r0, r7, #0x0
	mov		r1, #0x1d
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r7, #0x0
	add		r0, #0x7d
	strb	r4, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xc0
	mov		r0, #0xe0
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
	sub		r1, #0x1
	ldrb	r0, [r1, #0x0]
	mov		r3, r8
	orr		r0, r3
	strb	r0, [r1, #0x0]
	ldr		r1, _0805bfc0
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r0, #0x1
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0xb
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r1, r2
	add		r0, r6, #0x0
	bl		sub_0805f3a0
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x5
	ble		_0805bda0
	ldr		r3, _0805bfc4
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0x1b
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r5, #0x98
	lsl		r5, r5, #0x7
	mov		r1, #0xc0
	lsl		r1, r1, #0x5
	ldr		r2, _0805bfc8
	add		r0, r6, r2
	str		r5, [r0, #0x0]
	ldr		r3, _0805bfcc
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	ldr		r1, _0805bfd0
	add		r0, r6, r1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	add		r3, #0x18
	add		r0, r6, r3
	mov		r4, #0x80
	lsl		r4, r4, #0x5
	strh	r4, [r0, #0x0]
	ldr		r0, _0805bfd4
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x4
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0x1b
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x88
	lsl		r1, r1, #0x8
	ldr		r2, _0805bfd8
	add		r0, r6, r2
	str		r5, [r0, #0x0]
	mov		r3, #0xa3
	lsl		r3, r3, #0x4
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	ldr		r5, _0805bfdc
	add		r0, r6, r5
	mov		r1, r9
	strb	r1, [r0, #0x0]
	add		r2, #0x1c
	add		r0, r6, r2
	strh	r4, [r0, #0x0]
	add		r3, #0x17
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	mov		r5, r8
	orr		r0, r5
	strb	r0, [r1, #0x0]
_0805bda0:
	mov		r2, #0xc4
	lsl		r2, r2, #0x8
	mov		r3, #0xb8
	lsl		r3, r3, #0x7
	add		r0, r6, #0x0
	add		r0, #0xfc
	str		r2, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r3, [r0, #0x0]
	mov		r5, #0x8c
	lsl		r5, r5, #0x1
	add		r1, r6, r5
	mov		r0, #0xe0
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	mov		r2, #0xe2
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r3, [r0, #0x0]
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
_0805bdde:
	mov		r5, #0xe2
	lsl		r5, r5, #0x4
	add		r7, r6, r5
	add		r0, r7, #0x0
	mov		r1, #0x1e
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc4
	lsl		r1, r1, #0x8
	mov		r2, #0xc0
	lsl		r2, r2, #0x4
	ldr		r3, _0805bfe0
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	add		r5, #0xa8
	add		r0, r6, r5
	str		r2, [r0, #0x0]
	mov		r0, #0x1
	mov		r8, r0
	mov		r1, #0x1
	mov		r9, r1
	ldr		r2, _0805bfe4
	add		r0, r6, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	sub		r5, #0x14
	add		r2, r6, r5
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x4
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x4
	add		r1, r6, r0
	mov		r0, #0x90
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	ldr		r2, _0805bfe8
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, r9
	orr		r0, r3
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0805dedc
	mov		r4, #0xa0
	lsl		r4, r4, #0x8
	mov		r5, #0xf0
	lsl		r5, r5, #0x7
	mov		r1, #0xaf
	lsl		r1, r1, #0x4
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	ldr		r2, _0805bfec
	add		r0, r6, r2
	str		r5, [r0, #0x0]
	ldr		r3, _0805bff0
	add		r1, r6, r3
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	ldr		r0, _0805bff4
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	mov		r1, #0xb1
	lsl		r1, r1, #0x4
	add		r7, r6, r1
	add		r0, r7, #0x0
	mov		r1, #0x17
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r2, _0805bff8
	add		r0, r6, r2
	str		r4, [r0, #0x0]
	ldr		r3, _0805bffc
	add		r0, r6, r3
	str		r5, [r0, #0x0]
	ldr		r5, _0805c000
	add		r0, r6, r5
	mov		r1, r8
	strb	r1, [r0, #0x0]
	add		r2, #0x1c
	add		r0, r6, r2
	mov		r5, #0xc0
	lsl		r5, r5, #0x5
	strh	r5, [r0, #0x0]
	add		r3, #0x17
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, r9
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x5
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xce
	lsl		r1, r1, #0x8
	mov		r4, #0xe8
	lsl		r4, r4, #0x7
	ldr		r2, _0805c004
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805c008
	add		r0, r6, r3
	str		r4, [r0, #0x0]
	ldr		r1, _0805c00c
	add		r0, r6, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	add		r3, #0x18
	add		r0, r6, r3
	strh	r5, [r0, #0x0]
	ldr		r0, _0805c010
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r9
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x4
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc6
	lsl		r1, r1, #0x8
	ldr		r2, _0805c014
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xd4
	lsl		r3, r3, #0x4
	add		r0, r6, r3
	str		r4, [r0, #0x0]
	ldr		r1, _0805c018
	add		r0, r6, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	add		r3, #0x18
	add		r0, r6, r3
	strh	r5, [r0, #0x0]
	ldr		r0, _0805c01c
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _0805c020
	add		r7, r6, r1
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xbe
	lsl		r1, r1, #0x8
	mov		r2, #0xe0
	lsl		r2, r2, #0x4
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805c024
	add		r0, r6, r3
	str		r4, [r0, #0x0]
	ldr		r1, _0805c028
	add		r0, r6, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	add		r3, #0x18
	add		r0, r6, r3
	strh	r5, [r0, #0x0]
	ldr		r5, _0805c02c
	add		r2, r6, r5
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _0805c030
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	mov		r3, #0x0
	ldr		r2, _0805bfbc
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r3, r0
	ble		_0805bf7c
	b		_0805c226
_0805bf7c:
	mov		r5, r10
	cmp		r5, #0x0
	bne		_0805bf84
	b		_0805c226
_0805bf84:
	ldr		r0, _0805c034
	add		r0, r6, r0
	str		r0, [sp, #0x40]
	add		r1, #0x11
	add		r1, r6, r1
	str		r1, [sp, #0x44]
_0805bf90:
	add		r0, r6, r2
	mov		r4, #0x0
	ldrsb	r4, [r0, r4]
	ldr		r2, [sp, #0x40]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	sub		r2, r4, r0
	lsl		r3, r3, #0x10
	asr		r1, r3, #0x10
	sub		r2, r2, r1
	sub		r0, #0x1
	add		r1, r0, r1
	sub		r0, r4, #0x1
	str		r3, [sp, #0x48]
	cmp		r1, r0
	ble		_0805c038
	add		r0, r2, r4
	lsl		r0, r0, #0x10
	b		_0805c044

.incbin "base.gba", 0x5BFB6, 0x2

_0805bfb8:	.4byte 0x000005B4
_0805bfbc:	.4byte 0x0000325D
_0805bfc0:	.4byte 0x00003259
_0805bfc4:	.4byte 0x000008C4
_0805bfc8:	.4byte 0x00000968
_0805bfcc:	.4byte 0x0000096C
_0805bfd0:	.4byte 0x00000941
_0805bfd4:	.4byte 0x00000983
_0805bfd8:	.4byte 0x00000A2C
_0805bfdc:	.4byte 0x00000A05
_0805bfe0:	.4byte 0x00000EC4
_0805bfe4:	.4byte 0x00000E9D
_0805bfe8:	.4byte 0x00000EDF
_0805bfec:	.4byte 0x00000AF4
_0805bff0:	.4byte 0x00000B0C
_0805bff4:	.4byte 0x00000B0B
_0805bff8:	.4byte 0x00000BB4
_0805bffc:	.4byte 0x00000BB8
_0805c000:	.4byte 0x00000B8D
_0805c004:	.4byte 0x00000C78
_0805c008:	.4byte 0x00000C7C
_0805c00c:	.4byte 0x00000C51
_0805c010:	.4byte 0x00000C93
_0805c014:	.4byte 0x00000D3C
_0805c018:	.4byte 0x00000D15
_0805c01c:	.4byte 0x00000D57
_0805c020:	.4byte 0x00000D5C
_0805c024:	.4byte 0x00000E04
_0805c028:	.4byte 0x00000DD9
_0805c02c:	.4byte 0x00000E1B
_0805c030:	.4byte 0x00003248
_0805c034:	.4byte 0x00003258

_0805c038:
	cmp		r1, #0x0
	bge		_0805c042
	sub		r0, r2, r4
	lsl		r0, r0, #0x10
	b		_0805c044
_0805c042:
	lsl		r0, r2, #0x10
_0805c044:
	lsr		r2, r0, #0x10
	lsl		r0, r2, #0x3
	add		r0, r0, r2
	lsl		r0, r0, #0x2
	sub		r0, r0, r2
	lsl		r0, r0, #0x3
	ldr		r3, _0805c330
	add		r0, r0, r3
	str		r0, [sp, #0x3c]
	mov		r5, r10
	ldr		r7, [r5, #0x8]
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x3c]
	bl		sub_0805f2bc
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r7, #0x0
	mov		r1, #0x1c
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r0, [sp, #0x48]
	asr		r0, r0, #0x10
	mov		r8, r0
	lsl		r0, r0, #0x1
	add		r0, r8
	lsl		r0, r0, #0xb
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r1, r1, r0
	mov		r9, r1
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r2, #0xc0
	lsl		r2, r2, #0x5
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	sub		r0, #0x2b
	mov		r3, #0x3
	strb	r3, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r4, #0x0
	mov		r5, #0x4
	orr		r0, r5
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r1, #0xc0
	lsl		r1, r1, #0x6
	strh	r1, [r0, #0x0]
	mov		r3, #0x0
	mov		r0, r8
	sub		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x4
	bhi		_0805c0c2
	mov		r3, #0x1
_0805c0c2:
	add		r2, r7, #0x0
	add		r2, #0xbf
	mov		r4, #0x1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	add		r7, #0xc4
	add		r0, r7, #0x0
	mov		r1, #0x1c
	mov		r2, #0x3
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r2, #0xc0
	lsl		r2, r2, #0x5
	str		r2, [r0, #0x0]
	add		r0, #0x4
	mov		r3, r9
	str		r3, [r0, #0x0]
	sub		r0, #0x2b
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r3, #0xc4
	lsl		r3, r3, #0x6
	strh	r3, [r0, #0x0]
	mov		r0, #0x0
	cmp		r5, #0x4
	bhi		_0805c116
	mov		r0, #0x1
_0805c116:
	add		r3, r7, #0x0
	add		r3, #0xbf
	add		r1, r4, #0x0
	and		r1, r0
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	add		r7, #0xc4
	ldr		r1, [sp, #0x44]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	add		r0, #0x1
	mov		r2, #0x0
	cmp		r8, r0
	beq		_0805c13c
	mov		r2, #0x3
_0805c13c:
	add		r0, r7, #0x0
	mov		r1, #0x1b
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r2, #0x88
	lsl		r2, r2, #0x8
	str		r2, [r0, #0x0]
	add		r0, #0x4
	mov		r3, r9
	str		r3, [r0, #0x0]
	sub		r0, #0x2b
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	add		r0, #0x43
	mov		r2, #0xc4
	lsl		r2, r2, #0x6
	strh	r2, [r0, #0x0]
	mov		r0, #0x0
	cmp		r5, #0x4
	bhi		_0805c16c
	mov		r0, #0x1
_0805c16c:
	add		r2, r7, #0x0
	add		r2, #0xbf
	and		r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	orr		r0, r4
	strb	r0, [r2, #0x0]
	ldr		r0, _0805c334
	mov		r1, #0xf
	bl		sub_0800ed80
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	mov		r0, r8
	add		r0, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r1, r0, #0x0
	ldr		r0, _0805c334
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r5, #0x18
	ldrsh	r0, [r1, r5]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	add		r4, #0x18
	ldr		r1, [sp, #0x3c]
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x8
	cmp		r0, #0x0
	beq		_0805c1d6
	ldr		r3, [sp, #0x3c]
	ldr		r5, _0805c338
	add		r0, r3, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805c1d6
	mov		r1, #0x1
_0805c1d6:
	strh	r1, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x18
	ldr		r1, [sp, #0x3c]
	add		r1, #0x4
	mov		r2, #0xa2
	bl		sub_0808c818
	add		r1, r4, #0x0
	add		r1, #0x1a
	ldrb	r2, [r4, #0x18]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	mov		r0, #0x2
	strh	r0, [r4, #0x10]
	mov		r3, #0xc
	strh	r3, [r4, #0x12]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r5, r10
	ldr		r5, [r5, #0x4]
	mov		r10, r5
	ldr		r0, [sp, #0x48]
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r1, r0, r2
	ldr		r2, _0805c33c
	add		r0, r6, r2
	lsr		r3, r1, #0x10
	asr		r1, r1, #0x10
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r1, r0
	bgt		_0805c226
	cmp		r5, #0x0
	beq		_0805c226
	b		_0805bf90
_0805c226:
	ldr		r3, _0805c33c
	add		r1, r6, r3
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x5
	bgt		_0805c2e4
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r5, r10
	cmp		r5, #0x0
	beq		_0805c2e4
	mov		r0, #0xc0
	lsl		r0, r0, #0x6
	mov		r8, r0
	mov		r1, #0x1
	mov		r9, r1
	mov		r2, #0x2
	neg		r2, r2
	add		r5, r2, #0x0
_0805c24e:
	mov		r3, r10
	ldr		r7, [r3, #0x8]
	add		r0, r7, #0x0
	mov		r1, #0x1c
	mov		r2, #0x4
	mov		r3, #0x2
	bl		sub_0804f150
	lsl		r0, r4, #0x10
	asr		r4, r0, #0x10
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0xb
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	add		r1, r7, #0x0
	add		r1, #0xa4
	mov		r2, #0xc0
	lsl		r2, r2, #0x5
	str		r2, [r1, #0x0]
	add		r1, #0x4
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x7d
	mov		r3, #0x3
	strb	r3, [r0, #0x0]
	sub		r1, #0x14
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc0
	mov		r3, r8
	strh	r3, [r0, #0x0]
	mov		r3, #0x0
	sub		r0, r4, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x4
	bhi		_0805c2a4
	mov		r3, #0x1
_0805c2a4:
	add		r2, r7, #0x0
	add		r2, #0xbf
	mov		r1, r9
	and		r1, r3
	ldrb	r0, [r2, #0x0]
	and		r0, r5
	orr		r0, r1
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r1, r0, #0x0
	ldr		r0, _0805c334
	bl		sub_0800ed80
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	mov		r0, r10
	ldr		r0, [r0, #0x4]
	mov		r10, r0
	add		r0, r4, #0x1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r1, r10
	cmp		r1, #0x0
	bne		_0805c24e
_0805c2e4:
	ldr		r0, _0805c340
	mov		r1, #0xff
	bl		sub_08000700
	ldr		r1, _0805c344
	mov		r0, #0x1
	strb	r0, [r1, #0x1a]
	ldr		r2, _0805c348
	add		r0, r6, r2
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	mov		r1, #0x0
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_0805db88
	ldr		r4, _0805c34c
	ldr		r3, _0805c350
	ldr		r2, _0805c354
	ldr		r1, _0805c358
	mov		r5, #0x20
	neg		r5, r5
	add		r0, r5, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	add		sp, #0x4c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5C32E, 0x2

_0805c330:	.4byte 0x020010A0
_0805c334:	.4byte 0x0200AA18
_0805c338:	.4byte 0x00000113
_0805c33c:	.4byte 0x0000325D
_0805c340:	.4byte 0x03005918
_0805c344:	.4byte 0x02008AD4
_0805c348:	.4byte 0x00002E48
_0805c34c:	.4byte 0x0200EB24
_0805c350:	.4byte 0x0200EB1E
_0805c354:	.4byte 0x0200EB20
_0805c358:	.4byte 0x0200EB22
	thumb_func_end sub_0805b984

	thumb_func_start sub_0805c35c
sub_0805c35c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r6, r0, #0x0
	ldr		r1, _0805c470
	add		r0, r6, r1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r2, _0805c474
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	ldr		r3, _0805c478
	add		r0, r6, r3
	mov		r7, #0x0
	ldrsb	r7, [r0, r7]
	cmp		r7, #0x0
	beq		_0805c386
	b		_0805c4bc
_0805c386:
	ldr		r0, _0805c47c
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r5, #0x2
	neg		r5, r5
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _0805c480
	add		r2, r6, r1
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r3, _0805c484
	add		r2, r6, r3
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, _0805c488
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _0805c48c
	add		r2, r6, r1
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r3, _0805c490
	add		r2, r6, r3
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, _0805c494
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _0805c498
	add		r2, r6, r1
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r3, _0805c49c
	add		r2, r6, r3
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	mov		r0, #0xb1
	lsl		r0, r0, #0x4
	add		r4, r6, r0
	add		r0, r4, #0x0
	mov		r1, #0x17
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x17
	mov		r1, #0x1
	bl		sub_08009650
	mov		r1, #0x1
	mov		r4, #0x1
	ldr		r2, _0805c4a0
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	ldr		r3, _0805c4a4
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	orr		r0, r4
	strb	r0, [r1, #0x0]
	ldr		r0, _0805c4a8
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0805c43c
	add		r2, #0x5b
	add		r0, r6, r2
	strb	r7, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805c43c:
	ldr		r3, _0805c4ac
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	orr		r0, r4
	strb	r0, [r1, #0x0]
	ldr		r0, _0805c4b0
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _0805c4b4
	add		r2, r6, r1
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r3, _0805c4b8
	add		r2, r6, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	b		_0805c4da

.incbin "base.gba", 0x5C46E, 0x2

_0805c470:	.4byte 0x0000325B
_0805c474:	.4byte 0x0000325C
_0805c478:	.4byte 0x0000325D
_0805c47c:	.4byte 0x00000427
_0805c480:	.4byte 0x000004EB
_0805c484:	.4byte 0x000005AF
_0805c488:	.4byte 0x00000673
_0805c48c:	.4byte 0x000007FB
_0805c490:	.4byte 0x000008BF
_0805c494:	.4byte 0x00000117
_0805c498:	.4byte 0x000001DB
_0805c49c:	.4byte 0x00000B0B
_0805c4a0:	.4byte 0x00000B8D
_0805c4a4:	.4byte 0x00000BCF
_0805c4a8:	.4byte 0x00000C92
_0805c4ac:	.4byte 0x00000C93
_0805c4b0:	.4byte 0x00000D57
_0805c4b4:	.4byte 0x00000E1B
_0805c4b8:	.4byte 0x0000325E

_0805c4bc:
	ldr		r1, _0805c55c
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r0, #0x1
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0xb
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r1, r2
	add		r0, r6, #0x0
	bl		sub_0805f3a0
_0805c4da:
	ldr		r3, _0805c560
	add		r4, r6, r3
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x5
	bgt		_0805c500
	ldr		r0, _0805c564
	add		r3, r6, r0
	ldrb	r2, [r3, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r1, #0x0
	and		r0, r2
	strb	r0, [r3, #0x0]
	ldr		r3, _0805c568
	add		r2, r6, r3
	ldrb	r0, [r2, #0x0]
	and		r1, r0
	strb	r1, [r2, #0x0]
_0805c500:
	add		r0, r6, #0x0
	bl		sub_0805dedc
	ldr		r1, _0805c56c
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	mov		r3, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r3, r0
	ble		_0805c51a
	b		_0805c746
_0805c51a:
	mov		r2, r10
	cmp		r2, #0x0
	bne		_0805c522
	b		_0805c746
_0805c522:
	ldr		r0, _0805c560
	add		r0, r6, r0
	str		r0, [sp, #0x4]
	add		r1, #0x10
	add		r1, r6, r1
	str		r1, [sp, #0x8]
	ldr		r2, _0805c55c
	add		r2, r6, r2
	str		r2, [sp, #0xc]
_0805c534:
	ldr		r0, [sp, #0x4]
	mov		r4, #0x0
	ldrsb	r4, [r0, r4]
	ldr		r1, [sp, #0x8]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	sub		r2, r4, r0
	lsl		r3, r3, #0x10
	asr		r1, r3, #0x10
	sub		r2, r2, r1
	sub		r0, #0x1
	add		r1, r0, r1
	sub		r0, r4, #0x1
	str		r3, [sp, #0x10]
	cmp		r1, r0
	ble		_0805c570
	add		r0, r2, r4
	lsl		r0, r0, #0x10
	b		_0805c57c

.incbin "base.gba", 0x5C55A, 0x2

_0805c55c:	.4byte 0x00003259
_0805c560:	.4byte 0x0000325D
_0805c564:	.4byte 0x00000983
_0805c568:	.4byte 0x00000A47
_0805c56c:	.4byte 0x00003248

_0805c570:
	cmp		r1, #0x0
	bge		_0805c57a
	sub		r0, r2, r4
	lsl		r0, r0, #0x10
	b		_0805c57c
_0805c57a:
	lsl		r0, r2, #0x10
_0805c57c:
	lsr		r2, r0, #0x10
	lsl		r0, r2, #0x3
	add		r0, r0, r2
	lsl		r0, r0, #0x2
	sub		r0, r0, r2
	lsl		r0, r0, #0x3
	ldr		r2, _0805c860
	add		r0, r0, r2
	str		r0, [sp, #0x0]
	mov		r3, r10
	ldr		r4, [r3, #0x8]
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x0]
	bl		sub_0805f2bc
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r4, #0x0
	mov		r1, #0x1c
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r0, [sp, #0x10]
	asr		r0, r0, #0x10
	mov		r8, r0
	lsl		r0, r0, #0x1
	add		r0, r8
	lsl		r0, r0, #0xb
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r1, r1, r0
	mov		r9, r1
	add		r0, r4, #0x0
	add		r0, #0xa4
	mov		r2, #0xc0
	lsl		r2, r2, #0x5
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	sub		r0, #0x2b
	mov		r3, #0x3
	strb	r3, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r5, #0x0
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xc0
	mov		r3, #0xc0
	lsl		r3, r3, #0x6
	strh	r3, [r0, #0x0]
	mov		r3, #0x0
	mov		r0, r8
	sub		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	cmp		r7, #0x4
	bhi		_0805c5fa
	mov		r3, #0x1
_0805c5fa:
	add		r2, r4, #0x0
	add		r2, #0xbf
	mov		r5, #0x1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	add		r4, #0xc4
	add		r0, r4, #0x0
	mov		r1, #0x1c
	mov		r2, #0x3
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r4, #0x0
	add		r0, #0xa4
	mov		r1, #0xc0
	lsl		r1, r1, #0x5
	str		r1, [r0, #0x0]
	add		r0, #0x4
	mov		r2, r9
	str		r2, [r0, #0x0]
	sub		r0, #0x2b
	mov		r3, #0x3
	strb	r3, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xc0
	mov		r3, #0xc4
	lsl		r3, r3, #0x6
	strh	r3, [r0, #0x0]
	mov		r0, #0x0
	cmp		r7, #0x4
	bhi		_0805c64e
	mov		r0, #0x1
_0805c64e:
	add		r3, r4, #0x0
	add		r3, #0xbf
	add		r1, r5, #0x0
	and		r1, r0
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	add		r4, #0xc4
	ldr		r1, [sp, #0xc]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	add		r0, #0x1
	mov		r2, #0x0
	cmp		r8, r0
	beq		_0805c674
	mov		r2, #0x3
_0805c674:
	add		r0, r4, #0x0
	mov		r1, #0x1b
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r4, #0x0
	add		r0, #0xa4
	mov		r2, #0x88
	lsl		r2, r2, #0x8
	str		r2, [r0, #0x0]
	add		r0, #0x4
	mov		r3, r9
	str		r3, [r0, #0x0]
	sub		r0, #0x2b
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	add		r0, #0x43
	mov		r2, #0xc4
	lsl		r2, r2, #0x6
	strh	r2, [r0, #0x0]
	mov		r0, #0x0
	cmp		r7, #0x4
	bhi		_0805c6a4
	mov		r0, #0x1
_0805c6a4:
	add		r2, r4, #0x0
	add		r2, #0xbf
	and		r5, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	orr		r0, r5
	strb	r0, [r2, #0x0]
	mov		r0, r8
	add		r0, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r1, r0, #0x0
	ldr		r0, _0805c864
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r3, #0x18
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	add		r4, #0x18
	ldr		r1, [sp, #0x0]
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x8
	cmp		r0, #0x0
	beq		_0805c6f8
	ldr		r3, [sp, #0x0]
	sub		r2, #0x1
	add		r0, r3, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805c6f8
	mov		r1, #0x1
_0805c6f8:
	strh	r1, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x18
	ldr		r1, [sp, #0x0]
	add		r1, #0x4
	mov		r2, #0xa2
	bl		sub_0808c818
	add		r1, r4, #0x0
	add		r1, #0x1a
	ldrb	r2, [r4, #0x18]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	mov		r3, #0x2
	strh	r3, [r4, #0x10]
	mov		r0, #0xc
	strh	r0, [r4, #0x12]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r1, r10
	ldr		r1, [r1, #0x4]
	mov		r10, r1
	ldr		r2, [sp, #0x10]
	mov		r3, #0x80
	lsl		r3, r3, #0x9
	add		r1, r2, r3
	lsr		r3, r1, #0x10
	asr		r1, r1, #0x10
	ldr		r2, [sp, #0x4]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	bgt		_0805c746
	mov		r0, r10
	cmp		r0, #0x0
	beq		_0805c746
	b		_0805c534
_0805c746:
	ldr		r2, _0805c868
	add		r1, r6, r2
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x5
	bgt		_0805c82c
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	mov		r3, r10
	cmp		r3, #0x0
	beq		_0805c82c
	mov		r0, #0xc0
	lsl		r0, r0, #0x6
	mov		r8, r0
	mov		r1, #0x1
	mov		r9, r1
	mov		r7, #0x2
	neg		r7, r7
_0805c76c:
	mov		r2, r10
	ldr		r4, [r2, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0x1c
	mov		r2, #0x4
	mov		r3, #0x2
	bl		sub_0804f150
	lsl		r0, r5, #0x10
	asr		r5, r0, #0x10
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	lsl		r0, r0, #0xb
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	add		r0, r0, r3
	add		r1, r4, #0x0
	add		r1, #0xa4
	mov		r2, #0xc0
	lsl		r2, r2, #0x5
	str		r2, [r1, #0x0]
	add		r1, #0x4
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x7d
	mov		r3, #0x3
	strb	r3, [r0, #0x0]
	sub		r1, #0x14
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xc0
	mov		r3, r8
	strh	r3, [r0, #0x0]
	mov		r2, #0x0
	sub		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x4
	bhi		_0805c7c2
	mov		r2, #0x1
_0805c7c2:
	add		r3, r4, #0x0
	add		r3, #0xbf
	mov		r1, r9
	and		r1, r2
	ldrb	r2, [r3, #0x0]
	add		r0, r7, #0x0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	add		r4, #0xc4
	add		r2, r4, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	add		r4, #0xc4
	add		r2, r4, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, _0805c86c
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	add		r0, r5, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r1, r0, #0x0
	ldr		r0, _0805c864
	bl		sub_0800ed80
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	mov		r0, r10
	ldr		r0, [r0, #0x4]
	mov		r10, r0
	add		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	mov		r1, r10
	cmp		r1, #0x0
	bne		_0805c76c
_0805c82c:
	ldr		r0, _0805c870
	mov		r1, #0xff
	bl		sub_08000700
	ldr		r1, _0805c874
	mov		r0, #0x1
	strb	r0, [r1, #0x1a]
	ldr		r2, _0805c878
	add		r0, r6, r2
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	mov		r1, #0x0
	bl		sub_0808c828
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_0805db88
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805c860:	.4byte 0x020010A0
_0805c864:	.4byte 0x0200AA18
_0805c868:	.4byte 0x0000325D
_0805c86c:	.4byte 0x00000183
_0805c870:	.4byte 0x03005918
_0805c874:	.4byte 0x02008AD4
_0805c878:	.4byte 0x00002E48
	thumb_func_end sub_0805c35c

	thumb_func_start sub_0805c87c
sub_0805c87c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r6, r0, #0x0
	ldr		r0, _0805c8d8
	add		r1, r6, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bne		_0805c8e8
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805c8dc
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	ldr		r0, _0805c8e0
	ldr		r0, [r0, #0x0]
	ldr		r1, _0805c8e4
	ldr		r1, [r1, #0x0]
	bl		sub_0808b7e0
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_0805c8c0
	b		_0805cbce
_0805c8c0:
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
	b		_0805cbce

.incbin "base.gba", 0x5C8D6, 0x2

_0805c8d8:	.4byte 0x0000325D
_0805c8dc:	.4byte 0x0200BAFC
_0805c8e0:	.4byte 0x0200BF08
_0805c8e4:	.4byte 0x0200D584

_0805c8e8:
	add		r7, r6, #0x0
	add		r7, #0x58
	mov		r3, #0x0
	ldrsb	r3, [r1, r3]
	ldr		r1, _0805c918
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	sub		r0, r3, r2
	ldr		r4, _0805c91c
	add		r1, r6, r4
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	sub		r0, r0, r1
	sub		r4, r0, #0x1
	add		r2, r2, r1
	sub		r0, r3, #0x1
	cmp		r2, r0
	ble		_0805c920
	add		r0, r4, r3
	lsl		r0, r0, #0x10
	b		_0805c922

.incbin "base.gba", 0x5C916, 0x2

_0805c918:	.4byte 0x00003258
_0805c91c:	.4byte 0x00003259

_0805c920:
	lsl		r0, r4, #0x10
_0805c922:
	lsr		r0, r0, #0x10
	add		r5, r0, #0x0
	ldr		r2, _0805c980
	ldr		r3, [r2, #0x0]
	lsl		r0, r5, #0x10
	mov		r8, r0
	asr		r1, r0, #0x10
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r1, r0, r3
	mov		r0, #0xc1
	lsl		r0, r0, #0x3
	add		r4, r1, r0
	ldrb	r0, [r4, #0x0]
	mov		r10, r2
	cmp		r0, #0x0
	bne		_0805c9f0
	ldr		r2, _0805c984
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805c988
	add		r4, r0, #0x0
	add		r4, #0xc8
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x1
	mov		r1, #0x1
	add		r2, r7, #0x0
	add		r2, #0x7d
	strb	r0, [r2, #0x0]
	add		r2, #0x42
	ldrb	r0, [r2, #0x0]
	orr		r0, r1
	b		_0805c994

.incbin "base.gba", 0x5C97E, 0x2

_0805c980:	.4byte 0x080d3654
_0805c984:	.4byte 0x00000602

_0805c988:
	add		r2, r7, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
_0805c994:
	strb	r0, [r2, #0x0]
	add		r7, #0xc4
	mov		r4, r10
	ldr		r1, [r4, #0x0]
	lsl		r5, r5, #0x10
	mov		r8, r5
	asr		r0, r5, #0x10
	lsl		r4, r0, #0x3
	add		r4, r4, r0
	lsl		r4, r4, #0x2
	sub		r4, r4, r0
	lsl		r4, r4, #0x3
	add		r4, r4, r1
	ldr		r0, _0805c9ec
	add		r4, r4, r0
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x1
	mov		r9, r1
	mov		r5, #0x1
	add		r1, r5, #0x0
	and		r1, r0
	add		r1, #0x12
	add		r0, r7, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldrb	r1, [r4, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	add		r0, #0x12
	mov		r1, #0x1
	bl		sub_08009650
	add		r0, r7, #0x0
	add		r0, #0x7d
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	mov		r2, r9
	orr		r0, r2
	b		_0805ca38

.incbin "base.gba", 0x5C9EA, 0x2

_0805c9ec:	.4byte 0x0000053D

_0805c9f0:
	ldrb	r1, [r4, #0x0]
	add		r1, #0x63
	add		r0, r7, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldrb	r0, [r4, #0x0]
	add		r0, #0x63
	mov		r1, #0x1
	bl		sub_08009650
	mov		r4, #0x1
	mov		r5, #0x1
	add		r0, r7, #0x0
	add		r0, #0x7d
	strb	r4, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	orr		r0, r5
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	add		r0, r7, #0x0
	mov		r1, #0x1f
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r7, #0x0
	add		r0, #0x7d
	strb	r4, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	orr		r0, r5
_0805ca38:
	strb	r0, [r1, #0x0]
	mov		r0, r8
	ldr		r4, _0805ca80
	add		r7, r6, r4
	mov		r1, r10
	ldr		r2, [r1, #0x0]
	asr		r1, r0, #0x10
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldr		r2, _0805ca84
	add		r0, r0, r2
	ldrb	r4, [r0, #0x0]
	cmp		r4, #0x63
	bhi		_0805cb30
	ldr		r0, _0805ca88
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	mov		r1, #0xb1
	lsl		r1, r1, #0x4
	add		r7, r6, r1
	cmp		r4, #0x3c
	bhi		_0805ca8c
	mov		r1, #0x17
	cmp		r4, #0x1e
	bls		_0805ca8e
	mov		r1, #0x18
	b		_0805ca8e

.incbin "base.gba", 0x5CA7E, 0x2

_0805ca80:	.4byte 0x00000A4C
_0805ca84:	.4byte 0x00000605
_0805ca88:	.4byte 0x00000B0B

_0805ca8c:
	mov		r1, #0x19
_0805ca8e:
	add		r0, r7, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r5, #0x1
	add		r0, r7, #0x0
	add		r0, #0x7d
	strb	r5, [r0, #0x0]
	mov		r0, #0x17
	mov		r1, #0x1
	bl		sub_08009650
	add		r7, #0xc4
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_080bbeac
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r7, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805cacc
	add		r0, r7, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805cacc:
	add		r7, #0xc4
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_080bbe34
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r7, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805caf0
	add		r0, r7, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805caf0:
	mov		r0, #0x0
	cmp		r4, #0x9
	bls		_0805caf8
	mov		r0, #0x1
_0805caf8:
	add		r4, r7, #0x0
	add		r4, #0xbf
	add		r2, r5, #0x0
	and		r2, r0
	ldrb	r3, [r4, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r1, #0x0
	and		r0, r3
	orr		r0, r2
	strb	r0, [r4, #0x0]
	ldr		r4, _0805cb28
	add		r2, r7, r4
	ldrb	r0, [r2, #0x0]
	and		r1, r0
	strb	r1, [r2, #0x0]
	ldr		r0, _0805cb2c
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3
	neg		r0, r0
	and		r0, r1
	b		_0805cbcc

.incbin "base.gba", 0x5CB26, 0x2

_0805cb28:	.4byte 0x00000183
_0805cb2c:	.4byte 0x0000325E

_0805cb30:
	add		r0, r7, #0x0
	mov		r1, #0x1a
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r4, #0x1
	mov		r5, #0x1
	ldr		r1, _0805cbe0
	add		r0, r6, r1
	mov		r2, #0x0
	mov		r8, r2
	strb	r4, [r0, #0x0]
	ldr		r0, _0805cbe4
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	orr		r0, r5
	strb	r0, [r1, #0x0]
	mov		r1, #0xb1
	lsl		r1, r1, #0x4
	add		r7, r6, r1
	add		r0, r7, #0x0
	mov		r1, #0x1a
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r2, _0805cbe8
	add		r0, r6, r2
	strb	r4, [r0, #0x0]
	mov		r0, #0x18
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r4, _0805cbec
	add		r1, r6, r4
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0805cb8c
	ldr		r2, _0805cbf0
	add		r0, r6, r2
	mov		r4, r8
	strb	r4, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805cb8c:
	ldr		r0, _0805cbf4
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0805cba6
	ldr		r2, _0805cbf8
	add		r0, r6, r2
	mov		r4, r8
	strb	r4, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805cba6:
	ldr		r0, _0805cbfc
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	orr		r0, r5
	strb	r0, [r1, #0x0]
	ldr		r2, _0805cc00
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	orr		r0, r5
	strb	r0, [r1, #0x0]
	ldr		r4, _0805cc04
	add		r0, r6, r4
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r4, #0x8
	add		r2, r6, r4
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x2
	orr		r0, r1
_0805cbcc:
	strb	r0, [r2, #0x0]
_0805cbce:
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5CBDE, 0x2

_0805cbe0:	.4byte 0x00000AC9
_0805cbe4:	.4byte 0x00000B0B
_0805cbe8:	.4byte 0x00000B8D
_0805cbec:	.4byte 0x00000C92
_0805cbf0:	.4byte 0x00000BE8
_0805cbf4:	.4byte 0x00000D56
_0805cbf8:	.4byte 0x00000CAC
_0805cbfc:	.4byte 0x00000D57
_0805cc00:	.4byte 0x00000E1B
_0805cc04:	.4byte 0x00003256
	thumb_func_end sub_0805c87c

	thumb_func_start sub_0805cc08
sub_0805cc08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r6, r0, #0x0
	add		r7, r6, #0x0
	add		r7, #0x58
	mov		r4, #0x0
	mov		r0, #0x2
	neg		r0, r0
	add		r5, r0, #0x0
_0805cc22:
	add		r0, r7, #0x0
	add		r0, #0x14
	bl		sub_0808e1ac
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	and		r0, r5
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	lsl		r0, r4, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	ble		_0805cc22
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805d030
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	add		r0, r6, #0x0
	add		r0, #0xfc
	mov		r2, #0xe0
	lsl		r2, r2, #0x6
	str		r2, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	mov		r5, #0xa0
	lsl		r5, r5, #0x7
	str		r5, [r0, #0x0]
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	strh	r2, [r0, #0x0]
	add		r3, #0xc0
	add		r0, r6, r3
	mov		r5, #0xe0
	lsl		r5, r5, #0x6
	str		r5, [r0, #0x0]
	add		r1, #0xac
	add		r0, r6, r1
	mov		r2, #0xa0
	lsl		r2, r2, #0x7
	str		r2, [r0, #0x0]
	add		r3, #0x1c
	add		r1, r6, r3
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	mov		r5, #0xf0
	lsl		r5, r5, #0x1
	add		r7, r6, r5
	add		r0, r7, #0x0
	mov		r1, #0xa
	mov		r2, #0xa
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	mov		r2, #0xa1
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xa2
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	mov		r5, #0x9c
	lsl		r5, r5, #0x7
	str		r5, [r0, #0x0]
	mov		r0, #0x1
	mov		r8, r0
	mov		r1, #0x1
	mov		r10, r1
	sub		r2, #0x27
	add		r0, r6, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	mov		r5, #0xa8
	lsl		r5, r5, #0x2
	add		r0, r6, r5
	mov		r5, #0x88
	lsl		r5, r5, #0x5
	strh	r5, [r0, #0x0]
	mov		r2, #0x0
	ldr		r0, _0805d034
	add		r4, r6, r0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x1
	ble		_0805ccf2
	mov		r2, #0x1
_0805ccf2:
	ldr		r1, _0805d038
	add		r3, r6, r1
	mov		r1, r8
	and		r1, r2
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	mov		r9, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	mov		r1, #0xa9
	lsl		r1, r1, #0x2
	add		r7, r6, r1
	add		r0, r7, #0x0
	mov		r1, #0xa
	mov		r2, #0x12
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xe2
	lsl		r1, r1, #0x8
	mov		r2, #0xd2
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xd3
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	mov		r1, #0x9c
	lsl		r1, r1, #0x7
	str		r1, [r0, #0x0]
	sub		r2, #0x27
	add		r0, r6, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	mov		r1, #0xd9
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	strh	r5, [r0, #0x0]
	mov		r2, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x1
	ble		_0805cd4e
	mov		r2, #0x1
_0805cd4e:
	ldr		r0, _0805d03c
	add		r3, r6, r0
	mov		r1, r8
	and		r1, r2
	ldrb	r2, [r3, #0x0]
	mov		r0, r9
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	mov		r1, #0xda
	lsl		r1, r1, #0x2
	add		r7, r6, r1
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc9
	lsl		r1, r1, #0x8
	mov		r2, #0x98
	lsl		r2, r2, #0x8
	ldr		r3, _0805d040
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	mov		r1, #0x82
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0805d044
	add		r0, r6, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x2
	add		r1, r6, r0
	ldrh	r0, [r1, #0x0]
	mov		r4, #0x4
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	strh	r5, [r0, #0x0]
	add		r2, #0x42
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, r10
	orr		r0, r3
	strb	r0, [r1, #0x0]
	ldr		r5, _0805d048
	add		r7, r6, r5
	add		r0, r7, #0x0
	mov		r1, #0x1c
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xa1
	lsl		r1, r1, #0x8
	mov		r2, #0x8c
	lsl		r2, r2, #0x6
	mov		r3, #0x9a
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	add		r5, #0xa8
	add		r0, r6, r5
	str		r2, [r0, #0x0]
	mov		r5, #0x2
	ldr		r1, _0805d04c
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	mov		r2, #0x98
	lsl		r2, r2, #0x3
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		r3, #0x1b
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x5
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0x1f
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r1, _0805d050
	add		r0, r6, r1
	mov		r2, #0xe0
	lsl		r2, r2, #0x6
	str		r2, [r0, #0x0]
	mov		r3, #0xb3
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	mov		r1, #0xa0
	lsl		r1, r1, #0x7
	str		r1, [r0, #0x0]
	ldr		r2, _0805d054
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	sub		r3, #0x14
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r0, #0xb6
	lsl		r0, r0, #0x3
	add		r1, r6, r0
	mov		r0, #0xa0
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
	add		r2, #0x42
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, r10
	orr		r0, r3
	strb	r0, [r1, #0x0]
	ldr		r0, _0805d058
	add		r7, r6, r0
	add		r0, r7, #0x0
	mov		r1, #0x24
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r2, #0x88
	lsl		r2, r2, #0x7
	mov		r3, #0xcb
	lsl		r3, r3, #0x3
	add		r1, r6, r3
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r1, _0805d05c
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0805d060
	add		r0, r6, r2
	mov		r3, r8
	strb	r3, [r0, #0x0]
	mov		r0, #0xc9
	lsl		r0, r0, #0x3
	add		r1, r6, r0
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r1, _0805d064
	add		r0, r6, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	strh	r2, [r0, #0x0]
	ldr		r3, _0805d068
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x5
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0x23
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xf0
	lsl		r1, r1, #0x7
	mov		r2, #0xe0
	lsl		r2, r2, #0x7
	ldr		r3, _0805d06c
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xe4
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0805d070
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	sub		r3, #0x10
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r0, _0805d074
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r1, #0xd2
	lsl		r1, r1, #0x7
	mov		r2, #0xb6
	lsl		r2, r2, #0x7
	add		r3, #0xd4
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	ldr		r1, _0805d078
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	sub		r3, #0x27
	add		r0, r6, r3
	strb	r5, [r0, #0x0]
	mov		r0, #0xfa
	lsl		r0, r0, #0x3
	add		r1, r6, r0
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		r3, #0x42
	add		r1, r6, r3
	ldrb	r0, [r1, #0x0]
	mov		r3, r10
	orr		r0, r3
	strb	r0, [r1, #0x0]
	mov		r0, #0x91
	lsl		r0, r0, #0x8
	mov		r8, r0
	ldr		r1, _0805d07c
	add		r0, r6, r1
	mov		r3, r8
	str		r3, [r0, #0x0]
	add		r1, #0x4
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0805d080
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	ldr		r3, _0805d084
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r0, _0805d088
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x30
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0xac
	lsl		r0, r0, #0x6
	mov		r9, r0
	ldr		r1, _0805d08c
	add		r0, r6, r1
	mov		r2, r8
	str		r2, [r0, #0x0]
	ldr		r3, _0805d090
	add		r0, r6, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	ldr		r2, _0805d094
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	sub		r3, #0x14
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r0, _0805d098
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x30
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x9b
	lsl		r1, r1, #0x8
	ldr		r2, _0805d09c
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xa3
	lsl		r3, r3, #0x4
	add		r0, r6, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	sub		r2, #0x27
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	sub		r3, #0x14
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r0, _0805d0a0
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x30
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xb9
	lsl		r1, r1, #0x8
	mov		r2, #0xaf
	lsl		r2, r2, #0x4
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805d0a4
	add		r0, r6, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	sub		r2, #0x27
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	sub		r3, #0x14
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r0, _0805d0a8
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x30
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc3
	lsl		r1, r1, #0x8
	ldr		r2, _0805d0ac
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805d0b0
	add		r0, r6, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	sub		r2, #0x27
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	sub		r3, #0x14
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	b		_0805d0b4

.incbin "base.gba", 0x5D02E, 0x2

_0805d030:	.4byte 0x0200BB00
_0805d034:	.4byte 0x0000325D
_0805d038:	.4byte 0x0000029F
_0805d03c:	.4byte 0x00000363
_0805d040:	.4byte 0x0000040C
_0805d044:	.4byte 0x000003E5
_0805d048:	.4byte 0x0000042C
_0805d04c:	.4byte 0x000004A9
_0805d050:	.4byte 0x00000594
_0805d054:	.4byte 0x0000056D
_0805d058:	.4byte 0x000005B4
_0805d05c:	.4byte 0x0000065C
_0805d060:	.4byte 0x00000631
_0805d064:	.4byte 0x00000674
_0805d068:	.4byte 0x00000673
_0805d06c:	.4byte 0x0000071C
_0805d070:	.4byte 0x000006F5
_0805d074:	.4byte 0x00000737
_0805d078:	.4byte 0x000007E4
_0805d07c:	.4byte 0x000008A4
_0805d080:	.4byte 0x0000087D
_0805d084:	.4byte 0x00000894
_0805d088:	.4byte 0x000008BF
_0805d08c:	.4byte 0x00000968
_0805d090:	.4byte 0x0000096C
_0805d094:	.4byte 0x00000941
_0805d098:	.4byte 0x00000983
_0805d09c:	.4byte 0x00000A2C
_0805d0a0:	.4byte 0x00000A47
_0805d0a4:	.4byte 0x00000AF4
_0805d0a8:	.4byte 0x00000B0B
_0805d0ac:	.4byte 0x00000BB4
_0805d0b0:	.4byte 0x00000BB8

_0805d0b4:
	ldr		r0, _0805d124
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x30
	add		r7, r6, r3
	add		r0, r7, #0x0
	mov		r1, #0xd
	mov		r2, #0xb
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xaa
	lsl		r1, r1, #0x8
	ldr		r2, _0805d128
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805d12c
	add		r0, r6, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	sub		r2, #0x27
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	sub		r3, #0x14
	add		r1, r6, r3
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldr		r5, _0805d130
	add		r1, r6, r5
	ldrb	r0, [r1, #0x0]
	mov		r2, r10
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r4, _0805d134
	ldr		r3, _0805d138
	ldr		r2, _0805d13c
	ldr		r1, _0805d140
	mov		r5, #0x20
	neg		r5, r5
	add		r0, r5, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805d124:	.4byte 0x00000BCF
_0805d128:	.4byte 0x00000C78
_0805d12c:	.4byte 0x00000C7C
_0805d130:	.4byte 0x00000C93
_0805d134:	.4byte 0x0200EB24
_0805d138:	.4byte 0x0200EB1E
_0805d13c:	.4byte 0x0200EB20
_0805d140:	.4byte 0x0200EB22
	thumb_func_end sub_0805cc08

	thumb_func_start sub_0805d144
sub_0805d144:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x104
	mov		r9, r0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	mov		r7, r9
	add		r7, #0x58
	ldr		r0, _0805d188
	add		r0, r9
	mov		r3, #0x0
	ldrsb	r3, [r0, r3]
	ldr		r0, _0805d18c
	add		r0, r9
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	sub		r0, r3, r2
	ldr		r1, _0805d190
	add		r1, r9
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	sub		r0, r0, r1
	sub		r4, r0, #0x1
	add		r2, r2, r1
	sub		r0, r3, #0x1
	cmp		r2, r0
	ble		_0805d194
	add		r0, r4, r3
	lsl		r0, r0, #0x10
	b		_0805d196

_0805d188:	.4byte 0x0000325D
_0805d18c:	.4byte 0x00003258
_0805d190:	.4byte 0x00003259

_0805d194:
	lsl		r0, r4, #0x10
_0805d196:
	lsr		r0, r0, #0x10
	add		r5, r0, #0x0
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	ldr		r4, _0805d270
	add		r0, r0, r4
	str		r0, [sp, #0x100]
	cmp		r6, #0x0
	beq		_0805d1de
	ldr		r2, _0805d274
	add		r1, r0, r2
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0805d1de
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0805d1d6
	ldr		r0, _0805d278
	ldr		r1, _0805d27c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0805d1d6:
	ldr		r3, _0805d280
	add		r0, r4, r3
	bl		sub_08002fd8
_0805d1de:
	ldr		r0, [sp, #0x100]
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r4, r0, r1
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0805d1ee
	b		_0805d31c
_0805d1ee:
	ldr		r2, _0805d284
	lsl		r5, r5, #0x10
	asr		r1, r5, #0x10
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldr		r2, _0805d288
	add		r0, r0, r2
	ldrb	r4, [r0, #0x0]
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805d28c
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	ldr		r0, _0805d290
	ldr		r0, [r0, #0x0]
	ldr		r1, _0805d294
	mov		r8, r4
	lsl		r2, r4, #0x2
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	bl		sub_0808b7e0
	add		r4, r0, #0x0
	mov		r10, r5
	cmp		r4, #0x0
	beq		_0805d24a
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
_0805d24a:
	mov		r3, r8
	cmp		r3, #0x0
	beq		_0805d298
	add		r0, r7, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x1
	mov		r1, #0x1
	add		r2, r7, #0x0
	add		r2, #0x7d
	strb	r0, [r2, #0x0]
	add		r2, #0x42
	ldrb	r0, [r2, #0x0]
	orr		r0, r1
	b		_0805d2a4

.incbin "base.gba", 0x5D26E, 0x2

_0805d270:	.4byte 0x020010A0
_0805d274:	.4byte 0x00000115
_0805d278:	.4byte 0x080d3638 @ m_aioi/maFriends.cpp
_0805d27c:	.4byte 0x00000566
_0805d280:	.4byte 0xFFFFFB0C
_0805d284:	.4byte 0x02000BAC
_0805d288:	.4byte 0x00000602
_0805d28c:	.4byte 0x0200BAFC
_0805d290:	.4byte 0x0200BF08
_0805d294:	.4byte 0x0200D584

_0805d298:
	add		r2, r7, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
_0805d2a4:
	strb	r0, [r2, #0x0]
	add		r7, #0xc4
	ldr		r1, _0805d314
	mov		r2, r10
	asr		r0, r2, #0x10
	lsl		r4, r0, #0x3
	add		r4, r4, r0
	lsl		r4, r4, #0x2
	sub		r4, r4, r0
	lsl		r4, r4, #0x3
	add		r4, r4, r1
	ldr		r3, _0805d318
	add		r4, r4, r3
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x1
	mov		r8, r1
	mov		r5, #0x1
	add		r1, r5, #0x0
	and		r1, r0
	add		r1, #0x12
	add		r0, r7, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldrb	r1, [r4, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	add		r0, #0x12
	mov		r1, #0x1
	bl		sub_08009650
	add		r0, r7, #0x0
	add		r0, #0x7d
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r7, #0x9e
	lsl		r7, r7, #0x3
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0x1f
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x1f
	mov		r1, #0x1
	bl		sub_08009650
	b		_0805d3ae

.incbin "base.gba", 0x5D312, 0x2

_0805d314:	.4byte 0x02000BAC
_0805d318:	.4byte 0x0000053D

_0805d31c:
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805d464
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	ldr		r0, _0805d468
	ldr		r0, [r0, #0x0]
	ldr		r1, _0805d46c
	ldrb	r2, [r4, #0x0]
	lsl		r2, r2, #0x2
	mov		r3, #0xa0
	lsl		r3, r3, #0x1
	add		r2, r2, r3
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	bl		sub_0808b7e0
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0805d364
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
_0805d364:
	add		r0, r7, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x1
	mov		r1, #0x1
	add		r2, r7, #0x0
	add		r2, #0x7d
	strb	r0, [r2, #0x0]
	add		r2, #0x42
	ldrb	r0, [r2, #0x0]
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, _0805d470
	add		r2, r7, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	mov		r7, #0x9e
	lsl		r7, r7, #0x3
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0x20
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x20
	mov		r1, #0x1
	bl		sub_08009650
	lsl		r5, r5, #0x10
	mov		r10, r5
_0805d3ae:
	mov		r5, #0xc
	ldr		r4, [sp, #0x100]
	add		r4, #0x47
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0xc
	bhi		_0805d3e0
	ldr		r2, _0805d474
	mov		r1, r10
	asr		r0, r1, #0x10
	lsl		r1, r0, #0x3
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	sub		r1, r1, r0
	lsl		r1, r1, #0x3
	add		r1, r1, r2
	ldr		r2, _0805d478
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	ldr		r3, _0805d47c
	add		r1, r1, r3
	ldrb	r1, [r1, #0x0]
	bl		sub_08016ad8
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
_0805d3e0:
	ldr		r7, _0805d480
	add		r7, r9
	add		r1, r5, #0x0
	add		r1, #0x27
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r0, r7, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r6, _0805d484
	ldr		r0, [r6, #0x0]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	add		r0, #0x27
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r2, _0805d474
	mov		r0, r10
	asr		r1, r0, #0x10
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldr		r1, _0805d488
	add		r0, r0, r1
	ldrb	r5, [r0, #0x0]
	cmp		r5, #0x2
	bls		_0805d424
	mov		r5, #0x2
_0805d424:
	mov		r7, #0x80
	lsl		r7, r7, #0x4
	add		r7, r9
	add		r1, r5, #0x0
	add		r1, #0x39
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r0, r7, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r0, [r6, #0x0]
	add		r0, r5, r0
	ldrb	r0, [r0, #0x12]
	add		r0, #0x27
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r0, _0805d48c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0805d490
	ldr		r0, [sp, #0x100]
	add		r0, #0x48
	ldrb	r0, [r0, #0x0]
	mov		r2, sp
	add		r2, #0x2
	strb	r0, [r2, #0x0]
	ldrb	r0, [r4, #0x0]
	b		_0805d49e

_0805d464:	.4byte 0x0200BAFC
_0805d468:	.4byte 0x0200BF08
_0805d46c:	.4byte 0x0200D584
_0805d470:	.4byte 0x00000183
_0805d474:	.4byte 0x02000BAC
_0805d478:	.4byte 0x0000053B
_0805d47c:	.4byte 0x0000053C
_0805d480:	.4byte 0x0000073C
_0805d484:	.4byte 0x0200D580
_0805d488:	.4byte 0x0000053D
_0805d48c:	.4byte 0x00000836

_0805d490:
	ldrb	r0, [r4, #0x0]
	mov		r2, sp
	add		r2, #0x2
	strb	r0, [r2, #0x0]
	ldr		r0, [sp, #0x100]
	add		r0, #0x48
	ldrb	r0, [r0, #0x0]
_0805d49e:
	mov		r1, sp
	add		r1, #0x3
	strb	r0, [r1, #0x0]
	add		r6, r2, #0x0
	add		r5, r1, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x0
	ble		_0805d4f8
	mov		r4, sp
	mov		r1, #0xa
	bl		sub_080bbcac
	strb	r0, [r4, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	mov		r1, sp
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	ldrb	r2, [r5, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r8, r1
	cmp		r0, #0x9
	bgt		_0805d4de
	strb	r2, [r6, #0x0]
	mov		r0, #0xff
	strb	r0, [r5, #0x0]
	b		_0805d50e
_0805d4de:
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0xa
	bl		sub_080bbcac
	strb	r0, [r6, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	strb	r0, [r5, #0x0]
	b		_0805d50e
_0805d4f8:
	mov		r2, #0x0
	mov		r0, #0xa
	strb	r0, [r6, #0x0]
	mov		r1, sp
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, sp
	strb	r2, [r0, #0x0]
	mov		r0, #0xff
	strb	r0, [r5, #0x0]
	mov		r8, r1
_0805d50e:
	add		r7, #0xc4
	mov		r0, sp
	ldrb	r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805d52a
	add		r0, r7, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805d52a:
	mov		r3, #0x0
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	ble		_0805d53a
	mov		r3, #0x1
_0805d53a:
	add		r2, r7, #0x0
	add		r2, #0xbf
	ldrb	r0, [r2, #0x0]
	mov		r4, #0x2
	neg		r4, r4
	add		r1, r4, #0x0
	and		r1, r0
	orr		r1, r3
	strb	r1, [r2, #0x0]
	add		r7, #0xc4
	mov		r2, r8
	ldrb	r1, [r2, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805d568
	add		r0, r7, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805d568:
	add		r7, #0xc4
	ldrb	r1, [r6, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805d582
	add		r0, r7, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805d582:
	add		r7, #0xc4
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	blt		_0805d5b2
	ldrb	r1, [r5, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805d5a4
	add		r0, r7, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805d5a4:
	add		r0, r7, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x0]
	b		_0805d5be
_0805d5b2:
	add		r2, r7, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
_0805d5be:
	ldr		r3, [sp, #0x100]
	ldr		r1, _0805d6cc
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	add		r0, #0xa0
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r4, _0805d6d0
	ldr		r0, [r4, #0x0]
	mov		r1, #0x0
	bl		sub_0800ed80
	add		r7, r0, #0x0
	ldr		r1, [r7, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	add		r6, r7, #0x0
	add		r6, #0x18
	ldr		r3, [sp, #0x100]
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x8
	add		r7, r4, #0x0
	cmp		r0, #0x0
	beq		_0805d60a
	ldr		r2, _0805d6d4
	add		r0, r3, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805d60a
	mov		r1, #0x1
_0805d60a:
	mov		r4, #0x0
	strh	r1, [r6, #0x14]
	add		r0, r6, #0x0
	add		r0, #0x18
	ldr		r1, [sp, #0x100]
	add		r1, #0x4
	mov		r2, #0xa2
	bl		sub_0808c818
	add		r5, r6, #0x0
	add		r5, #0x1a
	ldrb	r0, [r6, #0x18]
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	mov		r3, #0x4
	mov		r8, r3
	mov		r0, #0x13
	mov		r1, r8
	strh	r1, [r6, #0x10]
	strh	r0, [r6, #0x12]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	ldr		r0, [r7, #0x0]
	mov		r1, #0x1
	bl		sub_0800ed80
	add		r7, r0, #0x0
	ldr		r1, [r7, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldr		r0, [sp, #0x100]
	add		r0, #0x4c
	add		r5, sp, #0x3c
	add		r1, r5, #0x0
	bl		sub_080180f8
	add		r6, r7, #0x0
	add		r6, #0x18
	strh	r4, [r7, #0x2c]
	add		r4, r7, #0x0
	add		r4, #0x30
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0xa2
	bl		sub_0808c818
	add		r5, r7, #0x0
	add		r5, #0x32
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	mov		r0, #0x19
	mov		r3, r8
	strh	r3, [r7, #0x28]
	strh	r0, [r7, #0x2a]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r1, sp
	add		r1, #0x9e
	add		r0, r4, #0x0
	mov		r2, #0xa2
	bl		sub_0808c818
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	mov		r0, #0x2b
	mov		r1, r8
	strh	r1, [r7, #0x28]
	strh	r0, [r7, #0x2a]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	ldr		r1, _0805d6d8
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
	add		sp, #0x104
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5D6CA, 0x2

_0805d6cc:	.4byte 0x0000010F
_0805d6d0:	.4byte 0x080d3658
_0805d6d4:	.4byte 0x00000113
_0805d6d8:	.4byte 0x02008AD4
	thumb_func_end sub_0805d144

	thumb_func_start sub_0805d6dc
sub_0805d6dc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0805d6f8
	add		r2, r4, r0
	ldr		r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	cmp		r0, r3
	ble		_0805d700
	add		r1, r3, #0x0
	ldr		r3, _0805d6fc
	add		r0, r0, r3
	b		_0805d714

.incbin "base.gba", 0x5D6F6, 0x2

_0805d6f8:	.4byte 0x00003250
_0805d6fc:	.4byte 0xFFFFFC00

_0805d700:
	ldr		r1, _0805d70c
	cmp		r0, r1
	bge		_0805d710
	add		r0, r0, r3
	b		_0805d714

.incbin "base.gba", 0x5D70A, 0x2

_0805d70c:	.4byte 0xFFFFFC00

_0805d710:
	add		r1, r0, #0x0
	mov		r0, #0x0
_0805d714:
	str		r0, [r2, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r4, #0x0
	bl		sub_0805f37c
	add		r0, r4, #0x0
	bl		sub_0805f324
	add		r0, r4, #0x0
	bl		sub_0805dc68
	add		r0, r4, #0x0
	bl		sub_0805f2e4
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r1, _0805d74c
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805d744
	mov		r0, #0x1
_0805d744:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5D74A, 0x2

_0805d74c:	.4byte 0x00003250
	thumb_func_end sub_0805d6dc

	thumb_func_start sub_0805d750
sub_0805d750:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	ldr		r0, _0805d798
	add		r2, r7, r0
	mov		r1, #0x0
	ldrsh	r3, [r2, r1]
	cmp		r3, #0x0
	ble		_0805d774
	ldr		r4, _0805d79c
	add		r0, r7, r4
	add		r1, r3, #0x0
	ldr		r0, [r0, #0x0]
	cmp		r0, r1
	bgt		_0805d786
_0805d774:
	cmp		r3, #0x0
	bge		_0805d7a0
	ldr		r1, _0805d79c
	add		r0, r7, r1
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	ldr		r0, [r0, #0x0]
	cmp		r0, r1
	bge		_0805d7a0
_0805d786:
	ldr		r4, _0805d798
	add		r0, r7, r4
	mov		r5, #0x0
	ldrsh	r2, [r0, r5]
	ldr		r0, _0805d79c
	add		r1, r7, r0
	ldr		r0, [r1, #0x0]
	sub		r0, r0, r2
	b		_0805d7a8

_0805d798:	.4byte 0x00003254
_0805d79c:	.4byte 0x00003250

_0805d7a0:
	ldr		r2, _0805d850
	add		r1, r7, r2
	ldr		r2, [r1, #0x0]
	mov		r0, #0x0
_0805d7a8:
	str		r0, [r1, #0x0]
	ldr		r4, _0805d854
	add		r3, r7, r4
	ldr		r1, [r3, #0x0]
	ldr		r0, [r1, #0x8]
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	mov		r8, r0
	ldr		r5, _0805d858
	add		r0, r7, r5
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bge		_0805d8b8
	ldr		r0, _0805d85c
	cmp		r8, r0
	bgt		_0805d8b8
	add		r4, #0x4
	add		r2, r7, r4
	ldr		r0, [r2, #0x0]
	str		r1, [r0, #0x4]
	ldr		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x4]
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x4]
	str		r0, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x4]
	str		r0, [r2, #0x0]
	str		r4, [r0, #0x4]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x8]
	ldr		r5, _0805d860
	add		r2, r1, r5
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x3
	beq		_0805d80e
	mov		r3, #0xce
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	mov		r1, #0x3
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805d80e:
	mov		r5, #0xc0
	lsl		r5, r5, #0x5
	add		r8, r5
	ldr		r0, _0805d864
	add		r3, r7, r0
	ldrb	r1, [r3, #0x0]
	add		r1, #0x1
	strb	r1, [r3, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	ldr		r5, _0805d868
	add		r2, r7, r5
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	sub		r0, #0x1
	cmp		r1, r0
	ble		_0805d832
	strb	r4, [r3, #0x0]
_0805d832:
	ldrb	r2, [r2, #0x0]
	lsl		r2, r2, #0x18
	asr		r2, r2, #0x18
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	sub		r1, r2, r0
	sub		r1, #0x6
	add		r3, r0, #0x5
	sub		r0, r2, #0x1
	cmp		r3, r0
	ble		_0805d86c
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	b		_0805d878

.incbin "base.gba", 0x5D84E, 0x2

_0805d850:	.4byte 0x00003250
_0805d854:	.4byte 0x00003248
_0805d858:	.4byte 0x00003254
_0805d85c:	.4byte 0x000007FF
_0805d860:	.4byte 0x00000246
_0805d864:	.4byte 0x00003258
_0805d868:	.4byte 0x0000325D

_0805d86c:
	cmp		r3, #0x0
	bge		_0805d876
	sub		r0, r1, r2
	lsl		r0, r0, #0x10
	b		_0805d878
_0805d876:
	lsl		r0, r1, #0x10
_0805d878:
	lsr		r5, r0, #0x10
	ldr		r0, _0805d8b0
	add		r4, r7, r0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	add		r0, #0x1
	mov		r1, #0x7
	bl		sub_080bbd44
	strb	r0, [r4, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	add		r0, #0x5
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	lsl		r4, r5, #0x10
	asr		r4, r4, #0x10
	add		r0, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0805dae8
	ldr		r1, _0805d8b4
	b		_0805d9b0

.incbin "base.gba", 0x5D8AE, 0x2

_0805d8b0:	.4byte 0x0000325B
_0805d8b4:	.4byte 0x0000324C

_0805d8b8:
	ldr		r2, _0805d954
	add		r0, r7, r2
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	bgt		_0805d8c6
	b		_0805da02
_0805d8c6:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r8, r0
	bgt		_0805d8d0
	b		_0805da02
_0805d8d0:
	ldr		r4, _0805d958
	add		r3, r7, r4
	ldr		r2, [r3, #0x0]
	ldr		r5, _0805d95c
	add		r1, r7, r5
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldr		r2, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	str		r0, [r2, #0x4]
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	str		r2, [r0, #0x4]
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x0]
	str		r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x8]
	ldr		r0, _0805d960
	add		r2, r1, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x3
	beq		_0805d918
	mov		r3, #0xce
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	mov		r1, #0x3
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805d918:
	ldr		r4, _0805d964
	add		r8, r4
	ldr		r5, _0805d968
	add		r2, r7, r5
	ldrb	r0, [r2, #0x0]
	sub		r0, #0x1
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_0805d936
	ldr		r1, _0805d96c
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	strb	r0, [r2, #0x0]
_0805d936:
	ldr		r3, _0805d96c
	add		r0, r7, r3
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	sub		r2, r1, r0
	sub		r3, r0, #0x1
	sub		r0, r1, #0x1
	cmp		r3, r0
	ble		_0805d970
	add		r0, r2, r1
	lsl		r0, r0, #0x10
	b		_0805d97c

.incbin "base.gba", 0x5D952, 0x2

_0805d954:	.4byte 0x00003254
_0805d958:	.4byte 0x00003248
_0805d95c:	.4byte 0x0000324C
_0805d960:	.4byte 0x00000246
_0805d964:	.4byte 0xFFFFE800
_0805d968:	.4byte 0x00003258
_0805d96c:	.4byte 0x0000325D

_0805d970:
	cmp		r3, #0x0
	bge		_0805d97a
	sub		r0, r2, r1
	lsl		r0, r0, #0x10
	b		_0805d97c
_0805d97a:
	lsl		r0, r2, #0x10
_0805d97c:
	lsr		r5, r0, #0x10
	ldr		r0, _0805dacc
	add		r4, r7, r0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	add		r0, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	strb	r0, [r4, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	add		r0, #0x6
	mov		r1, #0x7
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	lsl		r4, r5, #0x10
	asr		r4, r4, #0x10
	add		r0, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0805dae8
	ldr		r1, _0805dad0
_0805d9b0:
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r5, [r0, #0x8]
	lsl		r1, r4, #0x3
	add		r1, r1, r4
	lsl		r1, r1, #0x2
	sub		r1, r1, r4
	lsl		r1, r1, #0x3
	ldr		r0, _0805dad4
	add		r1, r1, r0
	add		r0, r7, #0x0
	bl		sub_0805f2bc
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	add		r2, r5, #0x0
	add		r2, #0xbe
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_0805d9e4
	add		r0, r5, #0x0
	add		r0, #0x14
	strb	r1, [r2, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
_0805d9e4:
	mov		r0, #0x3
	add		r1, r5, #0x0
	add		r1, #0x7d
	strb	r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x94
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x4
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xc0
	mov		r0, #0xc0
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
_0805da02:
	mov		r1, r8
	cmp		r1, #0x0
	bge		_0805da0a
	add		r1, #0xff
_0805da0a:
	asr		r1, r1, #0x8
	sub		r1, #0x8
	add		r0, r7, #0x0
	bl		sub_0805db88
	ldr		r2, _0805dad0
	add		r0, r7, r2
	ldr		r6, [r0, #0x0]
	mov		r0, #0x0
	cmp		r6, #0x0
	beq		_0805da9a
	mov		r3, #0x8e
	lsl		r3, r3, #0x8
	mov		r9, r3
	mov		r4, #0x1
	mov		r10, r4
	mov		r5, #0x2
	neg		r5, r5
	mov		r12, r5
_0805da30:
	ldr		r4, [r6, #0x8]
	add		r3, r4, #0x0
	add		r3, #0xa8
	mov		r1, #0xb6
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	mov		r5, #0x8c
	lsl		r5, r5, #0x2
	add		r1, r4, r5
	lsl		r0, r0, #0x10
	asr		r5, r0, #0x10
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	lsl		r0, r0, #0xb
	add		r0, r8
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	mov		r1, #0x0
	ldr		r2, _0805dad8
	add		r0, r0, r2
	cmp		r0, r9
	bhi		_0805da60
	mov		r1, #0x1
_0805da60:
	ldr		r3, _0805dadc
	add		r2, r4, r3
	mov		r3, r10
	and		r3, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, r12
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	ldr		r0, _0805dae0
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, r12
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	mov		r0, r12
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	ldr		r6, [r6, #0x4]
	add		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r6, #0x0
	bne		_0805da30
_0805da9a:
	add		r0, r7, #0x0
	bl		sub_0805f324
	add		r0, r7, #0x0
	bl		sub_0805dc68
	add		r0, r7, #0x0
	bl		sub_0805f2e4
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r1, _0805dae4
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805dabe
	mov		r0, #0x1
_0805dabe:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0805dacc:	.4byte 0x0000325B
_0805dad0:	.4byte 0x00003248
_0805dad4:	.4byte 0x020010A0
_0805dad8:	.4byte 0xFFFFF700
_0805dadc:	.4byte 0x00000247
_0805dae0:	.4byte 0x00000183
_0805dae4:	.4byte 0x00003250
	thumb_func_end sub_0805d750

	thumb_func_start sub_0805dae8
sub_0805dae8:
	push	{ r4, r5, lr }
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	lsl		r2, r2, #0x10
	ldr		r3, _0805db7c
	add		r0, r0, r3
	mov		r3, #0x0
	ldrsb	r3, [r0, r3]
	lsr		r5, r2, #0x10
	asr		r0, r2, #0x10
	cmp		r0, r3
	blt		_0805db06
	sub		r0, r0, r3
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
_0805db06:
	ldr		r0, _0805db80
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	ldr		r1, _0805db84
	add		r1, r0, r1
	add		r4, #0x18
	mov		r3, #0x8a
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	mov		r2, #0x8
	cmp		r0, #0x0
	beq		_0805db4e
	sub		r3, #0x1
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805db4e
	mov		r2, #0x1
_0805db4e:
	strh	r2, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x18
	add		r1, #0x4
	mov		r2, #0xa2
	bl		sub_0808c818
	add		r1, r4, #0x0
	add		r1, #0x1a
	ldrb	r2, [r4, #0x18]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	mov		r0, #0x2
	mov		r3, #0xc
	strh	r0, [r4, #0x10]
	strh	r3, [r4, #0x12]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0805db7c:	.4byte 0x0000325D
_0805db80:	.4byte 0x0200AA18
_0805db84:	.4byte 0x020010A0
	thumb_func_end sub_0805dae8

	thumb_func_start sub_0805db88
sub_0805db88:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r3, r0, #0x0
	add		r5, r1, #0x0
	ldr		r1, _0805dc50
	add		r0, r3, r1
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	eor		r1, r2
	strb	r1, [r0, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0xf
	ldr		r2, _0805dc54
	add		r1, r1, r2
	add		r1, r1, r3
	mov		r8, r1
	mov		r4, #0x0
	mov		r6, #0xfe
_0805dbb2:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r0, #0x1
	add		r1, r8
	sub		r2, r6, r0
	strh	r2, [r1, #0x0]
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x9f
	ble		_0805dbb2
	mov		r4, #0x6
	ldr		r0, _0805dc58
	add		r0, r0, r3
	mov		r10, r0
	mov		r1, #0xff
	mov		r9, r1
_0805dbd6:
	mov		r2, r10
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl		r4, r4, #0x10
	asr		r1, r4, #0x10
	add		r0, r0, r1
	mov		r1, #0x7
	bl		sub_080bbd44
	lsl		r0, r0, #0x14
	lsl		r1, r5, #0x10
	lsr		r2, r1, #0x10
	mov		r3, #0x0
	add		r7, r4, #0x0
	add		r6, r5, #0x0
	add		r6, #0x18
	ldr		r1, _0805dc5c
	add		r0, r0, r1
	asr		r0, r0, #0x10
	sub		r4, r0, r5
_0805dbfe:
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	add		r1, r0, #0x0
	mov		r2, r9
	and		r1, r2
	lsl		r1, r1, #0x1
	add		r1, r8
	strh	r4, [r1, #0x0]
	lsl		r1, r3, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r1, r1, r2
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	lsr		r3, r1, #0x10
	asr		r1, r1, #0x10
	cmp		r1, #0xf
	ble		_0805dbfe
	add		r5, r6, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r7, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xc
	ble		_0805dbd6
	ldr		r1, _0805dc60
	ldr		r3, _0805dc64
	mov		r0, r8
	mov		r2, #0x2
	bl		sub_08000a2c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5DC4E, 0x2

_0805dc50:	.4byte 0x0000325C
_0805dc54:	.4byte 0x00002E48
_0805dc58:	.4byte 0x0000325B
_0805dc5c:	.4byte 0xFFFE0000
_0805dc60:	.4byte 0x0400001A
_0805dc64:	.4byte 0xA2600000
	thumb_func_end sub_0805db88

	thumb_func_start sub_0805dc68
sub_0805dc68:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r1, _0805dcd0
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805dcca
	ldr		r1, _0805dcd4
	add		r0, r5, r1
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0805dcb4
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x2
	ble		_0805dca8
	sub		r0, #0x2
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
_0805dca8:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r0, #0x18
	mov		r1, #0x1
	bl		sub_08009650
_0805dcb4:
	ldr		r0, _0805dcd4
	add		r1, r5, r0
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x30
	ble		_0805dcca
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_0805dcca:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0805dcd0:	.4byte 0x0000325E
_0805dcd4:	.4byte 0x00003256
	thumb_func_end sub_0805dc68

	thumb_func_start sub_0805dcd8
sub_0805dcd8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r10, r1
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	bl		sub_0800132c
	ldr		r6, _0805dd48
	ldr		r7, _0805dd4c
	add		r7, r9
_0805dcfa:
	ldr		r0, _0805dd50
	strh	r6, [r0, #0x0]
	ldr		r1, _0805dd54
	strh	r6, [r1, #0x0]
	ldr		r3, _0805dd58
	strh	r6, [r3, #0x0]
	ldr		r0, _0805dd5c
	strh	r6, [r0, #0x0]
	mov		r0, #0x5
	bl		sub_08009680
	ldrb	r1, [r7, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	cmp		r0, #0x2
	ble		_0805dd6c
	ldr		r2, _0805dd60
	ldr		r1, [r2, #0x0]
	ldr		r3, _0805dd64
	add		r0, r1, r3
	cmp		r0, #0x0
	bge		_0805dd2c
	mov		r3, #0xef
	lsl		r3, r3, #0x10
	add		r0, r1, r3
_0805dd2c:
	str		r0, [r2, #0x0]
	ldr		r2, _0805dd68
	ldr		r1, [r2, #0x0]
	ldr		r3, _0805dd64
	add		r0, r1, r3
	cmp		r0, #0x0
	bge		_0805dd40
	mov		r3, #0x9f
	lsl		r3, r3, #0x10
	add		r0, r1, r3
_0805dd40:
	str		r0, [r2, #0x0]
	mov		r0, #0x0
	b		_0805dd6e

.incbin "base.gba", 0x5DD46, 0x2

_0805dd48:	.4byte 0x0000FFE0
_0805dd4c:	.4byte 0x0000325A
_0805dd50:	.4byte 0x0200EB22
_0805dd54:	.4byte 0x0200EB20
_0805dd58:	.4byte 0x0200EB1E
_0805dd5c:	.4byte 0x0200EB24
_0805dd60:	.4byte 0x0200CE30
_0805dd64:	.4byte 0xffff0000
_0805dd68:	.4byte 0x0200CE44

_0805dd6c:
	add		r0, r1, #0x1
_0805dd6e:
	strb	r0, [r7, #0x0]
	mov		r4, r9
	add		r4, #0x58
	mov		r5, #0x0
	lsl		r6, r6, #0x10
	mov		r8, r6
	mov		r1, r10
	lsl		r6, r1, #0x10
	mov		r2, #0x1
_0805dd80:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805dda0
	ldr		r1, [r4, #0xc]
	mov		r3, #0x20
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	str		r2, [sp, #0x0]
	bl		sub_080bbc74
	ldr		r2, [sp, #0x0]
_0805dda0:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	ble		_0805dd80
	mov		r0, r9
	bl		sub_080b7690
	mov		r3, r8
	asr		r0, r3, #0x10
	asr		r1, r6, #0x10
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r0, #0x0
	ble		_0805dcfa
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0805dcd8

	thumb_func_start sub_0805ddd8
sub_0805ddd8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r8, r0
	mov		r6, #0x0
	ldr		r7, _0805de40
	add		r7, r8
	mov		r10, r6
	mov		r0, #0x20
	neg		r0, r0
	mov		r9, r0
_0805ddf4:
	ldr		r1, _0805de44
	strh	r6, [r1, #0x0]
	ldr		r3, _0805de48
	strh	r6, [r3, #0x0]
	ldr		r0, _0805de4c
	strh	r6, [r0, #0x0]
	ldr		r1, _0805de50
	strh	r6, [r1, #0x0]
	mov		r0, #0x5
	bl		sub_08009680
	ldrb	r1, [r7, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	cmp		r0, #0x2
	ble		_0805de60
	ldr		r2, _0805de54
	ldr		r1, [r2, #0x0]
	ldr		r3, _0805de58
	add		r0, r1, r3
	cmp		r0, #0x0
	bge		_0805de26
	mov		r3, #0xef
	lsl		r3, r3, #0x10
	add		r0, r1, r3
_0805de26:
	str		r0, [r2, #0x0]
	ldr		r2, _0805de5c
	ldr		r1, [r2, #0x0]
	ldr		r3, _0805de58
	add		r0, r1, r3
	cmp		r0, #0x0
	bge		_0805de3a
	mov		r3, #0x9f
	lsl		r3, r3, #0x10
	add		r0, r1, r3
_0805de3a:
	str		r0, [r2, #0x0]
	mov		r0, r10
	b		_0805de62

_0805de40:	.4byte 0x0000325A
_0805de44:	.4byte 0x0200EB22
_0805de48:	.4byte 0x0200EB20
_0805de4c:	.4byte 0x0200EB1E
_0805de50:	.4byte 0x0200EB24
_0805de54:	.4byte 0x0200CE30
_0805de58:	.4byte 0xffff0000
_0805de5c:	.4byte 0x0200CE44

_0805de60:
	add		r0, r1, #0x1
_0805de62:
	strb	r0, [r7, #0x0]
	mov		r4, r8
	add		r4, #0x58
	mov		r5, #0x0
	lsl		r6, r6, #0x10
	mov		r2, #0x1
_0805de6e:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805de8e
	ldr		r1, [r4, #0xc]
	mov		r3, #0x20
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	str		r2, [sp, #0x0]
	bl		sub_080bbc74
	ldr		r2, [sp, #0x0]
_0805de8e:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	ble		_0805de6e
	mov		r0, r8
	bl		sub_080b7690
	ldr		r3, _0805ded0
	add		r0, r6, r3
	lsr		r6, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r9
	bge		_0805ddf4
	ldr		r2, _0805ded4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0805ded8
	and		r0, r1
	strh	r0, [r2, #0x0]
	bl		sub_0800132c
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805ded0:	.4byte 0xFFFC0000
_0805ded4:	.4byte 0x02000B18
_0805ded8:	.4byte 0x0000E0FF
	thumb_func_end sub_0805ddd8

	thumb_func_start sub_0805dedc
sub_0805dedc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r0, _0805dfd0
	mov		r1, #0x7
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	mov		r0, #0x18
	add		r0, r0, r4
	mov		r10, r0
	mov		r0, #0x7
	strh	r0, [r4, #0x2c]
	ldr		r1, _0805dfd4
	ldr		r2, _0805dfd8
	add		r5, r5, r2
	mov		r2, #0x0
	ldrsb	r2, [r5, r2]
	mov		r0, sp
	bl		sub_0808c63c
	add		r6, r4, #0x0
	add		r6, #0x30
	add		r0, r6, #0x0
	mov		r1, sp
	bl		sub_0808ed5c
	add		r5, r4, #0x0
	add		r5, #0x32
	ldrb	r0, [r6, #0x0]
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r0, r10
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	bl		sub_0808f1a8
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x18
	sub		r1, r1, r0
	mov		r0, #0x12
	mov		r8, r0
	strh	r1, [r4, #0x28]
	mov		r1, r8
	strh	r1, [r4, #0x2a]
	mov		r0, r10
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r1, sp
	mov		r0, #0x2f
	strb	r0, [r1, #0x0]
	mov		r2, #0x1
	add		r2, sp
	mov		r9, r2
	mov		r0, #0x0
	strb	r0, [r2, #0x0]
	add		r0, r6, #0x0
	bl		sub_0808ed5c
	ldrb	r0, [r6, #0x0]
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r0, #0x19
	strh	r0, [r4, #0x28]
	mov		r1, r8
	strh	r1, [r4, #0x2a]
	mov		r0, r10
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r1, sp
	mov		r0, #0x35
	strb	r0, [r1, #0x0]
	mov		r0, #0x30
	mov		r2, r9
	strb	r0, [r2, #0x0]
	mov		r0, sp
	add		r0, #0x2
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, sp
	bl		sub_0808ed5c
	ldrb	r0, [r6, #0x0]
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r0, #0x21
	strh	r0, [r4, #0x28]
	mov		r2, r8
	strh	r2, [r4, #0x2a]
	mov		r0, r10
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805dfd0:	.4byte 0x0200AA18
_0805dfd4:	.4byte 0x080d365c
_0805dfd8:	.4byte 0x0000325D
	thumb_func_end sub_0805dedc

	thumb_func_start sub_0805dfdc
sub_0805dfdc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x88
	mov		r8, r0
	ldr		r1, _0805e05c
	ldr		r0, [r1, #0x0]
	ldr		r2, _0805e060
	add		r0, r0, r2
	ldrb	r4, [r0, #0x0]
	add		r5, r4, #0x0
	cmp		r4, #0x0
	bne		_0805dffe
	bl		sub_0805e99e
_0805dffe:
	ldr		r6, _0805e064
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0805e01c
	add		r0, sp, #0xc
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805e068
	ldr		r1, [r0, #0x0]
	add		r0, sp, #0xc
	mov		r2, #0x1
	bl		sub_0800204c
_0805e01c:
	mov		r0, #0x80
	and		r0, r4
	cmp		r0, #0x0
	beq		_0805e06c
	mov		r0, #0x3f
	and		r0, r4
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	ldr		r0, [r6, #0x0]
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	add		r3, r0, r1
	mov		r10, r1
	mov		r1, #0x0
	cmp		r1, r10
	bge		_0805e074
_0805e03e:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	mov		r2, sp
	add		r2, r2, r0
	add		r2, #0xc
	ldrb	r1, [r3, #0x0]
	strb	r1, [r2, #0x0]
	add		r0, #0x1
	lsl		r0, r0, #0x10
	sub		r3, #0x1
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r10
	blt		_0805e03e
	b		_0805e074

_0805e05c:	.4byte 0x080d3660
_0805e060:	.4byte 0x00003BA4
_0805e064:	.4byte 0x0200D578
_0805e068:	.4byte 0x0200BAF8

_0805e06c:
	add		r0, sp, #0xc
	strb	r5, [r0, #0x0]
	mov		r3, #0x1
	mov		r10, r3
_0805e074:
	ldr		r0, _0805e1d0
	mov		r4, #0xf8
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	add		r0, r10
	sub		r0, #0x32
	cmp		r0, #0x0
	bgt		_0805e08a
	bl		sub_0805e99e
_0805e08a:
	mov		r0, #0x0
	mov		r1, r10
	lsl		r1, r1, #0x2
	str		r1, [sp, #0x50]
	ldr		r2, _0805e1d4
	add		r2, r8
	str		r2, [sp, #0x78]
	ldr		r3, _0805e1d8
	add		r3, r8
	str		r3, [sp, #0x7c]
	ldr		r4, _0805e1dc
	add		r4, r8
	str		r4, [sp, #0x70]
	ldr		r1, _0805e1e0
	add		r1, r8
	str		r1, [sp, #0x80]
	ldr		r2, _0805e1e4
	add		r2, r8
	str		r2, [sp, #0x64]
	mov		r3, r8
	add		r3, #0x58
	str		r3, [sp, #0x60]
	ldr		r4, _0805e1e8
	add		r4, r8
	str		r4, [sp, #0x54]
	ldr		r1, _0805e1ec
	add		r1, r8
	str		r1, [sp, #0x58]
	ldr		r2, _0805e1f0
	add		r2, r8
	str		r2, [sp, #0x4c]
	ldr		r3, _0805e1f4
	add		r3, r8
	str		r3, [sp, #0x5c]
	cmp		r0, r10
	bge		_0805e114
	ldr		r4, _0805e1f8
	mov		r9, r4
	mov		r7, #0x0
	ldr		r6, _0805e1fc
	mov		r5, #0x2
_0805e0dc:
	lsl		r4, r0, #0x10
	asr		r4, r4, #0x10
	mov		r0, sp
	add		r0, r0, r4
	add		r0, #0xc
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x4
	ldr		r2, _0805e200
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	bl		sub_0800f33c
	add		r2, r0, #0x0
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	str		r7, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_080189f8
	add		r4, #0x1
	lsl		r4, r4, #0x10
	lsr		r0, r4, #0x10
	asr		r4, r4, #0x10
	cmp		r4, r10
	blt		_0805e0dc
_0805e114:
	ldr		r5, _0805e1f8
	ldr		r0, [r5, #0x0]
	ldr		r1, _0805e204
	ldr		r2, [r1, #0x0]
	ldr		r4, _0805e1fc
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	mov		r6, #0x0
	str		r6, [sp, #0x8]
	mov		r1, #0x0
	add		r3, r4, #0x0
	bl		sub_080189f8
	ldr		r0, [r5, #0x0]
	str		r4, [sp, #0x0]
	mov		r1, #0x2
	str		r1, [sp, #0x4]
	mov		r1, #0xf
	mov		r2, #0x3
	mov		r3, #0x18
	bl		sub_08018668
	ldr		r7, _0805e208
	add		r7, r8
	ldr		r2, [r5, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r1, r1, #0x3
	mov		r3, #0xca
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r4, [sp, #0x50]
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	mov		r2, #0x16
	ldrsh	r0, [r0, r2]
	add		r1, r1, r0
	mov		r0, #0xcb
	lsl		r0, r0, #0x8
	lsl		r1, r1, #0x8
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	add		r1, r1, r3
	ldr		r4, [sp, #0x78]
	str		r0, [r4, #0x0]
	ldr		r0, [sp, #0x7c]
	str		r1, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x9
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r1, [sp, #0x70]
	strb	r6, [r1, #0x0]
	ldr		r2, [sp, #0x80]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r6, [sp, #0x64]
	mov		r3, #0x0
	mov		r9, r3
_0805e196:
	ldrb	r1, [r6, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x2
	ble		_0805e218
	ldr		r2, _0805e20c
	ldr		r1, [r2, #0x0]
	ldr		r4, _0805e210
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_0805e1b2
	mov		r3, #0xef
	lsl		r3, r3, #0x10
	add		r0, r1, r3
_0805e1b2:
	str		r0, [r2, #0x0]
	ldr		r2, _0805e214
	ldr		r1, [r2, #0x0]
	ldr		r4, _0805e210
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_0805e1c6
	mov		r3, #0x9f
	lsl		r3, r3, #0x10
	add		r0, r1, r3
_0805e1c6:
	str		r0, [r2, #0x0]
	mov		r4, r9
	strb	r4, [r6, #0x0]
	b		_0805e21e

.incbin "base.gba", 0x5E1CE, 0x2

_0805e1d0:	.4byte 0x02000BAC
_0805e1d4:	.4byte 0x00002B18
_0805e1d8:	.4byte 0x00002B1C
_0805e1dc:	.4byte 0x00002AF1
_0805e1e0:	.4byte 0x00002B33
_0805e1e4:	.4byte 0x0000325A
_0805e1e8:	.4byte 0x00002BDC
_0805e1ec:	.4byte 0x00002BE0
_0805e1f0:	.4byte 0x00002BB5
_0805e1f4:	.4byte 0x00002BF7
_0805e1f8:	.4byte 0x0200B7A4
_0805e1fc:	.4byte 0xFFFF8001
_0805e200:	.4byte 0x0200D574
_0805e204:	.4byte 0x0200BAD4
_0805e208:	.4byte 0x00002A74
_0805e20c:	.4byte 0x0200CE30
_0805e210:	.4byte 0xffff0000
_0805e214:	.4byte 0x0200CE44

_0805e218:
	add		r0, r1, #0x1
	ldr		r1, [sp, #0x64]
	strb	r0, [r1, #0x0]
_0805e21e:
	mov		r0, r8
	bl		sub_0805dc68
	ldr		r4, [sp, #0x60]
	mov		r5, #0x0
	add		r2, r7, #0x0
	add		r2, #0xbf
	str		r2, [sp, #0x74]
	add		r3, r7, #0x0
	add		r3, #0xa4
	str		r3, [sp, #0x68]
	add		r0, r7, #0x0
	add		r0, #0xa8
	str		r0, [sp, #0x6c]
	mov		r2, #0x1
_0805e23c:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805e25c
	ldr		r1, [r4, #0xc]
	mov		r3, #0x20
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	str		r2, [sp, #0x84]
	bl		sub_080bbc74
	ldr		r2, [sp, #0x84]
_0805e25c:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	ble		_0805e23c
	mov		r0, r8
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0805e196
	ldr		r2, [sp, #0x74]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	and		r1, r0
	strb	r1, [r2, #0x0]
	ldr		r4, _0805e2f8
	ldr		r0, [r4, #0x0]
	bl		sub_08018fcc
	mov		r0, #0x0
	cmp		r0, r10
	bge		_0805e2da
	mov		r9, r4
	mov		r7, #0x0
	ldr		r6, _0805e2fc
	mov		r5, #0x2
_0805e2a2:
	lsl		r4, r0, #0x10
	asr		r4, r4, #0x10
	mov		r0, sp
	add		r0, r0, r4
	add		r0, #0xc
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x4
	ldr		r3, _0805e300
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	bl		sub_0800f33c
	add		r2, r0, #0x0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	str		r7, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0x0
	mov		r3, #0x0
	bl		sub_080189f8
	add		r4, #0x1
	lsl		r4, r4, #0x10
	lsr		r0, r4, #0x10
	asr		r4, r4, #0x10
	cmp		r4, r10
	blt		_0805e2a2
_0805e2da:
	ldr		r0, _0805e304
	mov		r2, #0xf8
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	add		r0, r10
	sub		r0, #0x33
	cmp		r0, #0x4
	bhi		_0805e38a
	lsl		r0, r0, #0x2
	ldr		r1, _0805e308
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x5E2F6, 0x2

_0805e2f8:	.4byte 0x0200B7A4
_0805e2fc:	.4byte 0xFFFF8001
_0805e300:	.4byte 0x0200D574
_0805e304:	.4byte 0x02000BAC
_0805e308:	.4byte 0x0805e30c
_0805e30c:	.4byte 0x0805e320

.incbin "base.gba", 0x5E310, 0x10
	thumb_func_end sub_0805dfdc


.incbin "base.gba", 0x5E320, 0x6A

_0805e38a:

.incbin "base.gba", 0x5E38A, 0x58
_0805e3e2:

.incbin "base.gba", 0x5E3E2, 0x1C
_0805e3fe:

.incbin "base.gba", 0x5E3FE, 0x14
_0805e412:

.incbin "base.gba", 0x5E412, 0xA
_0805e41c:	.4byte 0x0200B7A4

.incbin "base.gba", 0x5E420, 0x4
_0805e424:	.4byte 0xFFFF8001
_0805e428:	.4byte 0x0200CE30
PTR_H_Reset_0805e42c:	.4byte 0xffff0000
_0805e430:	.4byte 0x0200CE44

_0805e434:

.incbin "base.gba", 0x5E434, 0x6
_0805e43a:

.incbin "base.gba", 0x5E43A, 0xC
_0805e446:

.incbin "base.gba", 0x5E446, 0x1C
_0805e462:

.incbin "base.gba", 0x5E462, 0x46
_0805e4a8:

.incbin "base.gba", 0x5E4A8, 0x38
_0805e4e0:

.incbin "base.gba", 0x5E4E0, 0xC0
_0805e5a0:

.incbin "base.gba", 0x5E5A0, 0x1C
_0805e5bc:

.incbin "base.gba", 0x5E5BC, 0x14
_0805e5d0:

.incbin "base.gba", 0x5E5D0, 0x8
_0805e5d8:	.4byte 0x0200B7A4
_0805e5dc:	.4byte 0xFFFF8001
_0805e5e0:	.4byte 0x0200D574
_0805e5e4:	.4byte 0x0200BAF0
_0805e5e8:	.4byte 0x00002B38
_0805e5ec:	.4byte 0x0200CE30
PTR_H_Reset_0805e5f0:	.4byte 0xffff0000
_0805e5f4:	.4byte 0x0200CE44

_0805e5f8:

.incbin "base.gba", 0x5E5F8, 0x6
_0805e5fe:

.incbin "base.gba", 0x5E5FE, 0x10
_0805e60e:

.incbin "base.gba", 0x5E60E, 0x20
_0805e62e:

.incbin "base.gba", 0x5E62E, 0x60
_0805e68e:

.incbin "base.gba", 0x5E68E, 0x14
_0805e6a2:

.incbin "base.gba", 0x5E6A2, 0xA
_0805e6ac:	.4byte 0x0200B7A4
_0805e6b0:	.4byte 0x0200CE30
PTR_H_Reset_0805e6b4:	.4byte 0xffff0000
_0805e6b8:	.4byte 0x0200CE44

_0805e6bc:

.incbin "base.gba", 0x5E6BC, 0x6
_0805e6c2:

.incbin "base.gba", 0x5E6C2, 0xC
_0805e6ce:

.incbin "base.gba", 0x5E6CE, 0x1C
_0805e6ea:

.incbin "base.gba", 0x5E6EA, 0x1A
_0805e704:

.incbin "base.gba", 0x5E704, 0xE
_0805e712:

.incbin "base.gba", 0x5E712, 0x2A
_0805e73c:

.incbin "base.gba", 0x5E73C, 0x38
_0805e774:

.incbin "base.gba", 0x5E774, 0x90
_0805e804:

.incbin "base.gba", 0x5E804, 0x1C
_0805e820:

.incbin "base.gba", 0x5E820, 0x14
_0805e834:

.incbin "base.gba", 0x5E834, 0x8
_0805e83c:	.4byte 0x0200B7A4
_0805e840:	.4byte 0xFFFF8001
_0805e844:	.4byte 0x0200D574
_0805e848:	.4byte 0x0200BAEC
_0805e84c:	.4byte 0x0200B708
_0805e850:	.4byte 0xFFFF8002
_0805e854:	.4byte 0x0200B704
_0805e858:	.4byte 0xFFFF8080
_0805e85c:	.4byte 0x0200CE30
PTR_H_Reset_0805e860:	.4byte 0xffff0000
_0805e864:	.4byte 0x0200CE44

_0805e868:

.incbin "base.gba", 0x5E868, 0x6
_0805e86e:

.incbin "base.gba", 0x5E86E, 0xC
_0805e87a:

.incbin "base.gba", 0x5E87A, 0x1C
_0805e896:

.incbin "base.gba", 0x5E896, 0x2A
_0805e8c0:

.incbin "base.gba", 0x5E8C0, 0x2E
_0805e8ee:

.incbin "base.gba", 0x5E8EE, 0x6
_0805e8f4:

.incbin "base.gba", 0x5E8F4, 0x26
_0805e91a:

.incbin "base.gba", 0x5E91A, 0x14
_0805e92e:

.incbin "base.gba", 0x5E92E, 0xA
_0805e938:	.4byte 0x0200B7A4
_0805e93c:	.4byte 0x02000BAC
_0805e940:	.4byte 0x00003BA4
_0805e944:	.4byte 0x080d3638 @ m_aioi/maFriends.cpp
_0805e948:	.4byte 0x0000095D
_0805e94c:	.4byte 0x0200CE30
PTR_H_Reset_0805e950:	.4byte 0xffff0000
_0805e954:	.4byte 0x0200CE44

_0805e958:

.incbin "base.gba", 0x5E958, 0x6
_0805e95e:

.incbin "base.gba", 0x5E95E, 0xC
_0805e96a:

.incbin "base.gba", 0x5E96A, 0x1C
_0805e986:

.incbin "base.gba", 0x5E986, 0x18
	non_word_aligned_thumb_func_start sub_0805e99e
sub_0805e99e:
	add		sp, #0x88
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5E9AE, 0x152
	thumb_func_end sub_0805e99e

	thumb_func_start sub_0805eb00
sub_0805eb00:
	push	{ r4, lr }
	ldr		r4, _0805eb80
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_0808b4d0
	cmp		r0, #0x0
	bne		_0805eb3e
	ldr		r1, _0805eb84
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x4
	bls		_0805eb3e
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_0808b4f8
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0805eb38
	ldr		r0, _0805eb88
	ldr		r1, _0805eb8c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0805eb38:
	mov		r0, #0x26
	bl		sub_0805eb94
_0805eb3e:
	ldr		r4, _0805eb80
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0808b4d0
	cmp		r0, #0x0
	bne		_0805eb7a
	ldr		r1, _0805eb84
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x9
	bls		_0805eb7a
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0808b4f8
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0805eb74
	ldr		r0, _0805eb88
	ldr		r1, _0805eb90
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0805eb74:
	mov		r0, #0x28
	bl		sub_0805eb94
_0805eb7a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0805eb80:	.4byte 0x02004968
_0805eb84:	.4byte 0xFFFFC624
_0805eb88:	.4byte 0x080d3638 @ m_aioi/maFriends.cpp
_0805eb8c:	.4byte 0x000009C4
_0805eb90:	.4byte 0x000009CC
	thumb_func_end sub_0805eb00

	thumb_func_start sub_0805eb94
sub_0805eb94:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x40
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r0, _0805ece4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0805ebc0
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805ece8
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_0805ebc0:
	ldr		r6, _0805ecec
	ldr		r1, _0805ecf0
	add		r0, r6, r1
	ldrb	r2, [r0, #0x0]
	lsl		r4, r2, #0x10
	add		r0, r5, #0x1
	mov		r9, r0
	ldr		r1, _0805ecf4
	mov		r8, r1
	lsl		r7, r5, #0x4
	cmp		r4, #0x0
	beq		_0805ec04
	mov		r0, #0x8a
	lsl		r0, r0, #0x1
	mov		r12, r0
	mov		r3, r9
	mov		r5, #0x8c
	lsl		r5, r5, #0x1
_0805ebe4:
	mov		r0, r12
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0805ebf4
	cmp		r0, r3
	bne		_0805ebf4
	b		_0805ed24
_0805ebf4:
	lsl		r0, r2, #0x10
	ldr		r1, _0805ecf8
	add		r0, r0, r1
	lsr		r2, r0, #0x10
	add		r6, r6, r5
	lsl		r4, r2, #0x10
	cmp		r4, #0x0
	bne		_0805ebe4
_0805ec04:
	mov		r2, r8
	ldr		r2, [r2, #0x0]
	mov		r8, r2
	mov		r5, #0xf8
	lsl		r5, r5, #0x2
	add		r5, r8
	ldrb	r1, [r5, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	ldr		r1, _0805ecfc
	add		r1, r8
	add		r6, r0, r1
	ldr		r0, _0805ed00
	ldr		r0, [r0, #0x0]
	ldr		r4, _0805ed04
	ldr		r1, [r4, #0x0]
	add		r1, r7, r1
	ldr		r1, [r1, #0x8]
	bl		sub_0808b7cc
	ldr		r1, _0805ed08
	str		r1, [r6, #0x0]
	add		r2, r6, #0x0
	add		r2, #0x46
	mov		r3, #0x0
	mov		r1, #0x68
	strb	r1, [r2, #0x0]
	ldrh	r1, [r0, #0x0]
	add		r2, #0x1
	strb	r1, [r2, #0x0]
	ldrh	r2, [r0, #0x2]
	add		r1, r6, #0x0
	add		r1, #0x48
	strb	r2, [r1, #0x0]
	ldrh	r0, [r0, #0x8]
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, r7, r0
	ldr		r0, [r0, #0xc]
	ldr		r2, _0805ed0c
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	ldr		r0, _0805ed10
	add		r1, r6, r0
	mov		r0, #0x64
	strb	r0, [r1, #0x0]
	ldr		r2, _0805ed14
	add		r1, r6, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r1, #0x87
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strb	r3, [r0, #0x0]
	sub		r2, #0x5
	add		r0, r6, r2
	strb	r3, [r0, #0x0]
	mov		r0, r8
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	add		r2, #0x3
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, r0, r7
	bl		sub_0800f33c
	add		r1, r6, #0x4
	bl		sub_08017fd8
	ldr		r0, [r4, #0x0]
	add		r0, r0, r7
	add		r0, #0x4
	bl		sub_0800f33c
	add		r1, r6, #0x0
	add		r1, #0x4c
	bl		sub_08018404
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	strb	r0, [r5, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x31
	bls		_0805ed78
	ldr		r0, _0805ed18
	bl		sub_08002268
	mov		r0, r8
	add		r0, #0xc
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0805ed7c
	ldr		r0, _0805ed1c
	ldr		r1, _0805ed20
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_0805ed7c

.incbin "base.gba", 0x5ECE2, 0x2

_0805ece4:	.4byte 0x0200D578
_0805ece8:	.4byte 0x0200BAF8
_0805ecec:	.4byte 0x020010A0
_0805ecf0:	.4byte 0xfffffeec
_0805ecf4:	.4byte 0x080d3664
_0805ecf8:	.4byte 0xffff0000
_0805ecfc:	.4byte 0x000004F4
_0805ed00:	.4byte 0x0200BF08
_0805ed04:	.4byte 0x0200D574
_0805ed08:	.4byte 0x00FFFFFF
_0805ed0c:	.4byte 0x0000010F
_0805ed10:	.4byte 0x00000111
_0805ed14:	.4byte 0x00000115
_0805ed18:	.4byte 0x000004B9
_0805ed1c:	.4byte 0x080d3638 @ m_aioi/maFriends.cpp
_0805ed20:	.4byte 0x00000A49

_0805ed24:
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	asr		r4, r4, #0x10
	mov		r1, #0x8c
	add		r2, r4, #0x0
	mul		r2, r1
	ldr		r1, _0805ed6c
	and		r2, r1
	add		r1, r6, #0x0
	bl		sub_080bb5fc
	add		r0, sp, #0x3c
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	lsl		r1, r4, #0x3
	add		r1, r1, r4
	lsl		r1, r1, #0x2
	sub		r1, r1, r4
	lsl		r1, r1, #0x3
	add		r1, r6, r1
	ldr		r2, _0805ed70
	add		r1, r1, r2
	ldr		r2, _0805ed74
	bl		sub_080bb5fc
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, #0xf8
	lsl		r2, r2, #0x2
	add		r1, r1, r2
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0805ec04

.incbin "base.gba", 0x5ED6A, 0x2

_0805ed6c:	.4byte 0x001FFFFF
_0805ed70:	.4byte 0xFFFFFEE8
_0805ed74:	.4byte 0x0100008C

_0805ed78:
	bl		sub_0805eb00
_0805ed7c:
	add		sp, #0x40
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5ED8A, 0x2
	thumb_func_end sub_0805eb94

	thumb_func_start sub_0805ed8c
sub_0805ed8c:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x3c
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldr		r0, _0805edc8
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	bne		_0805edb6
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805edcc
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_0805edb6:
	mov		r0, #0x40
	and		r0, r4
	cmp		r0, #0x0
	beq		_0805ee36
	cmp		r4, #0x0
	bne		_0805edd0
	mov		r1, #0x0
	b		_0805ee06

.incbin "base.gba", 0x5EDC6, 0x2

_0805edc8:	.4byte 0x080d3668
_0805edcc:	.4byte 0x0200BAF8

_0805edd0:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0805edec
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805ee24
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_0805edec:
	mov		r1, #0x1
	mov		r0, #0x80
	and		r0, r4
	cmp		r0, #0x0
	beq		_0805ee06
	mov		r0, #0x3f
	and		r0, r4
	ldr		r2, [r5, #0x0]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	add		r1, r1, r2
	ldrb	r1, [r1, #0x0]
_0805ee06:
	lsl		r1, r1, #0x10
	ldr		r0, _0805ee28
	mov		r2, #0xf8
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	lsr		r1, r1, #0x10
	ldrb	r0, [r0, #0x0]
	add		r1, r1, r0
	cmp		r1, #0x32
	ble		_0805ee30
	ldr		r0, _0805ee2c
	bl		sub_08002268
	b		_0805eec6

.incbin "base.gba", 0x5EE22, 0x2

_0805ee24:	.4byte 0x0200BAF8
_0805ee28:	.4byte 0x02000BAC
_0805ee2c:	.4byte 0x000004DD

_0805ee30:
	ldr		r0, _0805ee74
	bl		sub_0800223c
_0805ee36:
	mov		r0, #0x80
	and		r0, r4
	cmp		r0, #0x0
	beq		_0805ee80
	ldr		r2, [r6, #0x0]
	mov		r0, #0x3f
	and		r0, r4
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	ldr		r0, [r2, #0x0]
	add		r4, r0, r1
	ldrb	r5, [r4, #0x0]
	ldr		r6, _0805ee78
	cmp		r5, #0x0
	beq		_0805ee8a
	mov		r7, #0x3f
_0805ee58:
	add		r4, #0x1
	ldrb	r1, [r4, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	bl		sub_0805eb94
	lsl		r0, r5, #0x10
	ldr		r1, _0805ee7c
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	cmp		r0, #0x0
	bne		_0805ee58
	b		_0805ee8a

.incbin "base.gba", 0x5EE72, 0x2

_0805ee74:	.4byte 0x000004DD
_0805ee78:	.4byte 0x080d366c
_0805ee7c:	.4byte 0xffff0000

_0805ee80:
	mov		r0, #0x3f
	and		r0, r4
	bl		sub_0805eb94
	ldr		r6, _0805eed0
_0805ee8a:
	ldr		r4, [r6, #0x0]
	add		r0, r4, #0x0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0805eea4
	ldr		r0, _0805eed4
	mov		r1, #0xa8
	lsl		r1, r1, #0x4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0805eea4:
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0805eebe
	ldr		r0, _0805eed4
	ldr		r1, _0805eed8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0805eebe:
	ldr		r1, _0805eedc
	add		r0, r4, r1
	bl		sub_08002fd8
_0805eec6:
	add		sp, #0x3c
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5EECE, 0x2

_0805eed0:	.4byte 0x080d366c
_0805eed4:	.4byte 0x080d3638 @ m_aioi/maFriends.cpp
_0805eed8:	.4byte 0x00000A81
_0805eedc:	.4byte 0xFFFFFC20
	thumb_func_end sub_0805ed8c

	thumb_func_start sub_0805eee0
sub_0805eee0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	ldr		r7, _0805ef5c
	mov		r0, #0x80
	and		r0, r3
	cmp		r0, #0x0
	beq		_0805ef70
	ldr		r2, _0805ef60
	mov		r0, #0x3f
	and		r0, r3
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	ldr		r0, [r2, #0x0]
	add		r6, r0, r1
	ldrb	r4, [r6, #0x0]
	ldr		r1, _0805ef64
	add		r0, r7, r1
	ldrb	r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_0805ef56
	mov		r0, #0x8c
	lsl		r0, r0, #0x1
	mov		r8, r0
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	mov		r12, r1
_0805ef1c:
	add		r2, r6, #0x1
	ldrb	r1, [r6, #0x0]
	lsl		r5, r3, #0x10
	cmp		r1, #0x0
	beq		_0805ef4a
	mov		r3, r12
	add		r0, r7, r3
	ldrb	r3, [r0, #0x0]
_0805ef2c:
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	cmp		r3, r0
	bne		_0805ef3c
	lsl		r0, r4, #0x10
	ldr		r4, _0805ef68
	add		r0, r0, r4
	lsr		r4, r0, #0x10
_0805ef3c:
	lsl		r0, r1, #0x10
	ldr		r1, _0805ef68
	add		r0, r0, r1
	add		r2, #0x1
	lsr		r1, r0, #0x10
	cmp		r0, #0x0
	bne		_0805ef2c
_0805ef4a:
	add		r7, r8
	ldr		r3, _0805ef68
	add		r0, r5, r3
	lsr		r3, r0, #0x10
	cmp		r0, #0x0
	bne		_0805ef1c
_0805ef56:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	b		_0805ef9c

_0805ef5c:	.4byte 0x020010A0
_0805ef60:	.4byte 0x0200D578
_0805ef64:	.4byte 0xfffffeec
_0805ef68:	.4byte 0xffff0000

_0805ef6c:
	mov		r0, #0x0
	b		_0805ef9c
_0805ef70:
	ldr		r4, _0805efa8
	add		r0, r7, r4
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0805ef9a
	mov		r4, #0x8a
	lsl		r4, r4, #0x1
	add		r2, r3, #0x1
	mov		r3, #0x8c
	lsl		r3, r3, #0x1
_0805ef84:
	add		r0, r7, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, r2
	beq		_0805ef6c
	add		r7, r7, r3
	lsl		r0, r1, #0x10
	ldr		r1, _0805efac
	add		r0, r0, r1
	lsr		r1, r0, #0x10
	cmp		r0, #0x0
	bne		_0805ef84
_0805ef9a:
	mov		r0, #0x1
_0805ef9c:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5EFA6, 0x2

_0805efa8:	.4byte 0xfffffeec
_0805efac:	.4byte 0xffff0000
	thumb_func_end sub_0805eee0

	thumb_func_start sub_0805efb0
sub_0805efb0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	ldr		r0, _0805f080
	ldr		r5, [r0, #0x0]
	mov		r1, #0x0
	mov		r9, r1
	ldr		r1, _0805f084
	ldr		r1, [r1, #0x0]
	cmp		r1, #0x0
	bne		_0805efe2
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805f088
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_0805efe2:
	ldr		r1, _0805f08c
	add		r0, r5, r1
	ldrb	r7, [r0, #0x0]
	cmp		r7, #0x0
	beq		_0805f050
	ldr		r0, _0805f090
	add		r0, r0, r5
	mov		r10, r0
	ldr		r1, _0805f094
	mov		r8, r1
	ldr		r0, _0805f098
	add		r6, r5, r0
_0805effa:
	ldrb	r0, [r6, #0x1]
	cmp		r0, #0x0
	beq		_0805f03c
	add		r4, r0, #0x0
	sub		r4, #0x1
	lsl		r4, r4, #0x10
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	strb	r0, [r6, #0x0]
	lsr		r4, r4, #0xc
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, r0, r4
	bl		sub_0800f33c
	add		r1, r5, #0x4
	bl		sub_08017fd8
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, r0, r4
	add		r0, #0x4
	bl		sub_0800f33c
	add		r1, r5, #0x0
	add		r1, #0x4c
	bl		sub_08018404
	mov		r0, r9
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r9, r0
_0805f03c:
	lsl		r0, r7, #0x10
	ldr		r1, _0805f09c
	add		r0, r0, r1
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r6, r6, r1
	add		r5, r5, r1
	lsr		r7, r0, #0x10
	cmp		r0, #0x0
	bne		_0805effa
_0805f050:
	mov		r0, r9
	cmp		r0, #0x0
	beq		_0805f06e
	ldr		r0, _0805f0a0
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0805f06e
	ldr		r0, _0805f0a4
	mov		r1, #0xae
	lsl		r1, r1, #0x4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0805f06e:
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5F07E, 0x2

_0805f080:	.4byte 0x080d3670
_0805f084:	.4byte 0x0200D578
_0805f088:	.4byte 0x0200BAF8
_0805f08c:	.4byte 0xfffffeec
_0805f090:	.4byte 0xFFFFFBD8
_0805f094:	.4byte 0x0200D574
_0805f098:	.4byte 0x00000113
_0805f09c:	.4byte 0xffff0000
_0805f0a0:	.4byte 0x020010A0
_0805f0a4:	.4byte 0x080d3638 @ m_aioi/maFriends.cpp
	thumb_func_end sub_0805efb0

	thumb_func_start sub_0805f0a8
sub_0805f0a8:
	push	{ r4, lr }
	ldr		r4, _0805f13c
	ldr		r0, _0805f140
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _0805f144
	ldr		r0, _0805f148
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _0805f14c
	ldr		r0, _0805f150
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _0805f154
	ldr		r0, _0805f158
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _0805f15c
	ldr		r0, _0805f160
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _0805f164
	ldr		r0, _0805f168
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0805f16c
	ldr		r0, _0805f170
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0805f174
	ldr		r0, _0805f178
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0805f17c
	ldr		r0, _0805f180
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0805f184
	ldr		r0, _0805f188
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0805f18c
	ldr		r0, _0805f190
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0805f194
	ldr		r0, _0805f198
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0805f19c
	ldr		r0, _0805f1a0
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	ldr		r4, _0805f1a4
	ldr		r0, _0805f1a8
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0805f13c:	.4byte 0x0200BB08
_0805f140:	.4byte 0x080d3674 @ scrMA_CardListInit
_0805f144:	.4byte 0x0200BB04
_0805f148:	.4byte 0x080d3688 @ scrMA_FriendsListInit
_0805f14c:	.4byte 0x0200BB00
_0805f150:	.4byte 0x080d36a0 @ scrMA_FriendsCardInit
_0805f154:	.4byte 0x0200BAFC
_0805f158:	.4byte 0x080d36b8 @ scrMA_CostumeData
_0805f15c:	.4byte 0x0200BAF8
_0805f160:	.4byte 0x080d36cc @ scrMA_EventCardData
_0805f164:	.4byte 0x0200BAF4
_0805f168:	.4byte 0x080d36e0 @ ms_Erase_reconfirm
_0805f16c:	.4byte 0x0200BAF0
_0805f170:	.4byte 0x080d36f4 @ ms_NotGet_KeptCard
_0805f174:	.4byte 0x0200BAEC
_0805f178:	.4byte 0x080d3708 @ ms_NotGet_reconfirm
_0805f17c:	.4byte 0x0200BAE8
_0805f180:	.4byte 0x080d371c @ ms_A_keshite_1
_0805f184:	.4byte 0x0200BAE4
_0805f188:	.4byte 0x080d372c @ ms_A_keshite_2
_0805f18c:	.4byte 0x0200BAE0
_0805f190:	.4byte 0x080d373c @ ms_A_keshite_3
_0805f194:	.4byte 0x0200BADC
_0805f198:	.4byte 0x080d374c @ ms_A_keshite_4
_0805f19c:	.4byte 0x0200BAD8
_0805f1a0:	.4byte 0x080d375c @ ms_A_keshite_5
_0805f1a4:	.4byte 0x0200BAD4
_0805f1a8:	.4byte 0x080d376c @ ms_A_help_0005
	thumb_func_end sub_0805f0a8

	thumb_func_start sub_0805f1ac
sub_0805f1ac:
	push	{ r4, lr }
	ldr		r0, _0805f1e0
	ldr		r1, _0805f1e4
	add		r0, r0, r1
	ldrb	r4, [r0, #0x0]
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	bl		sub_08006884
	cmp		r0, #0x0
	bge		_0805f1ce
	ldr		r0, _0805f1e8
	ldr		r1, _0805f1ec
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0805f1ce:
	mov		r0, #0xbf
	and		r4, r0
	add		r0, r4, #0x0
	bl		sub_0805ed8c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5F1DE, 0x2

_0805f1e0:	.4byte 0x02000BAC
_0805f1e4:	.4byte 0x00003BA4
_0805f1e8:	.4byte 0x080d3638 @ m_aioi/maFriends.cpp
_0805f1ec:	.4byte 0x00000A98
	thumb_func_end sub_0805f1ac

	thumb_func_start sub_0805f1f0
sub_0805f1f0:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	lsl		r4, r1, #0x10
	ldr		r0, _0805f230
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	ldr		r2, _0805f234
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	ldr		r6, _0805f238
	lsr		r4, r4, #0xc
	ldr		r0, [r6, #0x0]
	add		r0, r0, r4
	bl		sub_0800f33c
	add		r1, r5, #0x4
	bl		sub_08017fd8
	ldr		r0, [r6, #0x0]
	add		r0, r0, r4
	add		r0, #0x4
	bl		sub_0800f33c
	add		r5, #0x4c
	add		r1, r5, #0x0
	bl		sub_08018404
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0805f230:	.4byte 0x02000BAC
_0805f234:	.4byte 0x00000113
_0805f238:	.4byte 0x0200D574
	thumb_func_end sub_0805f1f0

	thumb_func_start sub_0805f23c
sub_0805f23c:
	push	{ r4, r5, lr }
	sub		sp, #0x3c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_0805f24e
	mov		r0, #0x0
	b		_0805f288
_0805f24e:
	ldr		r5, _0805f290
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0805f26c
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805f294
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_0805f26c:
	mov		r2, #0x1
	mov		r0, #0x80
	and		r0, r4
	cmp		r0, #0x0
	beq		_0805f286
	mov		r0, #0x3f
	and		r0, r4
	ldr		r2, [r5, #0x0]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	add		r1, r1, r2
	ldrb	r2, [r1, #0x0]
_0805f286:
	add		r0, r2, #0x0
_0805f288:
	add		sp, #0x3c
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0805f290:	.4byte 0x0200D578
_0805f294:	.4byte 0x0200BAF8

.incbin "base.gba", 0x5F298, 0x24
	thumb_func_end sub_0805f23c

	thumb_func_start sub_0805f2bc
sub_0805f2bc:
	push	{ lr }
	ldr		r2, _0805f2d8
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0805f2dc
	sub		r2, #0x5
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x63
	bls		_0805f2de
	mov		r1, #0x2
	b		_0805f2de

_0805f2d8:	.4byte 0x00000115

_0805f2dc:
	mov		r1, #0x1
_0805f2de:
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0805f2bc

	thumb_func_start sub_0805f2e4
sub_0805f2e4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r4, #0x58
	mov		r5, #0x0
	mov		r6, #0x1
_0805f2ee:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805f30a
	ldr		r1, [r4, #0xc]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	bl		sub_080bbc74
_0805f30a:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	ble		_0805f2ee
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5F322, 0x2
	thumb_func_end sub_0805f2e4

	thumb_func_start sub_0805f324
sub_0805f324:
	push	{ r4, r5, lr }
	ldr		r1, _0805f360
	add		r2, r0, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x2
	ble		_0805f370
	ldr		r3, _0805f364
	ldr		r1, [r3, #0x0]
	ldr		r4, _0805f368
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_0805f346
	mov		r5, #0xef
	lsl		r5, r5, #0x10
	add		r0, r1, r5
_0805f346:
	str		r0, [r3, #0x0]
	ldr		r3, _0805f36c
	ldr		r1, [r3, #0x0]
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_0805f358
	mov		r4, #0x9f
	lsl		r4, r4, #0x10
	add		r0, r1, r4
_0805f358:
	str		r0, [r3, #0x0]
	mov		r0, #0x0
	b		_0805f372

.incbin "base.gba", 0x5F35E, 0x2

_0805f360:	.4byte 0x0000325A
_0805f364:	.4byte 0x0200CE30
_0805f368:	.4byte 0xffff0000
_0805f36c:	.4byte 0x0200CE44

_0805f370:
	add		r0, r1, #0x1
_0805f372:
	strb	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5F37A, 0x2
	thumb_func_end sub_0805f324

	thumb_func_start sub_0805f37c
sub_0805f37c:
	ldr		r2, _0805f398
	add		r3, r0, r2
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	ldr		r2, [r3, #0x0]
	add		r2, r2, r1
	str		r2, [r3, #0x0]
	ldr		r2, _0805f39c
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	add		r2, r2, r1
	str		r2, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x5F396, 0x2

_0805f398:	.4byte 0x000007E4
_0805f39c:	.4byte 0x000008A8
	thumb_func_end sub_0805f37c

	thumb_func_start sub_0805f3a0
sub_0805f3a0:
	push	{ r4, lr }
	mov		r3, #0xc0
	lsl		r3, r3, #0x5
	mov		r4, #0xfc
	lsl		r4, r4, #0x3
	add		r2, r0, r4
	str		r3, [r2, #0x0]
	add		r4, #0x4
	add		r2, r0, r4
	str		r1, [r2, #0x0]
	add		r4, #0xc0
	add		r2, r0, r4
	str		r3, [r2, #0x0]
	ldr		r2, _0805f3c8
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5F3C6, 0x2

_0805f3c8:	.4byte 0x000008A8
	thumb_func_end sub_0805f3a0

	thumb_func_start sub_0805f3cc
sub_0805f3cc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	ldr		r1, _0805f40c
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x5
	ble		_0805f442
	mov		r0, #0x54
	bl		sub_0808f690
	ldr		r0, _0805f410
	add		r2, r4, r0
	lsl		r0, r5, #0x10
	asr		r3, r0, #0x10
	neg		r1, r3
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0xb
	str		r0, [r2, #0x0]
	cmp		r3, #0x0
	ble		_0805f41c
	ldr		r2, _0805f414
	add		r1, r2, #0x0
	cmp		r3, #0x1
	ble		_0805f430
	ldr		r0, _0805f418
	b		_0805f42e

.incbin "base.gba", 0x5F40A, 0x2

_0805f40c:	.4byte 0x0000325D
_0805f410:	.4byte 0x00003250
_0805f414:	.4byte 0xFFFFFE00
_0805f418:	.4byte 0xFFFFFC00

_0805f41c:
	mov		r0, #0x1
	neg		r0, r0
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r1, r2, #0x0
	cmp		r3, r0
	bge		_0805f430
	mov		r0, #0x80
	lsl		r0, r0, #0x3
_0805f42e:
	add		r1, r0, #0x0
_0805f430:
	ldr		r2, _0805f448
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x4
	mov		r3, #0x0
	bl		sub_080b7724
_0805f442:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0805f448:	.4byte 0x00003254
	thumb_func_end sub_0805f3cc

	thumb_func_start sub_0805f44c
sub_0805f44c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r0, _0805f484
	add		r7, r5, r0
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	lsl		r1, r1, #0x10
	asr		r4, r1, #0x10
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	lsl		r1, r6, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x4
	bhi		_0805f47a
	ldr		r2, _0805f488
	add		r0, r5, r2
	asr		r1, r1, #0x10
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r1, r0
	blt		_0805f48c
_0805f47a:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0805f3cc
	b		_0805f4ac

_0805f484:	.4byte 0x00003259
_0805f488:	.4byte 0x0000325D

_0805f48c:
	mov		r0, #0x54
	bl		sub_0808f690
	ldr		r1, _0805f4b4
	add		r0, r5, r1
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	lsl		r1, r1, #0xb
	str		r1, [r0, #0x0]
	strb	r6, [r7, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
_0805f4ac:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5F4B2, 0x2

_0805f4b4:	.4byte 0x00003250
	thumb_func_end sub_0805f44c

	thumb_func_start sub_0805f4b8
sub_0805f4b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	mov		r9, r1
	ldr		r0, _0805f544
	str		r0, [r6, #0x4c]
	ldr		r0, _0805f548
	str		r0, [r6, #0xc]
	ldr		r1, _0805f54c
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_0805f4e2
_0805f4d6:
	add		r0, r4, #0x0
	bl		sub_0808afac
	ldr		r4, [r4, #0x4]
	cmp		r4, #0x0
	bne		_0805f4d6
_0805f4e2:
	ldr		r0, _0805f550
	bl		sub_08002268
	add		r5, r6, #0x0
	add		r5, #0x58
	add		r7, r6, #0x0
	add		r7, #0x54
	mov		r0, #0x40
	add		r0, r0, r6
	mov		r8, r0
	cmp		r5, #0x0
	beq		_0805f510
	ldr		r1, _0805f554
	add		r4, r6, r1
	cmp		r5, r4
	beq		_0805f510
_0805f502:
	sub		r4, #0xc4
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0804f0ec
	cmp		r5, r4
	bne		_0805f502
_0805f510:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08018f4c
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805f538
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0805f538:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805f544:	.4byte 0x080e034c
_0805f548:	.4byte 0x080e2094
_0805f54c:	.4byte 0x00003248
_0805f550:	.4byte 0x00000835
_0805f554:	.4byte 0x00002E48
	thumb_func_end sub_0805f4b8

	thumb_func_start sub_0805f558
sub_0805f558:
	push	{ lr }
	sub		sp, #0x3c
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805f578
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	add		sp, #0x3c
	pop		{ r0 }
	bx		r0

_0805f578:	.4byte 0x0200BAFC
	thumb_func_end sub_0805f558

	thumb_func_start sub_0805f57c
sub_0805f57c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x120
	add		r7, r0, #0x0
	mov		r0, #0x54
	add		r0, r0, r7
	mov		r9, r0
	mov		r4, #0x0
	mov		r1, sp
	add		r1, #0x2
	str		r1, [sp, #0x114]
	mov		r2, #0x3
	add		r2, sp
	mov		r10, r2
	mov		r3, sp
	add		r3, #0x1
	str		r3, [sp, #0x110]
	mov		r0, sp
	add		r0, #0x3c
	str		r0, [sp, #0x118]
	add		r1, #0x9c
	str		r1, [sp, #0x11C]
	mov		r2, #0x2
	neg		r2, r2
	add		r5, r2, #0x0
_0805f5b4:
	mov		r0, r9
	add		r0, #0x14
	bl		sub_0808e1ac
	mov		r1, r9
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	and		r0, r5
	strb	r0, [r1, #0x0]
	mov		r3, #0xc4
	add		r9, r3
	lsl		r0, r4, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x13
	ble		_0805f5b4
	ldr		r0, _0805f92c
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	ldr		r0, _0805f930
	bl		sub_0800223c
	ldr		r0, _0805f934
	bl		sub_0800223c
	ldr		r0, _0805f938
	bl		sub_0800223c
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0805f93c
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	ldr		r3, _0805f940
	str		r3, [sp, #0x100]
	mov		r1, #0x87
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	ldrb	r4, [r0, #0x0]
	bl		sub_0805f558
	ldr		r0, _0805f944
	ldr		r0, [r0, #0x0]
	ldr		r1, _0805f948
	add		r6, r4, #0x0
	lsl		r2, r6, #0x2
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	bl		sub_0808b7e0
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0805f644
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
_0805f644:
	mov		r2, #0x54
	add		r2, r2, r7
	mov		r9, r2
	mov		r0, r9
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	add		r0, r7, #0x0
	add		r0, #0xf8
	mov		r3, #0xe0
	lsl		r3, r3, #0x6
	str		r3, [r0, #0x0]
	add		r0, #0x4
	mov		r1, #0xa0
	lsl		r1, r1, #0x7
	str		r1, [r0, #0x0]
	mov		r4, #0x1
	sub		r0, #0x2b
	strb	r4, [r0, #0x0]
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	strh	r3, [r0, #0x0]
	neg		r1, r6
	orr		r1, r6
	lsr		r1, r1, #0x1f
	ldr		r0, _0805f94c
	add		r3, r7, r0
	and		r1, r4
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r1, r1, r7
	mov		r9, r1
	ldr		r2, _0805f950
	ldrb	r0, [r2, #0x0]
	add		r1, r4, #0x0
	and		r1, r0
	add		r1, #0x12
	mov		r0, r9
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r3, _0805f950
	ldrb	r1, [r3, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	add		r0, #0x12
	mov		r1, #0x1
	bl		sub_08009650
	mov		r1, #0xde
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0xe0
	lsl		r2, r2, #0x6
	str		r2, [r0, #0x0]
	mov		r3, #0xe0
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r1, #0xa0
	lsl		r1, r1, #0x7
	str		r1, [r0, #0x0]
	ldr		r2, _0805f954
	add		r0, r7, r2
	strb	r4, [r0, #0x0]
	add		r3, #0x18
	add		r1, r7, r3
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	ldr		r0, _0805f958
	add		r1, r7, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x4
	add		r3, r3, r7
	mov		r9, r3
	mov		r0, r9
	mov		r1, #0x1c
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xa1
	lsl		r1, r1, #0x8
	mov		r2, #0x8c
	lsl		r2, r2, #0x6
	mov		r3, #0xa0
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xa1
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0805f95c
	add		r0, r7, r2
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	mov		r0, #0x9c
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	ldr		r3, _0805f960
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x5
	add		r3, r3, r7
	mov		r9, r3
	mov		r0, r9
	mov		r1, #0x1f
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xd1
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0xe0
	lsl		r2, r2, #0x6
	str		r2, [r0, #0x0]
	mov		r3, #0xd2
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r1, #0xa0
	lsl		r1, r1, #0x7
	str		r1, [r0, #0x0]
	ldr		r2, _0805f964
	add		r0, r7, r2
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	mov		r0, #0xcd
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	mov		r3, #0xd8
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r0, #0xa0
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
	ldr		r0, _0805f968
	add		r1, r7, r0
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x4
	add		r3, r3, r7
	mov		r9, r3
	mov		r0, r9
	mov		r1, #0x24
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x88
	lsl		r1, r1, #0x7
	mov		r2, #0x81
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805f96c
	add		r0, r7, r3
	strb	r4, [r0, #0x0]
	mov		r0, #0xfe
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r3, #0x43
	add		r0, r7, r3
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	strh	r1, [r0, #0x0]
	ldr		r2, _0805f970
	add		r1, r7, r2
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x1
	orr		r0, r3
	strb	r0, [r1, #0x0]
	mov		r0, #0x85
	lsl		r0, r0, #0x3
	add		r0, r0, r7
	mov		r9, r0
	mov		r1, #0x23
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xf0
	lsl		r1, r1, #0x7
	mov		r2, #0xe0
	lsl		r2, r2, #0x7
	ldr		r3, _0805f974
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	mov		r1, #0x9a
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0805f978
	add		r0, r7, r2
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	ldr		r0, _0805f97c
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	ldr		r3, _0805f980
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r6, [sp, #0x100]
	add		r6, #0x47
	ldrb	r0, [r6, #0x0]
	ldr		r5, [sp, #0x100]
	add		r5, #0x48
	ldrb	r1, [r5, #0x0]
	bl		sub_08016ad8
	add		r1, r0, #0x0
	ldr		r3, _0805f984
	add		r3, r3, r7
	mov		r9, r3
	lsl		r1, r1, #0x10
	asr		r4, r1, #0x10
	mov		r0, #0x9c
	lsl		r0, r0, #0xe
	add		r1, r1, r0
	lsr		r1, r1, #0x10
	mov		r0, r9
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r1, _0805f988
	mov		r8, r1
	ldr		r0, [r1, #0x0]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	add		r0, #0x27
	mov		r1, #0x1
	bl		sub_08009650
	mov		r1, #0xd2
	lsl		r1, r1, #0x7
	mov		r2, #0xb2
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	ldr		r3, _0805f98c
	add		r0, r7, r3
	mov		r1, #0xb6
	lsl		r1, r1, #0x7
	str		r1, [r0, #0x0]
	sub		r2, #0x27
	add		r0, r7, r2
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	mov		r0, #0xb0
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	ldr		r3, _0805f990
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r3, _0805f950
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x2
	ble		_0805f8b0
	mov		r0, #0x2
_0805f8b0:
	mov		r1, #0xb6
	lsl		r1, r1, #0x3
	add		r1, r1, r7
	mov		r9, r1
	lsl		r1, r0, #0x10
	asr		r4, r1, #0x10
	mov		r2, #0xe4
	lsl		r2, r2, #0xe
	add		r1, r1, r2
	lsr		r1, r1, #0x10
	mov		r0, r9
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	add		r4, r4, r0
	ldrb	r0, [r4, #0x12]
	add		r0, #0x27
	mov		r1, #0x1
	bl		sub_08009650
	mov		r1, #0x91
	lsl		r1, r1, #0x8
	ldr		r2, _0805f994
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xcb
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	mov		r1, #0xb6
	lsl		r1, r1, #0x7
	str		r1, [r0, #0x0]
	sub		r2, #0x27
	add		r0, r7, r2
	mov		r3, #0x2
	strb	r3, [r0, #0x0]
	ldr		r0, _0805f998
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x4
	orr		r0, r2
	strh	r0, [r1, #0x0]
	ldr		r3, _0805f99c
	add		r1, r7, r3
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r0, _0805f9a0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0805f9a4
	ldrb	r0, [r5, #0x0]
	ldr		r3, [sp, #0x114]
	strb	r0, [r3, #0x0]
	ldrb	r0, [r6, #0x0]
	mov		r1, r10
	strb	r0, [r1, #0x0]
	b		_0805f9b0

_0805f92c:	.4byte 0x0200D58C
_0805f930:	.4byte 0x00000B08
_0805f934:	.4byte 0x00000B09
_0805f938:	.4byte 0x00000B0A
_0805f93c:	.4byte 0x0200BB0C
_0805f940:	.4byte 0x02000F90
_0805f944:	.4byte 0x0200BF08
_0805f948:	.4byte 0x0200D584
_0805f94c:	.4byte 0x00000113
_0805f950:	.4byte 0x02000FD9
_0805f954:	.4byte 0x00000195
_0805f958:	.4byte 0x000001D7
_0805f95c:	.4byte 0x00000259
_0805f960:	.4byte 0x0000029B
_0805f964:	.4byte 0x0000031D
_0805f968:	.4byte 0x0000035F
_0805f96c:	.4byte 0x000003E1
_0805f970:	.4byte 0x00000423
_0805f974:	.4byte 0x000004CC
_0805f978:	.4byte 0x000004A5
_0805f97c:	.4byte 0x000004BC
_0805f980:	.4byte 0x000004E7
_0805f984:	.4byte 0x000004EC
_0805f988:	.4byte 0x0200D580
_0805f98c:	.4byte 0x00000594
_0805f990:	.4byte 0x000005AB
_0805f994:	.4byte 0x00000654
_0805f998:	.4byte 0x00000644
_0805f99c:	.4byte 0x0000066F
_0805f9a0:	.4byte 0x00000836

_0805f9a4:
	ldrb	r0, [r6, #0x0]
	ldr		r2, [sp, #0x114]
	strb	r0, [r2, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r3, r10
	strb	r0, [r3, #0x0]
_0805f9b0:
	mov		r4, sp
	ldr		r1, [sp, #0x114]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	mov		r1, #0xa
	bl		sub_080bbcac
	strb	r0, [r4, #0x0]
	ldr		r2, [sp, #0x114]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	ldr		r3, [sp, #0x110]
	strb	r0, [r3, #0x0]
	mov		r0, r10
	ldrb	r1, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x9
	bgt		_0805f9ea
	ldr		r2, [sp, #0x114]
	strb	r1, [r2, #0x0]
	mov		r0, #0xff
	mov		r3, r10
	strb	r0, [r3, #0x0]
	b		_0805fa0a
_0805f9ea:
	mov		r1, r10
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	mov		r1, #0xa
	bl		sub_080bbcac
	ldr		r2, [sp, #0x114]
	strb	r0, [r2, #0x0]
	mov		r3, r10
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	mov		r1, #0xa
	bl		sub_080bbd44
	mov		r1, r10
	strb	r0, [r1, #0x0]
_0805fa0a:
	mov		r2, #0xc4
	add		r9, r2
	mov		r0, sp
	ldrb	r2, [r0, #0x0]
	mov		r0, r9
	mov		r1, #0xd
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x91
	lsl		r1, r1, #0x8
	mov		r6, #0xac
	lsl		r6, r6, #0x6
	mov		r0, r9
	add		r0, #0xa4
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r6, [r0, #0x0]
	mov		r5, #0x2
	sub		r0, #0x2b
	strb	r5, [r0, #0x0]
	mov		r1, r9
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	mov		r4, #0x4
	mov		r3, #0x0
	add		r2, sp, #0x104
	strh	r3, [r2, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	ble		_0805fa54
	mov		r3, #0x1
_0805fa54:
	mov		r2, r9
	add		r2, #0xbf
	mov		r7, #0x1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	mov		r8, r0
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	mov		r1, #0xc4
	add		r9, r1
	ldr		r3, [sp, #0x110]
	ldrb	r2, [r3, #0x0]
	mov		r0, r9
	mov		r1, #0xd
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x9b
	lsl		r1, r1, #0x8
	mov		r0, r9
	add		r0, #0xa4
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r6, [r0, #0x0]
	sub		r0, #0x2b
	strb	r5, [r0, #0x0]
	mov		r1, r9
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		r1, #0x2b
	ldrb	r0, [r1, #0x0]
	orr		r0, r7
	strb	r0, [r1, #0x0]
	mov		r0, #0xc4
	add		r9, r0
	ldr		r1, [sp, #0x114]
	ldrb	r2, [r1, #0x0]
	mov		r0, r9
	mov		r1, #0xd
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xb9
	lsl		r1, r1, #0x8
	mov		r0, r9
	add		r0, #0xa4
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r6, [r0, #0x0]
	sub		r0, #0x2b
	strb	r5, [r0, #0x0]
	mov		r1, r9
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		r1, #0x2b
	ldrb	r0, [r1, #0x0]
	orr		r0, r7
	strb	r0, [r1, #0x0]
	mov		r2, #0xc4
	add		r9, r2
	mov		r3, r10
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x0
	blt		_0805fb14
	ldrb	r2, [r3, #0x0]
	mov		r0, r9
	mov		r1, #0xd
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc3
	lsl		r1, r1, #0x8
	mov		r0, r9
	add		r0, #0xa4
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r6, [r0, #0x0]
	sub		r0, #0x2b
	strb	r5, [r0, #0x0]
	mov		r1, r9
	add		r1, #0x94
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		r1, #0x2b
	ldrb	r0, [r1, #0x0]
	orr		r0, r7
	strb	r0, [r1, #0x0]
	b		_0805fb20
_0805fb14:
	mov		r2, r9
	add		r2, #0xbf
	ldrb	r1, [r2, #0x0]
	mov		r0, r8
	and		r0, r1
	strb	r0, [r2, #0x0]
_0805fb20:
	mov		r0, #0xc4
	add		r9, r0
	mov		r0, r9
	mov		r1, #0xd
	mov		r2, #0xb
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xaa
	lsl		r1, r1, #0x8
	mov		r2, #0xac
	lsl		r2, r2, #0x6
	mov		r0, r9
	add		r0, #0xa4
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	mov		r0, #0x2
	mov		r1, r9
	add		r1, #0x7d
	strb	r0, [r1, #0x0]
	mov		r2, r9
	add		r2, #0x94
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x4
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r2, #0x2b
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _0805fc58
	mov		r8, r1
	ldr		r0, _0805fc5c
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	add		r0, #0xa0
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r2, _0805fc60
	mov		r10, r2
	mov		r0, r10
	mov		r1, #0x0
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r3, #0x18
	ldrsh	r0, [r1, r3]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	mov		r0, #0x18
	add		r0, r0, r4
	mov		r9, r0
	mov		r0, #0x8
	strh	r0, [r4, #0x2c]
	add		r1, r4, #0x0
	add		r1, #0x30
	str		r1, [sp, #0x108]
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	add		r1, r8
	ldr		r0, [sp, #0x108]
	mov		r2, #0xa2
	bl		sub_0808c818
	add		r7, r4, #0x0
	add		r7, #0x32
	ldr		r2, [sp, #0x108]
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	mov		r0, #0x13
	mov		r3, #0x4
	strh	r3, [r4, #0x28]
	strh	r0, [r4, #0x2a]
	mov		r0, r9
	add		r1, r7, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	mov		r0, r10
	mov		r1, #0x1
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldr		r0, _0805fc64
	add		r1, sp, #0x3c
	bl		sub_080180f8
	add		r5, r4, #0x0
	add		r5, #0x18
	mov		r3, #0x0
	strh	r3, [r4, #0x2c]
	add		r0, r4, #0x0
	add		r0, #0x30
	str		r0, [sp, #0x10C]
	ldr		r1, [sp, #0x118]
	mov		r2, #0xa2
	bl		sub_0808c818
	add		r7, r4, #0x0
	add		r7, #0x32
	ldr		r1, [sp, #0x10C]
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	mov		r0, #0x19
	mov		r3, #0x4
	strh	r3, [r4, #0x28]
	strh	r0, [r4, #0x2a]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	ldr		r0, [sp, #0x10C]
	ldr		r1, [sp, #0x11C]
	mov		r2, #0xa2
	bl		sub_0808c818
	ldr		r1, [sp, #0x10C]
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	mov		r0, #0x2b
	mov		r3, #0x4
	strh	r3, [r4, #0x28]
	strh	r0, [r4, #0x2a]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
	ldr		r1, _0805fc68
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
	add		sp, #0x120
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0805fc58:	.4byte 0x02000BAC
_0805fc5c:	.4byte 0x000004F3
_0805fc60:	.4byte 0x0200AA18
_0805fc64:	.4byte 0x02000FDC
_0805fc68:	.4byte 0x02008AD4
	thumb_func_end sub_0805f57c

	thumb_func_start sub_0805fc6c
sub_0805fc6c:
	push	{ r4, lr }
	ldr		r4, _0805fc80
	ldr		r0, _0805fc84
	bl		sub_08002148
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5FC7E, 0x2

_0805fc80:	.4byte 0x0200BB0C
_0805fc84:	.4byte 0x080d377c @ scrMA_DrawProfileCardInit
	thumb_func_end sub_0805fc6c

	thumb_func_start sub_0805fc88
sub_0805fc88:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r4, #0x54
	mov		r5, #0x0
	mov		r6, #0x1
_0805fc92:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805fcae
	ldr		r1, [r4, #0xc]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	bl		sub_080bbc74
_0805fcae:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x13
	ble		_0805fc92
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5FCC6, 0x2
	thumb_func_end sub_0805fc88

	thumb_func_start sub_0805fcc8
sub_0805fcc8:
	push	{ r4, r5, lr }
	ldr		r1, _0805fd04
	add		r2, r0, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x2
	ble		_0805fd14
	ldr		r3, _0805fd08
	ldr		r1, [r3, #0x0]
	ldr		r4, _0805fd0c
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_0805fcea
	mov		r5, #0xef
	lsl		r5, r5, #0x10
	add		r0, r1, r5
_0805fcea:
	str		r0, [r3, #0x0]
	ldr		r3, _0805fd10
	ldr		r1, [r3, #0x0]
	add		r0, r1, r4
	cmp		r0, #0x0
	bge		_0805fcfc
	mov		r4, #0x9f
	lsl		r4, r4, #0x10
	add		r0, r1, r4
_0805fcfc:
	str		r0, [r3, #0x0]
	mov		r0, #0x0
	b		_0805fd16

.incbin "base.gba", 0x5FD02, 0x2

_0805fd04:	.4byte 0x00000FA4
_0805fd08:	.4byte 0x0200CE30
_0805fd0c:	.4byte 0xffff0000
_0805fd10:	.4byte 0x0200CE44

_0805fd14:
	add		r0, r1, #0x1
_0805fd16:
	strb	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5FD1E, 0x62
	thumb_func_end sub_0805fcc8

	thumb_func_start sub_0805fd80
sub_0805fd80:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0805fdc8
	str		r0, [r5, #0x4c]
	ldr		r0, _0805fdcc
	str		r0, [r5, #0xc]
	add		r4, r5, #0x0
	add		r4, #0x54
	mov		r6, #0x13
	mov		r7, #0x1
	neg		r7, r7
_0805fda2:
	add		r0, r4, #0x0
	bl		sub_0804f084
	add		r4, #0xc4
	sub		r6, #0x1
	cmp		r6, r7
	bne		_0805fda2
	ldr		r0, _0805fdd0
	add		r1, r5, r0
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_0805f57c
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5FDC6, 0x2

_0805fdc8:	.4byte 0x080e034c
_0805fdcc:	.4byte 0x080e20bc
_0805fdd0:	.4byte 0x00000FA4
	thumb_func_end sub_0805fd80

	thumb_func_start sub_0805fdd4
sub_0805fdd4:
	push	{ r4, lr }
	add		r4, r0, #0x0
_0805fdd8:
	add		r0, r4, #0x0
	bl		sub_0805fcc8
	add		r0, r4, #0x0
	bl		sub_0805fc88
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0805fdd8
	thumb_func_end sub_0805fdd4

	thumb_func_start sub_0805fdec
sub_0805fdec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	add		r6, r0, #0x0
	cmp		r1, #0x7
	bls		_0805fe02
	bl		sub_080607de
_0805fe02:
	lsl		r0, r1, #0x2
	ldr		r1, _0805fe0c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0805fe0c:	.4byte 0x0805fe10
_0805fe10:	.4byte 0x0805fe30

.incbin "base.gba", 0x5FE14, 0x1C
	thumb_func_end sub_0805fdec


.incbin "base.gba", 0x5FE30, 0x9AE
	non_word_aligned_thumb_func_start sub_080607de
sub_080607de:
	ldr		r0, _080607fc
	ldr		r1, _08060800
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x607FA, 0x2

_080607fc:	.4byte 0x080d3798 @ m_aioi/maProfile2.cpp
_08060800:	.4byte 0x000001ED
	thumb_func_end sub_080607de

	thumb_func_start sub_08060804
sub_08060804:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _080608a8
	str		r0, [r6, #0x4c]
	ldr		r0, _080608ac
	str		r0, [r6, #0xc]
	add		r4, r6, #0x0
	add		r4, #0x58
	mov		r5, #0x13
	mov		r7, #0x1
	neg		r7, r7
_08060826:
	add		r0, r4, #0x0
	bl		sub_0804f084
	add		r4, #0xc4
	sub		r5, #0x1
	cmp		r5, r7
	bne		_08060826
	ldr		r1, _080608b0
	add		r0, r6, r1
	mov		r3, #0x0
	strb	r3, [r0, #0x0]
	ldr		r1, _080608b4
	ldr		r2, _080608b8
	add		r0, r1, r2
	ldrb	r2, [r0, #0x0]
	ldr		r4, _080608bc
	add		r0, r6, r4
	strb	r2, [r0, #0x0]
	ldr		r2, _080608c0
	add		r0, r6, r2
	strb	r3, [r0, #0x0]
	ldr		r4, _080608c4
	add		r1, r1, r4
	ldrb	r1, [r1, #0x0]
	add		r2, #0x6
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	ldr		r4, _080608c8
	add		r0, r6, r4
	mov		r4, #0x0
	strh	r3, [r0, #0x0]
	ldr		r0, _080608cc
	add		r2, r6, r0
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _080608d0
	add		r0, r6, r1
	strb	r4, [r0, #0x0]
	mov		r1, #0x0
	ldr		r2, _080608d0
	add		r7, r6, r2
_0806087c:
	mov		r4, #0x0
	ldrsb	r4, [r7, r4]
	lsl		r0, r1, #0x10
	asr		r5, r0, #0x10
	ldr		r1, _080608d4
	add		r0, r5, r1
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08060892
	add		r4, #0x1
_08060892:
	strb	r4, [r7, #0x0]
	add		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x50
	ble		_0806087c
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080608a8:	.4byte 0x080e034c
_080608ac:	.4byte 0x080e20e4
_080608b0:	.4byte 0x00000FAA
_080608b4:	.4byte 0x02000BAC
_080608b8:	.4byte 0x000004F2
_080608bc:	.4byte 0x00000FAD
_080608c0:	.4byte 0x00000FAB
_080608c4:	.4byte 0x000004F3
_080608c8:	.4byte 0x00000FA8
_080608cc:	.4byte 0x00000FB2
_080608d0:	.4byte 0x00000FAF
_080608d4:	.4byte 0x000003C6
	thumb_func_end sub_08060804

	thumb_func_start sub_080608d8
sub_080608d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	mov		r10, r0
	mov		r7, r10
	add		r7, #0x58
	mov		r4, #0x0
	mov		r0, #0x2
	neg		r0, r0
	add		r5, r0, #0x0
_080608f2:
	add		r0, r7, #0x0
	add		r0, #0x14
	bl		sub_0808e1ac
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	and		r0, r5
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	lsl		r0, r4, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x13
	ble		_080608f2
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _08060a8c
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	mov		r7, r10
	add		r7, #0x58
	add		r0, r7, #0x0
	mov		r1, #0xb
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r2, #0x96
	lsl		r2, r2, #0x8
	mov		r8, r2
	mov		r0, r10
	add		r0, #0xfc
	mov		r1, #0xb0
	lsl		r1, r1, #0x6
	str		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r10
	str		r2, [r0, #0x0]
	mov		r6, #0x1
	mov		r2, #0x1
	mov		r9, r2
	mov		r0, r10
	add		r0, #0xd5
	strb	r6, [r0, #0x0]
	mov		r1, r10
	add		r1, #0xec
	ldrh	r0, [r1, #0x0]
	mov		r4, #0x4
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r0, #0x8c
	lsl		r0, r0, #0x1
	add		r0, r10
	mov		r5, #0x88
	lsl		r5, r5, #0x5
	strh	r5, [r0, #0x0]
	ldr		r1, _08060a90
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	mov		r2, r9
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r7, #0x8e
	lsl		r7, r7, #0x1
	add		r7, r10
	add		r0, r7, #0x0
	mov		r1, #0xb
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xde
	lsl		r1, r1, #0x7
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r0, r10
	str		r1, [r0, #0x0]
	mov		r0, #0xe2
	lsl		r0, r0, #0x1
	add		r0, r10
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r0, _08060a94
	add		r0, r10
	strb	r6, [r0, #0x0]
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	add		r1, r10
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r0, r10
	strh	r5, [r0, #0x0]
	ldr		r1, _08060a98
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	mov		r2, r9
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r7, #0xf0
	lsl		r7, r7, #0x1
	add		r7, r10
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xc8
	lsl		r1, r1, #0x8
	mov		r0, #0xa1
	lsl		r0, r0, #0x2
	add		r0, r10
	str		r1, [r0, #0x0]
	mov		r0, #0xa2
	lsl		r0, r0, #0x2
	add		r0, r10
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r0, _08060a9c
	add		r0, r10
	strb	r6, [r0, #0x0]
	mov		r1, #0x9d
	lsl		r1, r1, #0x2
	add		r1, r10
	ldrh	r0, [r1, #0x0]
	orr		r4, r0
	strh	r4, [r1, #0x0]
	mov		r0, #0xa8
	lsl		r0, r0, #0x2
	add		r0, r10
	strh	r5, [r0, #0x0]
	ldr		r1, _08060aa0
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	mov		r2, r9
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r7, #0xa9
	lsl		r7, r7, #0x2
	add		r7, r10
	add		r0, r7, #0x0
	mov		r1, #0xb
	mov		r2, #0x2
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r0, _08060aa4
	add		r0, r10
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl		r0, r1, #0x4
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0x8
	mov		r1, #0xb0
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	mov		r1, #0xd2
	lsl		r1, r1, #0x2
	add		r1, r10
	str		r0, [r1, #0x0]
	mov		r0, #0xd3
	lsl		r0, r0, #0x2
	add		r0, r10
	mov		r2, r8
	str		r2, [r0, #0x0]
	ldr		r0, _08060aa8
	add		r0, r10
	strb	r6, [r0, #0x0]
	mov		r1, #0xd9
	lsl		r1, r1, #0x2
	add		r1, r10
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	ldr		r1, _08060aac
	add		r1, r10
	ldrb	r0, [r1, #0x0]
	mov		r2, r9
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x60A8A, 0x2

_08060a8c:	.4byte 0x0200BB14
_08060a90:	.4byte 0x00000117
_08060a94:	.4byte 0x00000199
_08060a98:	.4byte 0x000001DB
_08060a9c:	.4byte 0x0000025D
_08060aa0:	.4byte 0x0000029F
_08060aa4:	.4byte 0x00000FAA
_08060aa8:	.4byte 0x00000321
_08060aac:	.4byte 0x00000363
	thumb_func_end sub_080608d8

	thumb_func_start sub_08060ab0
sub_08060ab0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x9c
	mov		r9, r0
	mov		r7, r9
	add		r7, #0x58
	mov		r4, #0x0
	mov		r0, #0x2
	neg		r0, r0
	add		r5, r0, #0x0
_08060aca:
	add		r0, r7, #0x0
	add		r0, #0x14
	bl		sub_0808e1ac
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	and		r0, r5
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	lsl		r0, r4, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x13
	ble		_08060aca
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _08060bdc
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	ldr		r0, _08060be0
	ldr		r2, _08060be4
	add		r0, r0, r2
	ldrb	r1, [r0, #0x0]
	ldr		r0, _08060be8
	add		r0, r9
	strb	r1, [r0, #0x0]
	ldr		r0, _08060bec
	add		r0, r9
	strb	r1, [r0, #0x0]
	mov		r6, r9
	add		r6, #0x58
	mov		r0, r9
	add		r0, #0xfc
	str		r0, [sp, #0x84]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r1, r9
	str		r1, [sp, #0x88]
	mov		r2, r9
	add		r2, #0xd5
	str		r2, [sp, #0x60]
	mov		r0, #0x8c
	lsl		r0, r0, #0x1
	add		r0, r9
	str		r0, [sp, #0x94]
	ldr		r5, _08060bf0
	add		r5, r9
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r1, r9
	str		r1, [sp, #0x98]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r2, r9
	str		r2, [sp, #0x74]
	mov		r0, #0xe2
	lsl		r0, r0, #0x1
	add		r0, r9
	str		r0, [sp, #0x78]
	ldr		r1, _08060bf4
	add		r1, r9
	str		r1, [sp, #0x50]
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r2, r9
	str		r2, [sp, #0x8c]
	ldr		r0, _08060bf8
	add		r0, r9
	mov		r8, r0
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r1, r9
	str		r1, [sp, #0x90]
	mov		r2, #0xa1
	lsl		r2, r2, #0x2
	add		r2, r9
	str		r2, [sp, #0x5c]
	mov		r0, #0xa2
	lsl		r0, r0, #0x2
	add		r0, r9
	str		r0, [sp, #0x64]
	ldr		r1, _08060bfc
	add		r1, r9
	str		r1, [sp, #0x48]
	mov		r2, #0xa8
	lsl		r2, r2, #0x2
	add		r2, r9
	str		r2, [sp, #0x7c]
	ldr		r0, _08060c00
	add		r0, r9
	mov		r10, r0
	mov		r1, #0xa9
	lsl		r1, r1, #0x2
	add		r1, r9
	str		r1, [sp, #0x80]
	ldr		r2, _08060c04
	add		r2, r9
	str		r2, [sp, #0x40]
	mov		r0, #0xd9
	lsl		r0, r0, #0x2
	add		r0, r9
	str		r0, [sp, #0x6c]
	ldr		r1, _08060c08
	add		r1, r9
	str		r1, [sp, #0x68]
	mov		r2, #0xda
	lsl		r2, r2, #0x2
	add		r2, r9
	str		r2, [sp, #0x70]
	ldr		r0, _08060c0c
	add		r0, r9
	str		r0, [sp, #0x44]
	mov		r1, #0x82
	lsl		r1, r1, #0x3
	add		r1, r9
	str		r1, [sp, #0x4c]
	ldr		r2, _08060c10
	add		r2, r9
	str		r2, [sp, #0x3c]
	mov		r0, #0x85
	lsl		r0, r0, #0x3
	add		r0, r9
	str		r0, [sp, #0x58]
	ldr		r1, _08060c14
	add		r1, r9
	str		r1, [sp, #0x54]
	b		_08060c28

_08060bdc:	.4byte 0x0200BB10
_08060be0:	.4byte 0x02000BAC
_08060be4:	.4byte 0x000004F2
_08060be8:	.4byte 0x00000FAD
_08060bec:	.4byte 0x00000FAE
_08060bf0:	.4byte 0x00000117
_08060bf4:	.4byte 0x00000199
_08060bf8:	.4byte 0x000001DB
_08060bfc:	.4byte 0x0000025D
_08060c00:	.4byte 0x0000029F
_08060c04:	.4byte 0x00000321
_08060c08:	.4byte 0x00000363
_08060c0c:	.4byte 0x0000040C
_08060c10:	.4byte 0x000003E5
_08060c14:	.4byte 0x00000427

_08060c18:
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	ldr		r2, _08060c5c
	add		r0, r0, r2
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08060c46
_08060c28:
	ldr		r1, _08060c60
	add		r1, r9
	ldrb	r2, [r1, #0x0]
	sub		r0, r2, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_08060c3e
	add		r0, r2, #0x0
	add		r0, #0x50
	strb	r0, [r1, #0x0]
_08060c3e:
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bne		_08060c18
_08060c46:
	ldr		r0, _08060c64
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x1
	ble		_08060c92
	ldr		r4, _08060c60
	add		r4, r9
	b		_08060c78

.incbin "base.gba", 0x60C5A, 0x2

_08060c5c:	.4byte 0x000003C5
_08060c60:	.4byte 0x00000FAE
_08060c64:	.4byte 0x00000FAF

_08060c68:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	ldr		r1, _08060f08
	add		r0, r0, r1
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08060c92
_08060c78:
	ldrb	r1, [r4, #0x0]
	sub		r0, r1, #0x1
	strb	r0, [r4, #0x0]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_08060c8a
	add		r0, r1, #0x0
	add		r0, #0x50
	strb	r0, [r4, #0x0]
_08060c8a:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	bne		_08060c68
_08060c92:
	mov		r0, r9
	mov		r1, #0x1
	bl		sub_08061040
	add		r7, r6, #0x0
	add		r0, r7, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0xa0
	lsl		r0, r0, #0x6
	ldr		r2, [sp, #0x84]
	str		r0, [r2, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x7
	ldr		r1, [sp, #0x88]
	str		r0, [r1, #0x0]
	mov		r6, #0x1
	ldr		r2, [sp, #0x60]
	strb	r6, [r2, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x5
	ldr		r0, [sp, #0x94]
	strh	r1, [r0, #0x0]
	ldr		r4, _08060f0c
	add		r4, r9
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	and		r1, r6
	ldrb	r2, [r5, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r5, #0x0]
	mov		r0, r9
	mov		r1, #0x1
	bl		sub_08061040
	ldr		r7, [sp, #0x98]
	add		r0, r7, #0x0
	mov		r1, #0xf
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r5, #0xf0
	lsl		r5, r5, #0x7
	ldr		r2, [sp, #0x74]
	str		r5, [r2, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x7
	ldr		r1, [sp, #0x78]
	str		r0, [r1, #0x0]
	ldr		r2, [sp, #0x50]
	strb	r6, [r2, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x5
	ldr		r0, [sp, #0x8c]
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	and		r1, r6
	mov		r0, r8
	ldrb	r2, [r0, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	mov		r1, r8
	strb	r0, [r1, #0x0]
	mov		r0, r9
	mov		r1, #0x1
	bl		sub_08061040
	ldr		r7, [sp, #0x90]
	add		r0, r7, #0x0
	mov		r1, #0x10
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0xc8
	lsl		r0, r0, #0x8
	ldr		r2, [sp, #0x5c]
	str		r0, [r2, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x7
	ldr		r1, [sp, #0x64]
	str		r0, [r1, #0x0]
	ldr		r2, [sp, #0x48]
	strb	r6, [r2, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x5
	ldr		r0, [sp, #0x7c]
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	and		r1, r6
	mov		r0, r10
	ldrb	r2, [r0, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	mov		r1, r10
	strb	r0, [r1, #0x0]
	ldr		r0, _08060f10
	bl		sub_0800223c
	ldr		r0, _08060f14
	bl		sub_0800223c
	ldr		r0, _08060f18
	bl		sub_08002268
	bl		sub_0805f558
	ldr		r0, _08060f1c
	ldr		r0, [r0, #0x0]
	ldr		r1, _08060f20
	ldr		r1, [r1, #0x0]
	bl		sub_0808b7e0
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_08060dba
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
_08060dba:
	ldr		r7, [sp, #0x80]
	add		r0, r7, #0x0
	mov		r1, #0x11
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldr		r2, [sp, #0x40]
	strb	r6, [r2, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x5
	ldr		r0, [sp, #0x6c]
	strh	r1, [r0, #0x0]
	ldr		r2, [sp, #0x68]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r7, [sp, #0x70]
	ldr		r4, _08060f24
	ldr		r0, _08060f28
	add		r4, r4, r0
	ldrb	r0, [r4, #0x0]
	add		r1, r6, #0x0
	and		r1, r0
	add		r1, #0x12
	add		r0, r7, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	ldrb	r1, [r4, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	add		r0, #0x12
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r1, [sp, #0x44]
	str		r5, [r1, #0x0]
	mov		r2, #0xca
	lsl		r2, r2, #0x7
	ldr		r0, [sp, #0x4c]
	str		r2, [r0, #0x0]
	ldr		r1, [sp, #0x3c]
	strb	r6, [r1, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	ldr		r2, [sp, #0x58]
	strh	r0, [r2, #0x0]
	ldr		r1, [sp, #0x54]
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r0, _08060f2c
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08060e3a
	b		_08060f64
_08060e3a:
	ldr		r7, _08060f30
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0xa
	mov		r2, #0xa
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	mov		r5, #0xb8
	lsl		r5, r5, #0x7
	mov		r0, #0x9a
	lsl		r0, r0, #0x3
	add		r0, r9
	str		r1, [r0, #0x0]
	ldr		r0, _08060f34
	add		r0, r9
	str		r5, [r0, #0x0]
	ldr		r0, _08060f38
	add		r0, r9
	strb	r6, [r0, #0x0]
	ldr		r0, _08060f3c
	add		r0, r9
	mov		r4, #0x80
	lsl		r4, r4, #0x5
	strh	r4, [r0, #0x0]
	ldr		r1, _08060f40
	add		r1, r9
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r7, #0x9e
	lsl		r7, r7, #0x3
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0xa
	mov		r2, #0x12
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0xe2
	lsl		r1, r1, #0x8
	ldr		r0, _08060f44
	add		r0, r9
	str		r1, [r0, #0x0]
	mov		r0, #0xb3
	lsl		r0, r0, #0x3
	add		r0, r9
	str		r5, [r0, #0x0]
	ldr		r0, _08060f48
	add		r0, r9
	strb	r6, [r0, #0x0]
	mov		r0, #0xb6
	lsl		r0, r0, #0x3
	add		r0, r9
	strh	r4, [r0, #0x0]
	ldr		r1, _08060f4c
	add		r1, r9
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r7, _08060f50
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r1, #0x96
	lsl		r1, r1, #0x8
	mov		r0, #0xcb
	lsl		r0, r0, #0x3
	add		r0, r9
	str		r1, [r0, #0x0]
	ldr		r0, _08060f54
	add		r0, r9
	str		r1, [r0, #0x0]
	ldr		r0, _08060f58
	add		r0, r9
	strb	r6, [r0, #0x0]
	ldr		r0, _08060f5c
	add		r0, r9
	strh	r4, [r0, #0x0]
	ldr		r1, _08060f60
	add		r1, r9
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x0]
	mov		r7, #0xcf
	lsl		r7, r7, #0x3
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r3, #0x2
	bl		sub_0804f150
	b		_08060f76

.incbin "base.gba", 0x60F06, 0x2

_08060f08:	.4byte 0x000003C5
_08060f0c:	.4byte 0x00000FAE
_08060f10:	.4byte 0x00000B08
_08060f14:	.4byte 0x00000B09
_08060f18:	.4byte 0x00000B0A
_08060f1c:	.4byte 0x0200BF08
_08060f20:	.4byte 0x0200D584
_08060f24:	.4byte 0x02000BAC
_08060f28:	.4byte 0x0000042D
_08060f2c:	.4byte 0x00000FAF
_08060f30:	.4byte 0x0000042C
_08060f34:	.4byte 0x000004D4
_08060f38:	.4byte 0x000004A9
_08060f3c:	.4byte 0x000004EC
_08060f40:	.4byte 0x000004EB
_08060f44:	.4byte 0x00000594
_08060f48:	.4byte 0x0000056D
_08060f4c:	.4byte 0x000005AF
_08060f50:	.4byte 0x000005B4
_08060f54:	.4byte 0x0000065C
_08060f58:	.4byte 0x00000631
_08060f5c:	.4byte 0x00000674
_08060f60:	.4byte 0x00000673

_08060f64:
	mov		r7, #0xcf
	lsl		r7, r7, #0x3
	add		r7, r9
	add		r0, r7, #0x0
	mov		r1, #0xc
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
_08060f76:
	mov		r1, #0xc8
	lsl		r1, r1, #0x8
	mov		r2, #0x96
	lsl		r2, r2, #0x8
	add		r0, r7, #0x0
	add		r0, #0xa4
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	mov		r5, #0x1
	mov		r6, #0x1
	sub		r0, #0x2b
	strb	r5, [r0, #0x0]
	add		r0, #0x43
	mov		r4, #0x80
	lsl		r4, r4, #0x5
	strh	r4, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	add		r0, r7, #0x0
	mov		r1, #0x22
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x22
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0xf0
	lsl		r0, r0, #0x7
	mov		r8, r0
	mov		r1, #0x8b
	lsl		r1, r1, #0x8
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r2, r8
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	sub		r0, #0x2b
	strb	r5, [r0, #0x0]
	add		r0, #0x43
	strh	r4, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	add		r7, #0xc4
	add		r0, r7, #0x0
	mov		r1, #0x26
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_0804f150
	mov		r0, #0x26
	mov		r1, #0x1
	bl		sub_08009650
	mov		r1, #0xc0
	lsl		r1, r1, #0x3
	add		r0, r7, #0x0
	add		r0, #0xa4
	mov		r2, r8
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	sub		r0, #0x2b
	strb	r5, [r0, #0x0]
	add		r0, #0x43
	strh	r4, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xbf
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
	mov		r0, r9
	bl		sub_080611ac
	ldr		r0, _08061038
	ldr		r1, _0806103c
	mov		r2, #0x0
	bl		sub_08001090
	add		sp, #0x9c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08061038:	.4byte 0x00001C42
_0806103c:	.4byte 0x00000D07
	thumb_func_end sub_08060ab0

	thumb_func_start sub_08061040
sub_08061040:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	cmp		r1, #0x0
	ble		_08061074
	ldr		r0, _08061068
	add		r2, r5, r0
	ldrb	r1, [r2, #0x0]
	ldr		r3, _0806106c
	add		r0, r5, r3
	strb	r1, [r0, #0x0]
	ldr		r0, _08061070
	b		_08061082

.incbin "base.gba", 0x61066, 0x2

_08061068:	.4byte 0x00000FAD
_0806106c:	.4byte 0x00000FAC
_08061070:	.4byte 0x00000FAE

_08061074:
	ldr		r1, _0806109c
	add		r2, r5, r1
	ldrb	r1, [r2, #0x0]
	ldr		r3, _080610a0
	add		r0, r5, r3
	strb	r1, [r0, #0x0]
	ldr		r0, _080610a4
_08061082:
	add		r1, r5, r0
	ldrb	r0, [r1, #0x0]
	strb	r0, [r2, #0x0]
	add		r4, r1, #0x0
	lsl		r7, r6, #0x10
	ldr		r1, _080610a8
	mov		r8, r1
	ldr		r2, _080610ac
	mov		r9, r2
	ldr		r3, _080610b0
	mov		r10, r3
	b		_080610c4

.incbin "base.gba", 0x6109A, 0x2

_0806109c:	.4byte 0x00000FAD
_080610a0:	.4byte 0x00000FAE
_080610a4:	.4byte 0x00000FAC
_080610a8:	.4byte 0x080d37b0
_080610ac:	.4byte 0x080d37b4
_080610b0:	.4byte 0x080d37b8

_080610b4:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	ldr		r1, _080610d8
	add		r0, r0, r1
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_080610ee
_080610c4:
	ldrb	r0, [r4, #0x0]
	add		r1, r0, r6
	strb	r1, [r4, #0x0]
	lsl		r0, r1, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_080610dc
	add		r0, r1, #0x0
	add		r0, #0x51
	b		_080610e4

_080610d8:	.4byte 0x000003C5

_080610dc:
	cmp		r0, #0x50
	ble		_080610e6
	add		r0, r1, #0x0
	sub		r0, #0x51
_080610e4:
	strb	r0, [r4, #0x0]
_080610e6:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	bne		_080610b4
_080610ee:
	ldr		r2, _08061194
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x1
	bne		_0806111c
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	beq		_0806111c
	ldr		r3, _08061198
	add		r0, r5, r3
	sub		r2, #0x1
	add		r1, r5, r2
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r2, r0
	bne		_0806111c
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
_0806111c:
	ldr		r0, _0806119c
	bl		sub_0800223c
	ldr		r0, _080611a0
	bl		sub_0800223c
	ldr		r0, _080611a4
	bl		sub_0800223c
	mov		r3, r8
	ldr		r5, [r3, #0x0]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08061140
	ldr		r1, _080611a8
	add		r0, r0, r1
	bl		sub_08002268
_08061140:
	bl		sub_0805f558
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r3, r10
	ldr		r1, [r3, #0x0]
	mov		r2, #0x0
	ldrsb	r2, [r4, r2]
	lsl		r2, r2, #0x2
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	bl		sub_0808b7e0
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_08061176
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	mov		r0, sp
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
_08061176:
	asr		r0, r7, #0x10
	ldr		r1, [r5, #0x0]
	add		r1, r1, r0
	mov		r0, #0x3
	and		r1, r0
	str		r1, [r5, #0x0]
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x61192, 0x2

_08061194:	.4byte 0x00000FAF
_08061198:	.4byte 0x00000FAC
_0806119c:	.4byte 0x00000B08
_080611a0:	.4byte 0x00000B09
_080611a4:	.4byte 0x00000B0A
_080611a8:	.4byte 0x00000B07
	thumb_func_end sub_08061040

	thumb_func_start sub_080611ac
sub_080611ac:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r0, _08061214
	mov		r1, #0x0
	bl		sub_0800ed80
	add		r6, r0, #0x0
	ldr		r1, [r6, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldr		r0, _08061218
	add		r4, r4, r0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	bl		sub_080068c8
	add		r4, r0, #0x0
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800f2c8
	bl		sub_0800f288
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r1, #0x48
	sub		r1, r1, r0
	ldrb	r2, [r5, #0x0]
	mov		r0, #0x12
	add		r5, #0x1
	strh	r1, [r6, #0x28]
	strh	r0, [r6, #0x2a]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	ldr		r1, _0806121c
	mov		r0, #0x1
	strb	r0, [r1, #0x18]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08061214:	.4byte 0x0200AA18
_08061218:	.4byte 0x00000FAD
_0806121c:	.4byte 0x02008AD4
	thumb_func_end sub_080611ac

	thumb_func_start sub_08061220
sub_08061220:
	push	{ r4, lr }
	ldr		r4, _0806123c
	ldr		r0, _08061240
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _08061244
	ldr		r0, _08061248
	bl		sub_08002148
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0806123c:	.4byte 0x0200BB14
_08061240:	.4byte 0x080d37bc @ scrMA_ProfileCardInit
_08061244:	.4byte 0x0200BB10
_08061248:	.4byte 0x080d37d4 @ scrMA_ProfileClothesInit
	thumb_func_end sub_08061220

	thumb_func_start sub_0806124c
sub_0806124c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r4, #0x58
	mov		r5, #0x0
	mov		r6, #0x1
_08061256:
	add		r0, r4, #0x0
	add		r0, #0xbf
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08061272
	ldr		r1, [r4, #0xc]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x24]
	bl		sub_080bbc74
_08061272:
	add		r4, #0xc4
	lsl		r0, r5, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r0, r0, r1
	lsr		r5, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x13
	ble		_08061256
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6128A, 0x44E

_080616d8:	.4byte 0x0806172c

.incbin "base.gba", 0x616DC, 0x50
	thumb_func_end sub_0806124c


.incbin "base.gba", 0x6172C, 0xDDA

_08062506:

.incbin "base.gba", 0x62506, 0x141C

_08063922:

.incbin "base.gba", 0x63922, 0x962
	thumb_func_start sub_08064284
sub_08064284:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	bl		sub_080b74f4
	add		r0, r6, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _080642e8
	str		r0, [r6, #0x4c]
	ldr		r0, _080642ec
	str		r0, [r6, #0xc]
	ldr		r2, _080642f0
	ldr		r1, _080642f4
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	str		r0, [r2, #0x0]
	mov		r5, #0x1
	strh	r5, [r1, #0x0]
	ldr		r1, _080642f8
	ldr		r0, _080642fc
	str		r0, [r1, #0x0]
	ldr		r0, _08064300
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r0, #0xe8
	bl		sub_0808afb8
	str		r0, [r6, #0x68]
	ldr		r0, _08064304
	str		r4, [r0, #0x0]
	ldr		r0, _08064308
	strh	r5, [r0, #0x0]
	ldr		r0, _0806430c
	mov		r1, #0x0
	strh	r4, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x6e
	strb	r1, [r0, #0x0]
	sub		r0, #0x2
	strb	r1, [r0, #0x0]
	sub		r0, #0x18
	strh	r4, [r0, #0x0]
	bl		sub_08064fa8
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x642E6, 0x2

_080642e8:	.4byte 0x080e034c
_080642ec:	.4byte 0x080e210c
_080642f0:	.4byte 0x0200BB28
_080642f4:	.4byte 0x0200CDBC
_080642f8:	.4byte 0x0200BB2C
_080642fc:	.4byte 0x0806493d
_08064300:	.4byte 0x0200BB30
_08064304:	.4byte 0x0200BB1C
_08064308:	.4byte 0x0200BB20
_0806430c:	.4byte 0x0200BB22
	thumb_func_end sub_08064284

	thumb_func_start sub_08064310
sub_08064310:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _08064394
	str		r0, [r5, #0x4c]
	ldr		r0, _08064398
	str		r0, [r5, #0xc]
	ldr		r0, _0806439c
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0806433a
	add		r4, r0, #0x0
_08064328:
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	add		r0, r1, #0x0
	bl		sub_0808afac
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bne		_08064328
_0806433a:
	bl		sub_08064ef4
	ldr		r0, [r5, #0x68]
	cmp		r0, #0x0
	beq		_08064348
	bl		sub_0808afd0
_08064348:
	ldr		r3, _080643a0
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
	ldr		r2, _080643a4
	ldr		r1, _080643a8
	ldr		r0, [r1, #0xc]
	str		r0, [r2, #0x0]
	add		r4, r2, #0x0
	sub		r4, #0x8
	ldr		r0, [r1, #0x4]
	str		r0, [r4, #0x0]
	ldr		r0, [r1, #0x1c]
	str		r0, [r2, #0x10]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	ldr		r1, _080643ac
	ldr		r0, _080643b0
	ldr		r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_0806438e
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0806438e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08064394:	.4byte 0x080e034c
_08064398:	.4byte 0x080e210c
_0806439c:	.4byte 0x0200BB1C
_080643a0:	.4byte 0x04000208
_080643a4:	.4byte 0x02000020
_080643a8:	.4byte 0x080c7128
_080643ac:	.4byte 0x0200CDBC
_080643b0:	.4byte 0x0200BB28
	thumb_func_end sub_08064310

	thumb_func_start sub_080643b4
sub_080643b4:
	push	{ lr }
	add		r2, r1, #0x0
	add		r0, r2, #0x0
	add		r0, #0x47
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xc
	bhi		_0806442c
	cmp		r0, #0x0
	beq		_0806442c
	add		r0, r2, #0x0
	add		r0, #0x48
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1f
	bhi		_0806442c
	cmp		r0, #0x0
	beq		_0806442c
	add		r0, r2, #0x0
	add		r0, #0x49
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bhi		_0806442c
	mov		r1, #0x87
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x50
	bhi		_0806442c
	ldr		r1, _08064420
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x14
	bhi		_0806442c
	ldr		r0, [r2, #0x0]
	ldr		r1, _08064424
	and		r0, r1
	ldr		r1, _08064428
	cmp		r0, r1
	bhi		_0806442c
	ldrb	r0, [r2, #0x4]
	cmp		r0, #0x28
	bhi		_0806442c
	ldrb	r0, [r2, #0x5]
	cmp		r0, #0x28
	bhi		_0806442c
	ldrh	r2, [r2, #0x6]
	mov		r1, #0xff
	lsl		r1, r1, #0x8
	add		r0, r1, #0x0
	and		r0, r2
	cmp		r0, r1
	bne		_0806442c
	mov		r0, #0x1
	b		_0806442e

.incbin "base.gba", 0x6441E, 0x2

_08064420:	.4byte 0x0000010F
_08064424:	.4byte 0x00FFFFFF
_08064428:	.4byte 0x00FEFFFF

_0806442c:
	mov		r0, #0x0
_0806442e:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x64432, 0x272
	push	{ r4, lr }
	ldr		r4, _080646b8
	ldr		r0, _080646bc
	bl		sub_0800f354
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x646B6, 0x2

_080646b8:	.4byte 0x0200BB18
_080646bc:	.4byte 0x080d3828 @ ms_evcard_title
	thumb_func_end sub_080643b4

	thumb_func_start sub_080646c0
sub_080646c0:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	mov		r8, r1
	add		r6, r2, #0x0
	mov		r0, #0x4c
	bl		sub_0808af94
	add		r4, r0, #0x0
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	str		r6, [r4, #0x48]
	add		r1, r4, #0x4
	mov		r0, r8
	mov		r2, #0x21
	bl		sub_080bb5fc
	add		r5, #0x6e
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	strb	r0, [r5, #0x0]
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080646c0

	thumb_func_start sub_080646f8
sub_080646f8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	bl		sub_08065fec
	ldr		r1, _08064728
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x2]
	cmp		r0, #0x0
	beq		_08064722
	ldr		r6, _0806472c
	add		r5, r1, #0x0
_0806470e:
	ldr		r0, [r6, #0x0]
	bl		sub_080bbc70
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x2]
	cmp		r0, #0x0
	bne		_0806470e
_08064722:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08064728:	.4byte 0x0200CCD0
_0806472c:	.4byte 0x0200BB38
	thumb_func_end sub_080646f8

	thumb_func_start sub_08064730
sub_08064730:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	ldr		r0, [r4, #0x0]
	ldr		r2, _08064794
	and		r0, r2
	ldr		r1, [r5, #0x0]
	and		r1, r2
	cmp		r0, r1
	bne		_08064798
	add		r0, r4, #0x4
	add		r1, r5, #0x4
	bl		sub_0804ee9c
	cmp		r0, #0x0
	bne		_08064798
	add		r0, r4, #0x0
	add		r0, #0x46
	add		r1, r5, #0x0
	add		r1, #0x46
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_08064798
	add		r0, r4, #0x0
	add		r0, #0x47
	add		r1, r5, #0x0
	add		r1, #0x47
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_08064798
	add		r0, r4, #0x0
	add		r0, #0x48
	add		r1, r5, #0x0
	add		r1, #0x48
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_08064798
	add		r0, r4, #0x0
	add		r0, #0x49
	add		r1, r5, #0x0
	add		r1, #0x49
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_08064798
	mov		r0, #0x1
	b		_0806479a

_08064794:	.4byte 0x00FFFFFF

_08064798:
	mov		r0, #0x0
_0806479a:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x647A0, 0x94
	thumb_func_end sub_08064730

	thumb_func_start sub_08064834
sub_08064834:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	ldr		r0, _08064870
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08064858
	add		r4, r0, #0x0
_08064846:
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	add		r0, r1, #0x0
	bl		sub_0808afac
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bne		_08064846
_08064858:
	add		r0, r5, #0x0
	add		r0, #0x6e
	strb	r6, [r0, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x8
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08064870:	.4byte 0x0200BB1C
	thumb_func_end sub_08064834

	thumb_func_start sub_08064874
sub_08064874:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	ldr		r0, _080648b0
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08064898
	add		r4, r0, #0x0
_08064886:
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	add		r0, r1, #0x0
	bl		sub_0808afac
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bne		_08064886
_08064898:
	add		r0, r5, #0x0
	add		r0, #0x6e
	strb	r6, [r0, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0xd
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080648b0:	.4byte 0x0200BB1C

.incbin "base.gba", 0x648B4, 0x88
	bx		lr

.incbin "base.gba", 0x6493E, 0x2
	thumb_func_end sub_08064874

	thumb_func_start sub_08064940
sub_08064940:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, #0x6c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08064966
	ldr		r0, _0806496c
	ldr		r1, [r0, #0x0]
	ldr		r0, _08064970
	add		r0, #0xcd
	ldrb	r0, [r0, #0x0]
	add		r1, #0xc9
	strb	r0, [r1, #0x0]
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0xe
	mov		r3, #0x0
	bl		sub_080b7724
_08064966:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6496A, 0x2

_0806496c:	.4byte 0x030072D4
_08064970:	.4byte 0x02000BAC

.incbin "base.gba", 0x64974, 0xE0
	thumb_func_end sub_08064940

	thumb_func_start sub_08064a54
sub_08064a54:
	push	{ lr }
	ldr		r0, _08064a68
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08064a62
	add		r1, r0, #0x4
_08064a62:
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1

_08064a68:	.4byte 0x0200BB1C
	thumb_func_end sub_08064a54

	thumb_func_start sub_08064a6c
sub_08064a6c:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08064a84
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08064a88
	add		r0, r1, #0x0
	add		r0, #0x6c
	ldrb	r0, [r0, #0x0]
	b		_08064a8a

.incbin "base.gba", 0x64A82, 0x2

_08064a84:	.4byte 0x0200BB40

_08064a88:
	mov		r0, #0x0
_08064a8a:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x64A8E, 0x2A
	thumb_func_end sub_08064a6c

	thumb_func_start sub_08064ab8
sub_08064ab8:
	push	{ lr }
	ldr		r0, _08064acc
	ldr		r3, [r0, #0x0]
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x1
	beq		_08064ad0
	cmp		r0, #0x2
	beq		_08064b12
	mov		r0, #0x0
	b		_08064b1a

_08064acc:	.4byte 0x0200BB40

_08064ad0:
	ldr		r2, _08064af8
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x19
	lsr		r0, r0, #0x1c
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x3
	beq		_08064afc
	ldrh	r0, [r3, #0x4]
	add		r0, #0x1
	strh	r0, [r3, #0x4]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x5
	ble		_08064b00
	mov		r0, #0x1
	b		_08064b1a

.incbin "base.gba", 0x64AF6, 0x2

_08064af8:	.4byte 0x080d3838

_08064afc:
	mov		r0, #0x0
	strh	r0, [r3, #0x4]
_08064b00:
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x1]
	lsl		r0, r1, #0x1b
	lsr		r0, r0, #0x1f
	lsl		r1, r1, #0x1a
	lsr		r1, r1, #0x1f
	orr		r0, r1
	b		_08064b1a
_08064b12:
	ldr		r0, _08064b20
	ldr		r0, [r0, #0x0]
	add		r0, #0xd4
	ldrb	r0, [r0, #0x0]
_08064b1a:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x64B1E, 0x2

_08064b20:	.4byte 0x030072D4
	push	{ r4, r5, lr }
	bl		sub_08066230
	ldr		r4, _08064b68
	cmp		r0, #0x0
	beq		_08064b88
	ldr		r5, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_08064b88
	bl		sub_08091d94
	bl		sub_08091cb8
	ldr		r2, _08064b6c
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	ldr		r1, _08064b70
	ldr		r0, _08064b74
	str		r0, [r1, #0x0]
	mov		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r1, _08064b78
	ldr		r0, _08064b7c
	str		r0, [r1, #0x0]
	ldr		r1, _08064b80
	ldr		r0, _08064b84
	str		r0, [r1, #0x0]
	ldr		r1, [r5, #0x0]
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	b		_08064bc8

.incbin "base.gba", 0x64B66, 0x2

_08064b68:	.4byte 0x080d383c
_08064b6c:	.4byte 0x04000208
_08064b70:	.4byte 0x0200BB2C
_08064b74:	.4byte 0x08066225
_08064b78:	.4byte 0x0200BB3C
_08064b7c:	.4byte 0x08064DD1
_08064b80:	.4byte 0x0200BB38
_08064b84:	.4byte 0x08064d61

_08064b88:
	ldr		r0, _08064bd0
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r2, r0, r3
	bl		sub_08065004
	ldr		r1, _08064bd4
	ldr		r0, _08064bd8
	str		r0, [r1, #0x0]
	ldr		r2, _08064bdc
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	ldr		r1, _08064be0
	ldr		r0, _08064be4
	str		r0, [r1, #0x0]
	ldr		r1, _08064be8
	ldr		r0, _08064bec
	ldr		r0, [r0, #0x0]
	mov		r3, #0xc2
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	strh	r0, [r1, #0x4]
_08064bc8:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x64BCE, 0x2

_08064bd0:	.4byte 0x03006410
_08064bd4:	.4byte 0x0200BB34
_08064bd8:	.4byte 0x08064bf1
_08064bdc:	.4byte 0x04000208
_08064be0:	.4byte 0x0200BB2C
_08064be4:	.4byte sub_080653b0
_08064be8:	.4byte 0x0200BB30
_08064bec:	.4byte 0x030072D4
	push	{ r4, r5, r6, lr }
	bl		sub_0806558c
	bl		sub_0806534c
	bl		sub_08065140
	ldr		r1, _08064c60
	ldr		r0, [r1, #0x0]
	ldr		r5, [r0, #0x0]
	ldrb	r2, [r5, #0x1]
	lsl		r0, r2, #0x1c
	lsr		r3, r0, #0x1c
	mov		r0, #0x3
	and		r3, r0
	add		r6, r1, #0x0
	cmp		r3, #0x3
	bne		_08064c78
	lsl		r0, r2, #0x1b
	lsr		r4, r0, #0x1f
	lsl		r0, r2, #0x1a
	lsr		r0, r0, #0x1f
	orr		r4, r0
	mov		r1, #0x0
	mov		r0, #0x40
	and		r0, r2
	cmp		r0, #0x0
	beq		_08064c38
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x19
	lsr		r0, r0, #0x1c
	add		r1, r3, #0x0
	bic		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r1, r0, #0x1f
_08064c38:
	orr		r1, r4
	cmp		r1, #0x0
	bne		_08064c78
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x1e
	lsr		r0, r0, #0x1e
	cmp		r0, #0x1
	bhi		_08064cb6
	ldr		r0, _08064c64
	ldr		r2, [r0, #0x0]
	strh	r1, [r2, #0x4]
	ldr		r1, _08064c68
	ldr		r0, _08064c6c
	str		r0, [r1, #0x0]
	ldr		r1, _08064c70
	ldr		r0, _08064c74
	str		r0, [r1, #0x0]
	mov		r0, #0x1
	strb	r0, [r2, #0x0]
	b		_08064cb8

_08064c60:	.4byte 0x080d3840
_08064c64:	.4byte 0x0200BB40
_08064c68:	.4byte 0x0200BB3C
_08064c6c:	.4byte sub_08064e1c
_08064c70:	.4byte 0x0200BB38
_08064c74:	.4byte 0x08064da9

_08064c78:
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x19
	lsr		r4, r0, #0x1c
	mov		r0, #0xe
	and		r4, r0
	cmp		r4, #0x0
	bne		_08064cb6
	ldr		r5, _08064cc0
	ldr		r1, [r5, #0x0]
	ldrh	r0, [r1, #0x4]
	add		r0, #0x1
	strh	r0, [r1, #0x4]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x1e
	ble		_08064cb6
	bl		sub_08065528
	ldr		r0, _08064cc4
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r2, r0, r3
	bl		sub_08065004
	ldr		r0, [r5, #0x0]
	strh	r4, [r0, #0x4]
_08064cb6:
	mov		r0, #0x0
_08064cb8:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x64CBE, 0x2

_08064cc0:	.4byte 0x0200BB40
_08064cc4:	.4byte 0x03006410

.incbin "base.gba", 0x64CC8, 0x98
	push	{ lr }
	bl		sub_08065668
	ldr		r0, _08064d84
	ldr		r0, [r0, #0x0]
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x3f
	bne		_08064d94
	ldr		r0, _08064d88
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r1, _08064d8c
	ldr		r0, _08064d90
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	b		_08064da4

_08064d84:	.4byte 0x030072D4
_08064d88:	.4byte 0x0200BB40
_08064d8c:	.4byte 0x0200BB38
_08064d90:	.4byte 0x08064dc9 @ _@BpG

_08064d94:
	bl		sub_08064ab8
	lsl		r0, r0, #0x10
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08064da2
	sub		r1, #0x1
_08064da2:
	add		r0, r1, #0x0
_08064da4:
	pop		{ r1 }
	bx		r1
	push	{ lr }
	bl		sub_0806534c
	bl		sub_08065140
	bl		sub_08064ab8
	lsl		r0, r0, #0x10
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08064dc0
	sub		r1, #0x1
_08064dc0:
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x64DC6, 0x9
	thumb_func_end sub_08064ab8


.incbin "base.gba", 0x64DCF, 0x1
	thumb_func_start sub_08064dd0
sub_08064dd0:

	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r1, r2, #0x10
	ldr		r6, _08064e10
	ldr		r3, [r6, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xd2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08064e14
	lsl		r1, r1, #0x10
	asr		r1, r1, #0xc
	add		r1, #0x22
	add		r1, r3, r1
	lsl		r0, r4, #0x10
	asr		r2, r0, #0x10
	lsr		r0, r0, #0x1f
	add		r2, r2, r0
	lsl		r2, r2, #0xa
	lsr		r2, r2, #0xb
	add		r0, r5, #0x0
	bl		sub_080bb5fc
	ldr		r0, [r6, #0x0]
	add		r0, #0xd2
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	mov		r0, #0x0
	b		_08064e16

_08064e10:	.4byte 0x030072D4

_08064e14:
	mov		r0, #0x1
_08064e16:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08064dd0

	thumb_func_start sub_08064e1c
sub_08064e1c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x10
	ldr		r0, _08064e54
	ldr		r3, [r0, #0x0]
	ldrb	r1, [r3, #0x0]
	lsl		r2, r1, #0x19
	lsr		r2, r2, #0x1c
	lsl		r1, r1, #0x1e
	lsr		r1, r1, #0x1e
	mov		r0, #0x1
	lsl		r0, r1
	and		r2, r0
	cmp		r2, #0x0
	beq		_08064e58
	add		r1, r3, #0x2
	lsl		r0, r4, #0x10
	asr		r2, r0, #0x10
	lsr		r0, r0, #0x1f
	add		r2, r2, r0
	lsl		r2, r2, #0xa
	lsr		r2, r2, #0xb
	add		r0, r5, #0x0
	bl		sub_080bb5fc
	mov		r0, #0x0
	b		_08064e5a

_08064e54:	.4byte 0x0200BB44

_08064e58:
	mov		r0, #0x1
_08064e5a:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x64E60, 0x40
	thumb_func_end sub_08064e1c

	thumb_func_start sub_08064ea0
sub_08064ea0:
	push	{ lr }
	ldr		r0, _08064eb4
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08064eb8
	cmp		r0, #0x2
	beq		_08064ee4
	mov		r0, #0x1
	b		_08064eea

_08064eb4:	.4byte 0x0200BB40

_08064eb8:
	mov		r3, #0x0
	ldr		r0, _08064ee0
	ldr		r2, [r0, #0x0]
	ldrb	r0, [r2, #0x1]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08064ed8
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08064eda
_08064ed8:
	mov		r3, #0x1
_08064eda:
	add		r0, r3, #0x0
	b		_08064eea

.incbin "base.gba", 0x64EDE, 0x2

_08064ee0:	.4byte 0x0200BB44

_08064ee4:
	ldr		r0, _08064ef0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
_08064eea:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x64EEE, 0x2

_08064ef0:	.4byte 0x0200CCD0
	thumb_func_end sub_08064ea0

	thumb_func_start sub_08064ef4
sub_08064ef4:
	push	{ r4, lr }
	ldr		r1, _08064f10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_08064f38
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08064f14
	bl		sub_0806611c
	b		_08064f18

.incbin "base.gba", 0x64F0E, 0x2

_08064f10:	.4byte 0x080d3844

_08064f14:
	bl		sub_08065528
_08064f18:
	ldr		r2, _08064f40
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _08064f44
	ldr		r1, _08064f48
	str		r1, [r0, #0x0]
	ldr		r0, _08064f4c
	str		r1, [r0, #0x0]
	mov		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r4, [r4, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0808afac
	mov		r0, #0x0
	str		r0, [r4, #0x0]
_08064f38:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x64F3E, 0x2

_08064f40:	.4byte 0x04000208
_08064f44:	.4byte 0x0200BB2C
_08064f48:	.4byte 0x08064f51
_08064f4c:	.4byte 0x0200BB30
	bx		lr

.incbin "base.gba", 0x64F52, 0x2
	thumb_func_end sub_08064ef4

	thumb_func_start sub_08064f54
sub_08064f54:
	push	{ r4, lr }
	sub		sp, #0x8
	ldr		r4, [sp, #0x0+0x10]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	str		r4, [sp, #0x0]
	mov		r4, #0x3
	str		r4, [sp, #0x4]
	bl		sub_080655a4
	ldr		r2, _08064f90
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	ldr		r1, _08064f94
	ldr		r0, _08064f98
	str		r0, [r1, #0x0]
	mov		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r1, _08064f9c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r1, _08064fa0
	ldr		r0, _08064fa4
	str		r0, [r1, #0x0]
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08064f90:	.4byte 0x04000208
_08064f94:	.4byte 0x0200BB2C
_08064f98:	.4byte 0x08066225
_08064f9c:	.4byte 0x0200BB30
_08064fa0:	.4byte 0x0200BB34
_08064fa4:	.4byte 0x08064b25
	thumb_func_end sub_08064f54

	thumb_func_start sub_08064fa8
sub_08064fa8:
	push	{ r4, lr }
	sub		sp, #0x8
	ldr		r4, _08064ff0
	mov		r0, #0x6
	bl		sub_0808af94
	add		r1, r0, #0x0
	str		r1, [r4, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x4]
	ldr		r2, _08064ff4
	add		r0, sp, #0x4
	bl		sub_080bb5fc
	str		r4, [sp, #0x4]
	ldr		r4, _08064ff8
	ldr		r2, _08064ffc
	add		r0, sp, #0x4
	add		r1, r4, #0x0
	bl		sub_080bb5fc
	add		r4, #0x60
	ldr		r2, _08065000
	add		r3, r2, #0x0
	add		r3, #0xc
	mov		r0, #0x3
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0806625c
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x64FEE, 0x2

_08064ff0:	.4byte 0x0200BB40
_08064ff4:	.4byte 0x05000001
_08064ff8:	.4byte 0x03006410
_08064ffc:	.4byte 0x050003B1
_08065000:	.4byte 0x02000018
	thumb_func_end sub_08064fa8

	thumb_func_start sub_08065004
sub_08065004:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	mov		r0, #0x0
	mov		r9, r0
	ldr		r1, _08065104
	strh	r0, [r1, #0x0]
	ldr		r7, _08065108
	ldrh	r1, [r7, #0x0]
	ldr		r0, _0806510c
	and		r0, r1
	strh	r0, [r7, #0x0]
	ldr		r2, _08065110
	mov		r10, r2
	ldrh	r0, [r2, #0x0]
	mov		r1, #0xc0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	ldr		r5, _08065104
	strh	r0, [r5, #0x0]
	ldr		r0, _08065114
	mov		r1, r9
	strh	r1, [r0, #0x0]
	sub		r2, #0xda
	mov		r5, #0x80
	lsl		r5, r5, #0x6
	add		r0, r5, #0x0
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	ldr		r5, _08065118
	add		r1, r5, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r5, _0806511c
	str		r3, [r5, #0x0]
	mov		r0, sp
	mov		r1, r9
	strh	r1, [r0, #0x0]
	ldr		r2, _08065120
	add		r1, r3, #0x0
	bl		sub_080bb5fc
	ldr		r0, _08065124
	str		r4, [r0, #0x0]
	mov		r0, sp
	mov		r2, r9
	strh	r2, [r0, #0x0]
	ldr		r2, _08065128
	add		r1, r4, #0x0
	bl		sub_080bb5fc
	ldr		r3, [r5, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r4, r3, r0
	str		r6, [r4, #0x0]
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	mov		r8, r1
	add		r3, r8
	ldr		r2, _0806512c
	ldr		r0, _08065130
	sub		r2, r2, r0
	lsr		r1, r2, #0x2
	lsl		r1, r1, #0x2
	add		r6, r6, r1
	str		r6, [r3, #0x0]
	ldr		r1, [r4, #0x0]
	lsr		r2, r2, #0x1
	ldr		r4, _08065134
	and		r2, r4
	bl		sub_080bb5fc
	ldr		r0, _08065138
	ldr		r1, [r5, #0x0]
	add		r1, r8
	ldr		r1, [r1, #0x0]
	ldr		r2, _0806513c
	sub		r2, r2, r0
	lsr		r2, r2, #0x1
	and		r2, r4
	bl		sub_080bb5fc
	ldr		r1, [r5, #0x0]
	mov		r0, #0x17
	str		r0, [r1, #0x14]
	str		r0, [r1, #0x18]
	add		r0, r1, #0x0
	add		r0, #0x30
	str		r0, [r1, #0x1c]
	add		r0, #0x18
	str		r0, [r1, #0x20]
	add		r0, #0x18
	str		r0, [r1, #0x24]
	add		r0, #0x60
	str		r0, [r1, #0x28]
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	str		r0, [r1, #0x2c]
	mov		r0, r9
	ldr		r5, _08065104
	strh	r0, [r5, #0x0]
	ldrh	r0, [r7, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r7, #0x0]
	mov		r2, r10
	ldrh	r0, [r2, #0x0]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r5, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08065104:	.4byte 0x04000208
_08065108:	.4byte 0x04000200
_0806510c:	.4byte 0x0000FF3F
_08065110:	.4byte 0x04000202
_08065114:	.4byte 0x04000134
_08065118:	.4byte 0x00004003
_0806511c:	.4byte 0x030072D4
_08065120:	.4byte 0x010000C4
_08065124:	.4byte 0x0200BB44
_08065128:	.4byte 0x01000029
_0806512c:	.4byte 0x0808a930
_08065130:	.4byte 0x0808a8ec
_08065134:	.4byte 0x001FFFFF
_08065138:	.4byte 0x0808a930
_0806513c:	.4byte 0x0808aa78
	thumb_func_end sub_08065004

	thumb_func_start sub_08065140
sub_08065140:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	ldr		r0, _0806517c
	ldr		r1, [r0, #0x0]
	mov		r9, r1
	ldr		r1, [r1, #0x0]
	mov		r10, r0
	cmp		r1, #0x0
	bne		_0806515c
	b		_08065334
_0806515c:
	ldr		r1, _08065180
	mov		r0, sp
	mov		r2, #0x4
	bl		sub_0808c818
	mov		r0, r9
	ldr		r2, [r0, #0x0]
	ldrb	r0, [r2, #0x1]
	cmp		r0, #0x1
	beq		_0806520e
	cmp		r0, #0x1
	bgt		_08065188
	cmp		r0, #0x0
	beq		_08065194
	ldr		r4, _08065184
	b		_08065254

_0806517c:	.4byte 0x080d3848
_08065180:	.4byte 0x04000128
_08065184:	.4byte 0x080d384c

_08065188:
	cmp		r0, #0x2
	beq		_08065248
	ldr		r4, _08065190
	b		_08065254

_08065190:	.4byte 0x080d384c

_08065194:
	ldr		r0, [r2, #0x18]
	cmp		r0, #0x17
	bne		_08065204
	mov		r0, sp
	ldrb	r1, [r0, #0x0]
	mov		r3, #0x88
	and		r3, r1
	ldr		r4, _08065228
	cmp		r3, #0x8
	bne		_08065254
	mov		r0, #0x4
	and		r0, r1
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	cmp		r7, #0x0
	bne		_08065204
	ldr		r6, _0806522c
	strh	r7, [r6, #0x0]
	ldr		r5, _08065230
	ldrh	r1, [r5, #0x0]
	ldr		r0, _08065234
	and		r0, r1
	strh	r0, [r5, #0x0]
	ldr		r4, _08065238
	ldrh	r0, [r4, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r4, #0x0]
	mov		r1, #0x1
	mov		r8, r1
	strh	r1, [r6, #0x0]
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x7
	str		r3, [sp, #0x4]
	bl		sub_0806550c
	ldr		r1, _0806523c
	ldr		r0, _08065240
	str		r0, [r1, #0x0]
	strh	r7, [r6, #0x0]
	ldrh	r0, [r5, #0x0]
	mov		r1, #0x40
	orr		r0, r1
	strh	r0, [r5, #0x0]
	ldrh	r0, [r4, #0x0]
	orr		r0, r1
	strh	r0, [r4, #0x0]
	mov		r2, r8
	strh	r2, [r6, #0x0]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r3, [sp, #0x4]
	strb	r3, [r0, #0x0]
_08065204:
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	strb	r0, [r1, #0x1]
_0806520e:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x2]
	cmp		r0, #0x0
	beq		_08065248
	ldrb	r0, [r1, #0x8]
	cmp		r0, #0x7
	bhi		_08065244
	add		r0, #0x1
	strb	r0, [r1, #0x8]
	b		_08065248

.incbin "base.gba", 0x65226, 0x2

_08065228:	.4byte 0x080d384c
_0806522c:	.4byte 0x04000208
_08065230:	.4byte 0x04000200
_08065234:	.4byte 0x0000FF7F
_08065238:	.4byte 0x04000202
_0806523c:	.4byte 0x0400010C
_08065240:	.4byte 0x0000ABFB

_08065244:
	mov		r0, #0x2
	strb	r0, [r1, #0x1]
_08065248:
	ldr		r4, _08065344
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x12
	bl		sub_0806544c
_08065254:
	mov		r2, r10
	ldr		r5, [r2, #0x0]
	ldr		r1, [r5, #0x0]
	ldrb	r0, [r1, #0xb]
	add		r0, #0x1
	strb	r0, [r1, #0xb]
	ldr		r4, [r4, #0x0]
	ldr		r3, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	ldrb	r1, [r0, #0x3]
	mov		r6, #0xf
	and		r1, r6
	lsl		r1, r1, #0x3
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x79
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r2, #0x0
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8
	bne		_08065288
	mov		r2, #0x1
_08065288:
	lsl		r2, r2, #0x7
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x7f
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x0]
	ldr		r3, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	ldrb	r1, [r0, #0x2]
	and		r1, r6
	ldrb	r2, [r3, #0x1]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x1]
	ldr		r3, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x7]
	neg		r1, r0
	orr		r1, r0
	mov		r6, #0x1
	lsr		r1, r1, #0x1f
	lsl		r1, r1, #0x4
	ldrb	r2, [r3, #0x1]
	mov		r0, #0x11
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x1]
	ldr		r3, [r4, #0x0]
	mov		r2, #0x0
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1a
	lsr		r0, r0, #0x1e
	cmp		r0, #0x3
	bls		_080652d6
	mov		r2, #0x1
_080652d6:
	and		r2, r6
	lsl		r2, r2, #0x5
	ldrb	r1, [r3, #0x1]
	mov		r0, #0x21
	neg		r0, r0
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x1]
	ldr		r3, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	ldrb	r1, [r0, #0x8]
	lsr		r1, r1, #0x3
	and		r1, r6
	lsl		r1, r1, #0x6
	ldrb	r2, [r3, #0x1]
	mov		r0, #0x41
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x1]
	ldr		r2, [r4, #0x0]
	ldrb	r0, [r2, #0x1]
	lsl		r0, r0, #0x1c
	lsr		r1, r0, #0x1c
	ldrb	r3, [r2, #0x0]
	mov		r0, #0x4
	and		r0, r3
	cmp		r0, #0x0
	bne		_08065334
	mov		r0, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_08065334
	ldr		r0, _08065348
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x1a
	lsr		r1, r1, #0x1e
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r3
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r2, [r4, #0x0]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x4
	orr		r0, r1
	strb	r0, [r2, #0x0]
_08065334:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08065344:	.4byte 0x080d384c
_08065348:	.4byte 0x04000128
	thumb_func_end sub_08065140

	thumb_func_start sub_0806534c
sub_0806534c:
	push	{ r4, r5, lr }
	ldr		r5, _080653a8
	ldr		r4, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x1c]
	ldrb	r0, [r0, #0xb]
	mov		r3, #0x0
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0x1c]
	ldrb	r1, [r0, #0x2]
	ldrb	r0, [r0, #0x3]
	eor		r1, r0
	strb	r1, [r2, #0x1]
	ldr		r1, [r4, #0x0]
	ldr		r0, [r1, #0x1c]
	strh	r3, [r0, #0x2]
	ldr		r0, _080653ac
	ldr		r0, [r0, #0x0]
	add		r0, #0x2
	ldr		r1, [r1, #0x1c]
	add		r1, #0x4
	mov		r2, #0x8
	bl		sub_080bb5fc
	mov		r3, #0x0
	mov		r2, #0x0
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x1c]
_08065386:
	ldrh	r0, [r1, #0x0]
	add		r3, r3, r0
	add		r1, #0x2
	add		r2, #0x1
	cmp		r2, #0x9
	bls		_08065386
	ldr		r0, [r5, #0x0]
	ldr		r2, [r0, #0x0]
	ldr		r1, [r2, #0x1c]
	mvn		r0, r3
	sub		r0, #0xc
	strh	r0, [r1, #0x2]
	mov		r0, #0x1
	strb	r0, [r2, #0x4]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080653a8:	.4byte 0x080d3850
_080653ac:	.4byte 0x0200BB44
	thumb_func_end sub_0806534c

	thumb_func_start sub_080653b0
sub_080653b0:
	push	{ r4, r5, lr }
	ldr		r5, _08065410
	ldr		r2, [r5, #0x0]
	cmp		r2, #0x0
	beq		_0806543c
	ldrb	r4, [r2, #0x0]
	cmp		r4, #0x0
	beq		_08065420
	ldrb	r0, [r2, #0x1]
	cmp		r0, #0x0
	beq		_0806543c
	ldrb	r0, [r2, #0x6]
	cmp		r0, #0x0
	beq		_0806543c
	mov		r0, #0x2
	neg		r0, r0
	str		r0, [r2, #0x18]
	ldr		r1, [r2, #0x28]
	ldr		r0, [r2, #0x24]
	str		r0, [r2, #0x28]
	str		r1, [r2, #0x24]
	ldrb	r0, [r2, #0x4]
	cmp		r0, #0x0
	beq		_080653f0
	ldr		r1, [r2, #0x20]
	ldr		r0, [r2, #0x1c]
	str		r0, [r2, #0x20]
	str		r1, [r2, #0x1c]
	mov		r1, #0x0
	strb	r1, [r2, #0x4]
	ldr		r0, [r5, #0x0]
	str		r1, [r0, #0x14]
_080653f0:
	ldr		r1, [r5, #0x0]
	ldr		r2, _08065414
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x19
	lsr		r0, r0, #0x1f
	strb	r0, [r1, #0x7]
	ldr		r0, _08065418
	strh	r0, [r2, #0x2]
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _0806541c
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	b		_0806543c

_08065410:	.4byte 0x030072D4
_08065414:	.4byte 0x04000128
_08065418:	.4byte 0x0000FEFE
_0806541c:	.4byte 0x0400010E

_08065420:
	ldrb	r0, [r2, #0x9]
	cmp		r0, #0x0
	bne		_08065438
	ldr		r3, _08065444
	strh	r4, [r3, #0x0]
	ldr		r2, _08065448
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
_08065438:
	ldr		r0, [r5, #0x0]
	strb	r4, [r0, #0x9]
_0806543c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x65442, 0x2

_08065444:	.4byte 0x04000208
_08065448:	.4byte 0x03007FF8
	thumb_func_end sub_080653b0

	thumb_func_start sub_0806544c
sub_0806544c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	ldr		r4, _08065500
	ldr		r6, [r4, #0x0]
	ldr		r0, [r6, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_080bbc70
	lsl		r0, r0, #0x18
	ldr		r2, [r6, #0x0]
	mov		r1, #0x0
	strb	r1, [r2, #0x3]
	cmp		r0, #0x0
	beq		_080654de
	mov		r5, #0x0
	add		r7, r6, #0x0
	mov		r8, sp
	mov		r0, #0x0
	mov		r10, r0
_08065482:
	ldr		r0, [r7, #0x0]
	lsl		r1, r5, #0x1
	add		r1, r1, r5
	lsl		r1, r1, #0x3
	ldr		r0, [r0, #0x2c]
	add		r4, r0, r1
	mov		r1, #0x0
	mov		r3, #0x0
	add		r6, r5, #0x1
	add		r2, r4, #0x0
_08065496:
	ldrh	r0, [r2, #0x0]
	add		r1, r1, r0
	add		r2, #0x2
	add		r3, #0x1
	cmp		r3, #0x9
	bls		_08065496
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r4, #0x4
	mov		r1, #0xd
	neg		r1, r1
	cmp		r0, r1
	bne		_080654c8
	lsl		r1, r5, #0x4
	add		r1, r9
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		sub_080bb5fc
	ldr		r2, [r7, #0x0]
	mov		r0, #0x1
	lsl		r0, r5
	ldrb	r1, [r2, #0x3]
	orr		r0, r1
	strb	r0, [r2, #0x3]
_080654c8:
	mov		r1, r10
	mov		r0, r8
	strh	r1, [r0, #0x0]
	mov		r0, sp
	add		r1, r4, #0x0
	ldr		r2, _08065504
	bl		sub_080bb5fc
	add		r5, r6, #0x0
	cmp		r5, #0x3
	ble		_08065482
_080654de:
	ldr		r3, _08065508
	ldr		r1, [r3, #0x0]
	ldrb	r0, [r1, #0x2]
	ldrb	r2, [r1, #0x3]
	orr		r0, r2
	strb	r0, [r1, #0x2]
	ldr		r0, [r3, #0x0]
	ldrb	r0, [r0, #0x3]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x654FE, 0x2

_08065500:	.4byte 0x080d3854
_08065504:	.4byte 0x01000008
_08065508:	.4byte 0x030072D4
	thumb_func_end sub_0806544c

	thumb_func_start sub_0806550c
sub_0806550c:
	ldr		r3, _08065520
	mov		r2, #0x0
	strh	r2, [r3, #0x0]
	lsl		r0, r0, #0x2
	ldr		r2, _08065524
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	bx		lr

_08065520:	.4byte 0x04000208
_08065524:	.4byte 0x02000014
	thumb_func_end sub_0806550c

	thumb_func_start sub_08065528
sub_08065528:
	push	{ r4, lr }
	ldr		r3, _0806556c
	mov		r4, #0x0
	strh	r4, [r3, #0x0]
	ldr		r2, _08065570
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08065574
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r2, #0x0]
	mov		r1, #0xc0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r2, #0x1
	strh	r2, [r3, #0x0]
	strh	r4, [r3, #0x0]
	ldr		r1, _08065578
	ldr		r4, _0806557c
	add		r0, r4, #0x0
	strh	r0, [r1, #0x0]
	sub		r1, #0x1c
	ldr		r0, _08065580
	str		r0, [r1, #0x0]
	ldr		r0, _08065584
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r0, _08065588
	str		r1, [r0, #0x0]
	strh	r2, [r3, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6556A, 0x2

_0806556c:	.4byte 0x04000208
_08065570:	.4byte 0x04000200
_08065574:	.4byte 0x0000FF3F
_08065578:	.4byte 0x04000128
_0806557c:	.4byte 0x00002003
_08065580:	.4byte 0x0000ABFB
_08065584:	.4byte 0x030072D4
_08065588:	.4byte 0x0200BB44
	thumb_func_end sub_08065528

	thumb_func_start sub_0806558c
sub_0806558c:
	push	{ lr }
	ldr		r0, _080655a0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0806559c
	mov		r0, #0x1
	strb	r0, [r1, #0x6]
_0806559c:
	pop		{ r0 }
	bx		r0

_080655a0:	.4byte 0x030072D4
	thumb_func_end sub_0806558c

	thumb_func_start sub_080655a4
sub_080655a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r9, r0
	add		r6, r1, #0x0
	mov		r10, r2
	add		r7, r3, #0x0
	ldr		r3, [sp, #0x0+0x28]
	ldr		r0, [sp, #0x4+0x28]
	mov		r8, r0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	mov		r1, r8
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	ldr		r4, _08065654
	mov		r0, r9
	str		r0, [r4, #0x0]
	mov		r0, sp
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	ldr		r2, _08065658
	mov		r1, r9
	str		r3, [sp, #0x4]
	bl		sub_080bb5fc
	ldr		r1, [r4, #0x0]
	mov		r2, #0x0
	mov		r0, #0x4
	strb	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	mov		r0, #0x20
	strb	r0, [r1, #0x1]
	ldr		r0, [r4, #0x0]
	strh	r2, [r0, #0x2]
	strb	r5, [r0, #0x4]
	ldr		r0, [r4, #0x0]
	strh	r6, [r0, #0x6]
	mov		r1, r10
	str		r1, [r0, #0x8]
	str		r7, [r0, #0xc]
	strb	r5, [r0, #0x11]
	ldr		r2, [r4, #0x0]
	mov		r0, #0xf0
	strh	r0, [r2, #0x12]
	mov		r0, #0x96
	lsl		r0, r0, #0x2
	strh	r0, [r2, #0x14]
	add		r0, r2, #0x0
	add		r0, #0xc2
	strh	r6, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xc4
	ldr		r0, _0806565c
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xc9
	ldr		r3, [sp, #0x4]
	strb	r3, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0xcf
	mov		r1, #0xff
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0xd3
	mov		r1, r8
	strb	r1, [r0, #0x0]
	ldr		r0, _08065660
	ldr		r1, _08065664
	bl		sub_080b8280
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08065654:	.4byte 0x030072D4
_08065658:	.4byte 0x01000074
_0806565c:	.4byte 0x0000FFFF
_08065660:	.4byte 0x08065cc1
_08065664:	.4byte 0x0806624d
	thumb_func_end sub_080655a4

	thumb_func_start sub_08065668
sub_08065668:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r1, _08065774
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x0
	add		r2, #0xca
	ldrb	r0, [r2, #0x0]
	mov		r10, r1
	cmp		r0, #0x1
	bne		_0806568c
	add		r1, r2, #0x0
_08065686:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	beq		_08065686
_0806568c:
	ldr		r0, _08065778
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	bl		sub_080b63dc
	bl		sub_080b8f90
	mov		r0, r10
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0xce
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080656d0
	add		r5, r1, #0x0
_080656aa:
	ldr		r0, [r5, #0x0]
	add		r0, #0xce
	ldrb	r0, [r0, #0x0]
	bl		sub_08092c1c
	bl		sub_08091cb8
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_080656c8
	ldr		r0, [r5, #0x0]
	add		r0, #0xce
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080656aa
_080656c8:
	ldr		r0, [r5, #0x0]
	add		r0, #0xce
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080656d0:
	ldr		r0, _0806577c
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x2]
	cmp		r0, #0x0
	beq		_080656ee
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc6
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x30
	bne		_080656ee
	mov		r0, #0x9
	strh	r0, [r1, #0x0]
_080656ee:
	mov		r3, r10
	ldr		r7, [r3, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0xc8
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, _0806577c
	ldr		r2, [r0, #0x0]
	ldrb	r6, [r2, #0x0]
	cmp		r6, #0x1
	beq		_08065706
	b		_080658b2
_08065706:
	ldr		r3, [r7, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xcb
	ldrb	r5, [r0, #0x0]
	add		r1, r5, #0x0
	cmp		r1, #0x0
	bne		_08065716
	b		_08065898
_08065716:
	add		r0, #0x7
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806578c
	add		r0, r3, #0x0
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	and		r0, r5
	cmp		r0, r1
	beq		_08065730
	ldrb	r0, [r2, #0x4]
	cmp		r0, #0x0
	bne		_0806578c
_08065730:
	add		r0, r3, #0x0
	add		r0, #0xd1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08065740
	ldrb	r0, [r2, #0x5]
	cmp		r0, #0x0
	bne		_0806578c
_08065740:
	ldrb	r1, [r2, #0x1]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	add		r1, r0, #0x0
	add		r1, #0x50
	cmp		r1, #0x4b
	bls		_08065750
	mov		r1, #0x4b
_08065750:
	ldrb	r0, [r2, #0x2]
	and		r0, r5
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r2, r3, #0x0
	add		r2, #0x22
	mov		r3, #0x50
	bl		sub_080932a0
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	beq		_08065780
	ldr		r0, [r7, #0x0]
	add		r0, #0xd4
	strb	r6, [r0, #0x0]
	b		_0806578c

.incbin "base.gba", 0x65772, 0x2

_08065774:	.4byte 0x080d3858
_08065778:	.4byte 0x0200BDD4
_0806577c:	.4byte 0x0200CCD0

_08065780:
	ldr		r0, [r7, #0x0]
	add		r0, #0xcc
	strb	r1, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0xd2
	strb	r1, [r0, #0x0]
_0806578c:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x0]
	add		r1, #0xc8
	mov		r2, #0x0
	strb	r2, [r1, #0x0]
	mov		r7, #0x0
	mov		r3, #0x1
	mov		r8, r3
_0806579e:
	ldr		r0, _08065884
	ldr		r4, [r0, #0x0]
	ldrb	r0, [r4, #0x2]
	lsl		r1, r7, #0x10
	asr		r2, r1, #0x10
	asr		r0, r2
	mov		r3, r8
	and		r0, r3
	mov		r9, r1
	cmp		r0, #0x0
	beq		_080657cc
	ldr		r1, _08065888
	ldr		r0, [r1, #0x0]
	add		r3, r0, #0x0
	add		r3, #0xc8
	add		r0, r4, #0x0
	add		r0, #0xa
	add		r0, r0, r2
	ldrb	r1, [r0, #0x0]
	ldrb	r0, [r3, #0x0]
	cmp		r0, r1
	bcs		_080657cc
	strb	r1, [r3, #0x0]
_080657cc:
	mov		r3, r10
	ldr		r6, [r3, #0x0]
	ldr		r0, [r6, #0x0]
	add		r0, #0xcb
	ldrb	r1, [r0, #0x0]
	mov		r0, r9
	asr		r5, r0, #0x10
	asr		r1, r5
	mov		r0, r8
	bic		r0, r1
	cmp		r0, #0x0
	bne		_08065846
	lsl		r0, r5, #0x2
	ldr		r1, _0806588c
	add		r4, r0, r1
	ldr		r0, [r4, #0x0]
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_0806580a
	lsl		r1, r7, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x4
	bl		sub_08093084
	ldr		r2, [r6, #0x0]
	add		r2, #0xcc
	mov		r0, r8
	lsl		r0, r5
	ldrb	r1, [r2, #0x0]
	orr		r0, r1
	strb	r0, [r2, #0x0]
_0806580a:
	ldr		r0, [r4, #0x0]
	ldrh	r0, [r0, #0x34]
	cmp		r0, #0x46
	bne		_0806582a
	lsl		r1, r7, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x8
	bl		sub_08093084
	ldr		r2, [r6, #0x0]
	add		r2, #0xcd
	mov		r0, r8
	lsl		r0, r5
	ldrb	r1, [r2, #0x0]
	orr		r0, r1
	strb	r0, [r2, #0x0]
_0806582a:
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x27
	beq		_08065838
	ldrh	r0, [r1, #0x34]
	cmp		r0, #0x47
	bne		_08065846
_08065838:
	ldr		r0, [r6, #0x0]
	add		r0, #0xce
	mov		r1, r8
	lsl		r1, r5
	ldrb	r2, [r0, #0x0]
	orr		r1, r2
	strb	r1, [r0, #0x0]
_08065846:
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	add		r0, r9
	lsr		r7, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_0806579e
	mov		r3, r10
	ldr		r4, [r3, #0x0]
	ldr		r3, [r4, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xcd
	add		r1, r3, #0x0
	add		r1, #0xcb
	ldrb	r2, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	ldr		r1, _08065884
	ldr		r1, [r1, #0x0]
	and		r0, r2
	ldrb	r1, [r1, #0x2]
	cmp		r0, r1
	bne		_08065890
	add		r1, r3, #0x0
	add		r1, #0xd1
	mov		r2, #0x0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0xcd
	strb	r2, [r0, #0x0]
	b		_08065898

_08065884:	.4byte 0x0200CCD0
_08065888:	.4byte 0x030072D4
_0806588c:	.4byte 0x0200CCC0

_08065890:
	add		r1, r3, #0x0
	add		r1, #0xd1
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_08065898:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0xca
	ldrb	r1, [r0, #0x0]
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_080b8224
	bl		sub_08091cb8
	b		_08065a18
_080658b2:
	cmp		r6, #0x0
	beq		_080658b8
	b		_080659d6
_080658b8:
	ldr		r1, [r7, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x31
	beq		_080658c6
	b		_080659d6
_080658c6:
	add		r0, r1, #0x0
	add		r0, #0xcb
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080658d2
	b		_08065a18
_080658d2:
	add		r0, r1, #0x0
	add		r0, #0xcf
	ldrb	r5, [r0, #0x0]
	add		r0, #0x3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08065928
	ldrb	r0, [r2, #0x4]
	cmp		r0, #0x0
	bne		_08065928
	add		r0, r1, #0x0
	add		r0, #0xd1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080658f6
	ldrb	r0, [r2, #0x5]
	cmp		r0, #0x0
	bne		_08065928
_080658f6:
	mov		r6, #0x1
	add		r0, r6, #0x0
	lsl		r0, r5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r2, r1, #0x0
	add		r2, #0x22
	mov		r1, #0xe
	mov		r3, #0x10
	bl		sub_080932a0
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	beq		_0806591c
	ldr		r0, [r7, #0x0]
	add		r0, #0xd4
	strb	r6, [r0, #0x0]
	b		_08065928
_0806591c:
	ldr		r0, [r7, #0x0]
	add		r0, #0xcc
	strb	r1, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0xd2
	strb	r1, [r0, #0x0]
_08065928:
	mov		r3, r10
	ldr		r7, [r3, #0x0]
	ldr		r1, [r7, #0x0]
	ldr		r0, _080659c4
	ldr		r0, [r0, #0x0]
	add		r0, #0xa
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	add		r1, #0xc8
	strb	r0, [r1, #0x0]
	ldr		r1, _080659c8
	lsl		r0, r5, #0x2
	add		r6, r0, r1
	ldr		r0, [r6, #0x0]
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_08065960
	add		r1, r5, #0x0
	mov		r0, #0x4
	bl		sub_08093084
	ldr		r2, [r7, #0x0]
	add		r2, #0xcc
	mov		r0, #0x1
	lsl		r0, r5
	ldrb	r1, [r2, #0x0]
	orr		r0, r1
	strb	r0, [r2, #0x0]
_08065960:
	ldr		r0, [r6, #0x0]
	ldrh	r0, [r0, #0x34]
	cmp		r0, #0x46
	bne		_0806597e
	add		r1, r5, #0x0
	mov		r0, #0x8
	bl		sub_08093084
	ldr		r2, [r7, #0x0]
	add		r2, #0xcd
	mov		r0, #0x1
	lsl		r0, r5
	ldrb	r1, [r2, #0x0]
	orr		r0, r1
	strb	r0, [r2, #0x0]
_0806597e:
	ldr		r1, [r6, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x27
	beq		_0806598c
	ldrh	r0, [r1, #0x34]
	cmp		r0, #0x47
	bne		_0806599a
_0806598c:
	ldr		r0, [r7, #0x0]
	add		r0, #0xce
	mov		r1, #0x1
	lsl		r1, r5
	ldrb	r2, [r0, #0x0]
	orr		r1, r2
	strb	r1, [r0, #0x0]
_0806599a:
	mov		r0, r10
	ldr		r3, [r0, #0x0]
	ldr		r2, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xcd
	add		r1, r2, #0x0
	add		r1, #0xcb
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, r1
	bne		_080659cc
	add		r1, r2, #0x0
	add		r1, #0xd1
	mov		r2, #0x0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcd
	b		_08065a16

.incbin "base.gba", 0x659C2, 0x2

_080659c4:	.4byte 0x0200CCD0
_080659c8:	.4byte 0x0200CCC0

_080659cc:
	add		r1, r2, #0x0
	add		r1, #0xd1
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	b		_08065a18
_080659d6:
	ldr		r0, _08065a34
	ldrb	r0, [r0, #0x6]
	cmp		r0, #0x0
	bne		_08065a18
	mov		r1, r10
	ldr		r4, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xcb
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08065a18
	add		r0, r1, #0x0
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x4
	bne		_08065a18
	ldr		r0, [r1, #0x18]
	cmp		r0, #0x0
	beq		_08065a08
	bl		sub_080bbc70
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08065a18
_08065a08:
	ldr		r0, [r4, #0x0]
	add		r3, r0, #0x0
	add		r3, #0xc6
	mov		r2, #0x0
	mov		r1, #0x7
	strh	r1, [r3, #0x0]
	add		r0, #0xd0
_08065a16:
	strb	r2, [r0, #0x0]
_08065a18:
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r0, #0x3f
	bls		_08065a2a
	b		_08065cb0
_08065a2a:
	lsl		r0, r0, #0x2
	ldr		r1, _08065a38
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08065a34:	.4byte 0x0200CD70
_08065a38:	.4byte 0x08065a3c
_08065a3c:	.4byte 0x08065b3c

.incbin "base.gba", 0x65A40, 0xFC
	thumb_func_end sub_08065668


.incbin "base.gba", 0x65B3C, 0x174

_08065cb0:

.incbin "base.gba", 0x65CB0, 0x26
_08065cd6:

.incbin "base.gba", 0x65CD6, 0x12
_08065ce8:

.incbin "base.gba", 0x65CE8, 0x6
_08065cee:

.incbin "base.gba", 0x65CEE, 0x6
_08065cf4:

.incbin "base.gba", 0x65CF4, 0xA
_08065cfe:

.incbin "base.gba", 0x65CFE, 0x6
_08065d04:

.incbin "base.gba", 0x65D04, 0xA
_08065d0e:

.incbin "base.gba", 0x65D0E, 0x6
_08065d14:

.incbin "base.gba", 0x65D14, 0x6
_08065d1a:

.incbin "base.gba", 0x65D1A, 0x2
_08065d1c:

.incbin "base.gba", 0x65D1C, 0x6
_08065d22:

.incbin "base.gba", 0x65D22, 0xA
_08065d2c:

.incbin "base.gba", 0x65D2C, 0x2
_08065d2e:

.incbin "base.gba", 0x65D2E, 0x6
_08065d34:

.incbin "base.gba", 0x65D34, 0x2
_08065d36:

.incbin "base.gba", 0x65D36, 0x18
_08065d4e:

.incbin "base.gba", 0x65D4E, 0x2A
_08065d78:

.incbin "base.gba", 0x65D78, 0xE
_08065d86:

.incbin "base.gba", 0x65D86, 0x1E
_08065da4:	.4byte 0x080d3860
_08065da8:	.4byte 0x080d385c

_08065dac:

.incbin "base.gba", 0x65DAC, 0xC
_08065db8:

.incbin "base.gba", 0x65DB8, 0x4
_08065dbc:	.4byte 0x0200CCD0

_08065dc0:

.incbin "base.gba", 0x65DC0, 0x10
_08065dd0:	.4byte 0x030072D4
_08065dd4:	.4byte 0x0200CD70

_08065dd8:

.incbin "base.gba", 0x65DD8, 0x38
_08065e10:	.4byte 0x030072D4
_08065e14:	.4byte 0x0200CD70

_08065e18:

.incbin "base.gba", 0x65E18, 0xC
_08065e24:	.4byte 0x030072D4

_08065e28:

.incbin "base.gba", 0x65E28, 0xC
_08065e34:	.4byte 0x030072D4

_08065e38:

.incbin "base.gba", 0x65E38, 0xC
_08065e44:	.4byte 0x030072D4

_08065e48:

.incbin "base.gba", 0x65E48, 0x10
_08065e58:	.4byte 0x0200CCD0
_08065e5c:	.4byte 0x030072D4

_08065e60:

.incbin "base.gba", 0x65E60, 0x6
_08065e66:

.incbin "base.gba", 0x65E66, 0xC
_08065e72:

.incbin "base.gba", 0x65E72, 0x46
_08065eb8:	.4byte 0x080d385c
_08065ebc:	.4byte 0x0200CD70

_08065ec0:

.incbin "base.gba", 0x65EC0, 0xC
_08065ecc:

.incbin "base.gba", 0x65ECC, 0x12
_08065ede:

.incbin "base.gba", 0x65EDE, 0x12
_08065ef0:

.incbin "base.gba", 0x65EF0, 0x18
_08065f08:

.incbin "base.gba", 0x65F08, 0xA
_08065f12:

.incbin "base.gba", 0x65F12, 0x52
_08065f64:	.4byte 0x030072D4
_08065f68:	.4byte 0x0200CCD0

_08065f6c:

.incbin "base.gba", 0x65F6C, 0x58
_08065fc4:

.incbin "base.gba", 0x65FC4, 0x10
_08065fd4:	.4byte 0x04000208
_08065fd8:	.4byte 0x04000200
_08065fdc:	.4byte 0x030072D4
_08065fe0:	.4byte 0x04000202
_08065fe4:	.4byte 0x00002003
_08065fe8:	.4byte 0x0000ABFB
	thumb_func_start sub_08065fec
sub_08065fec:
	push	{ r4, lr }
	bl		sub_08092f78
	ldr		r3, _08066040
	ldr		r1, [r3, #0x0]
	mov		r0, #0xc6
	add		r0, r0, r1
	mov		r12, r0
	mov		r2, #0x0
	mov		r0, #0x4
	mov		r4, r12
	strh	r0, [r4, #0x0]
	add		r1, #0xca
	ldrb	r0, [r1, #0x0]
	strb	r2, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcb
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcc
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcd
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcf
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xd1
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xd2
	strb	r2, [r0, #0x0]
	ldr		r0, _08066044
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x2]
	ldr		r0, [r3, #0x0]
	add		r0, #0xce
	strb	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08066040:	.4byte 0x030072D4
_08066044:	.4byte 0x0200CCD0
	thumb_func_end sub_08065fec

	thumb_func_start sub_08066048
sub_08066048:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	mov		r4, #0x0
	cmp		r5, #0x0
	beq		_080660a6
	mov		r7, #0x1
	ldr		r0, _080660cc
	mov		r8, r0
_0806605e:
	lsl		r1, r4, #0x10
	asr		r2, r1, #0x10
	add		r0, r5, #0x0
	asr		r0, r2
	eor		r0, r7
	and		r0, r7
	add		r6, r1, #0x0
	cmp		r0, #0x0
	bne		_08066094
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x2]
	asr		r0, r2
	eor		r0, r7
	and		r0, r7
	cmp		r0, #0x0
	bne		_08066094
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	mov		r0, #0x4
	add		r1, r4, #0x0
	bl		sub_08093084
	mov		r0, #0x8
	add		r1, r4, #0x0
	bl		sub_08093084
_08066094:
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	add		r1, r6, r0
	lsr		r4, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	asr		r0, r1
	cmp		r0, #0x0
	bne		_0806605e
_080660a6:
	ldr		r2, _080660d0
	ldr		r1, [r2, #0x0]
	add		r1, #0xcb
	ldrb	r0, [r1, #0x0]
	bic		r0, r5
	strb	r0, [r1, #0x0]
	ldr		r0, _080660cc
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x2]
	ldr		r0, [r2, #0x0]
	and		r1, r5
	add		r0, #0xce
	strb	r1, [r0, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x660CA, 0x2

_080660cc:	.4byte 0x0200CCD0
_080660d0:	.4byte 0x030072D4
	thumb_func_end sub_08066048

	thumb_func_start sub_080660d4
sub_080660d4:
	push	{ r4, lr }
	bl		sub_08092f78
	ldr		r3, _08066118
	ldr		r1, [r3, #0x0]
	mov		r0, #0xc6
	add		r0, r0, r1
	mov		r12, r0
	mov		r2, #0x0
	mov		r0, #0x4
	mov		r4, r12
	strh	r0, [r4, #0x0]
	add		r1, #0xca
	ldrb	r0, [r1, #0x0]
	strb	r2, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcb
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcc
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcd
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xce
	strb	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0xcf
	strb	r2, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x66116, 0x2

_08066118:	.4byte 0x030072D4
	thumb_func_end sub_080660d4

	thumb_func_start sub_0806611c
sub_0806611c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r6, _080661a8
	mov		r0, #0x0
	mov		r8, r0
	strh	r0, [r6, #0x0]
	ldr		r5, _080661ac
	ldrh	r1, [r5, #0x0]
	ldr		r2, _080661b0
	mov		r10, r2
	mov		r0, r10
	and		r0, r1
	strh	r0, [r5, #0x0]
	ldr		r4, _080661b4
	ldrh	r0, [r4, #0x0]
	mov		r1, #0xc0
	mov		r9, r1
	mov		r2, r9
	orr		r0, r2
	strh	r0, [r4, #0x0]
	mov		r7, #0x1
	strh	r7, [r6, #0x0]
	bl		sub_08091e68
	mov		r2, #0x0
	ldr		r1, _080661b8
	cmp		r0, r1
	bne		_0806615c
	mov		r2, #0x1
_0806615c:
	cmp		r2, #0x0
	beq		_08066184
	mov		r0, #0x0
	bl		sub_08091bc0
	bl		sub_08091d94
	bl		sub_08091cb8
	mov		r0, r8
	strh	r0, [r6, #0x0]
	ldrh	r0, [r5, #0x0]
	mov		r1, r10
	and		r1, r0
	strh	r1, [r5, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r1, r9
	orr		r0, r1
	strh	r0, [r4, #0x0]
	strh	r7, [r6, #0x0]
_08066184:
	mov		r2, r8
	strh	r2, [r6, #0x0]
	ldr		r1, _080661bc
	ldr		r2, _080661c0
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	sub		r1, #0x1c
	ldr		r0, _080661c4
	str		r0, [r1, #0x0]
	strh	r7, [r6, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x661A6, 0x2

_080661a8:	.4byte 0x04000208
_080661ac:	.4byte 0x04000200
_080661b0:	.4byte 0x0000FF3F
_080661b4:	.4byte 0x04000202
_080661b8:	.4byte 0x00008001
_080661bc:	.4byte 0x04000128
_080661c0:	.4byte 0x00002003
_080661c4:	.4byte 0x0000ABFB
	thumb_func_end sub_0806611c

	thumb_func_start sub_080661c8
sub_080661c8:
	push	{ lr }
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldr		r0, _080661f0
	ldr		r1, [r0, #0x0]
	str		r2, [r1, #0x8]
	str		r3, [r1, #0xc]
	add		r0, r1, #0x0
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_080661ec
	ldrb	r0, [r1, #0x4]
	ldrh	r1, [r1, #0x6]
	bl		sub_08091f44
	bl		sub_08091cb8
_080661ec:
	pop		{ r0 }
	bx		r0

_080661f0:	.4byte 0x030072D4
	thumb_func_end sub_080661c8

	thumb_func_start sub_080661f4
sub_080661f4:
	push	{ lr }
	ldr		r0, _08066208
	ldr		r0, [r0, #0x0]
	add		r0, #0xc8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xe4
	bls		_0806620c
	mov		r0, #0x3
	b		_0806621e

.incbin "base.gba", 0x66206, 0x2

_08066208:	.4byte 0x030072D4

_0806620c:
	cmp		r0, #0x7e
	bls		_08066214
	mov		r0, #0x2
	b		_0806621e
_08066214:
	cmp		r0, #0x18
	bhi		_0806621c
	mov		r0, #0x0
	b		_0806621e
_0806621c:
	mov		r0, #0x1
_0806621e:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x66222, 0x2
	push	{ lr }
	bl		sub_080b8f6c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6622E, 0x2
	thumb_func_end sub_080661f4

	thumb_func_start sub_08066230
sub_08066230:
	push	{ lr }
	bl		sub_08091e68
	mov		r2, #0x0
	ldr		r1, _08066248
	cmp		r0, r1
	bne		_08066240
	mov		r2, #0x1
_08066240:
	add		r0, r2, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x66246, 0x2

_08066248:	.4byte 0x00008001
	push	{ lr }
	bl		sub_08093de4
	bl		sub_08091cb8
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6625A, 0x2
	thumb_func_end sub_08066230

	thumb_func_start sub_0806625c
sub_0806625c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r3, #0x0
	ldr		r0, [sp, #0x0+0x10]
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r3, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	ldr		r1, _0806628c
	cmp		r3, #0x0
	beq		_08066276
	ldr		r1, _08066290
_08066276:
	add		r0, r5, #0x0
	bl		sub_08091970
	lsl		r1, r4, #0x2
	add		r1, r6, r1
	add		r0, r4, #0x0
	bl		sub_08091b90
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0806628c:	.4byte 0x00000504
_08066290:	.4byte 0x00000E64
	thumb_func_end sub_0806625c

	thumb_func_start sub_08066294
sub_08066294:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	ldr		r1, _080662b4
	ldr		r0, [r1, #0x4]
	mov		r2, #0xc0
	lsl		r2, r2, #0xc
	add		r0, r0, r2
	str		r0, [r1, #0x4]
	str		r0, [r1, #0x0]
	mov		r4, #0x1
	b		_080662cc

_080662b4:	.4byte 0x0200CE3C

_080662b8:
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x32
	ble		_080662c6
	mov		r4, #0x0
_080662c6:
	add		r0, r7, #0x0
	bl		sub_080b7690
_080662cc:
	ldr		r0, [r7, #0x54]
	lsl		r4, r4, #0x10
	asr		r5, r4, #0x10
	add		r1, r5, #0x0
	bl		sub_08058030
	str		r4, [sp, #0x0]
	cmp		r5, #0x0
	beq		_08066360
	ldr		r3, _08066358
	lsl		r4, r5, #0x2
	ldr		r0, [r3, #0x0]
	add		r0, r0, r4
	bl		sub_0800f33c
	bl		sub_0800d74c
	mov		r9, r0
	ldr		r0, _0806635c
	mov		r1, #0x1
	bl		sub_0800ed80
	add		r5, r0, #0x0
	ldr		r1, [r5, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	mov		r6, #0x0
	mov		r3, r9
	ldrb	r3, [r3, #0x0]
	cmp		r6, r3
	bge		_080663d6
	mov		r8, r4
	mov		r0, #0x8
	mov		r10, r0
_08066318:
	ldr		r1, _08066358
	ldr		r0, [r1, #0x0]
	add		r0, r8
	bl		sub_0800f33c
	lsl		r4, r6, #0x10
	asr		r4, r4, #0x10
	add		r1, r4, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	lsl		r0, r4, #0x4
	add		r0, #0x12
	add		r1, #0x1
	mov		r3, r10
	strh	r3, [r5, #0x28]
	strh	r0, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r4, #0x1
	lsl		r4, r4, #0x10
	lsr		r6, r4, #0x10
	asr		r4, r4, #0x10
	mov		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08066318
	b		_080663d6

.incbin "base.gba", 0x66356, 0x2

_08066358:	.4byte 0x0200D57C
_0806635c:	.4byte 0x0200AA18

_08066360:
	ldr		r5, _0806647c
	ldr		r0, [r5, #0x0]
	add		r0, #0xcc
	bl		sub_0800f33c
	bl		sub_0800d74c
	ldr		r0, _08066480
	mov		r1, #0x1
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	ldr		r0, [r5, #0x0]
	add		r0, #0xcc
	bl		sub_0800f33c
	mov		r1, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x8
	mov		r3, #0x12
	add		r1, #0x1
	add		r6, r4, #0x0
	add		r6, #0x18
	strh	r0, [r4, #0x28]
	strh	r3, [r4, #0x2a]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r5, r4, #0x0
	add		r5, #0x30
	ldr		r1, _08066484
	add		r0, r5, #0x0
	mov		r2, #0xa2
	bl		sub_0808c818
	add		r1, r4, #0x0
	add		r1, #0x32
	ldrb	r2, [r5, #0x0]
	lsl		r2, r2, #0x1
	add		r2, r1, r2
	mov		r0, #0x26
	mov		r3, #0x22
	strh	r0, [r4, #0x28]
	strh	r3, [r4, #0x2a]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808f35c
_080663d6:
	ldr		r1, _08066488
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
	mov		r4, #0x0
	ldr		r3, [sp, #0x0]
	asr		r3, r3, #0x10
	mov		r8, r3
	ldr		r5, _0806648c
	mov		r10, r5
	mov		r0, #0x3f
	mov		r9, r0
_080663ec:
	lsl		r4, r4, #0x10
	asr		r6, r4, #0x10
	lsl		r0, r6, #0x5
	ldr		r1, [r7, #0x58]
	bl		sub_080bbcac
	sub		r0, #0x20
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r1, _08066490
	strh	r5, [r1, #0x0]
	ldr		r2, _08066494
	strh	r5, [r2, #0x0]
	ldr		r3, _08066498
	strh	r5, [r3, #0x0]
	ldr		r0, _0806649c
	strh	r5, [r0, #0x0]
	mov		r0, #0x6
	bl		sub_08009680
	mov		r0, #0x4
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r1, r8
	cmp		r1, #0x1
	bne		_0806644a
	cmp		r6, #0x0
	bne		_0806644a
	mov		r3, #0xf0
	ldr		r2, _080664a0
	strh	r3, [r2, #0x0]
	ldr		r1, _080664a4
	ldr		r0, _080664a8
	strh	r1, [r0, #0x0]
	mov		r3, #0x3
	add		r2, #0x8
	strh	r3, [r2, #0x0]
	mov		r1, r9
	mov		r0, r10
	strh	r1, [r0, #0x0]
	mov		r0, #0xfc
	lsl		r0, r0, #0x6
	bl		sub_0800132c
_0806644a:
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r4, r2
	lsr		r4, r0, #0x10
	lsl		r0, r5, #0x10
	cmp		r0, #0x0
	ble		_080663ec
	ldr		r4, _0806649c
	ldr		r3, _08066498
	ldr		r2, _08066494
	ldr		r1, _08066490
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, #0x6
	bl		sub_08009680
	mov		r0, #0x4
	bl		sub_08009680
	ldr		r0, [r7, #0x5c]
	lsl		r0, r0, #0x10
	b		_080664b8

_0806647c:	.4byte 0x0200D57C
_08066480:	.4byte 0x0200AA18
_08066484:	.4byte 0x02000F94
_08066488:	.4byte 0x02008AD4
_0806648c:	.4byte 0x0400004A
_08066490:	.4byte 0x0200EB22
_08066494:	.4byte 0x0200EB20
_08066498:	.4byte 0x0200EB1E
_0806649c:	.4byte 0x0200EB24
_080664a0:	.4byte 0x04000040
_080664a4:	.4byte 0x000081A0
_080664a8:	.4byte 0x04000044

_080664ac:
	add		r0, r7, #0x0
	bl		sub_080b7690
	lsl		r0, r4, #0x10
	ldr		r3, _08066570
	add		r0, r0, r3
_080664b8:
	lsr		r4, r0, #0x10
	cmp		r0, #0x0
	bne		_080664ac
	mov		r5, #0x0
	ldr		r0, _08066574
	mov		r10, r0
	ldr		r1, _08066578
	mov		r9, r1
	ldr		r2, _0806657c
	mov		r8, r2
	mov		r6, #0x20
	neg		r6, r6
_080664d0:
	lsl		r5, r5, #0x10
	asr		r5, r5, #0x10
	lsl		r0, r5, #0x5
	neg		r0, r0
	ldr		r1, [r7, #0x60]
	bl		sub_080bbcac
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	mov		r3, r8
	strh	r4, [r3, #0x0]
	mov		r0, r9
	strh	r4, [r0, #0x0]
	mov		r1, r10
	strh	r4, [r1, #0x0]
	ldr		r2, _08066580
	strh	r4, [r2, #0x0]
	mov		r0, #0x6
	bl		sub_08009680
	mov		r0, #0x4
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r5, #0x1
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	cmp		r4, r6
	bge		_080664d0
	ldr		r4, _08066580
	ldr		r3, _08066574
	ldr		r2, _08066578
	ldr		r1, _0806657c
	mov		r5, #0x20
	neg		r5, r5
	add		r0, r5, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, #0x6
	bl		sub_08009680
	mov		r0, #0x4
	bl		sub_08009680
	ldr		r1, [sp, #0x0]
	asr		r0, r1, #0x10
	cmp		r0, #0x0
	beq		_08066540
	b		_080662b8
_08066540:
	ldr		r0, _08066584
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08066588
	and		r0, r1
	bl		sub_0800132c
	ldr		r0, [r7, #0x54]
	bl		sub_080b75b0
	add		r0, r7, #0x0
	bl		sub_080b75b0
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6656E, 0x2

_08066570:	.4byte 0xffff0000
_08066574:	.4byte 0x0200EB1E
_08066578:	.4byte 0x0200EB20
_0806657c:	.4byte 0x0200EB22
_08066580:	.4byte 0x0200EB24
_08066584:	.4byte 0x02000B18
_08066588:	.4byte 0xffffdfff
	thumb_func_end sub_08066294

	thumb_func_start sub_0806658c
sub_0806658c:
	push	{ r4, lr }
	ldr		r4, _080665a8
	ldr		r0, _080665ac
	bl		sub_08002148
	str		r0, [r4, #0x0]
	ldr		r4, _080665b0
	ldr		r0, _080665b4
	bl		sub_08002148
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080665a8:	.4byte 0x0200BB4C
_080665ac:	.4byte 0x080d3864 @ scrMA_Ending2Init
_080665b0:	.4byte 0x0200BB48
_080665b4:	.4byte 0x080d3878 @ scrMA_Ending2StaffData
	thumb_func_end sub_0806658c

	thumb_func_start sub_080665b8
sub_080665b8:
	push	{ r4, r5, lr }
	sub		sp, #0x3c
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldr		r5, _080665f0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_080665de
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _080665f4
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_080665de:
	lsl		r1, r4, #0x2
	ldr		r0, [r5, #0x0]
	add		r0, r0, r1
	bl		sub_0800f33c
	add		sp, #0x3c
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_080665f0:	.4byte 0x0200D57C
_080665f4:	.4byte 0x0200BB48
	thumb_func_end sub_080665b8

	thumb_func_start sub_080665f8
sub_080665f8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _08066638
	str		r0, [r6, #0x4c]
	ldr		r0, _0806663c
	str		r0, [r6, #0xc]
	mov		r0, #0xb0
	lsl		r0, r0, #0x4
	bl		sub_08002268
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08066630
	add		r0, r6, #0x0
	bl		sub_080b74c8
_08066630:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x66636, 0x2

_08066638:	.4byte 0x080e034c
_0806663c:	.4byte 0x080e2134
	thumb_func_end sub_080665f8

	thumb_func_start sub_08066640
sub_08066640:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x3c
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	mov		r8, r3
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _080666d0
	str		r0, [r5, #0x4c]
	ldr		r0, _080666d4
	str		r0, [r5, #0xc]
	ldr		r4, _080666d8
	ldr		r1, _080666dc
	add		r0, r4, r1
	ldr		r1, _080666e0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0805908c
	add		r1, r0, #0x0
	str		r1, [r5, #0x54]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _080666e4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080666a2
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _080666e8
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
_080666a2:
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _080666ec
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	str		r6, [r5, #0x58]
	str		r7, [r5, #0x5c]
	mov		r0, r8
	str		r0, [r5, #0x60]
	add		r0, r5, #0x0
	add		sp, #0x3c
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x666CE, 0x2

_080666d0:	.4byte 0x080e034c
_080666d4:	.4byte 0x080e2134
_080666d8:	.4byte 0x0200DB90
_080666dc:	.4byte 0xFFFFFE70
_080666e0:	.4byte 0x00000FAC
_080666e4:	.4byte 0x0200D57C
_080666e8:	.4byte 0x0200BB48
_080666ec:	.4byte 0x0200BB4C
	thumb_func_end sub_08066640

	thumb_func_start sub_080666f0
sub_080666f0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, _08066734
	cmp		r1, r0
	beq		_08066744
	cmp		r1, r0
	bls		_08066764
	add		r0, #0x1
	cmp		r1, r0
	bne		_08066764
	mov		r0, #0x98
	lsl		r0, r0, #0x6
	cmp		r3, r0
	bne		_08066768
	ldr		r4, _08066738
	ldr		r1, _0806673c
	add		r0, r4, r1
	ldr		r1, _08066740
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_08066b98
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	b		_08066768

.incbin "base.gba", 0x66732, 0x2

_08066734:	.4byte 0x00000F82
_08066738:	.4byte 0x0200DB50
_0806673c:	.4byte 0xFFFFFEB0
_08066740:	.4byte 0x0000070C

_08066744:
	ldr		r2, _0806675c
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	mov		r0, #0xb0
	lsl		r0, r0, #0x5
	cmp		r1, r0
	bne		_08066764
	ldr		r1, _08066760
	ldr		r0, [r2, #0x8]
	str		r0, [r1, #0x0]
	b		_08066768

.incbin "base.gba", 0x6675A, 0x2

_0806675c:	.4byte 0x0200BEFC
_08066760:	.4byte 0x0200BB50

_08066764:
	add		r0, r5, #0x0
	b		_0806676c
_08066768:
	lsl		r0, r6, #0x2
	add		r0, r5, r0
_0806676c:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x66772, 0x426
	thumb_func_end sub_080666f0

	thumb_func_start sub_08066b98
sub_08066b98:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08066d00
	str		r0, [r5, #0x4c]
	ldr		r0, _08066d04
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0xdc
	bl		sub_0808e21c
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r1, #0x24
	add		r0, r5, r1
	bl		sub_0808e21c
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r1, #0xec
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r1, #0x24
	add		r0, r5, r1
	bl		sub_0808e21c
	mov		r1, #0x9b
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r1, #0x9a
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r1, #0x24
	add		r0, r5, r1
	bl		sub_0808e21c
	mov		r1, #0xbf
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r1, #0xbe
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	mov		r0, #0xc7
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	mov		r6, #0x1
	mov		r1, #0x0
	mov		r8, r1
	mov		r7, #0x1
	neg		r7, r7
_08066c34:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r8
	str		r0, [r4, #0x6c]
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, r7
	bne		_08066c34
	ldr		r1, _08066d08
	add		r4, r5, r1
	mov		r6, #0x2
	ldr		r0, _08066d0c
	add		r0, r0, r5
	mov		r9, r0
	mov		r1, #0xcb
	lsl		r1, r1, #0x3
	add		r1, r1, r5
	mov		r10, r1
	ldr		r0, _08066d10
	add		r0, r5, r0
	str		r0, [sp, #0x4]
	mov		r1, #0xdd
	lsl		r1, r1, #0x3
	add		r1, r5, r1
	str		r1, [sp, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd0
	str		r0, [sp, #0x8]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [sp, #0xC]
	add		r0, #0x8
	str		r0, [sp, #0x10]
	sub		r1, #0x2c
	str		r1, [sp, #0x18]
	sub		r0, #0x38
	str		r0, [sp, #0x14]
	mov		r1, #0x0
	mov		r8, r1
	mov		r7, #0x1
	neg		r7, r7
_08066c90:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r8
	str		r0, [r4, #0x6c]
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, r7
	bne		_08066c90
	ldr		r1, _08066d14
	add		r0, r5, r1
	bl		sub_0808e21c
	mov		r0, r9
	bl		sub_0808b374
	mov		r4, #0x0
	mov		r0, r10
	str		r4, [r0, #0x0]
	ldr		r1, _08066d18
	add		r0, r5, r1
	bl		sub_0808e21c
	ldr		r0, [sp, #0x4]
	bl		sub_0808b374
	ldr		r0, [sp, #0x0]
	str		r4, [r0, #0x0]
	ldr		r1, [sp, #0x8]
	str		r4, [r1, #0x0]
	ldr		r0, [sp, #0xC]
	str		r4, [r0, #0x0]
	ldr		r1, [sp, #0x10]
	str		r4, [r1, #0x0]
	str		r4, [r5, #0x64]
	mov		r0, #0x1
	neg		r0, r0
	ldr		r1, [sp, #0x18]
	str		r0, [r1, #0x0]
	mov		r0, #0x1
	ldr		r1, [sp, #0x14]
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x66CFE, 0x2

_08066d00:	.4byte 0x080e215c
_08066d04:	.4byte 0x080e2174
_08066d08:	.4byte 0x0000043C
_08066d0c:	.4byte 0x0000065C
_08066d10:	.4byte 0x000006EC
_08066d14:	.4byte 0x000005EC
_08066d18:	.4byte 0x0000067C
	thumb_func_end sub_08066b98

	thumb_func_start sub_08066d1c
sub_08066d1c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	cmp		r6, #0x0
	beq		_08066d2c
	cmp		r6, #0x1
	beq		_08066d9c
	b		_08066dc4
_08066d2c:
	mov		r1, #0x1
	neg		r1, r1
	add		r0, r5, #0x0
	bl		sub_08068958
	ldr		r0, _08066d7c
	ldr		r0, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0xc8
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x98
	str		r6, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_08066dd0
	ldr		r0, [r4, #0x0]
	mov		r1, #0x1
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	str		r6, [r5, #0x64]
	sub		r4, #0x2c
	mov		r6, #0x1
_08066d5e:
	add		r0, r5, #0x0
	bl		sub_08066ed4
	cmp		r0, #0x0
	beq		_08066d84
	ldr		r0, _08066d80
	bl		sub_08002268
	mov		r0, #0xb8
	lsl		r0, r0, #0x4
	bl		sub_08002268
	str		r6, [r4, #0x0]
	b		_08066d90

.incbin "base.gba", 0x66D7A, 0x2

_08066d7c:	.4byte 0x0200D524
_08066d80:	.4byte 0x00000B82

_08066d84:
	add		r0, r5, #0x0
	bl		sub_08067b60
	add		r0, r5, #0x0
	bl		sub_08067c5c
_08066d90:
	ldr		r0, [r5, #0x64]
	add		r0, #0x1
	str		r0, [r5, #0x64]
	cmp		r0, #0x2
	ble		_08066d5e
	b		_08066dc4
_08066d9c:
	mov		r0, #0x28
	str		r0, [r5, #0x54]
	ldr		r1, _08066dcc
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08066db6
	add		r4, r1, #0x0
_08066daa:
	add		r0, r5, #0x0
	bl		sub_080685a4
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08066daa
_08066db6:
	mov		r0, #0xb8
	lsl		r0, r0, #0x4
	bl		sub_08002268
	add		r0, r5, #0x0
	bl		sub_080b75b0
_08066dc4:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x66DCA, 0x2

_08066dcc:	.4byte 0x0200D534
	thumb_func_end sub_08066d1c

	thumb_func_start sub_08066dd0
sub_08066dd0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	ldr		r6, _08066e64
	mov		r0, #0xd0
	add		r0, r0, r7
	mov		r8, r0
	ldr		r1, _08066e68
	add		r0, r6, r1
	mov		r1, #0xf0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08066e6c
	str		r0, [r4, #0x4c]
	ldr		r0, _08066e70
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x60
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0xd0
	bl		sub_0808b374
	add		r0, r4, #0x0
	add		r0, #0xcc
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	mov		r0, r8
	str		r4, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	str		r5, [r7, #0x54]
	str		r5, [r7, #0x58]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r7, #0x7c]
	str		r0, [r7, #0x78]
	ldr		r3, _08066e74
	ldr		r2, _08066e78
	mov		r0, #0xe8
	lsl		r0, r0, #0xe
	ldr		r1, _08066e7c
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	ldr		r0, _08066e80
	ldr		r4, [r0, #0x0]
	ldr		r0, _08066e84
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08066e8c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08066e88
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08066e98

.incbin "base.gba", 0x66E62, 0x2

_08066e64:	.4byte 0x0200DB50
_08066e68:	.4byte 0xFFFFFEB0
_08066e6c:	.4byte 0x080e221c
_08066e70:	.4byte 0x080e2234
_08066e74:	.4byte 0x0200CE44
_08066e78:	.4byte 0x0200CE40
_08066e7c:	.4byte 0x0200CE3C
_08066e80:	.4byte 0x0200D530
_08066e84:	.4byte 0x00000282
_08066e88:	.4byte 0xFFFF8000

_08066e8c:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08066ecc
	mov		r3, #0x0
	bl		sub_080b7724
_08066e98:
	ldr		r1, _08066ed0
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x7c]
	add		r5, r7, #0x0
	add		r5, #0xd0
	cmp		r0, #0x0
	bne		_08066eb6
	add		r4, r1, #0x0
_08066ea8:
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_08066ea8
_08066eb6:
	ldr		r0, [r5, #0x0]
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x66ECA, 0x2

_08066ecc:	.4byte 0xFFFF8001
_08066ed0:	.4byte 0x0200D530
	thumb_func_end sub_08066dd0

	thumb_func_start sub_08066ed4
sub_08066ed4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4c
	add		r7, r0, #0x0
	ldr		r6, _08067024
	add		r0, #0xd0
	str		r0, [sp, #0x18]
	ldr		r1, _08067028
	add		r0, r6, r1
	mov		r1, #0xf0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0806702c
	str		r0, [r4, #0x4c]
	ldr		r0, _08067030
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x60
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0xd0
	bl		sub_0808b374
	add		r0, r4, #0x0
	add		r0, #0xcc
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	ldr		r2, [sp, #0x18]
	str		r4, [r2, #0x0]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	str		r5, [r7, #0x58]
	add		r0, r7, #0x0
	bl		sub_080b7690
	mov		r4, #0x1
	str		r4, [r7, #0x54]
	mov		r3, #0xdc
	add		r3, r3, r7
	mov		r10, r3
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	mov		r0, r10
	bl		sub_0808e03c
	mov		r0, r10
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r6, #0x9c
	lsl		r6, r6, #0x1
	add		r0, r7, r6
	strh	r4, [r0, #0x0]
	mov		r0, #0x8a
	lsl		r0, r0, #0x10
	str		r0, [r7, #0x6c]
	mov		r0, #0xf0
	lsl		r0, r0, #0xf
	str		r0, [r7, #0x68]
	ldr		r3, _08067034
	ldr		r2, _08067038
	mov		r1, #0xe8
	lsl		r1, r1, #0xe
	ldr		r0, _0806703c
	ldr		r0, [r0, #0x0]
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	str		r1, [r3, #0x0]
	mov		r1, #0xc7
	lsl		r1, r1, #0x2
	add		r4, r7, r1
	mov		r2, #0x8f
	lsl		r2, r2, #0x1
	mov		r8, r2
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r3, #0xe0
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r6, #0x3
	strb	r6, [r0, #0x0]
	mov		r4, #0xde
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	mov		r5, #0x2
	strh	r5, [r0, #0x0]
	mov		r0, #0xeb
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, #0x82
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	strb	r6, [r0, #0x0]
	mov		r2, #0x81
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	mov		r3, #0x0
	str		r3, [sp, #0x10]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r7, #0x7c]
	str		r0, [r7, #0x78]
	mov		r0, #0x8
	str		r0, [r7, #0x58]
	ldr		r0, [r7, #0x64]
	cmp		r0, #0x0
	bne		_08067048
	ldr		r1, _08067040
	ldr		r0, [r1, #0x0]
	ldr		r4, [sp, #0x18]
	str		r4, [sp, #0x34]
	mov		r6, r10
	str		r6, [sp, #0x38]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r2, r2, r7
	mov		r9, r2
	add		r4, r7, #0x0
	add		r4, #0xc8
	ldr		r3, _08067044
	mov		r10, r3
	cmp		r0, #0x0
	beq		_08067066
	add		r5, r1, #0x0
_08067010:
	mov		r0, r9
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08067010
	b		_08067066

_08067024:	.4byte 0x0200DB50
_08067028:	.4byte 0xFFFFFEB0
_0806702c:	.4byte 0x080e221c
_08067030:	.4byte 0x080e2234
_08067034:	.4byte 0x0200CE44
_08067038:	.4byte 0x0200CE40
_0806703c:	.4byte 0x080d38b8
_08067040:	.4byte 0x0200D530
_08067044:	.4byte 0x080d38bc

_08067048:
	add		r0, r7, #0x0
	bl		sub_08068c00
	ldr		r4, [sp, #0x18]
	str		r4, [sp, #0x34]
	mov		r6, r10
	str		r6, [sp, #0x38]
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r0, r0, r7
	mov		r9, r0
	add		r4, r7, #0x0
	add		r4, #0xc8
	ldr		r1, _08067174
	mov		r10, r1
_08067066:
	ldr		r2, [r4, #0x0]
	mov		r3, #0xcb
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r6, #0xce
	lsl		r6, r6, #0x1
	add		r0, r2, r6
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bge		_0806708a
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	ldr		r2, _08067178
	mov		r3, #0x0
	bl		sub_080b7724
_0806708a:
	ldr		r0, [r4, #0x0]
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080670c8
	ldr		r2, _0806717c
	mov		r8, r2
	ldr		r6, _08067180
	ldr		r5, _08067184
_080670a0:
	ldr		r0, [r7, #0x6c]
	ldr		r3, _08067188
	add		r0, r0, r3
	str		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
	mov		r1, r8
	str		r0, [r1, #0x0]
	mov		r0, r9
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldr		r0, [r4, #0x0]
	mov		r2, #0xd2
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080670a0
_080670c8:
	ldr		r0, [r7, #0x64]
	cmp		r0, #0x0
	bne		_080670d6
	mov		r0, #0x1
	mov		r1, #0x20
	bl		sub_0808f5cc
_080670d6:
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	mov		r1, #0x14
	bl		sub_08008df4
	ldr		r2, _0806718c
	mov		r4, #0x1a
	ldrsh	r1, [r0, r4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	add		r0, r0, r2
	str		r0, [sp, #0x1C]
	add		r1, r0, #0x0
	add		r1, #0x21
	mov		r0, #0x0
	bl		sub_08068908
	mov		r0, #0x1
	bl		sub_08009680
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	ldr		r1, _08067190
	mov		r2, #0x0
	bl		sub_08001090
	mov		r0, #0xa
	str		r0, [r7, #0x54]
	mov		r6, #0xb6
	lsl		r6, r6, #0x1
	add		r4, r7, r6
	ldr		r1, _08067194
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _08067198
	add		r0, r7, r1
	mov		r4, #0x1
	strb	r4, [r0, #0x0]
	mov		r2, #0xe4
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r5, #0x0
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x58]
	mov		r1, #0x4
	orr		r0, r1
	str		r0, [r7, #0x58]
	ldr		r3, _0806719c
	add		r0, r7, r3
	mov		r1, #0x92
	lsl		r1, r1, #0x1
	bl		sub_0808e03c
	ldr		r6, _080671a0
	add		r0, r7, r6
	strb	r5, [r0, #0x0]
	mov		r1, #0xdb
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	strh	r4, [r0, #0x0]
	mov		r4, #0x0
	ldr		r5, _080671a4
	b		_080671b6

.incbin "base.gba", 0x67172, 0x2

_08067174:	.4byte 0x080d38bc
_08067178:	.4byte 0xFFFFF801
_0806717c:	.4byte 0x0200CE44
_08067180:	.4byte 0x0200CE40
_08067184:	.4byte 0x0200CE3C
_08067188:	.4byte 0xFFB00000
_0806718c:	.4byte 0x03000B00
_08067190:	.4byte 0x00000808
_08067194:	.4byte 0x0000011D
_08067198:	.4byte 0x000001D1
_0806719c:	.4byte 0x0000067C
_080671a0:	.4byte 0x000006E1
_080671a4:	.4byte 0x000004AF

_080671a8:
	mov		r0, r9
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	add		r4, #0x1
_080671b6:
	cmp		r4, r5
	bgt		_080671c6
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080671a8
_080671c6:
	ldr		r0, [sp, #0x38]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r2, #0xae
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080671fa
	add		r4, r7, r2
	mov		r5, #0x8
_080671e4:
	mov		r0, r9
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldrh	r1, [r4, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_080671e4
_080671fa:
	ldr		r0, [sp, #0x38]
	bl		sub_0808e278
	ldr		r1, _080673f4
	ldr		r0, [sp, #0x38]
	bl		sub_0808e03c
	ldr		r0, [sp, #0x38]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r3, #0xa0
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	mov		r0, #0x64
	bl		sub_0808f690
	mov		r4, #0xc8
	mov		r10, r4
	mov		r6, #0xc8
	str		r6, [sp, #0x14]
	mov		r0, #0x0
	mov		r8, r0
	mov		r1, #0x0
	str		r1, [sp, #0x8]
	mov		r2, #0x0
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	str		r3, [sp, #0xC]
	ldr		r4, _080673f8
	add		r4, r7, r4
	str		r4, [sp, #0x20]
	ldr		r6, _080673fc
	add		r6, r7, r6
	str		r6, [sp, #0x24]
	mov		r0, #0x9f
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x44]
_08067250:
	mov		r6, r8
	ldr		r3, _08067400
	ldr		r2, [r3, #0x0]
	ldr		r4, [r2, #0x18]
	ldr		r0, [sp, #0x14]
	lsl		r5, r0, #0x10
	asr		r1, r5, #0x10
	ldr		r0, [r2, #0x10]
	sub		r1, r1, r0
	ldr		r0, [r2, #0x1c]
	sub		r0, r0, r4
	mul		r0, r1
	ldr		r1, [r2, #0x14]
	bl		sub_080bbcac
	add		r4, r4, r0
	add		r4, r6, r4
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	mov		r8, r4
	ldr		r1, _08067404
	cmp		r6, r1
	bgt		_080672a2
	cmp		r8, r1
	bls		_080672a2
	ldr		r2, [sp, #0x8]
	add		r2, #0x1
	str		r2, [sp, #0x8]
	add		r1, r2, #0x0
	sub		r1, #0x1
	cmp		r1, #0x7
	bhi		_080672a2
	ldr		r3, _08067408
	add		r0, r7, r3
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r7, #0x58]
	mov		r4, #0x40
	orr		r0, r4
	str		r0, [r7, #0x58]
_080672a2:
	ldr		r6, _0806740c
	cmp		r8, r6
	bls		_080672e2
	ldr		r0, _08067410
	add		r0, r8
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	ldr		r0, [sp, #0x44]
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	str		r0, [sp, #0x44]
	ldr		r2, [sp, #0x4]
	add		r2, #0x1
	str		r2, [sp, #0x4]
	asr		r0, r5, #0x10
	ldr		r3, _08067400
	ldr		r1, [r3, #0x0]
	ldr		r1, [r1, #0x10]
	sub		r0, r0, r1
	mov		r1, #0x64
	bl		sub_080bbcac
	mov		r1, #0x69
	cmp		r0, #0x5
	bgt		_080672dc
	add		r1, r0, #0x0
	add		r1, #0x64
_080672dc:
	add		r0, r1, #0x0
	bl		sub_0808f690
_080672e2:
	ldr		r4, [sp, #0x4]
	cmp		r4, #0x6
	ble		_080672f0
	ldr		r6, _08067414
	cmp		r8, r6
	bls		_080672f0
	b		_08067a34
_080672f0:
	mov		r1, r10
	lsl		r0, r1, #0x10
	asr		r5, r0, #0x10
	add		r6, r0, #0x0
	cmp		r5, #0x96
	bgt		_080672fe
	b		_08067a34
_080672fe:
	ldr		r1, [r7, #0x78]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	neg		r0, r0
	mov		r1, #0x64
	bl		sub_080bbcac
	ldr		r2, [sp, #0x20]
	strh	r0, [r2, #0x0]
	ldr		r1, [r7, #0x7c]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	neg		r0, r0
	mov		r1, #0x64
	bl		sub_080bbcac
	ldr		r3, [sp, #0x24]
	strh	r0, [r3, #0x0]
	mov		r0, r8
	lsl		r4, r0, #0x2
	add		r0, r4, r0
	lsl		r0, r0, #0x1
	neg		r0, r0
	mov		r1, #0x64
	bl		sub_080bbcac
	ldr		r1, [sp, #0x28]
	strh	r0, [r1, #0x0]
	mov		r0, r9
	bl		sub_0808b3d4
	mov		r2, #0xee
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	bl		sub_0808b3d4
	ldr		r0, [r7, #0x58]
	mov		r3, #0x40
	and		r0, r3
	cmp		r0, #0x0
	beq		_0806735c
	ldr		r1, _08067418
	add		r0, r7, r1
	bl		sub_0808b3d4
_0806735c:
	mov		r0, r8
	mov		r1, #0x64
	bl		sub_080bbe34
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, [sp, #0x44]
	add		r0, r2, r0
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x4
	add		r0, r1, #0x0
	ldr		r1, _0806741c
	bl		sub_080bbcac
	mov		r3, #0x8a
	sub		r0, r3, r0
	lsl		r0, r0, #0x10
	str		r0, [r7, #0x6c]
	ldr		r1, _08067420
	add		r0, r0, r1
	ldr		r2, _08067424
	str		r0, [r2, #0x0]
	ldr		r3, _08067428
	str		r0, [r3, #0x0]
	ldr		r1, _0806742c
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldr		r2, _08067400
	ldr		r1, [r2, #0x0]
	add		r0, r5, #0x0
	ldr		r2, [r1, #0x10]
	cmp		r5, r2
	bge		_080673a6
	add		r0, r2, #0x0
_080673a6:
	sub		r0, r0, r2
	mov		r3, #0x64
	mul		r0, r3
	ldr		r1, [r1, #0x14]
	sub		r1, r1, r2
	bl		sub_080bbcac
	ldr		r1, [sp, #0x1C]
	add		r1, #0x21
	bl		sub_08068908
	mov		r0, #0x1
	bl		sub_08009680
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080673d0
	b		_080675ac
_080673d0:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08067430
	mov		r4, r8
	str		r4, [r7, #0x78]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r7, #0x7c]
	mov		r1, #0x1
	str		r1, [sp, #0xC]
	ldr		r0, [sp, #0x38]
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_080674d8

_080673f4:	.4byte 0x00000119
_080673f8:	.4byte 0x0000037E
_080673fc:	.4byte 0x0000040E
_08067400:	.4byte 0x0200BB50
_08067404:	.4byte 0x0000464F
_08067408:	.4byte 0x0000067C
_0806740c:	.4byte 0x00008C9F
_08067410:	.4byte 0x00007360
_08067414:	.4byte 0x00006977
_08067418:	.4byte 0x000006EC
_0806741c:	.4byte 0x000009D8
_08067420:	.4byte 0xFFB00000
_08067424:	.4byte 0x0200CE3C
_08067428:	.4byte 0x0200CE40
_0806742c:	.4byte 0x0200CE44

_08067430:
	ldr		r2, [sp, #0xC]
	cmp		r2, #0x0
	bne		_08067438
	b		_08067584
_08067438:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001884
	cmp		r0, #0x0
	bne		_080674d8
	mov		r3, r8
	str		r3, [r7, #0x7c]
	mov		r4, #0x0
	str		r4, [sp, #0xC]
	ldr		r0, [sp, #0x38]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08067494
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	bne		_08067468
	ldr		r0, _08067498
	add		r1, r5, #0x0
	bl		sub_0808c670
_08067468:
	ldr		r0, [r7, #0x78]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r1, _0806749c
	ldr		r2, _080674a0
	bl		sub_08068bc8
	cmp		r0, #0x0
	beq		_080674ac
	ldr		r0, [r7, #0x7c]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r1, _080674a4
	ldr		r2, _080674a8
	bl		sub_08068bc8
	cmp		r0, #0x0
	beq		_080674ac
	mov		r0, #0x53
	bl		sub_0808f690
	b		_080674d8

_08067494:	.4byte 0x0200CDBC
_08067498:	.4byte 0x080d3898 @ POINT_%d
_0806749c:	.4byte 0x00006978
_080674a0:	.4byte 0x00006B6C
_080674a4:	.4byte 0x00002134
_080674a8:	.4byte 0x00002328

_080674ac:
	ldr		r0, [r7, #0x78]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r1, _08067524
	ldr		r2, _08067528
	bl		sub_08068bc8
	cmp		r0, #0x0
	beq		_080674d8
	ldr		r0, [r7, #0x7c]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r1, #0xfa
	lsl		r1, r1, #0x5
	ldr		r2, _0806752c
	bl		sub_08068bc8
	cmp		r0, #0x0
	beq		_080674d8
	mov		r0, #0x52
	bl		sub_0808f690
_080674d8:
	ldr		r3, [sp, #0xC]
	cmp		r3, #0x0
	beq		_08067584
	mov		r0, r8
	ldr		r1, _08067524
	ldr		r2, _0806752c
	bl		sub_08068bc8
	cmp		r0, #0x0
	beq		_08067534
	ldr		r4, _08067530
	ldr		r2, [r4, #0x0]
	ldr		r1, [r2, #0x0]
	asr		r0, r6, #0x10
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	mov		r10, r6
	asr		r0, r0, #0x10
	ldr		r1, [r2, #0xc]
	cmp		r0, r1
	ble		_0806750a
	lsl		r0, r1, #0x10
	lsr		r0, r0, #0x10
	mov		r10, r0
_0806750a:
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x1
	bne		_08067512
	b		_08067250
_08067512:
	mov		r1, #0x1
	str		r1, [sp, #0x10]
	mov		r2, #0xb6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_08067250

_08067524:	.4byte 0x00006978
_08067528:	.4byte 0x00006D60
_0806752c:	.4byte 0x00002328
_08067530:	.4byte 0x0200BB50

_08067534:
	mov		r0, r8
	ldr		r1, _08067578
	ldr		r2, _0806757c
	bl		sub_08068bc8
	cmp		r0, #0x0
	bne		_08067544
	b		_08067250
_08067544:
	ldr		r3, _08067580
	ldr		r2, [r3, #0x0]
	ldr		r1, [r2, #0x4]
	asr		r0, r6, #0x10
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r10, r4
	asr		r0, r0, #0x10
	ldr		r1, [r2, #0x8]
	cmp		r0, r1
	bge		_08067562
	lsl		r0, r1, #0x10
	lsr		r0, r0, #0x10
	mov		r10, r0
_08067562:
	ldr		r6, [sp, #0x10]
	cmp		r6, #0x0
	bne		_0806756a
	b		_08067250
_0806756a:
	mov		r0, #0x0
	str		r0, [sp, #0x10]
	mov		r1, #0xb6
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	b		_080675a2

.incbin "base.gba", 0x67576, 0x2

_08067578:	.4byte 0x00002328
_0806757c:	.4byte 0x00006978
_08067580:	.4byte 0x0200BB50

_08067584:
	mov		r5, r10
	asr		r0, r6, #0x10
	cmp		r0, #0xc8
	bge		_0806758e
	mov		r5, #0xc8
_0806758e:
	str		r5, [sp, #0x14]
	ldr		r2, [sp, #0x10]
	cmp		r2, #0x0
	bne		_08067598
	b		_08067250
_08067598:
	mov		r3, #0x0
	str		r3, [sp, #0x10]
	mov		r4, #0xb6
	lsl		r4, r4, #0x1
	add		r0, r7, r4
_080675a2:
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_08067250
_080675ac:
	mov		r1, r8
	add		r0, r4, r1
	lsl		r0, r0, #0x1
	neg		r0, r0
	mov		r1, #0x64
	bl		sub_080bbcac
	bl		sub_0808c3ac
	add		r1, r0, #0x0
	str		r1, [r7, #0x60]
	mov		r0, #0xe1
	lsl		r0, r0, #0x3
	cmp		r1, r0
	blt		_080675d0
	ldr		r2, _08067680
	add		r0, r1, r2
	str		r0, [r7, #0x60]
_080675d0:
	ldr		r5, _08067684
	ldr		r2, [r5, #0x0]
	asr		r0, r6, #0x10
	ldr		r1, [r2, #0x8]
	cmp		r0, r1
	bge		_080675de
	add		r0, r1, #0x0
_080675de:
	add		r4, r7, #0x0
	add		r4, #0x5c
	strh	r0, [r4, #0x0]
	mov		r3, #0x0
	str		r3, [sp, #0x0]
	ldrh	r1, [r2, #0x24]
	ldrh	r2, [r2, #0x26]
	mov		r0, r8
	bl		sub_08068bc8
	mov		r10, r4
	cmp		r0, #0x0
	bne		_080675fc
	mov		r4, #0x1
	str		r4, [sp, #0x0]
_080675fc:
	ldr		r0, _08067688
	mov		r6, #0x0
	ldrsh	r0, [r0, r6]
	cmp		r0, #0x0
	bne		_08067620
	ldr		r4, _0806768c
	mov		r0, r8
	mov		r1, #0x64
	bl		sub_080bbe34
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r0, r10
	ldrh	r2, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808c670
_08067620:
	add		r6, r7, #0x0
	add		r6, #0xa4
	mov		r2, r10
	ldrh	r1, [r2, #0x0]
	ldr		r4, [r5, #0x0]
	ldr		r2, [r4, #0x8]
	sub		r1, r1, r2
	mov		r3, #0x22
	ldrsh	r0, [r4, r3]
	mov		r3, #0x20
	ldrsh	r5, [r4, r3]
	sub		r0, r0, r5
	mul		r0, r1
	ldr		r1, [r4, #0xc]
	sub		r1, r1, r2
	bl		sub_080bbcac
	add		r0, r0, r5
	str		r0, [r6, #0x0]
	mov		r2, #0x0
	ldr		r1, [r4, #0x38]
	add		r4, r7, #0x0
	add		r4, #0xa0
	str		r4, [sp, #0x30]
	cmp		r0, r1
	blt		_08067656
	mov		r2, #0x1
_08067656:
	ldr		r6, [sp, #0x30]
	str		r2, [r6, #0x0]
	mov		r0, #0x10
	bl		sub_0808f690
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	bne		_08067690
	ldr		r0, [sp, #0x38]
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_080676b0

_08067680:	.4byte 0xFFFFF1F0
_08067684:	.4byte 0x0200BB50
_08067688:	.4byte 0x0200CDBC
_0806768c:	.4byte 0x080d38a4 @ ROT=%d_POWER=%d

_08067690:
	ldr		r0, [sp, #0x38]
	bl		sub_0808e278
	mov		r1, #0x8d
	lsl		r1, r1, #0x1
	ldr		r0, [sp, #0x38]
	bl		sub_0808e03c
	ldr		r0, [sp, #0x38]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0x4d
	bl		sub_0808f690
_080676b0:
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r2, #0x0
	mov		r8, r2
	mov		r6, #0x3
	strb	r6, [r0, #0x0]
	ldr		r0, [r7, #0x60]
	mov		r3, #0x9f
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	strh	r0, [r1, #0x0]
	mov		r4, #0x9c
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	mov		r5, #0x1
	strh	r5, [r0, #0x0]
	mov		r0, #0xfe
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, [r7, #0x60]
	ldr		r2, _080678a0
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	mov		r3, #0x98
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	strb	r6, [r0, #0x0]
	mov		r4, #0x96
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	strh	r5, [r0, #0x0]
	ldr		r0, [r7, #0x60]
	mov		r4, #0xc0
	lsl		r4, r4, #0xd
	add		r1, r4, #0x0
	bl		sub_0808c588
	ldr		r1, [r7, #0x68]
	add		r1, r1, r0
	str		r1, [r7, #0x70]
	ldr		r0, [r7, #0x60]
	add		r1, r4, #0x0
	bl		sub_0808c5a4
	ldr		r1, [r7, #0x6c]
	sub		r1, r1, r0
	str		r1, [r7, #0x74]
	mov		r6, r10
	ldrh	r0, [r6, #0x0]
	ldr		r1, _080678a4
	ldr		r1, [r1, #0x0]
	ldr		r2, [r1, #0x10]
	sub		r0, r0, r2
	lsl		r0, r0, #0x11
	ldr		r1, [r1, #0x14]
	sub		r1, r1, r2
	bl		sub_080bbcac
	mov		r1, #0x80
	lsl		r1, r1, #0xa
	add		r1, r0, r1
	str		r1, [sp, #0x48]
	ldr		r0, [r7, #0x58]
	orr		r0, r5
	str		r0, [r7, #0x58]
	ldr		r2, _080678a8
	add		r4, r7, r2
	ldr		r1, _080678ac
	add		r0, r4, #0x0
	bl		sub_0808e03c
	mov		r3, #0xc9
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	mov		r6, r8
	strh	r6, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, [sp, #0x30]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08067778
	ldr		r0, [r7, #0x58]
	mov		r1, #0x10
	orr		r0, r1
	str		r0, [r7, #0x58]
_08067778:
	ldr		r2, [sp, #0x0]
	cmp		r2, #0x0
	bne		_08067794
	ldr		r3, [sp, #0x34]
	ldr		r4, [r3, #0x0]
	mov		r0, #0x4f
	bl		sub_0808f690
	add		r4, #0x60
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
_08067794:
	mov		r4, #0x9b
	lsl		r4, r4, #0x2
	add		r4, r7, r4
	str		r4, [sp, #0x40]
	ldr		r6, _080678b0
	add		r6, r7, r6
	str		r6, [sp, #0x3C]
	ldr		r0, _080678b4
	add		r0, r0, r7
	mov		r10, r0
	mov		r5, #0x8
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r1, r1, r7
	mov		r8, r1
	mov		r4, #0xc0
	lsl		r4, r4, #0x9
_080677b6:
	mov		r0, r9
	bl		sub_0808b3d4
	ldr		r0, [sp, #0x40]
	bl		sub_0808b3d4
	ldr		r0, [r7, #0x58]
	mov		r2, #0x40
	and		r0, r2
	cmp		r0, #0x0
	beq		_080677d4
	ldr		r3, _080678b8
	add		r0, r7, r3
	bl		sub_0808b3d4
_080677d4:
	ldr		r0, [sp, #0x3C]
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	mov		r6, r10
	ldrh	r1, [r6, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08067800
	ldr		r1, [r7, #0x58]
	add		r0, r1, #0x0
	mov		r2, #0x10
	and		r0, r2
	cmp		r0, #0x0
	beq		_08067800
	mov		r3, #0x11
	neg		r3, r3
	and		r1, r3
	str		r1, [r7, #0x58]
_08067800:
	ldr		r0, [r7, #0x60]
	ldr		r1, [sp, #0x48]
	bl		sub_0808c588
	ldr		r1, [r7, #0x70]
	add		r1, r1, r0
	str		r1, [r7, #0x70]
	ldr		r0, [r7, #0x60]
	ldr		r1, [sp, #0x48]
	bl		sub_0808c5a4
	ldr		r1, [r7, #0x74]
	sub		r1, r1, r0
	str		r1, [r7, #0x74]
	ldr		r6, [sp, #0x0]
	cmp		r6, #0x1
	bne		_080678cc
	mov		r0, r8
	ldrh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806784a
	ldr		r0, [r7, #0x60]
	add		r1, r4, #0x0
	bl		sub_0808c588
	ldr		r1, [r7, #0x68]
	sub		r1, r1, r0
	str		r1, [r7, #0x68]
	ldr		r0, [r7, #0x60]
	add		r1, r4, #0x0
	bl		sub_0808c5a4
	ldr		r1, [r7, #0x6c]
	add		r1, r1, r0
	str		r1, [r7, #0x6c]
_0806784a:
	ldr		r2, _080678bc
	ldr		r3, [r7, #0x74]
	ldr		r0, [r2, #0x0]
	sub		r0, r3, r0
	add		r1, r3, #0x0
	mov		r6, #0xf0
	lsl		r6, r6, #0xf
	cmp		r0, r6
	ble		_0806786a
	ldr		r6, _080678c0
	add		r0, r1, r6
	ldr		r1, _080678c4
	str		r0, [r1, #0x0]
	ldr		r6, _080678c8
	str		r0, [r6, #0x0]
	str		r0, [r2, #0x0]
_0806786a:
	ldr		r1, [r7, #0x70]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08067874
	neg		r0, r1
_08067874:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_0806787c
	neg		r0, r0
_0806787c:
	sub		r0, #0x78
	add		r2, r3, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08067888
	neg		r1, r2
_08067888:
	asr		r1, r1, #0x10
	cmp		r3, #0x0
	bge		_08067890
	neg		r1, r1
_08067890:
	sub		r1, #0x80
	mov		r2, #0x50
	bl		sub_08068ba4
	cmp		r0, #0x0
	bne		_080678d2
	b		_080677b6

.incbin "base.gba", 0x6789E, 0x2

_080678a0:	.4byte 0x0000025E
_080678a4:	.4byte 0x0200BB50
_080678a8:	.4byte 0x000005EC
_080678ac:	.4byte 0x00000123
_080678b0:	.4byte 0x0000065C
_080678b4:	.4byte 0x0000066C
_080678b8:	.4byte 0x000006EC
_080678bc:	.4byte 0x0200CE44
_080678c0:	.4byte 0xFF880000
_080678c4:	.4byte 0x0200CE3C
_080678c8:	.4byte 0x0200CE40

_080678cc:
	cmp		r1, #0x0
	blt		_080678d2
	b		_080677b6
_080678d2:
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	beq		_080678e6
	ldr		r1, [sp, #0x34]
	ldr		r0, [r1, #0x0]
	add		r0, #0x60
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
_080678e6:
	ldr		r2, [sp, #0x0]
	cmp		r2, #0x1
	beq		_080678ee
	b		_08067a00
_080678ee:
	mov		r0, #0x11
	bl		sub_0808f690
	ldr		r4, _08067a18
	ldr		r5, [r4, #0x0]
	ldr		r3, [r5, #0x0]
	mov		r9, r3
	ldr		r6, _08067a1c
	ldr		r0, [r6, #0x0]
	mov		r8, r0
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x5
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r2, #0xf
	mov		r10, r2
	ldr		r3, _08067a20
	add		r3, r7, r3
	str		r3, [sp, #0x2C]
	mov		r6, #0x0
	mov		r5, #0x0
	mov		r4, #0xe
_08067920:
	ldr		r0, [r7, #0x58]
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_08067932
	ldr		r2, _08067a24
	add		r0, r7, r2
	bl		sub_0808b3d4
_08067932:
	ldr		r0, [sp, #0x3C]
	bl		sub_0808b3d4
	ldr		r0, [sp, #0x40]
	bl		sub_0808b3d4
	add		r0, r5, #0x0
	mov		r3, r10
	and		r0, r3
	sub		r0, #0x8
	lsl		r0, r0, #0x10
	add		r0, r9
	ldr		r1, _08067a28
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	and		r0, r3
	sub		r0, #0x8
	lsl		r0, r0, #0x10
	add		r0, r8
	ldr		r2, _08067a2c
	str		r0, [r2, #0x0]
	ldr		r3, _08067a30
	str		r0, [r3, #0x0]
	ldr		r1, _08067a1c
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldr		r2, [sp, #0x2C]
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0806798a
	ldr		r1, [r7, #0x58]
	add		r0, r1, #0x0
	mov		r3, #0x10
	and		r0, r3
	cmp		r0, #0x0
	beq		_0806798a
	mov		r0, #0x11
	neg		r0, r0
	and		r1, r0
	str		r1, [r7, #0x58]
_0806798a:
	add		r6, #0x4d
	add		r5, #0x21
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08067920
	ldr		r0, _08067a28
	ldr		r2, _08067a30
	ldr		r1, _08067a2c
	mov		r3, r9
	str		r3, [r0, #0x0]
	ldr		r0, _08067a1c
	mov		r4, r8
	str		r4, [r1, #0x0]
	str		r4, [r2, #0x0]
	str		r4, [r0, #0x0]
	mov		r6, #0x40
	mov		r10, r6
	ldr		r0, _08067a20
	add		r5, r7, r0
	mov		r1, #0x8
	mov		r9, r1
	mov		r2, #0x10
	mov		r8, r2
	sub		r6, #0x51
	mov		r4, #0xb3
_080679bc:
	ldr		r0, [r7, #0x58]
	mov		r3, r10
	and		r0, r3
	cmp		r0, #0x0
	beq		_080679ce
	ldr		r1, _08067a24
	add		r0, r7, r1
	bl		sub_0808b3d4
_080679ce:
	ldr		r0, [sp, #0x3C]
	bl		sub_0808b3d4
	ldr		r0, [sp, #0x40]
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldrh	r1, [r5, #0x0]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	bne		_080679fa
	ldr		r1, [r7, #0x58]
	add		r0, r1, #0x0
	mov		r2, r8
	and		r0, r2
	cmp		r0, #0x0
	beq		_080679fa
	and		r1, r6
	str		r1, [r7, #0x58]
_080679fa:
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080679bc
_08067a00:
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x2
	bne		_08067abc
	mov		r4, #0xb3
_08067a08:
	add		r0, r7, #0x0
	bl		sub_080685a4
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08067a08
	b		_08067abc

.incbin "base.gba", 0x67A16, 0x2

_08067a18:	.4byte 0x080d38c0
_08067a1c:	.4byte 0x0200CE44
_08067a20:	.4byte 0x0000066C
_08067a24:	.4byte 0x000006EC
_08067a28:	.4byte 0x0200CE30
_08067a2c:	.4byte 0x0200CE3C
_08067a30:	.4byte 0x0200CE40

_08067a34:
	mov		r4, #0x1
	str		r4, [sp, #0x0]
	ldr		r0, [sp, #0x38]
	bl		sub_0808e278
	ldr		r1, _08067aec
	ldr		r0, [sp, #0x38]
	bl		sub_0808e03c
	ldr		r0, [sp, #0x38]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r6, #0xe1
	lsl		r6, r6, #0x1
	add		r0, r7, r6
	ldrh	r0, [r0, #0x0]
	mov		r2, #0x99
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	mov		r3, #0xa0
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldr		r1, _08067af0
	add		r1, r8
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	neg		r0, r0
	mov		r1, #0x64
	bl		sub_080bbcac
	mov		r4, #0x9f
	lsl		r4, r4, #0x1
	add		r1, r7, r4
	strh	r0, [r1, #0x0]
	ldr		r6, [sp, #0x34]
	ldr		r4, [r6, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x60
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x4d
	bl		sub_0808f690
	mov		r4, #0x96
	lsl		r4, r4, #0x1
_08067aaa:
	mov		r0, r9
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08067aaa
_08067abc:
	ldr		r0, [r7, #0x58]
	mov		r1, #0x45
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x58]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r7, #0x7c]
	str		r0, [r7, #0x78]
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	beq		_08067afa
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08068674
	ldr		r0, [r7, #0x64]
	cmp		r0, #0x2
	bne		_08067af4
	add		r0, r7, #0x0
	bl		sub_08068188
	b		_08067afa

.incbin "base.gba", 0x67AEA, 0x2

_08067aec:	.4byte 0x0000011B
_08067af0:	.4byte 0xFFFFEE6C

_08067af4:
	add		r0, r7, #0x0
	bl		sub_08068c44
_08067afa:
	ldr		r0, [sp, #0x38]
	bl		sub_0808e278
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808e278
	mov		r2, #0xb6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	bl		sub_0808e278
	mov		r3, #0xc7
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	bl		sub_0808e278
	mov		r4, #0xeb
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	bl		sub_0808e278
	ldr		r6, _08067b58
	add		r0, r7, r6
	bl		sub_0808e278
	ldr		r1, _08067b5c
	add		r0, r7, r1
	bl		sub_0808e278
	ldr		r2, [sp, #0x34]
	ldr		r0, [r2, #0x0]
	bl		sub_080b75b0
	mov		r0, #0x0
	ldr		r3, [sp, #0x34]
	str		r0, [r3, #0x0]
	ldr		r0, [sp, #0x0]
	add		sp, #0x4c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08067b58:	.4byte 0x000005EC
_08067b5c:	.4byte 0x0000067C
	thumb_func_end sub_08066ed4

	thumb_func_start sub_08067b60
sub_08067b60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r0, #0x14
	str		r0, [r6, #0x54]
	mov		r0, #0xb8
	lsl		r0, r0, #0x4
	bl		sub_08002268
	mov		r0, #0xfe
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, _08067c44
	add		r1, r6, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r1, #0x94
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r5, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x5c
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08067c48
	ldr		r2, [r1, #0x0]
	ldr		r1, [r2, #0x10]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	ldr		r1, [r2, #0x14]
	bl		sub_080bbcac
	mov		r1, #0xc0
	lsl		r1, r1, #0xa
	add		r4, r0, r1
	mov		r7, #0x0
	ldr		r0, _08067c4c
	mov		r10, r0
	ldr		r1, _08067c50
	mov		r8, r1
	mov		r0, #0x94
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	mov		r9, r0
_08067bd4:
	add		r0, r7, #0x0
	mov		r1, #0x1f
	and		r0, r1
	cmp		r0, #0x0
	bne		_08067be4
	mov		r0, #0x12
	bl		sub_0808f690
_08067be4:
	mov		r1, #0x9b
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	bl		sub_0808b3d4
	add		r0, r6, #0x0
	bl		sub_080685a4
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	sub		r0, r0, r4
	str		r0, [r1, #0x0]
	mov		r1, r10
	str		r0, [r1, #0x0]
	ldr		r1, _08067c54
	str		r0, [r1, #0x0]
	cmp		r4, #0x0
	ble		_08067c36
	ldr		r0, _08067c58
	add		r4, r4, r0
	cmp		r4, #0x0
	bge		_08067c12
	mov		r4, #0x0
_08067c12:
	ldr		r0, [r6, #0x60]
	add		r1, r4, #0x0
	bl		sub_0808c588
	add		r5, r5, r0
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_08067c24
	neg		r0, r5
_08067c24:
	asr		r0, r0, #0x10
	cmp		r5, #0x0
	bge		_08067c2c
	neg		r0, r0
_08067c2c:
	mov		r1, r9
	strh	r0, [r1, #0x0]
	add		r7, #0x1
	cmp		r7, #0x95
	ble		_08067bd4
_08067c36:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08067c44:	.4byte 0x00000265
_08067c48:	.4byte 0x0200BB50
_08067c4c:	.4byte 0x0200CE3C
_08067c50:	.4byte 0x0200CE44
_08067c54:	.4byte 0x0200CE40
_08067c58:	.4byte 0xFFFFF99A
	thumb_func_end sub_08067b60

	thumb_func_start sub_08067c5c
sub_08067c5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x38
	add		r7, r0, #0x0
	mov		r0, #0xb8
	lsl		r0, r0, #0x4
	bl		sub_08002268
	ldr		r5, _08067db4
	mov		r0, #0xd4
	add		r0, r0, r7
	mov		r9, r0
	ldr		r1, _08067db8
	add		r1, r1, r5
	mov		r8, r1
	mov		r0, r8
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08067dbc
	str		r0, [r4, #0x4c]
	ldr		r0, _08067dc0
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x60
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0xd0
	bl		sub_0808b374
	add		r0, r4, #0x0
	add		r0, #0xcc
	mov		r6, #0x0
	str		r6, [r0, #0x0]
	mov		r2, r9
	str		r4, [r2, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r3, #0xd8
	add		r3, r3, r7
	mov		r9, r3
	mov		r0, r8
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08067dc4
	str		r0, [r4, #0x4c]
	ldr		r0, _08067dc8
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x74
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0xe4
	bl		sub_0808b374
	add		r0, r4, #0x0
	add		r0, #0xe0
	str		r6, [r0, #0x0]
	mov		r0, r9
	str		r4, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r6, #0x2
	mov		r1, #0x93
	lsl		r1, r1, #0x3
	add		r5, r7, r1
	ldr		r2, _08067dcc
	add		r4, r7, r2
	mov		r8, r6
_08067d26:
	add		r0, r4, #0x0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x6
	mov		r2, #0x0
	bl		sub_0808e3c0
	strh	r6, [r5, #0x0]
	add		r5, #0x90
	add		r4, #0x90
	mov		r3, #0x1
	neg		r3, r3
	add		r8, r3
	mov		r0, r8
	cmp		r0, #0x0
	bge		_08067d26
	mov		r1, #0x3
	mov		r8, r1
	ldr		r0, _08067dd0
	ldr		r4, [r0, #0x0]
	ldr		r5, [r7, #0x60]
	ldr		r0, [r4, #0x44]
	mul		r0, r5
	mov		r1, #0xc8
	bl		sub_080bbcac
	mov		r10, r0
	ldr		r0, [r4, #0x40]
	mov		r2, r10
	sub		r2, r2, r0
	mov		r10, r2
	mov		r0, #0x1e
	str		r0, [r7, #0x54]
	mov		r3, r8
	str		r3, [r7, #0x58]
	mov		r1, #0xc0
	lsl		r1, r1, #0xa
	add		r0, r7, #0x0
	add		r0, #0x5c
	ldrh	r0, [r0, #0x0]
	ldr		r2, [r4, #0x10]
	sub		r0, r0, r2
	mul		r0, r1
	ldr		r1, [r4, #0x14]
	sub		r1, r1, r2
	bl		sub_080bbcac
	mov		r1, #0x80
	lsl		r1, r1, #0xa
	add		r1, r1, r0
	mov		r8, r1
	cmp		r5, #0x0
	ble		_08067dd8
	ldr		r0, [r4, #0x4c]
	ldr		r2, _08067dd4
	add		r0, r0, r2
	mul		r0, r5
	mov		r1, #0xc8
	bl		sub_080bbcac
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r3, r8
	mul		r3, r0
	add		r0, r3, #0x0
	b		_08067df4

.incbin "base.gba", 0x67DB2, 0x2

_08067db4:	.4byte 0x0200DB50
_08067db8:	.4byte 0xFFFFFEB0
_08067dbc:	.4byte 0x080e21dc
_08067dc0:	.4byte 0x080e21f4
_08067dc4:	.4byte 0x080e219c
_08067dc8:	.4byte 0x080e21b4
_08067dcc:	.4byte 0x0000043C
_08067dd0:	.4byte 0x0200BB50
_08067dd4:	.4byte 0xFFFFFC18

_08067dd8:
	ldr		r0, [r4, #0x48]
	ldr		r1, _08067e60
	add		r0, r0, r1
	neg		r1, r5
	mul		r0, r1
	mov		r1, #0xc8
	bl		sub_080bbcac
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
_08067df4:
	bl		sub_080bbcac
	mov		r8, r0
	mov		r3, #0x0
	mov		r9, r3
	ldr		r0, _08067e64
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x3c]
	lsl		r5, r0, #0x10
	mov		r2, #0x30
	ldrsh	r0, [r1, r2]
	lsl		r6, r0, #0x10
	str		r3, [sp, #0x0]
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r2, #0xa3
	lsl		r2, r2, #0x2
	add		r4, r7, r2
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r3, #0xba
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xd4
	str		r0, [sp, #0x30]
	add		r1, r7, #0x0
	add		r1, #0xd8
	str		r1, [sp, #0x34]
	mov		r2, #0x9b
	lsl		r2, r2, #0x2
	add		r2, r7, r2
	str		r2, [sp, #0x28]
	add		r3, r7, #0x0
	add		r3, #0x9c
	str		r3, [sp, #0x2C]
	sub		r0, #0x7c
	str		r0, [sp, #0x24]
	b		_08067ec2

_08067e60:	.4byte 0xFFFFFC18
_08067e64:	.4byte 0x0200BB50

_08067e68:
	ldr		r0, _08068094
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x34]
	ldr		r1, [sp, #0x0]
	add		r1, r1, r0
	str		r1, [sp, #0x0]
	mov		r0, r9
	cmp		r0, #0x0
	bge		_08067e7c
	neg		r0, r0
_08067e7c:
	asr		r0, r0, #0x10
	mov		r2, r9
	cmp		r2, #0x0
	bge		_08067e86
	neg		r0, r0
_08067e86:
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	add		r2, r5, #0x0
	cmp		r5, #0x0
	bge		_08067e92
	neg		r2, r5
_08067e92:
	asr		r2, r2, #0x10
	cmp		r5, #0x0
	bge		_08067e9a
	neg		r2, r2
_08067e9a:
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	asr		r3, r6, #0x10
	add		r0, r7, #0x0
	bl		sub_080687c0
	ldr		r3, _08068098
	add		r1, r5, r3
	ldr		r0, [sp, #0x30]
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xf4
	mov		r3, r9
	str		r3, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xf0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_08067ec2:
	ldr		r0, [sp, #0x28]
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	mov		r0, r10
	mov		r1, r8
	bl		sub_0808c5a4
	add		r9, r0
	mov		r0, r10
	mov		r1, r8
	bl		sub_0808c588
	add		r5, r5, r0
	ldr		r0, [sp, #0x0]
	sub		r6, r6, r0
	cmp		r6, #0x0
	bgt		_08067e68
	ldr		r0, [r7, #0x58]
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x58]
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r6, #0x0
	mov		r8, r6
	mov		r10, r6
	mov		r2, #0x9f
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08067f1a
	b		_080680ae
_08067f1a:
	mov		r3, #0xb8
	lsl		r3, r3, #0x2
	add		r3, r7, r3
	str		r3, [sp, #0x8]
	add		r4, r7, #0x0
	add		r4, #0x98
	add		r0, r7, #0x0
	add		r0, #0x80
	str		r0, [sp, #0xC]
	ldr		r1, _0806809c
	add		r1, r7, r1
	str		r1, [sp, #0x10]
	ldr		r2, [sp, #0x30]
	str		r2, [sp, #0x14]
	ldr		r3, _08068098
	add		r3, r5, r3
	str		r3, [sp, #0x18]
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	add		r0, r9
	str		r0, [sp, #0x1C]
	add		r1, r7, #0x0
	add		r1, #0xa0
	str		r1, [sp, #0x20]
	mov		r2, #0x9f
	lsl		r2, r2, #0x2
	add		r2, r7, r2
	str		r2, [sp, #0x4]
_08067f52:
	mov		r3, r8
	cmp		r3, #0x5
	bne		_0806800c
	mov		r0, #0x13
	bl		sub_0808f690
	ldr		r1, [sp, #0x8]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	add		r0, #0xc
	lsl		r0, r0, #0x10
	ldr		r2, [r4, #0x0]
	lsl		r2, r2, #0x2
	ldr		r3, [sp, #0xC]
	add		r2, r3, r2
	ldr		r3, _080680a0
	ldr		r1, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [sp, #0x10]
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	lsl		r2, r2, #0x10
	mov		r12, r2
	ldr		r1, [r4, #0x0]
	lsl		r1, r1, #0x2
	add		r3, r7, #0x0
	add		r3, #0x8c
	add		r1, r3, r1
	ldr		r2, _080680a4
	ldr		r0, [r2, #0x0]
	add		r0, r12
	str		r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	add		r0, r1, #0x1
	str		r0, [r4, #0x0]
	lsl		r1, r1, #0x2
	ldr		r2, [sp, #0xC]
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x0
	cmp		r0, #0x0
	bge		_08067faa
	neg		r2, r0
_08067faa:
	asr		r2, r2, #0x10
	cmp		r0, #0x0
	bge		_08067fb2
	neg		r2, r2
_08067fb2:
	add		r0, r3, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08067fbe
	neg		r1, r0
_08067fbe:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08067fc6
	neg		r1, r1
_08067fc6:
	add		r0, r2, #0x0
	bl		sub_08068b4c
	ldr		r3, [sp, #0x2C]
	str		r0, [r3, #0x0]
	ldr		r2, [sp, #0x14]
	ldr		r1, [r2, #0x0]
	add		r1, #0xfc
	str		r0, [r1, #0x0]
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xf4
	ldr		r3, [sp, #0x1C]
	str		r3, [r0, #0x0]
	add		r0, #0x4
	ldr		r2, [sp, #0x18]
	str		r2, [r0, #0x0]
	sub		r0, #0x8
	mov		r3, #0x1
	str		r3, [r0, #0x0]
	ldr		r1, [sp, #0x14]
	ldr		r0, [r1, #0x0]
	add		r0, #0xf0
	mov		r2, #0x2
	str		r2, [r0, #0x0]
	ldr		r3, [sp, #0x20]
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_0806800c
	mov		r0, #0xf
	mov		r10, r0
	ldr		r0, [r7, #0x58]
	mov		r1, #0x20
	orr		r0, r1
	str		r0, [r7, #0x58]
_0806800c:
	mov		r2, r10
	cmp		r2, #0x0
	beq		_08068028
	mov		r3, #0x1
	neg		r3, r3
	add		r10, r3
	mov		r0, r10
	cmp		r0, #0x0
	bne		_08068028
	ldr		r0, [r7, #0x58]
	mov		r1, #0x21
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x58]
_08068028:
	ldr		r0, [sp, #0x28]
	bl		sub_0808b3d4
	add		r0, r7, #0x0
	bl		sub_080685a4
	mov		r0, r9
	cmp		r0, #0x0
	bge		_0806803c
	neg		r0, r0
_0806803c:
	asr		r0, r0, #0x10
	mov		r2, r9
	cmp		r2, #0x0
	bge		_08068046
	neg		r0, r0
_08068046:
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_08068052
	neg		r0, r5
_08068052:
	asr		r0, r0, #0x10
	cmp		r5, #0x0
	bge		_0806805a
	neg		r0, r0
_0806805a:
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r3, r6, #0x0
	cmp		r6, #0x0
	bge		_08068066
	neg		r3, r6
_08068066:
	asr		r3, r3, #0x10
	cmp		r6, #0x0
	bge		_0806806e
	neg		r3, r3
_0806806e:
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r7, #0x0
	bl		sub_080687c0
	mov		r3, #0x1
	add		r8, r3
	ldr		r0, [sp, #0x4]
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806808a
	b		_08067f52
_0806808a:
	mov		r1, r10
	cmp		r1, #0x0
	beq		_08068092
	b		_08067f52
_08068092:
	b		_080680ae

_08068094:	.4byte 0x0200BB50
_08068098:	.4byte 0xFFF00000
_0806809c:	.4byte 0x000002E2
_080680a0:	.4byte 0x0200CE30
_080680a4:	.4byte 0x0200CE44

_080680a8:
	add		r0, r7, #0x0
	bl		sub_080685a4
_080680ae:
	ldr		r2, [sp, #0x30]
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	bgt		_080680be
	mov		r1, #0x1
_080680be:
	cmp		r1, #0x0
	bne		_080680a8
	ldr		r3, [sp, #0x34]
	ldr		r1, [r3, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0xe
	add		r0, r9
	mov		r2, #0x2
	neg		r2, r2
	mov		r3, #0xb4
	str		r0, [r1, #0x60]
	str		r5, [r1, #0x64]
	mov		r0, #0x1
	str		r0, [r1, #0x54]
	ldr		r0, [sp, #0x24]
	str		r0, [r1, #0x68]
	str		r2, [r1, #0x6c]
	str		r3, [r1, #0x70]
	mov		r4, #0x77
_080680e4:
	add		r0, r7, #0x0
	bl		sub_080685a4
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080680e4
	ldr		r1, [sp, #0x2C]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08068106
	add		r0, r7, #0x0
	add		r0, #0xa4
	ldr		r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_08068674
	b		_0806810e
_08068106:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08068674
_0806810e:
	ldr		r0, [r7, #0x64]
	cmp		r0, #0x2
	bne		_0806811c
	add		r0, r7, #0x0
	bl		sub_08068188
	b		_08068122
_0806811c:
	add		r0, r7, #0x0
	bl		sub_08068c44
_08068122:
	mov		r2, #0xfe
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	bl		sub_0808e278
	mov		r3, #0xa3
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	bl		sub_0808e278
	ldr		r0, _08068184
	add		r4, r7, r0
	mov		r1, #0x2
	mov		r8, r1
_0806813e:
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r4, #0x90
	mov		r2, #0x1
	neg		r2, r2
	add		r8, r2
	mov		r3, r8
	cmp		r3, #0x0
	bge		_0806813e
	mov		r4, #0x0
	ldr		r1, [sp, #0x30]
	ldr		r0, [r1, #0x0]
	bl		sub_080b75b0
	ldr		r2, [sp, #0x30]
	str		r4, [r2, #0x0]
	ldr		r3, [sp, #0x34]
	ldr		r0, [r3, #0x0]
	bl		sub_080b75b0
	ldr		r0, [sp, #0x34]
	str		r4, [r0, #0x0]
	mov		r0, #0xb8
	lsl		r0, r0, #0x4
	bl		sub_08002268
	add		sp, #0x38
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08068184:	.4byte 0x0000043C
	thumb_func_end sub_08067c5c

	thumb_func_start sub_08068188
sub_08068188:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xac
	add		r7, r0, #0x0
	ldr		r1, _08068250
	add		r0, sp, #0x4
	mov		r2, #0x4
	bl		sub_0808c818
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldr		r0, [r7, #0x58]
	mov		r1, #0x45
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x58]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r7, #0x7c]
	str		r0, [r7, #0x78]
	add		r6, r7, #0x0
	add		r6, #0xcc
	ldr		r4, _08068254
	add		r0, r4, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	bl		sub_080300ac
	add		r1, r0, #0x0
	str		r1, [r6, #0x0]
	mov		r2, #0xa8
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r5, #0x0
	mov		r0, sp
	add		r0, #0x8
	str		r0, [sp, #0xA0]
	mov		r1, sp
	add		r1, #0x18
	str		r1, [sp, #0xA4]
	mov		r2, sp
	add		r2, #0x1c
	str		r2, [sp, #0xA8]
	add		r0, r7, #0x0
	add		r0, #0xa8
	str		r0, [sp, #0x9C]
	mov		r1, #0xc8
	add		r1, r1, r7
	mov		r8, r1
	add		r6, r2, #0x0
	add		r4, r7, #0x0
	add		r4, #0xb8
	ldr		r2, [sp, #0xA0]
	mov		r10, r2
_0806820e:
	ldr		r0, [r4, #0x0]
	ldr		r1, _08068258
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	bl		sub_080068f8
	mov		r2, r10
	str		r0, [r2, #0x0]
	ldr		r0, [sp, #0xA4]
	add		r2, r0, r5
	ldr		r1, [r4, #0x0]
	mov		r0, sp
	add		r0, r0, r1
	add		r0, #0x4
	ldrb	r0, [r0, #0x0]
	strb	r0, [r2, #0x0]
	lsl		r1, r1, #0x2
	ldr		r2, [sp, #0x9C]
	add		r1, r2, r1
	ldr		r1, [r1, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0806825c
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r2, r6, #0x0
	bl		sub_0802e0ec
	b		_0806826a

.incbin "base.gba", 0x6824E, 0x2

_08068250:	.4byte 0x080d38c4
_08068254:	.4byte 0x0200DA00
_08068258:	.4byte 0x080d3894

_0806825c:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r2, r6, #0x0
	bl		sub_0802e0ec
_0806826a:
	mov		r0, #0xc8
	add		r0, r0, r7
	mov		r9, r0
	add		r6, #0x20
	add		r4, #0x4
	mov		r1, #0x4
	add		r10, r1
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0806820e
	add		r4, r7, #0x0
	add		r4, #0xcc
	ldr		r0, [r4, #0x0]
	str		r1, [sp, #0x0]
	ldr		r1, [sp, #0xA0]
	ldr		r2, [sp, #0xA4]
	ldr		r3, [sp, #0xA8]
	bl		sub_08033028
	ldr		r0, [r4, #0x0]
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	add		r5, r7, #0x0
	add		r5, #0xd0
	add		r6, r7, #0x0
	add		r6, #0xd4
	mov		r1, #0xd8
	add		r1, r1, r7
	mov		r8, r1
	cmp		r0, #0x0
	bne		_080682c0
_080682ac:
	add		r0, r7, #0x0
	bl		sub_080685a4
	ldr		r0, [r4, #0x0]
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080682ac
_080682c0:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_080682ce
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r5, #0x0]
_080682ce:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_080682dc
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r6, #0x0]
_080682dc:
	mov		r5, r8
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_080682ec
	bl		sub_080b75b0
	mov		r0, #0x0
	str		r0, [r5, #0x0]
_080682ec:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	bl		sub_080b75b0
	ldr		r0, _08068354
	bl		sub_08002268
	ldr		r0, _08068358
	bl		sub_0800223c
	mov		r0, #0xb8
	lsl		r0, r0, #0x4
	bl		sub_08002268
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	bl		sub_08032f64
	ldr		r0, [r4, #0x0]
	bl		sub_08031314
	ldr		r4, _0806835c
	ldr		r3, _08068360
	ldr		r2, _08068364
	ldr		r1, _08068368
	mov		r5, #0x10
	neg		r5, r5
	add		r0, r5, #0x0
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, #0x0
	bl		sub_08009680
	ldr		r1, [r7, #0x2c]
	add		r0, r7, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	add		sp, #0xac
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x68352, 0x2

_08068354:	.4byte 0x00000B82
_08068358:	.4byte 0x00000B83
_0806835c:	.4byte 0x0200EB1E
_08068360:	.4byte 0x0200EB20
_08068364:	.4byte 0x0200EB22
_08068368:	.4byte 0x0200EB24
	thumb_func_end sub_08068188

	thumb_func_start sub_0806836c
sub_0806836c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	ldr		r1, _08068394
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, [r4, #0x54]
	cmp		r0, #0x1e
	bls		_08068388
	b		_08068586
_08068388:
	lsl		r0, r0, #0x2
	ldr		r1, _08068398
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x68392, 0x2

_08068394:	.4byte 0x0200BB54
_08068398:	.4byte 0x0806839c
_0806839c:	.4byte 0x08068418

.incbin "base.gba", 0x683A0, 0x78
	thumb_func_end sub_0806836c


.incbin "base.gba", 0x68418, 0xE0

_080684f8:

.incbin "base.gba", 0x684F8, 0x8E

_08068586:

.incbin "base.gba", 0x68586, 0x1E
	thumb_func_start sub_080685a4
sub_080685a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	bl		sub_080706ac
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x2
	bne		_0806866a
	add		r0, r4, #0x0
	add		r0, #0xd0
	ldr		r1, [r0, #0x0]
	mov		r8, r0
	cmp		r1, #0x0
	beq		_080685da
	mov		r0, #0x1
	str		r0, [r1, #0x54]
_080685da:
	add		r0, r4, #0x0
	add		r0, #0xd4
	ldr		r1, [r0, #0x0]
	add		r7, r0, #0x0
	cmp		r1, #0x0
	beq		_080685ea
	mov		r0, #0x1
	str		r0, [r1, #0x54]
_080685ea:
	add		r0, r4, #0x0
	add		r0, #0xd8
	ldr		r2, [r0, #0x0]
	add		r6, r0, #0x0
	cmp		r2, #0x0
	beq		_08068614
	mov		r1, #0x1
	mov		r3, #0x82
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	b		_08068614
_08068602:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
_08068614:
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x2
	beq		_08068602
	ldr		r0, [r5, #0x5c]
	add		r1, r0, #0x0
	cmp		r0, #0x2
	beq		_08068644
	cmp		r0, #0x2
	bgt		_0806862c
	cmp		r0, #0x1
	beq		_08068638
	b		_08068644
_0806862c:
	cmp		r1, #0x5
	bgt		_08068644
	add		r0, r4, #0x0
	bl		sub_08068188
	b		_08068644
_08068638:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_08068644:
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08068650
	mov		r0, #0x0
	str		r0, [r1, #0x54]
_08068650:
	ldr		r1, [r7, #0x0]
	cmp		r1, #0x0
	beq		_0806865a
	mov		r0, #0x0
	str		r0, [r1, #0x54]
_0806865a:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_0806866a
	mov		r1, #0x0
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	str		r1, [r0, #0x0]
_0806866a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080685a4

	thumb_func_start sub_08068674
sub_08068674:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x9c
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	cmp		r6, #0x0
	bgt		_0806869c
	ldr		r0, [r5, #0x64]
	cmp		r0, #0x2
	bne		_080686aa
_0806869c:
	ldr		r0, _0806870c
	bl		sub_08002268
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08068958
_080686aa:
	ldr		r7, _08068710
	add		r0, r7, #0x0
	ldr		r1, _08068714
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r3, r0, #0x0
	mov		r1, #0x1
	cmp		r6, #0x0
	bgt		_080686c2
	mov		r1, #0x5
_080686c2:
	ldr		r2, _08068718
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	add		r0, r3, #0x0
	mov		r3, #0x0
	bl		sub_0806c4e4
	add		r4, r0, #0x0
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r5, #0x0
	add		r0, #0xa4
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0806d0e4
	add		r4, r5, #0x0
	add		r4, #0xc8
	add		r7, sp, #0x78
	mov		r0, #0x71
	add		r0, sp
	mov		r8, r0
	add		r1, sp, #0x5c
	mov		r9, r1
	mov		r0, #0x5e
	add		r0, sp
	mov		r10, r0
	mov		r1, sp
	add		r1, #0x64
	str		r1, [sp, #0x98]
	b		_08068722

_0806870c:	.4byte 0x00000287
_08068710:	.4byte 0x0200DA00
_08068714:	.4byte 0x00000864
_08068718:	.4byte 0x00000B84

_0806871c:
	add		r0, r5, #0x0
	bl		sub_080685a4
_08068722:
	ldr		r0, _0806873c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806871c
	cmp		r6, #0x0
	bgt		_08068740
	ldr		r0, [r4, #0x0]
	mov		r1, #0x1
	neg		r1, r1
	bl		sub_0802ea90
	b		_0806874a

_0806873c:	.4byte 0x00000B84

_08068740:
	ldr		r0, [r4, #0x0]
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	bl		sub_0802ea90
_0806874a:
	add		r0, sp, #0x8
	bl		sub_0808e21c
	add		r0, r7, #0x0
	bl		sub_0808b374
	mov		r4, #0x0
	str		r4, [sp, #0x74]
	ldr		r1, _08068784
	add		r0, sp, #0x8
	bl		sub_0808e03c
	add		r0, sp, #0x8
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, r8
	strb	r4, [r0, #0x0]
	mov		r0, #0xc8
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r0, #0x90
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r0, [sp, #0x98]
	strh	r4, [r0, #0x0]
	b		_0806879a

.incbin "base.gba", 0x68782, 0x2

_08068784:	.4byte 0x00000105

_08068788:
	add		r0, r7, #0x0
	bl		sub_0808b3d4
	add		r0, sp, #0x8
	bl		sub_0808e4a0
	add		r0, r5, #0x0
	bl		sub_080685a4
_0806879a:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08068788
	add		r0, sp, #0x8
	mov		r1, #0x2
	bl		sub_0808e28c
	add		sp, #0x9c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x687BE, 0x2
	thumb_func_end sub_08068674

	thumb_func_start sub_080687c0
sub_080687c0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	mov		r12, r2
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	sub		r5, r2, r3
	lsl		r1, r1, #0x10
	asr		r3, r1, #0x10
	cmp		r5, #0x4f
	bgt		_080687e4
	ldr		r2, _080687e0
	ldr		r1, [r2, #0x0]
	mov		r0, #0x0
	b		_0806880a

_080687e0:	.4byte 0x080d38cc

_080687e4:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	cmp		r5, r0
	ble		_08068800
	mov		r2, #0xa0
	lsl		r2, r2, #0x11
	ldr		r1, _080687fc
	ldr		r0, [r1, #0x0]
	str		r2, [r0, #0x0]
	add		r6, r1, #0x0
	b		_0806880e

.incbin "base.gba", 0x687FA, 0x2

_080687fc:	.4byte 0x080d38cc

_08068800:
	add		r0, r5, #0x0
	sub		r0, #0x50
	lsl		r0, r0, #0x10
	ldr		r2, _0806881c
	ldr		r1, [r2, #0x0]
_0806880a:
	str		r0, [r1, #0x0]
	add		r6, r2, #0x0
_0806880e:
	cmp		r3, #0x77
	bgt		_08068824
	ldr		r2, _08068820
	ldr		r1, [r2, #0x0]
	mov		r0, #0x0
	b		_08068846

.incbin "base.gba", 0x6881A, 0x2

_0806881c:	.4byte 0x080d38cc
_08068820:	.4byte 0x080d38d0

_08068824:
	mov		r0, #0xd2
	lsl		r0, r0, #0x2
	cmp		r3, r0
	ble		_0806883c
	mov		r2, #0xb4
	lsl		r2, r2, #0x12
	ldr		r1, _08068838
	ldr		r0, [r1, #0x0]
	str		r2, [r0, #0x0]
	b		_0806884a

_08068838:	.4byte 0x080d38d0

_0806883c:
	add		r0, r3, #0x0
	sub		r0, #0x78
	lsl		r0, r0, #0x10
	ldr		r2, _080688f0
	ldr		r1, [r2, #0x0]
_08068846:
	str		r0, [r1, #0x0]
	add		r1, r2, #0x0
_0806884a:
	ldr		r7, [r1, #0x0]
	ldr		r2, [r7, #0x0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08068856
	neg		r0, r2
_08068856:
	asr		r0, r0, #0x10
	cmp		r2, #0x0
	bge		_0806885e
	neg		r0, r0
_0806885e:
	sub		r0, r3, r0
	mov		r1, #0xb8
	lsl		r1, r1, #0x2
	add		r2, r4, r1
	strh	r0, [r2, #0x0]
	ldr		r6, [r6, #0x0]
	ldr		r3, [r6, #0x0]
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_08068874
	neg		r0, r3
_08068874:
	asr		r1, r0, #0x10
	cmp		r3, #0x0
	bge		_0806887c
	neg		r1, r1
_0806887c:
	mov		r0, r12
	sub		r0, r0, r1
	mov		r12, r0
	ldr		r1, _080688f4
	add		r0, r4, r1
	mov		r1, r12
	strh	r1, [r0, #0x0]
	ldrh	r1, [r2, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0806889c
	neg		r0, r3
_0806889c:
	asr		r0, r0, #0x10
	cmp		r3, #0x0
	bge		_080688a4
	neg		r0, r0
_080688a4:
	sub		r1, r5, r0
	ldr		r2, _080688f8
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x58]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_080688dc
	ldr		r4, _080688fc
	add		r0, r4, #0x0
	mov		r1, #0x10
	bl		sub_080b63dc
	sub		r0, #0x8
	lsl		r0, r0, #0x10
	ldr		r1, [r7, #0x0]
	add		r1, r1, r0
	str		r1, [r7, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x10
	bl		sub_080b63dc
	sub		r0, #0x8
	lsl		r0, r0, #0x10
	ldr		r1, [r6, #0x0]
	add		r1, r1, r0
	str		r1, [r6, #0x0]
_080688dc:
	ldr		r1, _08068900
	ldr		r0, [r6, #0x0]
	str		r0, [r1, #0x0]
	ldr		r1, _08068904
	ldr		r0, [r7, #0x0]
	str		r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x688EE, 0x2

_080688f0:	.4byte 0x080d38d0
_080688f4:	.4byte 0x000002E2
_080688f8:	.4byte 0x00000252
_080688fc:	.4byte 0x0200BDD4
_08068900:	.4byte 0x0200CE40
_08068904:	.4byte 0x0200CE2C
	thumb_func_end sub_080687c0

	thumb_func_start sub_08068908
sub_08068908:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	cmp		r2, #0x32
	bgt		_08068928
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	lsl		r0, r2, #0x5
	sub		r0, r0, r2
	mov		r1, #0x32
	bl		sub_080bbcac
	strb	r0, [r4, #0x2]
	mov		r0, #0x1f
	strb	r0, [r4, #0x1]
	b		_08068950
_08068928:
	cmp		r2, #0x63
	bgt		_08068946
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	mov		r0, #0x1f
	strb	r0, [r4, #0x2]
	mov		r1, #0x64
	sub		r1, r1, r2
	lsl		r0, r1, #0x5
	sub		r0, r0, r1
	mov		r1, #0x32
	bl		sub_080bbcac
	strb	r0, [r4, #0x1]
	b		_08068950
_08068946:
	mov		r1, #0x0
	strb	r1, [r4, #0x0]
	mov		r0, #0x1f
	strb	r0, [r4, #0x2]
	strb	r1, [r4, #0x1]
_08068950:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x68956, 0x2
	thumb_func_end sub_08068908

	thumb_func_start sub_08068958
sub_08068958:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	str		r0, [sp, #0x4]
	add		r4, r1, #0x0
	mov		r7, #0x0
	ldr		r0, _08068984
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08068994
	mov		r0, #0xa4
	lsl		r0, r0, #0x2
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08068988
	mov		r7, #0x1
	b		_08068994

_08068984:	.4byte 0x0000028F

_08068988:
	ldr		r0, _08068ab8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08068994
	mov		r7, #0x2
_08068994:
	ldr		r0, [sp, #0x4]
	add		r0, #0xa8
	ldr		r1, [r0, #0x0]
	mov		r9, r0
	cmp		r1, r4
	bge		_080689a2
	str		r4, [r0, #0x0]
_080689a2:
	ldr		r6, _08068abc
	add		r0, r6, #0x0
	mov		r1, #0x3
	bl		sub_080b63dc
	ldr		r1, [sp, #0x4]
	add		r1, #0xac
	mov		r8, r1
	ldr		r5, _08068ac0
	ldr		r1, [r5, #0x0]
	lsl		r0, r0, #0x1
	lsl		r4, r7, #0x3
	add		r4, r4, r7
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	add		r1, #0x50
	add		r1, r1, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	mov		r3, r8
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x3
	bl		sub_080b63dc
	ldr		r2, [sp, #0x4]
	add		r2, #0xb0
	ldr		r1, [r5, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	add		r1, #0x56
	add		r1, r1, r0
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	str		r0, [r2, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x3
	bl		sub_080b63dc
	ldr		r2, [sp, #0x4]
	add		r2, #0xb4
	ldr		r1, [r5, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	add		r1, #0x5c
	add		r1, r1, r0
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	str		r0, [r2, #0x0]
	ldr		r0, [sp, #0x4]
	add		r0, #0xb8
	mov		r10, r0
	mov		r4, r9
	mov		r2, r8
	mov		r3, #0x2
_08068a10:
	ldr		r1, [r2, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bne		_08068a1e
	add		r0, r1, #0x0
	sub		r0, #0x32
	str		r0, [r2, #0x0]
_08068a1e:
	add		r2, #0x4
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08068a10
	mov		r1, #0x3
	mov		r0, r10
	add		r0, #0xc
_08068a2c:
	str		r1, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08068a2c
	mov		r0, #0x0
	mov		r12, r10
_08068a3a:
	add		r1, r0, #0x1
	mov		r8, r1
	mov		r5, r8
	cmp		r1, #0x3
	bgt		_08068a70
	lsl		r0, r0, #0x2
	mov		r2, r12
	add		r7, r2, r0
	mov		r6, r9
	lsl		r0, r1, #0x2
	add		r4, r0, r2
_08068a50:
	ldr		r3, [r7, #0x0]
	lsl		r1, r3, #0x2
	add		r1, r6, r1
	ldr		r2, [r4, #0x0]
	lsl		r0, r2, #0x2
	add		r0, r6, r0
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bge		_08068a68
	str		r3, [r4, #0x0]
	str		r2, [r7, #0x0]
_08068a68:
	add		r4, #0x4
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08068a50
_08068a70:
	mov		r0, r8
	cmp		r0, #0x2
	ble		_08068a3a
	mov		r3, #0x0
	str		r3, [sp, #0x8]
	mov		r8, r3
	mov		r7, r10
_08068a7e:
	ldr		r1, [r7, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r9
	ldr		r6, [r0, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r6, r0
	beq		_08068acc
	ldr		r2, _08068ac4
	add		r0, r1, r2
	mov		r5, #0x0
	ldrsb	r5, [r0, r5]
	add		r0, r6, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	str		r0, [sp, #0x0]
	ldr		r0, _08068ac8
	mov		r1, r8
	add		r2, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_080063bc
	b		_08068ae0

_08068ab8:	.4byte 0x00000291
_08068abc:	.4byte 0x0200BDD4
_08068ac0:	.4byte 0x0200BB50
_08068ac4:	.4byte 0x080d3894
_08068ac8:	.4byte 0x02000D6C

_08068acc:
	ldr		r3, _08068b18
	add		r0, r1, r3
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	str		r6, [sp, #0x0]
	ldr		r0, _08068b1c
	mov		r1, r8
	add		r3, r6, #0x0
	bl		sub_080063bc
_08068ae0:
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_08068aea
	mov		r0, r8
	str		r0, [sp, #0x8]
_08068aea:
	add		r7, #0x4
	mov		r1, #0x1
	add		r8, r1
	mov		r2, r8
	cmp		r2, #0x3
	ble		_08068a7e
	mov		r3, r9
	ldr		r1, [r3, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08068b28
	ldr		r1, [sp, #0x4]
	ldr		r0, [r1, #0x64]
	cmp		r0, #0x1
	bgt		_08068b28
	ldr		r0, _08068b1c
	ldr		r1, _08068b20
	ldr		r2, _08068b24
	bl		sub_080060b4
	b		_08068b32

.incbin "base.gba", 0x68B16, 0x2

_08068b18:	.4byte 0x080d3894
_08068b1c:	.4byte 0x02000D6C
_08068b20:	.4byte 0x80808080
_08068b24:	.4byte 0x080d38d4

_08068b28:
	ldr		r0, _08068b44
	ldr		r2, _08068b48
	ldr		r1, [sp, #0x8]
	bl		sub_080060b4
_08068b32:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x68B42, 0x2

_08068b44:	.4byte 0x02000D6C
_08068b48:	.4byte 0x080d38dc
	thumb_func_end sub_08068958

	thumb_func_start sub_08068b4c
sub_08068b4c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _08068b94
	ldr		r5, [r0, #0x0]
	mov		r1, #0x2a
	ldrsh	r0, [r5, r1]
	mov		r1, #0x28
	ldrsh	r4, [r5, r1]
	sub		r0, r0, r4
	mul		r0, r6
	mov		r1, #0xf0
	lsl		r1, r1, #0x2
	mov		r8, r1
	bl		sub_080bbcac
	add		r0, r0, r4
	cmp		r0, r7
	bgt		_08068b98
	mov		r1, #0x2e
	ldrsh	r0, [r5, r1]
	mov		r1, #0x2c
	ldrsh	r4, [r5, r1]
	sub		r0, r0, r4
	mul		r0, r6
	mov		r1, r8
	bl		sub_080bbcac
	add		r0, r0, r4
	cmp		r0, r7
	blt		_08068b98
	mov		r0, #0x0
	b		_08068b9a

.incbin "base.gba", 0x68B92, 0x2

_08068b94:	.4byte 0x0200BB50

_08068b98:
	mov		r0, #0x1
_08068b9a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08068b4c

	thumb_func_start sub_08068ba4
sub_08068ba4:
	push	{ r4, lr }
	mov		r3, #0x0
	add		r4, r0, #0x0
	mul		r4, r0
	add		r0, r4, #0x0
	add		r4, r1, #0x0
	mul		r4, r1
	add		r1, r4, #0x0
	add		r0, r0, r1
	add		r1, r2, #0x0
	mul		r1, r2
	cmp		r0, r1
	blt		_08068bc0
	mov		r3, #0x1
_08068bc0:
	add		r0, r3, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08068ba4

	thumb_func_start sub_08068bc8
sub_08068bc8:
	push	{ r4, lr }
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	add		r3, r2, #0x0
	cmp		r1, r2
	bhi		_08068bee
	mov		r3, #0x0
	cmp		r0, r1
	bcc		_08068bea
	cmp		r0, r2
	bcs		_08068bea
	mov		r3, #0x1
_08068bea:
	add		r0, r3, #0x0
	b		_08068bfa
_08068bee:
	mov		r0, #0x0
	cmp		r4, r1
	bcs		_08068bf8
	cmp		r4, r3
	bcs		_08068bfa
_08068bf8:
	mov		r0, #0x1
_08068bfa:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08068bc8

	thumb_func_start sub_08068c00
sub_08068c00:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, _08068c3c
	ldr		r1, _08068c40
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x19
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0x18
_08068c2a:
	add		r0, r5, #0x0
	bl		sub_080685a4
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08068c2a
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08068c3c:	.4byte 0x0200DB50
_08068c40:	.4byte 0xFFFFFEB0
	thumb_func_end sub_08068c00

	thumb_func_start sub_08068c44
sub_08068c44:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, _08068c80
	ldr		r1, _08068c84
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	mov		r2, #0x3f
	mov		r3, #0x19
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0x18
_08068c6e:
	add		r0, r5, #0x0
	bl		sub_080685a4
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08068c6e
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08068c80:	.4byte 0x0200DB50
_08068c84:	.4byte 0xFFFFFEB0
	thumb_func_end sub_08068c44

	thumb_func_start sub_08068c88
sub_08068c88:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r5, r4, r0
_08068c92:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08068c92
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x68CB0, 0xA4
	thumb_func_end sub_08068c88

	thumb_func_start sub_08068d54
sub_08068d54:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _08068d7c
	ldr		r1, [r2, #0x58]
	ldr		r0, [r0, #0x0]
	sub		r3, r1, r0
	ldr		r0, _08068d80
	cmp		r3, r0
	blt		_08068d78
	add		r0, r2, #0x0
	add		r0, #0x60
	ldr		r1, _08068d84
	ldr		r2, [r2, #0x5c]
	ldr		r1, [r1, #0x0]
	sub		r2, r2, r1
	add		r1, r3, #0x0
	bl		sub_0808e4e8
_08068d78:
	pop		{ r0 }
	bx		r0

_08068d7c:	.4byte 0x0200CE30
_08068d80:	.4byte 0xFFE00000
_08068d84:	.4byte 0x0200CE44
	thumb_func_end sub_08068d54

	thumb_func_start sub_08068d88
sub_08068d88:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r1, #0x1
	beq		_08068dba
	cmp		r1, #0x1
	bgt		_08068d9a
	cmp		r1, #0x0
	beq		_08068da0
	b		_08068dda
_08068d9a:
	cmp		r1, #0x2
	beq		_08068dce
	b		_08068dda
_08068da0:
	add		r0, r4, #0x0
	add		r0, #0x60
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08068dda
_08068dba:
	mov		r0, #0x4f
	bl		sub_0808f690
	add		r0, r4, #0x0
	add		r0, #0x60
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_08068dda
_08068dce:
	add		r0, r4, #0x0
	add		r0, #0x60
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
_08068dda:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08068d88

	thumb_func_start sub_08068de0
sub_08068de0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0xd0
	bl		sub_0808b3d4
_08068dea:
	add		r0, r4, #0x0
	bl		sub_080b7690
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r4, #0x54]
	cmp		r0, #0x0
	bne		_08068dea
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08068de0

	thumb_func_start sub_08068e08
sub_08068e08:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r4, #0x60
	ldr		r2, _08068e2c
	ldr		r1, [r0, #0x58]
	ldr		r2, [r2, #0x0]
	sub		r1, r1, r2
	ldr		r3, _08068e30
	ldr		r2, [r0, #0x5c]
	ldr		r0, [r3, #0x0]
	sub		r2, r2, r0
	add		r0, r4, #0x0
	bl		sub_0808e4e8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x68E2A, 0x2

_08068e2c:	.4byte 0x0200CE30
_08068e30:	.4byte 0x0200CE44

.incbin "base.gba", 0x68E34, 0x14
	thumb_func_end sub_08068e08

	thumb_func_start sub_08068e48
sub_08068e48:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, _08068e68
	cmp		r1, r0
	beq		_08068e98
	cmp		r1, r0
	bhi		_08068e6c
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08068e8e
	b		_08068eb8

.incbin "base.gba", 0x68E66, 0x2

_08068e68:	.4byte 0x00000F82

_08068e6c:
	ldr		r0, _08068e84
	cmp		r1, r0
	bne		_08068eb8
	lsl		r0, r3, #0x10
	asr		r3, r0, #0x10
	mov		r0, #0x9c
	lsl		r0, r0, #0x6
	cmp		r3, r0
	bne		_08068e88
	bl		sub_0806c4b0
	b		_08068ebc

_08068e84:	.4byte 0x00000F83

_08068e88:
	ldr		r0, _08068e94
	cmp		r3, r0
	bne		_08068ebc
_08068e8e:
	bl		sub_0806d174
	b		_08068ebc

_08068e94:	.4byte 0x00002701

_08068e98:
	ldr		r2, _08068eb0
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	mov		r0, #0xb8
	lsl		r0, r0, #0x5
	cmp		r1, r0
	bne		_08068ebc
	ldr		r1, _08068eb4
	ldr		r0, [r2, #0x8]
	str		r0, [r1, #0x0]
	b		_08068ebc

.incbin "base.gba", 0x68EAE, 0x2

_08068eb0:	.4byte 0x0200BEFC
_08068eb4:	.4byte 0x0200BB58

_08068eb8:
	add		r0, r4, #0x0
	b		_08068ec0
_08068ebc:
	lsl		r0, r5, #0x2
	add		r0, r4, r0
_08068ec0:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x68EC6, 0x2
	thumb_func_end sub_08068e48

	thumb_func_start sub_08068ec8
sub_08068ec8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _080692c0
	str		r0, [r5, #0x4c]
	ldr		r0, _080692c4
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0xa0
	bl		sub_0808e21c
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r3, #0x86
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r6, #0x98
	lsl		r6, r6, #0x1
	add		r0, r5, r6
	bl		sub_0808e21c
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r3, #0xce
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	str		r4, [r0, #0x0]
	add		r6, #0x90
	add		r0, r5, r6
	bl		sub_0808e21c
	mov		r1, #0x8c
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r3, #0x8b
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r4, [r0, #0x0]
	add		r6, #0x90
	add		r0, r5, r6
	bl		sub_0808e21c
	mov		r1, #0xb0
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r3, #0xaf
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r4, [r0, #0x0]
	add		r6, #0x90
	add		r0, r5, r6
	bl		sub_0808e21c
	mov		r1, #0xd4
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r3, #0xd3
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r4, [r0, #0x0]
	add		r6, #0x90
	add		r0, r5, r6
	bl		sub_0808e21c
	mov		r1, #0xf8
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_0808b374
	mov		r3, #0xf7
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	str		r4, [r0, #0x0]
	ldr		r6, _080692c8
	add		r4, r5, r6
	mov		r6, #0x3
	mov		r0, #0x0
	mov		r8, r0
	mov		r7, #0x1
	neg		r7, r7
_08068f92:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r1, r8
	str		r1, [r4, #0x6c]
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, r7
	bne		_08068f92
	ldr		r3, _080692cc
	add		r4, r5, r3
	mov		r6, #0x7
	mov		r0, #0x0
	mov		r8, r0
	mov		r7, #0x1
	neg		r7, r7
_08068fba:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r1, r8
	str		r1, [r4, #0x6c]
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, r7
	bne		_08068fba
	ldr		r3, _080692d0
	add		r1, r5, r3
	ldr		r0, _080692d4
	ldr		r2, [r0, #0x0]
	mov		r4, #0xaa
	lsl		r4, r4, #0x1
	add		r0, r2, r4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r6, #0xbd
	lsl		r6, r6, #0x4
	add		r1, r5, r6
	mov		r3, #0x88
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r4, _080692d8
	add		r1, r5, r4
	mov		r6, #0xac
	lsl		r6, r6, #0x1
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080692dc
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xbe
	lsl		r0, r0, #0x4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080692e0
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xbf
	lsl		r0, r0, #0x4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080692e4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080692e8
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xc1
	lsl		r0, r0, #0x4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080692ec
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xc2
	lsl		r0, r0, #0x4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080692f0
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xc3
	lsl		r0, r0, #0x4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080692f4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xc4
	lsl		r0, r0, #0x4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080692f8
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x4
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xc5
	lsl		r0, r0, #0x4
	add		r1, r5, r0
	add		r3, #0x4
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	mov		r0, #0xff
	str		r0, [r1, #0x0]
	ldr		r6, _080692fc
	add		r1, r5, r6
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0x86
	lsl		r0, r0, #0x3
	add		r1, r5, r0
	add		r0, r2, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r3, _08069300
	add		r1, r5, r3
	add		r0, r2, #0x0
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r4, #0x87
	lsl		r4, r4, #0x3
	add		r1, r5, r4
	add		r0, r2, #0x0
	add		r0, #0xac
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r6, _08069304
	add		r1, r5, r6
	add		r0, r2, #0x0
	add		r0, #0xb0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x88
	lsl		r0, r0, #0x3
	add		r1, r5, r0
	add		r0, r2, #0x0
	add		r0, #0xb4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r3, #0x10
	add		r1, r5, r3
	add		r0, r2, #0x0
	add		r0, #0xb8
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x10
	add		r1, r5, r4
	add		r0, r2, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r6, #0x10
	add		r1, r5, r6
	add		r0, r2, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x8a
	lsl		r0, r0, #0x3
	add		r1, r5, r0
	add		r0, r2, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r3, #0x10
	add		r1, r5, r3
	add		r0, r2, #0x0
	add		r0, #0xc8
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x10
	add		r1, r5, r4
	add		r0, r2, #0x0
	add		r0, #0xcc
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r6, #0x10
	add		r1, r5, r6
	add		r0, r2, #0x0
	add		r0, #0xd0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x8c
	lsl		r0, r0, #0x3
	add		r1, r5, r0
	add		r0, r2, #0x0
	add		r0, #0xd4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r3, #0x10
	add		r1, r5, r3
	add		r0, r2, #0x0
	add		r0, #0xd8
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x10
	add		r1, r5, r4
	add		r0, r2, #0x0
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r6, #0x10
	add		r1, r5, r6
	add		r0, r2, #0x0
	add		r0, #0xe0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x8e
	lsl		r0, r0, #0x3
	add		r1, r5, r0
	add		r0, r2, #0x0
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r3, #0x10
	add		r1, r5, r3
	add		r0, r2, #0x0
	add		r0, #0xe8
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x10
	add		r1, r5, r4
	add		r0, r2, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r6, #0x10
	add		r1, r5, r6
	add		r0, r2, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x3
	add		r1, r5, r0
	add		r0, r2, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r3, #0x10
	add		r1, r5, r3
	add		r0, r2, #0x0
	add		r0, #0xf8
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x10
	add		r1, r5, r4
	add		r0, r2, #0x0
	add		r0, #0xfc
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r6, #0x10
	b		_08069308

.incbin "base.gba", 0x692BE, 0x2

_080692c0:	.4byte 0x080e034c
_080692c4:	.4byte 0x080e225c
_080692c8:	.4byte 0x000004C4
_080692cc:	.4byte 0x0000070C
_080692d0:	.4byte 0x00000BCC
_080692d4:	.4byte 0x0200BB58
_080692d8:	.4byte 0x00000BD4
_080692dc:	.4byte 0x00000BD8
_080692e0:	.4byte 0x00000BE8
_080692e4:	.4byte 0x00000BF8
_080692e8:	.4byte 0x00000C08
_080692ec:	.4byte 0x00000C18
_080692f0:	.4byte 0x00000C28
_080692f4:	.4byte 0x00000C38
_080692f8:	.4byte 0x00000C48
_080692fc:	.4byte 0x00000C58
_08069300:	.4byte 0x00000434
_08069304:	.4byte 0x0000043C

_08069308:
	add		r1, r5, r6
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	mov		r6, #0x82
	lsl		r6, r6, #0x1
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _080693b4
	add		r1, r5, r0
	add		r3, #0x8
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r4, #0x8
	add		r1, r5, r4
	add		r6, #0x8
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r4, _080693b8
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r3, r2, r0
	ldr		r1, _080693bc
	add		r2, r5, r1
	mov		r1, #0x3b
_08069348:
	ldmia	r3!, { r0 }
	stmia	r2!, { r0 }
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08069348
	mov		r2, #0x0
	str		r2, [r5, #0x54]
	str		r2, [r5, #0x58]
	mov		r6, #0x84
	lsl		r6, r6, #0x3
	add		r3, r5, r6
	ldr		r0, _080693c0
	add		r1, r5, r0
	add		r6, #0x8
	add		r0, r5, r6
	str		r2, [r0, #0x0]
	str		r2, [r1, #0x0]
	str		r2, [r3, #0x0]
	ldr		r1, _080693c4
	add		r0, r5, r1
	str		r2, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	str		r0, [r5, #0x64]
	ldr		r3, _080693c8
	add		r0, r5, r3
	strb	r2, [r0, #0x0]
	ldr		r1, _080693cc
	ldr		r4, _080693d0
	add		r0, r1, r4
	mov		r6, #0x0
	ldrsh	r3, [r0, r6]
	mov		r0, #0x64
	mul		r0, r3
	mov		r3, #0xea
	lsl		r3, r3, #0x2
	add		r1, r1, r3
	mov		r4, #0x0
	ldrsh	r1, [r1, r4]
	add		r0, r0, r1
	str		r0, [r5, #0x60]
	mov		r6, #0x98
	lsl		r6, r6, #0x3
	add		r0, r5, r6
	strb	r2, [r0, #0x0]
	ldr		r1, _080693d4
	add		r0, r5, r1
	strb	r2, [r0, #0x0]
	add		r0, r5, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x693B2, 0x2

_080693b4:	.4byte 0x00000494
_080693b8:	.4byte 0x0200D524
_080693bc:	.4byte 0x00000C6C
_080693c0:	.4byte 0x00000424
_080693c4:	.4byte 0x0000041C
_080693c8:	.4byte 0x000004C2
_080693cc:	.4byte 0x02000BAC
_080693d0:	.4byte 0x000003AA
_080693d4:	.4byte 0x000004C1
	thumb_func_end sub_08068ec8

	thumb_func_start sub_080693d8
sub_080693d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r9, r1
	ldr		r0, _080694ac
	str		r0, [r5, #0x4c]
	ldr		r0, _080694b0
	str		r0, [r5, #0xc]
	ldr		r1, _080694b4
	add		r0, r5, r1
	cmp		r0, #0x0
	beq		_0806940e
	ldr		r1, _080694b8
	add		r4, r5, r1
	cmp		r0, r4
	beq		_0806940e
	ldr		r0, _080694b4
	add		r6, r5, r0
_08069400:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	cmp		r6, r4
	bne		_08069400
_0806940e:
	ldr		r1, _080694bc
	add		r0, r5, r1
	add		r7, r5, #0x0
	add		r7, #0xa0
	mov		r1, #0x40
	add		r1, r1, r5
	mov		r8, r1
	cmp		r0, #0x0
	beq		_0806943a
	ldr		r1, _080694c0
	add		r4, r5, r1
	cmp		r0, r4
	beq		_0806943a
	ldr		r0, _080694bc
	add		r6, r5, r0
_0806942c:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	cmp		r6, r4
	bne		_0806942c
_0806943a:
	mov		r1, #0xdc
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xb8
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0x94
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0x98
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r7, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806949e
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0806949e:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x694AA, 0x2

_080694ac:	.4byte 0x080e034c
_080694b0:	.4byte 0x080e225c
_080694b4:	.4byte 0x0000070C
_080694b8:	.4byte 0x00000B8C
_080694bc:	.4byte 0x000004C4
_080694c0:	.4byte 0x00000704
	thumb_func_end sub_080693d8

	thumb_func_start sub_080694c4
sub_080694c4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	ldr		r0, _080697d8
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	str		r0, [r7, #0x7c]
	add		r1, r7, #0x0
	add		r1, #0x80
	ldr		r0, [r2, #0x4]
	lsl		r0, r0, #0x10
	str		r0, [r1, #0x0]
	mov		r6, #0x0
	str		r6, [r7, #0x68]
	str		r6, [r7, #0x6c]
	add		r2, r7, #0x0
	add		r2, #0x90
	mov		r0, #0x78
	str		r0, [r2, #0x0]
	ldr		r1, _080697dc
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	mov		r0, #0xe1
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x94
	str		r6, [r0, #0x0]
	add		r0, #0x8
	str		r6, [r0, #0x0]
	ldr		r1, _080697e0
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	ldr		r0, _080697e4
	add		r1, r7, r0
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, #0xd6
	lsl		r1, r1, #0x4
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	ldr		r2, _080697e8
	add		r0, r7, r2
	str		r6, [r0, #0x0]
	add		r1, #0x8
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	add		r0, r4, #0x0
	mov		r1, #0xd
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, _080697ec
	add		r1, r7, r0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	mov		r1, #0xc7
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r5, #0x80
	lsl		r5, r5, #0x1
	strh	r5, [r0, #0x0]
	mov		r2, #0xc8
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	sub		r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x14
	mov		r9, r2
	mov		r1, r9
	strh	r1, [r0, #0x0]
	add		r4, r7, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r2, _080697f0
	add		r0, r7, r2
	mov		r1, #0x1
	mov		r8, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xfe
	strh	r5, [r0, #0x0]
	add		r0, r7, r5
	strh	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xfc
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0xf
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _080697f4
	add		r0, r7, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	sub		r1, #0x15
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	ldr		r2, _080697f8
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	add		r1, #0x8
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	mov		r2, #0x97
	lsl		r2, r2, #0x3
	add		r1, r7, r2
	add		r2, #0x4
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	str		r5, [r1, #0x0]
	mov		r1, #0x83
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r4, r7, r2
	add		r0, r4, #0x0
	mov		r1, #0xe
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _080697fc
	add		r0, r7, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	sub		r1, #0x15
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	ldr		r2, _08069800
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	add		r1, #0x8
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	add		r2, #0x3a
	add		r4, r7, r2
	add		r0, r4, #0x0
	mov		r1, #0x10
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, _08069804
	add		r1, r7, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r1, #0xcd
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	ldr		r2, _08069808
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	add		r1, #0x8
	add		r0, r7, r1
	mov		r2, r9
	strh	r2, [r0, #0x0]
	mov		r0, #0xdc
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x11
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _0806980c
	add		r0, r7, r1
	strh	r5, [r0, #0x0]
	mov		r2, #0xf1
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	strh	r5, [r0, #0x0]
	add		r1, #0x66
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	add		r2, #0x8
	add		r0, r7, r2
	strh	r6, [r0, #0x0]
	mov		r8, r5
	mov		r0, #0x3
	mov		r10, r0
	mov		r1, #0x1e
	mov		r9, r1
	mov		r2, #0xa3
	lsl		r2, r2, #0x3
	add		r4, r7, r2
	ldr		r0, _08069810
	add		r6, r7, r0
	mov		r5, #0x3
_080696a2:
	add		r0, r6, #0x0
	mov		r1, #0xd
	bl		sub_0808e03c
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r1, r8
	strh	r1, [r4, #0x0]
	strh	r1, [r4, #0x2]
	mov		r2, r10
	strb	r2, [r4, #0x15]
	mov		r0, r9
	strh	r0, [r4, #0x8]
	add		r4, #0x90
	add		r6, #0x90
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080696a2
	add		r0, r7, #0x0
	bl		sub_08069844
	mov		r3, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	mov		r9, r1
	mov		r2, #0x14
	mov		r10, r2
	mov		r0, #0xec
	lsl		r0, r0, #0x3
	add		r5, r7, r0
	mov		r1, #0x4
	mov		r8, r1
	ldr		r2, _08069814
	add		r6, r7, r2
	sub		r0, #0x54
	add		r2, r7, r0
_080696f0:
	lsl		r4, r3, #0x3
	add		r1, r3, #0x0
	add		r1, #0x14
	add		r0, r2, #0x0
	str		r2, [sp, #0x0]
	str		r3, [sp, #0x4]
	bl		sub_0808e03c
	ldr		r0, _080697d8
	ldr		r1, [r0, #0x0]
	mov		r0, #0xa2
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	add		r4, r1, r4
	ldr		r0, [r4, #0x0]
	str		r0, [r6, #0x0]
	add		r1, r8
	ldr		r0, [r1, #0x0]
	str		r0, [r6, #0x20]
	mov		r1, r9
	strh	r1, [r5, #0x0]
	strh	r1, [r5, #0x2]
	mov		r0, r10
	strh	r0, [r5, #0x8]
	add		r5, #0x90
	mov		r1, #0x8
	add		r8, r1
	add		r6, #0x4
	ldr		r2, [sp, #0x0]
	add		r2, #0x90
	ldr		r3, [sp, #0x4]
	add		r3, #0x1
	cmp		r3, #0x7
	ble		_080696f0
	ldr		r2, _08069818
	add		r0, r7, r2
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _0806981c
	add		r0, r7, r1
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08069820
	add		r0, r7, r2
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08069824
	add		r0, r7, r1
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08069828
	add		r0, r7, r2
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _0806982c
	add		r0, r7, r1
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08069830
	add		r0, r7, r2
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08069834
	add		r0, r7, r1
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08069838
	add		r0, r7, r2
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r2, #0x90
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	add		r2, #0x90
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	ldr		r1, _0806983c
	add		r0, r7, r1
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	ldr		r2, _08069840
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	add		r2, #0x90
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	add		r2, #0x90
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	add		r2, #0x90
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x697D6, 0x2

_080697d8:	.4byte 0x0200BB58
_080697dc:	.4byte 0x00000704
_080697e0:	.4byte 0x0000040C
_080697e4:	.4byte 0x00000D5C
_080697e8:	.4byte 0x00000D64
_080697ec:	.4byte 0x00000199
_080697f0:	.4byte 0x00000109
_080697f4:	.4byte 0x00000229
_080697f8:	.4byte 0x00000216
_080697fc:	.4byte 0x000002B9
_08069800:	.4byte 0x000002A6
_08069804:	.4byte 0x00000349
_08069808:	.4byte 0x00000336
_0806980c:	.4byte 0x000003C6
_08069810:	.4byte 0x000004C4
_08069814:	.4byte 0x00000B8C
_08069818:	.4byte 0x0000070C
_0806981c:	.4byte 0x0000079C
_08069820:	.4byte 0x0000082C
_08069824:	.4byte 0x000008BC
_08069828:	.4byte 0x0000094C
_0806982c:	.4byte 0x000009DC
_08069830:	.4byte 0x00000A6C
_08069834:	.4byte 0x00000AFC
_08069838:	.4byte 0x00000775
_0806983c:	.4byte 0x00000925
_08069840:	.4byte 0x000009B5
	thumb_func_end sub_080694c4

	thumb_func_start sub_08069844
sub_08069844:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r1, #0xa3
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	mov		r1, #0x3
_08069854:
	strh	r2, [r0, #0x0]
	strh	r2, [r0, #0x2]
	add		r0, #0x90
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08069854
	mov		r4, #0x0
	ldr		r0, _080698a8
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x20]
	cmp		r4, r0
	bge		_080698a2
	add		r3, r1, #0x0
	add		r6, r3, #0x0
	add		r6, #0x90
	mov		r7, #0x9f
	lsl		r7, r7, #0x1
	mov		r0, #0xa3
	lsl		r0, r0, #0x3
	add		r2, r5, r0
_0806987c:
	ldr		r0, [r3, #0x1c]
	add		r1, r4, #0x0
	mul		r1, r0
	ldr		r0, [r6, #0x0]
	add		r0, r0, r1
	ldr		r1, [r5, #0x68]
	sub		r1, r0, r1
	add		r0, r1, #0x0
	add		r0, #0x27
	cmp		r0, r7
	bhi		_0806989a
	strh	r1, [r2, #0x0]
	ldr		r0, [r3, #0x4]
	strh	r0, [r2, #0x2]
	add		r2, #0x90
_0806989a:
	add		r4, #0x1
	ldr		r0, [r3, #0x20]
	cmp		r4, r0
	blt		_0806987c
_080698a2:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080698a8:	.4byte 0x0200BB58
	thumb_func_end sub_08069844

	thumb_func_start sub_080698ac
sub_080698ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	ldr		r1, _080698f4
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	mov		r2, #0x84
	lsl		r2, r2, #0x3
	add		r1, r6, r2
	add		r4, r1, r0
	ldr		r1, [r6, #0x7c]
	cmp		r1, #0x0
	bge		_080698d4
	ldr		r3, _080698f8
	add		r1, r1, r3
_080698d4:
	asr		r1, r1, #0x10
	ldr		r2, _080698fc
	ldr		r0, [r2, #0x0]
	ldr		r3, [r0, #0x0]
	ldr		r0, [r3, #0x24]
	sub		r1, r1, r0
	str		r1, [r4, #0x0]
	mov		r10, r2
	mov		r4, r8
	cmp		r4, #0x0
	beq		_08069900
	cmp		r4, #0x1
	beq		_08069906
	ldr		r7, [r3, #0x48]
	ldr		r3, [r3, #0x4c]
	b		_0806990a

_080698f4:	.4byte 0x0000041C
_080698f8:	.4byte 0x0000FFFF
_080698fc:	.4byte 0x080d38e8

_08069900:
	ldr		r7, [r3, #0x38]
	ldr		r3, [r3, #0x3c]
	b		_0806990a
_08069906:
	ldr		r7, [r3, #0x40]
	ldr		r3, [r3, #0x44]
_0806990a:
	mov		r9, r3
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080699a0
	ldr		r0, _08069954
	add		r4, r6, r0
	ldr		r5, [r4, #0x0]
	cmp		r5, #0x0
	bne		_080699aa
	mov		r1, r8
	cmp		r1, #0x2
	beq		_080699a0
	mov		r0, #0xc
	bl		sub_0808f690
	mov		r2, #0x82
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	str		r5, [r0, #0x0]
	mov		r3, #0x81
	lsl		r3, r3, #0x3
	add		r1, r6, r3
	mov		r0, r10
	ldr		r5, [r0, #0x0]
	ldr		r2, [r5, #0x0]
	ldr		r0, [r2, #0x68]
	sub		r0, r7, r0
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	bge		_08069958
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	b		_080699a0

.incbin "base.gba", 0x69952, 0x2

_08069954:	.4byte 0x0000040C

_08069958:
	ldr		r0, [r2, #0x6c]
	sub		r0, r7, r0
	cmp		r1, r0
	bge		_08069964
	mov		r0, #0x2
	b		_08069966
_08069964:
	mov		r0, #0x3
_08069966:
	str		r0, [r4, #0x0]
	mov		r1, #0xdc
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r2, r6, #0x0
	add		r2, #0xf4
	ldr		r0, [r5, #0x0]
	ldr		r1, [r0, #0x54]
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	mov		r2, #0xf1
	lsl		r2, r2, #0x2
	add		r1, r6, r2
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xf6
	ldrh	r1, [r0, #0x0]
	ldr		r3, _08069a3c
	add		r0, r6, r3
	strh	r1, [r0, #0x0]
	ldr		r4, _08069a40
	add		r1, r6, r4
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
_080699a0:
	ldr		r1, _08069a44
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080699c2
_080699aa:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_080699c2
	mov		r2, #0x82
	lsl		r2, r2, #0x3
	add		r1, r6, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_080699c2:
	mov		r3, #0x81
	lsl		r3, r3, #0x3
	add		r5, r6, r3
	ldr		r1, [r5, #0x0]
	cmp		r1, r7
	bge		_08069ab8
	lsr		r0, r7, #0x1f
	add		r0, r7, r0
	asr		r0, r0, #0x1
	sub		r0, r1, r0
	add		r2, r6, #0x0
	add		r2, #0x80
	add		r1, r0, #0x0
	mul		r1, r0
	ldr		r4, _08069a48
	add		r0, r6, r4
	ldr		r0, [r0, #0x0]
	mul		r1, r0
	mov		r3, r9
	lsl		r0, r3, #0x10
	sub		r1, r1, r0
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r4, [r0, #0x0]
	ldr		r0, [r4, #0x4]
	lsl		r0, r0, #0x10
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	add		r5, r6, #0x0
	add		r5, #0x90
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x8]
	bl		sub_080bbcac
	ldr		r1, [r5, #0x0]
	mul		r1, r0
	ldr		r0, [r4, #0x10]
	cmp		r1, r0
	bge		_08069a12
	add		r1, r0, #0x0
_08069a12:
	ldr		r0, [r6, #0x7c]
	add		r2, r0, r1
	str		r2, [r6, #0x7c]
	ldr		r1, [r6, #0x68]
	ldr		r0, [r6, #0x70]
	add		r1, r1, r0
	str		r1, [r6, #0x68]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08069a2a
	ldr		r3, _08069a4c
	add		r0, r2, r3
_08069a2a:
	asr		r3, r0, #0x10
	add		r0, r1, #0x0
	add		r0, #0x18
	cmp		r3, r0
	bge		_08069a50
	add		r0, r3, #0x0
	sub		r0, #0x18
	b		_08069a5c

.incbin "base.gba", 0x69A3A, 0x2

_08069a3c:	.4byte 0x000003C6
_08069a40:	.4byte 0x0000042C
_08069a44:	.4byte 0x0000040C
_08069a48:	.4byte 0x00000404
_08069a4c:	.4byte 0x0000FFFF

_08069a50:
	add		r0, r1, #0x0
	add		r0, #0xd8
	cmp		r3, r0
	ble		_08069a5e
	add		r0, r3, #0x0
	sub		r0, #0xd8
_08069a5c:
	str		r0, [r6, #0x68]
_08069a5e:
	ldr		r0, [r6, #0x68]
	cmp		r0, #0x0
	bge		_08069a6a
	mov		r0, #0x0
	str		r0, [r6, #0x68]
	b		_08069a74
_08069a6a:
	mov		r1, #0xd2
	lsl		r1, r1, #0x3
	cmp		r0, r1
	ble		_08069a74
	str		r1, [r6, #0x68]
_08069a74:
	ldr		r1, _08069ab0
	ldr		r0, _08069ab4
	mov		r3, #0x0
	add		r4, r0, #0x4
	add		r1, #0x4
	mov		r2, #0x2
_08069a80:
	ldr		r0, [r6, #0x68]
	lsl		r0, r0, #0x10
	stmia	r1!, { r0 }
	stmia	r4!, {  r3 }
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08069a80
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	ldr		r1, [r1, #0x34]
	sub		r0, r0, r1
	str		r0, [r5, #0x0]
	cmp		r0, #0x0
	bgt		_08069aa4
	mov		r0, #0x0
	str		r0, [r5, #0x0]
_08069aa4:
	mov		r0, #0x81
	lsl		r0, r0, #0x3
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	b		_08069c6e

_08069ab0:	.4byte 0x0200CE24
_08069ab4:	.4byte 0x0200CE38

_08069ab8:
	cmp		r1, r7
	beq		_08069abe
	b		_08069c70
_08069abe:
	mov		r1, r8
	cmp		r1, #0x2
	bne		_08069ac6
	b		_08069bfc
_08069ac6:
	add		r1, r6, #0x0
	add		r1, #0x80
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	lsl		r0, r0, #0x10
	str		r0, [r1, #0x0]
	mov		r7, #0x0
	str		r7, [r5, #0x0]
	ldr		r3, _08069b00
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08069b04
	cmp		r0, #0x2
	beq		_08069b22
	add		r0, r6, #0x0
	add		r0, #0xa0
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r4, r8
	cmp		r4, #0x0
	bne		_08069ba0
	mov		r0, #0x6
	str		r0, [r6, #0x54]
	b		_08069bd6

_08069b00:	.4byte 0x0000040C

_08069b04:
	add		r4, r6, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	b		_08069bac
_08069b22:
	add		r0, r6, #0x0
	add		r0, #0xa0
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r4, r8
	cmp		r4, #0x0
	bne		_08069b3a
	mov		r0, #0x6
	str		r0, [r6, #0x54]
	b		_08069b70
_08069b3a:
	mov		r0, r8
	cmp		r0, #0x1
	bne		_08069b46
	mov		r0, #0x8
	str		r0, [r6, #0x54]
	b		_08069b70
_08069b46:
	mov		r0, #0xe
	str		r0, [r6, #0x54]
	str		r7, [r5, #0x0]
	mov		r5, #0x3
	ldr		r1, _08069b98
	add		r4, r6, r1
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08069b9c
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
_08069b70:
	add		r3, r6, #0x0
	add		r3, #0x90
	ldr		r2, [r3, #0x0]
	sub		r2, #0x32
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r4, #0x82
	lsl		r4, r4, #0x3
	add		r1, r6, r4
	ldr		r0, [r0, #0x6c]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r2, r2, r0
	str		r2, [r3, #0x0]
	mov		r1, #0x94
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	b		_08069bdc

.incbin "base.gba", 0x69B96, 0x2

_08069b98:	.4byte 0x00000AFC
_08069b9c:	.4byte 0x00000B65

_08069ba0:
	mov		r4, r8
	cmp		r4, #0x1
	bne		_08069bac
	mov		r0, #0x8
	str		r0, [r6, #0x54]
	b		_08069bd6
_08069bac:
	mov		r0, #0xe
	str		r0, [r6, #0x54]
	str		r7, [r5, #0x0]
	mov		r5, #0x3
	ldr		r0, _08069bf4
	add		r4, r6, r0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08069bf8
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
_08069bd6:
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r0, r6, r2
_08069bdc:
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r3, #0x83
	lsl		r3, r3, #0x3
	add		r2, r6, r3
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r2, #0x0]
	b		_08069c70

_08069bf4:	.4byte 0x00000AFC
_08069bf8:	.4byte 0x00000B65

_08069bfc:
	add		r1, r6, #0x0
	add		r1, #0x80
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	lsl		r0, r0, #0x10
	str		r0, [r1, #0x0]
	add		r4, r6, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0xe
	str		r0, [r6, #0x54]
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	mov		r5, #0x3
	ldr		r0, _08069c80
	add		r4, r6, r0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08069c84
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r3, #0x83
	lsl		r3, r3, #0x3
	add		r1, r6, r3
	ldr		r0, [r1, #0x0]
	mov		r4, r8
	orr		r0, r4
_08069c6e:
	str		r0, [r1, #0x0]
_08069c70:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x69C7E, 0x2

_08069c80:	.4byte 0x00000AFC
_08069c84:	.4byte 0x00000B65
	thumb_func_end sub_080698ac

	thumb_func_start sub_08069c88
sub_08069c88:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r6, [r0, #0x7c]
	add		r3, r0, #0x0
	add		r3, #0x90
	ldr		r5, [r3, #0x0]
	mov		r7, #0x0
	ldr		r1, _08069d04
	ldr		r0, [r1, #0x0]
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r10, r1
	cmp		r7, r0
	bge		_08069cdc
	add		r4, r2, #0x0
	mov		r8, r3
	mov		r0, #0x0
	mov		r9, r0
_08069cb2:
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x8]
	bl		sub_080bbcac
	mul		r0, r5
	ldr		r1, [r4, #0x10]
	cmp		r0, r1
	bge		_08069cc4
	add		r0, r1, #0x0
_08069cc4:
	add		r6, r6, r0
	ldr		r0, [r4, #0x34]
	sub		r5, r5, r0
	cmp		r5, #0x0
	bgt		_08069cd4
	mov		r1, r9
	mov		r2, r8
	str		r1, [r2, #0x0]
_08069cd4:
	add		r7, #0x1
	ldr		r0, [r4, #0x48]
	cmp		r7, r0
	blt		_08069cb2
_08069cdc:
	add		r1, r6, #0x0
	cmp		r6, #0x0
	bge		_08069ce6
	ldr		r0, _08069d08
	add		r1, r6, r0
_08069ce6:
	asr		r1, r1, #0x10
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x24]
	sub		r6, r1, r0
	add		r0, r6, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x69D02, 0x2

_08069d04:	.4byte 0x080d38ec
_08069d08:	.4byte 0x0000FFFF
	thumb_func_end sub_08069c88

	thumb_func_start sub_08069d0c
sub_08069d0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	mov		r0, #0x81
	lsl		r0, r0, #0x3
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, _08069d84
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08069d48
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08069d48
	mov		r2, #0x82
	lsl		r2, r2, #0x3
	add		r1, r6, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_08069d48:
	ldr		r1, [r6, #0x78]
	ldr		r0, [r6, #0x74]
	add		r2, r1, r0
	str		r2, [r6, #0x78]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08069d58
	add		r0, #0xff
_08069d58:
	asr		r0, r0, #0x8
	ldr		r1, [r6, #0x68]
	add		r1, r1, r0
	str		r1, [r6, #0x68]
	mov		r0, #0xff
	and		r2, r0
	str		r2, [r6, #0x78]
	ldr		r2, [r6, #0x7c]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08069d72
	ldr		r3, _08069d88
	add		r0, r2, r3
_08069d72:
	asr		r3, r0, #0x10
	add		r0, r1, #0x0
	add		r0, #0x18
	cmp		r3, r0
	bge		_08069d8c
	add		r0, r3, #0x0
	sub		r0, #0x18
	b		_08069d98

.incbin "base.gba", 0x69D82, 0x2

_08069d84:	.4byte 0x0000040C
_08069d88:	.4byte 0x0000FFFF

_08069d8c:
	add		r0, r1, #0x0
	add		r0, #0xd8
	cmp		r3, r0
	ble		_08069d9a
	add		r0, r3, #0x0
	sub		r0, #0xd8
_08069d98:
	str		r0, [r6, #0x68]
_08069d9a:
	ldr		r0, [r6, #0x68]
	cmp		r0, #0x0
	bge		_08069da4
	mov		r0, #0x0
	str		r0, [r6, #0x68]
_08069da4:
	ldr		r1, _08069e0c
	ldr		r0, _08069e10
	mov		r3, #0x0
	add		r4, r0, #0x4
	add		r1, #0x4
	mov		r2, #0x2
_08069db0:
	ldr		r0, [r6, #0x68]
	lsl		r0, r0, #0x10
	stmia	r1!, { r0 }
	stmia	r4!, {  r3 }
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08069db0
	ldr		r4, _08069e14
	add		r4, r4, r6
	mov		r9, r4
	ldr		r7, [r4, #0x0]
	cmp		r7, #0x0
	beq		_08069e20
	cmp		r7, #0x0
	bge		_08069dd0
	b		_0806a1cc
_08069dd0:
	cmp		r7, #0x4
	ble		_08069dd6
	b		_0806a1cc
_08069dd6:
	cmp		r7, #0x2
	bge		_08069ddc
	b		_0806a1cc
_08069ddc:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_08069dea
	b		_0806a16c
_08069dea:
	ldr		r0, _08069e18
	add		r2, r6, r0
	ldr		r1, _08069e1c
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x50]
	str		r0, [r2, #0x0]
	mov		r2, #0x82
	lsl		r2, r2, #0x3
	add		r3, r6, r2
	ldr		r0, [r3, #0x0]
	add		r7, r1, #0x0
	cmp		r0, #0x3b
	ble		_08069e08
	b		_08069f80
_08069e08:
	b		_08069f6c

.incbin "base.gba", 0x69E0A, 0x2

_08069e0c:	.4byte 0x0200CE24
_08069e10:	.4byte 0x0200CE38
_08069e14:	.4byte 0x0000040C
_08069e18:	.4byte 0x0000042C
_08069e1c:	.4byte 0x080d38f0

_08069e20:
	mov		r3, #0x81
	lsl		r3, r3, #0x3
	add		r3, r3, r6
	mov		r8, r3
	ldr		r4, _08069eec
	mov		r10, r4
	ldr		r0, [r4, #0x0]
	ldr		r1, [r3, #0x0]
	ldr		r0, [r0, #0x78]
	cmp		r1, r0
	ble		_08069e7e
	add		r4, r6, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0xe
	str		r0, [r6, #0x54]
	mov		r5, #0x3
	ldr		r0, _08069ef0
	add		r4, r6, r0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _08069ef4
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	mov		r2, r8
	str		r7, [r2, #0x0]
_08069e7e:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001884
	cmp		r0, #0x0
	bne		_08069e8c
	b		_0806a1cc
_08069e8c:
	mov		r0, #0xc
	bl		sub_0808f690
	mov		r4, r10
	ldr		r3, [r4, #0x0]
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	ldr		r0, [r3, #0x74]
	cmp		r1, r0
	ble		_08069ef8
	add		r4, r6, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0xe
	str		r0, [r6, #0x54]
	mov		r5, #0x3
	ldr		r1, _08069ef0
	add		r4, r6, r1
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _08069ef4
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	mov		r3, r8
	str		r7, [r3, #0x0]
	b		_0806a1cc

.incbin "base.gba", 0x69EEA, 0x2

_08069eec:	.4byte 0x0200BB58
_08069ef0:	.4byte 0x00000AFC
_08069ef4:	.4byte 0x00000B65

_08069ef8:
	ldr		r0, [r3, #0x70]
	cmp		r1, r0
	ble		_08069f18
	add		r2, r6, #0x0
	add		r2, #0x90
	sub		r1, r1, r0
	ldr		r0, [r3, #0x7c]
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	sub		r0, r0, r1
	str		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_08069f14
	str		r7, [r2, #0x0]
_08069f14:
	mov		r0, #0x4
	b		_08069f1a
_08069f18:
	mov		r0, #0x3
_08069f1a:
	mov		r4, r9
	str		r0, [r4, #0x0]
	mov		r1, #0x82
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	str		r7, [r0, #0x0]
	mov		r2, #0xdc
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r2, r6, #0x0
	add		r2, #0xf4
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	ldr		r1, [r0, #0x54]
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	mov		r4, #0xf1
	lsl		r4, r4, #0x2
	add		r1, r6, r4
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xf6
	ldrh	r1, [r0, #0x0]
	ldr		r2, _08069f64
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	ldr		r3, _08069f68
	add		r1, r6, r3
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	b		_0806a1cc

.incbin "base.gba", 0x69F62, 0x2

_08069f64:	.4byte 0x000003C6
_08069f68:	.4byte 0x0000042C

_08069f6c:
	add		r2, r6, #0x0
	add		r2, #0x90
	lsl		r1, r0, #0x2
	ldr		r4, _08069f98
	add		r0, r6, r4
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	str		r1, [r2, #0x0]
_08069f80:
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x1e
	bne		_08069f9c
	mov		r0, #0x53
	bl		sub_0808f690
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x1
	b		_08069fb0

.incbin "base.gba", 0x69F96, 0x2

_08069f98:	.4byte 0x00000C6C

_08069f9c:
	sub		r0, #0x1b
	cmp		r0, #0x6
	bhi		_08069fee
	mov		r0, #0x52
	bl		sub_0808f690
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x0
_08069fb0:
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r3, #0x83
	lsl		r3, r3, #0x3
	add		r2, r6, r3
	ldr		r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r2, #0x0]
	mov		r4, #0x97
	lsl		r4, r4, #0x3
	add		r1, r6, r4
	ldr		r0, [r6, #0x7c]
	cmp		r0, #0x0
	bge		_08069fd4
	ldr		r2, _0806a0a0
	add		r0, r0, r2
_08069fd4:
	asr		r0, r0, #0x10
	str		r0, [r1, #0x0]
	ldr		r3, _0806a0a4
	add		r1, r6, r3
	add		r0, r6, #0x0
	add		r0, #0x80
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08069fea
	ldr		r4, _0806a0a0
	add		r0, r0, r4
_08069fea:
	asr		r0, r0, #0x10
	str		r0, [r1, #0x0]
_08069fee:
	add		r0, r6, #0x0
	add		r0, #0xa0
	mov		r1, #0x4
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, r8
	cmp		r0, #0x0
	bne		_0806a0b8
	mov		r5, #0x3
	ldr		r1, _0806a0a8
	add		r4, r6, r1
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1d
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r2, _0806a0ac
	add		r0, r6, r2
	strb	r5, [r0, #0x0]
	mov		r0, #0x7
	str		r0, [r6, #0x54]
	ldr		r7, [r7, #0x0]
	ldr		r4, [r7, #0x0]
	ldr		r0, [r4, #0x40]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r1, r0, #0x1
	ldr		r3, _0806a0b0
	add		r5, r6, r3
	ldr		r0, [r4, #0x44]
	lsl		r0, r0, #0x10
	add		r2, r1, #0x0
	mul		r2, r1
	add		r1, r2, #0x0
	bl		sub_080bbcac
	str		r0, [r5, #0x0]
	add		r5, r6, #0x0
	add		r5, #0x90
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x8]
	bl		sub_080bbcac
	ldr		r1, [r5, #0x0]
	mul		r0, r1
	add		r4, #0x84
	ldr		r1, [r4, #0x0]
	bl		sub_080bbcac
	str		r0, [r6, #0x70]
	cmp		r0, #0x0
	bne		_0806a06a
	mov		r0, #0x1
	str		r0, [r6, #0x70]
_0806a06a:
	ldr		r4, [r7, #0x0]
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x8]
	bl		sub_080bbcac
	ldr		r1, [r5, #0x0]
	mul		r0, r1
	lsl		r0, r0, #0x8
	add		r1, r4, #0x0
	add		r1, #0x84
	ldr		r1, [r1, #0x0]
	bl		sub_080bbcac
	str		r0, [r6, #0x74]
	mov		r3, r8
	str		r3, [r6, #0x78]
	mov		r1, #0xb4
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806a14e
	ldr		r2, _0806a0b4
	add		r1, r6, r2
	ldr		r0, [r5, #0x0]
	str		r0, [r1, #0x0]
	b		_0806a14e

_0806a0a0:	.4byte 0x0000FFFF
_0806a0a4:	.4byte 0x000004BC
_0806a0a8:	.4byte 0x00000AFC
_0806a0ac:	.4byte 0x00000B65
_0806a0b0:	.4byte 0x00000404
_0806a0b4:	.4byte 0x00000D64

_0806a0b8:
	mov		r0, #0xd
	bl		sub_0808f690
	ldr		r5, [r7, #0x0]
	ldr		r2, [r5, #0x0]
	ldr		r0, [r2, #0x48]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r1, r0, #0x1
	ldr		r3, _0806a0f4
	add		r4, r6, r3
	ldr		r0, [r2, #0x4c]
	lsl		r0, r0, #0x10
	add		r2, r1, #0x0
	mul		r2, r1
	add		r1, r2, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	add		r0, r6, #0x0
	bl		sub_08069c88
	ldr		r1, [r5, #0x0]
	add		r1, #0x80
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	bge		_0806a0f8
	mov		r0, #0xa
	str		r0, [r6, #0x54]
	b		_0806a14e

_0806a0f4:	.4byte 0x00000404

_0806a0f8:
	ldr		r3, _0806a160
	add		r2, r6, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	mov		r4, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r0, #0x1
	str		r0, [r6, #0x58]
	mov		r0, #0x9
	str		r0, [r6, #0x54]
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	bl		sub_08002268
	str		r4, [r6, #0x6c]
	str		r4, [r6, #0x68]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r4, #0xa3
	lsl		r4, r4, #0x3
	add		r0, r6, r4
	mov		r1, #0x3
_0806a126:
	strh	r2, [r0, #0x0]
	strh	r2, [r0, #0x2]
	add		r0, #0x90
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0806a126
	ldr		r0, [r7, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806a14e
	ldr		r2, _0806a164
	add		r0, r6, r2
	add		r1, r6, #0x0
	add		r1, #0x90
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
_0806a14e:
	mov		r3, #0x81
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r4, _0806a168
	add		r0, r6, r4
	b		_0806a1ca

.incbin "base.gba", 0x6A15E, 0x2

_0806a160:	.4byte 0x000004C2
_0806a164:	.4byte 0x00000D68
_0806a168:	.4byte 0x0000040C

_0806a16c:
	mov		r0, #0x82
	lsl		r0, r0, #0x3
	add		r1, r6, r0
	ldr		r0, _0806a1dc
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x74]
	cmp		r1, r0
	ble		_0806a1cc
	add		r4, r6, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0xe
	str		r0, [r6, #0x54]
	mov		r5, #0x3
	ldr		r1, _0806a1e0
	add		r4, r6, r1
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r2, _0806a1e4
	add		r0, r6, r2
	mov		r1, #0x0
	strb	r5, [r0, #0x0]
	mov		r3, #0x81
	lsl		r3, r3, #0x3
	add		r0, r6, r3
_0806a1ca:
	str		r1, [r0, #0x0]
_0806a1cc:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6A1DA, 0x2

_0806a1dc:	.4byte 0x0200BB58
_0806a1e0:	.4byte 0x00000AFC
_0806a1e4:	.4byte 0x00000B65
	thumb_func_end sub_08069d0c

	thumb_func_start sub_0806a1e8
sub_0806a1e8:
	push	{ r4, r5, r6, lr }
	mov		r12, r0
	ldr		r1, [r0, #0x7c]
	cmp		r1, #0x0
	bge		_0806a1f6
	ldr		r0, _0806a274
	add		r1, r1, r0
_0806a1f6:
	asr		r1, r1, #0x10
	ldr		r0, _0806a278
	ldr		r3, [r0, #0x0]
	ldr		r0, [r3, #0x24]
	sub		r1, r1, r0
	mov		r5, r12
	add		r5, #0x84
	add		r6, r1, #0x0
	mul		r6, r1
	ldr		r0, [r3, #0x58]
	mul		r0, r6
	mov		r1, #0xf0
	lsl		r1, r1, #0xe
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	mov		r4, r12
	add		r4, #0x88
	ldr		r1, [r3, #0x4]
	lsl		r1, r1, #0x10
	mov		r2, r12
	add		r2, #0x80
	ldr		r2, [r2, #0x0]
	sub		r1, r1, r2
	sub		r0, r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0xb
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	mov		r1, r12
	add		r1, #0x8c
	ldr		r0, [r5, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r3, #0x60]
	mul		r0, r6
	cmp		r0, #0x0
	bge		_0806a242
	ldr		r1, _0806a274
	add		r0, r0, r1
_0806a242:
	asr		r0, r0, #0x10
	add		r1, r0, #0x0
	add		r1, #0xc0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	ble		_0806a252
	add		r1, r0, #0x0
_0806a252:
	add		r0, r12
	strh	r1, [r0, #0x0]
	mov		r0, r12
	add		r0, #0xfe
	strh	r1, [r0, #0x0]
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r0, r12
	strh	r1, [r0, #0x0]
	mov		r0, #0xc7
	lsl		r0, r0, #0x1
	add		r0, r12
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6A272, 0x2

_0806a274:	.4byte 0x0000FFFF
_0806a278:	.4byte 0x0200BB58
	thumb_func_end sub_0806a1e8

	thumb_func_start sub_0806a27c
sub_0806a27c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	ldr		r1, _0806a3bc
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0806a294
	b		_0806a3ae
_0806a294:
	add		r4, r6, #0x0
	add		r4, #0xa0
	mov		r2, #0x88
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
	ldr		r0, [r6, #0x7c]
	cmp		r0, #0x0
	bge		_0806a2b2
	ldr		r1, _0806a3c0
	add		r0, r0, r1
_0806a2b2:
	asr		r0, r0, #0x10
	ldr		r1, [r6, #0x68]
	sub		r0, r0, r1
	add		r1, r6, #0x0
	add		r1, #0xf4
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x80
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0806a2cc
	ldr		r2, _0806a3c0
	add		r0, r0, r2
_0806a2cc:
	asr		r0, r0, #0x10
	add		r1, r6, #0x0
	add		r1, #0xf6
	strh	r0, [r1, #0x0]
	mov		r0, #0x98
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
	ldr		r0, [r6, #0x7c]
	cmp		r0, #0x0
	bge		_0806a2f4
	ldr		r2, _0806a3c0
	add		r0, r0, r2
_0806a2f4:
	asr		r0, r0, #0x10
	ldr		r1, [r6, #0x68]
	sub		r0, r0, r1
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	strh	r0, [r1, #0x0]
	ldr		r1, _0806a3c4
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x4]
	add		r2, #0x2
	add		r3, r6, r2
	strh	r0, [r3, #0x0]
	mov		r0, #0x0
	mov		r9, r0
	mov		r1, #0x4
	mov		r10, r1
	mov		r2, #0xec
	lsl		r2, r2, #0x3
	add		r5, r6, r2
	ldr		r0, _0806a3c8
	add		r0, r0, r6
	mov		r8, r0
	ldr		r1, _0806a3cc
	add		r7, r6, r1
_0806a326:
	ldr		r3, [r6, #0x68]
	add		r1, r3, #0x0
	sub		r1, #0x20
	ldr		r2, _0806a3c4
	ldr		r0, [r2, #0x0]
	mov		r2, r9
	lsl		r4, r2, #0x3
	mov		r2, #0xa2
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	add		r0, r0, r4
	ldr		r2, [r0, #0x0]
	cmp		r1, r2
	bge		_0806a372
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	cmp		r0, r2
	ble		_0806a372
	add		r0, r7, #0x0
	bl		sub_0808b3d4
	mov		r0, r8
	bl		sub_0808e4a0
	ldr		r0, _0806a3c4
	ldr		r2, [r0, #0x0]
	mov		r1, #0xa2
	lsl		r1, r1, #0x2
	add		r2, r2, r1
	add		r0, r2, r4
	ldr		r0, [r0, #0x0]
	ldr		r1, [r6, #0x68]
	sub		r0, r0, r1
	strh	r0, [r5, #0x0]
	add		r2, r10
	ldr		r0, [r2, #0x0]
	strh	r0, [r5, #0x2]
_0806a372:
	mov		r2, #0x8
	add		r10, r2
	add		r5, #0x90
	mov		r0, #0x90
	add		r8, r0
	add		r7, #0x90
	mov		r1, #0x1
	add		r9, r1
	mov		r2, r9
	cmp		r2, #0x7
	ble		_0806a326
	add		r0, r6, #0x0
	bl		sub_08069844
	ldr		r0, _0806a3d0
	add		r5, r6, r0
	ldr		r1, _0806a3d4
	add		r4, r6, r1
	mov		r6, #0x3
_0806a398:
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	add		r0, r5, #0x0
	bl		sub_0808e4a0
	add		r5, #0x90
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0806a398
_0806a3ae:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806a3bc:	.4byte 0x000004B4
_0806a3c0:	.4byte 0x0000FFFF
_0806a3c4:	.4byte 0x0200BB58
_0806a3c8:	.4byte 0x0000070C
_0806a3cc:	.4byte 0x0000077C
_0806a3d0:	.4byte 0x000004C4
_0806a3d4:	.4byte 0x00000534
	thumb_func_end sub_0806a27c

	thumb_func_start sub_0806a3d8
sub_0806a3d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r5, r0, #0x0
	mov		r1, #0x0
	ldr		r0, [r5, #0x54]
	cmp		r0, #0x9
	beq		_0806a3fc
	cmp		r0, #0xb
	beq		_0806a3fc
	mov		r1, #0xc
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r1, r0, #0x1f
_0806a3fc:
	ldr		r0, [r5, #0x54]
	cmp		r0, #0x12
	bne		_0806a40c
	ldr		r0, [r5, #0x58]
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0806a40c
	mov		r1, #0x1
_0806a40c:
	cmp		r1, #0x0
	bne		_0806a412
	b		_0806a76c
_0806a412:
	ldr		r0, _0806a548
	add		r6, r5, r0
	ldrb	r0, [r6, #0x0]
	mov		r4, #0x1
	eor		r0, r4
	and		r0, r4
	cmp		r0, #0x0
	beq		_0806a42c
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b3d4
_0806a42c:
	add		r0, r5, #0x0
	add		r0, #0xa0
	bl		sub_0808e4a0
	ldr		r0, [r5, #0x7c]
	cmp		r0, #0x0
	bge		_0806a43e
	ldr		r2, _0806a54c
	add		r0, r0, r2
_0806a43e:
	asr		r0, r0, #0x10
	ldr		r1, [r5, #0x68]
	sub		r0, r0, r1
	add		r1, r5, #0x0
	add		r1, #0xf4
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x80
	ldr		r0, [r0, #0x0]
	str		r1, [sp, #0x4]
	cmp		r0, #0x0
	bge		_0806a45a
	ldr		r3, _0806a54c
	add		r0, r0, r3
_0806a45a:
	asr		r0, r0, #0x10
	add		r1, r5, #0x0
	add		r1, #0xf6
	strh	r0, [r1, #0x0]
	ldrb	r0, [r6, #0x0]
	eor		r0, r4
	and		r0, r4
	str		r1, [sp, #0x8]
	cmp		r0, #0x0
	beq		_0806a478
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b3d4
_0806a478:
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	bl		sub_0808e4a0
	ldr		r0, [r5, #0x7c]
	cmp		r0, #0x0
	bge		_0806a48c
	ldr		r3, _0806a54c
	add		r0, r0, r3
_0806a48c:
	asr		r0, r0, #0x10
	ldr		r1, [r5, #0x68]
	sub		r0, r0, r1
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	ldr		r4, _0806a550
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	mov		r3, #0xc3
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_08069844
	mov		r10, r4
	ldr		r0, _0806a548
	add		r0, r0, r5
	mov		r9, r0
	mov		r1, #0x1
	mov		r8, r1
	ldr		r2, _0806a554
	add		r6, r5, r2
	ldr		r3, _0806a558
	add		r4, r5, r3
	mov		r7, #0x3
_0806a4c6:
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	eor		r0, r2
	and		r0, r2
	cmp		r0, #0x0
	beq		_0806a4da
	add		r0, r4, #0x0
	bl		sub_0808b3d4
_0806a4da:
	add		r0, r6, #0x0
	bl		sub_0808e4a0
	add		r6, #0x90
	add		r4, #0x90
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0806a4c6
	ldr		r3, [r5, #0x68]
	add		r1, r3, #0x0
	sub		r1, #0x20
	mov		r0, r10
	ldr		r6, [r0, #0x0]
	ldr		r0, [r6, #0x0]
	add		r0, #0x88
	ldr		r2, [r0, #0x0]
	cmp		r1, r2
	bge		_0806a55c
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	cmp		r0, r2
	ble		_0806a55c
	ldr		r2, _0806a548
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806a522
	mov		r3, #0xd4
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	bl		sub_0808b3d4
_0806a522:
	mov		r1, #0xb8
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_0808e4a0
	ldr		r2, [r6, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x88
	ldr		r0, [r0, #0x0]
	ldr		r1, [r5, #0x68]
	sub		r0, r0, r1
	mov		r3, #0xcd
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	add		r2, #0x8c
	ldr		r1, [r2, #0x0]
	b		_0806a568

.incbin "base.gba", 0x6A546, 0x2

_0806a548:	.4byte 0x000004C2
_0806a54c:	.4byte 0x0000FFFF
_0806a550:	.4byte 0x080d38f4
_0806a554:	.4byte 0x000004C4
_0806a558:	.4byte 0x00000534

_0806a55c:
	mov		r3, #0xcd
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
_0806a568:
	ldr		r2, _0806a5c0
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	mov		r3, #0x90
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806a58e
	mov		r1, #0x83
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_0806a5c8
_0806a58e:
	mov		r2, #0x85
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	strh	r2, [r0, #0x0]
	ldr		r3, _0806a5c4
	add		r0, r5, r3
	strh	r2, [r0, #0x0]
	mov		r0, #0x83
	lsl		r0, r0, #0x3
	add		r3, r5, r0
	ldr		r0, [r3, #0x0]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r3, #0x0]
	mov		r3, #0x97
	lsl		r3, r3, #0x3
	add		r1, r5, r3
	add		r3, #0x4
	add		r0, r5, r3
	str		r2, [r0, #0x0]
	str		r2, [r1, #0x0]
	b		_0806a60c

_0806a5c0:	.4byte 0x00000336
_0806a5c4:	.4byte 0x00000216

_0806a5c8:
	ldr		r1, _0806a660
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806a5e2
	mov		r2, #0x8c
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	bl		sub_0808b3d4
_0806a5e2:
	mov		r3, #0xe0
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	bl		sub_0808e4a0
	mov		r1, #0x97
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r5, #0x68]
	sub		r0, r0, r1
	mov		r2, #0x85
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	ldr		r3, _0806a664
	add		r0, r5, r3
	ldr		r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
_0806a60c:
	ldr		r3, _0806a668
	add		r2, r5, r3
	ldr		r1, [r2, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0806a670
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x54]
	ldr		r2, [sp, #0x4]
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	sub		r3, #0x68
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	ldr		r0, [sp, #0x8]
	ldrh	r1, [r0, #0x0]
	ldr		r2, _0806a66c
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	add		r3, #0xfe
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806a652
	mov		r1, #0xf8
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_0808b3d4
_0806a652:
	mov		r2, #0xdc
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	bl		sub_0808e4a0
	b		_0806a6ba

.incbin "base.gba", 0x6A65E, 0x2

_0806a660:	.4byte 0x000004C2
_0806a664:	.4byte 0x000004BC
_0806a668:	.4byte 0x0000042C
_0806a66c:	.4byte 0x000003C6

_0806a670:
	cmp		r1, #0x0
	ble		_0806a6a8
	sub		r0, r1, #0x1
	str		r0, [r2, #0x0]
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x54]
	ldr		r2, [sp, #0x4]
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	mov		r3, #0xf1
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	ldr		r0, [sp, #0x8]
	ldrh	r1, [r0, #0x0]
	ldr		r2, _0806a6a4
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	sub		r3, #0x54
	add		r0, r5, r3
	bl		sub_0808e4a0
	b		_0806a6ba

.incbin "base.gba", 0x6A6A2, 0x2

_0806a6a4:	.4byte 0x000003C6

_0806a6a8:
	ldr		r1, _0806a734
	add		r0, r5, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
	mov		r2, #0xf1
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
_0806a6ba:
	mov		r3, #0x0
	mov		r10, r3
	ldr		r0, _0806a738
	add		r0, r5, r0
	str		r0, [sp, #0x0]
	mov		r1, #0xec
	lsl		r1, r1, #0x3
	add		r4, r5, r1
	ldr		r2, _0806a73c
	add		r2, r2, r5
	mov		r8, r2
	ldr		r3, _0806a740
	add		r6, r5, r3
	mov		r7, #0x0
	mov		r0, #0x4
	mov		r9, r0
_0806a6da:
	ldr		r3, [r5, #0x68]
	add		r1, r3, #0x0
	sub		r1, #0x20
	ldr		r2, _0806a744
	ldr		r0, [r2, #0x0]
	mov		r2, #0xa2
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	add		r0, r0, r7
	ldr		r2, [r0, #0x0]
	cmp		r1, r2
	bge		_0806a748
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	cmp		r0, r2
	ble		_0806a748
	ldr		r2, [sp, #0x0]
	ldrb	r0, [r2, #0x0]
	mov		r3, #0x1
	eor		r0, r3
	and		r0, r3
	cmp		r0, #0x0
	beq		_0806a710
	add		r0, r6, #0x0
	bl		sub_0808b3d4
_0806a710:
	mov		r0, r8
	bl		sub_0808e4a0
	ldr		r0, _0806a744
	ldr		r2, [r0, #0x0]
	mov		r1, #0xa2
	lsl		r1, r1, #0x2
	add		r2, r2, r1
	add		r0, r2, r7
	ldr		r0, [r0, #0x0]
	ldr		r1, [r5, #0x68]
	sub		r0, r0, r1
	strh	r0, [r4, #0x0]
	add		r2, r9
	ldr		r0, [r2, #0x0]
	strh	r0, [r4, #0x2]
	b		_0806a752

.incbin "base.gba", 0x6A732, 0x2

_0806a734:	.4byte 0x000003C6
_0806a738:	.4byte 0x000004C2
_0806a73c:	.4byte 0x0000070C
_0806a740:	.4byte 0x0000077C
_0806a744:	.4byte 0x0200BB58

_0806a748:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	strh	r2, [r4, #0x0]
	add		r3, r2, #0x0
	strh	r3, [r4, #0x2]
_0806a752:
	add		r4, #0x90
	mov		r0, #0x90
	add		r8, r0
	add		r6, #0x90
	add		r7, #0x8
	mov		r1, #0x8
	add		r9, r1
	mov		r2, #0x1
	add		r10, r2
	mov		r3, r10
	cmp		r3, #0x7
	ble		_0806a6da
	b		_0806a7f6
_0806a76c:
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x2
	bne		_0806a7f6
	ldr		r0, _0806a83c
	add		r6, r5, r0
	ldrb	r0, [r6, #0x0]
	mov		r4, #0x1
	eor		r0, r4
	and		r0, r4
	cmp		r0, #0x0
	beq		_0806a78c
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0808b3d4
_0806a78c:
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	bl		sub_0808e4a0
	mov		r3, #0xc2
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	mov		r7, #0x78
	strh	r7, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x8c
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0806a7ae
	ldr		r1, _0806a840
	add		r0, r0, r1
_0806a7ae:
	asr		r0, r0, #0x10
	ldr		r1, [r5, #0x6c]
	sub		r0, r0, r1
	mov		r2, #0xc3
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	ldrb	r0, [r6, #0x0]
	eor		r0, r4
	and		r0, r4
	cmp		r0, #0x0
	beq		_0806a7d0
	mov		r3, #0x88
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	bl		sub_0808b3d4
_0806a7d0:
	add		r0, r5, #0x0
	add		r0, #0xa0
	bl		sub_0808e4a0
	add		r0, r5, #0x0
	add		r0, #0xf4
	strh	r7, [r0, #0x0]
	sub		r0, #0x6c
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0806a7ea
	ldr		r1, _0806a840
	add		r0, r0, r1
_0806a7ea:
	asr		r0, r0, #0x10
	ldr		r1, [r5, #0x6c]
	sub		r0, r0, r1
	add		r1, r5, #0x0
	add		r1, #0xf6
	strh	r0, [r1, #0x0]
_0806a7f6:
	mov		r2, #0xb4
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806a816
	mov		r3, #0x83
	lsl		r3, r3, #0x3
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_0806a848
_0806a816:
	ldr		r1, _0806a844
	add		r0, r5, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
	mov		r2, #0xa9
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	mov		r3, #0x83
	lsl		r3, r3, #0x3
	add		r2, r5, r3
	ldr		r0, [r2, #0x0]
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	str		r0, [r2, #0x0]
	b		_0806a886

.incbin "base.gba", 0x6A83A, 0x2

_0806a83c:	.4byte 0x000004C2
_0806a840:	.4byte 0x0000FFFF
_0806a844:	.4byte 0x000002A6

_0806a848:
	ldr		r1, _0806a898
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806a862
	mov		r2, #0xb0
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	bl		sub_0808b3d4
_0806a862:
	mov		r3, #0x94
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	bl		sub_0808e4a0
	add		r0, r5, #0x0
	add		r0, #0xf4
	ldrh	r1, [r0, #0x0]
	mov		r2, #0xa9
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf6
	ldrh	r1, [r0, #0x0]
	ldr		r3, _0806a89c
	add		r0, r5, r3
	strh	r1, [r0, #0x0]
_0806a886:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6A896, 0x2

_0806a898:	.4byte 0x000004C2
_0806a89c:	.4byte 0x000002A6
	thumb_func_end sub_0806a3d8

	thumb_func_start sub_0806a8a0
sub_0806a8a0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r0, _0806a920
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0806a8ba
	b		_0806ada2
_0806a8ba:
	ldr		r0, _0806a924
	add		r1, r5, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_0806c3d0
	bl		sub_0806fd84
	ldr		r2, _0806a928
	add		r1, r5, r2
	str		r0, [r1, #0x0]
	ldr		r1, _0806a92c
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r3, #0xb4
	lsl		r3, r3, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, _0806a930
	mov		r10, r1
	ldr		r7, _0806a934
	ldr		r2, _0806a938
	mov		r8, r2
	add		r3, r5, #0x0
	add		r3, #0x40
	str		r3, [sp, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x90
	str		r1, [sp, #0x4]
	cmp		r0, #0x0
	beq		_0806a990
	mov		r4, #0x1
	mov		r6, #0x0
_0806a8fe:
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	mov		r1, #0x64
	bl		sub_080b63dc
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0806a93c
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0806a950
	mov		r4, #0x1
	b		_0806a950

.incbin "base.gba", 0x6A91E, 0x2

_0806a920:	.4byte 0x00000C01
_0806a924:	.4byte 0x000004B4
_0806a928:	.4byte 0x000004AC
_0806a92c:	.4byte 0x080d3930
_0806a930:	.4byte 0x080d3934
_0806a934:	.4byte 0x080d3938 @ SELECT_LEVEL:%1d
_0806a938:	.4byte 0x080d393c @ ""

_0806a93c:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0806a950
	sub		r4, #0x1
	cmp		r4, #0x0
	bgt		_0806a950
	mov		r4, #0x3
_0806a950:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0806a95e
	mov		r6, #0x1
_0806a95e:
	mov		r0, #0x7
	mov		r1, #0x5
	bl		sub_0808b0cc
	ldr		r0, [r7, #0x0]
	add		r1, r4, #0x0
	bl		sub_0808b240
	add		r0, r5, #0x0
	bl		sub_080b7690
	cmp		r6, #0x0
	beq		_0806a8fe
	mov		r0, #0x7
	mov		r1, #0x5
	bl		sub_0808b0cc
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	bl		sub_0808b240
	ldr		r0, _0806a9fc
	add		r1, r5, r0
	sub		r0, r4, #0x1
	str		r0, [r1, #0x0]
_0806a990:
	mov		r4, #0x0
	ldr		r1, _0806a9fc
	add		r1, r1, r5
	mov		r9, r1
	mov		r2, #0x86
	lsl		r2, r2, #0x3
	add		r2, r2, r5
	mov		r8, r2
	mov		r6, #0x0
	mov		r3, #0x94
	lsl		r3, r3, #0x3
	add		r7, r5, r3
_0806a9a8:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	mov		r1, #0x3
	bl		sub_080b63dc
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	mov		r3, r9
	ldr		r2, [r3, #0x0]
	lsl		r1, r2, #0x3
	add		r1, r1, r2
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	add		r0, r8
	ldr		r0, [r0, #0x0]
	stmia	r7!, { r0 }
	add		r6, #0xc
	add		r4, #0x1
	cmp		r4, #0x2
	ble		_0806a9a8
	ldr		r0, _0806aa00
	add		r1, r5, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xff
	bl		sub_0806adb4
	ldr		r0, _0806aa04
	ldr		r4, [r0, #0x0]
	ldr		r0, _0806aa08
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806aa10
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0806aa0c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0806aa1c

_0806a9fc:	.4byte 0x000004AC
_0806aa00:	.4byte 0x0000049C
_0806aa04:	.4byte 0x0200D530
_0806aa08:	.4byte 0x00000282
_0806aa0c:	.4byte 0xFFFF8000

_0806aa10:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0806aa88
	mov		r3, #0x0
	bl		sub_080b7724
_0806aa1c:
	ldr		r1, _0806aa8c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0806aa52
	add		r4, r1, #0x0
	ldr		r1, _0806aa90
	add		r6, r5, r1
	mov		r7, #0x1
_0806aa2c:
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	mov		r1, #0x64
	bl		sub_080b63dc
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_0806aa40
	str		r7, [r6, #0x0]
_0806aa40:
	add		r0, r5, #0x0
	bl		sub_0806a27c
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806aa2c
_0806aa52:
	ldr		r2, [r5, #0x64]
	mov		r1, #0x1
	mov		r3, #0xd0
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	sub		r3, #0x4
	add		r0, r2, r3
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bge		_0806aa7e
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	ldr		r2, _0806aa94
	mov		r3, #0x0
	bl		sub_080b7724
_0806aa7e:
	ldr		r0, [r5, #0x64]
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	b		_0806aab6

_0806aa88:	.4byte 0xFFFF8001
_0806aa8c:	.4byte 0x0200D530
_0806aa90:	.4byte 0x000004B4
_0806aa94:	.4byte 0xFFFFF801

_0806aa98:
	add		r0, r5, #0x0
	bl		sub_0806a27c
	ldr		r0, [sp, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x64]
	mov		r2, #0xd2
	lsl		r2, r2, #0x1
	add		r0, r0, r2
_0806aab6:
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0806aa98
	mov		r0, #0x1
	mov		r1, #0x20
	bl		sub_0808f5cc
	bl		sub_080706ac
	add		r6, r0, #0x0
	ldr		r1, [r6, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_0806aad4:
	ldr		r0, [r6, #0x58]
	cmp		r0, #0x2
	bne		_0806ab58
	ldr		r3, _0806ab24
	add		r2, r5, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
_0806aae6:
	add		r0, r5, #0x0
	bl		sub_0806a3d8
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x5c]
	cmp		r0, #0x2
	bne		_0806ab0e
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	bl		sub_08002268
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	bl		sub_08002268
	ldr		r0, _0806ab28
	bl		sub_08002268
_0806ab0e:
	ldr		r0, [r6, #0x58]
	cmp		r0, #0x2
	beq		_0806aae6
	ldr		r4, [r6, #0x5c]
	cmp		r4, #0x2
	beq		_0806ab58
	cmp		r4, #0x2
	bgt		_0806ab2c
	cmp		r4, #0x1
	beq		_0806ab36
	b		_0806ab58

_0806ab24:	.4byte 0x000004C2
_0806ab28:	.4byte 0x00000C02

_0806ab2c:
	cmp		r4, #0x5
	bgt		_0806ab58
	mov		r0, #0x12
	str		r0, [r5, #0x54]
	b		_0806ab58
_0806ab36:
	ldr		r1, [r6, #0x2c]
	add		r0, r6, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r5, #0x64]
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	str		r4, [r0, #0x0]
	ldr		r3, _0806ab6c
	add		r2, r5, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x6
	and		r0, r1
	strb	r0, [r2, #0x0]
_0806ab58:
	ldr		r0, [r5, #0x54]
	cmp		r0, #0x12
	bls		_0806ab60
	b		_0806ad5e
_0806ab60:
	lsl		r0, r0, #0x2
	ldr		r1, _0806ab70
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x6AB6A, 0x2

_0806ab6c:	.4byte 0x000004C2
_0806ab70:	.4byte 0x0806ab74
_0806ab74:	.4byte 0x0806abc0

.incbin "base.gba", 0x6AB78, 0x48
	thumb_func_end sub_0806a8a0


.incbin "base.gba", 0x6ABC0, 0xCE

_0806ac8e:

.incbin "base.gba", 0x6AC8E, 0x42

_0806acd0:

.incbin "base.gba", 0x6ACD0, 0x8
_0806acd8:

.incbin "base.gba", 0x6ACD8, 0x8
_0806ace0:

.incbin "base.gba", 0x6ACE0, 0x8
_0806ace8:

.incbin "base.gba", 0x6ACE8, 0x8
_0806acf0:

.incbin "base.gba", 0x6ACF0, 0x2C

_0806ad1c:

.incbin "base.gba", 0x6AD1C, 0x2C

_0806ad48:

.incbin "base.gba", 0x6AD48, 0x8
_0806ad50:

.incbin "base.gba", 0x6AD50, 0xE

_0806ad5e:

.incbin "base.gba", 0x6AD5E, 0x16
_0806ad74:	.4byte 0x000004C2

_0806ad78:

.incbin "base.gba", 0x6AD78, 0xE
_0806ad86:

.incbin "base.gba", 0x6AD86, 0xE
_0806ad94:

.incbin "base.gba", 0x6AD94, 0xE
_0806ada2:

.incbin "base.gba", 0x6ADA2, 0x12
	thumb_func_start sub_0806adb4
sub_0806adb4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10c
	str		r0, [sp, #0xCC]
	str		r1, [sp, #0xD0]
	mov		r3, #0x0
	add		r0, sp, #0x8
	mov		r9, r0
	mov		r1, sp
	add		r1, #0x18
	str		r1, [sp, #0xFC]
	mov		r2, sp
	add		r2, #0x1c
	str		r2, [sp, #0x100]
	add		r5, sp, #0x24
	mov		r6, sp
	add		r6, #0x26
	add		r7, sp, #0x28
	mov		r4, #0x2a
	add		r4, sp
	mov		r8, r4
	mov		r0, sp
	add		r0, #0x2c
	str		r0, [sp, #0x104]
	ldr		r2, [sp, #0xCC]
	mov		r4, #0x84
	lsl		r4, r4, #0x3
	add		r1, r2, r4
	mov		r2, #0x2
_0806adf4:
	ldr		r0, [r1, #0x0]
	cmp		r0, r3
	ble		_0806adfc
	add		r3, r0, #0x0
_0806adfc:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0806adf4
	ldr		r1, [sp, #0xCC]
	ldr		r2, _0806affc
	add		r0, r1, r2
	str		r3, [r0, #0x0]
	add		r4, r0, #0x0
	mov		r0, #0x94
	lsl		r0, r0, #0x3
	add		r2, r1, r0
	mov		r3, #0x2
_0806ae16:
	ldr		r1, [r4, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bne		_0806ae22
	sub		r0, r1, #0x2
	str		r0, [r2, #0x0]
_0806ae22:
	add		r2, #0x4
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0806ae16
	mov		r1, #0x0
	ldr		r2, [sp, #0xCC]
	ldr		r4, _0806affc
	add		r3, r2, r4
	mov		r2, r9
_0806ae34:
	mov		r0, sp
	add		r0, r0, r1
	add		r0, #0x4
	strb	r1, [r0, #0x0]
	ldmia	r3!, { r0 }
	stmia	r2!, { r0 }
	add		r1, #0x1
	cmp		r1, #0x3
	ble		_0806ae34
	ldr		r1, _0806b000
	ldr		r0, [sp, #0xFC]
	mov		r2, #0x4
	bl		sub_0808c818
	ldr		r1, [sp, #0xCC]
	ldr		r2, _0806affc
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	strh	r0, [r5, #0x0]
	mov		r4, #0x94
	lsl		r4, r4, #0x3
	add		r0, r1, r4
	ldr		r0, [r0, #0x0]
	strh	r0, [r6, #0x0]
	add		r2, #0x8
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	strh	r0, [r7, #0x0]
	add		r4, #0x8
	add		r0, r1, r4
	ldr		r0, [r0, #0x0]
	mov		r1, r8
	strh	r0, [r1, #0x0]
	ldr		r0, [sp, #0x100]
	add		r1, r5, #0x0
	mov		r2, #0x8
	bl		sub_0808c818
	ldr		r0, _0806b004
	bl		sub_0800f354
	add		r6, r0, #0x0
	ldr		r0, _0806b008
	bl		sub_0800f354
	add		r5, r0, #0x0
	ldr		r0, _0806b00c
	bl		sub_0800f354
	add		r4, r0, #0x0
	ldr		r0, _0806b010
	bl		sub_0800f354
	str		r6, [sp, #0x2C]
	str		r5, [sp, #0x30]
	str		r4, [sp, #0x34]
	str		r0, [sp, #0x38]
	mov		r0, #0x4
	str		r0, [sp, #0x3C]
	mov		r0, #0x7
	str		r0, [sp, #0x40]
	mov		r0, #0xe
	str		r0, [sp, #0x44]
	mov		r0, #0x12
	str		r0, [sp, #0x48]
	mov		r2, #0x0
	mov		r4, r9
	str		r4, [sp, #0xD4]
	ldr		r0, [sp, #0x100]
	str		r0, [sp, #0xE0]
	ldr		r1, [sp, #0xFC]
	str		r1, [sp, #0xE8]
	mov		r4, sp
	add		r4, #0x3c
	str		r4, [sp, #0xF0]
	ldr		r0, [sp, #0x104]
	str		r0, [sp, #0xF8]
_0806aece:
	add		r3, r2, #0x1
	mov		r9, r3
	cmp		r3, #0x3
	bgt		_0806af90
	lsl		r1, r2, #0x2
	ldr		r4, [sp, #0xD4]
	add		r4, r4, r1
	str		r4, [sp, #0xD8]
	mov		r0, sp
	add		r0, r0, r2
	add		r0, #0x4
	str		r0, [sp, #0xDC]
	lsl		r0, r2, #0x1
	ldr		r4, [sp, #0xE0]
	add		r0, r4, r0
	str		r0, [sp, #0xE4]
	ldr		r0, [sp, #0xE8]
	add		r2, r0, r2
	str		r2, [sp, #0xEC]
	ldr		r2, [sp, #0xF0]
	add		r2, r2, r1
	str		r2, [sp, #0xF4]
	ldr		r4, [sp, #0xF8]
	add		r4, r4, r1
	mov		r10, r4
	lsl		r1, r3, #0x2
	ldr		r0, [sp, #0xF8]
	add		r0, r0, r1
	mov		r8, r0
	ldr		r2, [sp, #0xF0]
	add		r2, r2, r1
	mov		r12, r2
	ldr		r4, [sp, #0xE8]
	add		r7, r3, r4
	lsl		r0, r3, #0x1
	ldr		r2, [sp, #0xE0]
	add		r6, r0, r2
	add		r5, r3, #0x0
	add		r5, sp
	add		r5, #0x4
	ldr		r0, [sp, #0xD4]
	add		r4, r1, r0
_0806af22:
	ldr		r2, [r4, #0x0]
	ldr		r1, [sp, #0xD8]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	ble		_0806af78
	ldrb	r1, [r5, #0x0]
	str		r1, [sp, #0x108]
	str		r0, [r4, #0x0]
	ldr		r1, [sp, #0xDC]
	ldrb	r0, [r1, #0x0]
	strb	r0, [r5, #0x0]
	ldr		r0, [sp, #0xD8]
	str		r2, [r0, #0x0]
	add		r2, sp, #0x108
	ldrb	r2, [r2, #0x0]
	strb	r2, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r6, r0]
	ldr		r2, [sp, #0xE4]
	ldrh	r0, [r2, #0x0]
	strh	r0, [r6, #0x0]
	strh	r1, [r2, #0x0]
	ldrb	r1, [r7, #0x0]
	ldr		r2, [sp, #0xEC]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r7, #0x0]
	strb	r1, [r2, #0x0]
	mov		r0, r12
	ldr		r1, [r0, #0x0]
	ldr		r2, [sp, #0xF4]
	ldr		r0, [r2, #0x0]
	mov		r2, r12
	str		r0, [r2, #0x0]
	ldr		r0, [sp, #0xF4]
	str		r1, [r0, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	mov		r2, r8
	str		r0, [r2, #0x0]
	mov		r0, r10
	str		r1, [r0, #0x0]
_0806af78:
	mov		r1, #0x4
	add		r8, r1
	add		r12, r1
	add		r7, #0x1
	add		r6, #0x2
	add		r5, #0x1
	add		r4, #0x4
	mov		r2, #0x1
	add		r9, r2
	mov		r0, r9
	cmp		r0, #0x3
	ble		_0806af22
_0806af90:
	add		r2, r3, #0x0
	cmp		r2, #0x2
	ble		_0806aece
	ldr		r1, [sp, #0xD0]
	cmp		r1, #0x0
	bne		_0806b01c
	mov		r2, #0x0
	mov		r10, r2
	mov		r8, r2
	add		r7, sp, #0x3c
	ldr		r4, [sp, #0x100]
	mov		r9, r4
_0806afa8:
	ldr		r6, [r7, #0x0]
	mov		r0, r9
	mov		r1, #0x0
	ldrsh	r5, [r0, r1]
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	str		r0, [sp, #0x0]
	ldr		r0, _0806b014
	mov		r1, r8
	add		r2, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_080063bc
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x4
	bne		_0806afe0
	mov		r10, r8
_0806afe0:
	add		r7, #0x4
	mov		r2, #0x2
	add		r9, r2
	mov		r4, #0x1
	add		r8, r4
	mov		r0, r8
	cmp		r0, #0x3
	ble		_0806afa8
	ldr		r0, _0806b014
	ldr		r2, _0806b018
	mov		r1, r10
	bl		sub_080060b4
	b		_0806b09e

_0806affc:	.4byte 0x0000049C
_0806b000:	.4byte 0x080d3940
_0806b004:	.4byte 0x080d3944 @ ms_ta_0046
_0806b008:	.4byte 0x080d3950 @ ms_ta_0049
_0806b00c:	.4byte 0x080d395c @ ms_ta_0056
_0806b010:	.4byte 0x080d3968 @ ms_ta_0060
_0806b014:	.4byte 0x02000DAC
_0806b018:	.4byte 0x080d3974

_0806b01c:
	ldr		r1, [sp, #0xD0]
	cmp		r1, #0xff
	bne		_0806b09e
	mov		r2, #0x0
	mov		r9, r2
	mov		r4, #0x1
	neg		r4, r4
	mov		r10, r4
	ldr		r0, [sp, #0x100]
	mov		r8, r0
	add		r7, sp, #0x3c
_0806b032:
	mov		r1, r8
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	bne		_0806b054
	ldr		r2, [r7, #0x0]
	mov		r4, r10
	str		r4, [sp, #0x0]
	ldr		r0, _0806b050
	mov		r1, r9
	mov		r3, r10
	bl		sub_080063bc
	b		_0806b084

.incbin "base.gba", 0x6B04E, 0x2

_0806b050:	.4byte 0x02000DAC

_0806b054:
	ldr		r6, [r7, #0x0]
	mov		r0, r8
	mov		r1, #0x0
	ldrsh	r5, [r0, r1]
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	str		r0, [sp, #0x0]
	ldr		r0, _0806b120
	mov		r1, r9
	add		r2, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_080063bc
_0806b084:
	mov		r2, #0x2
	add		r8, r2
	add		r7, #0x4
	mov		r4, #0x1
	add		r9, r4
	mov		r0, r9
	cmp		r0, #0x3
	ble		_0806b032
	ldr		r0, _0806b120
	ldr		r1, _0806b124
	ldr		r2, _0806b128
	bl		sub_080060b4
_0806b09e:
	ldr		r1, [sp, #0xD0]
	cmp		r1, #0x2
	ble		_0806b198
	cmp		r1, #0xff
	beq		_0806b198
	ldr		r2, [sp, #0xCC]
	ldr		r0, [r2, #0x64]
	mov		r1, #0x0
	mov		r4, #0xd0
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	str		r1, [r0, #0x0]
	ldr		r4, _0806b12c
	ldr		r1, _0806b130
	add		r0, r4, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x2
	bl		sub_080300ac
	mov		r8, r0
	add		r0, r4, #0x0
	mov		r1, r8
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r1, #0xf6
	lsl		r1, r1, #0x1
	add		r1, r8
	ldr		r0, [r1, #0x0]
	add		r7, sp, #0x4c
	cmp		r0, #0x0
	bne		_0806b0fc
	add		r4, r1, #0x0
_0806b0ea:
	ldr		r0, [sp, #0xCC]
	bl		sub_0806a3d8
	ldr		r0, [sp, #0xCC]
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0806b0ea
_0806b0fc:
	ldr		r2, [sp, #0xD0]
	cmp		r2, #0xfe
	bne		_0806b14e
	add		r5, r7, #0x0
	ldr		r4, [sp, #0x100]
	mov		r6, #0x3
_0806b108:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	bne		_0806b134
	ldr		r2, [sp, #0xCC]
	ldr		r0, [r2, #0x64]
	mov		r1, #0x1
	neg		r1, r1
	add		r2, r5, #0x0
	bl		sub_0802e0ec
	b		_0806b142

_0806b120:	.4byte 0x02000DAC
_0806b124:	.4byte 0x80808080
_0806b128:	.4byte 0x080d397c
_0806b12c:	.4byte 0x0200DB50
_0806b130:	.4byte 0xFFFFFEB0

_0806b134:
	ldr		r1, [sp, #0xCC]
	ldr		r0, [r1, #0x64]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	add		r2, r5, #0x0
	bl		sub_0802e0ec
_0806b142:
	add		r5, #0x20
	add		r4, #0x2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0806b108
	b		_0806b16c
_0806b14e:
	add		r5, r7, #0x0
	ldr		r4, [sp, #0x100]
	mov		r6, #0x3
_0806b154:
	ldr		r1, [sp, #0xCC]
	ldr		r0, [r1, #0x64]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	add		r2, r5, #0x0
	bl		sub_0802e0ec
	add		r5, #0x20
	add		r4, #0x2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0806b154
_0806b16c:
	mov		r0, #0x4
	str		r0, [sp, #0x0]
	mov		r0, r8
	ldr		r1, [sp, #0x104]
	ldr		r2, [sp, #0xFC]
	add		r3, r7, #0x0
	bl		sub_08033028
	ldr		r1, _0806b1a8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0806b192
	add		r4, r1, #0x0
_0806b186:
	ldr		r0, [sp, #0xCC]
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806b186
_0806b192:
	ldr		r0, [sp, #0xCC]
	bl		sub_080b75b0
_0806b198:
	add		sp, #0x10c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806b1a8:	.4byte 0x0200D534
	thumb_func_end sub_0806adb4

	thumb_func_start sub_0806b1ac
sub_0806b1ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x9c
	add		r7, r0, #0x0
	ldr		r5, _0806b238
	ldr		r1, _0806b23c
	add		r0, r5, r1
	ldr		r1, _0806b240
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r2, #0xc0
	lsl		r2, r2, #0x4
	ldr		r6, _0806b244
	ldr		r1, [r6, #0x0]
	ldr		r1, [r1, #0x0]
	add		r3, r1, #0x0
	add		r3, #0x94
	ldr		r3, [r3, #0x0]
	add		r1, #0x98
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x0]
	ldr		r1, [r7, #0x60]
	str		r1, [sp, #0x4]
	mov		r1, #0x6
	bl		sub_0806c4e4
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0806d0e4
	ldr		r2, _0806b248
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	ble		_0806b21c
	mov		r1, #0x98
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0806b21c
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_0806adb4
_0806b21c:
	add		r5, sp, #0x78
	mov		r2, #0x71
	add		r2, sp
	mov		r8, r2
	add		r0, sp, #0x5c
	mov		r9, r0
	mov		r1, #0x5e
	add		r1, sp
	mov		r10, r1
	mov		r2, sp
	add		r2, #0x64
	str		r2, [sp, #0x98]
	b		_0806b258

.incbin "base.gba", 0x6B236, 0x2

_0806b238:	.4byte 0x0200DBC0
_0806b23c:	.4byte 0xFFFFFE40
_0806b240:	.4byte 0x00000864
_0806b244:	.4byte 0x080d39d4
_0806b248:	.4byte 0x0000041C

_0806b24c:
	add		r0, r7, #0x0
	bl		sub_0806a3d8
	add		r0, r7, #0x0
	bl		sub_080b7690
_0806b258:
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806b24c
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806b2da
	mov		r0, #0x12
	mov		r1, #0x1
	bl		sub_0808b0cc
	ldr		r0, _0806b31c
	add		r1, r7, #0x0
	add		r1, #0x94
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
	mov		r0, #0x12
	mov		r1, #0x2
	bl		sub_0808b0cc
	ldr		r0, _0806b320
	ldr		r2, _0806b324
	add		r1, r7, r2
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
	mov		r0, #0x12
	mov		r1, #0x3
	bl		sub_0808b0cc
	ldr		r0, _0806b328
	mov		r2, #0xd6
	lsl		r2, r2, #0x4
	add		r1, r7, r2
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
	mov		r0, #0x12
	mov		r1, #0x4
	bl		sub_0808b0cc
	ldr		r0, _0806b32c
	ldr		r2, _0806b330
	add		r1, r7, r2
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
	mov		r0, #0x12
	mov		r1, #0x5
	bl		sub_0808b0cc
	ldr		r0, _0806b334
	ldr		r2, _0806b338
	add		r1, r7, r2
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
_0806b2da:
	ldr		r0, [r7, #0x64]
	mov		r1, #0x1
	neg		r1, r1
	bl		sub_0802ea90
	add		r0, sp, #0x8
	bl		sub_0808e21c
	add		r0, r5, #0x0
	bl		sub_0808b374
	mov		r4, #0x0
	str		r4, [sp, #0x74]
	ldr		r1, _0806b33c
	add		r0, sp, #0x8
	bl		sub_0808e03c
	add		r0, sp, #0x8
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, r8
	strb	r4, [r0, #0x0]
	mov		r0, #0xc8
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r0, #0x90
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r0, [sp, #0x98]
	strh	r4, [r0, #0x0]
	b		_0806b358

_0806b31c:	.4byte 0x080d3984 @ _MAX_Pts:%4d
_0806b320:	.4byte 0x080d3994 @ _Total_Pts:%4d
_0806b324:	.4byte 0x00000D5C
_0806b328:	.4byte 0x080d39a4 @ _Hop_Pts:%4d
_0806b32c:	.4byte 0x080d39b4 @ _Step_Pts:%4d
_0806b330:	.4byte 0x00000D64
_0806b334:	.4byte 0x080d39c4 @ _Jump_Pts:%4d
_0806b338:	.4byte 0x00000D68
_0806b33c:	.4byte 0x00000105

_0806b340:
	add		r0, r7, #0x0
	bl		sub_0806a3d8
	add		r0, r5, #0x0
	bl		sub_0808b3d4
	add		r0, sp, #0x8
	bl		sub_0808e4a0
	add		r0, r7, #0x0
	bl		sub_080b7690
_0806b358:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0806b340
	add		r0, sp, #0x8
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r1, _0806b390
	add		r4, r7, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x2
	ble		_0806b394
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	bl		sub_08002268
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	bl		sub_08002268
	ldr		r1, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_0806adb4
	b		_0806b3f8

_0806b390:	.4byte 0x0000041C

_0806b394:
	mov		r5, #0x0
	ldr		r2, _0806b408
	mov		r10, r2
	ldr		r0, [r2, #0x0]
	mov		r9, r0
	ldr		r1, _0806b40c
	mov		r8, r1
	ldr		r4, _0806b410
	ldr		r6, _0806b414
_0806b3a6:
	strh	r5, [r6, #0x0]
	strh	r5, [r4, #0x0]
	mov		r2, r8
	strh	r5, [r2, #0x0]
	mov		r0, r9
	strh	r5, [r0, #0x0]
	mov		r0, #0x2
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_0806a3d8
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r5, #0x2
	cmp		r5, #0x1f
	ble		_0806b3a6
	mov		r1, r10
	ldr		r4, [r1, #0x0]
	ldr		r3, _0806b40c
	ldr		r2, _0806b410
	ldr		r1, _0806b414
	mov		r0, #0x1f
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, #0x2
	bl		sub_08009680
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	bl		sub_08002268
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	bl		sub_08002268
	mov		r0, #0x0
	str		r0, [r7, #0x54]
_0806b3f8:
	add		sp, #0x9c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806b408:	.4byte 0x080d39d8
_0806b40c:	.4byte 0x0200EB1E
_0806b410:	.4byte 0x0200EB20
_0806b414:	.4byte 0x0200EB22
	thumb_func_end sub_0806b1ac

	thumb_func_start sub_0806b418
sub_0806b418:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x9c
	add		r7, r0, #0x0
	mov		r0, #0x81
	lsl		r0, r0, #0x3
	add		r4, r7, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0806b438
	sub		r0, #0x1
	str		r0, [r4, #0x0]
	b		_0806b708
_0806b438:
	ldr		r0, _0806b4b4
	bl		sub_08002268
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x5c]
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	ldr		r6, _0806b4b8
	ldr		r2, _0806b4bc
	add		r0, r6, r2
	ldr		r1, _0806b4c0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r2, #0xc0
	lsl		r2, r2, #0x4
	ldr		r5, _0806b4c4
	ldr		r1, [r5, #0x0]
	ldr		r1, [r1, #0x0]
	add		r3, r1, #0x0
	add		r3, #0x94
	ldr		r3, [r3, #0x0]
	add		r1, #0x98
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x0]
	ldr		r1, [r7, #0x60]
	str		r1, [sp, #0x4]
	mov		r1, #0x0
	bl		sub_0806c4e4
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r1, [r7, #0x5c]
	add		r0, r4, #0x0
	bl		sub_0806d0e4
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_0806adb4
	add		r6, sp, #0x78
	mov		r3, #0x71
	add		r3, sp
	mov		r8, r3
	add		r0, sp, #0x5c
	mov		r9, r0
	mov		r1, #0x5e
	add		r1, sp
	mov		r10, r1
	mov		r2, sp
	add		r2, #0x64
	str		r2, [sp, #0x98]
	b		_0806b566

.incbin "base.gba", 0x6B4B2, 0x2

_0806b4b4:	.4byte 0x00000287
_0806b4b8:	.4byte 0x0200DBC0
_0806b4bc:	.4byte 0xFFFFFE40
_0806b4c0:	.4byte 0x00000864
_0806b4c4:	.4byte 0x080d39dc

_0806b4c8:
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0806b55a
	mov		r1, #0x81
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0806b55a
	add		r4, r7, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	ldr		r0, [r5, #0x0]
	ldr		r2, [r0, #0x0]
	mov		r3, #0xb2
	lsl		r3, r3, #0x2
	add		r0, r2, r3
	ldr		r1, [r7, #0x5c]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	blt		_0806b50e
	add		r0, r4, #0x0
	mov		r1, #0x1e
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x4
	b		_0806b526
_0806b50e:
	mov		r3, #0xb3
	lsl		r3, r3, #0x2
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bgt		_0806b52e
	add		r0, r4, #0x0
	mov		r1, #0x20
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x1
_0806b526:
	mov		r2, #0x2
	bl		sub_0808e3c0
	b		_0806b540
_0806b52e:
	add		r0, r4, #0x0
	mov		r1, #0x1f
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
_0806b540:
	ldr		r0, _0806b638
	add		r1, r7, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xfc
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
	mov		r2, #0x81
	lsl		r2, r2, #0x3
	add		r1, r7, r2
	sub		r0, #0xb
	str		r0, [r1, #0x0]
_0806b55a:
	add		r0, r7, #0x0
	bl		sub_0806a3d8
	add		r0, r7, #0x0
	bl		sub_080b7690
_0806b566:
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806b4c8
	ldr		r1, [r7, #0x5c]
	ldr		r0, [r7, #0x60]
	add		r2, r1, #0x0
	cmp		r2, r0
	ble		_0806b57e
	str		r2, [r7, #0x60]
_0806b57e:
	ldr		r0, [r7, #0x64]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_0802ea90
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x0]
	mov		r3, #0xb4
	lsl		r3, r3, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806b5fe
	mov		r0, #0x12
	mov		r1, #0x1
	bl		sub_0808b0cc
	ldr		r0, _0806b63c
	add		r1, r7, #0x0
	add		r1, #0x94
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
	mov		r0, #0x12
	mov		r1, #0x2
	bl		sub_0808b0cc
	ldr		r0, _0806b640
	ldr		r2, _0806b644
	add		r1, r7, r2
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
	mov		r0, #0x12
	mov		r1, #0x3
	bl		sub_0808b0cc
	ldr		r0, _0806b648
	mov		r3, #0xd6
	lsl		r3, r3, #0x4
	add		r1, r7, r3
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
	mov		r0, #0x12
	mov		r1, #0x4
	bl		sub_0808b0cc
	ldr		r0, _0806b64c
	ldr		r2, _0806b650
	add		r1, r7, r2
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
	mov		r0, #0x12
	mov		r1, #0x5
	bl		sub_0808b0cc
	ldr		r0, _0806b654
	ldr		r3, _0806b658
	add		r1, r7, r3
	ldr		r1, [r1, #0x0]
	bl		sub_0808b240
_0806b5fe:
	add		r0, sp, #0x8
	bl		sub_0808e21c
	add		r0, r6, #0x0
	bl		sub_0808b374
	mov		r4, #0x0
	str		r4, [sp, #0x74]
	ldr		r1, _0806b65c
	add		r0, sp, #0x8
	bl		sub_0808e03c
	add		r0, sp, #0x8
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r0, r8
	strb	r4, [r0, #0x0]
	mov		r0, #0xc8
	mov		r1, r9
	strh	r0, [r1, #0x0]
	mov		r0, #0x90
	mov		r2, r10
	strh	r0, [r2, #0x0]
	ldr		r3, [sp, #0x98]
	strh	r4, [r3, #0x0]
	b		_0806b678

.incbin "base.gba", 0x6B636, 0x2

_0806b638:	.4byte 0x00000109
_0806b63c:	.4byte 0x080d3984 @ _MAX_Pts:%4d
_0806b640:	.4byte 0x080d3994 @ _Hop_Pts:%4d
_0806b644:	.4byte 0x00000D5C
_0806b648:	.4byte 0x080d39a4 @ _Hop_Pts:%4d
_0806b64c:	.4byte 0x080d39b4 @ _Step_Pts:%4d
_0806b650:	.4byte 0x00000D64
_0806b654:	.4byte 0x080d39c4 @ _Jump_Pts:%4d
_0806b658:	.4byte 0x00000D68
_0806b65c:	.4byte 0x00000105

_0806b660:
	add		r0, r7, #0x0
	bl		sub_0806a3d8
	add		r0, r6, #0x0
	bl		sub_0808b3d4
	add		r0, sp, #0x8
	bl		sub_0808e4a0
	add		r0, r7, #0x0
	bl		sub_080b7690
_0806b678:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0806b660
	add		r0, sp, #0x8
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r0, _0806b6a8
	add		r4, r7, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x2
	ble		_0806b6ac
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	bl		sub_08002268
	ldr		r1, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_0806adb4
	b		_0806b708

_0806b6a8:	.4byte 0x0000041C

_0806b6ac:
	mov		r5, #0x0
	ldr		r1, _0806b718
	mov		r10, r1
	ldr		r2, _0806b71c
	mov		r9, r2
	ldr		r3, _0806b720
	mov		r8, r3
	ldr		r4, _0806b724
	ldr		r6, [r1, #0x0]
_0806b6be:
	strh	r5, [r6, #0x0]
	strh	r5, [r4, #0x0]
	mov		r0, r8
	strh	r5, [r0, #0x0]
	mov		r1, r9
	strh	r5, [r1, #0x0]
	mov		r0, #0x2
	bl		sub_08009680
	add		r0, r7, #0x0
	bl		sub_0806a3d8
	add		r0, r7, #0x0
	bl		sub_080b7690
	add		r5, #0x2
	cmp		r5, #0x1f
	ble		_0806b6be
	ldr		r4, _0806b71c
	ldr		r3, _0806b720
	ldr		r2, _0806b724
	mov		r0, r10
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1f
	strh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, #0x2
	bl		sub_08009680
	mov		r0, #0xf2
	lsl		r0, r0, #0x4
	bl		sub_08002268
	mov		r0, #0x0
	str		r0, [r7, #0x54]
_0806b708:
	add		sp, #0x9c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806b718:	.4byte 0x080d39e0
_0806b71c:	.4byte 0x0200EB24
_0806b720:	.4byte 0x0200EB1E
_0806b724:	.4byte 0x0200EB20
	thumb_func_end sub_0806b418

	thumb_func_start sub_0806b728
sub_0806b728:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	add		r6, r0, #0x0
	mov		r0, #0x96
	lsl		r0, r0, #0x3
	add		r4, r6, r0
	ldr		r0, [r4, #0x0]
	sub		r0, #0x1
	str		r0, [r4, #0x0]
	cmp		r0, #0x0
	bgt		_0806b762
	mov		r0, #0x14
	bl		sub_0808f690
	add		r0, r6, #0x0
	add		r0, #0x90
	ldr		r0, [r0, #0x0]
	mov		r1, #0x64
	bl		sub_080bbcac
	mov		r1, #0xa
	sub		r1, r1, r0
	lsl		r1, r1, #0x1
	add		r1, #0x2
	str		r1, [r4, #0x0]
_0806b762:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_0806b798
	ldr		r0, _0806b8d8
	ldr		r0, [r0, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r7, r6, #0x0
	add		r7, #0x90
	add		r2, r6, #0x0
	add		r2, #0xf4
	str		r2, [sp, #0x20]
	cmp		r0, #0x0
	bne		_0806b78a
	b		_0806b9cc
_0806b78a:
	mov		r0, #0x0
	mov		r1, #0x4
	bl		sub_08001884
	cmp		r0, #0x0
	bne		_0806b798
	b		_0806b9cc
_0806b798:
	ldr		r0, [r6, #0x7c]
	cmp		r0, #0x0
	bge		_0806b7a2
	ldr		r3, _0806b8dc
	add		r0, r0, r3
_0806b7a2:
	asr		r0, r0, #0x10
	str		r0, [sp, #0x0]
	mov		r4, #0x0
	ldr		r2, _0806b8d8
	ldr		r0, [r2, #0x0]
	add		r1, r0, #0x0
	add		r1, #0x90
	ldr		r1, [r1, #0x0]
	mov		r8, r1
	ldr		r0, [r0, #0x20]
	add		r7, r6, #0x0
	add		r7, #0x90
	add		r1, r6, #0x0
	add		r1, #0xf4
	str		r1, [sp, #0x20]
	cmp		r4, r0
	blt		_0806b7c6
	b		_0806b9cc
_0806b7c6:
	mov		r3, #0xe1
	lsl		r3, r3, #0x3
	add		r3, r6, r3
	str		r3, [sp, #0x4]
	ldr		r0, [sp, #0x0]
	add		r0, #0x20
	str		r0, [sp, #0x8]
	mov		r10, r2
	ldr		r1, _0806b8e0
	add		r1, r6, r1
	str		r1, [sp, #0x18]
	mov		r2, #0xbd
	lsl		r2, r2, #0x4
	add		r2, r6, r2
	str		r2, [sp, #0xc]
	ldr		r3, _0806b8e4
	add		r3, r6, r3
	str		r3, [sp, #0x10]
	mov		r0, #0x83
	lsl		r0, r0, #0x3
	add		r0, r0, r6
	mov		r9, r0
	add		r1, r6, #0x0
	add		r1, #0x80
	str		r1, [sp, #0x14]
_0806b7f8:
	mov		r0, r8
	sub		r0, #0x20
	add		r2, r4, #0x1
	str		r2, [sp, #0x1c]
	ldr		r3, [sp, #0x0]
	cmp		r0, r3
	ble		_0806b808
	b		_0806b9ba
_0806b808:
	add		r0, #0x3f
	cmp		r0, r3
	bge		_0806b810
	b		_0806b9ba
_0806b810:
	ldr		r1, [sp, #0x4]
	ldr		r0, [r1, #0x0]
	cmp		r4, r0
	bne		_0806b81a
	b		_0806b9ba
_0806b81a:
	ldr		r2, [sp, #0x8]
	mov		r3, r8
	sub		r5, r2, r3
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	mov		r2, #0xb4
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806b83e
	mov		r0, #0x0
	mov		r1, #0x4
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0806b83e
	mov		r5, #0x20
_0806b83e:
	mov		r2, #0x0
	ldr		r1, _0806b8e0
	ldr		r3, [sp, #0x18]
	ldr		r0, [r3, #0x0]
	add		r3, r4, #0x1
	str		r3, [sp, #0x1c]
	cmp		r0, r5
	bge		_0806b862
	cmp		r0, #0xff
	beq		_0806b902
	add		r1, r6, r1
_0806b854:
	add		r1, #0x8
	add		r2, #0x1
	ldr		r0, [r1, #0x0]
	cmp		r0, r5
	bge		_0806b862
	cmp		r0, #0xff
	bne		_0806b854
_0806b862:
	lsl		r1, r2, #0x3
	ldr		r2, [sp, #0x18]
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_0806b902
	ldr		r3, [sp, #0x4]
	str		r4, [r3, #0x0]
	ldr		r4, [sp, #0xc]
	add		r3, r4, r1
	ldr		r0, [r7, #0x0]
	ldr		r1, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r7, #0x0]
	ldr		r2, _0806b8d8
	ldr		r1, [r2, #0x0]
	ldr		r1, [r1, #0x8]
	cmp		r0, r1
	ble		_0806b88a
	str		r1, [r7, #0x0]
_0806b88a:
	ldr		r0, [r2, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806b8b0
	add		r2, r6, #0x0
	add		r2, #0x94
	ldr		r1, [r7, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	ble		_0806b8a6
	str		r1, [r2, #0x0]
_0806b8a6:
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r3, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_0806b8b0:
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	ldr		r1, [r7, #0x0]
	ldr		r0, [r0, #0x18]
	cmp		r1, r0
	ble		_0806b8e8
	add		r4, r6, #0x0
	add		r4, #0x98
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x3
	beq		_0806b8d2
	add		r0, r6, #0x0
	add		r0, #0xa0
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0808e3c0
_0806b8d2:
	mov		r0, #0x3
	str		r0, [r4, #0x0]
	b		_0806b902

_0806b8d8:	.4byte 0x0200BB58
_0806b8dc:	.4byte 0x0000FFFF
_0806b8e0:	.4byte 0x00000BCC
_0806b8e4:	.4byte 0x00000D5C

_0806b8e8:
	add		r4, r6, #0x0
	add		r4, #0x98
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x2
	beq		_0806b8fe
	add		r0, r6, #0x0
	add		r0, #0xa0
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
_0806b8fe:
	mov		r1, #0x2
	str		r1, [r4, #0x0]
_0806b902:
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	mov		r3, #0xb6
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	ble		_0806b91e
	mov		r4, #0xb8
	lsl		r4, r4, #0x1
	add		r0, r1, r4
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	ble		_0806b936
_0806b91e:
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	ble		_0806b946
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bgt		_0806b946
_0806b936:
	mov		r0, #0x52
	bl		sub_0808f690
	mov		r4, #0xe0
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	mov		r1, #0x2
	b		_0806b970
_0806b946:
	mov		r4, r10
	ldr		r1, [r4, #0x0]
	mov		r2, #0xb8
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	ble		_0806b9b4
	mov		r3, #0xba
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bgt		_0806b9b4
	mov		r0, #0x53
	bl		sub_0808f690
	mov		r4, #0xe0
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	mov		r1, #0x3
_0806b970:
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	mov		r2, #0x1
	orr		r0, r2
	str		r0, [r1, #0x0]
	mov		r3, #0x97
	lsl		r3, r3, #0x3
	add		r1, r6, r3
	ldr		r0, [r6, #0x7c]
	cmp		r0, #0x0
	bge		_0806b990
	ldr		r4, _0806b9ac
	add		r0, r0, r4
_0806b990:
	asr		r0, r0, #0x10
	str		r0, [r1, #0x0]
	ldr		r0, _0806b9b0
	add		r1, r6, r0
	ldr		r2, [sp, #0x14]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_0806b9a4
	ldr		r3, _0806b9ac
	add		r0, r0, r3
_0806b9a4:
	asr		r0, r0, #0x10
	str		r0, [r1, #0x0]
	b		_0806b9ba

.incbin "base.gba", 0x6B9AA, 0x2

_0806b9ac:	.4byte 0x0000FFFF
_0806b9b0:	.4byte 0x000004BC

_0806b9b4:
	mov		r0, #0x51
	bl		sub_0808f690
_0806b9ba:
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x1c]
	add		r8, r1
	ldr		r4, [sp, #0x1c]
	ldr		r0, [r0, #0x20]
	cmp		r4, r0
	bge		_0806b9cc
	b		_0806b7f8
_0806b9cc:
	ldr		r0, _0806bb70
	ldr		r4, [r0, #0x0]
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x8]
	bl		sub_080bbcac
	ldr		r1, [r7, #0x0]
	mul		r1, r0
	ldr		r0, [r4, #0x10]
	cmp		r1, r0
	bge		_0806b9e4
	add		r1, r0, #0x0
_0806b9e4:
	ldr		r0, [r6, #0x7c]
	add		r0, r0, r1
	str		r0, [r6, #0x7c]
	cmp		r0, #0x0
	bge		_0806b9f2
	ldr		r1, _0806bb74
	add		r0, r0, r1
_0806b9f2:
	asr		r0, r0, #0x10
	sub		r0, #0x78
	str		r0, [r6, #0x68]
	cmp		r0, #0x0
	bge		_0806ba00
	mov		r0, #0x0
	str		r0, [r6, #0x68]
_0806ba00:
	ldr		r1, _0806bb78
	ldr		r0, _0806bb7c
	mov		r3, #0x0
	add		r4, r0, #0x4
	add		r1, #0x4
	mov		r2, #0x2
_0806ba0c:
	ldr		r0, [r6, #0x68]
	lsl		r0, r0, #0x10
	stmia	r1!, { r0 }
	stmia	r4!, {  r3 }
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0806ba0c
	ldr		r0, _0806bb70
	ldr		r3, [r0, #0x0]
	add		r2, r3, #0x0
	add		r2, #0x90
	ldr		r1, [r3, #0x20]
	ldr		r0, [r3, #0x1c]
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	add		r1, r0, r1
	ldr		r2, [sp, #0x20]
	mov		r4, #0x0
	ldrsh	r0, [r2, r4]
	cmp		r0, #0x0
	bge		_0806ba3a
	ldr		r2, _0806bb74
	add		r0, r0, r2
_0806ba3a:
	asr		r0, r0, #0x10
	cmp		r1, r0
	ble		_0806ba50
	ldr		r0, [r7, #0x0]
	ldr		r1, [r3, #0x14]
	sub		r0, r0, r1
	str		r0, [r7, #0x0]
	cmp		r0, #0x0
	bgt		_0806ba50
	mov		r0, #0x0
	str		r0, [r7, #0x0]
_0806ba50:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_0806ba5e
	b		_0806bc08
_0806ba5e:
	mov		r0, #0xb
	bl		sub_0808f690
	ldr		r3, [r6, #0x7c]
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0806ba70
	ldr		r4, _0806bb74
	add		r0, r3, r4
_0806ba70:
	asr		r0, r0, #0x10
	add		r2, r0, #0x0
	add		r2, #0x8
	ldr		r0, _0806bb70
	mov		r9, r0
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x24]
	ldr		r0, [r5, #0x28]
	sub		r0, r1, r0
	cmp		r2, r0
	bgt		_0806ba88
	b		_0806bb90
_0806ba88:
	cmp		r2, r1
	ble		_0806ba8e
	b		_0806bb94
_0806ba8e:
	add		r1, r6, #0x0
	add		r1, #0x9c
	mov		r2, #0x80
	lsl		r2, r2, #0xc
	add		r0, r3, r2
	str		r0, [r1, #0x0]
	mov		r0, #0x4
	str		r0, [r6, #0x54]
	ldr		r1, [r5, #0x38]
	lsr		r0, r1, #0x1f
	add		r1, r1, r0
	asr		r1, r1, #0x1
	ldr		r3, _0806bb80
	add		r4, r6, r3
	ldr		r0, [r5, #0x3c]
	lsl		r0, r0, #0x10
	add		r2, r1, #0x0
	mul		r2, r1
	add		r1, r2, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x0]
	mov		r3, #0x81
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	mov		r4, #0x0
	mov		r8, r4
	str		r4, [r0, #0x0]
	ldr		r1, _0806bb84
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	add		r4, r6, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r2, #0x94
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r3, #0x83
	lsl		r3, r3, #0x3
	add		r2, r6, r3
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r2, #0x0]
	mov		r4, #0xb8
	lsl		r4, r4, #0x2
	add		r0, r6, r4
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r1, _0806bb88
	add		r0, r6, r1
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r2, _0806bb8c
	add		r0, r6, r2
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r5, r7, #0x0
	mov		r3, r9
	ldr		r4, [r3, #0x0]
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x8]
	bl		sub_080bbcac
	ldr		r1, [r5, #0x0]
	mul		r0, r1
	add		r4, #0x84
	ldr		r1, [r4, #0x0]
	bl		sub_080bbcac
	str		r0, [r6, #0x70]
	cmp		r0, #0x0
	bne		_0806bb4c
	mov		r0, #0x1
	str		r0, [r6, #0x70]
_0806bb4c:
	mov		r0, r9
	ldr		r4, [r0, #0x0]
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x8]
	bl		sub_080bbcac
	ldr		r1, [r7, #0x0]
	mul		r0, r1
	lsl		r0, r0, #0x8
	add		r4, #0x84
	ldr		r1, [r4, #0x0]
	bl		sub_080bbcac
	str		r0, [r6, #0x74]
	mov		r1, r8
	str		r1, [r6, #0x78]
	b		_0806bc08

.incbin "base.gba", 0x6BB6E, 0x2

_0806bb70:	.4byte 0x0200BB58
_0806bb74:	.4byte 0x0000FFFF
_0806bb78:	.4byte 0x0200CE24
_0806bb7c:	.4byte 0x0200CE38
_0806bb80:	.4byte 0x00000404
_0806bb84:	.4byte 0x0000040C
_0806bb88:	.4byte 0x000009DC
_0806bb8c:	.4byte 0x00000A6C

_0806bb90:
	cmp		r2, r1
	ble		_0806bc08
_0806bb94:
	add		r4, r6, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x7
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0xe
	str		r0, [r6, #0x54]
	mov		r2, #0x81
	lsl		r2, r2, #0x3
	add		r1, r6, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r3, #0xb8
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r5, #0x3
	ldr		r0, _0806bd08
	add		r4, r6, r0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _0806bd0c
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	ldr		r2, _0806bd10
	add		r0, r6, r2
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r3, _0806bd14
	add		r0, r6, r3
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
_0806bc08:
	ldr		r1, [r6, #0x7c]
	cmp		r1, #0x0
	bge		_0806bc12
	ldr		r4, _0806bd18
	add		r1, r1, r4
_0806bc12:
	asr		r1, r1, #0x10
	ldr		r0, _0806bd1c
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x24]
	cmp		r1, r0
	ble		_0806bc3e
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0806bc3e
	add		r1, r6, #0x0
	add		r1, #0x9c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0806bc3e
	ldr		r0, [r6, #0x7c]
	mov		r2, #0x80
	lsl		r2, r2, #0xc
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_0806bc3e:
	ldr		r2, [r6, #0x7c]
	cmp		r2, #0x0
	bge		_0806bc48
	ldr		r3, _0806bd18
	add		r2, r2, r3
_0806bc48:
	asr		r2, r2, #0x10
	ldr		r5, _0806bd1c
	ldr		r1, [r5, #0x0]
	ldr		r0, [r1, #0x24]
	ldr		r1, [r1, #0x2c]
	add		r0, r0, r1
	cmp		r2, r0
	ble		_0806bc82
	add		r4, r6, #0x0
	add		r4, #0xa0
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x21
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0xe
	str		r0, [r6, #0x54]
	mov		r4, #0x81
	lsl		r4, r4, #0x3
	add		r1, r6, r4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0806bc82:
	ldr		r0, [r6, #0x7c]
	cmp		r0, #0x0
	bge		_0806bc8c
	ldr		r1, _0806bd18
	add		r0, r0, r1
_0806bc8c:
	asr		r0, r0, #0x10
	ldr		r1, [r5, #0x0]
	ldr		r1, [r1, #0x24]
	cmp		r0, r1
	ble		_0806bcf6
	mov		r2, #0x83
	lsl		r2, r2, #0x3
	add		r4, r6, r2
	ldr		r0, [r4, #0x0]
	mov		r5, #0x4
	and		r0, r5
	cmp		r0, #0x0
	bne		_0806bcf6
	mov		r3, #0xb8
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x0]
	orr		r0, r5
	str		r0, [r4, #0x0]
	ldr		r4, _0806bd10
	add		r0, r6, r4
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, _0806bd14
	add		r0, r6, r1
	mov		r1, #0x2
	mov		r2, #0x2
	bl		sub_0808e3c0
	mov		r5, #0x3
	ldr		r2, _0806bd08
	add		r4, r6, r2
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x1c
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r3, _0806bd0c
	add		r0, r6, r3
	strb	r5, [r0, #0x0]
_0806bcf6:
	add		sp, #0x24
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6BD06, 0x2

_0806bd08:	.4byte 0x00000AFC
_0806bd0c:	.4byte 0x00000B65
_0806bd10:	.4byte 0x000009DC
_0806bd14:	.4byte 0x00000A6C
_0806bd18:	.4byte 0x0000FFFF
_0806bd1c:	.4byte 0x0200BB58
	thumb_func_end sub_0806b728

	thumb_func_start sub_0806bd20
sub_0806bd20:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	mov		r0, #0x81
	lsl		r0, r0, #0x3
	add		r4, r5, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806bd36
	mov		r0, #0x4d
	bl		sub_0808f690
_0806bd36:
	ldr		r2, _0806bd94
	add		r1, r5, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806be34
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0806bd6e
	add		r1, r5, #0x0
	add		r1, #0x9c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0806bd6e
	ldr		r0, [r5, #0x7c]
	mov		r2, #0x80
	lsl		r2, r2, #0xc
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_0806bd6e:
	mov		r4, #0x81
	lsl		r4, r4, #0x3
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x29
	bgt		_0806bd9c
	ldr		r4, _0806bd98
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x10]
	mov		r1, #0x5
	bl		sub_080bbcac
	ldr		r1, [r5, #0x7c]
	add		r1, r1, r0
	str		r1, [r5, #0x7c]
	add		r7, r4, #0x0
	b		_0806bdb4

.incbin "base.gba", 0x6BD92, 0x2

_0806bd94:	.4byte 0x0000042C
_0806bd98:	.4byte 0x080d39e4

_0806bd9c:
	ldr		r7, _0806bddc
	cmp		r0, #0x47
	bgt		_0806bdb4
	ldr		r0, [r7, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x10]
	mov		r1, #0x3
	bl		sub_080bbcac
	ldr		r1, [r5, #0x7c]
	add		r1, r1, r0
	str		r1, [r5, #0x7c]
_0806bdb4:
	mov		r1, #0x81
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2a
	ble		_0806bdec
	ldr		r1, [r5, #0x7c]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0806bdcc
	ldr		r2, _0806bde0
	add		r0, r1, r2
_0806bdcc:
	asr		r0, r0, #0x10
	add		r2, r0, #0x0
	sub		r2, #0x78
	ldr		r0, [r5, #0x68]
	cmp		r0, r2
	ble		_0806bde4
	sub		r0, #0x1
	b		_0806bdea

_0806bddc:	.4byte 0x080d39e4
_0806bde0:	.4byte 0x0000FFFF

_0806bde4:
	cmp		r0, r2
	bge		_0806bdec
	add		r0, #0x1
_0806bdea:
	str		r0, [r5, #0x68]
_0806bdec:
	add		r3, r5, #0x0
	add		r3, #0x90
	ldr		r1, _0806be2c
	ldr		r0, _0806be30
	mov		r4, #0x0
	add		r6, r0, #0x4
	add		r1, #0x4
	mov		r2, #0x2
_0806bdfc:
	ldr		r0, [r5, #0x68]
	lsl		r0, r0, #0x10
	stmia	r1!, { r0 }
	stmia	r6!, {  r4 }
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0806bdfc
	ldr		r0, [r7, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r1, #0x30]
	sub		r0, r0, r1
	str		r0, [r3, #0x0]
	cmp		r0, #0x0
	bgt		_0806be1e
	mov		r0, #0x0
	str		r0, [r3, #0x0]
_0806be1e:
	mov		r4, #0x81
	lsl		r4, r4, #0x3
	add		r1, r5, r4
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	b		_0806be6c

_0806be2c:	.4byte 0x0200CE24
_0806be30:	.4byte 0x0200CE38

_0806be34:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x48
	ble		_0806be68
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r3, r5, r0
	ldr		r1, _0806be64
	add		r2, r5, r1
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x2
	mov		r4, #0x84
	lsl		r4, r4, #0x3
	add		r1, r5, r4
	add		r1, r1, r0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	str		r0, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	mov		r0, #0x11
	str		r0, [r5, #0x54]
	b		_0806be6c

_0806be64:	.4byte 0x0000041C

_0806be68:
	add		r0, #0x1
	str		r0, [r4, #0x0]
_0806be6c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6BE72, 0x55E
	thumb_func_end sub_0806bd20

	thumb_func_start sub_0806c3d0
sub_0806c3d0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080694c4
	mov		r0, #0x2
	str		r0, [r4, #0x54]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6C3E2, 0x7A
	thumb_func_end sub_0806c3d0

	thumb_func_start sub_0806c45c
sub_0806c45c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	mov		r8, r2
	mov		r9, r3
	ldr		r7, [sp, #0x0+0x1c]
	lsl		r5, r1, #0x3
	add		r5, r5, r1
	lsl		r5, r5, #0x4
	ldr		r0, _0806c4a8
	add		r4, r5, r0
	add		r4, r6, r4
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, r9
	add		r2, r7, #0x0
	bl		sub_0808e3c0
	add		r6, r6, r5
	ldr		r1, _0806c4ac
	add		r6, r6, r1
	add		r0, sp, #0x20
	ldrb	r0, [r0, #0x0]
	strb	r0, [r6, #0x0]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806c4a8:	.4byte 0x0000070C
_0806c4ac:	.4byte 0x00000775
	thumb_func_end sub_0806c45c

	thumb_func_start sub_0806c4b0
sub_0806c4b0:
	push	{ r4, lr }
	ldr		r4, _0806c4d8
	ldr		r1, _0806c4dc
	add		r0, r4, r1
	ldr		r1, _0806c4e0
	mov		r2, #0xd0
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_08068ec8
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6C4D6, 0x2

_0806c4d8:	.4byte 0x0200DBD0
_0806c4dc:	.4byte 0xFFFFFE30
_0806c4e0:	.4byte 0x00000D6C
	thumb_func_end sub_0806c4b0

	thumb_func_start sub_0806c4e4
sub_0806c4e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r9, r2
	mov		r10, r3
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0806c5f0
	str		r0, [r5, #0x4c]
	ldr		r0, _0806c5f4
	str		r0, [r5, #0xc]
	add		r4, r5, #0x0
	add		r4, #0x58
	mov		r6, #0x9
	mov		r0, #0x0
	mov		r8, r0
	mov		r7, #0x1
	neg		r7, r7
_0806c51a:
	add		r0, r4, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r1, r8
	str		r1, [r4, #0x6c]
	add		r4, #0x90
	sub		r6, #0x1
	cmp		r6, r7
	bne		_0806c51a
	mov		r2, #0xbf
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	bl		sub_0808e21c
	mov		r1, #0xcd
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	bl		sub_0808b374
	ldr		r2, _0806c5f8
	add		r0, r5, r2
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r1, #0xd1
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	bl		sub_0808e21c
	mov		r2, #0xdf
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	bl		sub_0808b374
	ldr		r1, _0806c5fc
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	mov		r2, #0xe3
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	bl		sub_0808e21c
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	bl		sub_0808b374
	ldr		r2, _0806c600
	add		r0, r5, r2
	str		r4, [r0, #0x0]
	str		r4, [r5, #0x54]
	ldr		r1, _0806c604
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r2, #0xc4
	add		r0, r5, r2
	mov		r1, r10
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r1, r5, r2
	ldr		r0, [sp, #0x4+0x24]
	str		r0, [r1, #0x0]
	ldr		r0, _0806c608
	add		r1, r5, r0
	ldr		r0, [sp, #0x0+0x24]
	str		r0, [r1, #0x0]
	ldr		r1, _0806c60c
	add		r0, r5, r1
	ldr		r2, [sp, #0x0]
	str		r2, [r0, #0x0]
	sub		r1, #0x74
	add		r0, r5, r1
	mov		r2, r9
	str		r2, [r0, #0x0]
	mov		r0, r9
	bl		sub_0800223c
	ldr		r0, _0806c610
	add		r1, r5, r0
	ldr		r2, _0806c614
	add		r0, r5, r2
	str		r4, [r0, #0x0]
	str		r4, [r1, #0x0]
	mov		r3, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	mov		r1, #0xff
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	mov		r1, #0x9
_0806c5d4:
	str		r3, [r0, #0x28]
	stmia	r0!, {  r2 }
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0806c5d4
	add		r0, r5, #0x0
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806c5f0:	.4byte 0x080e034c
_0806c5f4:	.4byte 0x080e2284
_0806c5f8:	.4byte 0x00000664
_0806c5fc:	.4byte 0x000006F4
_0806c600:	.4byte 0x00000784
_0806c604:	.4byte 0x000007DC
_0806c608:	.4byte 0x0000084C
_0806c60c:	.4byte 0x00000854
_0806c610:	.4byte 0x00000858
_0806c614:	.4byte 0x0000085C
	thumb_func_end sub_0806c4e4

	thumb_func_start sub_0806c618
sub_0806c618:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x54]
	cmp		r0, #0xa
	bls		_0806c626
	b		_0806c738
_0806c626:
	lsl		r0, r0, #0x2
	ldr		r1, _0806c630
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0806c630:	.4byte 0x0806c634
_0806c634:	.4byte 0x0806c6a6

.incbin "base.gba", 0x6C638, 0x28

_0806c660:
.incbin "base.gba", 0x6C660, 0x4
.incbin "base.gba", 0x6C664, 0x4
_0806c668:
.incbin "base.gba", 0x6C668, 0x4
.incbin "base.gba", 0x6C66C, 0x4
_0806c670:
.incbin "base.gba", 0x6C670, 0x4
.incbin "base.gba", 0x6C674, 0x4
_0806c678:
.incbin "base.gba", 0x6C678, 0x4
.incbin "base.gba", 0x6C67C, 0x4
_0806c680:
.incbin "base.gba", 0x6C680, 0x4
.incbin "base.gba", 0x6C684, 0x4

.incbin "base.gba", 0x6C688, 0x8

_0806c690:
.incbin "base.gba", 0x6C690, 0x4
.incbin "base.gba", 0x6C694, 0x4

.incbin "base.gba", 0x6C698, 0x8
	thumb_func_end sub_0806c618


.incbin "base.gba", 0x6C6A0, 0x98

_0806c738:

.incbin "base.gba", 0x6C738, 0x6C
_0806c7a4:	.4byte 0x0806c7c0

.incbin "base.gba", 0x6C7A8, 0x93C
	thumb_func_start sub_0806d0e4
sub_0806d0e4:
	ldr		r3, _0806d0f0
	add		r2, r0, r3
	str		r1, [r2, #0x0]
	mov		r1, #0x1
	str		r1, [r0, #0x54]
	bx		lr

_0806d0f0:	.4byte 0x000007DC
	thumb_func_end sub_0806d0e4

	thumb_func_start sub_0806d0f4
sub_0806d0f4:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _0806d16c
	str		r0, [r5, #0x4c]
	ldr		r0, _0806d170
	str		r0, [r5, #0xc]
	mov		r1, #0xe3
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xd1
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, #0xbf
	lsl		r0, r0, #0x3
	add		r4, r5, r0
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r5, #0x0
	add		r0, #0x58
	cmp		r0, #0x0
	beq		_0806d144
	cmp		r0, r4
	beq		_0806d144
	add		r6, r0, #0x0
_0806d136:
	sub		r4, #0x90
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	cmp		r6, r4
	bne		_0806d136
_0806d144:
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_0806d164
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0806d164:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6D16A, 0x2

_0806d16c:	.4byte 0x080e034c
_0806d170:	.4byte 0x080e2284
	thumb_func_end sub_0806d0f4

	thumb_func_start sub_0806d174
sub_0806d174:
	bx		lr

.incbin "base.gba", 0x6D176, 0x2
	thumb_func_end sub_0806d174

	thumb_func_start sub_0806d178
sub_0806d178:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x78
	add		r5, r0, #0x0
	add		r6, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, _0806d1a4
	cmp		r1, r0
	bne		_0806d18c
	b		_0806d27c
_0806d18c:
	cmp		r1, r0
	bhi		_0806d1a8
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0806d244
	cmp		r1, r0
	bhi		_0806d254
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0806d1d4
	b		_0806d560

.incbin "base.gba", 0x6D1A2, 0x2

_0806d1a4:	.4byte 0x00000A03

_0806d1a8:
	ldr		r0, _0806d1bc
	cmp		r1, r0
	bne		_0806d1b0
	b		_0806d2c8
_0806d1b0:
	cmp		r1, r0
	bhi		_0806d1c4
	ldr		r0, _0806d1c0
	cmp		r1, r0
	beq		_0806d2a0
	b		_0806d560

_0806d1bc:	.4byte 0x00000F82
_0806d1c0:	.4byte 0x00000A04

_0806d1c4:
	ldr		r0, _0806d1d0
	cmp		r1, r0
	bne		_0806d1cc
	b		_0806d404
_0806d1cc:
	b		_0806d560

.incbin "base.gba", 0x6D1CE, 0x2

_0806d1d0:	.4byte 0x00000F83

_0806d1d4:
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	ldr		r0, _0806d234
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0x1
	bl		sub_0800204c
	bl		sub_0800fd90
	ldr		r1, _0806d238
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x4
	ldr		r1, [r1, #0x0]
	add		r2, r1, r0
	ldr		r1, _0806d23c
	add		r0, r2, #0x0
	add		r0, #0x8
	str		r0, [r1, #0x4]
	add		r0, #0x4
	str		r0, [r1, #0x8]
	add		r0, r2, #0x6
	str		r0, [r1, #0xc]
	add		r0, #0x4
	str		r0, [r1, #0x10]
	ldr		r0, _0806d240
	ldr		r0, [r0, #0x0]
	add		r1, r2, #0x0
	bl		sub_0808b7e0
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0806d2bc
	add		r0, sp, #0x3c
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08002080
	add		r0, sp, #0x3c
	add		r1, r4, #0x0
	mov		r2, #0x1
	bl		sub_0800204c
	b		_0806d2bc

.incbin "base.gba", 0x6D232, 0x2

_0806d234:	.4byte 0x0200BB5C
_0806d238:	.4byte 0x0200D590
_0806d23c:	.4byte 0x02000B58
_0806d240:	.4byte 0x0200BF08

_0806d244:
	ldr		r0, _0806d250
	ldr		r0, [r0, #0x0]
	bl		sub_080714e4
	b		_0806d2bc

.incbin "base.gba", 0x6D24E, 0x2

_0806d250:	.4byte 0x0200D5C8

_0806d254:
	bl		sub_08073864
	cmp		r0, #0x0
	bne		_0806d268
	ldr		r0, _0806d278
	mov		r1, #0x86
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d268:
	bl		sub_08073864
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x4
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0806d2bc

_0806d278:	.4byte 0x080d3a94 @ h_asoh/scriptcmd10.cpp

_0806d27c:
	bl		sub_08073864
	cmp		r0, #0x0
	bne		_0806d290
	ldr		r0, _0806d29c
	mov		r1, #0x8f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d290:
	bl		sub_08073864
	bl		sub_080736cc
	b		_0806d2bc

.incbin "base.gba", 0x6D29A, 0x2

_0806d29c:	.4byte 0x080d3a94 @ h_asoh/scriptcmd10.cpp

_0806d2a0:
	bl		sub_08073864
	cmp		r0, #0x0
	bne		_0806d2b4
	ldr		r0, _0806d2c4
	mov		r1, #0x97
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d2b4:
	bl		sub_08073864
	bl		sub_080736ac
_0806d2bc:
	lsl		r0, r6, #0x2
	add		r0, r5, r0
	b		_0806d562

.incbin "base.gba", 0x6D2C2, 0x2

_0806d2c4:	.4byte 0x080d3a94 @ h_asoh/scriptcmd10.cpp

_0806d2c8:
	lsl		r0, r3, #0x10
	asr		r1, r0, #0x10
	ldr		r2, _0806d2ec
	add		r4, r0, #0x0
	cmp		r1, r2
	beq		_0806d34c
	cmp		r1, r2
	bgt		_0806d2f4
	ldr		r0, _0806d2f0
	cmp		r1, r0
	beq		_0806d32c
	cmp		r1, r0
	bgt		_0806d33c
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0806d31c
	b		_0806d378

.incbin "base.gba", 0x6D2EA, 0x2

_0806d2ec:	.4byte 0x00001803
_0806d2f0:	.4byte 0x00001801

_0806d2f4:
	ldr		r0, _0806d308
	cmp		r1, r0
	beq		_0806d30c
	cmp		r1, r0
	blt		_0806d370
	add		r0, #0x50
	cmp		r1, r0
	beq		_0806d35c
	b		_0806d378

.incbin "base.gba", 0x6D306, 0x2

_0806d308:	.4byte 0x00001805

_0806d30c:
	ldr		r0, _0806d318
	ldr		r0, [r0, #0x8]
	bl		sub_0806fc50
	b		_0806d378

.incbin "base.gba", 0x6D316, 0x2

_0806d318:	.4byte 0x0200BEFC

_0806d31c:
	ldr		r0, _0806d328
	ldr		r0, [r0, #0x8]
	bl		sub_08070688
	b		_0806d378

.incbin "base.gba", 0x6D326, 0x2

_0806d328:	.4byte 0x0200BEFC

_0806d32c:
	ldr		r0, _0806d338
	ldr		r0, [r0, #0x8]
	bl		sub_0807067c
	b		_0806d378

.incbin "base.gba", 0x6D336, 0x2

_0806d338:	.4byte 0x0200BEFC

_0806d33c:
	ldr		r0, _0806d348
	ldr		r0, [r0, #0x8]
	bl		sub_080715f8
	b		_0806d378

.incbin "base.gba", 0x6D346, 0x2

_0806d348:	.4byte 0x0200BEFC

_0806d34c:
	ldr		r0, _0806d358
	ldr		r0, [r0, #0x8]
	bl		sub_080715ec
	b		_0806d378

.incbin "base.gba", 0x6D356, 0x2

_0806d358:	.4byte 0x0200BEFC

_0806d35c:
	ldr		r0, _0806d368
	ldr		r1, [r0, #0x0]
	ldr		r0, _0806d36c
	ldr		r0, [r0, #0x8]
	str		r0, [r1, #0x0]
	b		_0806d378

_0806d368:	.4byte 0x0200D590
_0806d36c:	.4byte 0x0200BEFC

_0806d370:
	ldr		r0, _0806d394
	ldr		r0, [r0, #0x8]
	bl		sub_0807388c
_0806d378:
	asr		r1, r4, #0x10
	ldr		r2, _0806d398
	add		r0, r4, r2
	lsr		r0, r0, #0x10
	cmp		r0, #0x3e
	bhi		_0806d3a0
	ldr		r2, _0806d39c
	add		r0, r1, r2
	ldr		r1, _0806d394
	ldr		r1, [r1, #0x8]
	bl		sub_0806fc90
	b		_0806d54c

.incbin "base.gba", 0x6D392, 0x2

_0806d394:	.4byte 0x0200BEFC
_0806d398:	.4byte 0xE7FA0000
_0806d39c:	.4byte 0xFFFFE7FA

_0806d3a0:
	ldr		r2, _0806d3b8
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x5
	bhi		_0806d3c0
	add		r0, r1, r2
	ldr		r1, _0806d3bc
	ldr		r1, [r1, #0x8]
	bl		sub_0806fc5c
	b		_0806d54c

_0806d3b8:	.4byte 0xFFFFE7BB
_0806d3bc:	.4byte 0x0200BEFC

_0806d3c0:
	ldr		r2, _0806d3d8
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x4
	bhi		_0806d3e0
	add		r0, r1, r2
	ldr		r1, _0806d3dc
	ldr		r1, [r1, #0x8]
	bl		sub_0806fcf4
	b		_0806d54c

_0806d3d8:	.4byte 0xFFFFE7B5
_0806d3dc:	.4byte 0x0200BEFC

_0806d3e0:
	ldr		r2, _0806d3fc
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x4
	bls		_0806d3ee
	b		_0806d54c
_0806d3ee:
	add		r0, r1, r2
	ldr		r1, _0806d400
	ldr		r1, [r1, #0x8]
	bl		sub_0806fcc0
	b		_0806d54c

.incbin "base.gba", 0x6D3FA, 0x2

_0806d3fc:	.4byte 0xFFFFE7B0
_0806d400:	.4byte 0x0200BEFC

_0806d404:
	lsl		r0, r3, #0x10
	mov		r1, #0xd8
	lsl		r1, r1, #0x18
	add		r0, r0, r1
	asr		r0, r0, #0x10
	cmp		r0, #0x6
	bls		_0806d414
	b		_0806d54c
_0806d414:
	lsl		r0, r0, #0x2
	ldr		r1, _0806d420
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x6D41E, 0x2

_0806d420:	.4byte 0x0806d424
_0806d424:	.4byte 0x0806d440

.incbin "base.gba", 0x6D428, 0x18
	thumb_func_end sub_0806d178


.incbin "base.gba", 0x6D440, 0x10C

_0806d54c:

.incbin "base.gba", 0x6D54C, 0x14
_0806d560:

.incbin "base.gba", 0x6D560, 0x2
_0806d562:

.incbin "base.gba", 0x6D562, 0x1E
_0806d580:	.4byte 0x0200BB5C
_0806d584:	.4byte 0x080d3aac @ s_scrALoadShopItem
	thumb_func_start sub_0806d588
sub_0806d588:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r2, #0x0
	add		r4, r3, #0x0
	ldr		r0, _0806d5c0
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0806d5a6
	ldr		r0, _0806d5c4
	mov		r1, #0xa6
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d5a6:
	bl		sub_0800fd20
	ldr		r1, _0806d5c8
	add		r1, #0xd4
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	sub		r1, r1, r0
	cmp		r1, #0x0
	blt		_0806d5cc
	add		r0, r4, #0x0
	bl		sub_08002268
	b		_0806d5d2

_0806d5c0:	.4byte 0x0200D590
_0806d5c4:	.4byte 0x080d3a94 @ h_asoh/scriptcmd10.cpp
_0806d5c8:	.4byte 0x02000BAC

_0806d5cc:
	add		r0, r4, #0x0
	bl		sub_0800223c
_0806d5d2:
	lsl		r0, r5, #0x2
	add		r0, r6, r0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806d588

	thumb_func_start sub_0806d5dc
sub_0806d5dc:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x18
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	str		r2, [sp, #0x4]
	ldr		r1, [r6, #0x20]
	ldr		r0, [sp, #0x0]
	cmp		r1, r0
	bgt		_0806d5f0
	str		r1, [sp, #0x0]
_0806d5f0:
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	bge		_0806d5fa
	mov		r0, #0x0
	str		r0, [sp, #0x0]
_0806d5fa:
	ldr		r1, [r6, #0x24]
	ldr		r0, [sp, #0x4]
	cmp		r1, r0
	bgt		_0806d604
	str		r1, [sp, #0x4]
_0806d604:
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	bge		_0806d60e
	mov		r0, #0x0
	str		r0, [sp, #0x4]
_0806d60e:
	mov		r2, #0x0
	ldr		r1, [r6, #0x4]
	ldr		r0, [r6, #0x0]
	cmp		r1, r0
	bne		_0806d61a
	mov		r2, #0x1
_0806d61a:
	cmp		r2, #0x1
	bne		_0806d636
	add		r0, r6, #0x0
	add		r0, #0x8
	add		r4, r6, #0x0
	add		r4, #0x10
	add		r1, r4, #0x0
	bl		sub_0806dd4c
	add		r0, r4, #0x0
	mov		r1, sp
	bl		sub_0806dd4c
	b		_0806d660
_0806d636:
	add		r0, r6, #0x0
	bl		sub_080c3574
	add		r5, r0, #0x0
	add		r0, r6, #0x0
	bl		sub_080c3558
	add		r2, r0, #0x0
	add		r4, sp, #0x8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080c3590
	ldr		r0, [sp, #0x8]
	ldr		r1, [r4, #0x4]
	str		r0, [r6, #0x8]
	str		r1, [r6, #0xc]
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	str		r0, [r6, #0x10]
	str		r1, [r6, #0x14]
_0806d660:
	add		r0, r6, #0x0
	bl		sub_080c3574
	add		r5, r0, #0x0
	add		r0, r6, #0x0
	bl		sub_080c3558
	add		r2, r0, #0x0
	add		r4, sp, #0x10
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080c3590
	ldr		r0, [sp, #0x10]
	ldr		r1, [r4, #0x4]
	str		r0, [r6, #0x18]
	str		r1, [r6, #0x1c]
	add		sp, #0x18
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6D68A, 0x2
	thumb_func_end sub_0806d5dc

	thumb_func_start sub_0806d68c
sub_0806d68c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0806d6a4
	ldr		r0, _0806d708
	ldr		r1, _0806d70c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d6a4:
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	add		r0, #0xa8
	add		r1, r4, #0x0
	add		r1, #0x9c
	ldr		r5, [r0, #0x0]
	ldr		r2, [r1, #0x0]
	sub		r1, r5, r2
	sub		r0, #0x8
	ldr		r3, [r0, #0x0]
	mov		r7, #0x0
	add		r6, r0, #0x0
	cmp		r1, r3
	bgt		_0806d6f0
	add		r0, #0x10
	ldr		r0, [r0, #0x0]
	add		r0, r5, r0
	add		r0, r0, r2
	cmp		r0, r3
	ble		_0806d6f0
	add		r0, r4, #0x0
	add		r0, #0xac
	ldr		r5, [r0, #0x0]
	sub		r1, r5, r2
	sub		r0, #0x8
	ldr		r3, [r0, #0x0]
	cmp		r1, r3
	bgt		_0806d6f0
	add		r0, #0x10
	ldr		r0, [r0, #0x0]
	add		r0, r5, r0
	add		r0, r0, r2
	cmp		r0, r3
	ble		_0806d6f0
	mov		r7, #0x1
_0806d6f0:
	cmp		r7, #0x1
	bne		_0806d702
	ldr		r1, [r6, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xa4
	ldr		r2, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e4e8
_0806d702:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806d708:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp
_0806d70c:	.4byte 0x00000165
	thumb_func_end sub_0806d68c

	thumb_func_start sub_0806d710
sub_0806d710:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0806d72c
	ldr		r0, _0806d748
	ldr		r1, _0806d74c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d72c:
	add		r1, r4, #0x0
	add		r1, #0x94
	ldr		r0, [r1, #0x0]
	cmp		r0, r5
	beq		_0806d742
	str		r5, [r1, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_0808e3c0
_0806d742:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0806d748:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp
_0806d74c:	.4byte 0x00000177
	thumb_func_end sub_0806d710

	thumb_func_start sub_0806d750
sub_0806d750:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r4, #0x90
	ldr		r0, [r4, #0x0]
	cmp		r0, r1
	beq		_0806d776
	str		r1, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x98
	mov		r1, #0x1
	str		r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0808e278
	ldr		r1, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_0808e03c
_0806d776:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0806d750

	thumb_func_start sub_0806d77c
sub_0806d77c:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	add		r0, #0xa8
	add		r1, r2, #0x0
	add		r1, #0x9c
	ldr		r5, [r0, #0x0]
	ldr		r3, [r1, #0x0]
	sub		r1, r5, r3
	sub		r0, #0x8
	ldr		r4, [r0, #0x0]
	cmp		r1, r4
	bgt		_0806d7c0
	add		r0, #0x10
	ldr		r0, [r0, #0x0]
	add		r0, r5, r0
	add		r0, r0, r3
	cmp		r0, r4
	ble		_0806d7c0
	add		r0, r2, #0x0
	add		r0, #0xac
	ldr		r5, [r0, #0x0]
	sub		r1, r5, r3
	sub		r0, #0x8
	ldr		r4, [r0, #0x0]
	cmp		r1, r4
	bgt		_0806d7c0
	add		r0, #0x10
	ldr		r0, [r0, #0x0]
	add		r0, r5, r0
	add		r0, r0, r3
	cmp		r0, r4
	ble		_0806d7c0
	mov		r0, #0x1
	b		_0806d7c2
_0806d7c0:
	mov		r0, #0x0
_0806d7c2:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806d77c

	thumb_func_start sub_0806d7c8
sub_0806d7c8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0806d7e0
	ldr		r0, _0806d814
	ldr		r1, _0806d818
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d7e0:
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0806d77c
	cmp		r0, #0x1
	bne		_0806d80c
	add		r0, r4, #0x0
	add		r0, #0xa0
	ldr		r1, [r0, #0x0]
	sub		r0, #0x4c
	strh	r1, [r0, #0x0]
	add		r0, #0x50
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0806d80c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6D812, 0x2

_0806d814:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp
_0806d818:	.4byte 0x00000151
	thumb_func_end sub_0806d7c8

	thumb_func_start sub_0806d81c
sub_0806d81c:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	bl		sub_0808e21c
	add		r0, r7, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r4, #0x0
	str		r4, [r7, #0x6c]
	add		r0, r7, #0x0
	add		r0, #0xa0
	bl		sub_080c3598
	add		r5, r7, #0x0
	add		r5, #0xa8
	add		r0, r5, #0x0
	bl		sub_080c3598
	add		r6, r7, #0x0
	add		r6, #0xb0
	add		r0, r6, #0x0
	bl		sub_080c3598
	add		r0, r7, #0x0
	add		r0, #0x98
	str		r4, [r0, #0x0]
	sub		r0, #0x8
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0xe
	add		r0, #0x8
	str		r1, [r0, #0x0]
	str		r4, [r5, #0x0]
	add		r0, #0x10
	str		r4, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x10
	mov		r1, #0xa0
	lsl		r1, r1, #0x10
	str		r0, [r6, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xb4
	str		r1, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806d81c

	thumb_func_start sub_0806d884
sub_0806d884:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806d89c
	ldr		r0, _0806d8b0
	mov		r1, #0x9d
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d89c:
	ldr		r0, [r4, #0x0]
	mov		r1, #0x97
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6D8AE, 0x2

_0806d8b0:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp
	thumb_func_end sub_0806d884

	thumb_func_start sub_0806d8b4
sub_0806d8b4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806d8ce
	ldr		r0, _0806d8ec
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d8ce:
	ldr		r1, [r4, #0x0]
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_0806d8da
	add		r0, r1, #0x0
	add		r0, #0x88
_0806d8da:
	add		r0, #0x5c
	strh	r5, [r0, #0x0]
	mov		r2, #0x97
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	strh	r5, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0806d8ec:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp
	thumb_func_end sub_0806d8b4

	thumb_func_start sub_0806d8f0
sub_0806d8f0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806d90a
	ldr		r0, _0806d920
	mov		r1, #0x97
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806d90a:
	ldr		r1, [r4, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xf1
	strb	r5, [r0, #0x0]
	ldr		r2, _0806d924
	add		r0, r1, r2
	strb	r5, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6D91E, 0x2

_0806d920:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp
_0806d924:	.4byte 0x0000013B
	thumb_func_end sub_0806d8f0

	thumb_func_start sub_0806d928
sub_0806d928:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806d946
	ldr		r0, _0806d94c
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0806d950
_0806d946:
	ldr		r0, [r4, #0x0]
	add		r0, #0x88
	b		_0806d952

_0806d94c:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp

_0806d950:
	mov		r0, #0x0
_0806d952:
	add		r0, #0x84
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6D95E, 0x96
	thumb_func_end sub_0806d928

	thumb_func_start sub_0806d9f4
sub_0806d9f4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806da0e
	ldr		r0, _0806da2c
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806da0e:
	ldr		r1, [r4, #0x0]
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, r5
	beq		_0806da26
	add		r0, r1, #0x0
	add		r1, r5, #0x0
	bl		sub_0800bdbc
_0806da26:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0806da2c:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp
	thumb_func_end sub_0806d9f4

	thumb_func_start sub_0806da30
sub_0806da30:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r5, #0x80
	lsl		r5, r5, #0x9
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0806da48
	mov		r5, #0xa0
	lsl		r5, r5, #0xc
_0806da48:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0806da5a
	ldr		r0, [r4, #0x8]
	sub		r0, r0, r5
	b		_0806da6a
_0806da5a:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0806da6c
	ldr		r0, [r4, #0x8]
	add		r0, r0, r5
_0806da6a:
	str		r0, [r4, #0x8]
_0806da6c:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0806da7e
	ldr		r0, [r4, #0x4]
	sub		r0, r0, r5
	b		_0806da8e
_0806da7e:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_08001884
	cmp		r0, #0x0
	beq		_0806da90
	ldr		r0, [r4, #0x4]
	add		r0, r0, r5
_0806da8e:
	str		r0, [r4, #0x4]
_0806da90:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6DA96, 0xE
	thumb_func_end sub_0806da30

	thumb_func_start sub_0806daa4
sub_0806daa4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0806dac8
	str		r0, [r4, #0x14]
	add		r0, r4, #0x4
	bl		sub_080c3598
	add		r0, r4, #0x0
	add		r0, #0xc
	bl		sub_080c3598
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6DAC6, 0x2

_0806dac8:	.4byte 0x080e22ac
	thumb_func_end sub_0806daa4

	thumb_func_start sub_0806dacc
sub_0806dacc:
	push	{ r4, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldr		r1, [r2, #0x0]
	ldr		r0, [r3, #0x18]
	sub		r1, r1, r0
	ldr		r2, [r2, #0x4]
	ldr		r0, [r3, #0x1c]
	sub		r2, r2, r0
	mov		r0, sp
	bl		sub_080c3590
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	str		r0, [r4, #0x0]
	str		r1, [r4, #0x4]
	add		r0, r4, #0x0
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r2 }
	bx		r2
	thumb_func_end sub_0806dacc

	thumb_func_start sub_0806daf8
sub_0806daf8:
	push	{ r4, r5, lr }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x4]
	ldr		r1, [r5, #0x0]
	cmp		r0, r1
	ble		_0806db0a
	add		r0, r1, #0x1
	str		r0, [r5, #0x0]
_0806db0a:
	add		r0, r5, #0x0
	bl		sub_080c3574
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_080c3558
	add		r2, r0, #0x0
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080c3590
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	str		r0, [r5, #0x18]
	str		r1, [r5, #0x1c]
	add		sp, #0x8
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6DB32, 0x3A
	thumb_func_end sub_0806daf8

	thumb_func_start sub_0806db6c
sub_0806db6c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r4, #0x4]
	cmp		r0, r5
	ble		_0806db80
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0806db8c
_0806db80:
	ldr		r0, _0806dba0
	mov		r1, #0xb0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806db8c:
	lsl		r1, r5, #0x3
	ldr		r0, [r4, #0x0]
	add		r1, r1, r0
	ldr		r0, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	str		r0, [r1, #0x0]
	str		r2, [r1, #0x4]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0806dba0:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp
	thumb_func_end sub_0806db6c

	thumb_func_start sub_0806dba4
sub_0806dba4:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	lsl		r2, r2, #0x3
	ldr		r0, [r4, #0x0]
	add		r5, r0, r2
	mov		r0, sp
	bl		sub_080c3598
	ldr		r2, [r4, #0x8]
	cmp		r2, #0x0
	ble		_0806dbcc
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x10]
	mul		r0, r1
	add		r1, r2, #0x0
	bl		sub_080bbcac
	b		_0806dbce
_0806dbcc:
	mov		r0, #0x0
_0806dbce:
	str		r0, [sp, #0x0]
	ldr		r2, [r4, #0xc]
	cmp		r2, #0x0
	ble		_0806dbe4
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x14]
	mul		r0, r1
	add		r1, r2, #0x0
	bl		sub_080bbcac
	b		_0806dbe6
_0806dbe4:
	mov		r0, #0x0
_0806dbe6:
	str		r0, [sp, #0x4]
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	str		r0, [r6, #0x0]
	str		r1, [r6, #0x4]
	add		r0, r6, #0x0
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r2 }
	bx		r2

.incbin "base.gba", 0x6DBFA, 0x2
	thumb_func_end sub_0806dba4

	thumb_func_start sub_0806dbfc
sub_0806dbfc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_0806dc14
	bl		sub_0808afd0
	mov		r0, #0x0
	str		r0, [r6, #0x0]
_0806dc14:
	str		r4, [r6, #0x4]
	lsl		r0, r4, #0x3
	bl		sub_0808afb8
	add		r7, r0, #0x0
	add		r5, r7, #0x0
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_0806dc3a
	mov		r8, r0
_0806dc2c:
	add		r0, r5, #0x0
	bl		sub_080c3598
	add		r5, #0x8
	sub		r4, #0x1
	cmp		r4, r8
	bne		_0806dc2c
_0806dc3a:
	str		r7, [r6, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6DC46, 0x42
	thumb_func_end sub_0806dbfc

	thumb_func_start sub_0806dc88
sub_0806dc88:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x8
	bl		sub_080c3598
	add		r0, r4, #0x0
	add		r0, #0x10
	bl		sub_080c3598
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6DCA6, 0x22
	thumb_func_end sub_0806dc88

	thumb_func_start sub_0806dcc8
sub_0806dcc8:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, [r1, #0x4]
	ldr		r2, [r1, #0x0]
	cmp		r0, r2
	ble		_0806dcd8
	add		r0, r2, #0x1
	str		r0, [r1, #0x0]
_0806dcd8:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0806dcc8

	thumb_func_start sub_0806dcdc
sub_0806dcdc:
	push	{ lr }
	ldr		r2, [r0, #0x4]
	cmp		r2, r1
	bge		_0806dce6
	add		r1, r2, #0x0
_0806dce6:
	str		r1, [r0, #0x0]
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0806dcdc

	thumb_func_start sub_0806dcec
sub_0806dcec:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x0
	bne		_0806dd02
	ldr		r0, _0806dd10
	mov		r1, #0x64
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806dd02:
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	str		r4, [r5, #0x4]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6DD0E, 0x2

_0806dd10:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp

.incbin "base.gba", 0x6DD14, 0x24
	thumb_func_end sub_0806dcec

	thumb_func_start sub_0806dd38
sub_0806dd38:
	ldr		r2, [r0, #0x0]
	ldr		r3, [r1, #0x0]
	add		r2, r2, r3
	str		r2, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	ldr		r1, [r1, #0x4]
	add		r2, r2, r1
	str		r2, [r0, #0x4]
	bx		lr

.incbin "base.gba", 0x6DD4A, 0x2
	thumb_func_end sub_0806dd38

	thumb_func_start sub_0806dd4c
sub_0806dd4c:
	ldr		r2, [r1, #0x0]
	ldr		r1, [r1, #0x4]
	str		r2, [r0, #0x0]
	str		r1, [r0, #0x4]
	bx		lr

.incbin "base.gba", 0x6DD56, 0x2
	thumb_func_end sub_0806dd4c

	thumb_func_start sub_0806dd58
sub_0806dd58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	bl		sub_0800d74c
	add		r7, r0, #0x0
	ldr		r0, _0806ddc4
	add		r1, r4, #0x0
	bl		sub_0800ed80
	add		r4, r0, #0x0
	ldr		r1, [r4, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	mov		r5, #0x0
	ldrb	r0, [r7, #0x0]
	cmp		r5, r0
	bge		_0806ddb8
_0806dd8a:
	mov		r0, r8
	add		r1, r5, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldr		r3, [r6, #0x0]
	ldr		r0, [r6, #0x4]
	add		r0, r5, r0
	ldrb	r2, [r1, #0x0]
	lsl		r3, r3, #0x3
	lsl		r0, r0, #0x4
	add		r0, #0xc
	add		r1, #0x1
	strh	r3, [r4, #0x28]
	strh	r0, [r4, #0x2a]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r5, #0x1
	ldrb	r2, [r7, #0x0]
	cmp		r5, r2
	blt		_0806dd8a
_0806ddb8:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6DDC2, 0x2

_0806ddc4:	.4byte 0x0200AA18
	thumb_func_end sub_0806dd58

	thumb_func_start sub_0806ddc8
sub_0806ddc8:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0806dde4
	bl		sub_0800ed80
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	pop		{ r0 }
	bx		r0

_0806dde4:	.4byte 0x0200AA18
	thumb_func_end sub_0806ddc8

	thumb_func_start sub_0806dde8
sub_0806dde8:
	push	{ lr }
	add		r3, r0, #0x0
	sub		r1, #0x1
	cmp		r1, #0x0
	blt		_0806de08
	lsl		r0, r1, #0x2
	add		r3, r0, r3
_0806ddf6:
	ldr		r0, [r3, #0x0]
	cmp		r0, r2
	bgt		_0806de00
	add		r0, r1, #0x0
	b		_0806de0c
_0806de00:
	sub		r3, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0806ddf6
_0806de08:
	mov		r0, #0x1
	neg		r0, r0
_0806de0c:
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806dde8

	thumb_func_start sub_0806de10
sub_0806de10:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r1, #0x0
	mov		r4, #0x0
	cmp		r4, r6
	bge		_0806de42
	mov		r7, #0x1
	neg		r7, r7
	add		r5, r0, #0x0
_0806de20:
	ldr		r0, [r5, #0x0]
	cmp		r0, r7
	bne		_0806de2a
	add		r0, r4, #0x0
	b		_0806de46
_0806de2a:
	cmp		r6, r4
	bgt		_0806de3a
	ldr		r0, _0806de4c
	mov		r1, #0x16
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806de3a:
	add		r5, #0x4
	add		r4, #0x1
	cmp		r4, r6
	blt		_0806de20
_0806de42:
	mov		r0, #0x1
	neg		r0, r0
_0806de46:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806de4c:	.4byte 0x080d3ac0 @ h_asoh/etc.cpp

.incbin "base.gba", 0x6DE50, 0xC
	thumb_func_end sub_0806de10

	thumb_func_start sub_0806de5c
sub_0806de5c:
	push	{ lr }
	add		r1, r0, #0x0
	add		r0, r1, #0x4
	add		r1, #0xc
	bl		sub_0806dd38
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0806de5c

	thumb_func_start sub_0806de6c
sub_0806de6c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x4]
	cmp		r0, #0x4
	bhi		_0806df26
	lsl		r0, r0, #0x2
	ldr		r1, _0806de80
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0806de80:	.4byte 0x0806de84
_0806de84:	.4byte 0x0806df26

.incbin "base.gba", 0x6DE88, 0x10
	thumb_func_end sub_0806de6c


.incbin "base.gba", 0x6DE98, 0x8E

_0806df26:

.incbin "base.gba", 0x6DF26, 0x6
	thumb_func_start sub_0806df2c
sub_0806df2c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	bl		sub_0806de6c
	add		r0, r6, #0x0
	bl		sub_080c35a4
	cmp		r0, #0x1
	bne		_0806df48
	ldr		r0, [r6, #0x0]
	bl		sub_0809668c
	add		r2, r0, #0x0
	b		_0806df4a
_0806df48:
	mov		r2, #0x0
_0806df4a:
	ldr		r1, [r6, #0x3c]
	cmp		r1, r2
	bgt		_0806df62
	ldr		r0, [r6, #0x2c]
	ldr		r4, [r0, #0x8]
	sub		r2, r2, r4
	sub		r1, r1, r4
	add		r0, r2, #0x0
	bl		sub_080bbd44
	add		r2, r0, #0x0
	add		r2, r2, r4
_0806df62:
	str		r2, [r6, #0x40]
	mov		r1, #0x0
	ldr		r0, [r6, #0x4]
	sub		r0, #0x3
	cmp		r0, #0x1
	bhi		_0806df70
	mov		r1, #0x1
_0806df70:
	cmp		r1, #0x1
	bne		_0806e050
	ldr		r4, [r6, #0x2c]
	ldr		r5, [r6, #0x30]
	add		r0, r6, #0x0
	bl		sub_080c35a0
	add		r2, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0806dde8
	add		r2, r0, #0x0
	ldr		r0, [r6, #0x44]
	cmp		r0, r2
	beq		_0806dfb8
	str		r2, [r6, #0x44]
	ldr		r0, [r6, #0x48]
	add		r0, #0x1
	str		r0, [r6, #0x48]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r6, #0x4c]
	mov		r0, #0x0
	str		r0, [r6, #0x50]
	ldr		r2, [r6, #0x24]
	cmp		r2, #0x0
	beq		_0806dfb8
	ldr		r1, [r2, #0x0]
	mov		r3, #0x8
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0xc]
	add		r1, r6, #0x0
	bl		sub_080bbc78
_0806dfb8:
	ldr		r4, [r6, #0x34]
	ldr		r5, [r6, #0x38]
	add		r0, r6, #0x0
	bl		sub_080c35a0
	add		r2, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0806dde8
	add		r2, r0, #0x0
	ldr		r0, [r6, #0x4c]
	cmp		r0, r2
	beq		_0806dfdc
	str		r2, [r6, #0x4c]
	ldr		r0, [r6, #0x50]
	add		r0, #0x1
	str		r0, [r6, #0x50]
_0806dfdc:
	add		r0, r6, #0x0
	bl		sub_0806e0b8
	add		r2, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_0806e02c
	ldr		r0, [r6, #0x5c]
	cmp		r0, r2
	beq		_0806e050
	ldr		r0, [r6, #0x3c]
	cmp		r0, r2
	ble		_0806e050
	mov		r0, #0x1
	str		r0, [r6, #0x54]
	str		r2, [r6, #0x5c]
	add		r0, r6, #0x0
	bl		sub_080c35a4
	cmp		r0, #0x1
	bne		_0806e010
	ldr		r0, [r6, #0x0]
	bl		sub_0809668c
	b		_0806e012
_0806e010:
	mov		r0, #0x0
_0806e012:
	str		r0, [r6, #0x58]
	ldr		r2, [r6, #0x24]
	cmp		r2, #0x0
	beq		_0806e050
	ldr		r1, [r2, #0x0]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	add		r1, r6, #0x0
	bl		sub_080bbc78
	b		_0806e050
_0806e02c:
	ldr		r0, [r6, #0x54]
	cmp		r0, #0x1
	bne		_0806e050
	mov		r0, #0x0
	str		r0, [r6, #0x54]
	str		r2, [r6, #0x5c]
	str		r2, [r6, #0x58]
	ldr		r2, [r6, #0x24]
	cmp		r2, #0x0
	beq		_0806e050
	ldr		r1, [r2, #0x0]
	mov		r3, #0x18
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x1c]
	add		r1, r6, #0x0
	bl		sub_080bbc78
_0806e050:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6E056, 0x2
	thumb_func_end sub_0806df2c

	thumb_func_start sub_0806e058
sub_0806e058:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	ldr		r0, [r7, #0x28]
	ldr		r0, [r0, #0x4]
	cmp		r0, r6
	blt		_0806e072
	cmp		r6, #0x0
	bge		_0806e07e
_0806e072:
	ldr		r0, _0806e0b4
	mov		r1, #0xc1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806e07e:
	mov		r0, r8
	ldr		r4, [r0, #0x4]
	ldr		r0, [r7, #0x28]
	ldr		r1, [r0, #0x4]
	lsl		r0, r4, #0x1
	mul		r0, r6
	bl		sub_080bbcac
	sub		r0, r0, r4
	add		r5, r5, r0
	mov		r1, r8
	ldr		r0, [r1, #0xc]
	cmp		r0, r5
	ble		_0806e09c
	add		r5, r0, #0x0
_0806e09c:
	mov		r0, r8
	ldr		r3, [r0, #0x8]
	cmp		r3, r5
	bge		_0806e0a6
	add		r5, r3, #0x0
_0806e0a6:
	add		r0, r5, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6E0B2, 0x2

_0806e0b4:	.4byte 0x080d3b20 @ h_asoh/sound.cpp
	thumb_func_end sub_0806e058

	thumb_func_start sub_0806e0b8
sub_0806e0b8:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x40]
	ldr		r1, [r2, #0x28]
	ldr		r1, [r1, #0x1c]
	sub		r6, r0, r1
	add		r5, r0, r1
	mov		r3, #0x0
	ldr		r1, [r2, #0x38]
	cmp		r3, r1
	bge		_0806e0e4
	add		r4, r1, #0x0
	ldr		r1, [r2, #0x34]
_0806e0d2:
	ldr		r0, [r1, #0x0]
	cmp		r5, r0
	ble		_0806e0dc
	cmp		r6, r0
	ble		_0806e0e8
_0806e0dc:
	add		r1, #0x4
	add		r3, #0x1
	cmp		r3, r4
	blt		_0806e0d2
_0806e0e4:
	mov		r0, #0x1
	neg		r0, r0
_0806e0e8:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6E0EE, 0x2
	thumb_func_end sub_0806e0b8

	thumb_func_start sub_0806e0f0
sub_0806e0f0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, r2, #0x0
	add		r5, r3, #0x0
	str		r1, [r4, #0x28]
	str		r0, [r4, #0x2c]
	mov		r1, #0xc8
	bl		sub_0806de10
	str		r0, [r4, #0x30]
	str		r5, [r4, #0x34]
	add		r0, r5, #0x0
	mov		r1, #0xc8
	bl		sub_0806de10
	str		r0, [r4, #0x38]
	ldr		r1, [r4, #0x34]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	sub		r0, #0x4
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x3c]
	ldr		r0, [r4, #0x28]
	ldr		r5, [r0, #0x0]
	ldr		r1, [r0, #0xc]
	add		r0, r4, #0x0
	bl		sub_080c35b8
	str		r5, [r4, #0x8]
	mov		r0, #0x1
	str		r0, [r4, #0x4]
	ldr		r0, [r4, #0x0]
	bl		sub_080964e4
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r4, #0x44]
	mov		r0, #0x0
	str		r0, [r4, #0x48]
	str		r1, [r4, #0x4c]
	str		r0, [r4, #0x50]
	str		r0, [r4, #0x40]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6E14A, 0x2
	thumb_func_end sub_0806e0f0

	thumb_func_start sub_0806e14c
sub_0806e14c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	str		r1, [r4, #0x18]
	lsl		r2, r1, #0x2
	add		r2, r2, r1
	lsl		r0, r2, #0x4
	sub		r0, r0, r2
	ldr		r1, [r4, #0x14]
	bl		sub_080bbcac
	ldr		r2, [r4, #0x0]
	mov		r1, #0x96
	sub		r1, r1, r0
	add		r0, r2, #0x0
	bl		sub_08096570
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6E172, 0x2E6
	thumb_func_end sub_0806e14c

	thumb_func_start sub_0806e458
sub_0806e458:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r0, #0x4c
	ldr		r3, _0806e4dc
	lsl		r2, r1, #0x5
	add		r2, #0x2c
	ldr		r4, [r3, #0x0]
	add		r4, r4, r2
	lsl		r1, r1, #0x2
	mov		r6, #0x8c
	lsl		r6, r6, #0x1
	add		r2, r3, r6
	add		r2, r1, r2
	ldr		r2, [r2, #0x0]
	add		r6, #0x14
	add		r3, r3, r6
	add		r1, r1, r3
	ldr		r3, [r1, #0x0]
	add		r1, r4, #0x0
	bl		sub_0806e0f0
	add		r1, r5, #0x0
	add		r1, #0xb4
	ldr		r0, [r5, #0x40]
	ldr		r0, [r0, #0x18]
	str		r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	mov		r1, #0x64
	bl		sub_080bbcac
	mov		r2, #0x0
	str		r0, [r5, #0xc]
	str		r2, [r5, #0x10]
	add		r1, r5, #0x0
	add		r1, #0xb0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xac
	str		r2, [r0, #0x0]
	add		r0, #0xc
	add		r1, #0x1c
	ldr		r2, [r1, #0x0]
	mov		r3, #0x10
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r2, [r2, #0x14]
	mov		r1, #0x1
	bl		sub_080bbc78
	add		r0, r5, #0x0
	add		r0, #0xd0
	add		r1, r5, #0x0
	add		r1, #0xe4
	ldr		r2, [r1, #0x0]
	mov		r6, #0x10
	ldrsh	r1, [r2, r6]
	add		r0, r0, r1
	ldr		r2, [r2, #0x14]
	mov		r1, #0x1
	bl		sub_080bbc78
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0806e4dc:	.4byte 0x0200BB60
	thumb_func_end sub_0806e458

	thumb_func_start sub_0806e4e0
sub_0806e4e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, [r7, #0x48]
	cmp		r0, #0x3
	ble		_0806e57e
	ldr		r0, [r5, #0x48]
	cmp		r0, #0x7
	bne		_0806e57e
	mov		r0, #0x0
	mov		r8, r0
	ldr		r0, [r7, #0x28]
	ldr		r1, [r0, #0x4]
	add		r6, r5, #0x0
	add		r6, #0xac
	ldr		r0, [r6, #0x0]
	cmp		r1, r0
	bge		_0806e50e
	str		r1, [r6, #0x0]
	mov		r2, #0x1
	mov		r8, r2
_0806e50e:
	add		r0, r5, #0x0
	add		r0, #0x4c
	add		r4, r5, #0x0
	add		r4, #0xb4
	ldr		r1, [r4, #0x0]
	ldr		r2, [r6, #0x0]
	ldr		r3, [r5, #0x40]
	add		r3, #0x18
	bl		sub_0806e058
	str		r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	mov		r1, #0x64
	bl		sub_080bbcac
	mov		r1, #0x0
	str		r0, [r5, #0xc]
	str		r1, [r5, #0x10]
	ldr		r2, [r6, #0x0]
	ldr		r1, [r7, #0x18]
	ldr		r3, [r7, #0x28]
	add		r3, #0xc
	add		r0, r7, #0x0
	bl		sub_0806e058
	add		r1, r0, #0x0
	add		r0, r7, #0x0
	bl		sub_0806e14c
	mov		r0, r8
	str		r0, [r6, #0x0]
	ldr		r0, [r5, #0x40]
	add		r0, #0x30
	ldr		r2, [r4, #0x0]
	mov		r1, #0x3
	bl		sub_0806dde8
	mov		r8, r0
	cmp		r0, #0x5
	bls		_0806e56a
	ldr		r0, _0806e588
	ldr		r1, _0806e58c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806e56a:
	ldr		r0, [r5, #0x40]
	mov		r2, r8
	lsl		r1, r2, #0x1
	add		r0, #0x28
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r5, #0x0
	bl		sub_0806d9f4
_0806e57e:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806e588:	.4byte 0x080d3bcc @ h_asoh/g16.cpp
_0806e58c:	.4byte 0x00000165
	thumb_func_end sub_0806e4e0

	thumb_func_start sub_0806e590
sub_0806e590:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0806e5e8
	add		r0, r6, #0x0
	add		r0, #0xec
	ldr		r7, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r7, #0x0
	bne		_0806e5f4
	mov		r0, #0xb8
	bl		sub_0808af94
	bl		sub_0806d81c
	add		r4, r0, #0x0
	str		r4, [r5, #0x0]
	mov		r1, #0x14
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0806d710
	ldr		r0, [r5, #0x0]
	mov		r1, #0x1
	add		r0, #0x69
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x5c
	strh	r7, [r0, #0x0]
	mov		r2, #0xf0
	lsl		r2, r2, #0xf
	mov		r3, #0xbe
	lsl		r3, r3, #0xf
	ldr		r0, [r5, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xa0
	str		r2, [r1, #0x0]
	add		r0, #0xa4
	str		r3, [r0, #0x0]
_0806e5e8:
	add		r0, r6, #0x0
	add		r0, #0xec
	ldr		r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	beq		_0806e62c
_0806e5f4:
	add		r0, r6, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0806e618
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_0806e612
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0808e28c
_0806e612:
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	b		_0806e62c
_0806e618:
	ldr		r0, [r5, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x9c
	ldr		r1, [r1, #0x0]
	mov		r2, #0x2
	bl		sub_0806d710
	ldr		r0, [r5, #0x0]
	bl		sub_0806d68c
_0806e62c:
	mov		r4, #0x0
	ldr		r0, [r6, #0x48]
	cmp		r0, #0x7
	bne		_0806e67c
	add		r1, r6, #0x0
	add		r1, #0x4c
	add		r0, r6, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0806e666
	add		r0, r1, #0x0
	bl		sub_080c35a4
	cmp		r0, #0x1
	bne		_0806e656
	ldr		r0, [r6, #0x4c]
	bl		sub_0809668c
	add		r1, r0, #0x0
	b		_0806e658
_0806e656:
	mov		r1, #0x0
_0806e658:
	add		r0, r6, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	sub		r4, r1, r0
	cmp		r4, #0xf
	ble		_0806e666
	mov		r4, #0x0
_0806e666:
	add		r0, r6, #0x0
	add		r0, #0xb8
	add		r1, r4, #0x0
	bl		sub_0806d9f4
	add		r0, r6, #0x0
	add		r0, #0xd0
	add		r1, r4, #0x0
	bl		sub_0806d9f4
	b		_0806e690
_0806e67c:
	add		r0, r6, #0x0
	add		r0, #0xb8
	mov		r1, #0x10
	bl		sub_0806d9f4
	add		r0, r6, #0x0
	add		r0, #0xd0
	mov		r1, #0x11
	bl		sub_0806d9f4
_0806e690:
	add		r0, r6, #0x0
	add		r0, #0xe8
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0806e6b8
	add		r0, r2, #0x0
	add		r0, #0x80
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x3
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x1
	bne		_0806e6b2
	add		r0, r2, #0x0
	bl		sub_0806d68c
	b		_0806e6b8
_0806e6b2:
	add		r0, r6, #0x0
	bl		sub_0806f9e8
_0806e6b8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6E6BE, 0x1E

_0806e6dc:	.4byte 0x0806e70c

.incbin "base.gba", 0x6E6E0, 0x2C
	thumb_func_end sub_0806e590


.incbin "base.gba", 0x6E70C, 0xB3C
_0806f248:	.4byte 0x0806f6ec

.incbin "base.gba", 0x6F24C, 0x3A8

_0806f5f4:

.incbin "base.gba", 0x6F5F4, 0xF8

_0806f6ec:

.incbin "base.gba", 0x6F6EC, 0x2A8
_0806f994:	.4byte 0x0806f9ac

.incbin "base.gba", 0x6F998, 0x14

_0806f9ac:

.incbin "base.gba", 0x6F9AC, 0x10
_0806f9bc:

.incbin "base.gba", 0x6F9BC, 0x2C
	thumb_func_start sub_0806f9e8
sub_0806f9e8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r5, #0xe8
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_0806fa06
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0808e28c
	mov		r0, #0x0
	str		r0, [r5, #0x0]
_0806fa06:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6FA0C, 0x12C
	thumb_func_end sub_0806f9e8

	thumb_func_start sub_0806fb38
sub_0806fb38:
	strb	r3, [r0, #0x0]
	strb	r2, [r0, #0x1]
	strb	r1, [r0, #0x2]
	bx		lr
	thumb_func_end sub_0806fb38

	thumb_func_start sub_0806fb40
sub_0806fb40:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	mov		r8, r0
	add		r4, r1, #0x0
	mov		r6, #0x0
	ldrsb	r6, [r4, r6]
	add		r6, r6, r2
	mov		r5, #0x1
	ldrsb	r5, [r4, r5]
	add		r0, r6, #0x0
	mov		r1, #0x3c
	bl		sub_080bbcac
	add		r5, r5, r0
	ldrb	r4, [r4, #0x2]
	lsl		r4, r4, #0x18
	asr		r4, r4, #0x18
	add		r0, r5, #0x0
	mov		r1, #0x3c
	bl		sub_080bbcac
	add		r4, r4, r0
	add		r0, r5, #0x0
	mov		r1, #0x3c
	bl		sub_080bbd44
	add		r5, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, #0x3c
	bl		sub_080bbd44
	add		r3, r0, #0x0
	mov		r0, r8
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0806fb38
	mov		r0, r8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806fb40

	thumb_func_start sub_0806fb98
sub_0806fb98:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r6, #0xe1
	lsl		r6, r6, #0x4
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080bbcac
	strb	r0, [r5, #0x2]
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080bbd44
	mov		r1, #0x3c
	bl		sub_080bbcac
	strb	r0, [r5, #0x1]
	add		r0, r4, #0x0
	mov		r1, #0x3c
	bl		sub_080bbd44
	strb	r0, [r5, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6FBCE, 0x82
	thumb_func_end sub_0806fb98

	thumb_func_start sub_0806fc50
sub_0806fc50:
	ldr		r1, _0806fc58
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x6FC56, 0x2

_0806fc58:	.4byte 0x0200BB60
	thumb_func_end sub_0806fc50

	thumb_func_start sub_0806fc5c
sub_0806fc5c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r4, #0x5
	ble		_0806fc72
	ldr		r0, _0806fc88
	mov		r1, #0x42
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806fc72:
	ldr		r0, _0806fc8c
	lsl		r1, r4, #0x2
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6FC86, 0x2

_0806fc88:	.4byte 0x080d3bcc @ h_asoh/g16.cpp
_0806fc8c:	.4byte 0x0200BB60
	thumb_func_end sub_0806fc5c

	thumb_func_start sub_0806fc90
sub_0806fc90:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r4, #0x3e
	ble		_0806fca6
	ldr		r0, _0806fcb8
	mov		r1, #0x3c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806fca6:
	ldr		r0, _0806fcbc
	lsl		r1, r4, #0x2
	add		r0, #0x4
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6FCB6, 0x2

_0806fcb8:	.4byte 0x080d3bcc @ h_asoh/g16.cpp
_0806fcbc:	.4byte 0x0200BB60
	thumb_func_end sub_0806fc90

	thumb_func_start sub_0806fcc0
sub_0806fcc0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r4, #0x4
	ble		_0806fcd6
	ldr		r0, _0806fcec
	mov		r1, #0x36
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806fcd6:
	ldr		r0, _0806fcf0
	lsl		r1, r4, #0x2
	mov		r2, #0x96
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6FCEA, 0x2

_0806fcec:	.4byte 0x080d3bcc @ h_asoh/g16.cpp
_0806fcf0:	.4byte 0x0200BB60
	thumb_func_end sub_0806fcc0

	thumb_func_start sub_0806fcf4
sub_0806fcf4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r4, #0x4
	ble		_0806fd0a
	ldr		r0, _0806fd20
	mov		r1, #0x30
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0806fd0a:
	ldr		r0, _0806fd24
	lsl		r1, r4, #0x2
	mov		r2, #0x8c
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6FD1E, 0x2

_0806fd20:	.4byte 0x080d3bcc @ h_asoh/g16.cpp
_0806fd24:	.4byte 0x0200BB60

.incbin "base.gba", 0x6FD28, 0x5C
	thumb_func_end sub_0806fcf4

	thumb_func_start sub_0806fd84
sub_0806fd84: @ SetDificulity
	push	{ lr }
	ldr		r0, _0806fda4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806fdb0
	ldr		r0, _0806fda8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806fe1a
	ldr		r0, _0806fdac
	bl		sub_0808c670
	b		_0806fe1a

.incbin "base.gba", 0x6FDA2, 0x2

_0806fda4:	.4byte 0x00000855
_0806fda8:	.4byte 0x0200CDBC
_0806fdac:	.4byte 0x080d3cc8 @ game_level_EASY

_0806fdb0:
	ldr		r0, _0806fdd0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806fddc
	ldr		r0, _0806fdd4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806fdca
	ldr		r0, _0806fdd8
	bl		sub_0808c670
_0806fdca:
	mov		r0, #0x1
	b		_0806fe1c

.incbin "base.gba", 0x6FDCE, 0x2

_0806fdd0:	.4byte 0x00000856
_0806fdd4:	.4byte 0x0200CDBC
_0806fdd8:	.4byte 0x080d3cdc @ game_level_NORMAL

_0806fddc:
	ldr		r0, _0806fdfc
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806fe08
	ldr		r0, _0806fe00
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806fdf6
	ldr		r0, _0806fe04
	bl		sub_0808c670
_0806fdf6:
	mov		r0, #0x2
	b		_0806fe1c

.incbin "base.gba", 0x6FDFA, 0x2

_0806fdfc:	.4byte 0x00000857
_0806fe00:	.4byte 0x0200CDBC
_0806fe04:	.4byte 0x080d3cf0 @ game_level_HARD

_0806fe08:
	ldr		r0, _0806fe20
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806fe1a
	ldr		r0, _0806fe24
	ldr		r1, _0806fe28
	bl		sub_0808c670
_0806fe1a:
	mov		r0, #0x0
_0806fe1c:
	pop		{ r1 }
	bx		r1

_0806fe20:	.4byte 0x0200CDBC
_0806fe24:	.4byte 0x080d3d04 @ WARNING %s (no specify game level)
_0806fe28:	.4byte 0x080d3d28 @ h_asoh/pause.cpp
	thumb_func_end sub_0806fd84

	thumb_func_start sub_0806fe2c
sub_0806fe2c: @ SetGameMode
	push	{ lr }
	ldr		r0, _0806fe58
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806fe84
	ldr		r0, _0806fe5c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806fe68
	ldr		r0, _0806fe60
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806fe52
	ldr		r0, _0806fe64
	bl		sub_0808c670
_0806fe52:
	mov		r0, #0x3
	b		_0806feec

.incbin "base.gba", 0x6FE56, 0x2

_0806fe58:	.4byte 0x00000282
_0806fe5c:	.4byte 0x00000287
_0806fe60:	.4byte 0x0200CDBC
_0806fe64:	.4byte 0x080d3d3c @ game_mode_RACE2

_0806fe68:
	ldr		r0, _0806fe7c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806fe78
	ldr		r0, _0806fe80
	bl		sub_0808c670
_0806fe78:
	mov		r0, #0x0
	b		_0806feec

_0806fe7c:	.4byte 0x0200CDBC
_0806fe80:	.4byte 0x080d3d50 @ game_mode_RACE

_0806fe84:
	ldr		r0, _0806fea0
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806feac
	ldr		r0, _0806fea4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806feea
	ldr		r0, _0806fea8
	bl		sub_0808c670
	b		_0806feea

_0806fea0:	.4byte 0x00000283
_0806fea4:	.4byte 0x0200CDBC
_0806fea8:	.4byte 0x080d3d60 @ game_mode_PRACTICE

_0806feac:
	ldr		r0, _0806fecc
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0806fed8
	ldr		r0, _0806fed0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806fec6
	ldr		r0, _0806fed4
	bl		sub_0808c670
_0806fec6:
	mov		r0, #0x2
	b		_0806feec

.incbin "base.gba", 0x6FECA, 0x2

_0806fecc:	.4byte 0x00000842
_0806fed0:	.4byte 0x0200CDBC
_0806fed4:	.4byte 0x080d3d74 @ game_mode_FREE

_0806fed8:
	ldr		r0, _0806fef0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0806feea
	ldr		r0, _0806fef4
	ldr		r1, _0806fef8
	bl		sub_0808c670
_0806feea:
	mov		r0, #0x1
_0806feec:
	pop		{ r1 }
	bx		r1

_0806fef0:	.4byte 0x0200CDBC
_0806fef4:	.4byte 0x080d3d84 @ WARNING %s (no specify game mode)
_0806fef8:	.4byte 0x080d3d28 @ h_asoh/pause.cpp
	thumb_func_end sub_0806fe2c

	thumb_func_start sub_0806fefc
sub_0806fefc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x2c
	add		r6, r0, #0x0
	cmp		r1, #0x5
	bls		_0806ff10
	b		_08070456
_0806ff10:
	lsl		r0, r1, #0x2
	ldr		r1, _0806ff1c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x6FF1A, 0x2

_0806ff1c:	.4byte 0x0806ff20
_0806ff20:	.4byte 0x0806ff38

.incbin "base.gba", 0x6FF24, 0x14
	thumb_func_end sub_0806fefc


.incbin "base.gba", 0x6FF38, 0x51E

_08070456:

.incbin "base.gba", 0x70456, 0x82
	thumb_func_start sub_080704d8
sub_080704d8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x68]
	cmp		r4, #0x0
	beq		_080704f4
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0808e28c
	mov		r0, #0x0
	str		r0, [r5, #0x68]
_080704f4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x704FA, 0x52
	thumb_func_end sub_080704d8

	thumb_func_start sub_0807054c
sub_0807054c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x64]
	cmp		r4, #0x0
	beq		_08070568
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0808e28c
	mov		r0, #0x0
	str		r0, [r5, #0x64]
_08070568:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7056E, 0x2
	thumb_func_end sub_0807054c

	thumb_func_start sub_08070570
sub_08070570:
	mov		r1, #0xff
	lsl		r1, r1, #0x18
	ldr		r0, _08070588
	str		r1, [r0, #0x0]
	ldr		r1, _0807058c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r1, _08070590
	mov		r0, #0x1
	strb	r0, [r1, #0x18]
	bx		lr

.incbin "base.gba", 0x70586, 0x2

_08070588:	.4byte 0x0200CE24
_0807058c:	.4byte 0x0200CE38
_08070590:	.4byte 0x02008AD4
	thumb_func_end sub_08070570

	thumb_func_start sub_08070594
sub_08070594:
	push	{ r4, lr }
	ldr		r4, _080705b4
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080705aa
	ldr		r0, _080705b8
	mov		r1, #0xa7
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080705aa:
	ldr		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x705B2, 0x2

_080705b4:	.4byte 0x0200D5C4
_080705b8:	.4byte 0x080d3d28 @ h_asoh/pause.cpp
	thumb_func_end sub_08070594

	thumb_func_start sub_080705bc
sub_080705bc:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08070618
	str		r0, [r4, #0x4c]
	ldr		r0, _0807061c
	str		r0, [r4, #0xc]
	ldr		r5, _08070620
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_080705ea
	ldr		r0, _08070624
	mov		r1, #0x95
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080705ea:
	str		r4, [r5, #0x0]
	mov		r0, #0x0
	str		r0, [r4, #0x54]
	str		r0, [r4, #0x5c]
	str		r0, [r4, #0x58]
	str		r0, [r4, #0x64]
	str		r0, [r4, #0x68]
	cmp		r6, #0x10
	ble		_08070608
	ldr		r0, _08070624
	mov		r1, #0x9f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08070608:
	str		r6, [r4, #0x60]
	add		r0, r4, #0x0
	bl		sub_08070570
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08070618:	.4byte 0x080e2444
_0807061c:	.4byte 0x080e245c
_08070620:	.4byte 0x0200D5C4
_08070624:	.4byte 0x080d3d28 @ h_asoh/pause.cpp
	thumb_func_end sub_080705bc

	thumb_func_start sub_08070628
sub_08070628:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _08070670
	str		r0, [r6, #0x4c]
	ldr		r0, _08070674
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	bl		sub_0807054c
	add		r0, r6, #0x0
	bl		sub_080704d8
	ldr		r1, _08070678
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0807066a
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0807066a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08070670:	.4byte 0x080e2444
_08070674:	.4byte 0x080e245c
_08070678:	.4byte 0x0200D5C4
	thumb_func_end sub_08070628

	thumb_func_start sub_0807067c
sub_0807067c:
	ldr		r1, _08070684
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x70682, 0x2

_08070684:	.4byte 0x0200BCA4
	thumb_func_end sub_0807067c

	thumb_func_start sub_08070688
sub_08070688:
	ldr		r1, _08070690
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x7068E, 0x2

_08070690:	.4byte 0x0200BCA0

.incbin "base.gba", 0x70694, 0x18
	thumb_func_end sub_08070688

	thumb_func_start sub_080706ac
sub_080706ac:
	push	{ lr }
	bl		sub_08070594
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x706B6, 0x16
	thumb_func_end sub_080706ac

	thumb_func_start sub_080706cc
sub_080706cc:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080706cc

	thumb_func_start sub_080706dc
sub_080706dc:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080706dc

	thumb_func_start sub_080706ec
sub_080706ec:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _08070818
	str		r0, [r5, #0xc]
	ldr		r2, [r5, #0x40]
	cmp		r2, #0x0
	beq		_08070728
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xb8
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08070720
_0807070a:
	sub		r4, #0xb8
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x40]
	cmp		r0, r4
	bne		_0807070a
_08070720:
	ldr		r0, [r5, #0x40]
	sub		r0, #0x4
	bl		sub_0808afd0
_08070728:
	ldr		r2, [r5, #0x44]
	cmp		r2, #0x0
	beq		_0807075a
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xb8
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08070752
_0807073c:
	sub		r4, #0xb8
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x44]
	cmp		r0, r4
	bne		_0807073c
_08070752:
	ldr		r0, [r5, #0x44]
	sub		r0, #0x4
	bl		sub_0808afd0
_0807075a:
	ldr		r2, [r5, #0x48]
	cmp		r2, #0x0
	beq		_08070790
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xb8
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08070784
_0807076e:
	sub		r4, #0xb8
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x48]
	cmp		r0, r4
	bne		_0807076e
_08070784:
	ldr		r0, [r5, #0x48]
	sub		r0, #0x4
	bl		sub_0808afd0
	mov		r0, #0x0
	str		r0, [r5, #0x48]
_08070790:
	ldr		r2, [r5, #0x4c]
	cmp		r2, #0x0
	beq		_080707c6
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xb8
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_080707ba
_080707a4:
	sub		r4, #0xb8
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x4c]
	cmp		r0, r4
	bne		_080707a4
_080707ba:
	ldr		r0, [r5, #0x4c]
	sub		r0, #0x4
	bl		sub_0808afd0
	mov		r0, #0x0
	str		r0, [r5, #0x4c]
_080707c6:
	ldr		r1, [r5, #0x50]
	cmp		r1, #0x0
	beq		_080707f4
	sub		r0, r1, #0x4
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x3
	add		r4, r1, r0
	cmp		r1, r4
	beq		_080707ea
_080707d8:
	sub		r4, #0x8
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080707e4
	bl		sub_0808afd0
_080707e4:
	ldr		r1, [r5, #0x50]
	cmp		r1, r4
	bne		_080707d8
_080707ea:
	sub		r0, r1, #0x4
	bl		sub_0808afd0
	mov		r0, #0x0
	str		r0, [r5, #0x50]
_080707f4:
	ldr		r0, _0807081c
	bl		sub_08002268
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_08070810
	add		r0, r5, #0x0
	bl		sub_080b74c8
_08070810:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70816, 0x2

_08070818:	.4byte 0x080e2484
_0807081c:	.4byte 0x00000835
	thumb_func_end sub_080706ec

	thumb_func_start sub_08070820
sub_08070820:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x74
	mov		r9, r0
	mov		r0, #0x1
	mov		r1, #0x2a
	bl		sub_0808f5cc
	mov		r1, #0xf0
	lsl		r1, r1, #0xf
	mov		r2, #0xa0
	lsl		r2, r2, #0xf
	add		r4, sp, #0x14
	add		r0, r4, #0x0
	bl		sub_080c3590
	mov		r0, #0x40
	add		r0, r9
	mov		r8, r0
	ldr		r0, _080708c4
	bl		sub_0808afb8
	mov		r1, #0x10
	stmia	r0!, {  r1 }
	add		r7, r0, #0x0
	add		r5, r7, #0x0
	mov		r6, #0xf
	mov		r4, #0x1
	neg		r4, r4
_08070860:
	add		r0, r5, #0x0
	bl		sub_0806d81c
	add		r5, #0xb8
	sub		r6, #0x1
	cmp		r6, r4
	bne		_08070860
	mov		r1, r8
	str		r7, [r1, #0x0]
	mov		r2, r9
	add		r2, #0x54
	str		r2, [sp, #0x50]
	mov		r3, r9
	add		r3, #0x44
	str		r3, [sp, #0x40]
	mov		r4, r9
	add		r4, #0x48
	str		r4, [sp, #0x44]
	mov		r5, r9
	add		r5, #0x4c
	str		r5, [sp, #0x48]
	mov		r0, r9
	add		r0, #0x50
	str		r0, [sp, #0x4c]
	mov		r5, #0x0
	mov		r7, #0xf
_08070894:
	mov		r1, r9
	ldr		r4, [r1, #0x40]
	add		r4, r5, r4
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0806d710
	add		r5, #0xb8
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_08070894
	ldr		r0, [sp, #0x50]
	mov		r1, #0x1e
	bl		sub_0806dcec
	ldr		r2, [sp, #0x50]
	str		r2, [sp, #0x24]
	b		_08070946

.incbin "base.gba", 0x708C2, 0x2

_080708c4:	.4byte 0x00000B84

_080708c8:
	ldr		r0, [sp, #0x24]
	bl		sub_0806dcc8
	mov		r7, #0x0
	ldr		r3, _08070bf4
	mov		r10, r3
	mov		r4, #0x0
	mov		r8, r4
_080708d8:
	mov		r5, r9
	ldr		r0, [r5, #0x54]
	mov		r1, #0xa0
	lsl		r1, r1, #0x10
	mul		r0, r1
	ldr		r1, [r5, #0x58]
	bl		sub_080bbcac
	add		r6, r0, #0x0
	mov		r2, #0xe1
	lsl		r2, r2, #0x4
	add		r0, r7, #0x0
	mul		r0, r2
	cmp		r0, #0x0
	bge		_080708f8
	add		r0, #0xf
_080708f8:
	asr		r0, r0, #0x4
	add		r0, r10
	bl		sub_0808c3ac
	add		r4, r0, #0x0
	add		r1, r6, #0x0
	bl		sub_0808c5a4
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0808c588
	add		r2, r0, #0x0
	mov		r3, r9
	ldr		r0, [r3, #0x40]
	mov		r4, r8
	add		r1, r4, r0
	add		r1, #0xa0
	str		r5, [r1, #0x0]
	str		r2, [r1, #0x4]
	add		r0, r8
	add		r0, #0xa0
	add		r1, sp, #0x14
	bl		sub_0806dd38
	mov		r5, r9
	ldr		r0, [r5, #0x40]
	add		r0, r8
	bl		sub_0806d68c
	mov		r0, #0xb8
	add		r8, r0
	add		r7, #0x1
	cmp		r7, #0xf
	ble		_080708d8
	mov		r0, r9
	bl		sub_080b7690
_08070946:
	mov		r2, #0x0
	mov		r3, r9
	ldr		r1, [r3, #0x58]
	ldr		r0, [r3, #0x54]
	cmp		r1, r0
	bne		_08070954
	mov		r2, #0x1
_08070954:
	cmp		r2, #0x1
	beq		_08070962
	mov		r0, r9
	bl		sub_08071188
	cmp		r0, #0x0
	beq		_080708c8
_08070962:
	mov		r4, r9
	ldr		r2, [r4, #0x40]
	cmp		r2, #0x0
	beq		_0807099a
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xb8
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08070990
_08070978:
	sub		r4, #0xb8
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	mov		r5, r9
	ldr		r0, [r5, #0x40]
	cmp		r0, r4
	bne		_08070978
_08070990:
	mov		r1, r9
	ldr		r0, [r1, #0x40]
	sub		r0, #0x4
	bl		sub_0808afd0
_0807099a:
	mov		r0, #0x0
	mov		r2, r9
	str		r0, [r2, #0x40]
	ldr		r3, [sp, #0x40]
	mov		r8, r3
	mov		r0, #0xb9
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	mov		r1, #0x4
	stmia	r0!, {  r1 }
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	mov		r5, #0x3
	mov		r7, #0x1
	neg		r7, r7
_080709ba:
	add		r0, r4, #0x0
	bl		sub_0806d81c
	add		r4, #0xb8
	sub		r5, #0x1
	cmp		r5, r7
	bne		_080709ba
	mov		r4, r8
	str		r6, [r4, #0x0]
	mov		r5, r9
	ldr		r4, [r5, #0x44]
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0806d710
	ldr		r0, [r5, #0x44]
	mov		r1, #0xa
	add		r0, #0x5c
	strh	r1, [r0, #0x0]
	ldr		r1, [r5, #0x44]
	add		r0, r1, #0x0
	add		r0, #0xa0
	mov		r5, #0xf0
	lsl		r5, r5, #0xf
	mov		r6, #0xa0
	lsl		r6, r6, #0xf
	str		r5, [r0, #0x0]
	add		r0, #0x4
	str		r6, [r0, #0x0]
	add		r4, r1, #0x0
	add		r4, #0xb8
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0806d710
	mov		r1, r9
	ldr		r0, [r1, #0x44]
	mov		r1, #0xb
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	strh	r1, [r0, #0x0]
	mov		r3, r9
	ldr		r1, [r3, #0x44]
	mov		r4, #0xac
	lsl		r4, r4, #0x1
	add		r0, r1, r4
	str		r5, [r0, #0x0]
	add		r2, #0x48
	add		r0, r1, r2
	str		r6, [r0, #0x0]
	mov		r3, #0xb8
	lsl		r3, r3, #0x1
	add		r4, r1, r3
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_0806d710
	mov		r4, r9
	ldr		r0, [r4, #0x44]
	mov		r1, #0xc
	mov		r8, r1
	mov		r2, #0xe6
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r3, r8
	strh	r3, [r0, #0x0]
	ldr		r1, [r4, #0x44]
	mov		r4, #0x84
	lsl		r4, r4, #0x2
	add		r0, r1, r4
	str		r5, [r0, #0x0]
	add		r2, #0x48
	add		r0, r1, r2
	str		r6, [r0, #0x0]
	mov		r3, #0x8a
	lsl		r3, r3, #0x2
	add		r4, r1, r3
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0806d710
	mov		r4, r9
	ldr		r0, [r4, #0x44]
	mov		r1, #0xa1
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r2, r8
	strh	r2, [r0, #0x0]
	ldr		r1, [r4, #0x44]
	mov		r3, #0xb2
	lsl		r3, r3, #0x2
	add		r0, r1, r3
	str		r5, [r0, #0x0]
	mov		r4, #0xb3
	lsl		r4, r4, #0x2
	add		r0, r1, r4
	str		r6, [r0, #0x0]
	add		r1, sp, #0x4
	ldr		r0, _08070bf8
	ldmia	r0!, { r2, r3, r5 }
	stmia	r1!, {  r2, r3, r5 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r4, [sp, #0x44]
	mov		r8, r4
	ldr		r0, _08070bfc
	bl		sub_0808afb8
	mov		r1, #0x7
	stmia	r0!, {  r1 }
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	mov		r5, #0x6
	mov		r7, #0x1
	neg		r7, r7
_08070aca:
	add		r0, r4, #0x0
	bl		sub_0806d81c
	add		r4, #0xb8
	sub		r5, #0x1
	cmp		r5, r7
	bne		_08070aca
	mov		r5, r8
	str		r6, [r5, #0x0]
	ldr		r0, [sp, #0x48]
	mov		r8, r0
	ldr		r0, _08070c00
	bl		sub_0808afb8
	mov		r1, #0x1c
	stmia	r0!, {  r1 }
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	mov		r5, #0x1b
	mov		r7, #0x1
	neg		r7, r7
_08070af4:
	add		r0, r4, #0x0
	bl		sub_0806d81c
	add		r4, #0xb8
	sub		r5, #0x1
	cmp		r5, r7
	bne		_08070af4
	mov		r1, r8
	str		r6, [r1, #0x0]
	ldr		r2, [sp, #0x4c]
	str		r2, [sp, #0x28]
	mov		r0, #0x3c
	bl		sub_0808afb8
	mov		r1, #0x7
	stmia	r0!, {  r1 }
	str		r0, [sp, #0x2c]
	mov		r1, #0x6
_08070b18:
	add		r7, r0, #0x0
	mov		r3, #0x0
	str		r3, [r7, #0x4]
	mov		r0, #0x48
	str		r1, [sp, #0x70]
	bl		sub_0808afb8
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	mov		r6, #0x8
	mov		r0, #0x8
	add		r0, r0, r7
	mov		r10, r0
	ldr		r1, [sp, #0x70]
	sub		r1, #0x1
	mov		r8, r1
_08070b38:
	add		r0, r4, #0x0
	bl		sub_080c3598
	add		r4, #0x8
	sub		r6, #0x1
	mov		r1, #0x1
	neg		r1, r1
	cmp		r6, r1
	bne		_08070b38
	str		r5, [r7, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x11
	add		r0, r5, #0x0
	mov		r1, #0x8
_08070b54:
	str		r2, [r0, #0x0]
	str		r2, [r0, #0x4]
	add		r0, #0x8
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08070b54
	mov		r0, r10
	mov		r1, r8
	mov		r2, #0x1
	neg		r2, r2
	cmp		r1, r2
	bne		_08070b18
	ldr		r3, [sp, #0x2c]
	ldr		r4, [sp, #0x28]
	str		r3, [r4, #0x0]
	mov		r7, #0x0
_08070b74:
	mov		r5, #0xb8
	add		r4, r7, #0x0
	mul		r4, r5
	mov		r1, r9
	ldr		r0, [r1, #0x48]
	add		r4, r4, r0
	add		r1, r7, #0x0
	add		r1, #0xe
	add		r0, r4, #0x0
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0806d710
	add		r2, r7, #0x1
	str		r2, [sp, #0x34]
	lsl		r0, r7, #0x2
	add		r7, #0x15
	mov		r10, r7
	add		r6, r0, #0x0
	mul		r6, r5
	add		r7, sp, #0x4
	mov		r3, #0x3
	mov		r8, r3
_08070ba8:
	mov		r5, r9
	ldr		r4, [r5, #0x4c]
	add		r4, r6, r4
	ldmia	r7!, { r5 }
	add		r0, r4, #0x0
	mov		r1, r10
	bl		sub_0806d750
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x2
	bl		sub_0806d710
	mov		r1, r9
	ldr		r0, [r1, #0x4c]
	add		r0, r6, r0
	add		r0, #0x5c
	mov		r2, #0xa
	strh	r2, [r0, #0x0]
	add		r6, #0xb8
	mov		r3, #0x1
	neg		r3, r3
	add		r8, r3
	mov		r4, r8
	cmp		r4, #0x0
	bge		_08070ba8
	ldr		r7, [sp, #0x34]
	cmp		r7, #0x6
	ble		_08070b74
	mov		r1, #0xd7
	lsl		r1, r1, #0x1
	ldr		r0, [sp, #0x50]
	bl		sub_0806dcec
	ldr		r5, [sp, #0x50]
	str		r5, [sp, #0x30]
	b		_08070dbe

.incbin "base.gba", 0x70BF2, 0x2

_08070bf4:	.4byte 0xFFFFFC7C
_08070bf8:	.4byte 0x080d3e3c
_08070bfc:	.4byte 0x0000050C
_08070c00:	.4byte 0x00001424

_08070c04:
	ldr		r0, [sp, #0x30]
	bl		sub_0806dcc8
	mov		r7, #0x0
	ldr		r0, _08070f90
	mov		r1, #0x0
	str		r1, [sp, #0x58]
	mov		r2, #0x0
	str		r2, [sp, #0x5c]
	ldr		r3, _08070f94
	str		r3, [sp, #0x60]
	mov		r4, #0x0
	str		r4, [sp, #0x64]
	str		r0, [sp, #0x68]
	str		r0, [sp, #0x6c]
_08070c22:
	lsl		r6, r7, #0x1
	ldr		r5, _08070f98
	add		r0, r6, r5
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r3, r9
	ldr		r0, [r3, #0x54]
	cmp		r1, r0
	ble		_08070c36
	b		_08070d68
_08070c36:
	ldr		r0, [sp, #0x6c]
	bl		sub_0806dcc8
	mov		r0, #0x0
	ldr		r4, [sp, #0x68]
	ldr		r1, [r4, #0x4]
	ldr		r2, [r4, #0x0]
	ldr		r5, [sp, #0x64]
	str		r5, [sp, #0x3c]
	cmp		r1, r2
	bne		_08070c4e
	mov		r0, #0x1
_08070c4e:
	cmp		r0, #0x0
	beq		_08070c54
	b		_08070d68
_08070c54:
	ldr		r3, [sp, #0x60]
	mov		r4, #0x0
	ldrsh	r0, [r3, r4]
	mov		r5, #0x2
	ldrsh	r4, [r3, r5]
	sub		r0, r0, r4
	mul		r0, r2
	bl		sub_080bbcac
	add		r1, r0, #0x0
	add		r1, r1, r4
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	bl		sub_0808c3ac
	add		r5, r0, #0x0
	ldr		r1, _08070f9c
	add		r0, r6, r1
	mov		r2, #0x0
	ldrsh	r4, [r0, r2]
	lsl		r4, r4, #0x10
	neg		r1, r4
	ldr		r3, [sp, #0x6c]
	ldr		r0, [r3, #0x0]
	mul		r0, r1
	ldr		r1, [r3, #0x4]
	bl		sub_080bbcac
	add		r3, r0, #0x0
	add		r3, r3, r4
	mov		r4, r9
	ldr		r1, [r4, #0x48]
	ldr		r0, [sp, #0x5c]
	add		r1, r1, r0
	ldr		r2, [sp, #0x64]
	ldr		r4, _08070fa0
	add		r0, r2, r4
	str		r0, [sp, #0x0]
	mov		r0, r9
	add		r2, r5, #0x0
	bl		sub_080711bc
	mov		r5, r9
	ldr		r0, [r5, #0x54]
	mov		r1, #0x3
	bl		sub_080bbd44
	cmp		r0, #0x0
	bne		_08070ce4
	ldr		r5, [r5, #0x50]
	ldr		r0, [sp, #0x64]
	add		r5, r0, r5
	mov		r1, r9
	ldr		r4, [r1, #0x48]
	ldr		r2, [sp, #0x5c]
	add		r4, r2, r4
	add		r4, #0xa0
	ldr		r0, [r5, #0x4]
	mov		r1, #0x9
	bl		sub_080bbd44
	add		r1, r0, #0x0
	lsl		r1, r1, #0x3
	ldr		r0, [r5, #0x0]
	add		r0, r0, r1
	add		r1, r4, #0x0
	bl		sub_0806dd4c
	ldr		r0, [r5, #0x4]
	add		r0, #0x1
	str		r0, [r5, #0x4]
_08070ce4:
	mov		r3, sp
	add		r3, #0x1c
	str		r3, [sp, #0x38]
	mov		r4, #0x3
	str		r4, [sp, #0x54]
	mov		r5, #0x2
	mov		r10, r5
	ldr		r0, [sp, #0x58]
	mov		r1, #0xb8
	add		r5, r0, #0x0
	mul		r5, r1
	mov		r8, r4
_08070cfc:
	mov		r2, r9
	ldr		r0, [r2, #0x4c]
	add		r0, r0, r5
	add		r6, r0, #0x0
	add		r6, #0xa0
	ldr		r0, [r2, #0x50]
	ldr		r3, [sp, #0x3c]
	add		r4, r3, r0
	mov		r0, r10
	cmp		r0, #0x8
	ble		_08070d1e
	ldr		r0, _08070fa4
	mov		r1, #0x4e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08070d1e:
	ldr		r0, [r4, #0x4]
	ldr		r1, [sp, #0x54]
	sub		r0, r0, r1
	mov		r1, #0x9
	bl		sub_080bbd44
	cmp		r0, #0x0
	bge		_08070d30
	mov		r0, #0x0
_08070d30:
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldr		r1, [r0, #0x4]
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x1c]
	str		r1, [sp, #0x20]
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x38]
	bl		sub_0806dd4c
	mov		r2, r9
	ldr		r0, [r2, #0x4c]
	add		r0, r0, r5
	bl		sub_0806d68c
	ldr		r3, [sp, #0x54]
	add		r3, #0x2
	str		r3, [sp, #0x54]
	mov		r4, #0x2
	add		r10, r4
	add		r5, #0xb8
	mov		r0, #0x1
	neg		r0, r0
	add		r8, r0
	mov		r1, r8
	cmp		r1, #0x0
	bge		_08070cfc
_08070d68:
	ldr		r2, [sp, #0x58]
	add		r2, #0x4
	str		r2, [sp, #0x58]
	ldr		r3, [sp, #0x5c]
	add		r3, #0xb8
	str		r3, [sp, #0x5c]
	ldr		r4, [sp, #0x60]
	add		r4, #0x4
	str		r4, [sp, #0x60]
	ldr		r5, [sp, #0x64]
	add		r5, #0x8
	str		r5, [sp, #0x64]
	ldr		r0, [sp, #0x68]
	add		r0, #0x8
	str		r0, [sp, #0x68]
	ldr		r1, [sp, #0x6c]
	add		r1, #0x8
	str		r1, [sp, #0x6c]
	add		r7, #0x1
	cmp		r7, #0x6
	bgt		_08070d94
	b		_08070c22
_08070d94:
	mov		r5, #0x0
	ldr		r4, _08070fa8
	mov		r7, #0x3
_08070d9a:
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r3, r9
	ldr		r0, [r3, #0x54]
	cmp		r1, r0
	bgt		_08070dae
	ldr		r0, [r3, #0x44]
	add		r0, r0, r5
	bl		sub_0806d68c
_08070dae:
	add		r5, #0xb8
	add		r4, #0x2
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_08070d9a
	mov		r0, r9
	bl		sub_080b7690
_08070dbe:
	mov		r2, #0x0
	mov		r4, r9
	ldr		r1, [r4, #0x58]
	ldr		r0, [r4, #0x54]
	cmp		r1, r0
	bne		_08070dcc
	mov		r2, #0x1
_08070dcc:
	cmp		r2, #0x1
	beq		_08070ddc
	mov		r0, r9
	bl		sub_08071188
	cmp		r0, #0x0
	bne		_08070ddc
	b		_08070c04
_08070ddc:
	mov		r5, r9
	ldr		r2, [r5, #0x48]
	cmp		r2, #0x0
	beq		_08070e14
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xb8
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08070e0a
_08070df2:
	sub		r4, #0xb8
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	mov		r1, r9
	ldr		r0, [r1, #0x48]
	cmp		r0, r4
	bne		_08070df2
_08070e0a:
	mov		r2, r9
	ldr		r0, [r2, #0x48]
	sub		r0, #0x4
	bl		sub_0808afd0
_08070e14:
	mov		r0, #0x0
	mov		r3, r9
	str		r0, [r3, #0x48]
	ldr		r2, [r3, #0x4c]
	cmp		r2, #0x0
	beq		_08070e50
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xb8
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08070e46
_08070e2e:
	sub		r4, #0xb8
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	mov		r5, r9
	ldr		r0, [r5, #0x4c]
	cmp		r0, r4
	bne		_08070e2e
_08070e46:
	mov		r1, r9
	ldr		r0, [r1, #0x4c]
	sub		r0, #0x4
	bl		sub_0808afd0
_08070e50:
	mov		r0, #0x0
	mov		r2, r9
	str		r0, [r2, #0x4c]
	ldr		r1, [r2, #0x50]
	cmp		r1, #0x0
	beq		_08070e82
	sub		r0, r1, #0x4
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x3
	add		r4, r1, r0
	cmp		r1, r4
	beq		_08070e7c
_08070e68:
	sub		r4, #0x8
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08070e74
	bl		sub_0808afd0
_08070e74:
	mov		r3, r9
	ldr		r1, [r3, #0x50]
	cmp		r1, r4
	bne		_08070e68
_08070e7c:
	sub		r0, r1, #0x4
	bl		sub_0808afd0
_08070e82:
	mov		r0, #0x0
	mov		r4, r9
	str		r0, [r4, #0x50]
	ldr		r2, [r4, #0x44]
	cmp		r2, #0x0
	beq		_08070ebe
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xb8
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08070eb4
_08070e9c:
	sub		r4, #0xb8
	add		r0, r4, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	mov		r5, r9
	ldr		r0, [r5, #0x44]
	cmp		r0, r4
	bne		_08070e9c
_08070eb4:
	mov		r1, r9
	ldr		r0, [r1, #0x44]
	sub		r0, #0x4
	bl		sub_0808afd0
_08070ebe:
	mov		r0, #0x0
	mov		r2, r9
	str		r0, [r2, #0x44]
	mov		r0, #0xb
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r3, [sp, #0x40]
	mov		r8, r3
	mov		r0, #0x8b
	lsl		r0, r0, #0x2
	bl		sub_0808afb8
	mov		r1, #0x3
	stmia	r0!, {  r1 }
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	mov		r5, #0x2
	mov		r7, #0x1
	neg		r7, r7
_08070ee6:
	add		r0, r4, #0x0
	bl		sub_0806d81c
	add		r4, #0xb8
	sub		r5, #0x1
	cmp		r5, r7
	bne		_08070ee6
	mov		r4, r8
	str		r6, [r4, #0x0]
	mov		r5, r9
	ldr		r4, [r5, #0x44]
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x3
	mov		r2, #0x0
	bl		sub_0806d710
	ldr		r0, [r5, #0x44]
	mov		r1, #0xb
	mov		r8, r1
	add		r0, #0x5c
	mov		r2, r8
	strh	r2, [r0, #0x0]
	ldr		r1, [r5, #0x44]
	add		r0, r1, #0x0
	add		r0, #0xa0
	mov		r5, #0xf0
	lsl		r5, r5, #0xf
	mov		r6, #0xa0
	lsl		r6, r6, #0xf
	str		r5, [r0, #0x0]
	add		r0, #0x4
	str		r6, [r0, #0x0]
	add		r4, r1, #0x0
	add		r4, #0xb8
	add		r0, r4, #0x0
	mov		r1, #0xc
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0806d710
	mov		r3, r9
	ldr		r0, [r3, #0x44]
	mov		r4, #0x8a
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, [r3, #0x44]
	mov		r2, #0xac
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	str		r5, [r0, #0x0]
	mov		r3, #0xae
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	str		r6, [r0, #0x0]
	mov		r0, #0xb8
	lsl		r0, r0, #0x1
	add		r4, r1, r0
	add		r0, r4, #0x0
	mov		r1, #0xd
	bl		sub_0806d750
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0806d710
	mov		r1, r9
	ldr		r0, [r1, #0x44]
	mov		r1, #0xa
	mov		r2, #0xe6
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	strh	r1, [r0, #0x0]
	mov		r3, r9
	ldr		r1, [r3, #0x44]
	b		_08070fac

_08070f90:	.4byte 0x0200BCD8
_08070f94:	.4byte 0x080d3e5c
_08070f98:	.4byte 0x080d3e86
_08070f9c:	.4byte 0x080d3e78
_08070fa0:	.4byte 0x0200BD10
_08070fa4:	.4byte 0x080d3e2c @ h_asoh/eteru.h
_08070fa8:	.4byte 0x080d3e94

_08070fac:
	mov		r4, #0x84
	lsl		r4, r4, #0x2
	add		r0, r1, r4
	str		r5, [r0, #0x0]
	mov		r5, #0x85
	lsl		r5, r5, #0x2
	add		r0, r1, r5
	str		r6, [r0, #0x0]
	ldr		r0, [sp, #0x50]
	mov		r1, #0x8c
	bl		sub_0806dcec
	mov		r1, r9
	ldr		r0, [r1, #0x44]
	mov		r1, #0x3
	mov		r2, #0x2
	bl		sub_0806d710
	ldr		r5, [sp, #0x50]
	b		_08070ff6
_08070fd4:
	add		r0, r5, #0x0
	bl		sub_0806dcc8
	mov		r4, #0x0
	mov		r7, #0x2
_08070fde:
	mov		r2, r9
	ldr		r0, [r2, #0x44]
	add		r0, r0, r4
	bl		sub_0806d68c
	add		r4, #0xb8
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_08070fde
	mov		r0, r9
	bl		sub_080b7690
_08070ff6:
	mov		r2, #0x0
	mov		r3, r9
	ldr		r1, [r3, #0x58]
	ldr		r0, [r3, #0x54]
	cmp		r1, r0
	bne		_08071004
	mov		r2, #0x1
_08071004:
	cmp		r2, #0x1
	beq		_08071012
	mov		r0, r9
	bl		sub_08071188
	cmp		r0, #0x0
	beq		_08070fd4
_08071012:
	mov		r0, #0x1
	bl		sub_0808f628
	add		sp, #0x74
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08070820

	thumb_func_start sub_08071028
sub_08071028:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x28
	add		r5, r1, #0x0
	ldr		r6, _080710a4
	ldr		r1, [r6, #0x0]
	ldr		r4, _080710a8
	cmp		r1, #0x0
	bne		_0807106c
	ldr		r0, [r4, #0x0]
	str		r1, [sp, #0x0]
	mov		r1, #0xe1
	str		r1, [sp, #0x4]
	ldr		r1, _080710ac
	str		r1, [sp, #0x8]
	ldr		r1, _080710b0
	str		r1, [sp, #0xC]
	ldr		r1, _080710b4
	str		r1, [sp, #0x10]
	ldr		r1, _080710b8
	str		r1, [sp, #0x14]
	ldr		r1, _080710bc
	str		r1, [sp, #0x18]
	ldr		r1, _080710c0
	str		r1, [sp, #0x1C]
	ldr		r1, _080710c4
	str		r1, [sp, #0x20]
	add		r1, #0xe1
	str		r1, [sp, #0x24]
	mov		r1, sp
	mov		r2, #0x28
	bl		sub_0808c818
	mov		r0, #0x1
	str		r0, [r6, #0x0]
_0807106c:
	ldr		r4, [r4, #0x0]
	ldr		r0, [r5, #0x4]
	ldr		r1, [r5, #0x0]
	bl		sub_0808c4cc
	bl		sub_0808c3ac
	add		r2, r0, #0x0
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_0806dde8
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08071090
	mov		r1, #0x0
_08071090:
	ldr		r0, _080710c8
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		sp, #0x28
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x710A2, 0x2

_080710a4:	.4byte 0x0200BCD0
_080710a8:	.4byte 0x080d3e58
_080710ac:	.4byte 0x000002A3
_080710b0:	.4byte 0x00000465
_080710b4:	.4byte 0x00000627
_080710b8:	.4byte 0x000007E9
_080710bc:	.4byte 0x000009AB
_080710c0:	.4byte 0x00000B6D
_080710c4:	.4byte 0x00000D2F
_080710c8:	.4byte 0x080d3e4c
	thumb_func_end sub_08071028

	thumb_func_start sub_080710cc
sub_080710cc:
	push	{ r4, r5, r6, lr }
	ldr		r4, _08071180
	mov		r6, #0xc8
	lsl		r6, r6, #0xf
	mov		r5, #0x8c
	lsl		r5, r5, #0xf
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_080c3590
	add		r4, #0x8
	mov		r1, #0xfa
	lsl		r1, r1, #0xf
	mov		r2, #0x82
	lsl		r2, r2, #0xf
	add		r0, r4, #0x0
	bl		sub_080c3590
	add		r4, #0x8
	mov		r1, #0x8e
	lsl		r1, r1, #0x10
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_080c3590
	add		r4, #0x8
	mov		r5, #0xf0
	lsl		r5, r5, #0xf
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080c3590
	add		r4, #0x8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080c3590
	add		r4, #0x8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080c3590
	add		r4, #0x8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080c3590
	ldr		r4, _08071184
	add		r0, r4, #0x0
	mov		r1, #0x5a
	bl		sub_0806dcec
	add		r4, #0x8
	add		r0, r4, #0x0
	mov		r1, #0x69
	bl		sub_0806dcec
	add		r4, #0x8
	add		r0, r4, #0x0
	mov		r1, #0x69
	bl		sub_0806dcec
	add		r4, #0x8
	add		r0, r4, #0x0
	mov		r1, #0x78
	bl		sub_0806dcec
	add		r4, #0x8
	add		r0, r4, #0x0
	mov		r1, #0x78
	bl		sub_0806dcec
	add		r4, #0x8
	add		r0, r4, #0x0
	mov		r1, #0x78
	bl		sub_0806dcec
	add		r4, #0x8
	add		r0, r4, #0x0
	mov		r1, #0x78
	bl		sub_0806dcec
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08071180:	.4byte 0x0200BD10
_08071184:	.4byte 0x0200BCD8
	thumb_func_end sub_080710cc

	thumb_func_start sub_08071188
sub_08071188:
	push	{ r4, lr }
	mov		r4, #0x0
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_080711b0
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_080711b0
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080711b2
_080711b0:
	mov		r4, #0x1
_080711b2:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x711BA, 0x2
	thumb_func_end sub_08071188

	thumb_func_start sub_080711bc
sub_080711bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	mov		r10, r0
	mov		r9, r1
	add		r6, r2, #0x0
	mov		r8, r3
	ldr		r7, [sp, #0x0+0x30]
	mov		r4, r9
	add		r4, #0xa0
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x4]
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r0, r6, #0x0
	mov		r1, r8
	bl		sub_0808c5a4
	add		r5, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, r8
	bl		sub_0808c588
	str		r5, [r4, #0x0]
	mov		r5, r9
	add		r5, #0xa4
	str		r0, [r5, #0x0]
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_0806dd38
	ldr		r1, [r4, #0x0]
	ldr		r0, [sp, #0x0]
	sub		r1, r1, r0
	ldr		r2, [r5, #0x0]
	ldr		r0, [sp, #0x4]
	sub		r2, r2, r0
	add		r4, sp, #0x8
	add		r0, r4, #0x0
	bl		sub_080c3590
	mov		r0, r10
	add		r1, r4, #0x0
	bl		sub_08071028
	add		r1, r0, #0x0
	mov		r0, r9
	mov		r2, #0x2
	bl		sub_0806d710
	mov		r0, r9
	bl		sub_0806d68c
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080711bc

	thumb_func_start sub_0807123c
sub_0807123c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _08071268
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x54
	mov		r1, #0x1
	bl		sub_0806dcec
	mov		r0, #0x0
	str		r0, [r4, #0x40]
	str		r0, [r4, #0x44]
	str		r0, [r4, #0x48]
	str		r0, [r4, #0x4c]
	str		r0, [r4, #0x50]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x71266, 0x2

_08071268:	.4byte 0x080e2484

.incbin "base.gba", 0x7126C, 0xC
	thumb_func_end sub_0807123c

	thumb_func_start sub_08071278
sub_08071278:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	str		r0, [sp, #0x10]
	cmp		r1, #0x1
	beq		_080712ae
	cmp		r1, #0x1
	bgt		_08071294
	cmp		r1, #0x0
	beq		_0807129a
	b		_08071432
_08071294:
	cmp		r1, #0x2
	beq		_08071360
	b		_08071432
_0807129a:
	ldr		r0, [sp, #0x10]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_080712a6:
	ldr		r0, [sp, #0x10]
	bl		sub_080b7690
	b		_080712a6
_080712ae:
	mov		r0, sp
	mov		r1, #0xb4
	bl		sub_0806dcec
	ldr		r4, _0807134c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800ed80
	mov		r1, #0xf
	bl		sub_0800f0d0
	ldr		r0, _08071350
	ldr		r0, [r0, #0x0]
	bl		sub_0800f33c
	mov		r8, r0
	bl		sub_0800d74c
	add		r7, r0, #0x0
	ldr		r1, _08071354
	ldr		r0, _08071358
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0800ed80
	add		r5, r0, #0x0
	mov		r4, #0x0
	ldrb	r1, [r7, #0x0]
	cmp		r4, r1
	bge		_08071318
	mov		r9, r4
	mov		r6, #0xe
_080712f2:
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	mov		r0, r9
	strh	r0, [r5, #0x28]
	strh	r6, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r6, #0xe
	add		r4, #0x1
	ldrb	r1, [r7, #0x0]
	cmp		r4, r1
	blt		_080712f2
_08071318:
	ldr		r1, _0807135c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r4, sp
_08071320:
	mov		r0, sp
	bl		sub_0806dcc8
	ldr		r0, [sp, #0x10]
	bl		sub_080b7690
	mov		r2, #0x0
	ldr		r1, [r4, #0x4]
	ldr		r0, [sp, #0x0]
	cmp		r1, r0
	bne		_08071338
	mov		r2, #0x1
_08071338:
	cmp		r2, #0x1
	bne		_08071320
	ldr		r2, [sp, #0x10]
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08071320

_0807134c:	.4byte 0x0200AA18
_08071350:	.4byte 0x0200BD48
_08071354:	.4byte 0x0200EB34
_08071358:	.4byte 0x0200D16C
_0807135c:	.4byte 0x0200CE24

_08071360:
	add		r4, sp, #0x8
	ldr		r0, [sp, #0x10]
	ldr		r1, [r0, #0x40]
	add		r0, r4, #0x0
	bl		sub_0806dcec
	mov		r7, #0x1
_0807136e:
	add		r4, r7, #0x0
	mov		r1, #0x1
	and		r4, r1
	cmp		r4, #0x0
	beq		_0807137a
	mov		r4, #0x1
_0807137a:
	ldr		r5, _08071444
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0800ed80
	mov		r1, #0xf
	bl		sub_0800f0d0
	lsl		r2, r7, #0x4
	str		r2, [sp, #0x18]
	add		r0, r7, #0x1
	str		r0, [sp, #0x14]
	cmp		r7, #0x34
	beq		_080713f0
	lsl		r1, r7, #0x2
	ldr		r2, _08071448
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	bl		sub_0800f33c
	mov		r9, r0
	bl		sub_0800d74c
	mov		r8, r0
	ldr		r0, _0807144c
	ldr		r1, _08071450
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0800ed80
	add		r4, r0, #0x0
	mov		r5, #0x0
	mov		r2, r8
	ldrb	r2, [r2, #0x0]
	cmp		r5, r2
	bge		_080713f0
	mov		r10, r5
	mov		r6, #0xe
_080713c8:
	mov		r0, r9
	add		r1, r5, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	mov		r0, r10
	strh	r0, [r4, #0x28]
	strh	r6, [r4, #0x2a]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r6, #0xe
	add		r5, #0x1
	mov		r1, r8
	ldrb	r1, [r1, #0x0]
	cmp		r5, r1
	blt		_080713c8
_080713f0:
	add		r5, sp, #0x8
	ldr		r4, _08071454
	ldr		r6, _08071458
	ldr		r2, [sp, #0x18]
	sub		r0, r2, r7
	lsl		r7, r0, #0x4
_080713fc:
	add		r0, r5, #0x0
	bl		sub_0806dcc8
	ldr		r0, [sp, #0x8]
	mul		r0, r4
	ldr		r1, [r5, #0x4]
	bl		sub_080bbcac
	lsl		r0, r0, #0x10
	str		r0, [r6, #0x0]
	ldr		r0, [sp, #0x10]
	bl		sub_080b7690
	ldr		r0, [r6, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08071420
	neg		r1, r0
_08071420:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08071428
	neg		r1, r1
_08071428:
	cmp		r7, r1
	bge		_080713fc
	ldr		r7, [sp, #0x14]
	cmp		r7, #0x34
	ble		_0807136e
_08071432:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x71442, 0x2

_08071444:	.4byte 0x0200AA18
_08071448:	.4byte 0x0200BD48
_0807144c:	.4byte 0x0200D16C
_08071450:	.4byte 0x0200EB34
_08071454:	.4byte 0x000031B0
_08071458:	.4byte 0x0200CE24
	thumb_func_end sub_08071278

	thumb_func_start sub_0807145c
sub_0807145c:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r6, r0, #0x0
	bl		sub_080b74f4
	ldr		r0, _080714d4
	str		r0, [r6, #0xc]
	add		r7, r6, #0x0
	add		r7, #0x40
	add		r0, r7, #0x0
	bl		sub_0806dc88
	ldr		r4, _080714d8
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08071488
	ldr		r0, _080714dc
	mov		r1, #0x97
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08071488:
	str		r6, [r4, #0x0]
	ldr		r0, _080714e0
	ldr		r4, [r0, #0x0]
	ldr		r1, [r4, #0x0]
	sub		r1, #0xf0
	ldr		r0, [r4, #0x4]
	sub		r0, #0xa0
	str		r1, [r6, #0x48]
	str		r0, [r6, #0x4c]
	add		r0, r7, #0x0
	mov		r1, #0x4
	bl		sub_0806dbfc
	mov		r5, #0x0
	add		r4, #0x8
_080714a6:
	ldr		r1, [r4, #0x0]
	sub		r1, #0xf0
	ldr		r2, [r4, #0x4]
	sub		r2, #0xa0
	mov		r0, sp
	bl		sub_080c3590
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, sp
	bl		sub_0806db6c
	add		r4, #0x8
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_080714a6
	mov		r0, #0x0
	str		r0, [r6, #0x58]
	add		r0, r6, #0x0
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080714d4:	.4byte 0x080e24ac
_080714d8:	.4byte 0x0200D5C8
_080714dc:	.4byte 0x080d3e9c @ h_asoh/ending.cpp
_080714e0:	.4byte 0x0200BD4C
	thumb_func_end sub_0807145c

	thumb_func_start sub_080714e4
sub_080714e4:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x18
	add		r6, r0, #0x0
	ldr		r7, _080715a0
	ldr		r0, [r7, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_080714f6
	neg		r1, r0
_080714f6:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_080714fe
	neg		r2, r2
_080714fe:
	ldr		r0, _080715a4
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0807150a
	neg		r1, r0
_0807150a:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08071512
	neg		r1, r1
_08071512:
	str		r2, [r6, #0x50]
	str		r1, [r6, #0x54]
	mov		r0, sp
	bl		sub_080c3598
	add		r5, r6, #0x0
	add		r5, #0x40
	add		r4, sp, #0x8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x2
	bl		sub_0806dba4
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_0806dd4c
	ldr		r0, [sp, #0x0]
	lsl		r0, r0, #0x10
	ldr		r1, _080715a8
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x4]
	lsl		r0, r0, #0x10
	ldr		r1, _080715ac
	str		r0, [r1, #0x0]
	add		r4, sp, #0x10
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x3
	bl		sub_0806dba4
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_0806dd4c
	ldr		r0, [sp, #0x0]
	lsl		r0, r0, #0x10
	ldr		r1, _080715b0
	str		r0, [r1, #0x0]
	ldr		r0, [sp, #0x4]
	lsl		r0, r0, #0x10
	ldr		r1, _080715b4
	str		r0, [r1, #0x0]
	ldr		r1, [r7, #0x0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08071572
	neg		r0, r1
_08071572:
	asr		r0, r0, #0x10
	cmp		r1, #0x0
	bge		_0807157a
	neg		r0, r0
_0807157a:
	mov		r1, #0xb4
	lsl		r1, r1, #0x3
	bl		sub_080bbd44
	mov		r1, #0xf0
	lsl		r1, r1, #0x2
	cmp		r0, r1
	ble		_080715b8
	ldr		r0, [r6, #0x58]
	cmp		r0, #0x0
	bne		_080715bc
	mov		r0, #0x1
	str		r0, [r6, #0x58]
	mov		r0, #0xd0
	lsl		r0, r0, #0x4
	bl		sub_08002268
	b		_080715bc

.incbin "base.gba", 0x7159E, 0x2

_080715a0:	.4byte 0x0200CE28
_080715a4:	.4byte 0x0200CE3C
_080715a8:	.4byte 0x0200CE2C
_080715ac:	.4byte 0x0200CE40
_080715b0:	.4byte 0x0200CE30
_080715b4:	.4byte 0x0200CE44

_080715b8:
	mov		r0, #0x0
	str		r0, [r6, #0x58]
_080715bc:
	add		sp, #0x18
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080714e4

	thumb_func_start sub_080715c4
sub_080715c4:
	push	{ r4, lr }
	add		r4, r0, #0x0
_080715c8:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_080715c8
	thumb_func_end sub_080715c4

	thumb_func_start sub_080715d0
sub_080715d0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_080b74f4
	ldr		r0, _080715e8
	str		r0, [r4, #0xc]
	str		r5, [r4, #0x40]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_080715e8:	.4byte 0x080e24d4
	thumb_func_end sub_080715d0

	thumb_func_start sub_080715ec
sub_080715ec:
	ldr		r1, _080715f4
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x715F2, 0x2

_080715f4:	.4byte 0x0200BD4C
	thumb_func_end sub_080715ec

	thumb_func_start sub_080715f8
sub_080715f8:
	ldr		r1, _08071600
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x715FE, 0x2

_08071600:	.4byte 0x0200BD48
	thumb_func_end sub_080715f8

	thumb_func_start sub_08071604
sub_08071604:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r8, r0
	add		r4, r1, #0x0
	bl		sub_0800d74c
	add		r7, r0, #0x0
	ldr		r1, _08071664
	ldr		r0, _08071668
	str		r0, [r1, #0x0]
	ldr		r0, _0807166c
	add		r1, r4, #0x0
	bl		sub_0800ed80
	add		r5, r0, #0x0
	mov		r4, #0x0
	ldrb	r0, [r7, #0x0]
	cmp		r4, r0
	bge		_08071658
	mov		r9, r4
	mov		r6, #0xe
_08071632:
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	mov		r0, r9
	strh	r0, [r5, #0x28]
	strh	r6, [r5, #0x2a]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r6, #0xe
	add		r4, #0x1
	ldrb	r0, [r7, #0x0]
	cmp		r4, r0
	blt		_08071632
_08071658:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08071664:	.4byte 0x0200EB34
_08071668:	.4byte 0x0200D16C
_0807166c:	.4byte 0x0200AA18
	thumb_func_end sub_08071604

	thumb_func_start sub_08071670
sub_08071670:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08071684
	bl		sub_0800ed80
	mov		r1, #0xf
	bl		sub_0800f0d0
	pop		{ r0 }
	bx		r0

_08071684:	.4byte 0x0200AA18

.incbin "base.gba", 0x71688, 0x234
_080718bc:	.4byte 0x08071900

.incbin "base.gba", 0x718C0, 0x40
	thumb_func_end sub_08071670


.incbin "base.gba", 0x71900, 0x1B0
_08071ab0:	.4byte 0x08071af4

.incbin "base.gba", 0x71AB4, 0x41C
_08071ed0:	.4byte 0x08071f14

.incbin "base.gba", 0x71ED4, 0x280
_08072154:	.4byte 0x08072198

.incbin "base.gba", 0x72158, 0xFF8
_08073150:	.4byte 0x08073168

.incbin "base.gba", 0x73154, 0x558
	thumb_func_start sub_080736ac
sub_080736ac:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _080736c8
	bl		sub_0800223c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080736c8:	.4byte 0x00000D01
	thumb_func_end sub_080736ac

	thumb_func_start sub_080736cc
sub_080736cc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _080736e8
	bl		sub_0800223c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080736e8:	.4byte 0x00000D01
	thumb_func_end sub_080736cc

	thumb_func_start sub_080736ec
sub_080736ec:
	push	{ lr }
	ldr		r0, _08073704
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0x30]
	cmp		r2, r1
	bgt		_08073708
	ldr		r0, [r0, #0x38]
	add		r0, r2, r0
	cmp		r0, r1
	ble		_08073708
	mov		r0, #0x1
	b		_0807370a

_08073704:	.4byte 0x0200D5CC

_08073708:
	mov		r0, #0x0
_0807370a:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7370E, 0x156
	thumb_func_end sub_080736ec

	thumb_func_start sub_08073864
sub_08073864:
	push	{ r4, lr }
	ldr		r4, _08073884
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807387c
	ldr		r0, _08073888
	mov		r1, #0xa5
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807387c:
	ldr		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08073884:	.4byte 0x0200D5D0
_08073888:	.4byte 0x080d3eb0 @ h_asoh/news.cpp
	thumb_func_end sub_08073864

	thumb_func_start sub_0807388c
sub_0807388c:
	ldr		r1, _08073894
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x73892, 0x2

_08073894:	.4byte 0x0200D5CC
	thumb_func_end sub_0807388c

	thumb_func_start sub_08073898
sub_08073898:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x4
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x738A8, 0x1C
	thumb_func_end sub_08073898

	thumb_func_start sub_080738c4
sub_080738c4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r1, #0x1
	beq		_08073900
	cmp		r1, #0x1
	bgt		_080738d6
	cmp		r1, #0x0
	beq		_080738dc
	b		_08073910
_080738d6:
	cmp		r1, #0x2
	beq		_08073908
	b		_08073910
_080738dc:
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	bl		sub_080706ac
	add		r1, r4, #0x0
	add		r1, #0x40
	str		r1, [r0, #0x54]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_08073900:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08073900
_08073908:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_08073908
_08073910:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x73916, 0xC2
	thumb_func_end sub_080738c4

	thumb_func_start sub_080739d8
sub_080739d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r10, r0
	add		r6, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, _08073a14
	cmp		r1, r0
	bne		_080739f4
	b		_08073b98
_080739f4:
	cmp		r1, r0
	bhi		_08073a50
	sub		r0, #0x4
	cmp		r1, r0
	bne		_08073a00
	b		_08073b24
_08073a00:
	cmp		r1, r0
	bhi		_08073a18
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08073aa4
	add		r0, #0x1
	cmp		r1, r0
	beq		_08073ae0
	b		_08073fcc

.incbin "base.gba", 0x73A12, 0x2

_08073a14:	.4byte 0x00000B06

_08073a18:
	ldr		r0, _08073a44
	cmp		r1, r0
	bne		_08073a20
	b		_08073b6c
_08073a20:
	lsl		r4, r6, #0x2
	cmp		r1, r0
	bls		_08073a28
	b		_08073fd0
_08073a28:
	mov		r4, r10
	ldr		r0, _08073a48
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08073a34
	b		_08073b54
_08073a34:
	ldr		r0, _08073a4c
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	b		_08073b54

.incbin "base.gba", 0x73A42, 0x2

_08073a44:	.4byte 0x00000B04
_08073a48:	.4byte 0x0200D630
_08073a4c:	.4byte 0x080d3f90 @ n_taguchi/ntTutorial.h

_08073a50:
	ldr		r0, _08073a70
	cmp		r1, r0
	bne		_08073a58
	b		_08073ca0
_08073a58:
	cmp		r1, r0
	bhi		_08073a74
	sub		r0, #0x2
	cmp		r1, r0
	bne		_08073a64
	b		_08073bc8
_08073a64:
	add		r0, #0x1
	cmp		r1, r0
	bne		_08073a6c
	b		_08073c74
_08073a6c:
	b		_08073fcc

.incbin "base.gba", 0x73A6E, 0x2

_08073a70:	.4byte 0x00000B09

_08073a74:
	ldr		r0, _08073a8c
	cmp		r1, r0
	bne		_08073a7c
	b		_08073d28
_08073a7c:
	cmp		r1, r0
	bhi		_08073a94
	ldr		r0, _08073a90
	cmp		r1, r0
	bne		_08073a88
	b		_08073cc8
_08073a88:
	b		_08073fcc

.incbin "base.gba", 0x73A8A, 0x2

_08073a8c:	.4byte 0x00000F82
_08073a90:	.4byte 0x00000B0A

_08073a94:
	ldr		r0, _08073aa0
	cmp		r1, r0
	bne		_08073a9c
	b		_08073f5c
_08073a9c:
	b		_08073fcc

.incbin "base.gba", 0x73A9E, 0x2

_08073aa0:	.4byte 0x00000F83

_08073aa4:
	ldr		r4, _08073ad8
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073ab8
	ldr		r0, _08073adc
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073ab8:
	ldr		r5, [r4, #0x0]
	mov		r0, r10
	ldr		r4, [r0, #0x4]
	sub		r0, r4, #0x1
	cmp		r0, #0x4
	bls		_08073ad0
	ldr		r0, _08073adc
	mov		r1, #0xfb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073ad0:
	str		r4, [r5, #0x60]
	lsl		r4, r6, #0x2
	b		_08073fd0

.incbin "base.gba", 0x73AD6, 0x2

_08073ad8:	.4byte 0x0200D630
_08073adc:	.4byte 0x080d3f90 @ n_taguchi/ntTutorial.h

_08073ae0:
	ldr		r4, _08073b1c
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073af4
	ldr		r0, _08073b20
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073af4:
	ldr		r5, [r4, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x4]
	sub		r4, r0, #0x1
	cmp		r4, #0x0
	blt		_08073b06
	ldr		r0, [r5, #0x60]
	cmp		r4, r0
	blt		_08073b14
_08073b06:
	ldr		r0, _08073b20
	mov		r1, #0x83
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073b14:
	str		r4, [r5, #0x68]
	lsl		r4, r6, #0x2
	b		_08073fd0

.incbin "base.gba", 0x73B1A, 0x2

_08073b1c:	.4byte 0x0200D630
_08073b20:	.4byte 0x080d3f90 @ n_taguchi/ntTutorial.h

_08073b24:
	ldr		r4, _08073b4c
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073b38
	ldr		r0, _08073b50
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073b38:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x68]
	mov		r3, r10
	ldr		r2, [r3, #0x4]
	add		r3, #0x8
	bl		sub_0807be30
	lsl		r4, r6, #0x2
	b		_08073fd0

.incbin "base.gba", 0x73B4A, 0x2

_08073b4c:	.4byte 0x0200D630
_08073b50:	.4byte 0x080d3f90 @ n_taguchi/ntTutorial.h

_08073b54:
	ldr		r0, _08073b68
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x68]
	ldr		r2, [r4, #0x4]
	add		r3, r4, #0x0
	add		r3, #0x8
	bl		sub_0807b7b4
	lsl		r4, r6, #0x2
	b		_08073fd0

_08073b68:	.4byte 0x0200D630

_08073b6c:
	ldr		r4, _08073b90
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073b80
	ldr		r0, _08073b94
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073b80:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	lsl		r4, r6, #0x2
	b		_08073fd0

_08073b90:	.4byte 0x0200D630
_08073b94:	.4byte 0x080d3f90 @ n_taguchi/ntTutorial.h

_08073b98:
	ldr		r4, _08073bc0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073bac
	ldr		r0, _08073bc4
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073bac:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x68]
	mov		r3, r10
	ldr		r2, [r3, #0x4]
	add		r3, #0x8
	bl		sub_0807b874
	lsl		r4, r6, #0x2
	b		_08073fd0

.incbin "base.gba", 0x73BBE, 0x2

_08073bc0:	.4byte 0x0200D630
_08073bc4:	.4byte 0x080d3f90 @ n_taguchi/ntTutorial.h

_08073bc8:
	ldr		r4, _08073c68
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073bdc
	ldr		r0, _08073c6c
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073bdc:
	ldr		r7, [r4, #0x0]
	mov		r0, r10
	ldr		r4, [r0, #0x4]
	cmp		r4, #0xe
	bls		_08073bf4
	ldr		r0, _08073c6c
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073bf4:
	str		r4, [r7, #0x5c]
	mov		r1, r10
	add		r1, #0x8
	str		r1, [sp, #0x8]
	mov		r2, r10
	ldr		r1, [r2, #0x8]
	ldr		r0, [r7, #0x70]
	cmp		r1, r0
	bcc		_08073c12
	ldr		r0, _08073c6c
	ldr		r1, _08073c70
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073c12:
	lsl		r4, r6, #0x2
	mov		r3, #0xc
	add		r3, r10
	mov		r8, r3
	mov		r0, #0xb6
	lsl		r0, r0, #0x1
	add		r6, r7, r0
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	add		r5, r7, r1
	mov		r2, #0x4
	mov		r9, r2
_08073c2a:
	mov		r3, r8
	ldr		r1, [r3, #0x0]
	ldr		r0, [r7, #0x70]
	cmp		r1, r0
	bcc		_08073c42
	ldr		r0, _08073c6c
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073c42:
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	str		r0, [r5, #0x0]
	mov		r2, r8
	add		r2, #0x4
	mov		r8, r2
	sub		r2, #0x4
	ldmia	r2!, { r0 }
	str		r0, [r6, #0x0]
	add		r6, #0x8
	add		r5, #0x8
	mov		r3, #0x1
	neg		r3, r3
	add		r9, r3
	mov		r0, r9
	cmp		r0, #0x0
	bge		_08073c2a
	b		_08073fd0

.incbin "base.gba", 0x73C66, 0x2

_08073c68:	.4byte 0x0200D630
_08073c6c:	.4byte 0x080d3f90 @ n_taguchi/ntTutorial.h
_08073c70:	.4byte 0x00000159

_08073c74:
	ldr		r4, _08073c98
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073c88
	ldr		r0, _08073c9c
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073c88:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x68]
	mov		r2, r10
	bl		sub_0807b918
	lsl		r4, r6, #0x2
	b		_08073fd0

.incbin "base.gba", 0x73C96, 0x2

_08073c98:	.4byte 0x0200D630
_08073c9c:	.4byte 0x080d3f90 @ n_taguchi/ntTutorial.h

_08073ca0:
	ldr		r4, _08073cc0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073cb4
	ldr		r0, _08073cc4
	mov		r1, #0x6d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073cb4:
	ldr		r0, [r4, #0x0]
	bl		sub_0807c494
	lsl		r4, r6, #0x2
	b		_08073fd0

.incbin "base.gba", 0x73CBE, 0x2

_08073cc0:	.4byte 0x0200D634
_08073cc4:	.4byte 0x080d3fa8 @ n_taguchi/ntFinale.h

_08073cc8:
	ldr		r4, _08073d20
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08073cdc
	ldr		r0, _08073d24
	mov		r1, #0x6d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073cdc:
	ldr		r5, [r4, #0x0]
	mov		r1, r10
	ldr		r4, [r1, #0x4]
	mov		r7, r10
	add		r7, #0x8
	ldr		r2, [r1, #0x10]
	mov		r8, r2
	cmp		r4, #0x1
	bls		_08073cfa
	ldr		r0, _08073d24
	mov		r1, #0x9f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08073cfa:
	lsl		r0, r4, #0x3
	sub		r0, r0, r4
	lsl		r0, r0, #0x2
	add		r1, r0, r5
	add		r1, #0xa8
	ldr		r2, [r1, #0x4]
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x0]
	str		r2, [sp, #0x4]
	add		r0, #0xa8
	add		r0, r5, r0
	mov		r1, sp
	add		r2, r7, #0x0
	mov		r3, r8
	bl		sub_0807c6d4
	lsl		r4, r6, #0x2
	b		_08073fd0

.incbin "base.gba", 0x73D1E, 0x2

_08073d20:	.4byte 0x0200D634
_08073d24:	.4byte 0x080d3fa8 @ n_taguchi/ntFinale.h

_08073d28:
	lsl		r1, r3, #0x10
	mov		r3, #0xe7
	lsl		r3, r3, #0x18
	add		r0, r1, r3
	asr		r0, r0, #0x10
	add		r5, r1, #0x0
	cmp		r0, #0x13
	bls		_08073d3a
	b		_08073fc8
_08073d3a:
	lsl		r0, r0, #0x2
	ldr		r1, _08073d44
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08073d44:	.4byte 0x08073d48
_08073d48:	.4byte 0x08073d98

.incbin "base.gba", 0x73D4C, 0x4C
	thumb_func_end sub_080739d8


.incbin "base.gba", 0x73D98, 0x1C4

_08073f5c:

.incbin "base.gba", 0x73F5C, 0x14
_08073f70:

.incbin "base.gba", 0x73F70, 0x10
_08073f80:	.4byte 0x00002901

_08073f84:

.incbin "base.gba", 0x73F84, 0x10
_08073f94:	.4byte 0x00002902

_08073f98:

.incbin "base.gba", 0x73F98, 0x14
_08073fac:	.4byte 0x00002903
_08073fb0:	.4byte 0x0200BEFC

_08073fb4:

.incbin "base.gba", 0x73FB4, 0x10
_08073fc4:	.4byte 0x00002904

_08073fc8:

.incbin "base.gba", 0x73FC8, 0x4
_08073fcc:

.incbin "base.gba", 0x73FCC, 0x4
_08073fd0:

.incbin "base.gba", 0x73FD0, 0x4
_08073fd4:

.incbin "base.gba", 0x73FD4, 0x10
	thumb_func_start sub_08073fe4
sub_08073fe4:
	push	{ r4, lr }
	sub		sp, #0x20
	add		r4, r0, #0x0
	ldr		r3, _080740bc
	ldrb	r0, [r3, #0x1]
	add		r1, sp, #0x10
	strb	r0, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xd1
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x11
	strb	r2, [r0, #0x0]
	ldr		r2, _080740c0
	add		r0, r3, r2
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x12
	strb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x21
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x13
	strb	r2, [r0, #0x0]
	ldr		r2, _080740c4
	add		r0, r3, r2
	ldrb	r2, [r0, #0x0]
	add		r0, sp, #0x14
	strb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xf1
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x15
	strb	r2, [r0, #0x0]
	ldr		r2, _080740c8
	add		r0, r3, r2
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x16
	strb	r2, [r0, #0x0]
	ldr		r2, _080740cc
	add		r0, r3, r2
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x17
	strb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xa1
	ldrb	r2, [r0, #0x0]
	add		r0, sp, #0x18
	strb	r2, [r0, #0x0]
	ldr		r2, _080740d0
	add		r0, r3, r2
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x19
	strb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x81
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x1a
	strb	r2, [r0, #0x0]
	ldr		r2, _080740d4
	add		r0, r3, r2
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x1b
	strb	r2, [r0, #0x0]
	ldr		r2, _080740d8
	add		r0, r3, r2
	ldrb	r2, [r0, #0x0]
	add		r0, sp, #0x1c
	strb	r2, [r0, #0x0]
	ldr		r2, _080740dc
	add		r0, r3, r2
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x1d
	strb	r2, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x41
	ldrb	r2, [r0, #0x0]
	mov		r0, sp
	add		r0, #0x1e
	strb	r2, [r0, #0x0]
	mov		r0, sp
	mov		r2, #0xf
	bl		sub_0808c818
	cmp		r4, #0xe
	ble		_080740ac
	ldr		r0, _080740e0
	mov		r1, #0x42
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080740ac:
	mov		r1, sp
	add		r0, r1, r4
	ldrb	r0, [r0, #0x0]
	add		sp, #0x20
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x740BA, 0x2

_080740bc:	.4byte 0x02000CA0
_080740c0:	.4byte 0x00000131
_080740c4:	.4byte 0x00000191
_080740c8:	.4byte 0x000001D1
_080740cc:	.4byte 0x00000151
_080740d0:	.4byte 0x00000171
_080740d4:	.4byte 0x00000111
_080740d8:	.4byte 0x000001B1
_080740dc:	.4byte 0x000001F1
_080740e0:	.4byte 0x080d3fc4 @ n_taguchi/ntCommon.cpp
	thumb_func_end sub_08073fe4

	thumb_func_start sub_080740e4
sub_080740e4:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	mov		r5, #0x0
	ldrsb	r5, [r6, r5]
	mov		r4, #0x1
	ldrsb	r4, [r6, r4]
	mov		r7, #0x2
	ldrsb	r7, [r6, r7]
	add		r5, r5, r1
	cmp		r5, #0x63
	ble		_08074130
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	add		r4, r4, r0
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	add		r5, r0, #0x0
	cmp		r4, #0x3b
	ble		_08074130
	add		r0, r4, #0x0
	mov		r1, #0x3c
	bl		sub_080bbcac
	add		r7, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x3c
	bl		sub_080bbd44
	add		r4, r0, #0x0
	cmp		r7, #0x9
	ble		_08074130
	mov		r5, #0x63
	mov		r4, #0x3b
	mov		r7, #0x9
_08074130:
	strb	r5, [r6, #0x0]
	strb	r4, [r6, #0x1]
	strb	r7, [r6, #0x2]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080740e4

	thumb_func_start sub_0807413c
sub_0807413c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r5, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08074156
	ldr		r0, _08074174
	mov		r1, #0x8b
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08074156:
	ldr		r0, [r4, #0x4]
	cmp		r5, r0
	bge		_0807416a
	ldr		r2, [r4, #0x0]
	add		r1, r0, #0x0
_08074160:
	ldmia	r2!, { r0 }
	orr		r5, r0
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_08074160
_0807416a:
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x74172, 0x2

_08074174:	.4byte 0x080d3fc4 @ n_taguchi/ntCommon.cpp
	thumb_func_end sub_0807413c

	thumb_func_start sub_08074178
sub_08074178:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08074190
	ldr		r0, _080741b8
	ldr		r1, _080741bc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08074190:
	ldr		r0, [r4, #0x8]
	ldr		r1, [r4, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	str		r5, [r0, #0x0]
	ldr		r0, [r4, #0x8]
	add		r0, #0x1
	str		r0, [r4, #0x8]
	ldr		r1, [r4, #0x4]
	cmp		r0, r1
	blt		_080741b0
	mov		r0, #0x0
	str		r0, [r4, #0x8]
	ldr		r0, [r4, #0xc]
	add		r0, #0x1
	str		r0, [r4, #0xc]
_080741b0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x741B6, 0x2

_080741b8:	.4byte 0x080d3fc4 @ n_taguchi/ntCommon.cpp
_080741bc:	.4byte 0x00000107
	thumb_func_end sub_08074178

	thumb_func_start sub_080741c0
sub_080741c0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080741d6
	ldr		r0, _080741f8
	mov		r1, #0xfa
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080741d6:
	mov		r1, #0x0
	ldr		r0, [r4, #0x4]
	cmp		r1, r0
	bge		_080741ec
	mov		r3, #0x0
	ldr		r2, [r4, #0x0]
_080741e2:
	stmia	r2!, {  r3 }
	add		r1, #0x1
	ldr		r0, [r4, #0x4]
	cmp		r1, r0
	blt		_080741e2
_080741ec:
	mov		r0, #0x0
	str		r0, [r4, #0x8]
	str		r0, [r4, #0xc]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080741f8:	.4byte 0x080d3fc4 @ n_taguchi/ntCommon.cpp
	thumb_func_end sub_080741c0

	thumb_func_start sub_080741fc
sub_080741fc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807420c
	bl		sub_0808afd0
_0807420c:
	lsl		r0, r5, #0x2
	bl		sub_0808afb8
	str		r0, [r4, #0x0]
	str		r5, [r4, #0x4]
	add		r0, r4, #0x0
	bl		sub_080741c0
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x74222, 0x2
	thumb_func_end sub_080741fc

	thumb_func_start sub_08074224
sub_08074224:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08074234
	bl		sub_0808afd0
_08074234:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08074242
	add		r0, r4, #0x0
	bl		sub_0808afac
_08074242:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08074224

	thumb_func_start sub_08074248
sub_08074248:
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x7424E, 0x2
	thumb_func_end sub_08074248

	thumb_func_start sub_08074250
sub_08074250:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	add		r7, r3, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08074276
	bl		sub_0808e278
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808e03c
	ldr		r0, [r4, #0x0]
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	bl		sub_0808e3c0
_08074276:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08074250

	thumb_func_start sub_0807427c
sub_0807427c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080742a4
	bl		sub_0808e278
	ldr		r0, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_0808e03c
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0x80
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	mov		r1, #0x0
	bl		sub_0808e3c0
_080742a4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x742AA, 0x2
	thumb_func_end sub_0807427c

	thumb_func_start sub_080742ac
sub_080742ac:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080742c0
	mov		r1, #0x3
	bl		sub_0808e28c
	mov		r0, #0x0
	str		r0, [r4, #0x0]
_080742c0:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x742C6, 0x2
	thumb_func_end sub_080742ac

	thumb_func_start sub_080742c8
sub_080742c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r9, r1
	add		r7, r2, #0x0
	mov		r8, r3
	str		r7, [r5, #0x4]
	str		r3, [r5, #0x8]
	ldr		r6, [r5, #0x0]
	cmp		r6, #0x0
	bne		_080742fc
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	b		_08074302
_080742fc:
	add		r0, r6, #0x0
	bl		sub_0808e278
_08074302:
	ldr		r0, [r5, #0x0]
	mov		r1, r9
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	add		r0, #0x69
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	asr		r1, r7, #0x10
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	mov		r2, r8
	asr		r1, r2, #0x10
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x5c
	ldr		r1, [sp, #0x0+0x1c]
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7434A, 0x2
	thumb_func_end sub_080742c8

	thumb_func_start sub_0807434c
sub_0807434c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080742ac
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08074364
	add		r0, r5, #0x0
	bl		sub_0808afac
_08074364:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7436A, 0x2
	thumb_func_end sub_0807434c

	thumb_func_start sub_0807436c
sub_0807436c:
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	str		r1, [r0, #0x8]
	str		r1, [r0, #0x4]
	bx		lr

.incbin "base.gba", 0x74376, 0x2
	thumb_func_end sub_0807436c

	thumb_func_start sub_08074378
sub_08074378:
	push	{ lr }
	ldr		r0, _08074388
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0807438c
	mov		r0, #0x1
	b		_080743a8

_08074388:	.4byte 0x000004BB

_0807438c:
	ldr		r0, _0807439c
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080743a0
	mov		r0, #0x2
	b		_080743a8

.incbin "base.gba", 0x7439A, 0x2

_0807439c:	.4byte 0x000004BC

_080743a0:
	ldr		r0, _080743ac
	bl		sub_0800227c
	mov		r0, #0x0
_080743a8:
	pop		{ r1 }
	bx		r1

_080743ac:	.4byte 0x000004BA
	thumb_func_end sub_08074378

	thumb_func_start sub_080743b0
sub_080743b0:
	push	{ lr }
	bl		sub_0806fd84
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x743BA, 0x2
	thumb_func_end sub_080743b0

	thumb_func_start sub_080743bc
sub_080743bc:
	push	{ r4, r5, r6, lr }
	mov		r6, r10
	mov		r5, r9
	mov		r4, r8
	push	{ r4, r5, r6 }
	add		r5, r0, #0x0
	mov		r9, r1
	mov		r10, r2
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r6, #0x0
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x53
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	add		r0, #0x69
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	add		r0, #0x5c
	mov		r2, #0x1
	mov		r8, r2
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x4]
	add		r0, r4, #0x0
	mov		r1, #0x53
	bl		sub_0808e03c
	ldr		r0, [r5, #0x4]
	add		r0, #0x69
	mov		r1, r8
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x4]
	add		r0, #0x5c
	strh	r6, [r0, #0x0]
	ldr		r0, [r5, #0x4]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x4]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r2, r9
	str		r2, [r5, #0x8]
	mov		r0, r10
	str		r0, [r5, #0xc]
	str		r6, [r5, #0x10]
	str		r6, [r5, #0x14]
	str		r6, [r5, #0x18]
	str		r6, [r5, #0x1c]
	str		r6, [r5, #0x20]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080743bc

	thumb_func_start sub_08074470
sub_08074470:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_080744da
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	beq		_080744da
	ldr		r0, [r4, #0x1c]
	cmp		r0, #0x0
	beq		_080744da
	ldr		r1, _080744e0
	ldr		r0, [r1, #0x0]
	ldr		r2, [r1, #0x4]
	asr		r0, r0, #0x8
	ldr		r1, [r4, #0x8]
	sub		r6, r1, r0
	asr		r2, r2, #0x8
	ldr		r0, [r4, #0xc]
	sub		r5, r0, r2
	add		r1, r6, #0x0
	add		r1, #0x40
	ldr		r0, _080744e4
	cmp		r1, r0
	bhi		_080744da
	mov		r0, #0x20
	neg		r0, r0
	cmp		r5, r0
	blt		_080744da
	cmp		r5, #0xbf
	bgt		_080744da
	add		r0, r3, #0x0
	add		r0, #0x54
	strh	r6, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
	ldr		r1, [r4, #0x4]
	mov		r2, #0x12
	ldrsh	r0, [r4, r2]
	add		r0, r6, r0
	sub		r0, #0x1e
	add		r1, #0x54
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x4]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0x4]
	bl		sub_0808e4a0
_080744da:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080744e0:	.4byte 0x0200D5D4
_080744e4:	.4byte 0x0000016F
	thumb_func_end sub_08074470

	thumb_func_start sub_080744e8
sub_080744e8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	mov		r0, #0x0
	mov		r8, r0
	add		r5, r7, #0x0
	mov		r0, #0xc
	add		r0, r0, r7
	mov		r9, r0
_080744fe:
	ldr		r6, [r5, #0x0]
	cmp		r6, #0x0
	bne		_0807451e
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	b		_08074524
_0807451e:
	add		r0, r6, #0x0
	bl		sub_0808e278
_08074524:
	ldr		r0, [r5, #0x0]
	mov		r1, #0x54
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r0, r8
	strh	r0, [r5, #0x4]
	strh	r0, [r5, #0x6]
	strh	r0, [r5, #0x8]
	add		r5, #0xc
	cmp		r5, r9
	ble		_080744fe
	mov		r1, #0x0
	str		r1, [r7, #0x1c]
	str		r1, [r7, #0x18]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r7, #0x24]
	str		r1, [r7, #0x28]
	str		r1, [r7, #0x2c]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080744e8

	thumb_func_start sub_08074568
sub_08074568:
	push	{ lr }
	add		r3, r0, #0x0
	ldr		r0, [r3, #0x24]
	cmp		r0, #0x1
	beq		_0807459a
	cmp		r0, #0x1
	bgt		_0807457c
	cmp		r0, #0x0
	beq		_08074582
	b		_080745c8
_0807457c:
	cmp		r0, #0x2
	beq		_080745b0
	b		_080745c8
_08074582:
	ldrh	r1, [r3, #0x8]
	mov		r2, #0x2
	neg		r2, r2
	add		r0, r2, #0x0
	and		r0, r1
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r3, #0x8]
	ldrh	r0, [r3, #0x14]
	and		r2, r0
	strh	r2, [r3, #0x14]
	b		_080745c8
_0807459a:
	ldrh	r2, [r3, #0x8]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r1, #0x0
	and		r0, r2
	strh	r0, [r3, #0x8]
	ldrh	r0, [r3, #0x14]
	and		r1, r0
	mov		r0, #0x1
	orr		r1, r0
	b		_080745c6
_080745b0:
	ldrh	r2, [r3, #0x8]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r1, #0x0
	and		r0, r2
	mov		r2, #0x1
	orr		r0, r2
	strh	r0, [r3, #0x8]
	ldrh	r0, [r3, #0x14]
	and		r1, r0
	orr		r1, r2
_080745c6:
	strh	r1, [r3, #0x14]
_080745c8:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08074568

	thumb_func_start sub_080745cc
sub_080745cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r3, r0, #0x0
	ldr		r0, [r3, #0x20]
	cmp		r0, #0x0
	beq		_0807464a
	ldr		r1, _08074658
	ldr		r0, [r1, #0x0]
	ldr		r2, [r1, #0x4]
	asr		r0, r0, #0x8
	ldr		r1, [r3, #0x18]
	sub		r5, r1, r0
	asr		r2, r2, #0x8
	ldr		r0, [r3, #0x1c]
	sub		r7, r0, r2
	add		r1, r5, #0x0
	add		r1, #0x40
	ldr		r0, _0807465c
	cmp		r1, r0
	bhi		_0807464a
	mov		r0, #0x20
	neg		r0, r0
	cmp		r7, r0
	blt		_0807464a
	cmp		r7, #0xbf
	bgt		_0807464a
	mov		r0, #0x0
	mov		r9, r0
	mov		r1, #0x1
	mov		r8, r1
	add		r4, r3, #0x0
	sub		r5, #0x8
	mov		r6, #0x1
_08074612:
	mov		r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	beq		_08074640
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08074640
	add		r0, #0x54
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x56
	strh	r7, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, r9
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x69
	mov		r1, r8
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
_08074640:
	add		r4, #0xc
	add		r5, #0x10
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08074612
_0807464a:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x74656, 0x2

_08074658:	.4byte 0x0200D5D4
_0807465c:	.4byte 0x0000016F
	thumb_func_end sub_080745cc

	thumb_func_start sub_08074660
sub_08074660:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	cmp		r4, #0x1
	ble		_0807467a
	ldr		r0, _080746c8
	mov		r1, #0xdd
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807467a:
	cmp		r5, #0x9
	ble		_0807468a
	ldr		r0, _080746c8
	ldr		r1, _080746cc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807468a:
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	add		r4, r6, r0
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	beq		_080746c0
	mov		r2, #0x6
	ldrsh	r0, [r4, r2]
	cmp		r0, r5
	beq		_080746c0
	add		r0, r1, #0x0
	bl		sub_0808e278
	ldr		r0, [r4, #0x0]
	mov		r1, #0x54
	bl		sub_0808e03c
	ldr		r0, [r4, #0x0]
	add		r1, r0, #0x0
	add		r1, #0x80
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	add		r1, r5, #0x0
	bl		sub_0808e3c0
	strh	r5, [r4, #0x6]
_080746c0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x746C6, 0x2

_080746c8:	.4byte 0x080d3ff8 @ n_taguchi/ntSwimming.cpp
_080746cc:	.4byte 0x000001BB
	thumb_func_end sub_08074660

	thumb_func_start sub_080746d0
sub_080746d0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08074748
	str		r0, [r5, #0x4c]
	ldr		r0, _0807474c
	str		r0, [r5, #0x54]
	ldr		r0, _08074750
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x88
	mov		r2, #0x3
	mov		r1, #0x0
	mov		r3, #0x1
	neg		r3, r3
_080746f8:
	strb	r1, [r0, #0x0]
	strb	r1, [r0, #0x1]
	strb	r1, [r0, #0x2]
	add		r0, #0x3
	sub		r2, #0x1
	cmp		r2, r3
	bne		_080746f8
	add		r0, r5, #0x0
	add		r0, #0x98
	mov		r2, #0x3
	add		r6, r5, #0x0
	add		r6, #0xb0
	mov		r1, #0x0
	mov		r3, #0x1
	neg		r3, r3
_08074716:
	strb	r1, [r0, #0x0]
	strb	r1, [r0, #0x1]
	strb	r1, [r0, #0x2]
	add		r0, #0x3
	sub		r2, #0x1
	cmp		r2, r3
	bne		_08074716
	ldr		r0, _08074754
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	ldr		r0, _08074758
	str		r4, [r0, #0x0]
	str		r4, [r5, #0x64]
	str		r4, [r5, #0x68]
	str		r4, [r5, #0x6c]
	str		r4, [r5, #0x70]
	add		r0, r5, #0x0
	bl		sub_08074874
	str		r4, [r6, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x74746, 0x2

_08074748:	.4byte 0x080e25a4
_0807474c:	.4byte 0x080e258c
_08074750:	.4byte 0x080e25bc
_08074754:	.4byte 0x0200D5E4
_08074758:	.4byte 0x0200D5E8
	thumb_func_end sub_080746d0

	thumb_func_start sub_0807475c
sub_0807475c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	ldr		r0, _08074850
	str		r0, [r6, #0x4c]
	ldr		r0, _08074854
	str		r0, [r6, #0x54]
	ldr		r0, _08074858
	str		r0, [r6, #0xc]
	ldr		r1, _0807485c
	ldr		r0, [r1, #0x0]
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_080747a2
	add		r5, r4, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08074790
	mov		r1, #0x3
	bl		sub_0808e28c
_08074790:
	ldr		r0, [r5, #0x4]
	cmp		r0, #0x0
	beq		_0807479c
	mov		r1, #0x3
	bl		sub_0808e28c
_0807479c:
	add		r0, r4, #0x0
	bl		sub_0808afac
_080747a2:
	ldr		r1, _08074860
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	ldr		r1, _08074864
	mov		r8, r1
	ldr		r2, _08074868
	mov		r9, r2
	mov		r1, #0x40
	add		r1, r1, r6
	mov		r10, r1
	cmp		r0, #0x0
	beq		_080747da
	add		r7, r0, #0x0
	add		r4, r7, #0x0
	mov		r5, #0x1
_080747c0:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080747cc
	mov		r1, #0x3
	bl		sub_0808e28c
_080747cc:
	add		r4, #0xc
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080747c0
	add		r0, r7, #0x0
	bl		sub_0808afac
_080747da:
	ldr		r0, [r6, #0x64]
	cmp		r0, #0x0
	beq		_080747e6
	mov		r1, #0x3
	bl		sub_08076ddc
_080747e6:
	ldr		r0, [r6, #0x68]
	cmp		r0, #0x0
	beq		_080747f2
	mov		r1, #0x3
	bl		sub_08076e68
_080747f2:
	ldr		r0, [r6, #0x6c]
	cmp		r0, #0x0
	beq		_080747fe
	mov		r1, #0x3
	bl		sub_08076e68
_080747fe:
	ldr		r0, [r6, #0x70]
	cmp		r0, #0x0
	beq		_0807480a
	mov		r1, #0x3
	bl		sub_08076e68
_0807480a:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	str		r1, [r0, #0x0]
	ldr		r0, _0807486c
	str		r1, [r0, #0x0]
	ldr		r0, _08074870
	str		r1, [r0, #0x0]
	mov		r0, r10
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	ldr		r1, [sp, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807483e
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0807483e:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7484E, 0x2

_08074850:	.4byte 0x080e25a4
_08074854:	.4byte 0x080e258c
_08074858:	.4byte 0x080e25bc
_0807485c:	.4byte 0x080d4014
_08074860:	.4byte 0x080d4018
_08074864:	.4byte 0x080d401c
_08074868:	.4byte 0x080d4020
_0807486c:	.4byte 0x0200D5E4
_08074870:	.4byte 0x0200D5E8
	thumb_func_end sub_0807475c

	thumb_func_start sub_08074874
sub_08074874:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r5, r0, #0x0
	bl		sub_080743b0
	add		r4, r5, #0x0
	add		r4, #0x80
	str		r0, [r4, #0x0]
	mov		r6, #0x0
	str		r6, [r5, #0x58]
	str		r6, [r5, #0x5c]
	ldr		r0, [r5, #0x64]
	cmp		r0, #0x0
	bne		_080748a4
	mov		r0, #0x38
	bl		sub_0808af94
	bl		sub_08076e20
	str		r0, [r5, #0x64]
_080748a4:
	ldr		r0, [r5, #0x68]
	cmp		r0, #0x0
	bne		_080748ba
	mov		r0, #0x30
	bl		sub_0808af94
	ldr		r2, [r4, #0x0]
	mov		r1, #0x1
	bl		sub_08076eac
	str		r0, [r5, #0x68]
_080748ba:
	ldr		r0, [r5, #0x6c]
	cmp		r0, #0x0
	bne		_080748d0
	mov		r0, #0x30
	bl		sub_0808af94
	ldr		r2, [r4, #0x0]
	mov		r1, #0x2
	bl		sub_08076eac
	str		r0, [r5, #0x6c]
_080748d0:
	ldr		r0, [r5, #0x70]
	cmp		r0, #0x0
	bne		_080748e6
	mov		r0, #0x30
	bl		sub_0808af94
	ldr		r2, [r4, #0x0]
	mov		r1, #0x3
	bl		sub_08076eac
	str		r0, [r5, #0x70]
_080748e6:
	ldr		r4, _080749d0
	mov		r0, #0x24
	bl		sub_0808af94
	str		r6, [r0, #0x0]
	str		r6, [r0, #0x4]
	str		r0, [r4, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080743bc
	ldr		r0, [r4, #0x0]
	str		r6, [r0, #0x1c]
	mov		r0, #0x30
	bl		sub_0808af94
	add		r6, r0, #0x0
	add		r7, r5, #0x0
	add		r7, #0xa8
	mov		r0, #0xac
	add		r0, r0, r5
	mov		r8, r0
	mov		r1, #0x54
	add		r1, r1, r5
	mov		r9, r1
	mov		r0, #0x88
	add		r0, r0, r5
	mov		r10, r0
	mov		r1, sp
	add		r1, #0x1
	str		r1, [sp, #0xC]
	add		r0, r5, #0x0
	add		r0, #0x89
	str		r0, [sp, #0x10]
	add		r1, #0x1
	str		r1, [sp, #0x14]
	add		r0, #0x1
	str		r0, [sp, #0x18]
	add		r1, r5, #0x0
	add		r1, #0xa4
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	add		r0, r6, #0x0
	mov		r2, #0x1
_0807493e:
	str		r1, [r0, #0x0]
	strh	r1, [r0, #0x4]
	strh	r1, [r0, #0x6]
	strh	r1, [r0, #0x8]
	add		r0, #0xc
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0807493e
	mov		r4, #0x0
	str		r4, [r6, #0x20]
	add		r0, r6, #0x0
	bl		sub_080744e8
	ldr		r0, _080749d4
	str		r6, [r0, #0x0]
	add		r0, r6, #0x0
	str		r4, [r0, #0x20]
	ldr		r0, _080749d8
	str		r4, [r0, #0x0]
	str		r4, [r0, #0x4]
	str		r4, [r5, #0x74]
	str		r4, [r7, #0x0]
	mov		r1, r8
	str		r4, [r1, #0x0]
	bl		sub_080706ac
	mov		r1, r9
	str		r1, [r0, #0x54]
	ldr		r1, _080749dc
	add		r0, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	add		r1, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	mov		r1, r10
	strb	r0, [r1, #0x0]
	ldr		r1, [sp, #0xC]
	ldrb	r0, [r1, #0x0]
	ldr		r1, [sp, #0x10]
	strb	r0, [r1, #0x0]
	ldr		r1, [sp, #0x14]
	ldrb	r0, [r1, #0x0]
	ldr		r1, [sp, #0x18]
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_08075824
	ldr		r0, _080749e0
	ldr		r1, _080749e4
	ldr		r2, _080749e8
	bl		sub_08006100
	ldr		r0, [sp, #0x8]
	str		r4, [r0, #0x0]
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080749d0:	.4byte 0x0200D5E4
_080749d4:	.4byte 0x0200D5E8
_080749d8:	.4byte 0x0200D5D4
_080749dc:	.4byte 0x080d3fdc
_080749e0:	.4byte 0x02000D3C
_080749e4:	.4byte 0x80808080
_080749e8:	.4byte 0x080d4024
	thumb_func_end sub_08074874

	thumb_func_start sub_080749ec
sub_080749ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r7, r0, #0x0
	mov		r0, #0xd8
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08074a08
	b		_08074b68
_08074a08:
	mov		r6, #0x0
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0xc
	bl		sub_0808c828
	b		_08074ada
_08074a16:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_08074a26
	b		_08074b68
_08074a26:
	mov		r0, #0x0
	mov		r1, #0x20
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08074a46
	lsl		r0, r6, #0x2
	mov		r2, sp
	add		r1, r2, r0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_08074a92
	str		r4, [r1, #0x0]
	b		_08074a92
_08074a46:
	mov		r0, #0x0
	mov		r1, #0x10
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08074a68
	lsl		r0, r6, #0x2
	mov		r2, sp
	add		r1, r2, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x2
	ble		_08074a92
	mov		r0, #0x2
	str		r0, [r1, #0x0]
	b		_08074a92
_08074a68:
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08074a7e
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08074a92
	mov		r6, #0x0
	b		_08074a92
_08074a7e:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_08074a92
	add		r6, #0x1
	cmp		r6, #0x1
	ble		_08074a92
	mov		r6, #0x1
_08074a92:
	add		r4, sp, #0xc
	ldr		r1, _08074b84
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r5, sp, #0x10
	ldr		r1, _08074b88
	add		r0, r5, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_0808b0cc
	ldr		r0, _08074b8c
	bl		sub_0808b240
	ldr		r0, _08074b90
	add		r4, r4, r6
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r2, [sp, #0x0]
	bl		sub_0808b240
	ldr		r0, _08074b94
	add		r5, r5, r6
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	ldr		r2, [sp, #0x4]
	bl		sub_0808b240
	add		r0, r7, #0x0
	bl		sub_080b7690
_08074ada:
	bl		sub_0808b264
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08074a16
	mov		r0, #0x0
	mov		r8, r0
	add		r1, r7, #0x0
	add		r1, #0x68
	str		r1, [sp, #0x14]
	ldr		r2, _08074b98
	mov		r9, r2
	mov		r10, r0
_08074afa:
	mov		r1, r8
	lsl		r0, r1, #0x2
	ldr		r2, [sp, #0x14]
	add		r5, r2, r0
	ldr		r6, [r5, #0x0]
	ldr		r4, [sp, #0x0]
	cmp		r4, #0x2
	bls		_08074b16
	mov		r0, r9
	ldr		r1, _08074b9c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08074b16:
	str		r4, [r6, #0x28]
	ldr		r6, [r5, #0x0]
	ldr		r4, [sp, #0x4]
	cmp		r4, #0x2
	bls		_08074b2c
	mov		r0, r9
	ldr		r1, _08074ba0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08074b2c:
	str		r4, [r6, #0x2c]
	ldr		r5, [r5, #0x0]
	mov		r0, #0x1
	add		r8, r0
	mov		r2, #0x0
	add		r4, r5, #0x0
	add		r4, #0x18
	mov		r6, #0x3
_08074b3c:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08074b4e
	mov		r1, #0x3
	str		r2, [sp, #0x18]
	bl		sub_08076d58
	ldr		r2, [sp, #0x18]
	str		r2, [r4, #0x0]
_08074b4e:
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08074b3c
	mov		r1, r10
	str		r1, [r5, #0x8]
	str		r1, [r5, #0xc]
	add		r0, r5, #0x0
	bl		sub_08075cdc
	mov		r2, r8
	cmp		r2, #0x2
	ble		_08074afa
_08074b68:
	ldr		r0, _08074ba4
	ldr		r4, [r0, #0x0]
	ldr		r0, _08074ba8
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08074bb0
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08074bac
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08074bbc

_08074b84:	.4byte 0x080d402c
_08074b88:	.4byte 0x080d402f
_08074b8c:	.4byte 0x080d4034 @ _DEBUG_MENU_Push_A_Exit
_08074b90:	.4byte 0x080d4050 @ _%cCOM_STRENGTH:%d
_08074b94:	.4byte 0x080d4068 @ _%cCOM_PATTERN_:%d
_08074b98:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_08074b9c:	.4byte 0x00000373
_08074ba0:	.4byte 0x0000037A
_08074ba4:	.4byte 0x0200D530
_08074ba8:	.4byte 0x00000282
_08074bac:	.4byte 0xFFFF8000

_08074bb0:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08074c04
	mov		r3, #0x0
	bl		sub_080b7724
_08074bbc:
	ldr		r1, _08074c08
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	bne		_08074bdc
	add		r4, r1, #0x0
_08074bc8:
	add		r0, r7, #0x0
	bl		sub_08075698
	add		r0, r7, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_08074bc8
_08074bdc:
	ldr		r0, _08074c0c
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x78]
	ldr		r0, _08074c10
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x7c]
	add		r0, r7, #0x0
	bl		sub_080757b8
	cmp		r0, #0x0
	bne		_08074cbe
	ldr		r0, [r7, #0x58]
	cmp		r0, #0x1
	beq		_08074c26
	cmp		r0, #0x1
	bgt		_08074c14
	cmp		r0, #0x0
	beq		_08074c1e
	b		_08074cdc

.incbin "base.gba", 0x74C02, 0x2

_08074c04:	.4byte 0xFFFF8001
_08074c08:	.4byte 0x0200D530
_08074c0c:	.4byte 0x0200CE3C
_08074c10:	.4byte 0x0200CE40

_08074c14:
	cmp		r0, #0x2
	beq		_08074c2e
	cmp		r0, #0x3
	beq		_08074c36
	b		_08074cdc
_08074c1e:
	add		r0, r7, #0x0
	bl		sub_08076fe8
	b		_08074c3c
_08074c26:
	add		r0, r7, #0x0
	bl		sub_08074cec
	b		_08074c3c
_08074c2e:
	add		r0, r7, #0x0
	bl		sub_08075074
	b		_08074c3c
_08074c36:
	add		r0, r7, #0x0
	bl		sub_08075354
_08074c3c:
	add		r0, r7, #0x0
	add		r0, #0xb0
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	bne		_08074cbe
	ldr		r0, [r7, #0x64]
	cmp		r0, #0x0
	beq		_08074c50
	bl		sub_08075f90
_08074c50:
	ldr		r0, [r7, #0x68]
	cmp		r0, #0x0
	beq		_08074c5a
	bl		sub_08075c1c
_08074c5a:
	ldr		r0, [r7, #0x6c]
	cmp		r0, #0x0
	beq		_08074c64
	bl		sub_08075c1c
_08074c64:
	ldr		r0, [r7, #0x70]
	cmp		r0, #0x0
	beq		_08074c6e
	bl		sub_08075c1c
_08074c6e:
	ldr		r0, _08074c9c
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_08074cb2
	ldr		r0, [r2, #0x20]
	cmp		r0, #0x0
	beq		_08074cb2
	ldr		r0, [r2, #0x18]
	cmp		r0, #0x0
	bne		_08074ca0
	ldr		r0, [r2, #0x10]
	ldr		r1, [r2, #0x14]
	add		r0, r0, r1
	str		r0, [r2, #0x10]
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	ble		_08074cb2
	mov		r0, #0xf0
	lsl		r0, r0, #0xe
	str		r0, [r2, #0x10]
	mov		r0, #0x1
	str		r0, [r2, #0x18]
	b		_08074cb2

_08074c9c:	.4byte 0x0200D5E4

_08074ca0:
	ldr		r0, [r2, #0x10]
	ldr		r1, [r2, #0x14]
	sub		r0, r0, r1
	str		r0, [r2, #0x10]
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bgt		_08074cb2
	str		r4, [r2, #0x10]
	str		r4, [r2, #0x18]
_08074cb2:
	ldr		r0, _08074cd8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08074cbe
	bl		sub_08074568
_08074cbe:
	add		r0, r7, #0x0
	bl		sub_08075698
	add		r0, r7, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r7, #0x0
	bl		sub_080b7690
	b		_08074bdc

_08074cd8:	.4byte 0x0200D5E8

_08074cdc:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080749ec

	thumb_func_start sub_08074cec
sub_08074cec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r1, _08074d18
	mov		r0, #0xa0
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x4]
	add		r1, r5, #0x0
	add		r1, #0xac
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, [r5, #0x5c]
	add		r0, #0x1
	cmp		r0, #0x6
	bls		_08074d0e
	b		_08075062
_08074d0e:
	lsl		r0, r0, #0x2
	ldr		r1, _08074d1c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08074d18:	.4byte 0x0200D5D4
_08074d1c:	.4byte 0x08074d20
_08074d20:	.4byte 0x0807504c

.incbin "base.gba", 0x74D24, 0x18
	thumb_func_end sub_08074cec


.incbin "base.gba", 0x74D3C, 0x326

_08075062:

.incbin "base.gba", 0x75062, 0x12
	thumb_func_start sub_08075074
sub_08075074:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	mov		r8, r0
	mov		r0, #0xd8
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_080750fc
	bl		sub_0808b264
	mov		r0, #0x0
	mov		r1, #0x4
	bl		sub_0808b0cc
	add		r0, sp, #0x4
	mov		r10, r0
	mov		r1, r8
	add		r1, #0x88
	str		r1, [sp, #0x38]
	mov		r6, r8
	add		r6, #0x89
	mov		r5, r8
	add		r5, #0x8a
	mov		r2, #0x3
	mov		r9, r2
_080750b0:
	mov		r2, #0x0
	ldrsb	r2, [r5, r2]
	mov		r3, #0x0
	ldrsb	r3, [r6, r3]
	mov		r12, r3
	ldr		r4, [sp, #0x38]
	ldrb	r4, [r4, #0x0]
	lsl		r4, r4, #0x18
	asr		r4, r4, #0x18
	str		r4, [sp, #0x2C]
	add		r1, sp, #0x4
	ldr		r0, _08075260
	ldmia	r0!, { r3, r4, r7 }
	stmia	r1!, {  r3, r4, r7 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r7, r10
	add		r7, #0x4
	mov		r10, r7
	sub		r7, #0x4
	ldmia	r7!, { r1 }
	ldr		r0, [sp, #0x2C]
	str		r0, [sp, #0x0]
	ldr		r0, _08075264
	mov		r3, r12
	bl		sub_0808b240
	ldr		r1, [sp, #0x38]
	add		r1, #0x3
	str		r1, [sp, #0x38]
	add		r6, #0x3
	add		r5, #0x3
	mov		r2, #0x1
	neg		r2, r2
	add		r9, r2
	mov		r3, r9
	cmp		r3, #0x0
	bge		_080750b0
_080750fc:
	mov		r4, r8
	ldr		r0, [r4, #0x64]
	ldr		r1, [r0, #0x4]
	add		r3, r0, #0x0
	cmp		r1, #0x0
	bne		_08075120
	ldr		r1, [r3, #0x18]
	ldr		r0, [r1, #0x14]
	mov		r2, #0x0
	cmp		r0, #0x1
	bne		_08075114
	mov		r2, #0x1
_08075114:
	cmp		r2, #0x0
	beq		_08075120
	ldr		r0, [r1, #0x48]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08075122
_08075120:
	mov		r1, #0x1
_08075122:
	cmp		r1, #0x0
	bne		_0807516a
	mov		r5, r8
	ldr		r0, [r5, #0x60]
	sub		r0, #0x1
	str		r0, [r5, #0x60]
	cmp		r0, #0x0
	bgt		_0807516a
	add		r4, r3, #0x0
	ldr		r0, [r3, #0x4]
	cmp		r0, #0x0
	bne		_08075152
	ldr		r1, [r3, #0x18]
	ldr		r0, [r1, #0x14]
	mov		r2, #0x0
	cmp		r0, #0x1
	bne		_08075146
	mov		r2, #0x1
_08075146:
	cmp		r2, #0x0
	beq		_08075152
	ldr		r0, [r1, #0x48]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08075154
_08075152:
	mov		r1, #0x1
_08075154:
	cmp		r1, #0x0
	bne		_0807516a
	ldr		r1, [r4, #0x4]
	lsl		r1, r1, #0x2
	add		r0, r4, #0x0
	add		r0, #0x18
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x18]
	add		r0, #0x1
	str		r0, [r1, #0x18]
_0807516a:
	mov		r5, r8
	add		r5, #0x84
	ldr		r0, [r5, #0x0]
	cmp		r0, #0xf
	beq		_0807524c
	str		r3, [sp, #0x14]
	mov		r6, r8
	ldr		r0, [r6, #0x68]
	str		r0, [sp, #0x18]
	ldr		r0, [r6, #0x6c]
	str		r0, [sp, #0x1C]
	ldr		r0, [r6, #0x70]
	str		r0, [sp, #0x20]
	add		r4, sp, #0x14
	add		r0, sp, #0x4
	add		r1, r4, #0x0
	mov		r2, #0x10
	bl		sub_0808c818
	mov		r7, #0x0
	mov		r10, r5
	add		r0, sp, #0x14
	mov		r9, r0
	mov		r1, sp
	add		r1, #0x15
	str		r1, [sp, #0x24]
	mov		r2, sp
	add		r2, #0x16
	str		r2, [sp, #0x28]
	mov		r4, r8
	add		r4, #0x88
_080751a8:
	mov		r3, r10
	ldr		r1, [r3, #0x0]
	add		r0, r1, #0x0
	asr		r0, r7
	mov		r5, #0x1
	eor		r0, r5
	and		r0, r5
	cmp		r0, #0x0
	beq		_08075244
	lsl		r6, r7, #0x2
	str		r6, [sp, #0x30]
	add		r0, r6, #0x0
	add		r0, sp
	add		r0, #0x4
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x8]
	mov		r2, #0x0
	cmp		r0, #0x3
	bne		_080751d0
	mov		r2, #0x1
_080751d0:
	cmp		r2, #0x0
	beq		_08075244
	mov		r0, #0x1
	lsl		r0, r7
	orr		r1, r0
	mov		r0, r10
	str		r1, [r0, #0x0]
	ldr		r2, _08075268
	ldr		r1, [r2, #0x0]
	ldr		r3, _0807526c
	add		r1, r1, r3
	add		r0, sp, #0x14
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, r9
	mov		r1, r9
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r5, r9
	ldrb	r0, [r5, #0x0]
	strb	r0, [r4, #0x0]
	ldr		r6, [sp, #0x24]
	ldrb	r0, [r6, #0x0]
	strb	r0, [r4, #0x1]
	ldr		r1, [sp, #0x28]
	ldrb	r0, [r1, #0x0]
	strb	r0, [r4, #0x2]
	mov		r2, #0x2
	ldrsb	r2, [r4, r2]
	mov		r12, r2
	mov		r3, #0x1
	ldrsb	r3, [r4, r3]
	str		r3, [sp, #0x34]
	mov		r2, #0x0
	ldrsb	r2, [r4, r2]
	mov		r1, r9
	ldr		r0, _08075270
	ldmia	r0!, { r3, r5, r6 }
	stmia	r1!, {  r3, r5, r6 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r5, _08075274
	mov		r6, #0x0
	ldrsh	r0, [r5, r6]
	cmp		r0, #0x0
	bne		_08075244
	ldr		r0, [sp, #0x30]
	add		r0, sp
	add		r0, #0x14
	ldr		r1, [r0, #0x0]
	str		r2, [sp, #0x0]
	ldr		r0, _08075264
	mov		r2, r12
	ldr		r3, [sp, #0x34]
	bl		sub_0808c670
_08075244:
	add		r4, #0x3
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_080751a8
_0807524c:
	mov		r7, r8
	ldr		r4, [r7, #0x5c]
	cmp		r4, #0x1
	beq		_08075304
	cmp		r4, #0x1
	bgt		_08075278
	cmp		r4, #0x0
	beq		_0807527e
	b		_08075344

.incbin "base.gba", 0x7525E, 0x2

_08075260:	.4byte 0x080d40b4 @ HAM
_08075264:	.4byte 0x080d40c4 @ TEAM-%s_TIME:%01d,%02d,%02d
_08075268:	.4byte 0x0200D520
_0807526c:	.4byte 0x0000056C
_08075270:	.4byte 0x080d4104
_08075274:	.4byte 0x0200CDBC

_08075278:
	cmp		r4, #0x2
	beq		_08075330
	b		_08075344
_0807527e:
	mov		r1, r8
	ldr		r0, [r1, #0x64]
	ldr		r0, [r0, #0x8]
	mov		r1, #0x0
	cmp		r0, #0x3
	bne		_0807528c
	mov		r1, #0x1
_0807528c:
	cmp		r1, #0x0
	beq		_08075344
	ldr		r0, _080752ec
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _080752f0
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, _080752f4
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _080752f8
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, r8
	add		r0, #0xac
	str		r4, [r0, #0x0]
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	mov		r0, r8
	bl		sub_08075824
	ldr		r4, _080752fc
	mov		r0, r8
	bl		sub_08076f64
	add		r1, r0, #0x0
	ldr		r2, _08075300
	add		r0, r4, #0x0
	bl		sub_08006100
	mov		r2, r8
	ldr		r0, [r2, #0x5c]
	add		r0, #0x1
	str		r0, [r2, #0x5c]
	b		_08075344

_080752ec:	.4byte 0x0200D520
_080752f0:	.4byte 0xFFFF8001
_080752f4:	.4byte 0x0200D518
_080752f8:	.4byte 0xFFFF8003
_080752fc:	.4byte 0x02000D3C
_08075300:	.4byte 0x080d4114

_08075304:
	ldr		r0, _08075328
	ldr		r0, [r0, #0x0]
	ldr		r3, _0807532c
	add		r0, r0, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_08075344
	mov		r0, #0x5a
	mov		r4, r8
	str		r0, [r4, #0x60]
	mov		r0, #0x1
	bl		sub_0808f628
	ldr		r0, [r4, #0x5c]
	add		r0, #0x1
	str		r0, [r4, #0x5c]
	b		_08075344

.incbin "base.gba", 0x75326, 0x2

_08075328:	.4byte 0x0200D518
_0807532c:	.4byte 0x00000101

_08075330:
	mov		r5, r8
	ldr		r0, [r5, #0x60]
	sub		r0, #0x1
	str		r0, [r5, #0x60]
	cmp		r0, #0x0
	bgt		_08075344
	mov		r0, #0x3
	str		r0, [r5, #0x58]
	mov		r0, #0x0
	str		r0, [r5, #0x5c]
_08075344:
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08075074

	thumb_func_start sub_08075354
sub_08075354:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xa8
	add		r7, r0, #0x0
	add		r0, #0xac
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r0, [r7, #0x5c]
	cmp		r0, #0x1
	beq		_0807544c
	cmp		r0, #0x1
	ble		_08075374
	b		_0807558e
_08075374:
	cmp		r0, #0x0
	beq		_0807537a
	b		_0807558e
_0807537a:
	ldr		r4, _08075434
	ldr		r1, _08075438
	add		r0, r4, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x7
	bl		sub_080300ac
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _0807543c
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x98]
	mov		r5, #0x0
	mov		r2, #0x94
	add		r2, r2, r7
	mov		r9, r2
	mov		r0, sp
	add		r0, #0x14
	str		r0, [sp, #0x9C]
	mov		r1, sp
	add		r1, #0x95
	str		r1, [sp, #0xA0]
	mov		r2, sp
	add		r2, #0x96
	str		r2, [sp, #0xA4]
	add		r6, sp, #0x94
	mov		r8, r0
	add		r0, sp, #0x4
	mov		r10, r0
_080753c4:
	mov		r1, r9
	add		r4, r1, r5
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r2, _08075440
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_080068e0
	mov		r1, r10
	add		r1, #0x4
	mov		r10, r1
	sub		r1, #0x4
	stmia	r1!, { r0 }
	ldrb	r0, [r4, #0x0]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	add		r1, r1, r7
	add		r1, #0x98
	add		r0, r6, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldrb	r1, [r6, #0x0]
	ldr		r2, [sp, #0xA0]
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x8
	orr		r0, r1
	ldr		r2, [sp, #0xA4]
	ldrb	r1, [r2, #0x0]
	lsl		r1, r1, #0x10
	orr		r1, r0
	ldr		r0, _08075444
	and		r1, r0
	ldr		r0, [sp, #0x98]
	mov		r2, r8
	bl		sub_0802cfe8
	mov		r1, #0x20
	add		r8, r1
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_080753c4
	ldr		r0, _08075448
	ldr		r0, [r0, #0x0]
	mov		r1, #0x4
	str		r1, [sp, #0x0]
	add		r1, sp, #0x4
	mov		r2, r9
	ldr		r3, [sp, #0x9C]
	bl		sub_08033028
	ldr		r0, [r7, #0x5c]
	add		r0, #0x1
	str		r0, [r7, #0x5c]
	b		_0807558e

_08075434:	.4byte 0x0200DB50
_08075438:	.4byte 0xFFFFFEB0
_0807543c:	.4byte 0x0200D520
_08075440:	.4byte 0x080d427c
_08075444:	.4byte 0x00FFFFFF
_08075448:	.4byte 0x0200D534

_0807544c:
	ldr		r0, _080755a0
	ldr		r0, [r0, #0x0]
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807545e
	b		_0807558e
_0807545e:
	ldr		r0, _080755a4
	ldr		r0, [r0, #0x0]
	ldr		r2, _080755a8
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	ldr		r0, _080755ac
	ldr		r0, [r0, #0x0]
	add		r2, #0xa8
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	str		r1, [r7, #0x74]
	ldr		r0, _080755b0
	str		r1, [r0, #0x4]
	ldr		r6, [r7, #0x64]
	ldr		r0, _080755b4
	mov		r9, r0
	ldr		r1, _080755b8
	mov		r10, r1
	mov		r2, #0x0
	mov		r8, r2
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r5, #0x3
_0807548c:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807549c
	mov		r1, #0x3
	bl		sub_08076c50
	mov		r0, r8
	str		r0, [r4, #0x0]
_0807549c:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807548c
	mov		r0, #0x3
	str		r0, [r6, #0x8]
	mov		r0, #0x0
	str		r0, [r6, #0xc]
	ldr		r6, [r7, #0x68]
	mov		r8, r0
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r5, #0x3
_080754b6:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080754c6
	mov		r1, #0x3
	bl		sub_08076d58
	mov		r1, r8
	str		r1, [r4, #0x0]
_080754c6:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080754b6
	mov		r0, #0x0
	str		r0, [r6, #0x8]
	str		r0, [r6, #0xc]
	ldr		r6, [r7, #0x6c]
	mov		r8, r0
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r5, #0x3
_080754de:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080754ee
	mov		r1, #0x3
	bl		sub_08076d58
	mov		r2, r8
	str		r2, [r4, #0x0]
_080754ee:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080754de
	mov		r0, #0x0
	str		r0, [r6, #0x8]
	str		r0, [r6, #0xc]
	ldr		r6, [r7, #0x70]
	mov		r8, r0
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r5, #0x3
_08075506:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08075516
	mov		r1, #0x3
	bl		sub_08076d58
	mov		r0, r8
	str		r0, [r4, #0x0]
_08075516:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08075506
	mov		r0, #0x0
	str		r0, [r6, #0x8]
	str		r0, [r6, #0xc]
	ldr		r0, [r7, #0x5c]
	add		r0, #0x1
	str		r0, [r7, #0x5c]
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_08075554
	add		r5, r4, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08075542
	mov		r1, #0x3
	bl		sub_0808e28c
_08075542:
	ldr		r0, [r5, #0x4]
	cmp		r0, #0x0
	beq		_0807554e
	mov		r1, #0x3
	bl		sub_0808e28c
_0807554e:
	add		r0, r4, #0x0
	bl		sub_0808afac
_08075554:
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08075586
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	mov		r5, #0x1
_0807556c:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08075578
	mov		r1, #0x3
	bl		sub_0808e28c
_08075578:
	add		r4, #0xc
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807556c
	add		r0, r6, #0x0
	bl		sub_0808afac
_08075586:
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0807558e:
	add		sp, #0xa8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7559E, 0x2

_080755a0:	.4byte 0x0200D534
_080755a4:	.4byte 0x0200D520
_080755a8:	.4byte 0x0000057C
_080755ac:	.4byte 0x0200D528
_080755b0:	.4byte 0x0200D5D4
_080755b4:	.4byte 0x080d411c
_080755b8:	.4byte 0x080d4120
	thumb_func_end sub_08075354

	thumb_func_start sub_080755bc
sub_080755bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x64]
	ldr		r7, _08075690
	ldr		r1, _08075694
	mov		r8, r1
	cmp		r0, #0x0
	beq		_080755f2
	add		r5, r0, #0x0
	mov		r4, #0x0
_080755d4:
	ldr		r1, [r5, #0x14]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r2, [r1, #0x24]
	add		r1, r4, #0x0
	bl		sub_080bbc78
	cmp		r0, #0x0
	beq		_080755ec
	bl		sub_08076404
_080755ec:
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_080755d4
_080755f2:
	ldr		r0, [r6, #0x68]
	cmp		r0, #0x0
	beq		_0807561a
	add		r5, r0, #0x0
	mov		r4, #0x0
_080755fc:
	ldr		r1, [r5, #0x14]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r2, [r1, #0x24]
	add		r1, r4, #0x0
	bl		sub_080bbc78
	cmp		r0, #0x0
	beq		_08075614
	bl		sub_08076404
_08075614:
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_080755fc
_0807561a:
	ldr		r0, [r6, #0x6c]
	cmp		r0, #0x0
	beq		_08075642
	add		r5, r0, #0x0
	mov		r4, #0x0
_08075624:
	ldr		r1, [r5, #0x14]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r2, [r1, #0x24]
	add		r1, r4, #0x0
	bl		sub_080bbc78
	cmp		r0, #0x0
	beq		_0807563c
	bl		sub_08076404
_0807563c:
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08075624
_08075642:
	ldr		r0, [r6, #0x70]
	cmp		r0, #0x0
	beq		_0807566a
	add		r5, r0, #0x0
	mov		r4, #0x0
_0807564c:
	ldr		r1, [r5, #0x14]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r2, [r1, #0x24]
	add		r1, r4, #0x0
	bl		sub_080bbc78
	cmp		r0, #0x0
	beq		_08075664
	bl		sub_08076404
_08075664:
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0807564c
_0807566a:
	ldr		r0, [r7, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08075676
	bl		sub_08074470
_08075676:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08075684
	bl		sub_080745cc
_08075684:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7568E, 0x2

_08075690:	.4byte 0x080d4124
_08075694:	.4byte 0x080d4128
	thumb_func_end sub_080755bc

	thumb_func_start sub_08075698
sub_08075698:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r2, _08075724
	ldr		r0, [r2, #0x4]
	ldr		r1, [r4, #0x74]
	cmp		r0, r1
	bge		_080756a8
	str		r1, [r2, #0x4]
_080756a8:
	ldr		r0, [r2, #0x4]
	ldr		r1, _08075728
	cmp		r0, r1
	ble		_080756b2
	str		r1, [r2, #0x4]
_080756b2:
	ldr		r0, [r2, #0x4]
	asr		r3, r0, #0x8
	lsl		r1, r3, #0x10
	ldr		r2, _0807572c
	ldr		r0, [r2, #0x0]
	str		r1, [r0, #0x0]
	mov		r0, #0xa0
	sub		r0, r0, r3
	add		r5, r2, #0x0
	ldr		r2, _08075730
	cmp		r0, #0x0
	blt		_080756d4
	ldr		r1, [r2, #0x0]
	sub		r0, #0xa0
	lsl		r0, r0, #0x10
	neg		r0, r0
	str		r0, [r1, #0x0]
_080756d4:
	ldr		r0, _08075734
	sub		r0, r0, r3
	cmp		r0, #0xcf
	bgt		_080756ee
	cmp		r0, #0x6f
	bgt		_080756e2
	mov		r0, #0x70
_080756e2:
	ldr		r1, [r2, #0x0]
	ldr		r3, _08075738
	add		r0, r0, r3
	lsl		r0, r0, #0x10
	neg		r0, r0
	str		r0, [r1, #0x0]
_080756ee:
	ldr		r0, [r2, #0x0]
	ldr		r1, [r4, #0x78]
	ldr		r0, [r0, #0x0]
	sub		r0, r1, r0
	add		r3, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08075700
	neg		r1, r0
_08075700:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08075708
	neg		r1, r1
_08075708:
	cmp		r1, #0x0
	ble		_0807573c
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08075714
	neg		r1, r0
_08075714:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0807571c
	neg		r1, r1
_0807571c:
	cmp		r1, #0x9f
	bgt		_08075752
	b		_08075758

.incbin "base.gba", 0x75722, 0x2

_08075724:	.4byte 0x0200D5D4
_08075728:	.4byte 0x000AEE00
_0807572c:	.4byte 0x080d412c
_08075730:	.4byte 0x080d4130
_08075734:	.4byte 0x00000B5E
_08075738:	.4byte 0xFFFFFE70

_0807573c:
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08075744
	neg		r1, r0
_08075744:
	asr		r0, r1, #0x10
	cmp		r3, #0x0
	bge		_0807574c
	neg		r0, r0
_0807574c:
	neg		r0, r0
	cmp		r0, #0x9f
	ble		_08075758
_08075752:
	ldr		r1, _0807578c
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
_08075758:
	ldr		r0, [r5, #0x0]
	ldr		r1, [r4, #0x7c]
	ldr		r0, [r0, #0x0]
	sub		r0, r1, r0
	add		r2, r0, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0807576a
	neg		r1, r0
_0807576a:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08075772
	neg		r1, r1
_08075772:
	cmp		r1, #0x0
	ble		_08075790
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0807577e
	neg		r1, r0
_0807577e:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_08075786
	neg		r1, r1
_08075786:
	cmp		r1, #0x9f
	bgt		_080757a6
	b		_080757ac

_0807578c:	.4byte 0x02008AD4

_08075790:
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08075798
	neg		r1, r0
_08075798:
	asr		r0, r1, #0x10
	cmp		r2, #0x0
	bge		_080757a0
	neg		r0, r0
_080757a0:
	neg		r0, r0
	cmp		r0, #0x9f
	ble		_080757ac
_080757a6:
	ldr		r1, _080757b4
	mov		r0, #0x1
	strb	r0, [r1, #0x1a]
_080757ac:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x757B2, 0x2

_080757b4:	.4byte 0x02008AD4
	thumb_func_end sub_08075698

	thumb_func_start sub_080757b8
sub_080757b8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080706ac
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x58]
	cmp		r0, #0x2
	beq		_08075816
	add		r0, r4, #0x0
	add		r0, #0xac
	ldr		r1, [r0, #0x0]
	ldr		r0, _080757fc
	ldr		r0, [r0, #0x0]
	ldr		r3, _08075800
	add		r0, r0, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	beq		_080757e2
	cmp		r0, #0x2
	beq		_080757e2
	mov		r1, #0x0
_080757e2:
	cmp		r1, #0x0
	beq		_08075804
	ldr		r0, [r2, #0x58]
	cmp		r0, #0x1
	beq		_08075816
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08075816

.incbin "base.gba", 0x757FA, 0x2

_080757fc:	.4byte 0x0200D518
_08075800:	.4byte 0x00000101

_08075804:
	ldr		r0, [r2, #0x58]
	cmp		r0, #0x0
	beq		_08075816
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_08075816:
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x75822, 0x2
	thumb_func_end sub_080757b8

	thumb_func_start sub_08075824
sub_08075824:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xa4
	mov		r8, r0
	mov		r5, r8
	add		r5, #0x98
	mov		r1, r8
	add		r1, #0x88
	add		r0, r5, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r4, r8
	add		r4, #0x9b
	mov		r0, r8
	ldr		r1, [r0, #0x68]
	add		r0, sp, #0x18
	bl		sub_08075e94
	add		r0, r4, #0x0
	add		r1, sp, #0x18
	mov		r2, #0x3
	bl		sub_0808c818
	add		r4, #0x3
	mov		r2, r8
	ldr		r1, [r2, #0x70]
	add		r0, sp, #0x18
	bl		sub_08075e94
	add		r0, r4, #0x0
	add		r1, sp, #0x18
	mov		r2, #0x3
	bl		sub_0808c818
	add		r4, #0x3
	mov		r3, r8
	ldr		r1, [r3, #0x6c]
	add		r0, sp, #0x18
	bl		sub_08075e94
	add		r0, r4, #0x0
	add		r1, sp, #0x18
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r3, #0x1
	mov		r4, sp
	add		r4, #0x1c
	str		r4, [sp, #0x90]
	str		r5, [sp, #0x7C]
	mov		r7, r8
	add		r7, #0x94
	str		r7, [sp, #0x78]
	mov		r0, r8
	add		r0, #0x9a
	str		r0, [sp, #0x84]
	mov		r1, r8
	add		r1, #0x99
	str		r1, [sp, #0x80]
_080758a2:
	lsl		r4, r3, #0x1
	add		r1, r4, r3
	add		r1, r8
	add		r1, #0x98
	add		r0, sp, #0x18
	mov		r2, #0x3
	str		r3, [sp, #0xA0]
	bl		sub_0808c818
	str		r4, [sp, #0x9C]
	ldr		r3, [sp, #0xA0]
	add		r2, r3, #0x1
	str		r2, [sp, #0x98]
	cmp		r3, #0x0
	bgt		_080758c2
	b		_080759c0
_080758c2:
	mov		r4, sp
	add		r4, #0x18
	str		r4, [sp, #0x30]
	ldr		r7, [sp, #0x90]
	mov		r10, r7
	mov		r0, sp
	add		r0, #0x1a
	str		r0, [sp, #0x34]
	mov		r1, sp
	add		r1, #0x1e
	str		r1, [sp, #0x38]
	str		r0, [sp, #0x8C]
	mov		r2, #0x19
	add		r2, sp
	mov		r9, r2
	add		r4, #0x5
	str		r4, [sp, #0x3C]
	mov		r7, sp
	add		r7, #0x22
	str		r7, [sp, #0x40]
	add		r0, #0x7
	str		r0, [sp, #0x44]
	mov		r6, r8
	add		r6, #0x98
	add		r7, r3, #0x0
_080758f4:
	mov		r1, #0x0
	add		r2, sp, #0x2c
	strb	r1, [r2, #0x0]
	mov		r0, r10
	add		r1, r6, #0x0
	mov		r2, #0x3
	str		r3, [sp, #0xA0]
	bl		sub_0808c818
	ldr		r4, [sp, #0x34]
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r2, [sp, #0x38]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	ldr		r3, [sp, #0xA0]
	cmp		r1, r0
	bgt		_0807594c
	cmp		r1, r0
	blt		_0807599e
	mov		r4, r9
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r2, [sp, #0x3C]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	bgt		_0807594c
	cmp		r1, r0
	blt		_0807599e
	ldr		r4, [sp, #0x30]
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	mov		r2, r10
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	mov		r2, #0x0
	cmp		r1, r0
	bgt		_0807594c
	cmp		r1, r0
	bge		_08075948
	mov		r2, #0x1
_08075948:
	cmp		r2, #0x0
	bne		_0807599e
_0807594c:
	add		r5, sp, #0x18
	add		r4, sp, #0x20
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x3
	str		r3, [sp, #0xA0]
	bl		sub_0808c818
	ldr		r0, [sp, #0x8C]
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r2, [sp, #0x40]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	ldr		r3, [sp, #0xA0]
	cmp		r1, r0
	blt		_080759a4
	cmp		r1, r0
	bgt		_0807599e
	mov		r0, r9
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r2, [sp, #0x44]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_080759a4
	cmp		r1, r0
	bgt		_0807599e
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	mov		r2, #0x0
	cmp		r1, r0
	blt		_080759a4
	cmp		r1, r0
	ble		_0807599a
	mov		r2, #0x1
_0807599a:
	cmp		r2, #0x0
	beq		_080759a4
_0807599e:
	mov		r4, #0x1
	add		r0, sp, #0x2c
	strb	r4, [r0, #0x0]
_080759a4:
	add		r1, sp, #0x2c
	ldrb	r1, [r1, #0x0]
	cmp		r1, #0x0
	bne		_080759b8
	add		r0, sp, #0x18
	mov		r1, #0x4
	str		r3, [sp, #0xA0]
	bl		sub_080740e4
	ldr		r3, [sp, #0xA0]
_080759b8:
	add		r6, #0x3
	sub		r7, #0x1
	cmp		r7, #0x0
	bne		_080758f4
_080759c0:
	ldr		r2, [sp, #0x9C]
	add		r0, r2, r3
	add		r0, r8
	add		r0, #0x98
	add		r1, sp, #0x18
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r3, [sp, #0x98]
	cmp		r3, #0x3
	bgt		_080759d8
	b		_080758a2
_080759d8:
	mov		r3, #0x0
	mov		r10, r3
	mov		r4, sp
	add		r4, #0x18
	str		r4, [sp, #0x4C]
	ldr		r7, [sp, #0x90]
	str		r7, [sp, #0x50]
	mov		r0, sp
	add		r0, #0x19
	str		r0, [sp, #0x54]
	mov		r1, sp
	add		r1, #0x1d
	str		r1, [sp, #0x58]
	mov		r2, sp
	add		r2, #0x1a
	str		r2, [sp, #0x5C]
	mov		r3, sp
	add		r3, #0x1e
	str		r3, [sp, #0x60]
_080759fe:
	mov		r4, r10
	lsl		r1, r4, #0x1
	add		r1, r10
	add		r1, r8
	add		r1, #0x98
	add		r0, sp, #0x18
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r7, #0x0
	str		r7, [sp, #0x48]
	add		r0, sp, #0x24
	ldr		r1, _08075a6c
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [sp, #0x50]
	add		r1, sp, #0x24
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r2, #0x0
	ldr		r0, [sp, #0x4C]
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r3, [sp, #0x50]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_08075a5c
	ldr		r4, [sp, #0x54]
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr		r7, [sp, #0x58]
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	cmp		r1, r0
	bne		_08075a5c
	ldr		r0, [sp, #0x5C]
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r3, [sp, #0x60]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_08075a5c
	mov		r2, #0x1
_08075a5c:
	cmp		r2, #0x0
	beq		_08075a70
	mov		r4, #0x3
	str		r4, [sp, #0x48]
	mov		r7, r10
	add		r7, #0x1
	str		r7, [sp, #0x88]
	b		_08075b52

_08075a6c:	.4byte 0x080d3fdc

_08075a70:
	mov		r0, sp
	add		r0, #0x1a
	str		r0, [sp, #0x8C]
	mov		r1, sp
	add		r1, #0x1e
	str		r1, [sp, #0x94]
	mov		r2, r10
	add		r2, #0x1
	str		r2, [sp, #0x88]
	mov		r3, sp
	add		r3, #0x18
	str		r3, [sp, #0x64]
	ldr		r5, [sp, #0x90]
	mov		r4, sp
	add		r4, #0x19
	str		r4, [sp, #0x68]
	mov		r7, sp
	add		r7, #0x1d
	str		r7, [sp, #0x6C]
	add		r6, sp, #0x20
	add		r0, #0x7
	str		r0, [sp, #0x70]
	add		r1, #0x4
	str		r1, [sp, #0x74]
	mov		r4, r8
	add		r4, #0x98
	mov		r7, #0x3
_08075aa6:
	mov		r2, #0x0
	mov		r9, r2
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r3, [sp, #0x8C]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r2, [sp, #0x94]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_08075b3e
	cmp		r1, r0
	bgt		_08075af6
	ldr		r3, [sp, #0x68]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	ldr		r2, [sp, #0x6C]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	blt		_08075b3e
	cmp		r1, r0
	bgt		_08075af6
	ldr		r3, [sp, #0x64]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r2, #0x0
	cmp		r1, r0
	blt		_08075b3e
	cmp		r1, r0
	ble		_08075af2
	mov		r2, #0x1
_08075af2:
	cmp		r2, #0x0
	beq		_08075b3e
_08075af6:
	add		r0, sp, #0x28
	ldr		r1, _08075c04
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r6, #0x0
	add		r1, sp, #0x28
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r2, #0x0
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r1, r0
	bne		_08075b34
	mov		r1, #0x1
	ldrsb	r1, [r4, r1]
	ldr		r3, [sp, #0x70]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	bne		_08075b34
	mov		r1, #0x2
	ldrsb	r1, [r4, r1]
	ldr		r3, [sp, #0x74]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r1, r0
	beq		_08075b36
_08075b34:
	mov		r2, #0x1
_08075b36:
	cmp		r2, #0x0
	beq		_08075b3e
	mov		r0, #0x1
	mov		r9, r0
_08075b3e:
	mov		r1, r9
	cmp		r1, #0x0
	beq		_08075b4a
	ldr		r2, [sp, #0x48]
	add		r2, #0x1
	str		r2, [sp, #0x48]
_08075b4a:
	add		r4, #0x3
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_08075aa6
_08075b52:
	ldr		r3, [sp, #0x78]
	ldr		r4, [sp, #0x48]
	add		r0, r3, r4
	mov		r7, r10
	strb	r7, [r0, #0x0]
	ldr		r0, [sp, #0x88]
	mov		r10, r0
	cmp		r0, #0x3
	bgt		_08075b66
	b		_080759fe
_08075b66:
	mov		r5, #0x0
	ldr		r6, _08075c08
	add		r1, r6, #0x2
	mov		r10, r1
	add		r2, r6, #0x3
	mov		r9, r2
_08075b72:
	ldr		r3, [sp, #0x78]
	add		r0, r3, r5
	ldrb	r4, [r0, #0x0]
	lsl		r1, r4, #0x2
	add		r0, r1, r6
	ldrb	r2, [r0, #0x0]
	ldr		r7, _08075c0c
	add		r0, r1, r7
	ldrb	r3, [r0, #0x0]
	mov		r7, r10
	add		r0, r1, r7
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	add		r1, r9
	ldrb	r0, [r1, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, #0x0
	str		r0, [sp, #0x8]
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	ldr		r4, [sp, #0x84]
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [sp, #0xC]
	ldr		r7, [sp, #0x80]
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [sp, #0x10]
	ldr		r0, [sp, #0x7C]
	add		r1, r0, r1
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	str		r0, [sp, #0x14]
	ldr		r0, _08075c10
	add		r1, r5, #0x0
	bl		sub_08006410
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08075b72
	ldr		r0, _08075c14
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08075bf2
	ldr		r0, _08075c18
	ldr		r2, [sp, #0x78]
	ldrb	r1, [r2, #0x0]
	mov		r2, r8
	add		r2, #0x95
	ldrb	r2, [r2, #0x0]
	mov		r3, r8
	add		r3, #0x96
	ldrb	r3, [r3, #0x0]
	mov		r4, r8
	add		r4, #0x97
	ldrb	r4, [r4, #0x0]
	str		r4, [sp, #0x0]
	bl		sub_0808c670
_08075bf2:
	add		sp, #0xa4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x75C02, 0x2

_08075c04:	.4byte 0x080d3fdc
_08075c08:	.4byte 0x080d4134
_08075c0c:	.4byte 0x080d4135
_08075c10:	.4byte 0x02000D3C
_08075c14:	.4byte 0x0200CDBC
_08075c18:	.4byte 0x080d4144 @ now_rank_=_%d:%d:%d:%d
	thumb_func_end sub_08075824

	thumb_func_start sub_08075c1c
sub_08075c1c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x3
	bls		_08075c32
	ldr		r0, _08075c48
	ldr		r1, _08075c4c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08075c32:
	ldr		r0, [r4, #0x8]
	cmp		r0, #0x1
	beq		_08075c50
	cmp		r0, #0x1
	ble		_08075c7e
	cmp		r0, #0x2
	beq		_08075c60
	cmp		r0, #0x3
	beq		_08075c70
	b		_08075c7e

.incbin "base.gba", 0x75C46, 0x2

_08075c48:	.4byte 0x080d3ff8 @ n_taguchi/ntSwimming.cpp
_08075c4c:	.4byte 0x00000515

_08075c50:
	ldr		r1, [r4, #0x14]
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0xc]
	bl		sub_080bbc74
	b		_08075c7e
_08075c60:
	ldr		r1, [r4, #0x14]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x14]
	bl		sub_080bbc74
	b		_08075c7e
_08075c70:
	ldr		r1, [r4, #0x14]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
_08075c7e:
	mov		r5, #0x0
_08075c80:
	ldr		r1, [r4, #0x14]
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r2, [r1, #0x24]
	add		r1, r5, #0x0
	bl		sub_080bbc78
	cmp		r0, #0x0
	beq		_08075c98
	bl		sub_080764d4
_08075c98:
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08075c80
	ldr		r2, [r4, #0x14]
	mov		r1, #0x20
	ldrsh	r0, [r2, r1]
	add		r0, r4, r0
	ldr		r1, [r4, #0x4]
	ldr		r2, [r2, #0x24]
	bl		sub_080bbc78
	cmp		r0, #0x0
	beq		_08075cd2
	mov		r2, #0xa
	ldrsh	r1, [r0, r2]
	ldr		r2, [r4, #0x4]
	mov		r0, #0x1
	and		r0, r2
	cmp		r0, #0x0
	beq		_08075cc4
	ldr		r0, _08075cd8
	sub		r1, r0, r1
_08075cc4:
	cmp		r1, #0x0
	bge		_08075cca
	mov		r1, #0x0
_08075cca:
	ldr		r0, _08075cd8
	mul		r0, r2
	add		r0, r1, r0
	str		r0, [r4, #0x10]
_08075cd2:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08075cd8:	.4byte 0x00000ABE
	thumb_func_end sub_08075c1c

	thumb_func_start sub_08075cdc
sub_08075cdc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r0, #0x0
	str		r0, [r5, #0x4]
	ldr		r0, _08075d80
	mov		r10, r0
	ldr		r2, _08075d84
	mov		r9, r2
	mov		r0, #0xa4
	mov		r8, r0
	mov		r7, #0x0
	add		r4, r5, #0x0
	add		r4, #0x18
	mov		r6, #0x3
_08075d02:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08075d42
	mov		r0, #0x48
	bl		sub_0808af94
	bl		sub_08076d80
	str		r0, [r4, #0x0]
	ldr		r1, [r5, #0x0]
	sub		r1, #0x1
	mov		r2, r9
	mul		r2, r1
	add		r1, r2, #0x0
	mov		r2, r10
	ldr		r3, [r2, #0x0]
	add		r3, r3, r1
	ldr		r2, [r5, #0x28]
	lsl		r1, r2, #0x5
	sub		r1, r1, r2
	lsl		r1, r1, #0x2
	sub		r1, r1, r2
	lsl		r1, r1, #0x2
	add		r3, r3, r1
	ldr		r1, [r5, #0x2c]
	mov		r2, r8
	mul		r2, r1
	add		r1, r2, #0x0
	add		r1, r1, r3
	add		r1, r7, r1
	add		r1, #0x4
	str		r1, [r0, #0x3c]
_08075d42:
	add		r7, #0x28
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08075d02
	mov		r0, #0x0
	str		r0, [r5, #0x8]
	str		r0, [r5, #0xc]
	ldr		r0, [r5, #0x18]
	ldr		r1, [r5, #0x0]
	ldr		r3, _08075d88
	lsl		r2, r1, #0x2
	add		r2, r2, r3
	ldr		r3, [r2, #0x0]
	ldr		r2, _08075d8c
	ldr		r2, [r2, #0x0]
	str		r2, [sp, #0x0]
	mov		r2, #0x0
	bl		sub_0807633c
	ldr		r1, [r5, #0x18]
	mov		r0, #0x1
	str		r0, [r1, #0x30]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08075d80:	.4byte 0x0200D5E0
_08075d84:	.4byte 0x000005C4
_08075d88:	.4byte 0x080d41cc
_08075d8c:	.4byte 0x080d41dc
	thumb_func_end sub_08075cdc

	thumb_func_start sub_08075d90
sub_08075d90:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r3, [r5, #0xc]
	cmp		r3, #0x1
	beq		_08075dc4
	cmp		r3, #0x1
	bgt		_08075da6
	cmp		r3, #0x0
	beq		_08075db0
	b		_08075e8c
_08075da6:
	cmp		r3, #0x2
	beq		_08075e34
	cmp		r3, #0x3
	beq		_08075e54
	b		_08075e8c
_08075db0:
	ldr		r1, [r5, #0x4]
	lsl		r1, r1, #0x2
	add		r0, r5, #0x0
	add		r0, #0x18
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	str		r0, [r1, #0x14]
	str		r3, [r1, #0x18]
	b		_08075e22
_08075dc4:
	ldr		r2, [r5, #0x4]
	lsl		r0, r2, #0x2
	add		r1, r5, #0x0
	add		r1, #0x18
	add		r0, r1, r0
	ldr		r6, [r0, #0x0]
	ldr		r0, [r6, #0x14]
	mov		r4, #0x0
	add		r7, r1, #0x0
	cmp		r3, r0
	bne		_08075ddc
	mov		r4, #0x1
_08075ddc:
	mov		r1, #0x0
	cmp		r4, #0x0
	beq		_08075dea
	ldr		r0, [r6, #0x18]
	cmp		r0, #0x1
	bgt		_08075dea
	mov		r1, #0x1
_08075dea:
	cmp		r1, #0x0
	bne		_08075e8c
	sub		r0, r2, #0x1
	add		r6, r2, #0x1
	cmp		r0, #0x0
	blt		_08075e00
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	str		r0, [r1, #0x40]
_08075e00:
	cmp		r6, #0x3
	bgt		_08075e22
	lsl		r4, r6, #0x2
	add		r0, r7, r4
	ldr		r0, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r3, _08075e2c
	lsl		r2, r1, #0x2
	add		r2, r2, r3
	ldr		r3, [r2, #0x0]
	ldr		r2, _08075e30
	add		r4, r4, r2
	ldr		r2, [r4, #0x0]
	str		r2, [sp, #0x0]
	add		r2, r6, #0x0
	bl		sub_0807633c
_08075e22:
	ldr		r0, [r5, #0xc]
	add		r0, #0x1
	str		r0, [r5, #0xc]
	b		_08075e8c

.incbin "base.gba", 0x75E2A, 0x2

_08075e2c:	.4byte 0x080d41cc
_08075e30:	.4byte 0x080d41dc

_08075e34:
	ldr		r1, [r5, #0x4]
	lsl		r1, r1, #0x2
	add		r0, r5, #0x0
	add		r0, #0x18
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x14]
	mov		r1, #0x0
	cmp		r0, #0x1
	bne		_08075e4a
	mov		r1, #0x1
_08075e4a:
	cmp		r1, #0x0
	bne		_08075e8c
	mov		r0, #0x3
	str		r0, [r5, #0xc]
	b		_08075e8c
_08075e54:
	ldr		r1, [r5, #0x4]
	lsl		r0, r1, #0x2
	add		r4, r5, #0x0
	add		r4, #0x18
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x14]
	mov		r2, #0x0
	cmp		r0, #0x2
	bne		_08075e6a
	mov		r2, #0x1
_08075e6a:
	cmp		r2, #0x0
	bne		_08075e8c
	add		r0, r1, #0x1
	str		r0, [r5, #0x4]
	cmp		r0, #0x3
	bgt		_08075e86
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	str		r1, [r0, #0x14]
	str		r2, [r0, #0x18]
	str		r1, [r5, #0xc]
	b		_08075e8c
_08075e86:
	str		r3, [r5, #0x4]
	str		r3, [r5, #0x8]
	str		r2, [r5, #0xc]
_08075e8c:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08075d90

	thumb_func_start sub_08075e94
sub_08075e94:
	push	{ r4, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	ldr		r3, _08075ef0
	ldr		r2, _08075ef4
	mul		r0, r2
	ldr		r3, [r3, #0x0]
	add		r3, r3, r0
	ldr		r2, [r1, #0x28]
	lsl		r0, r2, #0x5
	sub		r0, r0, r2
	lsl		r0, r0, #0x2
	sub		r0, r0, r2
	lsl		r0, r0, #0x2
	add		r3, r3, r0
	ldr		r1, [r1, #0x2c]
	mov		r0, #0xa4
	mul		r0, r1
	add		r3, r3, r0
	ldr		r2, [r3, #0x0]
	mov		r0, sp
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r3, sp
	add		r3, #0x1
	strb	r1, [r3, #0x0]
	mov		r1, sp
	add		r1, #0x2
	asr		r0, r2, #0x10
	strb	r0, [r1, #0x0]
	asr		r0, r2, #0x8
	strb	r0, [r3, #0x0]
	mov		r0, sp
	strb	r2, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r4, #0x0
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08075ef0:	.4byte 0x0200D5E0
_08075ef4:	.4byte 0x000005C4
	thumb_func_end sub_08075e94

	thumb_func_start sub_08075ef8
sub_08075ef8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r0, #0x0
	str		r0, [r5, #0x4]
	ldr		r0, _08075f84
	mov		r8, r0
	mov		r7, #0x0
	add		r4, r5, #0x0
	add		r4, #0x18
	mov		r6, #0x3
_08075f12:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08075f3e
	mov		r0, #0x7c
	bl		sub_0808af94
	bl		sub_08076c8c
	str		r0, [r4, #0x0]
	mov		r1, r8
	ldr		r2, [r1, #0x0]
	add		r2, r2, r7
	ldr		r1, [r2, #0x0]
	str		r1, [r0, #0x54]
	ldr		r1, [r2, #0x4]
	str		r1, [r0, #0x58]
	ldr		r1, [r2, #0x8]
	str		r1, [r0, #0x5c]
	ldr		r1, [r2, #0xc]
	str		r1, [r0, #0x60]
	ldr		r1, [r2, #0x10]
	str		r1, [r0, #0x64]
_08075f3e:
	add		r7, #0x90
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08075f12
	mov		r4, #0x0
	str		r4, [r5, #0x8]
	str		r4, [r5, #0xc]
	ldr		r0, [r5, #0x18]
	ldr		r1, [r5, #0x0]
	ldr		r3, _08075f88
	lsl		r2, r1, #0x2
	add		r2, r2, r3
	ldr		r3, [r2, #0x0]
	ldr		r2, _08075f8c
	ldr		r2, [r2, #0x0]
	str		r2, [sp, #0x0]
	mov		r2, #0x0
	bl		sub_0807633c
	ldr		r0, [r5, #0x18]
	mov		r1, #0x1
	str		r1, [r0, #0x30]
	ldr		r0, [r5, #0x4]
	str		r0, [r5, #0x28]
	str		r4, [r5, #0x2c]
	str		r1, [r5, #0x30]
	str		r4, [r5, #0x34]
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x75F82, 0x2

_08075f84:	.4byte 0x0200D5DC
_08075f88:	.4byte 0x080d41cc
_08075f8c:	.4byte 0x080d41dc
	thumb_func_end sub_08075ef8

	thumb_func_start sub_08075f90
sub_08075f90:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	bl		sub_08075c1c
	ldr		r1, [r5, #0x34]
	ldr		r0, [r5, #0x30]
	cmp		r1, r0
	beq		_08075fb4
	str		r1, [r5, #0x30]
	ldr		r0, _08076004
	ldr		r0, [r0, #0x0]
	str		r1, [r0, #0x1c]
	ldr		r0, _08076008
	ldr		r1, [r0, #0x0]
	ldr		r0, [r5, #0x30]
	str		r0, [r1, #0x20]
_08075fb4:
	ldr		r0, [r5, #0x2c]
	cmp		r0, #0x0
	beq		_08076098
	ldr		r0, [r5, #0x4]
	lsl		r0, r0, #0x2
	add		r1, r5, #0x0
	add		r1, #0x18
	add		r0, r1, r0
	ldr		r3, [r0, #0x0]
	mov		r8, r1
	cmp		r3, #0x0
	beq		_0807602c
	ldr		r0, [r3, #0x14]
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_08075fd6
	mov		r1, #0x1
_08075fd6:
	cmp		r1, #0x0
	beq		_0807602c
	mov		r6, #0x0
	ldr		r2, [r3, #0x8]
	asr		r2, r2, #0x8
	ldr		r0, _0807600c
	ldr		r7, [r0, #0x0]
	ldr		r4, [r0, #0x4]
	ldr		r1, [r3, #0x28]
	mov		r3, #0x0
	mov		r12, r0
	cmp		r6, r1
	bne		_08075ff2
	mov		r3, #0x1
_08075ff2:
	cmp		r3, #0x0
	beq		_08076014
	ldr		r1, _08076010
	add		r0, r4, r1
	cmp		r2, r0
	bge		_08076024
	mov		r1, #0xc0
	lsl		r1, r1, #0x7
	b		_08076020

_08076004:	.4byte 0x0200D5E4
_08076008:	.4byte 0x0200D5E8
_0807600c:	.4byte 0x0200D5D4
_08076010:	.4byte 0xFFFFA000

_08076014:
	ldr		r1, _0807607c
	add		r0, r4, r1
	cmp		r2, r0
	ble		_08076024
	mov		r1, #0x80
	lsl		r1, r1, #0x7
_08076020:
	add		r0, r2, r1
	sub		r6, r0, r4
_08076024:
	add		r0, r4, r6
	mov		r1, r12
	str		r7, [r1, #0x0]
	str		r0, [r1, #0x4]
_0807602c:
	ldr		r1, [r5, #0x28]
	lsl		r0, r1, #0x2
	add		r0, r8
	ldr		r4, [r0, #0x0]
	cmp		r1, #0x3
	bls		_08076044
	ldr		r0, _08076080
	ldr		r1, _08076084
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08076044:
	cmp		r4, #0x0
	beq		_08076098
	mov		r2, #0x10
	ldr		r0, [r4, #0x28]
	mov		r1, #0x0
	cmp		r0, #0x1
	bne		_08076054
	mov		r1, #0x1
_08076054:
	cmp		r1, #0x0
	beq		_0807605c
	mov		r2, #0x18
	neg		r2, r2
_0807605c:
	mov		r0, #0x6
	ldrsh	r5, [r4, r0]
	mov		r1, #0xa
	ldrsh	r0, [r4, r1]
	add		r3, r0, #0x0
	add		r3, #0xa0
	ldr		r0, _08076088
	ldr		r0, [r0, #0x0]
	add		r1, r3, r2
	str		r5, [r0, #0x8]
	str		r1, [r0, #0xc]
	cmp		r2, #0x0
	bge		_0807608c
	sub		r2, #0x8
	b		_0807608e

.incbin "base.gba", 0x7607A, 0x2

_0807607c:	.4byte 0xFFFFC000
_08076080:	.4byte 0x080d3ff8 @ n_taguchi/ntSwimming.cpp
_08076084:	.4byte 0x00000665
_08076088:	.4byte 0x0200D5E4

_0807608c:
	add		r2, #0x18
_0807608e:
	ldr		r0, _080760a4
	ldr		r0, [r0, #0x0]
	add		r1, r3, r2
	str		r5, [r0, #0x18]
	str		r1, [r0, #0x1c]
_08076098:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x760A2, 0x2

_080760a4:	.4byte 0x0200D5E8
	thumb_func_end sub_08075f90

	thumb_func_start sub_080760a8
sub_080760a8:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r0, [r6, #0xc]
	cmp		r0, #0x4
	bls		_080760b6
	b		_080762c0
_080760b6:
	lsl		r0, r0, #0x2
	ldr		r1, _080760c0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080760c0:	.4byte 0x080760c4
_080760c4:	.4byte 0x080760d8

.incbin "base.gba", 0x760C8, 0x10
	thumb_func_end sub_080760a8


.incbin "base.gba", 0x760D8, 0x1E8

_080762c0:

.incbin "base.gba", 0x762C0, 0x8
	thumb_func_start sub_080762c8
sub_080762c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r1, #0x0
	ldr		r0, _0807632c
	ldr		r7, [r0, #0x0]
	cmp		r5, #0x3
	bls		_080762e4
	ldr		r0, _08076330
	ldr		r1, _08076334
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080762e4:
	ldr		r6, _08076338
	lsl		r4, r5, #0x1
	add		r4, r4, r5
	lsl		r4, r4, #0x2
	add		r0, r4, r6
	ldr		r5, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	add		r2, r5, #0x0
	bl		sub_08074660
	mov		r0, #0x0
	mov		r8, r0
	strh	r5, [r7, #0x4]
	add		r0, r6, #0x4
	add		r0, r4, r0
	ldr		r5, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x1
	add		r2, r5, #0x0
	bl		sub_08074660
	strh	r5, [r7, #0x10]
	add		r6, #0x8
	add		r4, r4, r6
	ldr		r0, [r4, #0x0]
	str		r0, [r7, #0x24]
	mov		r0, r8
	str		r0, [r7, #0x28]
	str		r0, [r7, #0x2c]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7632A, 0x2

_0807632c:	.4byte 0x0200D5E8
_08076330:	.4byte 0x080d3ff8 @ n_taguchi/ntSwimming.cpp
_08076334:	.4byte 0x0000074B
_08076338:	.4byte 0x080d417c
	thumb_func_end sub_080762c8

	thumb_func_start sub_0807633c
sub_0807633c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	add		r7, r4, #0x0
	cmp		r6, #0x3
	bne		_0807635c
	cmp		r7, #0x3
	bne		_0807635c
	bl		sub_08074378
	add		r7, r0, #0x3
_0807635c:
	ldr		r1, _08076384
	lsl		r2, r6, #0x2
	add		r0, r2, r7
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r5, #0x1c]
	mov		r0, #0x0
	str		r0, [r5, #0x20]
	str		r6, [r5, #0xc]
	str		r4, [r5, #0x10]
	str		r0, [r5, #0x24]
	mov		r1, #0x1
	and		r4, r1
	add		r6, r2, #0x0
	cmp		r4, #0x0
	beq		_08076388
	str		r0, [r5, #0x28]
	mov		r0, #0x6
	b		_0807638c

_08076384:	.4byte 0x080d41ec

_08076388:
	str		r1, [r5, #0x28]
	mov		r0, #0x8
_0807638c:
	str		r0, [r5, #0x34]
	mov		r0, #0x1
	str		r0, [r5, #0x38]
	ldr		r1, [r5, #0x1c]
	ldr		r0, [r5, #0x20]
	add		r1, r1, r0
	ldr		r0, [r5, #0x34]
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r2, r8
	ldr		r3, [sp, #0x0+0x1c]
	bl		sub_080742c8
	ldr		r1, _08076400
	add		r0, r6, r7
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	bl		sub_08009650
	ldr		r6, [r5, #0x2c]
	cmp		r6, #0x0
	bne		_080763f0
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x2c]
	add		r0, r4, #0x0
	mov		r1, #0x22
	bl		sub_0808e03c
	ldr		r0, [r5, #0x2c]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x2c]
	add		r0, #0x70
	bl		sub_0808b3d4
	str		r6, [r5, #0x30]
_080763f0:
	mov		r0, #0x0
	str		r0, [r5, #0x40]
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08076400:	.4byte 0x080d4234
	thumb_func_end sub_0807633c

	thumb_func_start sub_08076404
sub_08076404:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_080764cc
	ldr		r0, [r4, #0x40]
	cmp		r0, #0x0
	beq		_08076426
	add		r0, r3, #0x0
	bl		sub_0808e1ac
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	beq		_080764cc
	bl		sub_0808e1ac
	b		_080764cc
_08076426:
	ldr		r0, _080764b8
	ldr		r1, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	lsl		r1, r1, #0x8
	ldr		r0, [r4, #0x4]
	sub		r0, r0, r1
	asr		r5, r0, #0x10
	lsl		r2, r2, #0x8
	ldr		r0, [r4, #0x8]
	sub		r0, r0, r2
	asr		r0, r0, #0x10
	add		r2, r0, #0x0
	add		r2, #0xa0
	add		r1, r5, #0x0
	add		r1, #0x20
	mov		r0, #0x98
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_080764bc
	mov		r0, #0x30
	neg		r0, r0
	cmp		r2, r0
	blt		_080764bc
	cmp		r2, #0xd0
	bgt		_080764bc
	add		r0, r3, #0x0
	add		r0, #0x54
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x56
	strh	r2, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x34]
	add		r0, #0x5c
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x38]
	add		r0, #0x69
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
	ldr		r2, [r4, #0x2c]
	cmp		r2, #0x0
	beq		_080764cc
	ldr		r0, [r4, #0x0]
	add		r0, #0x54
	ldrh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r1, [r4, #0x2c]
	ldr		r0, [r4, #0x0]
	add		r0, #0x56
	ldrh	r0, [r0, #0x0]
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	ldr		r1, [r4, #0x2c]
	ldr		r0, [r4, #0x34]
	sub		r0, #0x1
	add		r1, #0x5c
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x2c]
	ldr		r1, [r4, #0x38]
	add		r0, #0x69
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x30]
	cmp		r0, #0x0
	beq		_080764cc
	ldr		r0, [r4, #0x2c]
	bl		sub_0808e4a0
	b		_080764cc

_080764b8:	.4byte 0x0200D5D4

_080764bc:
	ldr		r0, [r4, #0x0]
	bl		sub_0808e1ac
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	beq		_080764cc
	bl		sub_0808e1ac
_080764cc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x764D2, 0x2
	thumb_func_end sub_08076404

	thumb_func_start sub_080764d4
sub_080764d4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x40]
	cmp		r0, #0x0
	bne		_08076570
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08076570
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x3
	bls		_080764f6
	ldr		r0, _0807651c
	ldr		r1, _08076520
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080764f6:
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	beq		_0807650a
	add		r0, #0x70
	bl		sub_0808b3d4
_0807650a:
	ldr		r0, [r4, #0x14]
	cmp		r0, #0x1
	beq		_0807652e
	cmp		r0, #0x1
	bgt		_08076524
	cmp		r0, #0x0
	beq		_08076570
	b		_0807655c

.incbin "base.gba", 0x7651A, 0x2

_0807651c:	.4byte 0x080d3ff8 @ n_taguchi/ntSwimming.cpp
_08076520:	.4byte 0x000007F5

_08076524:
	cmp		r0, #0x2
	beq		_0807653e
	cmp		r0, #0x3
	beq		_0807654e
	b		_0807655c
_0807652e:
	ldr		r1, [r4, #0x44]
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0xc]
	bl		sub_080bbc74
	b		_0807655c
_0807653e:
	ldr		r1, [r4, #0x44]
	mov		r2, #0x10
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x14]
	bl		sub_080bbc74
	b		_0807655c
_0807654e:
	ldr		r1, [r4, #0x44]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
_0807655c:
	mov		r2, #0x1
	ldr		r1, [r4, #0x8]
	ldr		r0, _08076578
	cmp		r1, r0
	ble		_08076568
	mov		r2, #0x2
_08076568:
	ldr		r0, [r4, #0x38]
	cmp		r2, r0
	beq		_08076570
	str		r2, [r4, #0x38]
_08076570:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76576, 0x2

_08076578:	.4byte 0x055F0000
	thumb_func_end sub_080764d4

	thumb_func_start sub_0807657c
sub_0807657c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x18]
	cmp		r5, #0x1
	beq		_080765a2
	cmp		r5, #0x1
	bgt		_08076590
	cmp		r5, #0x0
	beq		_08076596
	b		_08076660
_08076590:
	cmp		r5, #0x2
	beq		_0807660c
	b		_08076660
_08076596:
	str		r5, [r4, #0x20]
	ldr		r1, [r4, #0x1c]
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	b		_080765f6
_080765a2:
	ldr		r0, [r4, #0x0]
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08076660
	str		r5, [r4, #0x30]
	ldr		r1, [r4, #0x10]
	cmp		r1, #0x0
	bne		_080765c0
	mov		r0, #0x2
	str		r0, [r4, #0x14]
	str		r1, [r4, #0x18]
	b		_08076660
_080765c0:
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	bne		_080765d2
	ldr		r0, _08076604
	ldr		r1, _08076608
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080765d2:
	ldr		r0, [r4, #0x2c]
	bl		sub_0808e278
	ldr		r0, [r4, #0x2c]
	mov		r1, #0x22
	bl		sub_0808e03c
	ldr		r0, [r4, #0x2c]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	str		r5, [r4, #0x20]
	ldr		r1, [r4, #0x1c]
	add		r1, #0x1
	add		r0, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
_080765f6:
	bl		sub_08074250
	ldr		r0, [r4, #0x18]
	add		r0, #0x1
	str		r0, [r4, #0x18]
	b		_08076660

.incbin "base.gba", 0x76602, 0x2

_08076604:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_08076608:	.4byte 0x000001FD

_0807660c:
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	bne		_0807661e
	ldr		r0, _08076678
	ldr		r1, _0807667c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807661e:
	ldr		r2, [r4, #0x2c]
	add		r0, r2, #0x0
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08076660
	str		r5, [r4, #0x14]
	str		r0, [r4, #0x18]
	cmp		r2, #0x0
	bne		_08076646
	ldr		r0, _08076678
	ldr		r1, _08076680
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08076646:
	ldr		r0, [r4, #0x2c]
	bl		sub_0808e278
	ldr		r0, [r4, #0x2c]
	ldr		r1, [r4, #0x1c]
	add		r1, #0x3
	bl		sub_0808e03c
	ldr		r0, [r4, #0x2c]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
_08076660:
	ldr		r1, _08076684
	ldr		r0, [r4, #0x10]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, [r4, #0x8]
	add		r0, r0, r1
	str		r0, [r4, #0x8]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76676, 0x2

_08076678:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_0807667c:	.4byte 0x00000227
_08076680:	.4byte 0x000001EF
_08076684:	.4byte 0x080d41ac
	thumb_func_end sub_0807657c

	thumb_func_start sub_08076688
sub_08076688:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x0]
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080766d8
	mov		r0, #0x1
	str		r0, [r4, #0x20]
	ldr		r1, [r4, #0x1c]
	add		r1, #0x1
	add		r0, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_08074250
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	bne		_080766be
	ldr		r0, _08076718
	ldr		r1, _0807671c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080766be:
	ldr		r0, [r4, #0x2c]
	bl		sub_0808e278
	ldr		r0, [r4, #0x2c]
	ldr		r1, [r4, #0x1c]
	add		r1, #0x3
	bl		sub_0808e03c
	ldr		r0, [r4, #0x2c]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
_080766d8:
	ldr		r5, [r4, #0x8]
	asr		r0, r5, #0x10
	ldr		r1, _08076720
	bl		sub_080bbcac
	add		r3, r5, #0x0
	cmp		r0, #0x0
	bge		_080766ea
	mov		r0, #0x0
_080766ea:
	cmp		r0, #0x9
	ble		_080766f0
	mov		r0, #0x9
_080766f0:
	mov		r2, #0x0
	str		r2, [r4, #0x24]
	ldr		r1, [r4, #0x3c]
	cmp		r1, #0x0
	beq		_08076702
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x24]
_08076702:
	ldr		r0, [r4, #0x28]
	cmp		r0, #0x0
	bne		_08076724
	ldr		r0, [r4, #0x24]
	sub		r0, r3, r0
	str		r0, [r4, #0x8]
	cmp		r0, #0x0
	bgt		_0807673a
	str		r2, [r4, #0x8]
	b		_08076734

.incbin "base.gba", 0x76716, 0x2

_08076718:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_0807671c:	.4byte 0x000001EF
_08076720:	.4byte 0x00000113

_08076724:
	ldr		r0, [r4, #0x24]
	add		r0, r5, r0
	str		r0, [r4, #0x8]
	ldr		r1, _08076740
	cmp		r0, r1
	ble		_0807673a
	ldr		r0, _08076744
	str		r0, [r4, #0x8]
_08076734:
	mov		r0, #0x3
	str		r0, [r4, #0x14]
	str		r2, [r4, #0x18]
_0807673a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08076740:	.4byte 0x0ABDFFFF
_08076744:	.4byte 0x0ABE0000
	thumb_func_end sub_08076688

	thumb_func_start sub_08076748
sub_08076748:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x18]
	cmp		r0, #0x0
	bne		_080767a8
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x3
	bne		_08076794
	mov		r0, #0x2
	str		r0, [r4, #0x20]
	ldr		r1, [r4, #0x1c]
	add		r1, #0x2
	add		r0, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08074250
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	bne		_0807677c
	ldr		r0, _080767a0
	ldr		r1, _080767a4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807677c:
	ldr		r0, [r4, #0x2c]
	bl		sub_0808e278
	ldr		r0, [r4, #0x2c]
	mov		r1, #0x22
	bl		sub_0808e03c
	ldr		r0, [r4, #0x2c]
	mov		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
_08076794:
	mov		r0, #0xa
	str		r0, [r4, #0x34]
	mov		r0, #0x1
	str		r0, [r4, #0x18]
	b		_080767c8

.incbin "base.gba", 0x7679E, 0x2

_080767a0:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_080767a4:	.4byte 0x000001FD

_080767a8:
	ldr		r0, [r4, #0x0]
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080767c8
	mov		r0, #0x2
	str		r0, [r4, #0x20]
	ldr		r1, [r4, #0x1c]
	add		r1, #0x2
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_08074250
_080767c8:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x767CE, 0x482
	thumb_func_end sub_08076748

	thumb_func_start sub_08076c50
sub_08076c50:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08076c84
	str		r0, [r4, #0x44]
	add		r0, r4, #0x0
	add		r0, #0x6c
	mov		r1, #0x2
	bl		sub_08074224
	ldr		r0, _08076c88
	str		r0, [r4, #0x44]
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	beq		_08076c74
	mov		r1, #0x3
	bl		sub_0808e28c
_08076c74:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807434c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76C82, 0x2

_08076c84:	.4byte 0x080e2634
_08076c88:	.4byte 0x080e2654
	thumb_func_end sub_08076c50

	thumb_func_start sub_08076c8c
sub_08076c8c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	bl		sub_0807436c
	mov		r5, #0x0
	str		r5, [r4, #0x2c]
	str		r5, [r4, #0x3c]
	str		r5, [r4, #0x14]
	str		r5, [r4, #0x18]
	mov		r0, #0x1
	str		r0, [r4, #0x40]
	ldr		r0, _08076cd4
	str		r0, [r4, #0x44]
	add		r6, r4, #0x0
	add		r6, #0x6c
	add		r0, r6, #0x0
	bl		sub_08074248
	str		r5, [r4, #0x48]
	str		r5, [r4, #0x4c]
	str		r5, [r4, #0x50]
	str		r5, [r4, #0x54]
	str		r5, [r4, #0x58]
	str		r5, [r4, #0x5c]
	str		r5, [r4, #0x60]
	str		r5, [r4, #0x64]
	str		r5, [r4, #0x68]
	add		r0, r6, #0x0
	mov		r1, #0x3
	bl		sub_080741fc
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x76CD2, 0x2

_08076cd4:	.4byte 0x080e2634

.incbin "base.gba", 0x76CD8, 0x80
	thumb_func_end sub_08076c8c

	thumb_func_start sub_08076d58
sub_08076d58:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08076d7c
	str		r0, [r4, #0x44]
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	beq		_08076d6e
	mov		r1, #0x3
	bl		sub_0808e28c
_08076d6e:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807434c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08076d7c:	.4byte 0x080e2654
	thumb_func_end sub_08076d58

	thumb_func_start sub_08076d80
sub_08076d80:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0807436c
	ldr		r0, _08076da4
	str		r0, [r4, #0x44]
	mov		r0, #0x0
	str		r0, [r4, #0x2c]
	str		r0, [r4, #0x3c]
	str		r0, [r4, #0x14]
	str		r0, [r4, #0x18]
	mov		r0, #0x1
	str		r0, [r4, #0x40]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x76DA2, 0x2

_08076da4:	.4byte 0x080e2654

.incbin "base.gba", 0x76DA8, 0x8
	thumb_func_end sub_08076d80

	thumb_func_start sub_08076db0
sub_08076db0:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0xc]
	cmp		r0, #0x0
	bne		_08076dc2
	str		r0, [r2, #0x34]
	str		r0, [r2, #0x2c]
	mov		r0, #0x1
	str		r0, [r2, #0xc]
_08076dc2:
	ldr		r1, [r2, #0x4]
	lsl		r1, r1, #0x2
	add		r0, r2, #0x0
	add		r0, #0x18
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08076dd6
	mov		r0, #0x1
	str		r0, [r1, #0x68]
_08076dd6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76DDA, 0x2
	thumb_func_end sub_08076db0

	thumb_func_start sub_08076ddc
sub_08076ddc:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _08076e18
	str		r0, [r6, #0x14]
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r5, #0x3
_08076dec:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08076df8
	mov		r1, #0x3
	bl		sub_08076c50
_08076df8:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08076dec
	ldr		r0, _08076e1c
	str		r0, [r6, #0x14]
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_08076e12
	add		r0, r6, #0x0
	bl		sub_0808afac
_08076e12:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08076e18:	.4byte 0x080e25e4
_08076e1c:	.4byte 0x080e2674
	thumb_func_end sub_08076ddc

	thumb_func_start sub_08076e20
sub_08076e20:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0x0
	str		r1, [r4, #0x10]
	ldr		r0, _08076e60
	str		r0, [r4, #0x14]
	str		r1, [r4, #0x0]
	ldr		r0, _08076e64
	mov		r3, #0x0
	mov		r2, #0x3
	add		r1, r4, #0x0
	add		r1, #0x24
_08076e38:
	str		r3, [r1, #0x0]
	sub		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08076e38
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0x0
	mov		r3, #0x1
	bl		sub_0802ee9c
	add		r0, r4, #0x0
	bl		sub_08075ef8
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x76E5E, 0x2

_08076e60:	.4byte 0x080e25e4
_08076e64:	.4byte 0x0200D528
	thumb_func_end sub_08076e20

	thumb_func_start sub_08076e68
sub_08076e68:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _08076ea4
	str		r0, [r6, #0x14]
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r5, #0x3
_08076e78:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08076e84
	mov		r1, #0x3
	bl		sub_08076d58
_08076e84:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08076e78
	ldr		r0, _08076ea8
	str		r0, [r6, #0x14]
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_08076e9e
	add		r0, r6, #0x0
	bl		sub_0808afac
_08076e9e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08076ea4:	.4byte 0x080e260c
_08076ea8:	.4byte 0x080e2674
	thumb_func_end sub_08076e68

	thumb_func_start sub_08076eac
sub_08076eac:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	mov		r0, #0x0
	str		r0, [r5, #0x10]
	ldr		r0, _08076f1c
	str		r0, [r5, #0x14]
	str		r1, [r5, #0x0]
	mov		r2, #0x0
	mov		r1, #0x3
	add		r0, r5, #0x0
	add		r0, #0x24
_08076ec4:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08076ec4
	cmp		r4, #0x2
	bls		_08076ede
	ldr		r0, _08076f20
	ldr		r1, _08076f24
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08076ede:
	str		r4, [r5, #0x28]
	ldr		r0, _08076f28
	mov		r1, #0x3
	bl		sub_080b63dc
	add		r4, r0, #0x0
	cmp		r4, #0x2
	bls		_08076efa
	ldr		r0, _08076f20
	ldr		r1, _08076f2c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08076efa:
	str		r4, [r5, #0x2c]
	add		r0, r5, #0x0
	bl		sub_08075cdc
	ldr		r0, _08076f30
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x10
	mov		r2, #0x0
	ldrsb	r2, [r5, r2]
	mov		r3, #0x0
	bl		sub_0802ee9c
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08076f1c:	.4byte 0x080e260c
_08076f20:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_08076f24:	.4byte 0x00000373
_08076f28:	.4byte 0x0200BDD4
_08076f2c:	.4byte 0x0000037A
_08076f30:	.4byte 0x0200D528
	thumb_func_end sub_08076eac

	thumb_func_start sub_08076f34
sub_08076f34:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _08076f50
	str		r0, [r2, #0x14]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08076f4a
	add		r0, r2, #0x0
	bl		sub_0808afac
_08076f4a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76F4E, 0x2

_08076f50:	.4byte 0x080e2674

.incbin "base.gba", 0x76F54, 0x10
	thumb_func_end sub_08076f34

	thumb_func_start sub_08076f64
sub_08076f64:
	push	{ lr }
	mov		r1, #0x0
	add		r2, r0, #0x0
	add		r2, #0x94
_08076f6c:
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08076f78
	add		r0, r1, #0x0
	b		_08076f80
_08076f78:
	add		r1, #0x1
	cmp		r1, #0x3
	ble		_08076f6c
	ldr		r0, _08076f84
_08076f80:
	pop		{ r1 }
	bx		r1

_08076f84:	.4byte 0x80808080
	thumb_func_end sub_08076f64

	thumb_func_start sub_08076f88
sub_08076f88:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r1, #0x5c]
	cmp		r0, #0x2
	bne		_08076f9c
	add		r1, r4, #0x0
	add		r1, #0xac
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	b		_08076fc8
_08076f9c:
	cmp		r0, #0x2
	ble		_08076fc8
	cmp		r0, #0x5
	bgt		_08076fc8
	mov		r0, #0x3
	str		r0, [r4, #0x58]
	mov		r2, #0x0
	str		r2, [r4, #0x5c]
	add		r1, r4, #0x0
	add		r1, #0xb0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xac
	str		r2, [r0, #0x0]
	ldr		r0, _08076fd8
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08076fdc
	mov		r3, #0x0
	bl		sub_080b7724
_08076fc8:
	add		r1, r4, #0x0
	add		r1, #0xa8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76FD6, 0x2

_08076fd8:	.4byte 0x0200D520
_08076fdc:	.4byte 0xFFFF8001

.incbin "base.gba", 0x76FE0, 0x8
	thumb_func_end sub_08076f88

	thumb_func_start sub_08076fe8
sub_08076fe8:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r0, #0xac
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	ldr		r2, [r3, #0x5c]
	cmp		r2, #0x0
	beq		_08076ffe
	cmp		r2, #0x1
	beq		_0807702c
	b		_08077048
_08076ffe:
	ldr		r0, _0807701c
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08077048
	ldr		r0, _08077020
	ldr		r0, [r0, #0x0]
	ldr		r1, _08077024
	ldr		r2, _08077028
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	ldr		r0, [r3, #0x5c]
	add		r0, #0x1
	str		r0, [r3, #0x5c]
	b		_08077048

.incbin "base.gba", 0x7701A, 0x2

_0807701c:	.4byte 0x0200D530
_08077020:	.4byte 0x0200D528
_08077024:	.4byte 0x00002AF8
_08077028:	.4byte 0x000005F4

_0807702c:
	ldr		r4, _08077050
	ldr		r0, [r4, #0x4]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	str		r0, [r4, #0x4]
	ldr		r1, _08077054
	cmp		r0, r1
	ble		_08077048
	mov		r0, #0xa0
	lsl		r0, r0, #0x7
	str		r0, [r4, #0x4]
	str		r2, [r3, #0x58]
	str		r5, [r3, #0x5c]
_08077048:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7704E, 0x2

_08077050:	.4byte 0x0200D5D4
_08077054:	.4byte 0x00004FFF
	thumb_func_end sub_08076fe8

	thumb_func_start sub_08077058
sub_08077058:
	push	{ r4, lr }
	ldr		r4, _08077080
	ldr		r1, _08077084
	add		r0, r4, r1
	mov		r1, #0xb4
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_080746d0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7707E, 0x2

_08077080:	.4byte 0x0200DB50
_08077084:	.4byte 0xFFFFFEB0
	thumb_func_end sub_08077058

	thumb_func_start sub_08077088
sub_08077088:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r6, #0x0
	mov		r5, #0x1
_08077092:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807709e
	mov		r1, #0x3
	bl		sub_0808e28c
_0807709e:
	add		r4, #0xc
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08077092
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_080770b4
	add		r0, r6, #0x0
	bl		sub_0808afac
_080770b4:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x770BA, 0x23E
	thumb_func_end sub_08077088

	thumb_func_start sub_080772f8
sub_080772f8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x2
	bls		_0807730e
	ldr		r0, _08077318
	ldr		r1, _0807731c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807730e:
	str		r4, [r5, #0x2c]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x77316, 0x2

_08077318:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_0807731c:	.4byte 0x0000037A
	thumb_func_end sub_080772f8

	thumb_func_start sub_08077320
sub_08077320:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x2
	bls		_08077336
	ldr		r0, _08077340
	ldr		r1, _08077344
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08077336:
	str		r4, [r5, #0x28]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7733E, 0x2

_08077340:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_08077344:	.4byte 0x00000373
	thumb_func_end sub_08077320

	thumb_func_start sub_08077348
sub_08077348:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	mov		r7, #0x0
	add		r4, r5, #0x0
	add		r4, #0x18
	mov		r6, #0x3
_08077354:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08077362
	mov		r1, #0x3
	bl		sub_08076d58
	str		r7, [r4, #0x0]
_08077362:
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08077354
	mov		r0, #0x0
	str		r0, [r5, #0x8]
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	bl		sub_08075cdc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08077348

	thumb_func_start sub_0807737c
sub_0807737c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	mov		r7, #0x0
	add		r4, r6, #0x0
	add		r4, #0x18
	mov		r5, #0x3
_08077388:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08077396
	mov		r1, #0x3
	bl		sub_08076d58
	str		r7, [r4, #0x0]
_08077396:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08077388
	mov		r0, #0x0
	str		r0, [r6, #0x8]
	str		r0, [r6, #0xc]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x773AA, 0xE
	thumb_func_end sub_0807737c

	thumb_func_start sub_080773b8
sub_080773b8:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, [r1, #0x14]
	mov		r2, #0x0
	cmp		r0, #0x1
	bne		_080773c6
	mov		r2, #0x1
_080773c6:
	cmp		r2, #0x0
	beq		_080773d4
	ldr		r0, [r1, #0x18]
	cmp		r0, #0x2
	bgt		_080773d4
	mov		r0, #0x1
	b		_080773d6
_080773d4:
	mov		r0, #0x0
_080773d6:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x773DA, 0x32
	thumb_func_end sub_080773b8

	thumb_func_start sub_0807740c
sub_0807740c:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, [r1, #0x14]
	mov		r2, #0x0
	cmp		r0, #0x1
	bne		_0807741a
	mov		r2, #0x1
_0807741a:
	cmp		r2, #0x0
	beq		_08077428
	ldr		r0, [r1, #0x18]
	cmp		r0, #0x1
	bgt		_08077428
	mov		r0, #0x1
	b		_0807742a
_08077428:
	mov		r0, #0x0
_0807742a:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7742E, 0x6
	thumb_func_end sub_0807740c

	thumb_func_start sub_08077434
sub_08077434:
	push	{ lr }
	ldr		r0, [r0, #0x28]
	cmp		r1, r0
	beq		_08077440
	mov		r0, #0x0
	b		_08077442
_08077440:
	mov		r0, #0x1
_08077442:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x77446, 0x5A
	thumb_func_end sub_08077434

	thumb_func_start sub_080774a0
sub_080774a0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	bne		_080774ba
	ldr		r0, _080774d8
	ldr		r1, _080774dc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080774ba:
	ldr		r0, [r4, #0x2c]
	bl		sub_0808e278
	ldr		r0, [r4, #0x2c]
	mov		r1, #0x22
	bl		sub_0808e03c
	ldr		r0, [r4, #0x2c]
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_0808e3c0
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080774d8:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_080774dc:	.4byte 0x000001FD
	thumb_func_end sub_080774a0

	thumb_func_start sub_080774e0
sub_080774e0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x0
	bne		_080774fa
	ldr		r0, _0807751c
	ldr		r1, _08077520
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080774fa:
	ldr		r0, [r4, #0x2c]
	bl		sub_0808e278
	ldr		r0, [r4, #0x2c]
	ldr		r1, [r4, #0x1c]
	add		r1, #0x3
	bl		sub_0808e03c
	ldr		r0, [r4, #0x2c]
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_0808e3c0
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7751A, 0x2

_0807751c:	.4byte 0x080d3fe0 @ n_taguchi/ntSwimming.h
_08077520:	.4byte 0x000001EF

.incbin "base.gba", 0x77524, 0x4
	thumb_func_end sub_080774e0

	thumb_func_start sub_08077528
sub_08077528:
	push	{ r4, lr }
	add		r4, r1, #0x0
	str		r4, [r0, #0x20]
	ldr		r1, [r0, #0x1c]
	add		r1, r1, r4
	bl		sub_08074250
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7753C, 0x8
	thumb_func_end sub_08077528

	thumb_func_start sub_08077544
sub_08077544:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _080775d4
	str		r0, [r5, #0x4c]
	ldr		r0, _080775d8
	str		r0, [r5, #0x54]
	ldr		r0, _080775dc
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x64
	bl		sub_0808e21c
	add		r0, r5, #0x0
	add		r0, #0xd4
	bl		sub_0808b374
	add		r0, r5, #0x0
	add		r0, #0xd0
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_08074248
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_0807a368
	str		r4, [r5, #0x58]
	str		r4, [r5, #0x60]
	str		r4, [r5, #0x5c]
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r1, #0x8
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r1, #0x4
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r1, #0x4
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r1, #0x4
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r1, #0x4
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r1, #0x38
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080775e0
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_080775d4:	.4byte 0x080e26b4
_080775d8:	.4byte 0x080e269c
_080775dc:	.4byte 0x080e26cc
	thumb_func_end sub_08077544

	thumb_func_start sub_080775e0
sub_080775e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, r0, #0x0
	ldr		r0, _080776e0
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	str		r4, [r0, #0x4]
	add		r0, r7, #0x0
	add		r0, #0xf4
	str		r4, [r0, #0x0]
	add		r0, #0x4
	str		r4, [r0, #0x0]
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r1, #0x2
	bl		sub_080741fc
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	ldr		r0, [r7, #0x58]
	cmp		r0, #0x0
	bne		_08077638
	mov		r0, #0x50
	bl		sub_0808af94
	bl		sub_0807ac64
	str		r0, [r7, #0x58]
_08077638:
	mov		r5, #0x0
	ldr		r4, _080776e4
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807764e
	ldr		r0, _080776e8
	ldr		r1, _080776ec
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807764e:
	add		r3, r7, #0x0
	add		r3, #0x5c
	add		r2, r7, #0x0
	add		r2, #0x54
	str		r2, [sp, #0x10]
	mov		r0, #0x64
	add		r0, r0, r7
	mov		r10, r0
	add		r1, r7, #0x0
	add		r1, #0xcd
	str		r1, [sp, #0xC]
	add		r2, #0x64
	str		r2, [sp, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xba
	str		r0, [sp, #0x4]
	sub		r1, #0xd
	str		r1, [sp, #0x8]
	ldr		r0, [r4, #0x0]
	add		r0, #0x4
	mov		r2, #0x4
_08077678:
	ldr		r1, [r0, #0x0]
	cmp		r5, r1
	bge		_08077680
	add		r5, r1, #0x0
_08077680:
	add		r0, #0x18
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08077678
	add		r5, #0x1
	mov		r9, r5
	mov		r6, #0x21
	add		r4, r3, #0x0
	mov		r5, #0x1
_08077692:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080776a4
	mov		r0, #0x20
	bl		sub_0808af94
	bl		sub_0807abc0
	str		r0, [r4, #0x0]
_080776a4:
	ldmia	r4!, { r0 }
	mov		r1, r9
	add		r2, r6, #0x0
	mov		r3, #0x50
	bl		sub_08079e7c
	add		r6, #0x20
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08077692
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r6, r7, r2
	ldr		r5, [r6, #0x0]
	cmp		r5, #0x0
	bne		_080776f0
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r5, [r4, #0x6c]
	str		r4, [r6, #0x0]
	b		_080776f6

.incbin "base.gba", 0x776DE, 0x2

_080776e0:	.4byte 0x0200D5FC
_080776e4:	.4byte 0x0200D604
_080776e8:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_080776ec:	.4byte 0x0000043E

_080776f0:
	add		r0, r5, #0x0
	bl		sub_0808e278
_080776f6:
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	ldr		r0, [r4, #0x0]
	mov		r1, #0xf
	bl		sub_0808e03c
	ldr		r0, [r4, #0x0]
	mov		r1, #0x9
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r2, #0x92
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, _08077854
	ldr		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	mov		r0, #0x96
	lsl		r0, r0, #0x1
	add		r5, r7, r0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0807774a
	mov		r0, #0x10
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0807436c
	add		r0, r4, #0x0
	bl		sub_0807a990
	str		r4, [r5, #0x0]
_0807774a:
	mov		r6, #0x0
	ldr		r1, _08077858
	mov		r8, r1
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r5, r7, r2
_08077756:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08077782
	mov		r0, #0x18
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0807436c
	cmp		r6, #0x1
	ble		_08077778
	mov		r0, r8
	mov		r1, #0x4f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08077778:
	str		r6, [r4, #0xc]
	add		r0, r4, #0x0
	bl		sub_0807a854
	str		r4, [r5, #0x0]
_08077782:
	add		r5, #0x4
	add		r6, #0x1
	cmp		r6, #0x1
	ble		_08077756
	mov		r0, #0x9c
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080777ba
	add		r4, r1, #0x0
	mov		r0, #0x40
	bl		sub_0808af94
	add		r2, r0, #0x0
	mov		r3, #0x0
	add		r0, #0x10
	mov		r1, #0x4
_080777a6:
	str		r3, [r0, #0x0]
	str		r3, [r0, #0x14]
	add		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_080777a6
	mov		r0, #0x0
	str		r0, [r2, #0x38]
	str		r0, [r2, #0xc]
	str		r2, [r4, #0x0]
_080777ba:
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	bl		sub_080706ac
	ldr		r1, [sp, #0x10]
	str		r1, [r0, #0x54]
	mov		r2, #0xb8
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080777ec
	mov		r0, #0xa4
	bl		sub_0808af94
	bl		sub_0807a754
	str		r0, [r4, #0x0]
_080777ec:
	ldr		r0, [r4, #0x0]
	mov		r1, r9
	bl		sub_0807a704
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_08078e50
	ldr		r0, _0807785c
	ldr		r1, _08077860
	ldr		r2, _08077864
	bl		sub_08006068
	str		r5, [r4, #0x0]
	ldr		r1, _08077868
	mov		r0, r10
	bl		sub_0808e03c
	mov		r0, r10
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r1, [sp, #0xC]
	strb	r5, [r1, #0x0]
	mov		r0, #0x18
	ldr		r2, [sp, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, #0x98
	ldr		r1, [sp, #0x4]
	strh	r0, [r1, #0x0]
	ldr		r0, _0807786c
	ldr		r2, [sp, #0x8]
	strh	r0, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r5, [r0, #0x0]
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x77852, 0x2

_08077854:	.4byte 0x0200D524
_08077858:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_0807785c:	.4byte 0x02000DCC
_08077860:	.4byte 0x80808080
_08077864:	.4byte 0x080d432a
_08077868:	.4byte 0x00000105
_0807786c:	.4byte 0x0000FFFF
	thumb_func_end sub_080775e0

	thumb_func_start sub_08077870
sub_08077870:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _08077890
	ldr		r5, [r0, #0x0]
	ldr		r0, _08077894
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0807789c
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08077898
	mov		r3, #0x0
	bl		sub_080b7724
	b		_080778a8

_08077890:	.4byte 0x0200D530
_08077894:	.4byte 0x00000282
_08077898:	.4byte 0xFFFF8000

_0807789c:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _080778b0
	mov		r3, #0x0
	bl		sub_080b7724
_080778a8:
	add		r5, r4, #0x0
	add		r5, #0xf4
	b		_080778c0

.incbin "base.gba", 0x778AE, 0x2

_080778b0:	.4byte 0xFFFF8001

_080778b4:
	add		r0, r4, #0x0
	bl		sub_08078cc4
	add		r0, r4, #0x0
	bl		sub_080b7690
_080778c0:
	ldr		r0, _080778f0
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_080778b4
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x0
	bl		sub_0807a418
_080778d6:
	add		r0, r4, #0x0
	bl		sub_0807ac84
	cmp		r0, #0x0
	bne		_080779ba
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x5
	bhi		_080779ce
	lsl		r0, r0, #0x2
	ldr		r1, _080778f4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080778f0:	.4byte 0x0200D530
_080778f4:	.4byte 0x080778f8
_080778f8:	.4byte 0x08077910

.incbin "base.gba", 0x778FC, 0x14

_08077910:
.incbin "base.gba", 0x77910, 0x4
.incbin "base.gba", 0x77914, 0x4
_08077918:
.incbin "base.gba", 0x77918, 0x4
.incbin "base.gba", 0x7791C, 0x4

.incbin "base.gba", 0x77920, 0x8

_08077928:
.incbin "base.gba", 0x77928, 0x4
.incbin "base.gba", 0x7792C, 0x4
_08077930:
.incbin "base.gba", 0x77930, 0x4
.incbin "base.gba", 0x77934, 0x4

.incbin "base.gba", 0x77938, 0x82

_080779ba:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_080778d6
_080779ce:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08077870

	thumb_func_start sub_080779d4
sub_080779d4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x0
	beq		_080779e2
	bl		sub_08079154
_080779e2:
	mov		r4, #0x0
	mov		r1, #0x92
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080779fc
	add		r1, #0x1c
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080779fc
	mov		r4, #0x1
_080779fc:
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x0
	beq		_08077a08
	add		r1, r4, #0x0
	bl		sub_0807aafc
_08077a08:
	ldr		r0, [r5, #0x60]
	cmp		r0, #0x0
	beq		_08077a14
	add		r1, r4, #0x0
	bl		sub_0807aafc
_08077a14:
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r3, r5, r0
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_08077a50
	cmp		r4, #0x0
	beq		_08077a4c
	add		r1, r0, #0x0
	add		r1, #0x54
	mov		r2, #0x0
	mov		r0, #0x11
	strh	r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x56
	mov		r1, #0x50
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x5c
	strh	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x69
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	bl		sub_0808e4a0
	b		_08077a50
_08077a4c:
	bl		sub_0808e1ac
_08077a50:
	mov		r1, #0x96
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_08077a68
	ldr		r0, _08077ae4
	ldr		r1, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	add		r0, r3, #0x0
	bl		sub_0807a8fc
_08077a68:
	mov		r1, #0x98
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_08077a80
	ldr		r0, _08077ae4
	ldr		r1, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	add		r0, r3, #0x0
	bl		sub_0807a07c
_08077a80:
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_08077a98
	ldr		r0, _08077ae4
	ldr		r1, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	add		r0, r3, #0x0
	bl		sub_0807a07c
_08077a98:
	mov		r1, #0x9c
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_08077ab0
	ldr		r0, _08077ae4
	ldr		r1, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	add		r0, r3, #0x0
	bl		sub_0807a234
_08077ab0:
	mov		r1, #0xb8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08077ac0
	bl		sub_0807a614
_08077ac0:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08077ade
	add		r4, r5, #0x0
	add		r4, #0x64
	add		r0, r5, #0x0
	add		r0, #0xd4
	bl		sub_0808b3d4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_08077ade:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08077ae4:	.4byte 0x0200D5FC
	thumb_func_end sub_080779d4

	thumb_func_start sub_08077ae8
sub_08077ae8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x0
	bne		_08077b04
	ldr		r0, _08077b44
	mov		r1, #0xe7
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08077b04:
	mov		r0, #0x94
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08077b1c
	ldr		r0, _08077b44
	ldr		r1, _08077b48
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08077b1c:
	mov		r1, #0xa2
	lsl		r1, r1, #0x1
	add		r1, r1, r5
	mov		r12, r1
	mov		r6, #0x0
	str		r6, [r1, #0x0]
	add		r7, r5, #0x0
	add		r7, #0xf8
	ldr		r2, [r7, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	mov		r8, r7
	cmp		r2, r0
	beq		_08077bb8
	cmp		r2, r0
	bgt		_08077b4c
	sub		r0, #0x1
	cmp		r2, r0
	beq		_08077b56
	b		_08077c8e

_08077b44:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08077b48:	.4byte 0x000001CF

_08077b4c:
	cmp		r2, #0x0
	beq		_08077bca
	cmp		r2, #0x1
	beq		_08077c4c
	b		_08077c8e
_08077b56:
	ldr		r0, [r5, #0x58]
	str		r6, [r0, #0x14]
	str		r6, [r0, #0x18]
	mov		r2, #0x84
	lsl		r2, r2, #0x1
	add		r4, r5, r2
	ldr		r1, [r4, #0x0]
	bl		sub_08079228
	ldr		r0, [r5, #0x58]
	str		r6, [r0, #0x40]
	str		r6, [r0, #0x44]
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r4, #0x0]
	bl		sub_0807a418
	ldr		r4, _08077bb0
	ldr		r2, _08077bb4
	add		r0, r4, r2
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x5
	mov		r2, #0x3f
	mov		r3, #0x10
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r1, r5, #0x0
	add		r1, #0xfc
	mov		r0, #0x11
	str		r0, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0x1
	str		r0, [r7, #0x0]
	b		_08077c8e

.incbin "base.gba", 0x77BAE, 0x2

_08077bb0:	.4byte 0x0200DB50
_08077bb4:	.4byte 0xFFFFFEB0

_08077bb8:
	add		r1, r5, #0x0
	add		r1, #0xfc
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08077bc8
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	b		_08077c8e
_08077bc8:
	str		r0, [r7, #0x0]
_08077bca:
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_08078a2c
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	mov		r4, #0x1
	str		r4, [r0, #0x0]
	mov		r1, #0x96
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	bl		sub_0807a89c
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	bl		sub_0807a7f0
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	bl		sub_0807a7f0
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r0, [r1, #0x0]
	add		r2, #0x78
	add		r0, r0, r2
	str		r4, [r0, #0x0]
	ldr		r4, [r1, #0x0]
	mov		r1, #0xcb
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	sub		r2, #0x4
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bge		_08077c3c
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08077c48
	mov		r3, #0x0
	bl		sub_080b7724
_08077c3c:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	b		_08077c8e

.incbin "base.gba", 0x77C46, 0x2

_08077c48:	.4byte 0xFFFFF801

_08077c4c:
	ldr		r0, [r4, #0x0]
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	bne		_08077c8e
	add		r1, r5, #0x0
	add		r1, #0xf4
	mov		r0, #0x2
	str		r0, [r1, #0x0]
	str		r3, [r7, #0x0]
	mov		r0, r12
	str		r2, [r0, #0x0]
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08077c8e
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_0808f558
	mov		r0, #0x1
	mov		r1, #0xff
	mov		r2, #0x14
	bl		sub_0808f58c
	mov		r0, #0x1
	mov		r1, #0xa
	bl		sub_0808f5cc
_08077c8e:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08077ae8

	thumb_func_start sub_08077c98
sub_08077c98:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x58]
	cmp		r0, #0x0
	bne		_08077cb8
	ldr		r0, _08077d1c
	ldr		r1, _08077d20
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08077cb8:
	ldr		r0, [r6, #0x5c]
	cmp		r0, #0x0
	beq		_08077cc4
	ldr		r0, [r6, #0x60]
	cmp		r0, #0x0
	bne		_08077cd0
_08077cc4:
	ldr		r0, _08077d1c
	ldr		r1, _08077d24
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08077cd0:
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x4
	ble		_08077ce8
	ldr		r0, _08077d1c
	ldr		r1, _08077d28
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08077ce8:
	mov		r2, #0xb8
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08077d02
	ldr		r0, _08077d1c
	mov		r1, #0x8d
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08077d02:
	add		r1, r6, #0x0
	add		r1, #0xf8
	ldr		r0, [r1, #0x0]
	add		r0, #0x2
	mov		r8, r1
	cmp		r0, #0x8
	bls		_08077d12
	b		_080782dc
_08077d12:
	lsl		r0, r0, #0x2
	ldr		r1, _08077d2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08077d1c:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08077d20:	.4byte 0x00000231
_08077d24:	.4byte 0x00000232
_08077d28:	.4byte 0x00000233
_08077d2c:	.4byte 0x08077d30
_08077d30:	.4byte 0x080782be

.incbin "base.gba", 0x77D34, 0x20
	thumb_func_end sub_08077c98


.incbin "base.gba", 0x77D54, 0x588

_080782dc:

.incbin "base.gba", 0x782DC, 0x28
	thumb_func_start sub_08078304
sub_08078304:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	mov		r1, #0xa2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x4
	bls		_0807831e
	b		_08078566
_0807831e:
	lsl		r0, r0, #0x2
	ldr		r1, _08078328
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08078328:	.4byte 0x0807832c
_0807832c:	.4byte 0x08078340

.incbin "base.gba", 0x78330, 0x10
	thumb_func_end sub_08078304


.incbin "base.gba", 0x78340, 0x226

_08078566:

.incbin "base.gba", 0x78566, 0x6
	thumb_func_start sub_0807856c
sub_0807856c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xa0
	add		r6, r0, #0x0
	mov		r0, #0xa2
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r7, r6, #0x0
	add		r7, #0xf8
	ldr		r4, [r7, #0x0]
	cmp		r4, #0x1
	beq		_08078664
	cmp		r4, #0x1
	ble		_08078594
	b		_08078698
_08078594:
	cmp		r4, #0x0
	beq		_0807859a
	b		_08078698
_0807859a:
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_0808f58c
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	add		r1, #0x78
	add		r0, r0, r1
	str		r4, [r0, #0x0]
	ldr		r4, _08078654
	ldr		r1, _08078658
	add		r0, r4, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x5
	bl		sub_080300ac
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r5, #0x0
	str		r7, [sp, #0x9c]
	mov		r0, sp
	add		r0, #0x14
	str		r0, [sp, #0x98]
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r1, r6, r1
	str		r1, [sp, #0x94]
	mov		r0, #0x94
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r10, r0
	mov		r1, #0xb0
	lsl		r1, r1, #0x1
	add		r1, r1, r6
	mov		r9, r1
	ldr		r7, [sp, #0x98]
	add		r0, sp, #0x4
	mov		r8, r0
_080785fc:
	ldr		r1, [sp, #0x94]
	add		r4, r1, r5
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _0807865c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bl		sub_080068f8
	mov		r1, r8
	add		r1, #0x4
	mov		r8, r1
	sub		r1, #0x4
	stmia	r1!, { r0 }
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r4, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r9
	ldr		r1, [r1, #0x0]
	add		r2, r7, #0x0
	mov		r3, #0x3
	bl		sub_0802de00
	add		r7, #0x20
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_080785fc
	ldr		r0, _08078660
	ldr		r0, [r0, #0x0]
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r2, r6, r1
	mov		r1, #0x4
	str		r1, [sp, #0x0]
	add		r1, sp, #0x4
	ldr		r3, [sp, #0x98]
	bl		sub_08033028
	ldr		r1, [sp, #0x9c]
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	b		_08078698

_08078654:	.4byte 0x0200DB50
_08078658:	.4byte 0xFFFFFEB0
_0807865c:	.4byte 0x080d458c
_08078660:	.4byte 0x0200D534

_08078664:
	ldr		r0, _080786a8
	ldr		r0, [r0, #0x0]
	mov		r1, #0xf6
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08078698
	mov		r0, #0x1
	bl		sub_0808f628
	add		r0, r6, #0x0
	bl		sub_08078bdc
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x0
	bl		sub_0807a5d8
	ldr		r1, _080786ac
	ldr		r0, _080786b0
	str		r0, [r1, #0x4]
	ldr		r0, [r7, #0x0]
	add		r0, #0x1
	str		r0, [r7, #0x0]
_08078698:
	add		sp, #0xa0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080786a8:	.4byte 0x0200D534
_080786ac:	.4byte 0x0200D5FC
_080786b0:	.4byte 0x060E0000
	thumb_func_end sub_0807856c

	thumb_func_start sub_080786b4
sub_080786b4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	ldr		r0, [r7, #0x58]
	cmp		r0, #0x0
	bne		_080786d0
	ldr		r0, _08078728
	ldr		r1, _0807872c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080786d0:
	mov		r1, #0xb8
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080786ea
	ldr		r0, _08078728
	mov		r1, #0xf5
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080786ea:
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xf8
	ldr		r1, [r0, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x1
	ble		_08078712
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08078712
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r6, #0x0]
_08078712:
	ldr		r0, [r6, #0x0]
	add		r0, #0x2
	cmp		r0, #0x7
	bls		_0807871c
	b		_08078a08
_0807871c:
	lsl		r0, r0, #0x2
	ldr		r1, _08078730
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x78726, 0x2

_08078728:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_0807872c:	.4byte 0x000003D3
_08078730:	.4byte 0x08078734
_08078734:	.4byte 0x080789f4

.incbin "base.gba", 0x78738, 0x1C
	thumb_func_end sub_080786b4


.incbin "base.gba", 0x78754, 0x2B4

_08078a08:

.incbin "base.gba", 0x78A08, 0x24
	thumb_func_start sub_08078a2c
sub_08078a2c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	mov		r9, r0
	add		r7, r1, #0x0
	cmp		r7, #0x4
	bls		_08078a4c
	ldr		r0, _08078bac
	ldr		r1, _08078bb0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078a4c:
	ldr		r4, _08078bb4
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08078a60
	ldr		r0, _08078bb8
	ldr		r1, _08078bbc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078a60:
	cmp		r7, #0x4
	bls		_08078a70
	ldr		r0, _08078bb8
	ldr		r1, _08078bc0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078a70:
	ldr		r1, [r4, #0x0]
	lsl		r4, r7, #0x1
	add		r0, r4, r7
	lsl		r0, r0, #0x3
	add		r1, #0x4
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	mov		r10, r1
	mov		r1, r9
	ldr		r0, [r1, #0x5c]
	bl		sub_0807aa30
	mov		r1, r9
	ldr		r0, [r1, #0x60]
	bl		sub_0807aa30
	mov		r0, r9
	ldr		r6, [r0, #0x5c]
	mov		r5, r10
	add		r5, #0x1
	str		r4, [sp, #0x18]
	cmp		r5, #0x0
	blt		_08078aa4
	ldr		r0, [r6, #0x8]
	cmp		r5, r0
	ble		_08078ab0
_08078aa4:
	ldr		r0, _08078bb8
	ldr		r1, _08078bc4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078ab0:
	str		r5, [r6, #0x4]
	mov		r1, r9
	ldr		r5, [r1, #0x60]
	mov		r4, r10
	add		r4, #0x1
	cmp		r4, #0x0
	blt		_08078ac4
	ldr		r0, [r5, #0x8]
	cmp		r4, r0
	ble		_08078ad0
_08078ac4:
	ldr		r0, _08078bb8
	ldr		r1, _08078bc4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078ad0:
	str		r4, [r5, #0x4]
	mov		r6, #0x0
	mov		r5, #0x0
	mov		r8, r5
	mov		r0, r9
	add		r0, #0x5c
	str		r0, [sp, #0x14]
	mov		r1, sp
	add		r1, #0x8
	str		r1, [sp, #0x1C]
	cmp		r8, r10
	bge		_08078b66
	ldr		r4, _08078bb8
	ldr		r1, [sp, #0x18]
	add		r0, r1, r7
	lsl		r0, r0, #0x3
	str		r0, [sp, #0x10]
_08078af2:
	cmp		r6, #0x0
	bne		_08078b48
	ldr		r0, _08078bc8
	mov		r1, #0x3
	bl		sub_080b63dc
	add		r5, r0, #0x0
	cmp		r0, #0x2
	ble		_08078b12
	add		r0, r4, #0x0
	mov		r1, #0x8e
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078b12:
	lsl		r0, r5, #0x3
	ldr		r1, _08078bcc
	add		r6, r0, r1
	ldr		r5, _08078bb4
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08078b2c
	add		r0, r4, #0x0
	ldr		r1, _08078bd0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078b2c:
	cmp		r7, #0x4
	bls		_08078b3e
	add		r0, r4, #0x0
	mov		r1, #0x83
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078b3e:
	ldr		r0, [r5, #0x0]
	add		r0, #0xc
	ldr		r1, [sp, #0x10]
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
_08078b48:
	mov		r1, r9
	ldr		r0, [r1, #0x5c]
	ldr		r2, [r6, #0x0]
	ldr		r3, [r6, #0x4]
	mov		r1, r8
	bl		sub_0807aa88
	sub		r5, #0x1
	cmp		r5, #0x0
	bgt		_08078b5e
	mov		r6, #0x0
_08078b5e:
	mov		r0, #0x1
	add		r8, r0
	cmp		r8, r10
	blt		_08078af2
_08078b66:
	ldr		r0, _08078bd4
	ldr		r1, [r0, #0x4]
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	ldr		r0, _08078bd8
	ldr		r1, [r0, #0x4]
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x8]
	str		r1, [sp, #0xC]
	ldr		r4, [sp, #0x14]
	ldr		r7, [sp, #0x1C]
	mov		r6, sp
	mov		r5, #0x1
_08078b82:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x4]
	sub		r1, #0x1
	ldmia	r6!, { r2 }
	ldmia	r7!, { r3 }
	bl		sub_0807aa88
	ldmia	r4!, { r0 }
	bl		sub_0807ab64
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08078b82
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08078bac:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08078bb0:	.4byte 0x00000446
_08078bb4:	.4byte 0x0200D604
_08078bb8:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_08078bbc:	.4byte 0x00000401
_08078bc0:	.4byte 0x00000402
_08078bc4:	.4byte 0x00000175
_08078bc8:	.4byte 0x0200BDD4
_08078bcc:	.4byte 0x0200D608
_08078bd0:	.4byte 0x00000417
_08078bd4:	.4byte 0x080d4364
_08078bd8:	.4byte 0x080d436c
	thumb_func_end sub_08078a2c

	thumb_func_start sub_08078bdc
sub_08078bdc:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x58]
	cmp		r0, #0x0
	beq		_08078bec
	mov		r1, #0x3
	bl		sub_0807ac44
_08078bec:
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x0
	beq		_08078bf8
	mov		r1, #0x3
	bl		sub_0807ab70
_08078bf8:
	ldr		r0, [r5, #0x60]
	cmp		r0, #0x0
	beq		_08078c04
	mov		r1, #0x3
	bl		sub_0807ab70
_08078c04:
	mov		r1, #0x96
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08078c16
	mov		r1, #0x3
	bl		sub_0807434c
_08078c16:
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08078c28
	mov		r1, #0x3
	bl		sub_0807434c
_08078c28:
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08078c3a
	mov		r1, #0x3
	bl		sub_0807434c
_08078c3a:
	mov		r2, #0x9c
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08078c74
	add		r7, r0, #0x0
	add		r4, r7, #0x0
	add		r4, #0x10
	mov		r6, #0x4
_08078c4e:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08078c5a
	mov		r1, #0x3
	bl		sub_0808e28c
_08078c5a:
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08078c4e
	ldr		r0, [r7, #0x38]
	cmp		r0, #0x0
	beq		_08078c6e
	mov		r1, #0x3
	bl		sub_0808e28c
_08078c6e:
	add		r0, r7, #0x0
	bl		sub_0808afac
_08078c74:
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r6, r5, r0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_08078c86
	mov		r1, #0x3
	bl		sub_0808e28c
_08078c86:
	mov		r1, #0xb8
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08078c98
	mov		r1, #0x3
	bl		sub_0807a734
_08078c98:
	mov		r0, #0x0
	str		r0, [r5, #0x58]
	str		r0, [r5, #0x5c]
	str		r0, [r5, #0x60]
	mov		r2, #0x96
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	str		r0, [r1, #0x0]
	add		r2, #0x4
	add		r1, r5, r2
	str		r0, [r1, #0x0]
	add		r2, #0x4
	add		r1, r5, r2
	str		r0, [r1, #0x0]
	add		r2, #0x4
	add		r1, r5, r2
	str		r0, [r1, #0x0]
	str		r0, [r6, #0x0]
	str		r0, [r4, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08078bdc

	thumb_func_start sub_08078cc4
sub_08078cc4:
	push	{ r4, r5, r6, lr }
	ldr		r2, [r0, #0x58]
	ldr		r4, _08078d38
	cmp		r2, #0x0
	beq		_08078ce4
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08078ce4
	ldr		r1, [r4, #0x0]
	ldr		r0, [r2, #0x8]
	ldr		r2, _08078d3c
	add		r0, r0, r2
	str		r0, [r1, #0x4]
_08078ce4:
	ldr		r3, [r4, #0x0]
	ldr		r0, [r3, #0x4]
	cmp		r0, #0x0
	bge		_08078cf0
	mov		r0, #0x0
	str		r0, [r3, #0x4]
_08078cf0:
	ldr		r0, [r3, #0x4]
	mov		r1, #0xc8
	lsl		r1, r1, #0x13
	cmp		r0, r1
	ble		_08078cfc
	str		r1, [r3, #0x4]
_08078cfc:
	ldr		r1, _08078d40
	ldr		r0, [r1, #0x0]
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r5, r1, #0x0
	cmp		r2, #0x0
	bge		_08078d0c
	neg		r0, r2
_08078d0c:
	asr		r0, r0, #0x10
	cmp		r2, #0x0
	bge		_08078d14
	neg		r0, r0
_08078d14:
	mov		r6, #0x6
	ldrsh	r1, [r3, r6]
	sub		r0, r1, r0
	cmp		r0, #0x0
	ble		_08078d44
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08078d26
	neg		r0, r2
_08078d26:
	asr		r0, r0, #0x10
	cmp		r2, #0x0
	bge		_08078d2e
	neg		r0, r0
_08078d2e:
	sub		r0, r1, r0
	cmp		r0, #0x9f
	bgt		_08078d5a
	b		_08078d92

.incbin "base.gba", 0x78D36, 0x2

_08078d38:	.4byte 0x080d4388
_08078d3c:	.4byte 0xFFB00000
_08078d40:	.4byte 0x080d438c

_08078d44:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08078d4c
	neg		r0, r2
_08078d4c:
	asr		r0, r0, #0x10
	cmp		r2, #0x0
	bge		_08078d54
	neg		r0, r0
_08078d54:
	sub		r0, r0, r1
	cmp		r0, #0x9f
	ble		_08078d92
_08078d5a:
	ldr		r1, _08078dac
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
	strb	r0, [r1, #0x1a]
	strb	r0, [r1, #0x1b]
	ldr		r0, _08078db0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08078d92
	ldr		r3, _08078db4
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08078d7c
	neg		r1, r0
_08078d7c:
	asr		r2, r1, #0x10
	cmp		r0, #0x0
	bge		_08078d84
	neg		r2, r2
_08078d84:
	ldr		r0, [r4, #0x0]
	mov		r6, #0x6
	ldrsh	r1, [r0, r6]
	sub		r1, r1, r2
	add		r0, r3, #0x0
	bl		sub_0808c670
_08078d92:
	ldr		r3, _08078db8
	ldr		r2, _08078dbc
	ldr		r0, [r4, #0x0]
	mov		r1, #0x6
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x10
	ldr		r1, [r5, #0x0]
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08078dac:	.4byte 0x02008AD4
_08078db0:	.4byte 0x0200CDBC
_08078db4:	.4byte 0x080d4374 @ Rewrite_BG_:_%d
_08078db8:	.4byte 0x0200CE3C
_08078dbc:	.4byte 0x0200CE40
	thumb_func_end sub_08078cc4

	thumb_func_start sub_08078dc0
sub_08078dc0:
	push	{ r4, lr }
	mov		r12, r0
	mov		r3, #0x0
	ldr		r0, [r0, #0x58]
	ldr		r0, [r0, #0x40]
	ldr		r1, _08078e48
	cmp		r0, #0x0
	bne		_08078dd8
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r0, #0x80
	ldr		r3, [r0, #0x0]
_08078dd8:
	ldr		r0, [r1, #0x0]
	ldr		r4, [r0, #0x0]
	ldr		r0, [r4, #0x78]
	neg		r0, r0
	mov		r1, #0x86
	lsl		r1, r1, #0x1
	add		r1, r12
	ldr		r1, [r1, #0x0]
	add		r2, r0, #0x0
	mul		r2, r1
	ldr		r0, [r4, #0x7c]
	neg		r0, r0
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r1, r12
	ldr		r1, [r1, #0x0]
	mul		r0, r1
	mov		r1, #0xa0
	lsl		r1, r1, #0xc
	add		r0, r0, r1
	add		r2, r2, r0
	sub		r3, r2, r3
	cmp		r3, #0x0
	bge		_08078e0a
	mov		r3, #0x0
_08078e0a:
	asr		r0, r3, #0x10
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldr		r0, _08078e4c
	and		r3, r0
	add		r0, r3, #0x0
	mul		r0, r1
	asr		r0, r0, #0x10
	add		r2, r2, r0
	mov		r0, #0x84
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r4, #0x0
	add		r0, #0x84
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mul		r0, r2
	lsr		r0, r0, #0x10
	mov		r1, #0xa
	bl		sub_080bbe34
	add		r1, r0, #0x0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x78E46, 0x2

_08078e48:	.4byte 0x080d4390
_08078e4c:	.4byte 0x0000FFFF
	thumb_func_end sub_08078dc0

	thumb_func_start sub_08078e50
sub_08078e50:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	mov		r8, r0
	bl		sub_080743b0
	add		r6, r0, #0x0
	add		r0, sp, #0x4
	ldr		r1, _08078f24
	ldmia	r1!, { r2, r3, r4 }
	stmia	r0!, {  r2, r3, r4 }
	ldr		r4, _08078f28
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08078e80
	ldr		r0, _08078f2c
	ldr		r1, _08078f30
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08078e80:
	mov		r0, #0xb0
	lsl		r0, r0, #0x1
	add		r0, r8
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	add		r1, r8
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
	mov		r5, #0x0
	lsl		r7, r6, #0x3
	ldr		r0, _08078f34
	mov		r10, r0
	mov		r9, r4
	mov		r6, #0xb0
	lsl		r6, r6, #0x1
	add		r6, r8
_08078ea0:
	lsl		r0, r5, #0x2
	add		r0, sp
	add		r0, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	mov		r1, r9
	ldr		r4, [r1, #0x0]
	add		r4, r4, r0
	add		r4, r4, r7
	ldr		r1, [r4, #0x4]
	lsl		r1, r1, #0x1
	add		r1, #0x1
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	bl		sub_080b63dc
	ldr		r1, [r4, #0x4]
	sub		r0, r0, r1
	ldr		r1, [r4, #0x0]
	add		r1, r1, r0
	add		r4, r5, #0x1
	cmp		r4, #0x0
	ble		_08078eea
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r2, r8
	add		r3, r4, #0x0
_08078eda:
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bne		_08078ee2
	sub		r1, #0x1
_08078ee2:
	add		r2, #0x4
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_08078eda
_08078eea:
	lsl		r0, r4, #0x2
	add		r0, r6, r0
	str		r1, [r0, #0x0]
	add		r5, r4, #0x0
	cmp		r5, #0x2
	ble		_08078ea0
	mov		r6, #0x0
	mov		r0, #0xb0
	lsl		r0, r0, #0x1
	mov		r3, r8
	add		r3, r3, r0
	mov		r9, r3
	mov		r4, #0xae
	lsl		r4, r4, #0x1
	add		r4, r8
	mov		r12, r4
	mov		r10, r0
_08078f0c:
	lsl		r0, r6, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	mov		r4, #0x0
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_08078f38
	mov		r4, #0x3
	add		r5, r6, #0x1
	b		_08078f58

.incbin "base.gba", 0x78F22, 0x2

_08078f24:	.4byte 0x080d4394
_08078f28:	.4byte 0x0200D620
_08078f2c:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08078f30:	.4byte 0x000004FB
_08078f34:	.4byte 0x080d43b8

_08078f38:
	add		r5, r6, #0x1
	mov		r7, #0x1
	neg		r7, r7
	mov		r2, r8
	add		r2, r10
	mov		r3, #0x3
_08078f44:
	ldr		r1, [r2, #0x0]
	cmp		r0, r1
	bge		_08078f50
	cmp		r1, r7
	beq		_08078f50
	add		r4, #0x1
_08078f50:
	add		r2, #0x4
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08078f44
_08078f58:
	mov		r2, r12
	add		r0, r2, r4
	strb	r6, [r0, #0x0]
	add		r6, r5, #0x0
	cmp		r6, #0x3
	ble		_08078f0c
	mov		r7, #0x0
	mov		r3, #0xae
	lsl		r3, r3, #0x1
	add		r3, r8
	mov		r10, r3
	mov		r4, #0xb0
	lsl		r4, r4, #0x1
	add		r4, r8
	mov		r9, r4
_08078f76:
	mov		r1, r10
	add		r0, r1, r7
	ldrb	r6, [r0, #0x0]
	lsl		r0, r6, #0x2
	add		r0, r9
	ldr		r4, [r0, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	cmp		r4, r2
	bne		_08078f90
	add		r5, r4, #0x0
	add		r1, r5, #0x0
	b		_08078fa4
_08078f90:
	add		r0, r4, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	add		r1, r0, #0x0
_08078fa4:
	lsl		r0, r6, #0x2
	ldr		r3, _08078ffc
	add		r0, r0, r3
	ldr		r2, [r0, #0x0]
	str		r1, [sp, #0x0]
	ldr		r0, _08079000
	add		r1, r7, #0x0
	add		r3, r5, #0x0
	bl		sub_08006368
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_08078f76
	ldr		r0, _08079004
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	bne		_08078fec
	ldr		r0, _08079008
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r1, r8
	ldrb	r1, [r1, #0x0]
	ldr		r2, _0807900c
	add		r2, r8
	ldrb	r2, [r2, #0x0]
	mov		r3, #0xaf
	lsl		r3, r3, #0x1
	add		r3, r8
	ldrb	r3, [r3, #0x0]
	ldr		r4, _08079010
	add		r4, r8
	ldrb	r4, [r4, #0x0]
	str		r4, [sp, #0x0]
	bl		sub_0808c670
_08078fec:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08078ffc:	.4byte 0x080d458c
_08079000:	.4byte 0x02000DCC
_08079004:	.4byte 0x0200CDBC
_08079008:	.4byte 0x080d43a0 @ now_rank_=_%d:%d:%d:%d
_0807900c:	.4byte 0x0000015D
_08079010:	.4byte 0x0000015F
	thumb_func_end sub_08078e50

	thumb_func_start sub_08079014
sub_08079014:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r0, #0x0
	str		r0, [r5, #0x34]
	str		r0, [r5, #0x38]
	str		r0, [r5, #0x14]
	str		r0, [r5, #0x18]
	str		r0, [r5, #0x1c]
	str		r0, [r5, #0x20]
	str		r0, [r5, #0x24]
	str		r0, [r5, #0x28]
	str		r0, [r5, #0x40]
	str		r0, [r5, #0x44]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_08079228
	mov		r2, #0x9e
	lsl		r2, r2, #0x10
	mov		r3, #0x8c
	lsl		r3, r3, #0x10
	mov		r0, #0x6
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080742c8
	ldr		r6, [r5, #0xc]
	cmp		r6, #0x0
	bne		_0807906c
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0xc]
	b		_08079072
_0807906c:
	add		r0, r6, #0x0
	bl		sub_0808e278
_08079072:
	ldr		r0, [r5, #0xc]
	mov		r1, #0xe
	bl		sub_0808e03c
	ldr		r0, [r5, #0xc]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0xc]
	add		r0, #0x70
	bl		sub_0808b3d4
	mov		r0, #0x0
	str		r0, [r5, #0x10]
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08079014

	thumb_func_start sub_08079098
sub_08079098:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x14
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x2c]
	cmp		r0, #0x4
	bls		_080790b0
	ldr		r0, _080790d8
	ldr		r1, _080790dc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080790b0:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807914a
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0xc]
	cmp		r0, #0x0
	beq		_080790c8
	add		r0, #0x70
	bl		sub_0808b3d4
_080790c8:
	ldr		r0, [r4, #0x14]
	cmp		r0, #0x4
	bhi		_0807914a
	lsl		r0, r0, #0x2
	ldr		r1, _080790e0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080790d8:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_080790dc:	.4byte 0x0000057A
_080790e0:	.4byte 0x080790e4
_080790e4:	.4byte 0x080790f8

.incbin "base.gba", 0x790E8, 0x10
	thumb_func_end sub_08079098


.incbin "base.gba", 0x790F8, 0x3C

_08079134:

.incbin "base.gba", 0x79134, 0x16

_0807914a:

.incbin "base.gba", 0x7914A, 0xA
	thumb_func_start sub_08079154
sub_08079154:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_08079222
	ldr		r0, _080791cc
	ldr		r1, [r0, #0x0]
	ldr		r6, [r0, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r0, r0, r1
	asr		r5, r0, #0x10
	ldr		r0, [r4, #0x8]
	sub		r0, r0, r6
	asr		r2, r0, #0x10
	add		r1, r5, #0x0
	add		r1, #0x20
	mov		r0, #0x98
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_080791d0
	mov		r0, #0x30
	neg		r0, r0
	cmp		r2, r0
	blt		_080791d0
	cmp		r2, #0xd0
	bgt		_080791d0
	add		r1, r3, #0x0
	add		r1, #0x64
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x54
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x56
	strh	r2, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, #0x6
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x69
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x34]
	add		r0, #0x67
	strb	r1, [r0, #0x0]
	mov		r1, #0x3a
	ldrsh	r0, [r4, r1]
	lsl		r1, r0, #0x2
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	ldr		r0, [r4, #0x0]
	add		r0, #0x62
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
	b		_080791d6

_080791cc:	.4byte 0x0200D5FC

_080791d0:
	ldr		r0, [r4, #0x0]
	bl		sub_0808e1ac
_080791d6:
	ldr		r3, [r4, #0xc]
	cmp		r3, #0x0
	beq		_08079222
	asr		r0, r6, #0x10
	ldr		r1, _08079218
	sub		r2, r1, r0
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_0807921c
	mov		r0, #0x30
	neg		r0, r0
	cmp		r2, r0
	blt		_0807921c
	cmp		r2, #0xd0
	bgt		_0807921c
	add		r0, r3, #0x0
	add		r0, #0x54
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0xc]
	add		r0, #0x56
	strh	r2, [r0, #0x0]
	ldr		r0, [r4, #0xc]
	add		r0, #0x5c
	mov		r1, #0x5
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0xc]
	add		r0, #0x69
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0xc]
	bl		sub_0808e4a0
	b		_08079222

_08079218:	.4byte 0x000006A4

_0807921c:
	add		r0, r3, #0x0
	bl		sub_0808e1ac
_08079222:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08079154

	thumb_func_start sub_08079228
sub_08079228:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r5, r1, #0x0
	ldr		r6, _08079350
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_08079246
	ldr		r0, _08079354
	ldr		r1, _08079358
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079246:
	cmp		r5, #0x4
	bls		_08079256
	ldr		r0, _08079354
	ldr		r1, _0807935c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079256:
	ldr		r0, [r6, #0x0]
	lsl		r1, r5, #0x1
	add		r1, r1, r5
	lsl		r4, r1, #0x3
	add		r1, r0, #0x4
	add		r1, r1, r4
	ldr		r7, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08079274
	ldr		r0, _08079354
	ldr		r1, _08079360
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079274:
	cmp		r5, #0x4
	bls		_08079284
	ldr		r0, _08079354
	ldr		r1, _08079364
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079284:
	ldr		r0, [r6, #0x0]
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807929a
	ldr		r0, _08079354
	ldr		r1, _08079368
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807929a:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_080792ac
	ldr		r0, _08079354
	ldr		r1, _0807936c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080792ac:
	cmp		r5, #0x4
	bls		_080792bc
	ldr		r0, _08079354
	ldr		r1, _08079370
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080792bc:
	ldr		r0, [r6, #0x0]
	add		r0, #0x4
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080792d6
	ldr		r0, _08079354
	mov		r1, #0x85
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080792d6:
	ldr		r2, [r6, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x14
	add		r0, r0, r4
	add		r1, r2, #0x0
	add		r1, #0x8
	add		r1, r1, r4
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	add		r1, r2, #0x4
	add		r1, r1, r4
	ldr		r1, [r1, #0x0]
	bl		sub_080bbcac
	ldr		r1, [r6, #0x0]
	add		r1, r1, r4
	ldr		r1, [r1, #0x0]
	bl		sub_080bbcac
	add		r4, r0, #0x0
	cmp		r7, #0x0
	beq		_0807930a
	cmp		r4, #0x0
	bne		_08079318
_0807930a:
	ldr		r0, _08079374
	mov		r1, #0xbc
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079318:
	mov		r0, r8
	str		r5, [r0, #0x2c]
	mov		r0, #0x87
	lsl		r0, r0, #0x13
	add		r1, r7, #0x0
	bl		sub_080bbcac
	add		r1, r4, #0x0
	bl		sub_080bbcac
	mov		r1, r8
	str		r0, [r1, #0x48]
	mov		r0, #0xb4
	lsl		r0, r0, #0x11
	add		r1, r7, #0x0
	bl		sub_080bbcac
	add		r1, r4, #0x0
	bl		sub_080bbcac
	mov		r1, r8
	str		r0, [r1, #0x4c]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7934E, 0x2

_08079350:	.4byte 0x0200D604
_08079354:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_08079358:	.4byte 0x00000401
_0807935c:	.4byte 0x00000402
_08079360:	.4byte 0x00000435
_08079364:	.4byte 0x00000436
_08079368:	.4byte 0x00000437
_0807936c:	.4byte 0x00000426
_08079370:	.4byte 0x00000427
_08079374:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
	thumb_func_end sub_08079228

	thumb_func_start sub_08079378
sub_08079378:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x14
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x18]
	cmp		r0, #0x0
	bne		_08079420
	mov		r1, sp
	ldr		r0, _0807940c
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r5 }
	stmia	r1!, {  r2, r5 }
	ldr		r0, [r6, #0x2c]
	lsl		r0, r0, #0x2
	add		r0, sp
	ldr		r7, [r0, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_080793b0
	ldr		r0, _08079410
	ldr		r1, _08079414
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080793b0:
	cmp		r7, #0x1e
	ble		_080793c2
	ldr		r0, _08079410
	mov		r1, #0xbe
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080793c2:
	ldr		r4, _08079418
	lsl		r5, r7, #0x3
	add		r0, r5, r4
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r0, r4, #0x2
	add		r0, r5, r0
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	mov		r12, r2
	add		r0, r4, #0x4
	add		r0, r5, r0
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	mov		r8, r2
	add		r0, r6, #0x0
	mov		r2, r12
	mov		r3, r8
	bl		sub_08074250
	add		r4, #0x6
	add		r5, r5, r4
	mov		r4, #0x0
	ldrsh	r0, [r5, r4]
	str		r0, [r6, #0x34]
	str		r7, [r6, #0x1c]
	mov		r0, #0x1e
	str		r0, [r6, #0x30]
	ldr		r0, _0807941c
	str		r0, [r6, #0x3c]
	ldr		r0, [r6, #0x18]
	add		r0, #0x1
	str		r0, [r6, #0x18]
	mov		r0, #0x1a
	bl		sub_0808f690
	b		_08079508

_0807940c:	.4byte 0x080d43d0
_08079410:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08079414:	.4byte 0x000005EF
_08079418:	.4byte 0x080d4478
_0807941c:	.4byte 0xffff0000

_08079420:
	ldr		r0, [r6, #0x30]
	cmp		r0, #0x0
	beq		_0807942c
	sub		r0, #0x1
	str		r0, [r6, #0x30]
	b		_08079508
_0807942c:
	ldr		r0, [r6, #0x4]
	ldr		r5, _08079518
	add		r0, r0, r5
	str		r0, [r6, #0x4]
	ldr		r0, [r6, #0x8]
	ldr		r1, [r6, #0x3c]
	add		r0, r0, r1
	str		r0, [r6, #0x8]
	ldr		r0, _0807951c
	add		r1, r1, r0
	str		r1, [r6, #0x3c]
	ldr		r4, [r6, #0x2c]
	ldr		r5, _08079520
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08079458
	ldr		r0, _08079524
	ldr		r1, _08079528
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079458:
	cmp		r4, #0x4
	bls		_08079468
	ldr		r0, _08079524
	ldr		r1, _0807952c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079468:
	ldr		r0, [r5, #0x0]
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, [r6, #0x3c]
	cmp		r0, r1
	ble		_0807947c
	str		r1, [r6, #0x3c]
_0807947c:
	ldr		r2, [r6, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r8, r0
	cmp		r0, #0x0
	bne		_08079508
	mov		r1, sp
	ldr		r0, _08079530
	ldmia	r0!, { r3, r4, r5 }
	stmia	r1!, {  r3, r4, r5 }
	ldmia	r0!, { r3, r4 }
	stmia	r1!, {  r3, r4 }
	ldr		r0, [r6, #0x2c]
	lsl		r0, r0, #0x2
	add		r0, sp
	ldr		r7, [r0, #0x0]
	cmp		r2, #0x0
	bne		_080794b6
	ldr		r0, _08079534
	ldr		r1, _08079538
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080794b6:
	cmp		r7, #0x1e
	ble		_080794c8
	ldr		r0, _08079534
	mov		r1, #0xbe
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080794c8:
	ldr		r4, _0807953c
	lsl		r5, r7, #0x3
	add		r0, r5, r4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r4, #0x2
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	mov		r9, r3
	add		r0, r4, #0x4
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	mov		r12, r3
	add		r0, r6, #0x0
	mov		r2, r9
	bl		sub_08074250
	add		r4, #0x6
	add		r5, r5, r4
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	str		r0, [r6, #0x34]
	str		r7, [r6, #0x1c]
	mov		r0, #0x2
	str		r0, [r6, #0x14]
	mov		r4, r8
	str		r4, [r6, #0x18]
	mov		r0, #0x1
	str		r0, [r6, #0x20]
	str		r0, [r6, #0x24]
_08079508:
	add		sp, #0x14
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x79516, 0x2

_08079518:	.4byte 0xFFFE8000
_0807951c:	.4byte 0x00001999
_08079520:	.4byte 0x0200D604
_08079524:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_08079528:	.4byte 0x000003F6
_0807952c:	.4byte 0x000003F7
_08079530:	.4byte 0x080d43e4
_08079534:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08079538:	.4byte 0x000005EF
_0807953c:	.4byte 0x080d4478
	thumb_func_end sub_08079378

	thumb_func_start sub_08079540
sub_08079540:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x8]
	ldr		r1, [r6, #0x3c]
	add		r0, r0, r1
	str		r0, [r6, #0x8]
	ldr		r0, _080795ec
	add		r1, r1, r0
	str		r1, [r6, #0x3c]
	ldr		r4, [r6, #0x2c]
	ldr		r5, _080795f0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0807956c
	ldr		r0, _080795f4
	ldr		r1, _080795f8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807956c:
	cmp		r4, #0x4
	bls		_0807957c
	ldr		r0, _080795f4
	ldr		r1, _080795fc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807957c:
	ldr		r2, [r5, #0x0]
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r0, r2, r0
	ldr		r1, [r0, #0x0]
	ldr		r0, [r6, #0x3c]
	cmp		r0, r1
	ble		_080795be
	ldr		r4, [r6, #0x2c]
	cmp		r2, #0x0
	bne		_080795a0
	ldr		r0, _080795f4
	ldr		r1, _080795f8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080795a0:
	cmp		r4, #0x4
	bls		_080795b0
	ldr		r0, _080795f4
	ldr		r1, _080795fc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080795b0:
	ldr		r0, [r5, #0x0]
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r6, #0x3c]
_080795be:
	ldr		r1, [r6, #0x8]
	ldr		r0, _08079600
	cmp		r1, r0
	ble		_080795d0
	mov		r0, #0x3
	str		r0, [r6, #0x14]
	mov		r0, #0x0
	str		r0, [r6, #0x18]
	str		r0, [r6, #0x24]
_080795d0:
	ldr		r2, [r6, #0x24]
	cmp		r2, #0x0
	bne		_080795d8
	b		_08079be8
_080795d8:
	ldr		r0, [r6, #0x20]
	cmp		r0, #0x5
	bls		_080795e0
	b		_08079bdc
_080795e0:
	lsl		r0, r0, #0x2
	ldr		r1, _08079604
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x795EA, 0x2

_080795ec:	.4byte 0x00001999
_080795f0:	.4byte 0x0200D604
_080795f4:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_080795f8:	.4byte 0x000003F6
_080795fc:	.4byte 0x000003F7
_08079600:	.4byte 0x0683FFFF
_08079604:	.4byte 0x08079608
_08079608:	.4byte 0x08079bc4

.incbin "base.gba", 0x7960C, 0x14
	thumb_func_end sub_08079540


.incbin "base.gba", 0x79620, 0x5BC

_08079bdc:

.incbin "base.gba", 0x79BDC, 0xC
_08079be8:

.incbin "base.gba", 0x79BE8, 0xC
_08079bf4:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08079bf8:	.4byte 0x000006BD
	thumb_func_start sub_08079bfc
sub_08079bfc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	ldr		r1, [r6, #0x40]
	neg		r0, r1
	orr		r0, r1
	lsr		r4, r0, #0x1f
	add		r3, r4, #0x0
	ldr		r0, [r6, #0x18]
	cmp		r0, #0x1
	beq		_08079c8e
	cmp		r0, #0x1
	bgt		_08079c22
	cmp		r0, #0x0
	beq		_08079c30
	b		_08079e6c
_08079c22:
	cmp		r0, #0x2
	bne		_08079c28
	b		_08079d98
_08079c28:
	cmp		r0, #0x3
	bne		_08079c2e
	b		_08079e64
_08079c2e:
	b		_08079e6c
_08079c30:
	ldr		r1, _08079c7c
	lsl		r0, r4, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	ldr		r0, [r6, #0xc]
	cmp		r0, #0x0
	bne		_08079c4a
	ldr		r0, _08079c80
	ldr		r1, _08079c84
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079c4a:
	ldr		r0, [r6, #0xc]
	bl		sub_0808e278
	ldr		r0, [r6, #0xc]
	mov		r1, #0xe
	bl		sub_0808e03c
	ldr		r0, [r6, #0xc]
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, #0x1
	str		r0, [r6, #0x10]
	ldr		r0, [r6, #0x18]
	add		r0, #0x1
	str		r0, [r6, #0x18]
	ldr		r0, [r6, #0x40]
	cmp		r0, #0x0
	beq		_08079c88
	mov		r0, #0x75
	bl		sub_0808f690
	b		_08079c8e

.incbin "base.gba", 0x79C7A, 0x2

_08079c7c:	.4byte 0x080d45d0
_08079c80:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_08079c84:	.4byte 0x0000029D

_08079c88:
	mov		r0, #0x76
	bl		sub_0808f690
_08079c8e:
	ldr		r0, [r6, #0x8]
	ldr		r1, [r6, #0x3c]
	add		r0, r0, r1
	str		r0, [r6, #0x8]
	ldr		r1, _08079d70
	cmp		r0, r1
	ble		_08079c9e
	str		r1, [r6, #0x8]
_08079c9e:
	ldr		r0, [r6, #0xc]
	cmp		r0, #0x0
	bne		_08079cb0
	ldr		r0, _08079d74
	ldr		r1, _08079d78
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079cb0:
	ldr		r0, [r6, #0xc]
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r9, r0
	cmp		r0, #0x0
	beq		_08079cc6
	b		_08079e6c
_08079cc6:
	ldr		r1, _08079d7c
	lsl		r4, r4, #0x2
	mov		r8, r4
	ldr		r0, [r6, #0x18]
	lsl		r0, r0, #0x3
	add		r0, r8
	add		r0, r0, r1
	ldr		r7, [r0, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_08079ce8
	ldr		r0, _08079d80
	ldr		r1, _08079d84
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079ce8:
	cmp		r7, #0x1e
	ble		_08079cfa
	ldr		r0, _08079d80
	mov		r1, #0xbe
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079cfa:
	ldr		r4, _08079d88
	lsl		r5, r7, #0x3
	add		r0, r5, r4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r4, #0x2
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	mov		r10, r3
	add		r0, r4, #0x4
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	mov		r12, r3
	add		r0, r6, #0x0
	mov		r2, r10
	bl		sub_08074250
	add		r4, #0x6
	add		r5, r5, r4
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	str		r0, [r6, #0x34]
	str		r7, [r6, #0x1c]
	ldr		r1, _08079d8c
	ldr		r0, [r6, #0x18]
	lsl		r0, r0, #0x3
	add		r0, r8
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	ldr		r0, [r6, #0xc]
	cmp		r0, #0x0
	bne		_08079d4a
	ldr		r0, _08079d74
	ldr		r1, _08079d90
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079d4a:
	ldr		r0, [r6, #0xc]
	bl		sub_0808e278
	ldr		r0, [r6, #0xc]
	mov		r1, #0xe
	bl		sub_0808e03c
	ldr		r0, [r6, #0xc]
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	mov		r0, r9
	str		r0, [r6, #0x38]
	ldr		r0, _08079d94
	str		r0, [r6, #0x8]
	ldr		r0, [r6, #0x18]
	add		r0, #0x1
	b		_08079e6a

_08079d70:	.4byte 0x07440000
_08079d74:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_08079d78:	.4byte 0x000002CE
_08079d7c:	.4byte 0x080d45e8
_08079d80:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08079d84:	.4byte 0x000005EF
_08079d88:	.4byte 0x080d4478
_08079d8c:	.4byte 0x080d45d0
_08079d90:	.4byte 0x0000029D
_08079d94:	.4byte 0x06A40000

_08079d98:
	ldr		r2, [r6, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08079e6c
	ldr		r1, _08079e48
	lsl		r3, r3, #0x2
	mov		r8, r3
	mov		r0, r8
	add		r0, #0x10
	add		r0, r0, r1
	ldr		r7, [r0, #0x0]
	cmp		r2, #0x0
	bne		_08079dc6
	ldr		r0, _08079e4c
	ldr		r1, _08079e50
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079dc6:
	cmp		r7, #0x1e
	ble		_08079dd8
	ldr		r0, _08079e4c
	mov		r1, #0xbe
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079dd8:
	ldr		r4, _08079e54
	lsl		r5, r7, #0x3
	add		r0, r5, r4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r4, #0x2
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	mov		r10, r3
	add		r0, r4, #0x4
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	mov		r9, r3
	add		r0, r6, #0x0
	mov		r2, r10
	bl		sub_08074250
	add		r4, #0x6
	add		r5, r5, r4
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	str		r0, [r6, #0x34]
	str		r7, [r6, #0x1c]
	ldr		r1, _08079e58
	ldr		r0, [r6, #0x18]
	lsl		r0, r0, #0x3
	add		r0, r8
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	ldr		r0, [r6, #0xc]
	cmp		r0, #0x0
	bne		_08079e28
	ldr		r0, _08079e5c
	ldr		r1, _08079e60
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079e28:
	ldr		r0, [r6, #0xc]
	bl		sub_0808e278
	ldr		r0, [r6, #0xc]
	mov		r1, #0xe
	bl		sub_0808e03c
	ldr		r0, [r6, #0xc]
	add		r1, r4, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x18]
	add		r0, #0x1
	b		_08079e6a

.incbin "base.gba", 0x79E46, 0x2

_08079e48:	.4byte 0x080d45e8
_08079e4c:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08079e50:	.4byte 0x000005EF
_08079e54:	.4byte 0x080d4478
_08079e58:	.4byte 0x080d45d0
_08079e5c:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_08079e60:	.4byte 0x0000029D

_08079e64:
	mov		r0, #0x4
	str		r0, [r6, #0x14]
	mov		r0, #0x0
_08079e6a:
	str		r0, [r6, #0x18]
_08079e6c:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x79E7A, 0x2
	thumb_func_end sub_08079bfc

	thumb_func_start sub_08079e7c
sub_08079e7c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r10, r2
	str		r3, [sp, #0x0]
	cmp		r6, #0x0
	bne		_08079ea0
	ldr		r0, _08079f2c
	ldr		r1, _08079f30
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079ea0:
	ldr		r2, [r5, #0x0]
	lsl		r0, r6, #0x2
	mov		r8, r0
	sub		r1, r6, #0x1
	mov		r9, r1
	cmp		r2, #0x0
	beq		_08079ee0
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08079ed6
	mov		r7, #0x0
_08079ec0:
	sub		r4, #0x14
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08079ed0
	mov		r1, #0x3
	bl		sub_0808e28c
	str		r7, [r4, #0x0]
_08079ed0:
	ldr		r2, [r5, #0x0]
	cmp		r2, r4
	bne		_08079ec0
_08079ed6:
	sub		r0, r2, #0x4
	bl		sub_0808afd0
	mov		r0, #0x0
	str		r0, [r5, #0x0]
_08079ee0:
	mov		r1, r8
	add		r0, r1, r6
	lsl		r0, r0, #0x2
	add		r0, #0x4
	bl		sub_0808afb8
	stmia	r0!, {  r6 }
	add		r2, r0, #0x0
	mov		r1, r9
	mov		r3, #0x1
	neg		r3, r3
	cmp		r1, r3
	beq		_08079f06
	mov		r4, #0x0
_08079efc:
	str		r4, [r2, #0x0]
	add		r2, #0x14
	sub		r1, #0x1
	cmp		r1, r3
	bne		_08079efc
_08079f06:
	str		r0, [r5, #0x0]
	mov		r0, r10
	str		r0, [r5, #0x10]
	ldr		r1, [sp, #0x0]
	str		r1, [r5, #0x14]
	str		r6, [r5, #0x8]
	mov		r0, #0x0
	str		r0, [r5, #0x4]
	str		r0, [r5, #0xc]
	str		r0, [r5, #0x18]
	str		r0, [r5, #0x1c]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08079f2c:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08079f30:	.4byte 0x00000739
	thumb_func_end sub_08079e7c

	thumb_func_start sub_08079f34
sub_08079f34:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	beq		_08079f84
	ldr		r0, [r4, #0x18]
	cmp		r0, #0x0
	beq		_08079f84
	ldr		r3, [r4, #0xc]
	ldr		r0, [r4, #0x4]
	cmp		r3, r0
	bge		_08079f74
	ldr		r6, _08079f8c
	lsl		r0, r3, #0x2
	add		r0, r0, r3
	lsl		r0, r0, #0x2
	add		r2, r0, r1
_08079f56:
	ldr		r5, [r2, #0x4]
	ldr		r1, [r2, #0x8]
	add		r1, r1, r6
	ldr		r0, [r4, #0x14]
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bge		_08079f66
	add		r1, r0, #0x0
_08079f66:
	str		r5, [r2, #0x4]
	str		r1, [r2, #0x8]
	add		r2, #0x14
	add		r3, #0x1
	ldr		r0, [r4, #0x4]
	cmp		r3, r0
	blt		_08079f56
_08079f74:
	ldr		r0, [r4, #0x1c]
	sub		r0, #0x1
	str		r0, [r4, #0x1c]
	cmp		r0, #0x0
	bgt		_08079f84
	mov		r0, #0x0
	str		r0, [r4, #0x18]
	str		r0, [r4, #0x1c]
_08079f84:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x79F8A, 0x2

_08079f8c:	.4byte 0xFFFC0000
	thumb_func_end sub_08079f34

	thumb_func_start sub_08079f90
sub_08079f90:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08079fa6
	ldr		r0, _08079ff0
	ldr		r1, _08079ff4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08079fa6:
	ldr		r1, [r5, #0xc]
	ldr		r0, [r5, #0x4]
	cmp		r1, r0
	bge		_08079fe8
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x0]
	add		r4, r1, r0
	ldr		r1, [r4, #0x0]
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_08079fe2
	ldr		r0, _08079ff8
	ldr		r2, [r0, #0x0]
	ldr		r3, [r0, #0x4]
	ldr		r0, [r4, #0x10]
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x10]
	ldr		r0, [r4, #0x4]
	ldr		r1, [r4, #0x8]
	add		r0, r0, r2
	add		r1, r1, r3
	str		r0, [r4, #0x4]
	str		r1, [r4, #0x8]
_08079fe2:
	ldr		r0, [r5, #0xc]
	add		r0, #0x1
	str		r0, [r5, #0xc]
_08079fe8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x79FEE, 0x2

_08079ff0:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_08079ff4:	.4byte 0x00000792
_08079ff8:	.4byte 0x0200D5FC
	thumb_func_end sub_08079f90

	thumb_func_start sub_08079ffc
sub_08079ffc:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_0807a074
	ldr		r1, [r3, #0x10]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807a020
	ldr		r0, [r3, #0x4]
	sub		r0, r0, r4
	asr		r4, r0, #0x10
	ldr		r0, [r3, #0x8]
	sub		r0, r0, r2
	asr		r2, r0, #0x10
	b		_0807a028
_0807a020:
	mov		r0, #0x6
	ldrsh	r4, [r3, r0]
	mov		r0, #0xa
	ldrsh	r2, [r3, r0]
_0807a028:
	mov		r5, #0x1
	and		r1, r5
	cmp		r1, #0x0
	beq		_0807a06e
	mov		r0, #0x20
	neg		r0, r0
	cmp		r4, r0
	blt		_0807a06e
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	cmp		r4, r0
	bgt		_0807a06e
	mov		r0, #0x30
	neg		r0, r0
	cmp		r2, r0
	blt		_0807a06e
	cmp		r2, #0xd0
	bgt		_0807a06e
	ldr		r0, [r3, #0x0]
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x56
	strh	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x5c
	mov		r1, #0x1
	strh	r5, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x69
	strb	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	bl		sub_0808e4a0
	b		_0807a074
_0807a06e:
	ldr		r0, [r3, #0x0]
	bl		sub_0808e1ac
_0807a074:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A07A, 0x2
	thumb_func_end sub_08079ffc

	thumb_func_start sub_0807a07c
sub_0807a07c:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r5, [r3, #0x0]
	cmp		r5, #0x0
	beq		_0807a0dc
	ldr		r0, [r3, #0x4]
	sub		r0, r0, r1
	asr		r4, r0, #0x10
	ldr		r0, [r3, #0x8]
	sub		r0, r0, r2
	asr		r2, r0, #0x10
	add		r1, r4, #0x0
	add		r1, #0x20
	mov		r0, #0x98
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_0807a0d6
	mov		r0, #0x30
	neg		r0, r0
	cmp		r2, r0
	blt		_0807a0d6
	cmp		r2, #0xd0
	bgt		_0807a0d6
	add		r0, r5, #0x0
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x56
	strh	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x5c
	mov		r1, #0x14
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x69
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r3, #0x14]
	add		r0, #0x67
	strb	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	bl		sub_0808e4a0
	b		_0807a0dc
_0807a0d6:
	ldr		r0, [r3, #0x0]
	bl		sub_0808e1ac
_0807a0dc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A0E2, 0x152
	thumb_func_end sub_0807a07c

	thumb_func_start sub_0807a234
sub_0807a234:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r5, r0, #0x0
	str		r1, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r0, #0x0
	mov		r8, r0
	asr		r1, r1, #0x10
	str		r1, [sp, #0x8]
	ldr		r3, _0807a2c8
	mov		r9, r3
	add		r0, r2, #0x0
	asr		r0, r0, #0x10
	mov		r10, r0
	mov		r7, r9
	add		r4, r5, #0x0
	add		r4, #0x10
_0807a25e:
	ldr		r2, [r5, #0xc]
	ldr		r1, [r5, #0x4]
	ldr		r6, [r5, #0x8]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807a2d2
	ldr		r0, [r5, #0x3c]
	cmp		r0, #0xff
	bgt		_0807a272
	mov		r2, #0x0
_0807a272:
	cmp		r7, r9
	bne		_0807a284
	ldr		r0, [r5, #0x24]
	cmp		r0, #0x0
	bne		_0807a284
	mov		r2, #0x0
	mov		r3, #0xc
	neg		r3, r3
	mov		r8, r3
_0807a284:
	ldr		r3, [sp, #0x8]
	sub		r0, r1, r3
	ldr		r1, [r7, #0x0]
	add		r0, r0, r1
	mov		r1, r8
	add		r3, r0, r1
	mov		r0, r10
	sub		r1, r6, r0
	cmp		r2, #0x0
	beq		_0807a2cc
	mov		r0, #0x30
	neg		r0, r0
	cmp		r1, r0
	blt		_0807a2cc
	cmp		r1, #0xd0
	bgt		_0807a2cc
	ldr		r0, [r4, #0x0]
	add		r0, #0x54
	strh	r3, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x69
	mov		r3, #0x1
	strb	r3, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
	b		_0807a2d2

_0807a2c8:	.4byte 0x080d46a8

_0807a2cc:
	ldr		r0, [r4, #0x0]
	bl		sub_0808e1ac
_0807a2d2:
	add		r7, #0x4
	add		r4, #0x4
	ldr		r0, _0807a330
	cmp		r7, r0
	ble		_0807a25e
	ldr		r2, [r5, #0x38]
	cmp		r2, #0x0
	beq		_0807a358
	ldr		r3, [sp, #0x0]
	asr		r1, r3, #0x10
	ldr		r0, [r5, #0x4]
	sub		r3, r0, r1
	ldr		r1, [sp, #0x4]
	asr		r0, r1, #0x10
	sub		r0, #0x18
	ldr		r1, [r5, #0x8]
	sub		r1, r1, r0
	ldr		r0, [r5, #0xc]
	cmp		r0, #0x0
	beq		_0807a352
	mov		r0, #0x30
	neg		r0, r0
	cmp		r1, r0
	blt		_0807a352
	cmp		r1, #0xd0
	bgt		_0807a352
	add		r0, r2, #0x0
	add		r0, #0x54
	strh	r3, [r0, #0x0]
	ldr		r0, [r5, #0x38]
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x38]
	add		r0, #0x5c
	mov		r2, #0x1
	mov		r1, #0x1
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x38]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	ldr		r1, [r5, #0x3c]
	cmp		r1, #0xff
	ble		_0807a334
	ldr		r0, [r5, #0x38]
	add		r0, #0x64
	mov		r1, #0x0
	b		_0807a348

_0807a330:	.4byte 0x080d46b8

_0807a334:
	ldr		r0, [r5, #0x38]
	add		r0, #0x5e
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x38]
	ldr		r1, [r5, #0x3c]
	add		r0, #0x60
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x38]
	add		r0, #0x64
	mov		r1, #0x3
_0807a348:
	strb	r1, [r0, #0x0]
	ldr		r0, [r5, #0x38]
	bl		sub_0808e4a0
	b		_0807a358
_0807a352:
	add		r0, r2, #0x0
	bl		sub_0808e1ac
_0807a358:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807a234

	thumb_func_start sub_0807a368
sub_0807a368:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r0, _0807a3f8
	mov		r8, r0
	add		r6, r5, #0x4
	ldr		r7, _0807a3fc
	mov		r4, #0x4
_0807a37a:
	ldmia	r7!, { r1 }
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	bl		sub_0800bcd0
	stmia	r6!, { r0 }
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807a37a
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_0807a5d8
	ldr		r0, _0807a400
	mov		r1, #0x5
	bl		sub_080b63dc
	add		r4, r0, #0x0
	add		r7, r4, #0x0
	ldr		r6, _0807a404
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0807a3b6
	ldr		r0, _0807a408
	mov		r1, #0x90
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807a3b6:
	cmp		r4, #0x4
	bls		_0807a3c6
	ldr		r0, _0807a408
	ldr		r1, _0807a40c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807a3c6:
	ldr		r0, _0807a410
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0807a3d8
	ldr		r0, _0807a414
	add		r1, r4, #0x0
	bl		sub_0808c670
_0807a3d8:
	lsl		r0, r7, #0x1
	add		r0, r0, r7
	lsl		r0, r0, #0x2
	ldr		r1, [r6, #0x0]
	add		r1, r1, r0
	str		r1, [r5, #0x0]
	mov		r0, #0x0
	str		r0, [r5, #0x18]
	str		r0, [r5, #0x1c]
	add		r0, r5, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7A3F6, 0x2

_0807a3f8:	.4byte 0x080d4458
_0807a3fc:	.4byte 0x080d4444
_0807a400:	.4byte 0x0200BDD4
_0807a404:	.4byte 0x0200D624
_0807a408:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_0807a40c:	.4byte 0x00000481
_0807a410:	.4byte 0x0200CDBC
_0807a414:	.4byte 0x080d4314 @ Audience_Pattern:%d
	thumb_func_end sub_0807a368

	thumb_func_start sub_0807a418
sub_0807a418:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	cmp		r7, #0x4
	bls		_0807a434
	ldr		r0, _0807a4b0
	mov		r1, #0x9d
	lsl		r1, r1, #0x4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807a434:
	ldr		r0, [r6, #0x0]
	lsl		r1, r7, #0x1
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	cmp		r4, #0x5
	bls		_0807a44e
	ldr		r0, _0807a4b0
	ldr		r1, _0807a4b4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807a44e:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_0807a5d8
	ldr		r0, _0807a4b8
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	str		r0, [r6, #0x14]
	ldr		r1, _0807a4bc
	lsl		r0, r4, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x1
	mov		r8, r0
	add		r4, r6, #0x4
	mov		r5, #0x4
_0807a476:
	ldr		r0, [r4, #0x0]
	add		r0, #0x5c
	mov		r1, r8
	strb	r1, [r0, #0x0]
	ldmia	r4!, { r0 }
	mov		r1, #0x0
	bl		sub_0800bdbc
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807a476
	ldr		r2, [r6, #0x10]
	ldr		r0, [r6, #0x0]
	mov		r1, #0xa
	ldrsh	r0, [r0, r1]
	asr		r0, r7
	mov		r1, #0x1
	and		r0, r1
	add		r2, #0x5c
	mov		r1, #0x0
	strb	r0, [r2, #0x0]
	str		r1, [r6, #0x18]
	mov		r0, #0x1
	str		r0, [r6, #0x1c]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807a4b0:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_0807a4b4:	.4byte 0x000009D4
_0807a4b8:	.4byte 0x0200A26C
_0807a4bc:	.4byte 0x080d445c
	thumb_func_end sub_0807a418

	thumb_func_start sub_0807a4c0
sub_0807a4c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	cmp		r7, #0x0
	beq		_0807a55e
	ldr		r0, [r4, #0x1c]
	cmp		r0, #0x0
	beq		_0807a55e
	mov		r5, #0x0
	mov		r0, #0x1
	mov		r8, r0
	add		r1, r7, #0x4
	mov		r9, r1
	mov		r2, #0x1
	mov		r10, r2
	add		r6, r4, #0x4
_0807a4e8:
	ldr		r0, [r4, #0x18]
	asr		r0, r5
	mov		r1, r8
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807a530
	mov		r2, r9
	mov		r1, #0x6
	ldrsh	r0, [r2, r1]
	add		r3, r0, #0x0
	add		r3, #0x18
	ldr		r2, [r6, #0x0]
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0807a512
	neg		r1, r0
_0807a512:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0807a51a
	neg		r1, r1
_0807a51a:
	cmp		r3, r1
	blt		_0807a530
	add		r0, r2, #0x0
	mov		r1, #0x1
	bl		sub_0800bdbc
	mov		r1, r10
	lsl		r1, r5
	ldr		r0, [r4, #0x18]
	orr		r0, r1
	str		r0, [r4, #0x18]
_0807a530:
	add		r6, #0x4
	add		r5, #0x1
	cmp		r5, #0x2
	ble		_0807a4e8
	ldr		r0, [r4, #0x18]
	mov		r5, #0x8
	and		r0, r5
	cmp		r0, #0x0
	bne		_0807a55e
	ldr		r0, [r7, #0x14]
	mov		r1, #0x0
	cmp		r0, #0x3
	bne		_0807a54c
	mov		r1, #0x1
_0807a54c:
	cmp		r1, #0x0
	beq		_0807a55e
	ldr		r0, [r4, #0x10]
	mov		r1, #0x1
	bl		sub_0800bdbc
	ldr		r0, [r4, #0x18]
	orr		r0, r5
	str		r0, [r4, #0x18]
_0807a55e:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807a4c0

	thumb_func_start sub_0807a56c
sub_0807a56c:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _0807a580
	cmp		r1, r0
	bgt		_0807a584
	ldr		r0, [r2, #0x14]
	mov		r1, #0x2
	bl		sub_0800bdbc
	b		_0807a58c

_0807a580:	.4byte 0x00001387

_0807a584:
	ldr		r0, [r2, #0x14]
	mov		r1, #0x1
	bl		sub_0800bdbc
_0807a58c:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A590, 0x48
	thumb_func_end sub_0807a56c

	thumb_func_start sub_0807a5d8
sub_0807a5d8:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	mov		r4, #0x0
	ldr		r6, _0807a5f8
_0807a5e0:
	ldr		r0, [r6, #0x0]
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	add		r0, #0x5c
	strb	r5, [r0, #0x0]
	add		r4, #0x1
	cmp		r4, #0x9
	ble		_0807a5e0
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807a5f8:	.4byte 0x080d4474
	thumb_func_end sub_0807a5d8

	thumb_func_start sub_0807a5fc
sub_0807a5fc:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807a60e
	add		r0, r2, #0x0
	bl		sub_0808afac
_0807a60e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A612, 0x2
	thumb_func_end sub_0807a5fc

	thumb_func_start sub_0807a614
sub_0807a614:
	push	{ lr }
	add		r1, r0, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807a628
	add		r0, r1, #0x0
	bl		sub_0808e4a0
	b		_0807a62e
_0807a628:
	add		r0, r1, #0x0
	bl		sub_0808e1ac
_0807a62e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A632, 0x7A
	thumb_func_end sub_0807a614

	thumb_func_start sub_0807a6ac
sub_0807a6ac:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x90
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0807a6c6
	ldr		r0, _0807a6fc
	ldr		r1, _0807a700
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807a6c6:
	mov		r2, #0x0
	add		r3, r4, #0x0
	add		r3, #0x94
	ldr		r0, [r3, #0x0]
	add		r7, r4, #0x0
	add		r7, #0x9c
	add		r6, r4, #0x0
	add		r6, #0x98
	cmp		r2, r0
	bge		_0807a6f0
	add		r4, r5, #0x0
	mov		r5, #0x1
	neg		r5, r5
_0807a6e0:
	ldr		r0, [r4, #0x0]
	lsl		r1, r2, #0x2
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	add		r2, #0x1
	ldr		r0, [r3, #0x0]
	cmp		r2, r0
	blt		_0807a6e0
_0807a6f0:
	mov		r0, #0x0
	str		r0, [r7, #0x0]
	str		r0, [r6, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807a6fc:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_0807a700:	.4byte 0x00000971
	thumb_func_end sub_0807a6ac

	thumb_func_start sub_0807a704
sub_0807a704:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r4, #0x0
	add		r5, #0x90
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0807a718
	bl		sub_0808afd0
_0807a718:
	lsl		r0, r6, #0x2
	bl		sub_0808afb8
	str		r0, [r5, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x94
	str		r6, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807a6ac
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A732, 0x2
	thumb_func_end sub_0807a704

	thumb_func_start sub_0807a734
sub_0807a734:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r0, #0x90
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807a746
	bl		sub_0808afd0
_0807a746:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0808e28c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807a734

	thumb_func_start sub_0807a754
sub_0807a754:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	bl		sub_0808e21c
	add		r5, r6, #0x0
	add		r5, #0x70
	add		r0, r5, #0x0
	bl		sub_0808b374
	mov		r4, #0x0
	str		r4, [r6, #0x6c]
	add		r0, r6, #0x0
	add		r0, #0x90
	str		r4, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x1a
	bl		sub_0808e03c
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	add		r0, r5, #0x0
	bl		sub_0808b3d4
	add		r0, r6, #0x0
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x56
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x5c
	strh	r4, [r0, #0x0]
	add		r1, #0x13
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xa0
	str		r4, [r0, #0x0]
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0807a754

	thumb_func_start sub_0807a7b0
sub_0807a7b0:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r6, #0x0
	add		r4, #0x10
	mov		r5, #0x4
_0807a7ba:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807a7c6
	add		r0, #0x70
	bl		sub_0808b3d4
_0807a7c6:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807a7ba
	ldr		r0, [r6, #0x38]
	cmp		r0, #0x0
	beq		_0807a7ea
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r6, #0x3c]
	add		r0, #0x10
	str		r0, [r6, #0x3c]
	cmp		r0, #0xff
	ble		_0807a7ea
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	str		r0, [r6, #0x3c]
_0807a7ea:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807a7b0

	thumb_func_start sub_0807a7f0
sub_0807a7f0:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	ldr		r1, _0807a834
	ldr		r0, [r6, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r7, [r0, #0x0]
	cmp		r5, #0x7
	ble		_0807a810
	ldr		r0, _0807a838
	ldr		r1, _0807a83c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807a810:
	lsl		r4, r5, #0x3
	add		r4, r4, r7
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	mov		r0, #0x2
	ldrsh	r2, [r4, r0]
	mov		r0, #0x4
	ldrsh	r3, [r4, r0]
	add		r0, r6, #0x0
	bl		sub_08074250
	mov		r1, #0x6
	ldrsh	r0, [r4, r1]
	str		r0, [r6, #0x14]
	str		r5, [r6, #0x10]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807a834:	.4byte 0x0200D628
_0807a838:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_0807a83c:	.4byte 0x000008AC
	thumb_func_end sub_0807a7f0

	thumb_func_start sub_0807a840
sub_0807a840:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807a84e
	add		r0, #0x70
	bl		sub_0808b3d4
_0807a84e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A852, 0x2
	thumb_func_end sub_0807a840

	thumb_func_start sub_0807a854
sub_0807a854:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r1, _0807a894
	ldr		r3, [r5, #0xc]
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r4, _0807a898
	lsl		r3, r3, #0x3
	add		r0, r3, r4
	ldr		r2, [r0, #0x0]
	lsl		r2, r2, #0x10
	add		r4, #0x4
	add		r3, r3, r4
	ldr		r3, [r3, #0x0]
	lsl		r3, r3, #0x10
	mov		r0, #0x14
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	bl		sub_080742c8
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_0807a7f0
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807a894:	.4byte 0x0200D628
_0807a898:	.4byte 0x080d4698
	thumb_func_end sub_0807a854

	thumb_func_start sub_0807a89c
sub_0807a89c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0807a8b4
	ldr		r0, _0807a8ec
	ldr		r1, _0807a8f0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807a8b4:
	cmp		r5, #0x2
	ble		_0807a8c4
	ldr		r0, _0807a8ec
	ldr		r1, _0807a8f4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807a8c4:
	ldr		r3, _0807a8f8
	lsl		r4, r5, #0x3
	add		r0, r4, r3
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r3, #0x2
	add		r0, r4, r0
	mov		r7, #0x0
	ldrsh	r2, [r0, r7]
	add		r3, #0x4
	add		r4, r4, r3
	mov		r0, #0x0
	ldrsh	r3, [r4, r0]
	add		r0, r6, #0x0
	bl		sub_08074250
	str		r5, [r6, #0xc]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807a8ec:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_0807a8f0:	.4byte 0x0000083E
_0807a8f4:	.4byte 0x0000083F
_0807a8f8:	.4byte 0x080d4600
	thumb_func_end sub_0807a89c

	thumb_func_start sub_0807a8fc
sub_0807a8fc:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r5, [r3, #0x0]
	cmp		r5, #0x0
	beq		_0807a954
	ldr		r0, [r3, #0x4]
	sub		r0, r0, r1
	asr		r4, r0, #0x10
	ldr		r0, [r3, #0x8]
	sub		r0, r0, r2
	asr		r2, r0, #0x10
	add		r1, r4, #0x0
	add		r1, #0x20
	mov		r0, #0x98
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_0807a94e
	mov		r0, #0x30
	neg		r0, r0
	cmp		r2, r0
	blt		_0807a94e
	cmp		r2, #0xd0
	bgt		_0807a94e
	add		r0, r5, #0x0
	add		r0, #0x54
	strh	r4, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x56
	strh	r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x5c
	mov		r1, #0x15
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, #0x69
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	bl		sub_0808e4a0
	b		_0807a954
_0807a94e:
	ldr		r0, [r3, #0x0]
	bl		sub_0808e1ac
_0807a954:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A95A, 0x36
	thumb_func_end sub_0807a8fc

	thumb_func_start sub_0807a990
sub_0807a990:
	push	{ r4, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, _0807a9c0
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r2, #0xf0
	lsl		r2, r2, #0xf
	mov		r3, #0xcd
	lsl		r3, r3, #0x13
	mov		r0, #0x15
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	bl		sub_080742c8
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0807a89c
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7A9BE, 0x2

_0807a9c0:	.4byte 0x080d4600
	thumb_func_end sub_0807a990

	thumb_func_start sub_0807a9c4
sub_0807a9c4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r9, r1
	add		r7, r2, #0x0
	mov		r8, r3
	ldr		r6, [r5, #0x0]
	cmp		r6, #0x0
	bne		_0807a9f4
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	b		_0807a9fa
_0807a9f4:
	add		r0, r6, #0x0
	bl		sub_0808e278
_0807a9fa:
	ldr		r0, [r5, #0x0]
	mov		r1, #0xf
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x8
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	str		r7, [r5, #0x4]
	mov		r0, r8
	str		r0, [r5, #0x8]
	mov		r0, r9
	str		r0, [r5, #0xc]
	mov		r0, #0x5
	str		r0, [r5, #0x10]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7AA2E, 0x2
	thumb_func_end sub_0807a9c4

	thumb_func_start sub_0807aa30
sub_0807aa30:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0807aa4a
	ldr		r0, _0807aa80
	ldr		r1, _0807aa84
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807aa4a:
	mov		r6, #0x0
	ldr		r0, [r5, #0x8]
	cmp		r6, r0
	bge		_0807aa74
	mov		r8, r6
	mov		r7, #0x0
_0807aa56:
	ldr		r0, [r5, #0x0]
	add		r4, r7, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807aa6a
	mov		r1, #0x3
	bl		sub_0808e28c
	mov		r0, r8
	str		r0, [r4, #0x0]
_0807aa6a:
	add		r7, #0x14
	add		r6, #0x1
	ldr		r0, [r5, #0x8]
	cmp		r6, r0
	blt		_0807aa56
_0807aa74:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7AA7E, 0x2

_0807aa80:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_0807aa84:	.4byte 0x000007A7
	thumb_func_end sub_0807aa30

	thumb_func_start sub_0807aa88
sub_0807aa88:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	add		r4, r3, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0807aaa0
	cmp		r7, #0x0
	beq		_0807aaa0
	cmp		r4, #0x0
	bne		_0807aaac
_0807aaa0:
	ldr		r0, _0807aaf0
	ldr		r1, _0807aaf4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807aaac:
	ldr		r0, [r5, #0x4]
	cmp		r6, r0
	blt		_0807aac0
	ldr		r0, _0807aaf0
	mov		r1, #0xf0
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807aac0:
	ldr		r0, _0807aaf8
	add		r1, r4, #0x0
	bl		sub_080b63dc
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r1, [r0, #0x0]
	ldr		r2, [r5, #0x10]
	lsl		r2, r2, #0x10
	add		r0, r6, #0x1
	lsl		r0, r0, #0x5
	ldr		r3, [r5, #0x14]
	add		r3, r3, r0
	lsl		r3, r3, #0x10
	lsl		r4, r6, #0x2
	add		r4, r4, r6
	lsl		r4, r4, #0x2
	ldr		r0, [r5, #0x0]
	add		r0, r0, r4
	bl		sub_0807a9c4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807aaf0:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_0807aaf4:	.4byte 0x0000077E
_0807aaf8:	.4byte 0x0200BDD4
	thumb_func_end sub_0807aa88

	thumb_func_start sub_0807aafc
sub_0807aafc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r9, r1
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0807ab52
	ldr		r0, _0807ab60
	ldr		r1, [r0, #0x0]
	mov		r8, r1
	ldr		r7, [r0, #0x4]
	mov		r4, #0x0
	ldr		r0, [r5, #0x4]
	cmp		r4, r0
	bge		_0807ab52
	mov		r2, #0x1
	mov		r10, r2
	mov		r6, #0x0
_0807ab26:
	ldr		r0, [r5, #0x0]
	add		r0, r6, r0
	ldr		r1, [r0, #0x10]
	mov		r2, #0x2
	neg		r2, r2
	and		r1, r2
	str		r1, [r0, #0x10]
	mov		r2, r9
	cmp		r2, #0x0
	beq		_0807ab40
	mov		r2, r10
	orr		r1, r2
	str		r1, [r0, #0x10]
_0807ab40:
	mov		r1, r8
	add		r2, r7, #0x0
	bl		sub_08079ffc
	add		r6, #0x14
	add		r4, #0x1
	ldr		r0, [r5, #0x4]
	cmp		r4, r0
	blt		_0807ab26
_0807ab52:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807ab60:	.4byte 0x0200D5FC
	thumb_func_end sub_0807aafc

	thumb_func_start sub_0807ab64
sub_0807ab64:
	mov		r1, #0x0
	str		r1, [r0, #0xc]
	str		r1, [r0, #0x18]
	str		r1, [r0, #0x1c]
	bx		lr

.incbin "base.gba", 0x7AB6E, 0x2
	thumb_func_end sub_0807ab64

	thumb_func_start sub_0807ab70
sub_0807ab70:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r2, [r5, #0x0]
	cmp		r2, #0x0
	beq		_0807abac
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r4, r2, r0
	cmp		r2, r4
	beq		_0807aba4
	mov		r6, #0x0
_0807ab8e:
	sub		r4, #0x14
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807ab9e
	mov		r1, #0x3
	bl		sub_0808e28c
	str		r6, [r4, #0x0]
_0807ab9e:
	ldr		r0, [r5, #0x0]
	cmp		r0, r4
	bne		_0807ab8e
_0807aba4:
	ldr		r0, [r5, #0x0]
	sub		r0, #0x4
	bl		sub_0808afd0
_0807abac:
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_0807abba
	add		r0, r5, #0x0
	bl		sub_0808afac
_0807abba:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807ab70

	thumb_func_start sub_0807abc0
sub_0807abc0:
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x8]
	bx		lr

.incbin "base.gba", 0x7ABCA, 0x2
	thumb_func_end sub_0807abc0

	thumb_func_start sub_0807abcc
sub_0807abcc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0807abe8
	ldr		r0, _0807ac38
	ldr		r1, _0807ac3c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807abe8:
	cmp		r7, #0x1e
	ble		_0807abfa
	ldr		r0, _0807ac38
	mov		r1, #0xbe
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807abfa:
	ldr		r4, _0807ac40
	lsl		r5, r7, #0x3
	add		r0, r5, r4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r4, #0x2
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	mov		r8, r3
	add		r0, r4, #0x4
	add		r0, r5, r0
	mov		r2, #0x0
	ldrsh	r3, [r0, r2]
	mov		r12, r3
	add		r0, r6, #0x0
	mov		r2, r8
	bl		sub_08074250
	add		r4, #0x6
	add		r5, r5, r4
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	str		r0, [r6, #0x34]
	str		r7, [r6, #0x1c]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7AC36, 0x2

_0807ac38:	.4byte 0x080d4334 @ n_taguchi/ntDiving.cpp
_0807ac3c:	.4byte 0x000005EF
_0807ac40:	.4byte 0x080d4478
	thumb_func_end sub_0807abcc

	thumb_func_start sub_0807ac44
sub_0807ac44:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0xc]
	cmp		r0, #0x0
	beq		_0807ac56
	mov		r1, #0x3
	bl		sub_0808e28c
_0807ac56:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807434c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807ac44

	thumb_func_start sub_0807ac64
sub_0807ac64:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0807436c
	mov		r0, #0x0
	str		r0, [r4, #0xc]
	str		r0, [r4, #0x10]
	str		r0, [r4, #0x48]
	str		r0, [r4, #0x4c]
	add		r0, r4, #0x0
	bl		sub_08079014
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0807ac64

	thumb_func_start sub_0807ac84
sub_0807ac84:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_080706ac
	add		r2, r0, #0x0
	add		r3, r2, #0x0
	ldr		r1, [r2, #0x58]
	cmp		r1, #0x2
	beq		_0807acc4
	mov		r5, #0xa2
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807acb4
	cmp		r1, #0x1
	beq		_0807acc4
	ldr		r1, [r2, #0x2c]
	add		r0, r2, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0807acc4
_0807acb4:
	cmp		r1, #0x0
	beq		_0807acc4
	ldr		r1, [r3, #0x2c]
	add		r0, r3, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
_0807acc4:
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7ACD2, 0x52
	thumb_func_end sub_0807ac84

	thumb_func_start sub_0807ad24
sub_0807ad24:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807ad42
	add		r1, #0x18
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x5
	bl		sub_0807a7f0
	b		_0807ad64
_0807ad42:
	cmp		r0, #0x5
	bgt		_0807ad56
	mov		r1, #0x98
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x6
	bl		sub_0807a7f0
	b		_0807ad64
_0807ad56:
	mov		r1, #0x98
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x7
	bl		sub_0807a7f0
_0807ad64:
	ldr		r0, [r4, #0x58]
	ldr		r0, [r0, #0x40]
	cmp		r0, #0x0
	beq		_0807ad7c
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x5
	bl		sub_0807a7f0
	b		_0807ad8a
_0807ad7c:
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x6
	bl		sub_0807a7f0
_0807ad8a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807ad24

	thumb_func_start sub_0807ad90
sub_0807ad90:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r1, #0xa2
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r0, _0807adb8
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	bne		_0807adb2
	add		r0, r2, #0x0
	add		r0, #0xf4
	mov		r1, #0x1
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r3, [r0, #0x0]
_0807adb2:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7ADB6, 0x2

_0807adb8:	.4byte 0x0200D530
	thumb_func_end sub_0807ad90

	thumb_func_start sub_0807adbc
sub_0807adbc:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0807ae2c
	str		r0, [r6, #0x4c]
	ldr		r0, _0807ae30
	str		r0, [r6, #0x54]
	ldr		r0, _0807ae34
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	bl		sub_08078bdc
	ldr		r0, _0807ae38
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r0, _0807ae3c
	str		r1, [r0, #0x0]
	ldr		r0, _0807ae40
	str		r1, [r0, #0x0]
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0807a5fc
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_08074224
	add		r0, r6, #0x0
	add		r0, #0x64
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0807ae26
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0807ae26:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807ae2c:	.4byte 0x080e26b4
_0807ae30:	.4byte 0x080e269c
_0807ae34:	.4byte 0x080e26cc
_0807ae38:	.4byte 0x0200D604
_0807ae3c:	.4byte 0x0200D620
_0807ae40:	.4byte 0x0200D624
	thumb_func_end sub_0807adbc

	thumb_func_start sub_0807ae44
sub_0807ae44:
	push	{ r4, lr }
	ldr		r4, _0807ae6c
	ldr		r1, _0807ae70
	add		r0, r4, r1
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_08077544
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0807ae6c:	.4byte 0x0200DB50
_0807ae70:	.4byte 0xFFFFFEB0
	thumb_func_end sub_0807ae44

	thumb_func_start sub_0807ae74
sub_0807ae74:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _0807aec0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0807ae8e
	ldr		r0, _0807aec4
	mov		r1, #0x90
	lsl		r1, r1, #0x3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807ae8e:
	cmp		r4, #0x4
	bls		_0807ae9e
	ldr		r0, _0807aec4
	ldr		r1, _0807aec8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807ae9e:
	ldr		r0, _0807aecc
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0807aeb0
	ldr		r0, _0807aed0
	add		r1, r4, #0x0
	bl		sub_0808c670
_0807aeb0:
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	lsl		r1, r1, #0x2
	ldr		r0, [r5, #0x0]
	add		r0, r0, r1
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0807aec0:	.4byte 0x0200D624
_0807aec4:	.4byte 0x080d42fc @ n_taguchi/ntDiving.h
_0807aec8:	.4byte 0x00000481
_0807aecc:	.4byte 0x0200CDBC
_0807aed0:	.4byte 0x080d4314 @ Audience_Pattern:%d

.incbin "base.gba", 0x7AED4, 0x3E0
	thumb_func_end sub_0807ae74

	thumb_func_start sub_0807b2b4
sub_0807b2b4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0807b35c
	str		r0, [r4, #0x4c]
	ldr		r0, _0807b360
	str		r0, [r4, #0xc]
	ldr		r5, _0807b364
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0807b2e0
	ldr		r0, _0807b368
	mov		r1, #0x37
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b2e0:
	str		r4, [r5, #0x0]
	mov		r0, #0x0
	str		r0, [r4, #0x5c]
	str		r0, [r4, #0x60]
	str		r0, [r4, #0x64]
	str		r0, [r4, #0x68]
	mov		r1, #0x0
	add		r5, r4, #0x0
	add		r5, #0x74
	mov		r3, #0x0
_0807b2f4:
	lsl		r0, r1, #0x2
	add		r2, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	mov		r1, #0x9
	add		r0, r0, r5
	add		r0, #0x24
_0807b302:
	str		r3, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0807b302
	add		r1, r2, #0x0
	cmp		r1, #0x4
	ble		_0807b2f4
	mov		r2, #0x0
	mov		r1, #0x5
	mov		r3, #0xaa
	lsl		r3, r3, #0x1
	add		r0, r4, r3
_0807b31c:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0807b31c
	mov		r0, #0x0
	str		r0, [r4, #0x6c]
	str		r0, [r4, #0x70]
	mov		r1, #0x0
	mov		r3, #0x1
	neg		r3, r3
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r5, r4, r0
_0807b338:
	lsl		r0, r1, #0x3
	add		r2, r1, #0x1
	mov		r1, #0x1
	add		r0, r0, r5
	add		r0, #0x4
_0807b342:
	str		r3, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0807b342
	add		r1, r2, #0x0
	cmp		r1, #0x4
	ble		_0807b338
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7B35A, 0x2

_0807b35c:	.4byte 0x080e26f4
_0807b360:	.4byte 0x080e270c
_0807b364:	.4byte 0x0200D630
_0807b368:	.4byte 0x080d46d8 @ n_taguchi/ntTutorial.cpp
	thumb_func_end sub_0807b2b4

	thumb_func_start sub_0807b36c
sub_0807b36c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	mov		r10, r1
	ldr		r0, _0807b410
	str		r0, [r7, #0x4c]
	ldr		r0, _0807b414
	str		r0, [r7, #0xc]
	mov		r1, #0x0
	mov		r0, #0x74
	add		r0, r0, r7
	mov		r8, r0
	mov		r0, #0x40
	add		r0, r0, r7
	mov		r9, r0
_0807b390:
	lsl		r0, r1, #0x2
	add		r6, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	mov		r1, r8
	add		r4, r0, r1
	mov		r5, #0x9
_0807b39e:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807b3aa
	mov		r1, #0x3
	bl		sub_0807bd68
_0807b3aa:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807b39e
	add		r1, r6, #0x0
	cmp		r1, #0x4
	ble		_0807b390
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	mov		r5, #0x5
_0807b3c0:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807b3cc
	mov		r1, #0x3
	bl		sub_0808e28c
_0807b3cc:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807b3c0
	ldr		r1, _0807b418
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, _0807b41c
	bl		sub_08002268
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807b400
	add		r0, r7, #0x0
	bl		sub_080b74c8
_0807b400:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7B40E, 0x2

_0807b410:	.4byte 0x080e26f4
_0807b414:	.4byte 0x080e270c
_0807b418:	.4byte 0x0200D630
_0807b41c:	.4byte 0x00000835
	thumb_func_end sub_0807b36c

	thumb_func_start sub_0807b420
sub_0807b420:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	mov		r0, #0x0
	str		r0, [r7, #0x54]
	str		r0, [r7, #0x58]
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r5, r7, r0
	ldr		r1, _0807b4d8
	mov		r8, r1
	mov		r2, #0x5
	mov		r9, r2
_0807b43e:
	ldr		r6, [r5, #0x0]
	cmp		r6, #0x0
	bne		_0807b47a
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r6, [r4, #0x6c]
	str		r4, [r5, #0x0]
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x4]
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
_0807b47a:
	add		r5, #0x4
	mov		r0, #0x8
	add		r8, r0
	mov		r1, #0x1
	neg		r1, r1
	add		r9, r1
	mov		r2, r9
	cmp		r2, #0x0
	bge		_0807b43e
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_0807b700
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_0807bdfc
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_0807bdd0
	add		r0, r7, #0x0
	bl		sub_0807b9c8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807b4d8:	.4byte 0x080d46f8
	thumb_func_end sub_0807b420

	thumb_func_start sub_0807b4dc
sub_0807b4dc:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	cmp		r1, #0x0
	beq		_0807b4ea
	cmp		r1, #0x1
	beq		_0807b4f2
	b		_0807b58a
_0807b4ea:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0807b4ea
_0807b4f2:
	add		r0, r4, #0x0
	bl		sub_0807b420
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0xae
	lsl		r0, r0, #0x1
	add		r6, r4, r0
	b		_0807b576
_0807b50a:
	mov		r0, #0x0
	mov		r1, #0x88
	lsl		r1, r1, #0x2
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0807b530
	ldr		r0, [r4, #0x64]
	sub		r0, #0x1
	str		r0, [r4, #0x64]
	cmp		r0, #0x0
	bge		_0807b526
	str		r5, [r4, #0x64]
	b		_0807b558
_0807b526:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0807bec4
	b		_0807b558
_0807b530:
	mov		r0, #0x0
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_0807b558
	ldr		r0, [r4, #0x64]
	add		r0, #0x1
	str		r0, [r4, #0x64]
	ldr		r1, [r4, #0x60]
	cmp		r0, r1
	blt		_0807b550
	sub		r0, r1, #0x1
	str		r0, [r4, #0x64]
	b		_0807b558
_0807b550:
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0807bec4
_0807b558:
	add		r0, r4, #0x0
	bl		sub_0807bf0c
	add		r0, r4, #0x0
	bl		sub_0807b640
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r4, #0x0
	bl		sub_080b7690
_0807b576:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0807b558
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_0807b50a
_0807b58a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807b4dc

	thumb_func_start sub_0807b590
sub_0807b590:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r1, #0x0
	mov		r0, #0x74
	add		r0, r0, r5
	mov		r9, r0
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r2, r2, r5
	mov		r8, r2
_0807b5ac:
	lsl		r0, r1, #0x2
	add		r7, r1, #0x1
	mov		r10, r7
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	mov		r1, r9
	add		r4, r0, r1
	mov		r6, #0x9
_0807b5bc:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807b5ce
	ldr		r1, [r5, #0x54]
	ldr		r2, [r5, #0x58]
	mov		r7, r8
	ldr		r3, [r7, #0x0]
	bl		sub_0807bc80
_0807b5ce:
	add		r4, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0807b5bc
	mov		r1, r10
	cmp		r1, #0x4
	ble		_0807b5ac
	mov		r6, #0x0
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r7, r5, r0
	mov		r1, #0x1
	mov		r8, r1
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	add		r4, r5, r2
	ldr		r5, _0807b61c
_0807b5f0:
	ldr		r2, [r4, #0x0]
	cmp		r2, #0x0
	beq		_0807b626
	ldr		r0, [r7, #0x0]
	asr		r0, r6
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807b620
	ldr		r1, [r5, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r5, #0x4]
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
	b		_0807b626

.incbin "base.gba", 0x7B61A, 0x2

_0807b61c:	.4byte 0x080d4728

_0807b620:
	add		r0, r2, #0x0
	bl		sub_0808e1ac
_0807b626:
	add		r4, #0x4
	add		r5, #0x8
	add		r6, #0x1
	cmp		r6, #0x5
	ble		_0807b5f0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7B63E, 0x2
	thumb_func_end sub_0807b590

	thumb_func_start sub_0807b640
sub_0807b640:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807b6c0
	mov		r2, #0x0
	mov		r3, #0xb0
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807b664
	cmp		r0, #0x1
	beq		_0807b678
	b		_0807b68c
_0807b664:
	ldr		r0, [r4, #0x54]
	sub		r0, #0x1e
	str		r0, [r4, #0x54]
	mov		r3, #0xb2
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	bgt		_0807b68c
	b		_0807b690
_0807b678:
	ldr		r0, [r4, #0x54]
	add		r0, #0x1e
	str		r0, [r4, #0x54]
	mov		r3, #0xb2
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	blt		_0807b68c
	mov		r2, #0x1
_0807b68c:
	cmp		r2, #0x0
	beq		_0807b6c0
_0807b690:
	mov		r0, #0xae
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0xb2
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x54]
	add		r0, r4, #0x0
	bl		sub_0807b700
	add		r0, r4, #0x0
	bl		sub_0807bdfc
	mov		r3, #0x9e
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807b9c8
_0807b6c0:
	ldr		r0, [r4, #0x54]
	cmp		r0, #0x0
	bge		_0807b6ca
	mov		r0, #0x0
	str		r0, [r4, #0x54]
_0807b6ca:
	ldr		r0, [r4, #0x60]
	lsl		r1, r0, #0x4
	sub		r1, r1, r0
	lsl		r1, r1, #0x4
	sub		r1, #0xf0
	ldr		r0, [r4, #0x54]
	cmp		r0, r1
	ble		_0807b6dc
	str		r1, [r4, #0x54]
_0807b6dc:
	ldr		r3, _0807b6f4
	ldr		r2, _0807b6f8
	ldr		r0, [r4, #0x54]
	lsl		r0, r0, #0x10
	ldr		r1, _0807b6fc
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7B6F2, 0x2

_0807b6f4:	.4byte 0x0200CE28
_0807b6f8:	.4byte 0x0200CE2C
_0807b6fc:	.4byte 0x0200CE30
	thumb_func_end sub_0807b640

	thumb_func_start sub_0807b700
sub_0807b700:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807b730
	bl		sub_0808e278
	ldr		r0, [r4, #0x0]
	mov		r1, #0xa
	bl		sub_0808e03c
	ldr		r0, [r4, #0x0]
	ldr		r1, [r5, #0x64]
	add		r1, #0x1
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
_0807b730:
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807b75a
	bl		sub_0808e278
	ldr		r0, [r4, #0x0]
	mov		r1, #0xa
	bl		sub_0808e03c
	ldr		r0, [r4, #0x0]
	ldr		r1, [r5, #0x60]
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
_0807b75a:
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807b782
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	ldr		r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r1, r0
	str		r1, [r2, #0x0]
	ldr		r0, [r5, #0x64]
	cmp		r0, #0x0
	ble		_0807b782
	mov		r0, #0x1
	orr		r1, r0
	str		r1, [r2, #0x0]
_0807b782:
	mov		r1, #0xa2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807b7ae
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r3, r5, r0
	ldr		r2, [r3, #0x0]
	mov		r0, #0x3
	neg		r0, r0
	and		r2, r0
	str		r2, [r3, #0x0]
	ldr		r0, [r5, #0x60]
	sub		r0, #0x1
	ldr		r1, [r5, #0x64]
	cmp		r1, r0
	bge		_0807b7ae
	mov		r0, #0x2
	orr		r2, r0
	str		r2, [r3, #0x0]
_0807b7ae:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807b700

	thumb_func_start sub_0807b7b4
sub_0807b7b4:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	ldr		r0, [r7, #0x60]
	cmp		r4, r0
	blt		_0807b7d0
	ldr		r0, _0807b860
	ldr		r1, _0807b864
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b7d0:
	cmp		r5, #0x9
	ble		_0807b7e0
	ldr		r0, _0807b860
	ldr		r1, _0807b868
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b7e0:
	lsl		r1, r5, #0x2
	lsl		r0, r4, #0x2
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	add		r0, r7, #0x0
	add		r0, #0x74
	add		r4, r0, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807b802
	ldr		r0, _0807b860
	ldr		r1, _0807b86c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b802:
	ldr		r4, [r4, #0x0]
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x9
	bls		_0807b816
	ldr		r0, _0807b870
	mov		r1, #0x3b
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b816:
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x2
	add		r1, r4, #0x0
	add		r1, #0x28
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0807b836
	ldr		r0, _0807b870
	mov		r1, #0x3d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b836:
	ldrb	r0, [r6, #0x6]
	cmp		r0, #0x1f
	bhi		_0807b842
	ldrb	r0, [r6, #0x7]
	cmp		r0, #0x3
	bls		_0807b84e
_0807b842:
	ldr		r0, _0807b870
	mov		r1, #0x3f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b84e:
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	str		r6, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7B85E, 0x2

_0807b860:	.4byte 0x080d46d8 @ n_taguchi/ntTutorial.cpp
_0807b864:	.4byte 0x000001A3
_0807b868:	.4byte 0x000001A5
_0807b86c:	.4byte 0x000001A7
_0807b870:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
	thumb_func_end sub_0807b7b4

	thumb_func_start sub_0807b874
sub_0807b874:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r7, r3, #0x0
	ldr		r0, [r6, #0x60]
	cmp		r4, r0
	blt		_0807b890
	ldr		r0, _0807b904
	ldr		r1, _0807b908
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b890:
	cmp		r5, #0x9
	ble		_0807b8a0
	ldr		r0, _0807b904
	ldr		r1, _0807b90c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b8a0:
	lsl		r1, r5, #0x2
	lsl		r0, r4, #0x2
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	add		r0, r6, #0x0
	add		r0, #0x74
	add		r4, r0, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807b8c2
	ldr		r0, _0807b904
	ldr		r1, _0807b910
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b8c2:
	ldr		r4, [r4, #0x0]
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x9
	bls		_0807b8d6
	ldr		r0, _0807b914
	mov		r1, #0x46
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b8d6:
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	lsl		r0, r0, #0x2
	add		r4, #0x50
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807b8f2
	ldr		r0, _0807b914
	mov		r1, #0x48
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b8f2:
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	str		r7, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7B902, 0x2

_0807b904:	.4byte 0x080d46d8 @ n_taguchi/ntTutorial.cpp
_0807b908:	.4byte 0x000001B9
_0807b90c:	.4byte 0x000001BB
_0807b910:	.4byte 0x000001BD
_0807b914:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
	thumb_func_end sub_0807b874

	thumb_func_start sub_0807b918
sub_0807b918:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r7, #0x60]
	cmp		r4, r0
	blt		_0807b934
	ldr		r0, _0807b9c0
	mov		r1, #0xe4
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b934:
	mov		r0, #0x4
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x9
	ble		_0807b94a
	ldr		r0,_0807b9c0
	mov		r1, #0xe5
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b94a:
	mov		r0, #0x4
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x2
	lsl		r1, r4, #0x2
	add		r1, r1, r4
	lsl		r5, r1, #0x3
	add		r0, r0, r5
	add		r4, r7, #0x0
	add		r4, #0x74
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807b972
	ldr		r0, _0807b9c0
	mov		r1, #0xe6
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b972:
	mov		r0, #0x4
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	add		r0, r4, r0
	mov		r4, #0x5
	ldrsb	r4, [r6, r4]
	mov		r1, #0x6
	ldrsh	r6, [r6, r1]
	ldr		r5, [r0, #0x0]
	cmp		r4, #0x9
	bls		_0807b996
	ldr		r0, _0807b9c4
	mov		r1, #0x55
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b996:
	lsl		r0, r4, #0x2
	add		r1, r5, #0x0
	add		r1, #0x28
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0807b9b0
	ldr		r0, _0807b9c4
	mov		r1, #0x57
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807b9b0:
	lsl		r1, r4, #0x1
	add		r0, r5, #0x0
	add		r0, #0x78
	add		r0, r0, r1
	strh	r6, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807b9c0:	.4byte 0x080d46d8 @ n_taguchi/ntTutorial.cpp
_0807b9c4:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
	thumb_func_end sub_0807b918

	thumb_func_start sub_0807b9c8
sub_0807b9c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	mov		r5, #0x0
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0x0]
_0807b9e0:
	ldr		r0, _0807ba9c
	add		r1, r5, #0x0
	bl		sub_0800ed80
	add		r6, r0, #0x0
	lsl		r1, r5, #0x2
	ldr		r0, [r7, #0x64]
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	ldr		r3, [sp, #0x0]
	add		r1, r3, r1
	ldr		r4, [r1, #0x0]
	add		r5, #0x1
	str		r5, [sp, #0x4]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_0807ba84
	ldr		r0, [r7, #0x6c]
	cmp		r0, #0x0
	bne		_0807ba18
	ldr		r0, _0807baa0
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807ba18:
	ldr		r0, [r7, #0x70]
	cmp		r4, r0
	bcc		_0807ba2c
	ldr		r0, _0807baa0
	mov		r1, #0xa9
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807ba2c:
	lsl		r1, r4, #0x2
	ldr		r0, [r7, #0x6c]
	add		r0, r0, r1
	bl		sub_0800f33c
	mov		r9, r0
	bl		sub_0800d74c
	mov		r8, r0
	mov		r4, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r4, r1
	bge		_0807ba84
	mov		r3, #0xe8
	add		r3, r3, r6
	mov		r10, r3
	mov		r5, #0xf
_0807ba4e:
	mov		r0, r9
	add		r1, r4, #0x0
	bl		sub_0800f2c8
	add		r1, r0, #0x0
	mov		r0, r10
	ldr		r2, [r0, #0x0]
	ldrh	r0, [r2, #0x1c]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	orr		r0, r3
	strh	r0, [r2, #0x1c]
	ldrb	r2, [r1, #0x0]
	add		r1, #0x1
	mov		r0, #0x0
	strh	r0, [r6, #0x28]
	strh	r5, [r6, #0x2a]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	add		r5, #0xc
	add		r4, #0x1
	mov		r1, r8
	ldrb	r1, [r1, #0x0]
	cmp		r4, r1
	blt		_0807ba4e
_0807ba84:
	ldr		r5, [sp, #0x4]
	cmp		r5, #0x1
	ble		_0807b9e0
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BA9A, 0x2

_0807ba9c:	.4byte 0x0200AA18
_0807baa0:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
	thumb_func_end sub_0807b9c8

	thumb_func_start sub_0807baa4
sub_0807baa4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807babc
	ldr		r0, _0807bb70
	mov		r1, #0x8a
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807babc:
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0x2
	add		r1, r4, #0x0
	add		r1, #0x28
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	add		r5, r1, #0x0
	cmp		r0, #0x0
	bne		_0807bada
	ldr		r0, _0807bb70
	ldr		r1, _0807bb74
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807bada:
	mov		r6, #0x0
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0x2
	add		r0, r5, r0
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0xc]
	str		r0, [r4, #0x24]
	cmp		r0, #0x0
	beq		_0807baf8
	ldrb	r1, [r1, #0x10]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807baf8
	mov		r6, #0x2
_0807baf8:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x20]
	lsl		r1, r1, #0x2
	add		r1, r5, r1
	ldr		r1, [r1, #0x0]
	mov		r2, #0x8
	ldrsh	r1, [r1, r2]
	bl		sub_0808e03c
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x20]
	lsl		r1, r1, #0x2
	add		r1, r5, r1
	ldr		r1, [r1, #0x0]
	mov		r2, #0xa
	ldrsh	r1, [r1, r2]
	add		r2, r6, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r2, [r4, #0x20]
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r3, [r0, #0x0]
	mov		r1, #0x2
	ldrsh	r0, [r3, r1]
	ldr		r1, [r4, #0x14]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	str		r0, [r4, #0x4]
	mov		r1, #0x4
	ldrsh	r0, [r3, r1]
	ldr		r1, [r4, #0x18]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	str		r0, [r4, #0x8]
	mov		r0, #0x0
	str		r0, [r4, #0x10]
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x50
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0807bb78
	ldr		r0, [r2, #0x4]
	str		r0, [r4, #0xc]
	ldr		r0, [r2, #0x8]
	str		r0, [r4, #0x10]
	ldrb	r1, [r2, #0x1c]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807bb7a
	ldr		r0, [r2, #0x14]
	str		r0, [r4, #0x1c]
	b		_0807bb7a

_0807bb70:	.4byte 0x080d46d8 @ n_taguchi/ntTutorial.cpp
_0807bb74:	.4byte 0x0000022A

_0807bb78:
	str		r2, [r4, #0x1c]
_0807bb7a:
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0x1
	add		r1, r4, #0x0
	add		r1, #0x78
	add		r2, r1, r0
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0807bb96
	add		r0, r1, #0x0
	bl		sub_0808f690
_0807bb96:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807baa4

	thumb_func_start sub_0807bb9c
sub_0807bb9c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r5, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807bc78
	ldr		r1, [r4, #0x20]
	lsl		r1, r1, #0x2
	add		r0, r4, #0x0
	add		r0, #0x50
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_0807bbe4
	ldr		r0, [r4, #0x4]
	ldr		r2, [r4, #0xc]
	add		r0, r0, r2
	str		r0, [r4, #0x4]
	ldr		r0, [r4, #0x8]
	ldr		r1, [r4, #0x10]
	add		r0, r0, r1
	str		r0, [r4, #0x8]
	ldr		r0, [r3, #0xc]
	add		r2, r2, r0
	str		r2, [r4, #0xc]
	ldr		r0, [r3, #0x10]
	add		r1, r1, r0
	str		r1, [r4, #0x10]
	ldr		r0, [r4, #0x1c]
	ldr		r1, [r3, #0x18]
	add		r0, r0, r1
	mov		r1, #0xb4
	lsl		r1, r1, #0x11
	bl		sub_080bbd44
	str		r0, [r4, #0x1c]
_0807bbe4:
	ldr		r0, [r4, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0x2
	add		r2, r4, #0x0
	add		r2, #0x28
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x10]
	mov		r0, #0x2
	and		r0, r1
	add		r6, r2, #0x0
	cmp		r0, #0x0
	beq		_0807bc22
	ldr		r2, [r4, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807bc46
	ldr		r0, [r4, #0x24]
	sub		r0, #0x1
	str		r0, [r4, #0x24]
	cmp		r0, #0x0
	bge		_0807bc46
	str		r5, [r4, #0x24]
	b		_0807bc4a
_0807bc22:
	ldr		r0, [r4, #0x24]
	cmp		r0, #0x0
	beq		_0807bc34
	sub		r0, #0x1
	str		r0, [r4, #0x24]
	cmp		r0, #0x0
	bgt		_0807bc34
	str		r5, [r4, #0x24]
	mov		r5, #0x1
_0807bc34:
	ldr		r2, [r4, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807bc46
	mov		r5, #0x1
_0807bc46:
	cmp		r5, #0x0
	beq		_0807bc78
_0807bc4a:
	mov		r3, #0x0
	b		_0807bc50
_0807bc4e:
	add		r3, #0x1
_0807bc50:
	cmp		r3, #0x9
	bgt		_0807bc78
	ldr		r0, [r4, #0x20]
	add		r0, r0, r3
	add		r1, r0, #0x1
	cmp		r1, #0x9
	ble		_0807bc60
	sub		r1, #0xa
_0807bc60:
	lsl		r0, r1, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807bc4e
	str		r1, [r4, #0x20]
	add		r0, r2, #0x0
	bl		sub_0808e278
	add		r0, r4, #0x0
	bl		sub_0807baa4
_0807bc78:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BC7E, 0x2
	thumb_func_end sub_0807bb9c

	thumb_func_start sub_0807bc80
sub_0807bc80:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r2, #0x0
	ldr		r0, [r4, #0x0]
	mov		r12, r0
	cmp		r0, #0x0
	beq		_0807bd26
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0x2
	add		r6, r4, #0x0
	add		r6, #0x28
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x10]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807bca8
	mov		r3, #0x1
_0807bca8:
	mov		r1, #0x6
	ldrsh	r0, [r4, r1]
	sub		r2, r0, r5
	mov		r1, #0xa
	ldrsh	r0, [r4, r1]
	sub		r5, r0, r7
	cmp		r3, #0x0
	beq		_0807bd20
	mov		r0, #0x20
	neg		r0, r0
	cmp		r2, r0
	blt		_0807bd20
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	cmp		r2, r0
	bgt		_0807bd20
	cmp		r5, #0x0
	blt		_0807bd20
	cmp		r5, #0xa0
	bgt		_0807bd20
	mov		r0, #0x1e
	ldrsh	r3, [r4, r0]
	cmp		r3, #0x0
	beq		_0807bce0
	mov		r1, r12
	add		r1, #0x64
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
_0807bce0:
	lsl		r1, r3, #0x2
	add		r1, r1, r3
	lsl		r1, r1, #0x1
	ldr		r0, [r4, #0x0]
	add		r0, #0x62
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x54
	strh	r2, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, #0x56
	strh	r5, [r0, #0x0]
	ldr		r1, [r4, #0x0]
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x6]
	add		r1, #0x5c
	strh	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x7]
	add		r1, #0x69
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0808e4a0
	b		_0807bd26
_0807bd20:
	ldr		r0, [r4, #0x0]
	bl		sub_0808e1ac
_0807bd26:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807bc80

	thumb_func_start sub_0807bd2c
sub_0807bd2c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r5, [r6, #0x0]
	cmp		r5, #0x0
	bne		_0807bd50
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	str		r5, [r4, #0x6c]
	str		r4, [r6, #0x0]
	b		_0807bd56
_0807bd50:
	add		r0, r5, #0x0
	bl		sub_0808e278
_0807bd56:
	mov		r0, #0x0
	str		r0, [r6, #0x20]
	str		r0, [r6, #0x1c]
	add		r0, r6, #0x0
	bl		sub_0807baa4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807bd2c

	thumb_func_start sub_0807bd68
sub_0807bd68:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807bd7a
	mov		r1, #0x3
	bl		sub_0808e28c
_0807bd7a:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0807bd88
	add		r0, r4, #0x0
	bl		sub_0808afac
_0807bd88:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BD8E, 0x2
	thumb_func_end sub_0807bd68

	thumb_func_start sub_0807bd90
sub_0807bd90:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	str		r0, [r3, #0x20]
	mov		r5, #0x0
	ldr		r0, _0807bdcc
	add		r6, r0, #0x0
	add		r2, r3, #0x0
	add		r2, #0x78
	add		r1, r3, #0x0
	add		r1, #0x28
	mov		r4, #0x9
_0807bdaa:
	str		r5, [r1, #0x0]
	str		r5, [r1, #0x28]
	ldrh	r0, [r2, #0x0]
	orr		r0, r6
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	add		r1, #0x4
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807bdaa
	mov		r0, #0x0
	str		r0, [r3, #0x18]
	str		r0, [r3, #0x14]
	add		r0, r3, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0807bdcc:	.4byte 0x0000FFFF
	thumb_func_end sub_0807bd90

	thumb_func_start sub_0807bdd0
sub_0807bdd0:
	push	{ r4, r5, lr }
	mov		r4, #0x0
	ldr		r5, _0807bdf8
_0807bdd6:
	ldr		r0, [r5, #0x0]
	add		r1, r4, #0x0
	bl		sub_0800ed80
	ldr		r2, [r0, #0xc]
	mov		r3, #0x18
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x1c]
	bl		sub_080bbc74
	add		r4, #0x1
	cmp		r4, #0x1
	ble		_0807bdd6
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807bdf8:	.4byte 0x080d46f4
	thumb_func_end sub_0807bdd0

	thumb_func_start sub_0807bdfc
sub_0807bdfc:
	push	{ r4, r5, r6, r7, lr }
	mov		r1, #0x0
	add		r7, r0, #0x0
	add		r7, #0x74
_0807be04:
	lsl		r0, r1, #0x2
	add		r6, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r4, r0, r7
	mov		r5, #0x9
_0807be10:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807be1a
	bl		sub_0807bd2c
_0807be1a:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807be10
	add		r1, r6, #0x0
	cmp		r1, #0x4
	ble		_0807be04
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BE2E, 0x2
	thumb_func_end sub_0807bdfc

	thumb_func_start sub_0807be30
sub_0807be30:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r7, r2, #0x0
	mov		r8, r3
	ldr		r0, [r6, #0x60]
	cmp		r4, r0
	blt		_0807be50
	ldr		r0, _0807beb4
	ldr		r1, _0807beb8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807be50:
	cmp		r7, #0x9
	ble		_0807be60
	ldr		r0, _0807beb4
	ldr		r1, _0807bebc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807be60:
	lsl		r1, r7, #0x2
	lsl		r0, r4, #0x2
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	add		r0, r6, #0x0
	add		r0, #0x74
	add		r5, r0, r1
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0807be82
	ldr		r0, _0807beb4
	ldr		r1, _0807bec0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807be82:
	mov		r0, #0x8c
	bl		sub_0808af94
	bl		sub_0807bd90
	str		r0, [r5, #0x0]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	add		r2, r7, #0x0
	mov		r3, r8
	bl		sub_0807b7b4
	ldr		r2, [r5, #0x0]
	lsl		r0, r4, #0x4
	sub		r0, r0, r4
	lsl		r0, r0, #0x4
	mov		r1, #0x0
	str		r0, [r2, #0x14]
	str		r1, [r2, #0x18]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BEB2, 0x2

_0807beb4:	.4byte 0x080d46d8 @ n_taguchi/ntTutorial.cpp
_0807beb8:	.4byte 0x00000189
_0807bebc:	.4byte 0x0000018B
_0807bec0:	.4byte 0x0000018D
	thumb_func_end sub_0807be30

	thumb_func_start sub_0807bec4
sub_0807bec4:
	push	{ lr }
	add		r3, r0, #0x0
	mov		r0, #0xae
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	mov		r0, #0x1
	str		r0, [r2, #0x0]
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	cmp		r1, #0x1
	bne		_0807beea
	mov		r0, #0xb2
	lsl		r0, r0, #0x1
	add		r1, r3, r0
	ldr		r0, [r3, #0x54]
	add		r0, #0xf0
	b		_0807bef4
_0807beea:
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	ldr		r0, [r3, #0x54]
	sub		r0, #0xf0
_0807bef4:
	str		r0, [r1, #0x0]
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r1, r3, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r3, #0x0
	bl		sub_0807bdd0
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BF0A, 0x2
	thumb_func_end sub_0807bec4

	thumb_func_start sub_0807bf0c
sub_0807bf0c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r4, #0x0
	add		r6, r5, #0x0
	add		r6, #0x74
_0807bf16:
	lsl		r2, r4, #0x2
	ldr		r1, [r5, #0x64]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r2, r2, r0
	add		r2, r6, r2
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0807bf2e
	bl		sub_0807bb9c
_0807bf2e:
	add		r4, #0x1
	cmp		r4, #0x9
	ble		_0807bf16
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BF3A, 0x2
	thumb_func_end sub_0807bf0c

	thumb_func_start sub_0807bf3c
sub_0807bf3c:
	push	{ r4, lr }
	ldr		r4, _0807bf64
	ldr		r1, _0807bf68
	add		r0, r4, r1
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0807b2b4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0807bf64:	.4byte 0x0200DB50
_0807bf68:	.4byte 0xFFFFFEB0
	thumb_func_end sub_0807bf3c

	thumb_func_start sub_0807bf6c
sub_0807bf6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	ldr		r1, [r1, #0x0]
	ldr		r0, [r6, #0x70]
	cmp		r1, r0
	bcc		_0807bf8a
	ldr		r0, _0807bfc8
	ldr		r1, _0807bfcc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807bf8a:
	mov		r5, r8
	add		r5, #0x4
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	mov		r7, #0x4
_0807bf96:
	ldr		r1, [r5, #0x0]
	ldr		r0, [r6, #0x70]
	cmp		r1, r0
	bcc		_0807bfac
	ldr		r0, _0807bfc8
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807bfac:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	str		r0, [r4, #0x0]
	ldmia	r5!, { r0 }
	str		r0, [r4, #0x4]
	add		r4, #0x8
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0807bf96
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807bfc8:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
_0807bfcc:	.4byte 0x00000159
	thumb_func_end sub_0807bf6c

	thumb_func_start sub_0807bfd0
sub_0807bfd0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x6c]
	cmp		r0, #0x0
	bne		_0807bfea
	ldr		r0, _0807c010
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807bfea:
	ldr		r0, [r4, #0x70]
	cmp		r5, r0
	bcc		_0807bffe
	ldr		r0, _0807c010
	mov		r1, #0xa9
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807bffe:
	lsl		r1, r5, #0x2
	ldr		r0, [r4, #0x6c]
	add		r0, r0, r1
	bl		sub_0800f33c
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7C00E, 0x2

_0807c010:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h

.incbin "base.gba", 0x7C014, 0x8
	thumb_func_end sub_0807bfd0

	thumb_func_start sub_0807c01c
sub_0807c01c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0xe
	bls		_0807c034
	ldr		r0, _0807c03c
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c034:
	str		r4, [r5, #0x5c]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807c03c:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
	thumb_func_end sub_0807c01c

	thumb_func_start sub_0807c040
sub_0807c040:
	push	{ lr }
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C050, 0x4
	thumb_func_end sub_0807c040

	thumb_func_start sub_0807c054
sub_0807c054:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x0
	blt		_0807c064
	ldr		r0, [r5, #0x60]
	cmp		r4, r0
	blt		_0807c072
_0807c064:
	ldr		r0, _0807c07c
	mov		r1, #0x83
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c072:
	str		r4, [r5, #0x68]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C07A, 0x2

_0807c07c:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
	thumb_func_end sub_0807c054

	thumb_func_start sub_0807c080
sub_0807c080:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	sub		r0, r4, #0x1
	cmp		r0, #0x4
	bls		_0807c098
	ldr		r0, _0807c0a0
	mov		r1, #0xfb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c098:
	str		r4, [r5, #0x60]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807c0a0:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
	thumb_func_end sub_0807c080

	thumb_func_start sub_0807c0a4
sub_0807c0a4:
	push	{ r4, lr }
	ldr		r4, _0807c0c4
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807c0ba
	ldr		r0, _0807c0c8
	mov		r1, #0xef
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c0ba:
	ldr		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7C0C2, 0x2

_0807c0c4:	.4byte 0x0200D630
_0807c0c8:	.4byte 0x080d46c0 @ n_taguchi/ntTutorial.h
	thumb_func_end sub_0807c0a4

	thumb_func_start sub_0807c0cc
sub_0807c0cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r8, r1
	bl		sub_080b74f4
	ldr		r0, _0807c180
	str		r0, [r5, #0xc]
	add		r4, r5, #0x0
	add		r4, #0xa8
	mov		r6, #0x1
	ldr		r0, _0807c184
	mov		r9, r0
	mov		r7, #0x1
	neg		r7, r7
_0807c0ee:
	add		r0, r4, #0x0
	bl		sub_0807c758
	add		r4, #0x1c
	sub		r6, #0x1
	cmp		r6, r7
	bne		_0807c0ee
	mov		r2, r9
	ldr		r4, [r2, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807c112
	ldr		r0, _0807c188
	mov		r1, #0x82
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c112:
	str		r5, [r4, #0x0]
	mov		r0, #0x0
	str		r0, [r5, #0x48]
	str		r0, [r5, #0x44]
	str		r0, [r5, #0x40]
	str		r0, [r5, #0x58]
	str		r0, [r5, #0x54]
	str		r0, [r5, #0x50]
	str		r0, [r5, #0x4c]
	str		r0, [r5, #0x5c]
	str		r0, [r5, #0x60]
	mov		r0, r8
	str		r0, [r5, #0x64]
	cmp		r0, #0xe
	bls		_0807c13c
	ldr		r0, _0807c188
	mov		r1, #0x8d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c13c:
	ldr		r0, _0807c18c
	ldr		r1, [r5, #0x64]
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	str		r0, [r5, #0x68]
	add		r3, r5, #0x0
	add		r3, #0x70
	add		r1, r5, #0x0
	add		r1, #0x80
	mov		r2, #0x1
	neg		r2, r2
	add		r0, r5, #0x0
	add		r0, #0xa4
_0807c15a:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_0807c15a
	add		r1, r3, #0x0
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0xc
_0807c16a:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_0807c16a
	add		r0, r5, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0807c180:	.4byte 0x080e2734
_0807c184:	.4byte 0x080d478c
_0807c188:	.4byte 0x080d4774 @ n_taguchi/ntFinale.cpp
_0807c18c:	.4byte 0x080d4820
	thumb_func_end sub_0807c0cc

	thumb_func_start sub_0807c190
sub_0807c190:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r2, #0x0
	ldr		r3, _0807c22c
	add		r0, #0x70
	str		r0, [sp, #0x0]
	add		r1, r0, #0x0
_0807c1a8:
	add		r0, r2, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0807c1b8
	str		r2, [r5, #0x6c]
_0807c1b8:
	add		r1, #0x4
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_0807c1a8
	mov		r7, #0x0
	ldr		r1, _0807c230
	mov		r10, r1
	add		r6, r5, #0x0
	add		r6, #0x80
	ldr		r0, _0807c234
	mov		r9, r0
	ldr		r1, _0807c238
	mov		r8, r1
_0807c1d2:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x0]
	add		r0, r1, r0
	ldr		r1, [r0, #0x0]
	mov		r0, r9
	ldr		r2, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0807c76c
	add		r4, r0, #0x0
	str		r4, [r6, #0x0]
	mov		r1, #0x1
	neg		r1, r1
	cmp		r4, r1
	beq		_0807c20c
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x2
	add		r3, r7, #0x0
	bl		sub_0807c7f0
	mov		r0, r10
	ldr		r2, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807c3c4
_0807c20c:
	mov		r1, #0x4
	add		r10, r1
	add		r6, #0x4
	add		r9, r1
	add		r8, r1
	add		r7, #0x1
	cmp		r7, #0x9
	ble		_0807c1d2
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807c22c:	.4byte 0x0200BD58
_0807c230:	.4byte 0x080d47e0
_0807c234:	.4byte 0x080d47b8
_0807c238:	.4byte 0x080d4790
	thumb_func_end sub_0807c190

	thumb_func_start sub_0807c23c
sub_0807c23c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r4, #0x0
	mov		r0, #0x70
	add		r0, r0, r7
	mov		r8, r0
	ldr		r5, _0807c2b0
	add		r6, r7, #0x0
	add		r6, #0x80
_0807c252:
	mov		r3, #0x0
	ldrsb	r3, [r5, r3]
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0807c25e
	add		r0, r3, #0x3
_0807c25e:
	asr		r2, r0, #0x2
	lsl		r0, r2, #0x2
	sub		r0, r3, r0
	lsl		r0, r0, #0x18
	asr		r1, r0, #0x18
	add		r0, r7, #0x0
	bl		sub_0807c76c
	lsl		r1, r4, #0x2
	str		r0, [r6, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r2, #0x80
	add		r2, r2, r7
	mov		r12, r2
	cmp		r0, #0x0
	bne		_0807c282
	str		r4, [r7, #0x6c]
_0807c282:
	cmp		r4, #0x3
	bgt		_0807c28e
	add		r1, r8
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	str		r0, [r1, #0x0]
_0807c28e:
	add		r5, #0x1
	add		r6, #0x4
	add		r4, #0x1
	cmp		r4, #0x7
	ble		_0807c252
	mov		r2, #0x0
	mov		r3, r12
	mov		r4, #0x1
	neg		r4, r4
	mov		r1, r12
_0807c2a2:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0807c2cc
	cmp		r2, #0x2
	bgt		_0807c2d4
	add		r1, r2, #0x1
	b		_0807c2b6

_0807c2b0:	.4byte 0x0200BD58

_0807c2b4:
	add		r1, #0x1
_0807c2b6:
	cmp		r1, #0x7
	bgt		_0807c2d4
	lsl		r0, r1, #0x2
	add		r2, r3, r0
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x3
	bne		_0807c2b4
	cmp		r1, #0x2
	ble		_0807c2d4
	str		r4, [r2, #0x0]
	b		_0807c2d4
_0807c2cc:
	add		r1, #0x4
	add		r2, #0x1
	cmp		r2, #0x7
	ble		_0807c2a2
_0807c2d4:
	mov		r5, #0x0
	mov		r0, #0x1
	neg		r0, r0
	mov		r8, r0
	mov		r6, r12
_0807c2de:
	ldr		r4, [r6, #0x0]
	cmp		r4, #0x15
	ble		_0807c2f0
	ldr		r0, _0807c324
	ldr		r1, _0807c328
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c2f0:
	cmp		r4, r8
	beq		_0807c310
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	add		r3, r5, #0x0
	bl		sub_0807c7f0
	mov		r2, #0x0
	cmp		r5, #0x2
	ble		_0807c308
	mov		r2, #0x4
_0807c308:
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_0807c3c4
_0807c310:
	add		r6, #0x4
	add		r5, #0x1
	cmp		r5, #0x7
	ble		_0807c2de
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C322, 0x2

_0807c324:	.4byte 0x080d4774 @ n_taguchi/ntFinale.cpp
_0807c328:	.4byte 0x00000119
	thumb_func_end sub_0807c23c

	thumb_func_start sub_0807c32c
sub_0807c32c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	mov		r1, sp
	ldr		r0, _0807c3b8
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	mov		r4, #0x0
	ldr		r6, _0807c3bc
	ldr		r0, _0807c3c0
	add		r5, r0, #0x0
_0807c34a:
	add		r1, r4, #0x0
	add		r1, #0x14
	ldr		r0, [r6, #0x0]
	bl		sub_08008a04
	ldrh	r1, [r0, #0x1c]
	and		r1, r5
	strh	r1, [r0, #0x1c]
	add		r4, #0x1
	cmp		r4, #0x7
	ble		_0807c34a
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	mov		r10, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r9, r2
	mov		r8, sp
	add		r7, #0x70
	mov		r5, #0x2
_0807c372:
	ldmia	r7!, { r1 }
	add		r1, #0x14
	ldr		r0, [r6, #0x0]
	bl		sub_08008a04
	add		r4, r0, #0x0
	add		r0, #0x18
	ldrh	r1, [r4, #0x1c]
	mov		r3, r10
	orr		r1, r3
	strh	r1, [r4, #0x1c]
	mov		r2, r8
	add		r2, #0x4
	mov		r8, r2
	sub		r2, #0x4
	ldmia	r2!, { r1 }
	mov		r2, #0x1
	bl		sub_0808cf20
	ldrh	r0, [r4, #0x1c]
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r4, #0x1c]
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807c372
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C3B6, 0x2

_0807c3b8:	.4byte 0x080d4808
_0807c3bc:	.4byte 0x080d4814
_0807c3c0:	.4byte 0xfffffeff
	thumb_func_end sub_0807c32c

	thumb_func_start sub_0807c3c4
sub_0807c3c4:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r7, r2, #0x0
	cmp		r4, #0x15
	bls		_0807c3de
	ldr		r0, _0807c488
	mov		r1, #0xa7
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c3de:
	cmp		r7, #0x4
	bls		_0807c3f0
	ldr		r0, _0807c488
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c3f0:
	ldr		r5, _0807c48c
	ldr		r0, [r6, #0x60]
	cmp		r0, #0x0
	bne		_0807c404
	ldr		r0, _0807c490
	mov		r1, #0x4f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c404:
	cmp		r4, #0x15
	bls		_0807c414
	ldr		r0, _0807c490
	mov		r1, #0x50
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c414:
	ldr		r1, [r6, #0x60]
	lsl		r0, r4, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r5, #0x0
	bl		sub_0800bcd0
	add		r5, r0, #0x0
	ldr		r0, [r6, #0x5c]
	cmp		r0, #0x0
	bne		_0807c438
	ldr		r0, _0807c490
	mov		r1, #0x46
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c438:
	cmp		r4, #0x15
	bls		_0807c448
	ldr		r0, _0807c490
	mov		r1, #0x47
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c448:
	cmp		r7, #0x4
	bls		_0807c458
	ldr		r0, _0807c490
	mov		r1, #0x48
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c458:
	lsl		r0, r4, #0x2
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	ldr		r4, [r6, #0x5c]
	add		r4, r4, r0
	lsl		r0, r7, #0x2
	add		r4, r4, r0
	mov		r0, #0x0
	ldrsh	r1, [r4, r0]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	add		r0, r5, #0x0
	bl		sub_0800be04
	mov		r2, #0x2
	ldrsh	r1, [r4, r2]
	add		r0, r5, #0x0
	bl		sub_0800bdbc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C486, 0x2

_0807c488:	.4byte 0x080d4774 @ n_taguchi/ntFinale.cpp
_0807c48c:	.4byte 0x0200A26C
_0807c490:	.4byte 0x080d475c @ n_taguchi/ntFinale.h
	thumb_func_end sub_0807c3c4

	thumb_func_start sub_0807c494
sub_0807c494:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	ldr		r0, [r7, #0x68]
	cmp		r0, #0x1
	beq		_0807c4dc
	cmp		r0, #0x1
	bgt		_0807c4ac
	cmp		r0, #0x0
	beq		_0807c4b4
	b		_0807c540
_0807c4ac:
	cmp		r0, #0x2
	beq		_0807c506
	cmp		r0, #0x3
	bne		_0807c540
_0807c4b4:
	mov		r2, #0x0
	mov		r0, #0x80
	add		r0, r0, r7
	mov		r8, r0
	mov		r5, #0x1
	neg		r5, r5
_0807c4c0:
	lsl		r0, r2, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	add		r4, r2, #0x1
	cmp		r1, r5
	beq		_0807c4d4
	add		r0, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0807c3c4
_0807c4d4:
	add		r2, r4, #0x0
	cmp		r2, #0x2
	ble		_0807c4c0
	b		_0807c540
_0807c4dc:
	mov		r0, #0x0
	mov		r1, #0x80
	add		r1, r1, r7
	mov		r8, r1
_0807c4e4:
	add		r5, r0, #0x1
	lsl		r0, r0, #0x3
	mov		r1, r8
	add		r6, r0, r1
	mov		r4, #0x1
_0807c4ee:
	ldmia	r6!, { r1 }
	add		r0, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_0807c3c4
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807c4ee
	add		r0, r5, #0x0
	cmp		r0, #0x2
	ble		_0807c4e4
	b		_0807c540
_0807c506:
	mov		r0, #0x80
	add		r0, r0, r7
	mov		r8, r0
	mov		r6, #0x1
	neg		r6, r6
	mov		r4, r8
	mov		r5, #0x3
_0807c514:
	ldr		r1, [r4, #0x0]
	cmp		r1, r6
	beq		_0807c522
	add		r0, r7, #0x0
	mov		r2, #0x1
	bl		sub_0807c3c4
_0807c522:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807c514
	mov		r4, #0x0
	mov		r5, r8
	add		r5, #0x10
_0807c530:
	ldmia	r5!, { r1 }
	add		r2, r4, #0x2
	add		r0, r7, #0x0
	bl		sub_0807c3c4
	add		r4, #0x1
	cmp		r4, #0x1
	ble		_0807c530
_0807c540:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C54A, 0x2
	thumb_func_end sub_0807c494

	thumb_func_start sub_0807c54c
sub_0807c54c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	ldr		r0, _0807c598
	mov		r9, r0
	ldr		r1, _0807c59c
	mov		r10, r1
	add		r4, r6, #0x0
	add		r4, #0xa8
	mov		r5, #0x1
_0807c566:
	add		r0, r4, #0x0
	bl		sub_0807c728
	add		r4, #0x1c
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807c566
	mov		r5, #0xf0
	lsl		r5, r5, #0x10
	add		r1, r6, #0x0
	add		r1, #0xc4
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	ldr		r4, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r3, r4, r0
	mov		r8, r1
	cmp		r3, #0x0
	ble		_0807c5a0
	add		r7, r6, #0x0
	add		r7, #0xc8
	cmp		r3, r5
	bge		_0807c5ce
	b		_0807c5aa

.incbin "base.gba", 0x7C596, 0x2

_0807c598:	.4byte 0x080d4818
_0807c59c:	.4byte 0x080d481c

_0807c5a0:
	sub		r0, r0, r4
	add		r7, r6, #0x0
	add		r7, #0xc8
	cmp		r0, r5
	bge		_0807c5ce
_0807c5aa:
	mov		r5, #0xa0
	lsl		r5, r5, #0x10
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xc8
	ldr		r4, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r3, r4, r0
	add		r7, r1, #0x0
	cmp		r3, #0x0
	ble		_0807c5c8
	cmp		r3, r5
	bge		_0807c5ce
	b		_0807c5d6
_0807c5c8:
	sub		r0, r0, r4
	cmp		r0, r5
	blt		_0807c5d6
_0807c5ce:
	ldr		r1, _0807c5f8
	mov		r0, #0x1
	strb	r0, [r1, #0x1a]
	strb	r0, [r1, #0x1b]
_0807c5d6:
	mov		r2, #0xf0
	lsl		r2, r2, #0x10
	add		r1, r6, #0x0
	add		r1, #0xa8
	ldr		r0, _0807c5fc
	ldr		r4, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r3, r4, r0
	mov		r12, r1
	cmp		r3, #0x0
	ble		_0807c600
	add		r5, r6, #0x0
	add		r5, #0xac
	cmp		r3, r2
	bge		_0807c632
	b		_0807c60a

.incbin "base.gba", 0x7C5F6, 0x2

_0807c5f8:	.4byte 0x02008AD4
_0807c5fc:	.4byte 0x0200CE28

_0807c600:
	sub		r0, r0, r4
	add		r5, r6, #0x0
	add		r5, #0xac
	cmp		r0, r2
	bge		_0807c632
_0807c60a:
	mov		r2, #0xa0
	lsl		r2, r2, #0x10
	ldr		r0, _0807c628
	add		r1, r6, #0x0
	add		r1, #0xac
	ldr		r4, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r3, r4, r0
	add		r5, r1, #0x0
	cmp		r3, #0x0
	ble		_0807c62c
	cmp		r3, r2
	bge		_0807c632
	b		_0807c638

.incbin "base.gba", 0x7C626, 0x2

_0807c628:	.4byte 0x0200CE3C

_0807c62c:
	sub		r0, r0, r4
	cmp		r0, r2
	blt		_0807c638
_0807c632:
	ldr		r1, _0807c674
	mov		r0, #0x1
	strb	r0, [r1, #0x19]
_0807c638:
	mov		r4, r9
	ldr		r1, [r4, #0x0]
	ldr		r0, _0807c678
	mov		r3, r8
	ldr		r2, [r3, #0x0]
	str		r2, [r0, #0x0]
	str		r2, [r1, #0x0]
	mov		r4, r10
	ldr		r3, [r4, #0x0]
	ldr		r0, _0807c67c
	ldr		r1, [r7, #0x0]
	str		r1, [r0, #0x0]
	str		r1, [r3, #0x0]
	ldr		r3, _0807c680
	mov		r4, r12
	ldr		r0, [r4, #0x0]
	sub		r2, r2, r0
	str		r2, [r3, #0x0]
	ldr		r2, _0807c684
	ldr		r0, [r5, #0x0]
	sub		r1, r1, r0
	str		r1, [r2, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C672, 0x2

_0807c674:	.4byte 0x02008AD4
_0807c678:	.4byte 0x0200CE2C
_0807c67c:	.4byte 0x0200CE40
_0807c680:	.4byte 0x0200CE28
_0807c684:	.4byte 0x0200CE3C
	thumb_func_end sub_0807c54c

	thumb_func_start sub_0807c688
sub_0807c688:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	cmp		r5, #0x0
	bne		_0807c6a2
	ldr		r0, _0807c6d0
	mov		r1, #0xe7
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c6a2:
	ldr		r0, [r6, #0x0]
	ldr		r1, [r4, #0x0]
	sub		r0, r0, r1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0x8]
	ldr		r0, [r6, #0x4]
	ldr		r1, [r4, #0x4]
	sub		r0, r0, r1
	add		r1, r5, #0x0
	bl		sub_080bbcac
	str		r0, [r4, #0xc]
	ldr		r0, [r6, #0x0]
	ldr		r1, [r6, #0x4]
	str		r0, [r4, #0x10]
	str		r1, [r4, #0x14]
	str		r5, [r4, #0x18]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C6CE, 0x2

_0807c6d0:	.4byte 0x080d4774 @ n_taguchi/ntFinale.cpp
	thumb_func_end sub_0807c688

	thumb_func_start sub_0807c6d4
sub_0807c6d4:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	add		r4, r3, #0x0
	cmp		r4, #0x0
	bne		_0807c6f0
	ldr		r0, _0807c724
	mov		r1, #0xe7
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c6f0:
	ldr		r0, [r7, #0x0]
	ldr		r1, [r6, #0x0]
	sub		r0, r0, r1
	add		r1, r4, #0x0
	bl		sub_080bbcac
	str		r0, [r5, #0x8]
	ldr		r0, [r7, #0x4]
	ldr		r1, [r6, #0x4]
	sub		r0, r0, r1
	add		r1, r4, #0x0
	bl		sub_080bbcac
	str		r0, [r5, #0xc]
	ldr		r0, [r6, #0x0]
	ldr		r1, [r6, #0x4]
	str		r0, [r5, #0x0]
	str		r1, [r5, #0x4]
	ldr		r0, [r7, #0x0]
	ldr		r1, [r7, #0x4]
	str		r0, [r5, #0x10]
	str		r1, [r5, #0x14]
	str		r4, [r5, #0x18]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807c724:	.4byte 0x080d4774 @ n_taguchi/ntFinale.cpp
	thumb_func_end sub_0807c6d4

	thumb_func_start sub_0807c728
sub_0807c728:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x0]
	ldr		r1, [r2, #0x8]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x4]
	ldr		r1, [r2, #0xc]
	add		r0, r0, r1
	str		r0, [r2, #0x4]
	ldr		r0, [r2, #0x18]
	sub		r0, #0x1
	str		r0, [r2, #0x18]
	cmp		r0, #0x0
	bgt		_0807c754
	ldr		r0, [r2, #0x10]
	ldr		r1, [r2, #0x14]
	str		r0, [r2, #0x0]
	str		r1, [r2, #0x4]
	mov		r0, #0x0
	str		r0, [r2, #0xc]
	str		r0, [r2, #0x8]
_0807c754:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807c728

	thumb_func_start sub_0807c758
sub_0807c758:
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	str		r1, [r0, #0xc]
	str		r1, [r0, #0x8]
	str		r1, [r0, #0x14]
	str		r1, [r0, #0x10]
	str		r1, [r0, #0x18]
	bx		lr

.incbin "base.gba", 0x7C76A, 0x2
	thumb_func_end sub_0807c758

	thumb_func_start sub_0807c76c
sub_0807c76c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	cmp		r4, #0x3
	bls		_0807c784
	ldr		r0, _0807c7e4
	ldr		r1, _0807c7e8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c784:
	ldr		r0, [r5, #0x64]
	cmp		r0, #0xe
	bls		_0807c798
	ldr		r0, _0807c7e4
	mov		r1, #0xc5
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c798:
	cmp		r6, #0x3
	bls		_0807c7a8
	ldr		r0, _0807c7e4
	ldr		r1, _0807c7ec
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c7a8:
	lsl		r0, r4, #0x2
	add		r1, r5, #0x0
	add		r1, #0x4c
	add		r4, r1, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807c7c4
	ldr		r0, _0807c7e4
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c7c4:
	ldr		r1, [r4, #0x0]
	ldr		r0, [r5, #0x64]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	add		r0, r0, r6
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x13
	bne		_0807c7de
	bl		sub_08074378
	add		r0, #0x13
_0807c7de:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0807c7e4:	.4byte 0x080d4774 @ n_taguchi/ntFinale.cpp
_0807c7e8:	.4byte 0x00000189
_0807c7ec:	.4byte 0x0000018B
	thumb_func_end sub_0807c76c

	thumb_func_start sub_0807c7f0
sub_0807c7f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r5, r2, #0x0
	mov		r8, r3
	add		r4, r6, #0x0
	add		r4, #0x40
	cmp		r4, #0x0
	bne		_0807c812
	ldr		r0, _0807c884
	mov		r1, #0x40
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c812:
	cmp		r5, #0x2
	bls		_0807c822
	ldr		r0, _0807c884
	mov		r1, #0x41
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c822:
	lsl		r0, r5, #0x2
	add		r0, r4, r0
	ldr		r4, [r0, #0x0]
	ldr		r5, _0807c888
	ldr		r0, [r6, #0x60]
	cmp		r0, #0x0
	bne		_0807c83c
	ldr		r0, _0807c884
	mov		r1, #0x4f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c83c:
	cmp		r7, #0x15
	bls		_0807c84c
	ldr		r0, _0807c884
	mov		r1, #0x50
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807c84c:
	ldr		r1, [r6, #0x60]
	lsl		r0, r7, #0x1
	add		r0, r0, r1
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r0, r5, #0x0
	bl		sub_0800bcd0
	add		r3, r0, #0x0
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	mov		r1, r8
	lsl		r0, r1, #0x3
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	ldr		r0, [r0, #0x4]
	str		r0, [r1, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C882, 0x2

_0807c884:	.4byte 0x080d475c @ n_taguchi/ntFinale.h
_0807c888:	.4byte 0x0200A26C
	thumb_func_end sub_0807c7f0

	thumb_func_start sub_0807c88c
sub_0807c88c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x68]
	cmp		r0, #0x1
	beq		_0807c8b2
	cmp		r0, #0x1
	bgt		_0807c8a0
	cmp		r0, #0x0
	beq		_0807c8aa
	b		_0807c8c8
_0807c8a0:
	cmp		r0, #0x2
	beq		_0807c8ba
	cmp		r0, #0x3
	beq		_0807c8c2
	b		_0807c8c8
_0807c8aa:
	add		r0, r4, #0x0
	bl		sub_0807c980
	b		_0807c8c8
_0807c8b2:
	add		r0, r4, #0x0
	bl		sub_0807c8f0
	b		_0807c8c8
_0807c8ba:
	add		r0, r4, #0x0
	bl		sub_0807c190
	b		_0807c8c8
_0807c8c2:
	add		r0, r4, #0x0
	bl		sub_0807c23c
_0807c8c8:
	add		r0, r4, #0x0
	bl		sub_0807c32c
	b		_0807c8dc
_0807c8d0:
	add		r0, r4, #0x0
	bl		sub_0807c54c
	add		r0, r4, #0x0
	bl		sub_080b7690
_0807c8dc:
	ldr		r0, _0807c8ec
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0807c8d0
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0807c8ec:	.4byte 0x00000835
	thumb_func_end sub_0807c88c

	thumb_func_start sub_0807c8f0
sub_0807c8f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r2, #0x0
	ldr		r3, _0807c97c
	mov		r0, #0x70
	add		r0, r0, r6
	mov		r9, r0
	mov		r1, r9
_0807c908:
	add		r0, r2, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0807c918
	str		r2, [r6, #0x6c]
_0807c918:
	add		r1, #0x4
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_0807c908
	mov		r7, #0x0
	mov		r0, #0x1
	mov		r10, r0
	mov		r0, #0x80
	add		r0, r0, r6
	mov		r8, r0
_0807c92c:
	asr		r4, r7, #0x1
	lsl		r0, r4, #0x2
	add		r0, r9
	ldr		r1, [r0, #0x0]
	add		r2, r7, #0x0
	mov		r0, r10
	and		r2, r0
	add		r0, r6, #0x0
	bl		sub_0807c76c
	add		r5, r0, #0x0
	mov		r0, r8
	str		r5, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x1
	add		r3, r7, #0x0
	bl		sub_0807c7f0
	mov		r2, #0x0
	cmp		r4, #0x2
	ble		_0807c95a
	mov		r2, #0x4
_0807c95a:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_0807c3c4
	mov		r0, #0x4
	add		r8, r0
	add		r7, #0x1
	cmp		r7, #0x7
	ble		_0807c92c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C97A, 0x2

_0807c97c:	.4byte 0x0200BD58
	thumb_func_end sub_0807c8f0

	thumb_func_start sub_0807c980
sub_0807c980:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r7, #0x0
	ldr		r0, _0807c9ec
	mov		r8, r0
	add		r6, r5, #0x0
	add		r6, #0x70
_0807c992:
	mov		r0, r8
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_0807c76c
	add		r4, r0, #0x0
	str		r4, [r6, #0x10]
	mov		r1, r8
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bne		_0807c9b0
	str		r7, [r5, #0x6c]
_0807c9b0:
	mov		r1, r8
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	str		r0, [r6, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	add		r3, r7, #0x0
	bl		sub_0807c7f0
	mov		r2, #0x0
	cmp		r7, #0x2
	ble		_0807c9cc
	mov		r2, #0x4
_0807c9cc:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807c3c4
	mov		r0, #0x1
	add		r8, r0
	add		r6, #0x4
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_0807c992
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C9EA, 0x2

_0807c9ec:	.4byte 0x0200BD58
	thumb_func_end sub_0807c980

	thumb_func_start sub_0807c9f0
sub_0807c9f0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x68]
	cmp		r0, #0x1
	beq		_0807ca16
	cmp		r0, #0x1
	bgt		_0807ca04
	cmp		r0, #0x0
	beq		_0807ca0e
	b		_0807ca2c
_0807ca04:
	cmp		r0, #0x2
	beq		_0807ca1e
	cmp		r0, #0x3
	beq		_0807ca26
	b		_0807ca2c
_0807ca0e:
	add		r0, r4, #0x0
	bl		sub_0807c980
	b		_0807ca2c
_0807ca16:
	add		r0, r4, #0x0
	bl		sub_0807c8f0
	b		_0807ca2c
_0807ca1e:
	add		r0, r4, #0x0
	bl		sub_0807c190
	b		_0807ca2c
_0807ca26:
	add		r0, r4, #0x0
	bl		sub_0807c23c
_0807ca2c:
	add		r0, r4, #0x0
	bl		sub_0807c32c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807c9f0

	thumb_func_start sub_0807ca38
sub_0807ca38:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0807ca64
	str		r0, [r5, #0xc]
	ldr		r1, _0807ca68
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0807ca5e
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0807ca5e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807ca64:	.4byte 0x080e2734
_0807ca68:	.4byte 0x0200D634
	thumb_func_end sub_0807ca38

	thumb_func_start sub_0807ca6c
sub_0807ca6c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, _0807ca98
	ldr		r1, _0807ca9c
	add		r0, r4, r1
	mov		r1, #0xe0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r1, r5, #0x0
	bl		sub_0807c0cc
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7CA96, 0x2

_0807ca98:	.4byte 0x0200DB50
_0807ca9c:	.4byte 0xFFFFFEB0
	thumb_func_end sub_0807ca6c

	thumb_func_start sub_0807caa0
sub_0807caa0:
	bx		lr

.incbin "base.gba", 0x7CAA2, 0x2
	thumb_func_end sub_0807caa0

	thumb_func_start sub_0807caa4
sub_0807caa4:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x8
	ble		_0807caba
	ldr		r0, _0807caec
	mov		r1, #0x2f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807caba:
	mov		r2, #0x0
	ldr		r5, _0807caf0
	mov		r3, #0xff
_0807cac0:
	add		r1, r2, r5
	ldrb	r0, [r1, #0x0]
	orr		r0, r3
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	cmp		r2, #0x7
	ble		_0807cac0
	mov		r2, #0x0
	cmp		r2, r4
	bge		_0807cae4
	ldr		r3, _0807caf0
_0807cad6:
	add		r0, r2, r3
	add		r1, r6, r2
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, r4
	blt		_0807cad6
_0807cae4:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7CAEA, 0x2

_0807caec:	.4byte 0x080d4774 @ n_taguchi/ntFinale.cpp
_0807caf0:	.4byte 0x0200BD58
	thumb_func_end sub_0807caa4

	thumb_func_start sub_0807caf4
sub_0807caf4:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	add		r7, r3, #0x0
	cmp		r4, #0x1
	bls		_0807cb10
	ldr		r0, _0807cb38
	mov		r1, #0x9f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cb10:
	lsl		r0, r4, #0x3
	sub		r0, r0, r4
	lsl		r0, r0, #0x2
	add		r1, r0, r5
	add		r1, #0xa8
	ldr		r2, [r1, #0x4]
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x0]
	str		r2, [sp, #0x4]
	add		r0, #0xa8
	add		r0, r5, r0
	mov		r1, sp
	add		r2, r6, #0x0
	add		r3, r7, #0x0
	bl		sub_0807c6d4
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807cb38:	.4byte 0x080d475c @ n_taguchi/ntFinale.h

.incbin "base.gba", 0x7CB3C, 0x8
	thumb_func_end sub_0807caf4

	thumb_func_start sub_0807cb44
sub_0807cb44:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	cmp		r4, #0x3
	bls		_0807cb5c
	ldr		r0, _0807cb6c
	mov		r1, #0x7d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cb5c:
	lsl		r1, r4, #0x2
	add		r0, r5, #0x0
	add		r0, #0x4c
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807cb6c:	.4byte 0x080d475c @ n_taguchi/ntFinale.h
	thumb_func_end sub_0807cb44

	thumb_func_start sub_0807cb70
sub_0807cb70:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	cmp		r4, #0x2
	bls		_0807cb88
	ldr		r0, _0807cb98
	mov		r1, #0x78
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cb88:
	lsl		r1, r4, #0x2
	add		r0, r5, #0x0
	add		r0, #0x40
	add		r0, r0, r1
	str		r6, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807cb98:	.4byte 0x080d475c @ n_taguchi/ntFinale.h
	thumb_func_end sub_0807cb70

	thumb_func_start sub_0807cb9c
sub_0807cb9c:
	push	{ r4, lr }
	ldr		r4, _0807cbbc
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807cbb2
	ldr		r0, _0807cbc0
	mov		r1, #0x6d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cbb2:
	ldr		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7CBBA, 0x2

_0807cbbc:	.4byte 0x0200D634
_0807cbc0:	.4byte 0x080d475c @ n_taguchi/ntFinale.h
	thumb_func_end sub_0807cb9c

	thumb_func_start sub_0807cbc4
sub_0807cbc4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x60]
	cmp		r0, #0x0
	bne		_0807cbdc
	ldr		r0, _0807cbfc
	mov		r1, #0x4f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cbdc:
	cmp		r5, #0x15
	bls		_0807cbec
	ldr		r0, _0807cbfc
	mov		r1, #0x50
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cbec:
	ldr		r0, [r4, #0x60]
	lsl		r1, r5, #0x1
	add		r1, r1, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0807cbfc:	.4byte 0x080d475c @ n_taguchi/ntFinale.h
	thumb_func_end sub_0807cbc4

	thumb_func_start sub_0807cc00
sub_0807cc00:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x0
	bne		_0807cc1a
	ldr		r0, _0807cc50
	mov		r1, #0x46
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cc1a:
	cmp		r4, #0x15
	bls		_0807cc2a
	ldr		r0, _0807cc50
	mov		r1, #0x47
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cc2a:
	cmp		r6, #0x4
	bls		_0807cc3a
	ldr		r0, _0807cc50
	mov		r1, #0x48
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cc3a:
	lsl		r1, r4, #0x2
	add		r1, r1, r4
	lsl		r1, r1, #0x2
	ldr		r0, [r5, #0x5c]
	add		r0, r0, r1
	lsl		r1, r6, #0x2
	add		r0, r0, r1
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7CC4E, 0x2

_0807cc50:	.4byte 0x080d475c @ n_taguchi/ntFinale.h
	thumb_func_end sub_0807cc00

	thumb_func_start sub_0807cc54
sub_0807cc54:
	push	{ r4, r5, lr }
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	add		r4, #0x40
	cmp		r4, #0x0
	bne		_0807cc6c
	ldr		r0, _0807cc88
	mov		r1, #0x40
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cc6c:
	cmp		r5, #0x2
	bls		_0807cc7c
	ldr		r0, _0807cc88
	mov		r1, #0x41
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cc7c:
	lsl		r0, r5, #0x2
	add		r0, r4, r0
	ldr		r0, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0807cc88:	.4byte 0x080d475c @ n_taguchi/ntFinale.h
	thumb_func_end sub_0807cc54

	thumb_func_start sub_0807cc8c
sub_0807cc8c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r8, r0
	bl		sub_080b74f4
	mov		r0, r8
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0807cdd8
	mov		r1, r8
	str		r0, [r1, #0x4c]
	ldr		r0, _0807cddc
	str		r0, [r1, #0xc]
	add		r1, #0xd8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r7, #0x0
	mov		r9, r1
	mov		r2, #0x9c
	add		r2, r8
	mov		r10, r2
	mov		r0, r8
	add		r0, #0x54
	str		r0, [sp, #0x0]
	add		r6, r0, #0x0
_0807ccc8:
	add		r0, r7, #0x0
	bl		sub_08073fe4
	add		r5, r0, #0x0
	cmp		r5, #0x5
	ble		_0807cce0
	ldr		r0, _0807cde0
	mov		r1, #0x4a
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807cce0:
	cmp		r5, #0x0
	bne		_0807ccf2
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r10
	str		r7, [r0, #0x0]
	add		r1, #0x1
	str		r1, [r2, #0x0]
_0807ccf2:
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, #0x0
	str		r0, [r4, #0x6c]
	str		r4, [r6, #0x0]
	lsl		r0, r5, #0x2
	ldr		r1, _0807cde4
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r0, [r6, #0x0]
	add		r1, r7, #0x0
	mov		r2, #0x2
	bl		sub_0808e3c0
	ldr		r0, [r6, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r6, #0x0]
	add		r0, #0x6a
	strb	r5, [r0, #0x0]
	ldr		r0, [r6, #0x0]
	add		r0, #0x56
	mov		r2, #0x60
	strh	r2, [r0, #0x0]
	ldmia	r6!, { r0 }
	add		r0, #0x5c
	mov		r1, #0x1
	strh	r1, [r0, #0x0]
	add		r7, #0x1
	cmp		r7, #0xe
	ble		_0807ccc8
	mov		r2, #0xdc
	add		r2, r8
	mov		r10, r2
	mov		r0, #0x0
	mov		r9, r0
	ldr		r5, [sp, #0x0]
	add		r5, #0x3c
	ldr		r6, _0807cde8
	ldr		r1, _0807cdec
	str		r1, [sp, #0x4]
	ldr		r2, _0807cdf0
	str		r2, [sp, #0x8]
	mov		r7, #0x2
_0807cd62:
	mov		r0, #0x90
	bl		sub_0808af94
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r0, r9
	str		r0, [r4, #0x6c]
	str		r4, [r5, #0x0]
	ldr		r2, [sp, #0x8]
	ldmia	r2!, { r1 }
	str		r2, [sp, #0x8]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	ldr		r0, [r5, #0x0]
	ldr		r2, [sp, #0x4]
	ldmia	r2!, { r1 }
	str		r2, [sp, #0x4]
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r0, [r5, #0x0]
	add		r0, #0x70
	bl		sub_0808b3d4
	ldr		r0, [r5, #0x0]
	ldr		r1, [r6, #0x0]
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	ldr		r1, [r6, #0x4]
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	ldmia	r5!, { r0 }
	add		r0, #0x5c
	mov		r1, r9
	strh	r1, [r0, #0x0]
	add		r6, #0x8
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0807cd62
	mov		r0, #0x0
	mov		r2, r10
	str		r0, [r2, #0x0]
	mov		r0, r8
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7CDD6, 0x2

_0807cdd8:	.4byte 0x080e275c
_0807cddc:	.4byte 0x080e2774
_0807cde0:	.4byte 0x080d485c @ n_taguchi/ntMedal.cpp
_0807cde4:	.4byte 0x080d4844
_0807cde8:	.4byte 0x080d4874
_0807cdec:	.4byte 0x080d4898
_0807cdf0:	.4byte 0x080d488c
	thumb_func_end sub_0807cc8c

	thumb_func_start sub_0807cdf4
sub_0807cdf4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	ldr		r0, _0807ce10
	mov		r10, r0
	mov		r1, r9
	add		r1, #0x9c
	str		r1, [sp, #0x0]
	b		_0807ceec

.incbin "base.gba", 0x7CE0E, 0x2

_0807ce10:	.4byte 0x0200BDD4

_0807ce14:
	mov		r3, r9
	add		r3, #0xd8
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_0807cec4
	mov		r7, r9
	add		r7, #0x98
	ldr		r2, [r7, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807ce44
	add		r0, r2, #0x0
	add		r0, #0x54
	mov		r2, #0x20
	neg		r2, r2
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0x56
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
_0807ce44:
	mov		r2, #0xdc
	add		r2, r9
	mov		r8, r2
	ldr		r0, [r2, #0x0]
	sub		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x0
	bgt		_0807cec4
	ldr		r1, [r3, #0x0]
	mov		r0, r10
	bl		sub_080b63dc
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x0]
	add		r0, r1, r0
	ldr		r6, [r0, #0x0]
	mov		r0, r10
	mov		r1, #0x4
	bl		sub_080b63dc
	add		r5, r0, #0x0
	ldr		r0, [r7, #0x0]
	mov		r1, #0xf
	mov		r2, #0x0
	bl		sub_0808e3c0
	ldr		r4, [r7, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x5
	bl		sub_080bbd44
	mov		r2, #0x2b
	add		r1, r0, #0x0
	mul		r1, r2
	lsl		r5, r5, #0x3
	ldr		r2, _0807cf08
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x23
	add		r1, r1, r0
	add		r4, #0x54
	strh	r1, [r4, #0x0]
	ldr		r4, [r7, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x5
	bl		sub_080bbcac
	mov		r2, #0x2b
	add		r1, r0, #0x0
	mul		r1, r2
	ldr		r0, _0807cf0c
	add		r5, r5, r0
	ldr		r0, [r5, #0x0]
	add		r0, #0x2b
	add		r1, r1, r0
	add		r4, #0x56
	strh	r1, [r4, #0x0]
	mov		r0, r10
	mov		r1, #0x1e
	bl		sub_080b63dc
	add		r0, #0x1e
	mov		r1, r8
	str		r0, [r1, #0x0]
_0807cec4:
	mov		r6, r9
	add		r6, #0x40
	mov		r5, r9
	add		r5, #0x54
	mov		r4, #0x11
_0807cece:
	ldmia	r5!, { r0 }
	add		r0, #0x70
	bl		sub_0808b3d4
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807cece
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, r9
	bl		sub_080b7690
_0807ceec:
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0807ce14
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807cf08:	.4byte 0x080d48a4
_0807cf0c:	.4byte 0x080d48a8
	thumb_func_end sub_0807cdf4

	thumb_func_start sub_0807cf10
sub_0807cf10:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r5, #0x54
	mov		r4, #0x11
_0807cf18:
	ldmia	r5!, { r0 }
	bl		sub_0808e4a0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807cf18
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7CF2A, 0x62
	thumb_func_end sub_0807cf10

	thumb_func_start sub_0807cf8c
sub_0807cf8c:
	push	{ r4, lr }
	ldr		r4, _0807cfb4
	ldr		r1, _0807cfb8
	add		r0, r4, r1
	mov		r1, #0xe0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0807cc8c
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7CFB2, 0x2

_0807cfb4:	.4byte 0x0200DB50
_0807cfb8:	.4byte 0xFFFFFEB0
	thumb_func_end sub_0807cf8c

	thumb_func_start sub_0807cfbc
sub_0807cfbc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	lsl		r3, r3, #0x10
	lsr		r4, r3, #0x10
	ldr		r0, _0807cfdc
	cmp		r1, r0
	beq		_0807cff0
	cmp		r1, r0
	bhi		_0807cfe0
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_0807cfd8
	b		_0807d588
_0807cfd8:
	b		_0807d584

.incbin "base.gba", 0x7CFDA, 0x2

_0807cfdc:	.4byte 0x00000F82

_0807cfe0:
	ldr		r0, _0807cfec
	cmp		r1, r0
	bne		_0807cfe8
	b		_0807d414
_0807cfe8:
	b		_0807d584

.incbin "base.gba", 0x7CFEA, 0x2

_0807cfec:	.4byte 0x00000F83

_0807cff0:
	bl		sub_0806fd84
	add		r2, r0, #0x0
	lsl		r1, r4, #0x10
	mov		r3, #0xe6
	lsl		r3, r3, #0x18
	add		r0, r1, r3
	asr		r0, r0, #0x10
	add		r3, r1, #0x0
	cmp		r0, #0x26
	bls		_0807d008
	b		_0807d576
_0807d008:
	lsl		r0, r0, #0x2
	ldr		r1, _0807d014
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x7D012, 0x2

_0807d014:	.4byte 0x0807d018
_0807d018:	.4byte 0x0807d0ec

.incbin "base.gba", 0x7D01C, 0x98

_0807d0b4:
.incbin "base.gba", 0x7D0B4, 0x4
.incbin "base.gba", 0x7D0B8, 0x4
.incbin "base.gba", 0x7D0BC, 0x4
.incbin "base.gba", 0x7D0C0, 0x4
_0807d0c4:
.incbin "base.gba", 0x7D0C4, 0x4

.incbin "base.gba", 0x7D0C8, 0x4
_0807d0cc:
.incbin "base.gba", 0x7D0CC, 0x4
.incbin "base.gba", 0x7D0D0, 0x4
.incbin "base.gba", 0x7D0D4, 0x4

.incbin "base.gba", 0x7D0D8, 0x4
_0807d0dc:
.incbin "base.gba", 0x7D0DC, 0x4
.incbin "base.gba", 0x7D0E0, 0x4
.incbin "base.gba", 0x7D0E4, 0x4

.incbin "base.gba", 0x7D0E8, 0x4
	thumb_func_end sub_0807cfbc


.incbin "base.gba", 0x7D0EC, 0x120

_0807d20c:

.incbin "base.gba", 0x7D20C, 0x14
_0807d220:

.incbin "base.gba", 0x7D220, 0x14
_0807d234:

.incbin "base.gba", 0x7D234, 0xC
_0807d240:

.incbin "base.gba", 0x7D240, 0xC
_0807d24c:

.incbin "base.gba", 0x7D24C, 0x1C
_0807d268:

.incbin "base.gba", 0x7D268, 0x12C

_0807d394:

.incbin "base.gba", 0x7D394, 0xC
_0807d3a0:

.incbin "base.gba", 0x7D3A0, 0xC
_0807d3ac:

.incbin "base.gba", 0x7D3AC, 0x28
_0807d3d4:

.incbin "base.gba", 0x7D3D4, 0xC
_0807d3e0:

.incbin "base.gba", 0x7D3E0, 0xC
_0807d3ec:

.incbin "base.gba", 0x7D3EC, 0x28
_0807d414:

.incbin "base.gba", 0x7D414, 0x10
_0807d424:

.incbin "base.gba", 0x7D424, 0xC
_0807d430:	.4byte 0x0807d434
_0807d434:	.4byte 0x0807d458

.incbin "base.gba", 0x7D438, 0x13E

_0807d576:

.incbin "base.gba", 0x7D576, 0xE
_0807d584:

.incbin "base.gba", 0x7D584, 0x4
_0807d588:

.incbin "base.gba", 0x7D588, 0x4
_0807d58c:

.incbin "base.gba", 0x7D58C, 0x1C
_0807d5a8:	.4byte 0x0200BD60
_0807d5ac:	.4byte 0x080d4988 @ script_y_tamura_loopham

	thumb_func_start sub_0807d5b0
sub_0807d5b0:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	bl		sub_080b7690
	ldr		r6, _0807d678
	ldr		r0, _0807d67c
	add		r0, r0, r6
	mov		r8, r0
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x14
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r0, _0807d680
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	ldr		r4, _0807d684
	add		r3, r4, #0x0
	bl		sub_08000a2c
	ldr		r0, _0807d688
	ldr		r1, _0807d68c
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r3, r4, #0x0
	bl		sub_08000a2c
	ldr		r0, _0807d690
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	mov		r2, #0xa0
	lsl		r2, r2, #0x3
	add		r3, r4, #0x0
	bl		sub_08000a2c
	ldr		r1, _0807d694
	mov		r0, #0x88
	strh	r0, [r1, #0x0]
	sub		r1, #0x8
	mov		r2, #0x88
	lsl		r2, r2, #0x5
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x14
	mov		r2, #0x0
	bl		sub_0807d764
	ldr		r0, _0807d698
	bl		sub_08002268
	add		r0, r5, #0x0
	mov		r1, #0x14
	mov		r2, #0x0
	bl		sub_0807d764
	mov		r0, r8
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	mov		r2, #0x3f
	mov		r3, #0x14
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r5, #0x0
	mov		r1, #0x14
	mov		r2, #0x0
	bl		sub_0807d764
	add		r0, r5, #0x0
	bl		sub_080b7690
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7D676, 0x2

_0807d678:	.4byte 0x0200DB60
_0807d67c:	.4byte 0xFFFFFEA0
_0807d680:	.4byte 0x080d49dc
_0807d684:	.4byte 0x84000003
_0807d688:	.4byte 0x080d4bdc
_0807d68c:	.4byte 0x06008000
_0807d690:	.4byte 0x080d8bdc
_0807d694:	.4byte 0x04000008
_0807d698:	.4byte 0x00000837
	thumb_func_end sub_0807d5b0

	thumb_func_start sub_0807d69c
sub_0807d69c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	mov		r0, #0x0
	str		r0, [r5, #0x54]
	ldr		r0, _0807d740
	str		r0, [r5, #0x4c]
	ldr		r0, _0807d744
	str		r0, [r5, #0xc]
	add		r4, r5, #0x0
	add		r4, #0x5c
	add		r0, r4, #0x0
	bl		sub_08089124
	mov		r0, #0x2
	mov		r1, #0x1
	bl		sub_08009650
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x78
	mov		r2, #0x50
	add		r0, r5, #0x0
	add		r0, #0xb0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	mov		r1, #0x1
	add		r2, #0xcc
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08009650
	mov		r0, #0x1
	bl		sub_08009638
	mov		r0, #0x1
	bl		sub_08009618
	ldr		r4, _0807d748
	ldr		r1, _0807d74c
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x14
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r0, #0x2
	mov		r1, #0x1
	bl		sub_08009650
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7D73E, 0x2

_0807d740:	.4byte 0x080e279c
_0807d744:	.4byte 0x080e27b4
_0807d748:	.4byte 0x0200DB60
_0807d74c:	.4byte 0xFFFFFEA0
	thumb_func_end sub_0807d69c

	thumb_func_start sub_0807d750
sub_0807d750:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b7690
	mov		r0, #0x1
	str		r0, [r4, #0x54]
_0807d75c:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0807d75c
	thumb_func_end sub_0807d750

	thumb_func_start sub_0807d764
sub_0807d764:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	str		r1, [r4, #0x58]
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0807d776:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x58]
	sub		r0, #0x1
	str		r0, [r4, #0x58]
	cmp		r5, #0x0
	beq		_0807d7ae
	mov		r0, #0x0
	mov		r1, #0x8
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_0807d7aa
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_0807d7aa
	mov		r0, #0x0
	mov		r1, #0x2
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_0807d7ae
_0807d7aa:
	mov		r0, #0x1
	b		_0807d7c4
_0807d7ae:
	ldr		r0, [r4, #0x58]
	cmp		r0, #0x0
	ble		_0807d7c2
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	b		_0807d776
_0807d7c2:
	mov		r0, #0x0
_0807d7c4:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7D7CA, 0x92
	thumb_func_end sub_0807d764

	thumb_func_start sub_0807d85c
sub_0807d85c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0807d8ac
	str		r0, [r6, #0x4c]
	ldr		r0, _0807d8b0
	str		r0, [r6, #0xc]
	ldr		r0, _0807d8b4
	bl		sub_08002268
	add		r0, r6, #0x0
	add		r0, #0x5c
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r0, _0807d8b8
	str		r0, [r6, #0x4c]
	ldr		r0, _0807d8bc
	str		r0, [r6, #0xc]
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0807d8a4
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0807d8a4:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7D8AA, 0x2

_0807d8ac:	.4byte 0x080e279c
_0807d8b0:	.4byte 0x080e27b4
_0807d8b4:	.4byte 0x00000835
_0807d8b8:	.4byte 0x080e034c
_0807d8bc:	.4byte 0x080e2854
	thumb_func_end sub_0807d85c

	thumb_func_start sub_0807d8c0
sub_0807d8c0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r1, #0x14
	mov		r2, #0x0
	bl		sub_0807d764
	add		r0, r4, #0x0
	mov		r1, #0x3c
	mov		r2, #0x1
	bl		sub_0807d764
	ldr		r5, _0807d910
	ldr		r1, _0807d914
	add		r0, r5, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	mov		r2, #0x3f
	mov		r3, #0x14
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	mov		r1, #0x14
	mov		r2, #0x0
	bl		sub_0807d764
	add		r0, r4, #0x0
	bl		sub_080b7690
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807d910:	.4byte 0x0200DB60
_0807d914:	.4byte 0xFFFFFEA0
	thumb_func_end sub_0807d8c0

	thumb_func_start sub_0807d918
sub_0807d918:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r7, #0x0
	add		r5, #0x40
	ldr		r4, _0807d95c
	str		r4, [r7, #0x4c]
	ldr		r0, _0807d960
	str		r0, [r7, #0xc]
	ldr		r0, _0807d964
	bl		sub_08002268
	str		r4, [r7, #0x4c]
	ldr		r0, _0807d968
	str		r0, [r7, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_0807d954
	add		r0, r7, #0x0
	bl		sub_080b74c8
_0807d954:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7D95A, 0x2

_0807d95c:	.4byte 0x080e034c
_0807d960:	.4byte 0x080e27dc
_0807d964:	.4byte 0x00000835
_0807d968:	.4byte 0x080e2854
	thumb_func_end sub_0807d918

	thumb_func_start sub_0807d96c
sub_0807d96c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r1, _0807d9c8
	mov		r0, #0x0
	str		r0, [r4, #0x54]
	str		r1, [r4, #0x4c]
	ldr		r0, _0807d9cc
	str		r0, [r4, #0xc]
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08009650
	mov		r0, #0x0
	bl		sub_08009638
	mov		r0, #0x0
	bl		sub_08009618
	ldr		r5, _0807d9d0
	ldr		r1, _0807d9d4
	add		r0, r5, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x3
	mov		r2, #0x3f
	mov		r3, #0x14
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0807d9c8:	.4byte 0x080e034c
_0807d9cc:	.4byte 0x080e27dc
_0807d9d0:	.4byte 0x0200DB60
_0807d9d4:	.4byte 0xFFFFFEA0
	thumb_func_end sub_0807d96c

	thumb_func_start sub_0807d9d8
sub_0807d9d8:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r7, #0x0
	add		r5, #0x40
	ldr		r4, _0807da1c
	str		r4, [r7, #0x4c]
	ldr		r0, _0807da20
	str		r0, [r7, #0xc]
	ldr		r0, _0807da24
	bl		sub_08002268
	str		r4, [r7, #0x4c]
	ldr		r0, _0807da28
	str		r0, [r7, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_0807da14
	add		r0, r7, #0x0
	bl		sub_080b74c8
_0807da14:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7DA1A, 0x2

_0807da1c:	.4byte 0x080e034c
_0807da20:	.4byte 0x080e2804
_0807da24:	.4byte 0x00000835
_0807da28:	.4byte 0x080e2854
	thumb_func_end sub_0807d9d8

	thumb_func_start sub_0807da2c
sub_0807da2c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r1, _0807da74
	mov		r0, #0x0
	str		r0, [r4, #0x54]
	str		r1, [r4, #0x4c]
	ldr		r0, _0807da78
	str		r0, [r4, #0xc]
	ldr		r5, _0807da7c
	ldr		r1, _0807da80
	add		r0, r5, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x4
	mov		r2, #0x3f
	mov		r3, #0x1
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0807da74:	.4byte 0x080e034c
_0807da78:	.4byte 0x080e2804
_0807da7c:	.4byte 0x0200DB60
_0807da80:	.4byte 0xFFFFFEA0
	thumb_func_end sub_0807da2c

	thumb_func_start sub_0807da84
sub_0807da84:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r0, #0x40
	ldr		r1, _0807dab8
	str		r1, [r5, #0x4c]
	ldr		r1, _0807dabc
	str		r1, [r5, #0xc]
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0807dab0
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0807dab0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7DAB6, 0x2

_0807dab8:	.4byte 0x080e034c
_0807dabc:	.4byte 0x080e282c
	thumb_func_end sub_0807da84

	thumb_func_start sub_0807dac0
sub_0807dac0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x54]
	cmp		r0, #0x0
	bne		_0807dad6
	ldr		r0, _0807dadc
	mov		r1, #0x3e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807dad6:
	mov		r5, #0x0
	b		_0807dae6

.incbin "base.gba", 0x7DADA, 0x2

_0807dadc:	.4byte 0x080d49c0 @ y_tamura/tamStarting.cpp

_0807dae0:
	add		r0, r4, #0x0
	bl		sub_080b7690
_0807dae6:
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x54]
	cmp		r0, #0x0
	beq		_0807dae0
	add		r0, r1, #0x0
	bl		sub_080b75b0
	str		r5, [r4, #0x54]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807dac0

	thumb_func_start sub_0807dafc
sub_0807dafc:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r6, _0807db74
	ldr		r0, _0807db78
	add		r5, r6, r0
	add		r0, r5, #0x0
	mov		r1, #0x5c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0807da2c
	add		r1, r0, #0x0
	str		r1, [r4, #0x54]
	add		r0, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	bl		sub_0807dac0
	add		r0, r5, #0x0
	mov		r1, #0x5c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0807d96c
	add		r1, r0, #0x0
	str		r1, [r4, #0x54]
	add		r0, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	bl		sub_0807dac0
	add		r0, r5, #0x0
	mov		r1, #0xa2
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0807d69c
	add		r1, r0, #0x0
	str		r1, [r4, #0x54]
	add		r0, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r4, #0x0
	bl		sub_0807dac0
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807db74:	.4byte 0x0200DB60
_0807db78:	.4byte 0xFFFFFEA0
	thumb_func_end sub_0807dafc

	thumb_func_start sub_0807db7c
sub_0807db7c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0807db9c
	str		r0, [r4, #0x4c]
	ldr		r0, _0807dba0
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0807db9c:	.4byte 0x080e034c
_0807dba0:	.4byte 0x080e282c
	thumb_func_end sub_0807db7c

	thumb_func_start sub_0807dba4
sub_0807dba4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0x8
	bl		sub_0808af94
	bl		sub_0808afac
_0807dbb2:
	add		r0, r4, #0x0
	bl		sub_080b7690
	b		_0807dbb2

.incbin "base.gba", 0x7DBBA, 0x122
	thumb_func_end sub_0807dba4

	thumb_func_start sub_0807dcdc
sub_0807dcdc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	add		r6, r0, #0x0
	mov		r0, #0x0
	mov		r10, r0
_0807dcee:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x60]
	add		r1, r6, #0x0
	add		r1, #0x64
	str		r1, [sp, #0x8]
	cmp		r0, #0x0
	beq		_0807dd1c
_0807dd00:
	mov		r6, #0x0
	ldr		r4, [sp, #0x8]
	mov		r5, #0x4
_0807dd06:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807dd12
	bl		sub_080b75b0
	str		r6, [r4, #0x0]
_0807dd12:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807dd06
	b		_0807defc
_0807dd1c:
	mov		r2, #0x0
	ldr		r0, [r6, #0x58]
	cmp		r0, #0x1
	beq		_0807dd56
	cmp		r0, #0x1
	bgt		_0807dd2e
	cmp		r0, #0x0
	beq		_0807dd32
	b		_0807dd86
_0807dd2e:
	cmp		r0, #0x2
	bne		_0807dd86
_0807dd32:
	ldr		r1, [r6, #0x64]
	add		r3, r6, #0x0
	add		r3, #0x64
	str		r3, [sp, #0x8]
	cmp		r1, #0x0
	beq		_0807dd86
	mov		r4, #0xac
	lsl		r4, r4, #0x1
	add		r0, r1, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807dd86
	add		r0, r1, #0x0
	bl		sub_080b75b0
	mov		r7, #0x0
	str		r7, [r6, #0x64]
	b		_0807dd7c
_0807dd56:
	ldr		r0, [r6, #0x74]
	cmp		r0, #0x0
	beq		_0807dd86
	mov		r1, #0xac
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807dd86
	mov		r7, #0x0
	ldr		r4, [sp, #0x8]
	mov		r5, #0x4
_0807dd6e:
	ldr		r0, [r4, #0x0]
	bl		sub_080b75b0
	stmia	r4!, {  r7 }
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807dd6e
_0807dd7c:
	mov		r0, #0xe0
	lsl		r0, r0, #0x4
	bl		sub_08002268
	mov		r2, #0x1
_0807dd86:
	cmp		r2, #0x1
	bne		_0807ddb0
	b		_0807dda4
_0807dd8c:
	ldr		r0, [r6, #0x60]
	cmp		r0, #0x0
	bne		_0807dd00
	add		r0, r6, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	bl		sub_080b7690
_0807dda4:
	mov		r0, #0xe0
	lsl		r0, r0, #0x4
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_0807dd8c
_0807ddb0:
	ldr		r5, [r6, #0x64]
	add		r2, r6, #0x0
	add		r2, #0x40
	str		r2, [sp, #0x4]
	cmp		r5, #0x0
	beq		_0807ddbe
	b		_0807dee4
_0807ddbe:
	ldr		r3, _0807dde4
	mov		r4, r10
	lsl		r0, r4, #0x3
	sub		r0, r0, r4
	lsl		r7, r0, #0x4
	ldr		r1, _0807dde8
	add		r0, r7, r1
	ldr		r4, [r0, #0x0]
	str		r4, [r6, #0x58]
	cmp		r4, #0x1
	beq		_0807de74
	cmp		r4, #0x1
	bgt		_0807ddec
	cmp		r4, #0x0
	beq		_0807de38
	mov		r2, #0x1
	add		r2, r10
	mov		r8, r2
	b		_0807dec0

_0807dde4:	.4byte 0x080d9234
_0807dde8:	.4byte 0x080d9238

_0807ddec:
	mov		r3, #0x1
	add		r3, r10
	mov		r8, r3
	cmp		r4, #0x2
	bne		_0807dec0
	ldr		r0, _0807de30
	mov		r1, #0xb0
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, [r6, #0x54]
	lsl		r3, r1, #0x3
	sub		r3, r3, r1
	lsl		r3, r3, #0x4
	ldr		r4, _0807de34
	add		r3, r3, r4
	str		r5, [sp, #0x0]
	mov		r1, r10
	add		r2, r6, #0x0
	bl		sub_0807df0c
	add		r1, r0, #0x0
	str		r1, [r6, #0x64]
	ldr		r7, _0807de30
	mov		r2, #0xa8
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r2, #0x0
	bl		sub_080b781c
	b		_0807dec0

.incbin "base.gba", 0x7DE2E, 0x2

_0807de30:	.4byte 0x0200DA00
_0807de34:	.4byte 0x080d90e4

_0807de38:
	ldr		r0, _0807de70
	mov		r1, #0xb0
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	str		r3, [sp, #0xC]
	bl		sub_080b73f8
	ldr		r3, [sp, #0xC]
	add		r3, r7, r3
	str		r4, [sp, #0x0]
	mov		r1, r10
	add		r2, r6, #0x0
	bl		sub_0807df0c
	add		r1, r0, #0x0
	str		r1, [r6, #0x64]
	ldr		r3, _0807de70
	mov		r4, #0xa8
	lsl		r4, r4, #0x1
	add		r0, r3, r4
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r7, #0x1
	add		r7, r10
	mov		r8, r7
	b		_0807dec0

_0807de70:	.4byte 0x0200DA00

_0807de74:
	mov		r5, #0x0
	mov		r0, #0x1
	add		r0, r10
	mov		r8, r0
	ldr		r1, _0807def0
	mov		r9, r1
	str		r7, [sp, #0x10]
_0807de82:
	lsl		r4, r5, #0x2
	ldr		r2, [sp, #0x8]
	add		r4, r2, r4
	str		r4, [sp, #0x14]
	mov		r0, r9
	mov		r1, #0xb0
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r5, #0x1
	str		r5, [sp, #0x0]
	mov		r1, r10
	add		r2, r6, #0x0
	ldr		r4, [sp, #0x10]
	ldr		r7, _0807def4
	add		r3, r4, r7
	bl		sub_0807df0c
	add		r1, r0, #0x0
	ldr		r0, [sp, #0x14]
	str		r1, [r0, #0x0]
	mov		r0, #0xa8
	lsl		r0, r0, #0x1
	add		r0, r9
	mov		r2, #0x0
	bl		sub_080b781c
	cmp		r5, #0x4
	ble		_0807de82
_0807dec0:
	mov		r10, r8
	mov		r1, r10
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0x4
	ldr		r2, _0807def8
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_0807dee4
	mov		r3, #0x0
	mov		r10, r3
	ldr		r0, [r6, #0x54]
	add		r0, #0x1
	str		r0, [r6, #0x54]
	cmp		r0, #0x2
	ble		_0807dee4
	str		r3, [r6, #0x54]
_0807dee4:
	ldr		r0, [sp, #0x4]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	b		_0807dcee

_0807def0:	.4byte 0x0200DA00
_0807def4:	.4byte 0x080d9234
_0807def8:	.4byte 0x080d9238

_0807defc:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807dcdc

	thumb_func_start sub_0807df0c
sub_0807df0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	mov		r9, r3
	ldr		r5, [sp, #0x0+0x20]
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	mov		r0, #0x54
	add		r0, r0, r7
	mov		r10, r0
	bl		sub_08089124
	ldr		r0, _0807dfd0
	str		r0, [r7, #0x4c]
	ldr		r0, _0807dfd4
	str		r0, [r7, #0xc]
	mov		r1, #0xa2
	lsl		r1, r1, #0x1
	add		r4, r7, r1
	str		r5, [r4, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r6, [r0, #0x0]
	sub		r1, #0x8
	add		r0, r7, r1
	mov		r2, r8
	str		r2, [r0, #0x0]
	add		r1, #0xc
	add		r0, r7, r1
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	mov		r2, #0xac
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r3, [r0, #0x0]
	add		r1, #0x14
	add		r0, r7, r1
	mov		r2, r9
	str		r2, [r0, #0x0]
	sub		r1, #0xc
	add		r0, r7, r1
	str		r3, [r0, #0x0]
	ldr		r1, _0807dfd8
	ldr		r0, [r4, #0x0]
	lsl		r0, r0, #0x3
	add		r2, r0, r1
	add		r1, #0x4
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r5, r7, #0x0
	add		r5, #0xfc
	str		r1, [r5, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r6, r7, r2
	str		r0, [r6, #0x0]
	mov		r2, #0x18
	mov		r0, #0x28
	mov		r8, r0
	mov		r1, #0x84
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	sub		r1, #0x4
	add		r0, r7, r1
	mov		r1, r8
	str		r1, [r0, #0x0]
	mov		r1, #0x86
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r2, #0xf8
	add		r0, r7, r2
	str		r3, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807dfe0
	ldr		r1, [r5, #0x0]
	ldr		r0, _0807dfdc
	add		r1, r1, r0
	ldr		r2, [r6, #0x0]
	mov		r0, r10
	mov		r3, #0x24
	bl		sub_08089880
	b		_0807dff0

.incbin "base.gba", 0x7DFCE, 0x2

_0807dfd0:	.4byte 0x080e28a4
_0807dfd4:	.4byte 0x080e28bc
_0807dfd8:	.4byte 0x080da8f4
_0807dfdc:	.4byte 0xFFFF6800

_0807dfe0:
	ldr		r1, [r5, #0x0]
	ldr		r2, _0807e03c
	add		r1, r1, r2
	ldr		r2, [r6, #0x0]
	mov		r0, r10
	mov		r3, #0x24
	bl		sub_08089880
_0807dff0:
	add		r5, r7, #0x0
	add		r5, #0x54
	mov		r0, #0xae
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0x8]
	add		r0, r5, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080899f0
	ldr		r0, [r4, #0x0]
	ldr		r1, [r0, #0xc]
	add		r0, r5, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x8]
	mov		r1, #0x1
	bl		sub_08009650
	mov		r1, #0x1
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7E03A, 0x2

_0807e03c:	.4byte 0xFFFF4800
	thumb_func_end sub_0807df0c

	thumb_func_start sub_0807e040
sub_0807e040:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r1, #0x0
	beq		_0807e0ba
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807e060
	cmp		r0, #0x1
	ble		_0807e0b2
	cmp		r0, #0x2
	beq		_0807e076
	cmp		r0, #0x3
	bne		_0807e0b2
_0807e060:
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bgt		_0807e0b2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	b		_0807e08a
_0807e076:
	mov		r0, #0xaa
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	ble		_0807e092
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0807e0b2
_0807e08a:
	add		r0, r4, #0x0
	bl		sub_0807e0c0
	b		_0807e0b2
_0807e092:
	cmp		r0, #0x0
	bne		_0807e0b2
	add		r0, r4, #0x0
	add		r0, #0xd4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_0807e0a8
	mov		r1, #0x0
_0807e0a8:
	cmp		r1, #0x0
	beq		_0807e0b2
	add		r0, r4, #0x0
	bl		sub_0807e0c0
_0807e0b2:
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_0808991c
_0807e0ba:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807e040

	thumb_func_start sub_0807e0c0
sub_0807e0c0:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x4
	bls		_0807e0d6
	b		_0807e290
_0807e0d6:
	lsl		r0, r0, #0x2
	ldr		r1, _0807e0e0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0807e0e0:	.4byte 0x0807e0e4

.incbin "base.gba", 0x7E0E4, 0x14
	thumb_func_end sub_0807e0c0


.incbin "base.gba", 0x7E0F8, 0x198

_0807e290:

.incbin "base.gba", 0x7E290, 0x10
	thumb_func_start sub_0807e2a0
sub_0807e2a0:
	push	{ r4, lr }
	ldr		r4, _0807e2b4
	ldr		r0, _0807e2b8
	bl		sub_08002148
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7E2B2, 0x2

_0807e2b4:	.4byte 0x0200BD64
_0807e2b8:	.4byte 0x080da924 @ script_y_tamura_loopham
	thumb_func_end sub_0807e2a0

	thumb_func_start sub_0807e2bc
sub_0807e2bc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x54
	add		r0, r5, #0x0
	bl		sub_080892b8
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807e2e6
	add		r1, #0x4
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807e2e6
	add		r0, r5, #0x0
	bl		sub_0808e4a0
_0807e2e6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807e2bc

	thumb_func_start sub_0807e2ec
sub_0807e2ec:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	add		r0, #0x1c
	add		r6, r4, r0
_0807e2fa:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x5c]
	cmp		r0, #0x0
	bne		_0807e31a
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_08089350
	cmp		r0, #0x0
	beq		_0807e31a
	add		r0, r4, #0x0
	bl		sub_0807e0c0
_0807e31a:
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x5c]
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0807e326
	mov		r1, #0x1
_0807e326:
	add		r0, r4, #0x0
	bl		sub_0807e040
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0807e2fa
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	b		_0807e2fa
	thumb_func_end sub_0807e2ec

	thumb_func_start sub_0807e340
sub_0807e340:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x7c
	add		r0, r5, #0x0
	bl		sub_080892b8
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807e36a
	add		r1, #0x4
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807e36a
	add		r0, r5, #0x0
	bl		sub_0808e4a0
_0807e36a:
	mov		r0, #0xb2
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	add		r0, r5, #0x0
	bl		sub_080892b8
	mov		r1, #0x89
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807e392
	add		r1, #0x4
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807e392
	add		r0, r5, #0x0
	bl		sub_0808e4a0
_0807e392:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807e340

	thumb_func_start sub_0807e398
sub_0807e398:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	mov		r0, #0x0
	str		r0, [r6, #0x5c]
	add		r4, r6, #0x0
	add		r4, #0x7c
	add		r0, r4, #0x0
	mov		r1, #0xc
	mov		r2, #0x1
	mov		r3, #0x1
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r5, #0xf0
	lsl		r5, r5, #0x7
	mov		r1, #0x8e
	lsl		r1, r1, #0x8
	mov		r2, #0x92
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r5, [r0, #0x0]
	add		r2, #0x4
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r0, #0xb2
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	add		r0, r4, #0x0
	mov		r1, #0xc
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0xdc
	lsl		r1, r1, #0x7
	mov		r2, #0x83
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	str		r5, [r0, #0x0]
	add		r2, #0x4
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r0, _0807e428
	add		r1, r6, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r1, _0807e42c
	ldr		r2, _0807e430
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	mov		r2, #0xf1
	lsl		r2, r2, #0x4
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0807dcdc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807e428:	.4byte 0x000001C9
_0807e42c:	.4byte 0x04000052
_0807e430:	.4byte 0x00000808
	thumb_func_end sub_0807e398

	thumb_func_start sub_0807e434
sub_0807e434:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _0807e480
	str		r0, [r6, #0x4c]
	ldr		r0, _0807e484
	str		r0, [r6, #0xc]
	mov		r1, #0xb2
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	add		r0, #0x7c
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0807e47a
	add		r0, r6, #0x0
	bl		sub_080b74c8
_0807e47a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807e480:	.4byte 0x080e28e4
_0807e484:	.4byte 0x080e28fc

.incbin "base.gba", 0x7E488, 0x24
	thumb_func_end sub_0807e434

	thumb_func_start sub_0807e4ac
sub_0807e4ac:
	push	{ lr }
	str		r1, [r0, #0x60]
	cmp		r1, #0x0
	beq		_0807e4c2
	ldr		r0, _0807e4c8
	bl		sub_08002268
	mov		r0, #0xe0
	lsl		r0, r0, #0x4
	bl		sub_08002268
_0807e4c2:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7E4C6, 0x2

_0807e4c8:	.4byte 0x00000E01

.incbin "base.gba", 0x7E4CC, 0x4
	thumb_func_end sub_0807e4ac

	thumb_func_start sub_0807e4d0
sub_0807e4d0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x54
	add		r7, r0, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0807e54c
	str		r0, [r7, #0x4c]
	ldr		r0, _0807e550
	str		r0, [r7, #0x54]
	ldr		r0, _0807e554
	str		r0, [r7, #0xc]
	add		r0, r7, #0x0
	add		r0, #0x78
	bl		sub_08080a24
	ldr		r1, _0807e558
	add		r0, r7, r1
	bl		sub_08089124
	ldr		r2, _0807e55c
	add		r0, r7, r2
	bl		sub_08089124
	mov		r3, #0x0
	str		r3, [sp, #0x10]
	ldr		r5, _0807e560
	str		r5, [sp, #0x48]
	ldr		r6, _0807e564
	str		r6, [sp, #0x4C]
	mov		r0, #0x68
	add		r0, r0, r7
	mov		r8, r0
	mov		r10, r3
_0807e522:
	ldr		r0, _0807e568
	add		r0, r10
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807e574
	ldr		r0, _0807e56c
	ldr		r1, _0807e570
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	ldr		r1, [sp, #0x4C]
	ldr		r2, [r1, #0x0]
	ldr		r5, [sp, #0x48]
	ldr		r3, [r5, #0x0]
	add		r1, r7, #0x0
	bl		sub_080807e0
	mov		r6, r8
	str		r0, [r6, #0x0]
	b		_0807e5ba

_0807e54c:	.4byte 0x080e2bf4
_0807e550:	.4byte 0x080e2bdc
_0807e554:	.4byte 0x080e2c0c
_0807e558:	.4byte 0x0000084C
_0807e55c:	.4byte 0x00000944
_0807e560:	.4byte 0x080da970
_0807e564:	.4byte 0x080da960
_0807e568:	.4byte 0x080da990
_0807e56c:	.4byte 0x0200DA00
_0807e570:	.4byte 0x000040B8

_0807e574:
	ldr		r0, _0807e7ec
	ldr		r1, _0807e7f0
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	add		r4, r0, #0x0
	ldr		r1, [sp, #0x4C]
	ldr		r5, [r1, #0x0]
	ldr		r2, [sp, #0x48]
	ldr		r6, [r2, #0x0]
	bl		sub_080c37c4
	ldr		r3, _0807e7f4
	str		r3, [r4, #0x4c]
	ldr		r0, _0807e7f8
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_08080df8
	ldr		r1, _0807e7fc
	add		r0, r4, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	ldr		r3, _0807e800
	add		r0, r4, r3
	str		r2, [r0, #0x0]
	ldr		r5, _0807e804
	add		r0, r4, r5
	str		r2, [r0, #0x0]
	mov		r6, r8
	str		r4, [r6, #0x0]
_0807e5ba:
	mov		r0, #0x68
	add		r0, r0, r7
	mov		r9, r0
	mov		r4, r9
	add		r4, r10
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0xc]
	mov		r3, #0x28
	ldrsh	r1, [r2, r3]
	add		r0, r0, r1
	ldr		r2, [r2, #0x2c]
	ldr		r1, [sp, #0x10]
	bl		sub_080bbc78
	ldr		r1, [r4, #0x0]
	ldr		r0, _0807e808
	mov		r2, #0x0
	bl		sub_080b781c
	ldr		r5, [sp, #0x48]
	add		r5, #0x4
	str		r5, [sp, #0x48]
	ldr		r6, [sp, #0x4C]
	add		r6, #0x4
	str		r6, [sp, #0x4C]
	mov		r0, #0x4
	add		r8, r0
	add		r10, r0
	ldr		r1, [sp, #0x10]
	add		r1, #0x1
	str		r1, [sp, #0x10]
	cmp		r1, #0x3
	ble		_0807e522
	add		r2, r7, #0x0
	add		r2, #0x78
	str		r2, [sp, #0x28]
	ldr		r3, _0807e80c
	add		r3, r7, r3
	str		r3, [sp, #0x40]
	ldr		r5, _0807e810
	add		r5, r7, r5
	str		r5, [sp, #0x44]
	mov		r6, #0x90
	lsl		r6, r6, #0x4
	add		r6, r7, r6
	str		r6, [sp, #0x18]
	ldr		r0, _0807e814
	add		r0, r7, r0
	str		r0, [sp, #0x14]
	ldr		r1, _0807e818
	add		r1, r7, r1
	str		r1, [sp, #0x1C]
	ldr		r2, _0807e81c
	add		r2, r7, r2
	str		r2, [sp, #0x20]
	ldr		r3, _0807e820
	add		r3, r7, r3
	str		r3, [sp, #0x24]
	mov		r5, #0x9e
	lsl		r5, r5, #0x4
	add		r5, r7, r5
	str		r5, [sp, #0x30]
	ldr		r6, _0807e824
	add		r6, r7, r6
	str		r6, [sp, #0x34]
	mov		r0, #0x9f
	lsl		r0, r0, #0x4
	add		r0, r7, r0
	str		r0, [sp, #0x38]
	ldr		r1, _0807e828
	add		r1, r7, r1
	str		r1, [sp, #0x3C]
	mov		r5, r9
	mov		r4, #0x3
_0807e64e:
	ldmia	r5!, { r0 }
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xa0
	add		r2, #0xa4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	bl		sub_080bbc74
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807e64e
	mov		r0, sp
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_0808c828
	mov		r0, #0x1
	str		r0, [sp, #0x4]
	mov		r5, #0x0
	mov		r10, r5
_0807e67c:
	mov		r3, #0x1
	neg		r3, r3
	mov		r8, r3
	mov		r4, #0x0
	mov		r6, r10
	add		r6, #0x1
	str		r6, [sp, #0x2C]
	mov		r6, r9
	mov		r5, sp
_0807e68e:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0807e6c2
	ldr		r0, [r6, #0x0]
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xc0
	add		r2, #0xc4
	mov		r12, r2
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	add		r0, r0, r1
	mov		r2, r12
	ldr		r1, [r2, #0x0]
	str		r3, [sp, #0x50]
	bl		sub_080bbc74
	ldr		r3, [sp, #0x50]
	mov		r1, #0x1
	neg		r1, r1
	cmp		r3, r1
	beq		_0807e6be
	cmp		r8, r0
	ble		_0807e6c2
_0807e6be:
	add		r3, r4, #0x0
	mov		r8, r0
_0807e6c2:
	add		r6, #0x4
	add		r5, #0x4
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0807e68e
	mov		r2, #0x1
	neg		r2, r2
	cmp		r3, r2
	beq		_0807e6fe
	lsl		r4, r3, #0x2
	mov		r3, r9
	add		r0, r3, r4
	ldr		r0, [r0, #0x0]
	ldr		r3, [r0, #0xc]
	mov		r5, #0x30
	ldrsh	r1, [r3, r5]
	add		r0, r0, r1
	ldr		r6, _0807e82c
	ldr		r2, [r6, #0x0]
	mov		r5, r10
	lsl		r1, r5, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	ldr		r2, [r3, #0x34]
	bl		sub_080bbc78
	mov		r6, sp
	add		r0, r6, r4
	mov		r1, #0x1
	str		r1, [r0, #0x0]
_0807e6fe:
	ldr		r2, [sp, #0x2C]
	mov		r10, r2
	cmp		r2, #0x2
	ble		_0807e67c
	add		r0, r7, #0x0
	bl		sub_0807e848
	add		r0, r7, #0x0
	bl		sub_08081080
	ldr		r0, _0807e830
	ldr		r1, _0807e834
	ldr		r2, _0807e838
	bl		sub_08006068
	mov		r5, #0x0
	mov		r4, r9
	mov		r3, #0x3
_0807e722:
	ldmia	r4!, { r0 }
	mov		r6, #0xb4
	lsl		r6, r6, #0x1
	add		r2, r0, r6
	sub		r6, #0x4
	add		r1, r0, r6
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r5, [r1, #0x0]
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0807e722
	ldr		r0, [sp, #0x28]
	bl		sub_0807fe70
	mov		r5, #0x0
	str		r5, [r7, #0x5c]
	str		r5, [r7, #0x60]
	ldr		r0, _0807e83c
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0x10
	mov		r2, #0x2
	mov		r3, #0x9
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, #0xb8
	lsl		r0, r0, #0x7
	mov		r1, #0x9c
	lsl		r1, r1, #0xb
	ldr		r2, [sp, #0x40]
	str		r0, [r2, #0x0]
	ldr		r3, [sp, #0x44]
	str		r1, [r3, #0x0]
	mov		r1, #0x18
	mov		r0, #0x28
	ldr		r6, [sp, #0x18]
	str		r1, [r6, #0x0]
	ldr		r2, [sp, #0x14]
	str		r0, [r2, #0x0]
	ldr		r3, [sp, #0x1C]
	str		r1, [r3, #0x0]
	ldr		r6, [sp, #0x20]
	str		r5, [r6, #0x0]
	ldr		r0, [sp, #0x24]
	str		r5, [r0, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	mov		r1, #0x3
	mov		r3, #0x94
	lsl		r3, r3, #0x4
	add		r0, r7, r3
_0807e796:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0807e796
	mov		r5, #0x0
	ldr		r6, _0807e840
	add		r4, r7, r6
	ldr		r1, _0807e844
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, #0x1
	ldr		r1, [sp, #0x30]
	str		r0, [r1, #0x0]
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	mov		r1, #0xa0
	lsl		r1, r1, #0x8
	ldr		r2, [sp, #0x34]
	str		r0, [r2, #0x0]
	ldr		r3, [sp, #0x38]
	str		r1, [r3, #0x0]
	ldr		r6, [sp, #0x3C]
	str		r5, [r6, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x54
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7E7EA, 0x2

_0807e7ec:	.4byte 0x0200DA00
_0807e7f0:	.4byte 0x00003FD8
_0807e7f4:	.4byte 0x080e2aec
_0807e7f8:	.4byte 0x080e2924
_0807e7fc:	.4byte 0x00003FC8
_0807e800:	.4byte 0x00003FD0
_0807e804:	.4byte 0x00003FD4
_0807e808:	.4byte 0x0200DB50
_0807e80c:	.4byte 0x000008F4
_0807e810:	.4byte 0x000008F8
_0807e814:	.4byte 0x000008FC
_0807e818:	.4byte 0x00000904
_0807e81c:	.4byte 0x00000908
_0807e820:	.4byte 0x0000090C
_0807e824:	.4byte 0x000009EC
_0807e828:	.4byte 0x00000A04
_0807e82c:	.4byte 0x0200BD68
_0807e830:	.4byte 0x02000DEC
_0807e834:	.4byte 0x80808080
_0807e838:	.4byte 0x080da9a0
_0807e83c:	.4byte 0x0000084C
_0807e840:	.4byte 0x00000944
_0807e844:	.4byte 0x00000105
	thumb_func_end sub_0807e4d0

	thumb_func_start sub_0807e848
sub_0807e848:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	mov		r1, sp
	add		r1, #0x4
	str		r1, [sp, #0x20]
	add		r0, #0x68
	mov		r10, r0
	mov		r8, r10
_0807e860:
	mov		r4, #0x0
	mov		r9, r4
	mov		r0, #0x0
_0807e866:
	add		r6, r0, #0x1
	add		r5, r6, #0x0
	cmp		r6, #0x3
	bgt		_0807e8b6
	lsl		r0, r0, #0x2
	add		r0, r8
	str		r0, [sp, #0x24]
	lsl		r0, r6, #0x2
	mov		r7, r8
	add		r4, r0, r7
_0807e87a:
	ldr		r0, [sp, #0x24]
	ldr		r2, [r0, #0x0]
	mov		r1, #0xb2
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r7, #0xb2
	lsl		r7, r7, #0x1
	add		r0, r3, r7
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_0807e8ae
	mov		r0, #0x1
	mov		r9, r0
	ldr		r1, [r2, #0xc]
	add		r0, r1, #0x0
	add		r0, #0xa8
	add		r1, #0xac
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	add		r0, r2, r0
	ldr		r2, [r1, #0x0]
	add		r1, r3, #0x0
	bl		sub_080bbc78
_0807e8ae:
	add		r4, #0x4
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0807e87a
_0807e8b6:
	add		r0, r6, #0x0
	cmp		r0, #0x2
	ble		_0807e866
	mov		r0, r9
	cmp		r0, #0x1
	beq		_0807e860
	mov		r3, #0x0
	mov		r2, sp
	mov		r4, r10
	ldr		r1, [sp, #0x20]
_0807e8ca:
	str		r3, [r1, #0x0]
	ldmia	r4!, { r0 }
	mov		r5, #0xb2
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	add		r2, #0x8
	add		r1, #0x8
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_0807e8ca
	mov		r0, #0x0
_0807e8e4:
	add		r7, r0, #0x1
	add		r6, r7, #0x0
	cmp		r7, #0x3
	bgt		_0807e916
	lsl		r0, r0, #0x3
	mov		r1, sp
	add		r5, r1, r0
	lsl		r0, r7, #0x3
	add		r4, r0, r1
_0807e8f6:
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bge		_0807e90e
	ldr		r2, [r5, #0x0]
	ldr		r3, [r5, #0x4]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x4]
	str		r0, [r5, #0x0]
	str		r1, [r5, #0x4]
	str		r2, [r4, #0x0]
	str		r3, [r4, #0x4]
_0807e90e:
	add		r4, #0x8
	add		r6, #0x1
	cmp		r6, #0x3
	ble		_0807e8f6
_0807e916:
	add		r0, r7, #0x0
	cmp		r0, #0x2
	ble		_0807e8e4
	mov		r2, #0x0
	mov		r3, r10
	ldr		r1, [sp, #0x20]
_0807e922:
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r3, r0
	ldr		r0, [r0, #0x0]
	mov		r4, #0xaa
	lsl		r4, r4, #0x1
	add		r0, r0, r4
	str		r2, [r0, #0x0]
	add		r1, #0x8
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_0807e922
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7E94A, 0x2
	thumb_func_end sub_0807e848

	thumb_func_start sub_0807e94c
sub_0807e94c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r4, _0807e980
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807e964
	ldr		r0, _0807e984
	mov		r1, #0xe0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807e964:
	ldr		r4, [r4, #0x0]
	ldr		r0, _0807e988
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_0807e990
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0807e98c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0807e99c

.incbin "base.gba", 0x7E97E, 0x2

_0807e980:	.4byte 0x0200D530
_0807e984:	.4byte 0x080da9a8 @ y_tamura/tamCarrot.cpp
_0807e988:	.4byte 0x00000282
_0807e98c:	.4byte 0xFFFF8000

_0807e990:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0807e9d4
	mov		r3, #0x0
	bl		sub_080b7724
_0807e99c:
	ldr		r4, _0807e9d8
_0807e99e:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807e9ce
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_0807e9c8
	mov		r3, #0x1
	add		r2, r5, #0x0
	add		r2, #0x68
	mov		r1, #0x3
_0807e9b8:
	ldmia	r2!, { r0 }
	mov		r6, #0x8e
	lsl		r6, r6, #0x2
	add		r0, r0, r6
	str		r3, [r0, #0x0]
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0807e9b8
_0807e9c8:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807e99e
_0807e9ce:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807e9d4:	.4byte 0xFFFF8001
_0807e9d8:	.4byte 0x0200D530
	thumb_func_end sub_0807e94c

	thumb_func_start sub_0807e9dc
sub_0807e9dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r6, r5, #0x0
	add		r6, #0x68
	add		r7, r6, #0x0
	mov		r4, #0x3
_0807e9ee:
	ldmia	r7!, { r1 }
	add		r0, r1, #0x0
	add		r0, #0x54
	add		r1, #0xfc
	ldr		r1, [r1, #0x0]
	asr		r1, r1, #0x8
	mov		r2, #0x40
	mov		r3, #0x40
	bl		sub_080898d0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807e9ee
	ldr		r0, _0807ea94
	ldr		r4, [r0, #0x0]
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0807ea98
	mov		r3, #0x1
	bl		sub_080b7724
	add		r7, r5, #0x0
	add		r7, #0x54
	ldr		r0, _0807ea9c
	mov		r8, r0
	mov		r1, #0x1
	mov		r9, r1
_0807ea24:
	add		r0, r5, #0x0
	bl		sub_080b7690
	add		r0, r4, #0x0
	bl		sub_0802b5f4
	cmp		r0, #0x2
	bne		_0807ea24
	add		r5, r6, #0x0
	mov		r4, #0x3
_0807ea38:
	ldmia	r5!, { r0 }
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xb0
	add		r2, #0xb4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	bl		sub_080bbc74
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807ea38
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	bl		sub_080706ac
	str		r7, [r0, #0x54]
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	mov		r3, #0xd0
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	mov		r0, #0x1
	mov		r1, #0xff
	bl		sub_0808f558
	mov		r0, #0x1
	mov		r1, #0xa
	bl		sub_0808f5cc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7EA92, 0x2

_0807ea94:	.4byte 0x0200D518
_0807ea98:	.4byte 0xFFFF8000
_0807ea9c:	.4byte 0x0200D524
	thumb_func_end sub_0807e9dc

	thumb_func_start sub_0807eaa0
sub_0807eaa0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	add		r7, r4, #0x0
	add		r7, #0x78
	add		r6, r4, #0x0
	add		r6, #0x68
	mov		r5, #0x0
	ldr		r0, _0807eb78
	mov		r10, r0
	ldr		r1, _0807eb7c
	mov		r9, r1
	ldr		r2, _0807eb80
	mov		r8, r2
_0807eac2:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r4, #0x58]
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0807ead2
	mov		r1, #0x1
_0807ead2:
	add		r0, r7, #0x0
	bl		sub_0808091c
	ldr		r0, [r4, #0x58]
	cmp		r0, #0x0
	bne		_0807eae6
	ldr		r3, _0807eb84
	add		r0, r4, r3
	bl		sub_0808991c
_0807eae6:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r4, #0x64]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r2, _0807eb88
	add		r1, r0, r2
	add		r2, r4, #0x0
	add		r2, #0x68
	cmp		r1, #0x0
	bge		_0807eb10
	mov		r1, #0x0
_0807eb10:
	ldr		r3, _0807eb8c
	str		r5, [r3, #0x0]
	asr		r0, r1, #0x8
	lsl		r0, r0, #0x8
	ldr		r3, _0807eb90
	str		r0, [r3, #0x0]
	ldr		r0, _0807eb94
	str		r5, [r0, #0x0]
	lsl		r0, r1, #0x8
	mov		r1, r10
	str		r0, [r1, #0x0]
	mov		r3, r9
	str		r5, [r3, #0x0]
	mov		r1, r8
	str		r0, [r1, #0x0]
	ldr		r0, [r4, #0x5c]
	cmp		r0, #0x0
	ble		_0807eb3c
	sub		r0, #0x1
	str		r0, [r4, #0x5c]
	cmp		r0, #0x0
	beq		_0807eb42
_0807eb3c:
	ldr		r0, [r4, #0x60]
	cmp		r0, #0x0
	beq		_0807eac2
_0807eb42:
	add		r4, r2, #0x0
	mov		r5, #0x3
_0807eb46:
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xd0
	add		r2, #0xd4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	bl		sub_080bbc74
	ldmia	r4!, { r0 }
	mov		r1, #0x8
	bl		sub_08080d0c
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807eb46
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807eb78:	.4byte 0x0200CE44
_0807eb7c:	.4byte 0x0200CE2C
_0807eb80:	.4byte 0x0200CE40
_0807eb84:	.4byte 0x0000084C
_0807eb88:	.4byte 0xFFFF9C00
_0807eb8c:	.4byte 0x0200BDD0
_0807eb90:	.4byte 0x0200BDCC
_0807eb94:	.4byte 0x0200CE30
	thumb_func_end sub_0807eaa0

	thumb_func_start sub_0807eb98
sub_0807eb98:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x5c]
	cmp		r0, #0x0
	ble		_0807ebb6
	sub		r0, #0x1
	str		r0, [r6, #0x5c]
	cmp		r0, #0x0
	bne		_0807ebb6
	b		_0807ee38
_0807ebb6:
	ldr		r0, [r6, #0x60]
	cmp		r0, #0x0
	beq		_0807ebbe
	b		_0807ee38
_0807ebbe:
	ldr		r5, _0807ed94
	ldr		r4, [r5, #0x0]
	ldr		r1, _0807ed98
	add		r0, r4, r1
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x6
	mov		r2, #0x3f
	mov		r3, #0x18
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r4, #0x18
	mov		r2, #0x68
	add		r2, r2, r6
	mov		r8, r2
	add		r3, r6, #0x0
	add		r3, #0x40
	str		r3, [sp, #0x0]
	ldr		r7, _0807ed9c
	add		r7, r6, r7
	str		r7, [sp, #0x4]
_0807ebf8:
	add		r0, r6, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0807ebf8
	mov		r7, r8
	mov		r4, #0x3
_0807ec08:
	ldmia	r7!, { r0 }
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xc8
	add		r2, #0xcc
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	bl		sub_080bbc74
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807ec08
_0807ec24:
	mov		r7, #0x0
	mov		r4, r8
	mov		r5, #0x3
_0807ec2a:
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xb8
	add		r2, #0xbc
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	bl		sub_080bbc74
	cmp		r0, #0x0
	beq		_0807ec46
	mov		r7, #0x1
_0807ec46:
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807ec2a
	cmp		r7, #0x1
	beq		_0807ec24
	add		r0, r6, #0x0
	bl		sub_0807e848
	mov		r7, #0x92
	lsl		r7, r7, #0xb
	mov		r10, r7
	mov		r5, #0x1
	mov		r9, r8
	mov		r7, #0x3
_0807ec64:
	mov		r0, r9
	add		r0, #0x4
	mov		r9, r0
	sub		r0, #0x4
	ldmia	r0!, { r4 }
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_08080d88
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	mov		r1, r10
	str		r1, [r0, #0x0]
	ldr		r2, _0807eda0
	add		r0, r4, r2
	str		r5, [r0, #0x0]
	ldr		r3, _0807eda4
	add		r4, r4, r3
	str		r5, [r4, #0x0]
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0807ec64
	add		r0, r6, #0x0
	mov		r1, #0x3c
	bl		sub_08080e78
	ldr		r4, _0807eda8
	ldr		r7, _0807ed98
	add		r0, r4, r7
	mov		r1, #0x6c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0x5
	mov		r2, #0x3f
	mov		r3, #0x18
	bl		sub_0802bb68
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r6, #0x0
	mov		r1, #0x18
	bl		sub_08080e78
	mov		r5, r8
	mov		r4, #0x3
_0807ecd4:
	ldmia	r5!, { r1 }
	ldr		r2, _0807edac
	add		r0, r1, r2
	add		r1, #0xfc
	ldr		r1, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	mov		r3, #0x3c
	bl		sub_08089880
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807ecd4
	add		r0, r6, #0x0
	mov		r1, #0x3c
	bl		sub_08080e78
	add		r0, r6, #0x0
	bl		sub_08080e5c
	mov		r4, #0x0
	ldr		r3, _0807edb0
	mov		r10, r3
	ldr		r7, _0807edb4
	mov		r9, r7
	ldr		r5, _0807edb8
_0807ed08:
	add		r0, r6, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x64]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r2, _0807edbc
	add		r1, r0, r2
	cmp		r1, #0x0
	bge		_0807ed28
	mov		r1, #0x0
_0807ed28:
	ldr		r3, _0807edc0
	str		r4, [r3, #0x0]
	asr		r0, r1, #0x8
	lsl		r0, r0, #0x8
	ldr		r7, _0807edc4
	str		r0, [r7, #0x0]
	mov		r0, r10
	str		r4, [r0, #0x0]
	lsl		r0, r1, #0x8
	mov		r1, r9
	str		r0, [r1, #0x0]
	ldr		r2, _0807edc8
	str		r4, [r2, #0x0]
	str		r0, [r5, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	mov		r3, #0x0
	mov		r1, r8
	mov		r2, #0x3
_0807ed54:
	ldr		r0, [r1, #0x0]
	ldr		r7, _0807edcc
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807ed62
	mov		r3, #0x1
_0807ed62:
	add		r1, #0x4
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0807ed54
	cmp		r3, #0x0
	bne		_0807ed08
	mov		r5, r8
	mov		r4, #0x3
_0807ed72:
	ldmia	r5!, { r0 }
	mov		r1, #0xa
	bl		sub_08080d0c
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0807ed72
	mov		r0, #0x1
	ldr		r1, [sp, #0x4]
	str		r0, [r1, #0x0]
	ldr		r2, _0807edb0
	mov		r10, r2
	ldr		r3, _0807edb4
	mov		r9, r3
	ldr		r7, _0807edc8
	ldr		r5, _0807edb8
	b		_0807ee24

_0807ed94:	.4byte 0x080da9c0
_0807ed98:	.4byte 0xFFFFFEA0
_0807ed9c:	.4byte 0x00000A04
_0807eda0:	.4byte 0x00003FAC
_0807eda4:	.4byte 0x00003CB8
_0807eda8:	.4byte 0x0200DB60
_0807edac:	.4byte 0x00003B10
_0807edb0:	.4byte 0x0200CE30
_0807edb4:	.4byte 0x0200CE44
_0807edb8:	.4byte 0x0200CE40
_0807edbc:	.4byte 0xFFFF7C00
_0807edc0:	.4byte 0x0200BDD0
_0807edc4:	.4byte 0x0200BDCC
_0807edc8:	.4byte 0x0200CE2C
_0807edcc:	.4byte 0x00003FBC

_0807edd0:
	ldr		r1, _0807ee48
	add		r0, r6, r1
	bl		sub_0808991c
	ldr		r0, [r6, #0x58]
	cmp		r0, #0x0
	bne		_0807ede6
	ldr		r2, _0807ee4c
	add		r0, r6, r2
	bl		sub_0808991c
_0807ede6:
	ldr		r0, [r6, #0x64]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r2, _0807ee50
	add		r1, r0, r2
	cmp		r1, #0x0
	bge		_0807ee00
	mov		r1, #0x0
_0807ee00:
	ldr		r3, _0807ee54
	str		r4, [r3, #0x0]
	asr		r0, r1, #0x8
	lsl		r0, r0, #0x8
	ldr		r2, _0807ee58
	str		r0, [r2, #0x0]
	mov		r3, r10
	str		r4, [r3, #0x0]
	lsl		r0, r1, #0x8
	mov		r1, r9
	str		r0, [r1, #0x0]
	str		r4, [r7, #0x0]
	str		r0, [r5, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_0807ee24:
	add		r0, r6, #0x0
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0807edd0
_0807ee38:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807ee48:	.4byte 0x00000944
_0807ee4c:	.4byte 0x0000084C
_0807ee50:	.4byte 0xFFFF7C00
_0807ee54:	.4byte 0x0200BDD0
_0807ee58:	.4byte 0x0200BDCC
	thumb_func_end sub_0807eb98

	thumb_func_start sub_0807ee5c
sub_0807ee5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xa8
	mov		r9, r0
	ldr		r5, _0807ef88
	ldr		r1, _0807ef8c
	add		r0, r5, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0xb
	bl		sub_080300ac
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	ldr		r0, [r4, #0x0]
	add		r7, sp, #0x8
	add		r1, sp, #0x10
	mov		r8, r1
	mov		r2, sp
	add		r2, #0x20
	str		r2, [sp, #0xA0]
	cmp		r0, #0x0
	bne		_0807eeb2
_0807eea6:
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807eea6
_0807eeb2:
	ldr		r0, _0807ef90
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	mov		r0, r9
	add		r0, #0x68
	str		r0, [sp, #0xA4]
	add		r5, r0, #0x0
	mov		r6, #0x3
_0807eeca:
	ldr		r2, [r5, #0x0]
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r4, [r0, #0x0]
	add		r1, #0x10
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r4, #0x1
	add		r0, r7, r0
	strh	r1, [r0, #0x0]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	bl		sub_080068f8
	lsl		r1, r4, #0x2
	add		r1, r8
	str		r0, [r1, #0x0]
	ldmia	r5!, { r0 }
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	add		r0, r0, r4
	add		r0, #0x4
	strb	r1, [r0, #0x0]
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0807eeca
	ldr		r4, _0807ef90
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807ef20
	ldr		r0, _0807ef94
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0807ef20:
	mov		r10, r4
	ldr		r5, [sp, #0xA0]
	add		r4, r7, #0x0
	mov		r6, #0x3
_0807ef28:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	add		r2, r5, #0x0
	bl		sub_0802e0ec
	add		r5, #0x20
	add		r4, #0x2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0807ef28
	ldr		r0, _0807ef98
	ldr		r0, [r0, #0x0]
	mov		r1, #0x4
	str		r1, [sp, #0x0]
	mov		r1, r8
	add		r2, sp, #0x4
	ldr		r3, [sp, #0xA0]
	bl		sub_08033028
	mov		r6, #0x0
	ldr		r4, [sp, #0xA4]
	mov		r5, #0x3
_0807ef58:
	ldr		r0, [r4, #0x0]
	mov		r1, #0xe
	bl		sub_08080d0c
	stmia	r4!, {  r6 }
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807ef58
	ldr		r4, _0807ef98
_0807ef6a:
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807ef6a
	add		sp, #0xa8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7EF86, 0x2

_0807ef88:	.4byte 0x0200DB40
_0807ef8c:	.4byte 0xFFFFFEC0
_0807ef90:	.4byte 0x0200D524
_0807ef94:	.4byte 0x080da9a8 @ y_tamura/tamCarrot.cpp
_0807ef98:	.4byte 0x0200D534
	thumb_func_end sub_0807ee5c

	thumb_func_start sub_0807ef9c
sub_0807ef9c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	ldr		r6, _0807f194
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r1, [r1, #0x0]
	mov		r4, #0x0
	add		r0, r7, #0x0
	add		r0, #0xfc
	str		r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	str		r4, [r0, #0x0]
	mov		r1, #0xac
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r5, #0x1
	neg		r5, r5
	str		r5, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08080d0c
	mov		r2, #0xae
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	mov		r3, #0xb0
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	str		r4, [r0, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	add		r2, #0x8
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08080d88
	mov		r2, #0x0
	mov		r9, r6
	mov		r3, #0x9e
	lsl		r3, r3, #0x1
	add		r3, r3, r7
	mov		r8, r3
	ldr		r0, _0807f198
	add		r5, r7, r0
	mov		r1, #0xfc
	lsl		r1, r1, #0x2
	add		r4, r7, r1
	mov		r3, #0xc2
	lsl		r3, r3, #0x7
	mov		r0, #0xd2
	lsl		r0, r0, #0x2
	add		r6, r7, r0
_0807f022:
	add		r0, r6, #0x0
	add		r1, r2, #0x0
	str		r2, [sp, #0x4]
	str		r3, [sp, #0x8]
	bl		sub_08080b30
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	ldr		r3, [sp, #0x8]
	str		r3, [r4, #0x4]
	str		r0, [r5, #0x0]
	str		r3, [r5, #0x4]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r5, r5, r0
	add		r4, r4, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	add		r3, r3, r1
	add		r6, r6, r0
	ldr		r2, [sp, #0x4]
	add		r2, #0x1
	cmp		r2, #0x1d
	ble		_0807f022
	mov		r2, #0x0
	mov		r9, r2
	mov		r3, #0x98
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	bl		sub_08080c50
	ldr		r0, _0807f19c
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0xf
	mov		r2, #0x1
	mov		r3, #0x3
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0xb
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x1
	mov		r8, r1
	ldr		r2, _0807f1a0
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r5, r7, #0x0
	add		r5, #0xfc
	ldr		r1, [r5, #0x0]
	mov		r6, #0xa0
	lsl		r6, r6, #0x7
	ldr		r3, _0807f1a4
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	ldr		r1, _0807f1a8
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	add		r2, #0x4c
	add		r4, r7, r2
	add		r0, r4, #0x0
	mov		r1, #0xf
	mov		r2, #0x1
	mov		r3, #0x4
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r3, _0807f1ac
	add		r0, r7, r3
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r2, _0807f1b0
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r3, #0x10
	add		r0, r7, r3
	str		r6, [r0, #0x0]
	ldr		r0, _0807f1b4
	add		r4, r7, r0
	ldr		r2, [r5, #0x0]
	asr		r2, r2, #0x8
	add		r2, #0x10
	mov		r0, #0x3
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r3, #0x38
	bl		sub_080893bc
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x1
	bl		sub_08089794
	ldr		r1, _0807f1b8
	add		r0, r7, r1
	mov		r2, r9
	str		r2, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080896cc
	ldr		r3, _0807f1bc
	add		r0, r7, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	ldr		r2, _0807f1c0
	add		r4, r7, r2
	add		r0, r4, #0x0
	mov		r1, #0xe
	mov		r2, #0x1
	mov		r3, #0x6
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r3, _0807f1c4
	add		r0, r7, r3
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	mov		r2, #0x88
	lsl		r2, r2, #0x8
	add		r3, #0xc
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	ldr		r1, _0807f1c8
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0807f1cc
	add		r4, r7, r2
	add		r0, r4, #0x0
	mov		r1, #0xc
	mov		r2, #0x1
	mov		r3, #0x2
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0xb
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r3, _0807f1d0
	add		r0, r7, r3
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	mov		r2, #0xc0
	lsl		r2, r2, #0x6
	add		r3, #0xc
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	ldr		r1, _0807f1d4
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	ldr		r2, _0807f1d8
	add		r0, r7, r2
	mov		r3, r8
	str		r3, [r0, #0x0]
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7F192, 0x2

_0807f194:	.4byte 0x080da980
_0807f198:	.4byte 0x000004E4
_0807f19c:	.4byte 0x00003BF8
_0807f1a0:	.4byte 0x00003C94
_0807f1a4:	.4byte 0x00003CA0
_0807f1a8:	.4byte 0x00003CA4
_0807f1ac:	.4byte 0x00003D7C
_0807f1b0:	.4byte 0x00003D88
_0807f1b4:	.4byte 0x00003EB0
_0807f1b8:	.4byte 0x00003FA4
_0807f1bc:	.4byte 0x00003FAC
_0807f1c0:	.4byte 0x00003B10
_0807f1c4:	.4byte 0x00003BAC
_0807f1c8:	.4byte 0x00003BBC
_0807f1cc:	.4byte 0x00003DC8
_0807f1d0:	.4byte 0x00003E64
_0807f1d4:	.4byte 0x00003E74
_0807f1d8:	.4byte 0x00003FBC
	thumb_func_end sub_0807ef9c

	thumb_func_start sub_0807f1dc
sub_0807f1dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	mov		r10, r1
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0x0]
	mov		r2, #0xb8
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r3, r10
	cmp		r3, #0x0
	bne		_0807f208
	bl		sub_0807fb92
_0807f208:
	mov		r1, #0xac
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xd
	bls		_0807f218
	bl		sub_0807fb0e
_0807f218:
	lsl		r0, r0, #0x2
	ldr		r1, _0807f224
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x7F222, 0x2

_0807f224:	.4byte 0x0807f228
_0807f228:	.4byte 0x0807f260

.incbin "base.gba", 0x7F22C, 0x34
	thumb_func_end sub_0807f1dc

.incbin "base.gba", 0x7F260, 0x8AE
	non_word_aligned_thumb_func_start sub_0807fb0e
sub_0807fb0e:
	ldr		r0, _0807fbbc
	ldr		r1, _0807fbc0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	ldr		r1, [r7, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x78
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0x7c]
	bl		sub_080bbc74
	mov		r3, #0xba
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x60]
	cmp		r0, #0x0
	bne		sub_0807fb92
	add		r0, r7, #0x0
	add		r0, #0x54
	bl		sub_08089350
	ldr		r0, [sp, #0x0]
	bl		sub_0808991c
	mov		r0, #0xd2
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	mov		r5, #0x1d
_0807fb50:
	add		r0, r4, #0x0
	mov		r1, r10
	bl		sub_0807fbd0
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r4, r4, r1
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0807fb50
	mov		r2, #0x98
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	bl		sub_0808991c
	ldr		r3, _0807fbc4
	add		r0, r7, r3
	bl		sub_08089350
	ldr		r1, _0807fbc8
	add		r0, r7, r1
	bl		sub_0808991c
	mov		r2, #0xa4
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r2, _0807fbcc
	cmp		r0, r2
	ble		sub_0807fb92
	str		r2, [r1, #0x0]
	thumb_func_end sub_0807fb0e

	non_word_aligned_thumb_func_start sub_0807fb92
sub_0807fb92:
	add		r0, r7, #0x0
	add		r0, #0xfc
	ldr		r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldr		r2, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	add		r0, #0xa8
	str		r1, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	add		r0, #0xac
	str		r2, [r0, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807fbbc:	.4byte 0x080da9a8 @ y_tamura/tamCarrot.cpp
_0807fbc0:	.4byte 0x000003A9
_0807fbc4:	.4byte 0x00003B10
_0807fbc8:	.4byte 0x00003DC8
_0807fbcc:	.4byte 0x0000FFFF
	thumb_func_end sub_0807fb92

	thumb_func_start sub_0807fbd0
sub_0807fbd0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fc32
	add		r0, r4, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_0807fc1a
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x50
	strh	r0, [r1, #0x0]
	sub		r1, #0x4
	ldrh	r0, [r1, #0x0]
	add		r0, #0x10
	strh	r0, [r1, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x60
	ldrh	r0, [r2, #0x0]
	add		r0, #0x10
	strh	r0, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	cmp		r0, r3
	ble		_0807fc10
	strh	r3, [r1, #0x0]
_0807fc10:
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, r3
	ble		_0807fc1a
	strh	r3, [r2, #0x0]
_0807fc1a:
	add		r0, r4, #0x0
	bl		sub_0808991c
	add		r0, r4, #0x0
	bl		sub_08089350
	cmp		r0, #0x0
	beq		_0807fc32
	mov		r1, #0x0
	add		r0, r4, #0x0
	add		r0, #0xc0
	str		r1, [r0, #0x0]
_0807fc32:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807fbd0

	thumb_func_start sub_0807fc38
sub_0807fc38:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	add		r0, #0x5e
	mov		r1, #0x80
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x64
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	sub		r1, #0x8
	mov		r0, #0x8
	strh	r0, [r1, #0x0]
	add		r1, #0x4c
	ldr		r2, _0807fc9c
	lsl		r3, r3, #0x3
	add		r0, r3, r2
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	add		r0, r4, #0x0
	add		r0, #0xac
	add		r2, #0x4
	add		r3, r3, r2
	ldr		r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	add		r2, r2, r0
	add		r0, r4, #0x0
	mov		r3, #0x80
	bl		sub_08089880
	mov		r1, #0x1
	mov		r2, #0xda
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xf4
	add		r0, r4, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fca0
	mov		r1, #0xa
	cmp		r0, #0x1
	bne		_0807fca2
	mov		r1, #0x9
	b		_0807fca2

_0807fc9c:	.4byte 0x080da9d8

_0807fca0:
	mov		r1, #0x8
_0807fca2:
	add		r0, r2, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7FCB2, 0x2
	thumb_func_end sub_0807fc38

	thumb_func_start sub_0807fcb4
sub_0807fcb4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	add		r0, r4, #0x0
	bl		sub_080892b8
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fcea
	add		r1, #0x4
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fcea
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0807fcea:
	mov		r0, #0xc8
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	mov		r10, r0
	ldr		r1, _0807fe34
	add		r1, r7, r1
	str		r1, [sp, #0xC]
	ldr		r0, _0807fe38
	add		r0, r7, r0
	str		r0, [sp, #0x0]
	ldr		r1, _0807fe3c
	add		r1, r7, r1
	str		r1, [sp, #0x4]
	ldr		r0, _0807fe40
	add		r0, r7, r0
	str		r0, [sp, #0x8]
	ldr		r1, _0807fe44
	add		r1, r1, r7
	mov		r8, r1
	ldr		r0, _0807fe48
	add		r6, r7, r0
	mov		r1, #0x81
	lsl		r1, r1, #0x3
	add		r5, r7, r1
	sub		r0, #0xf4
	add		r4, r7, r0
	mov		r1, #0x1d
	mov		r9, r1
_0807fd22:
	add		r0, r4, #0x0
	bl		sub_080892b8
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0807fd3a
	ldr		r0, [r5, #0x4]
	cmp		r0, #0x0
	beq		_0807fd3a
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0807fd3a:
	add		r0, r6, #0x0
	bl		sub_080892b8
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807fd54
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_0807fd54
	add		r0, r6, #0x0
	bl		sub_0808e4a0
_0807fd54:
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r8, r0
	add		r6, r6, r0
	add		r5, r5, r0
	add		r4, r4, r0
	mov		r1, #0x1
	neg		r1, r1
	add		r9, r1
	mov		r0, r9
	cmp		r0, #0x0
	bge		_0807fd22
	mov		r1, #0x98
	lsl		r1, r1, #0x2
	add		r4, r7, r1
	add		r0, r4, #0x0
	bl		sub_080892b8
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807fd92
	mov		r1, #0xc9
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fd92
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0807fd92:
	ldr		r0, _0807fe4c
	add		r4, r7, r0
	add		r0, r4, #0x0
	bl		sub_080892b8
	ldr		r1, [sp, #0xC]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807fdb4
	ldr		r1, _0807fe50
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fdb4
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0807fdb4:
	ldr		r0, _0807fe54
	add		r4, r7, r0
	add		r0, r4, #0x0
	bl		sub_080892b8
	ldr		r1, [sp, #0x0]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807fdd6
	ldr		r1, _0807fe58
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fdd6
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0807fdd6:
	ldr		r0, _0807fe5c
	add		r4, r7, r0
	add		r0, r4, #0x0
	bl		sub_080892b8
	ldr		r1, [sp, #0x4]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807fdf8
	ldr		r1, _0807fe60
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fdf8
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0807fdf8:
	ldr		r0, _0807fe64
	add		r4, r7, r0
	add		r0, r4, #0x0
	bl		sub_080892b8
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807fe1a
	ldr		r1, _0807fe68
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807fe1a
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_0807fe1a:
	ldr		r1, _0807fe6c
	add		r0, r7, r1
	bl		sub_08089624
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7FE32, 0x2

_0807fe34:	.4byte 0x00003CB8
_0807fe38:	.4byte 0x00003DA0
_0807fe3c:	.4byte 0x00003BD0
_0807fe40:	.4byte 0x00003E88
_0807fe44:	.4byte 0x000004FC
_0807fe48:	.4byte 0x0000043C
_0807fe4c:	.4byte 0x00003BF8
_0807fe50:	.4byte 0x00003CBC
_0807fe54:	.4byte 0x00003CE0
_0807fe58:	.4byte 0x00003DA4
_0807fe5c:	.4byte 0x00003B10
_0807fe60:	.4byte 0x00003BD4
_0807fe64:	.4byte 0x00003DC8
_0807fe68:	.4byte 0x00003E8C
_0807fe6c:	.4byte 0x00003EB0
	thumb_func_end sub_0807fcb4

	thumb_func_start sub_0807fe70
sub_0807fe70:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r4, r7, #0x0
	add		r4, #0xc
	add		r0, r4, #0x0
	mov		r1, #0x23
	mov		r2, #0x1
	mov		r3, #0x6
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r5, #0x1
	add		r0, r7, #0x0
	add		r0, #0xcc
	str		r5, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808991c
	add		r1, r7, #0x0
	add		r1, #0x60
	mov		r0, #0x0
	mov		r8, r0
	mov		r0, #0xd8
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x20
	strh	r0, [r1, #0x0]
	add		r4, #0xe8
	add		r0, r4, #0x0
	mov		r1, #0xfc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0xda
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r5, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808991c
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0xc8
	strh	r0, [r1, #0x0]
	add		r0, #0x82
	add		r1, r7, r0
	mov		r0, #0x8
	strh	r0, [r1, #0x0]
	ldr		r1, _08080054
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	sub		r1, #0xd
	add		r0, r7, r1
	mov		r6, #0x6
	strh	r6, [r0, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0xf
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0xb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0xa7
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808991c
	mov		r0, #0x8c
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x88
	strh	r0, [r1, #0x0]
	ldr		r0, _08080058
	add		r1, r7, r0
	mov		r0, #0x18
	strh	r0, [r1, #0x0]
	ldr		r1, _0808005c
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	sub		r1, #0xd
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	mov		r0, #0xb1
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	add		r0, r4, #0x0
	mov		r1, #0xf
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0xe1
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r5, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808991c
	mov		r0, #0xc6
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	mov		r0, #0x10
	strh	r0, [r1, #0x0]
	ldr		r0, _08080060
	add		r1, r7, r0
	mov		r0, #0x78
	strh	r0, [r1, #0x0]
	ldr		r1, _08080064
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	sub		r1, #0xd
	add		r0, r7, r1
	strh	r6, [r0, #0x0]
	mov		r0, #0xeb
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	str		r5, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0xec
	mov		r3, #0x8
	bl		sub_080893bc
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x6
	bl		sub_08089794
	ldr		r1, _08080068
	add		r0, r4, #0x0
	bl		sub_080896cc
	ldr		r1, _0808006c
	add		r4, r7, r1
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0xbc
	mov		r3, #0x18
	bl		sub_080893bc
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x6
	bl		sub_08089794
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080896cc
	mov		r1, #0xb6
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r0, _08080070
	add		r4, r7, r0
	mov		r6, #0x3
	str		r6, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0xe4
	mov		r3, #0x30
	bl		sub_080893bc
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x6
	bl		sub_08089794
	mov		r1, #0xd6
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	str		r5, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080896cc
	mov		r1, #0xd7
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r0, _08080074
	add		r4, r7, r0
	str		r6, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x30
	mov		r3, #0x88
	bl		sub_080893bc
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x6
	bl		sub_08089794
	add		r0, r4, #0x0
	mov		r1, #0x1e
	bl		sub_080896cc
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80052, 0x2

_08080054:	.4byte 0x0000015D
_08080058:	.4byte 0x00000232
_0808005c:	.4byte 0x00000245
_08080060:	.4byte 0x0000031A
_08080064:	.4byte 0x0000032D
_08080068:	.4byte 0x000005DC
_0808006c:	.4byte 0x000004B4
_08080070:	.4byte 0x000005BC
_08080074:	.4byte 0x000006C4
	thumb_func_end sub_0807fe70

	thumb_func_start sub_08080078
sub_08080078:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, _080800ec
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x5
	ble		_080800ac
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r1, _080800f0
	add		r0, r5, r1
	ldr		r2, _080800f4
	add		r6, r5, r2
	ldr		r4, [r6, #0x0]
	mov		r1, #0x0
	cmp		r4, #0x0
	bne		_080800a0
	mov		r1, #0x1
_080800a0:
	add		r4, r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	str		r4, [r6, #0x0]
_080800ac:
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_080800d0
	mov		r0, #0xb8
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	ldr		r1, [r2, #0x0]
	mov		r0, #0x1
	eor		r0, r1
	orr		r1, r0
	str		r1, [r2, #0x0]
	mov		r1, #0x0
	ldr		r2, _080800f8
	add		r0, r5, r2
	str		r1, [r0, #0x0]
_080800d0:
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x13
	ble		_080800e4
	mov		r1, #0x0
	ldr		r2, _080800f8
	add		r0, r5, r2
	str		r1, [r0, #0x0]
_080800e4:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x800EA, 0x2

_080800ec:	.4byte 0x000040B4
_080800f0:	.4byte 0x00003FC8
_080800f4:	.4byte 0x000040AC
_080800f8:	.4byte 0x00004088
	thumb_func_end sub_08080078

	thumb_func_start sub_080800fc
sub_080800fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	add		r5, r0, #0x0
	mov		r8, r1
	mov		r0, #0xb2
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	add		r0, r8
	str		r0, [r1, #0x0]
	ldr		r2, _0808021c
	cmp		r0, r2
	ble		_0808011e
	str		r2, [r1, #0x0]
_0808011e:
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r4, [r0, #0x0]
	mov		r2, #0xb2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x78]
	mov		r3, #0x95
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	mov		r1, #0xc
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	add		r4, #0x80
	mov		r0, #0x1
	mov		r9, r0
	str		r0, [r4, #0x0]
	add		r7, r5, #0x0
	add		r7, #0xfc
	ldr		r0, _08080220
	ldr		r2, [r7, #0x0]
	ldr		r0, [r0, #0x0]
	sub		r2, r2, r0
	asr		r2, r2, #0x8
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r6, r5, r1
	ldr		r0, _08080224
	ldr		r1, [r6, #0x0]
	ldr		r0, [r0, #0x0]
	sub		r1, r1, r0
	asr		r1, r1, #0x8
	mov		r3, #0xba
	lsl		r3, r3, #0x1
	add		r4, r5, r3
	ldr		r0, [r4, #0x0]
	add		r0, #0x78
	add		r3, r1, #0x0
	sub		r3, #0x20
	str		r2, [sp, #0x0]
	sub		r1, #0x38
	str		r1, [sp, #0x4]
	mov		r1, #0x1e
	str		r1, [sp, #0x8]
	mov		r1, r8
	bl		sub_08080948
	ldr		r0, [r4, #0x0]
	ldr		r1, _08080228
	add		r0, r0, r1
	bl		sub_08089780
	mov		r2, #0xa4
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xf
	bge		_0808019c
	b		_080802a6
_0808019c:
	cmp		r0, #0x10
	ble		_08080234
	cmp		r0, #0x13
	ble		_080801a6
	b		_080802a6
_080801a6:
	mov		r3, #0x98
	lsl		r3, r3, #0x2
	add		r4, r5, r3
	ldr		r2, [r7, #0x0]
	ldr		r1, [r6, #0x0]
	add		r3, #0xa8
	add		r0, r5, r3
	str		r2, [r0, #0x0]
	mov		r2, #0xc3
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r3, _0808022c
	add		r1, r1, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xbc
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r0, #0x0]
	sub		r2, #0x18
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xbe
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r1, _08080230
	add		r0, r5, r1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	mov		r3, #0xaf
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	mov		r0, #0x5
	strh	r0, [r1, #0x0]
	ldr		r1, [r5, #0xc]
	mov		r2, #0x38
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r2, [r1, #0x3c]
	mov		r1, #0x53
	bl		sub_080bbc78
	b		_080802a6

.incbin "base.gba", 0x8021A, 0x2

_0808021c:	.4byte 0x000003E7
_08080220:	.4byte 0x0200BDD0
_08080224:	.4byte 0x0200BDCC
_08080228:	.4byte 0x0000073C
_0808022c:	.4byte 0xFFFFE000
_08080230:	.4byte 0x000002C9

_08080234:
	mov		r3, #0x98
	lsl		r3, r3, #0x2
	add		r4, r5, r3
	ldr		r2, [r7, #0x0]
	ldr		r1, [r6, #0x0]
	add		r3, #0xa8
	add		r0, r5, r3
	str		r2, [r0, #0x0]
	mov		r2, #0xc3
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r3, _080802b4
	add		r1, r1, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xbc
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r0, #0x0]
	sub		r2, #0x18
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xbe
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r1, _080802b8
	add		r0, r5, r1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	mov		r3, #0xaf
	lsl		r3, r3, #0x2
	add		r1, r5, r3
	mov		r0, #0x5
	strh	r0, [r1, #0x0]
	ldr		r1, [r5, #0xc]
	mov		r2, #0x38
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r2, [r1, #0x3c]
	mov		r1, #0x52
	bl		sub_080bbc78
_080802a6:
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080802b4:	.4byte 0xFFFFE000
_080802b8:	.4byte 0x000002C9
	thumb_func_end sub_080800fc

	thumb_func_start sub_080802bc
sub_080802bc:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08080320
	ldr		r0, _08080318
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08080320
	mov		r4, #0x86
	lsl		r4, r4, #0x3
	add		r0, r4, #0x0
	bl		sub_0800227c
	cmp		r0, #0x0
	bne		_08080320
	add		r0, r4, #0x0
	bl		sub_08002268
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	add		r5, r0, #0x0
	add		r5, #0x68
	mov		r4, #0x3
_080802f8:
	ldmia	r5!, { r0 }
	mov		r1, #0xb
	bl		sub_08080d0c
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080802f8
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	ldr		r2, _0808031c
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	b		_0808033c

_08080318:	.4byte 0x00000282
_0808031c:	.4byte 0x00000844

_08080320:
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	add		r5, r0, #0x0
	add		r5, #0x68
	mov		r4, #0x3
_0808032e:
	ldmia	r5!, { r0 }
	mov		r1, #0xd
	bl		sub_08080d0c
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0808032e
_0808033c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80342, 0x3FE
	thumb_func_end sub_080802bc

	thumb_func_start sub_08080740
sub_08080740:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_0807fcb4
	mov		r1, #0xe6
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r1, r0, #0x8
	mov		r5, #0xe7
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	sub		r0, #0x34
	lsl		r2, r0, #0x8
	ldr		r5, _08080788
	add		r3, r4, r5
	add		r5, #0xc0
	add		r0, r4, r5
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08080780
	add		r5, #0x4
	add		r0, r4, r5
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08080780
	add		r0, r3, #0x0
	bl		sub_0808e4bc
_08080780:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80786, 0x2

_08080788:	.4byte 0x00003FC8
	thumb_func_end sub_08080740

	thumb_func_start sub_0808078c
sub_0808078c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _080807cc
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	ble		_080807bc
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, _080807d0
	add		r0, r4, r1
	mov		r2, #0x1
	ldr		r3, _080807d4
	add		r1, r4, r3
	str		r2, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x0
	ldr		r2, _080807d8
	add		r0, r4, r2
	str		r1, [r0, #0x0]
_080807bc:
	ldr		r3, _080807dc
	add		r1, r4, r3
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x807CA, 0x2

_080807cc:	.4byte 0x000040B0
_080807d0:	.4byte 0x00003FC8
_080807d4:	.4byte 0x00004088
_080807d8:	.4byte 0x000040AC
_080807dc:	.4byte 0x000040B4
	thumb_func_end sub_0808078c

	thumb_func_start sub_080807e0
sub_080807e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	bl		sub_080c37c4
	ldr		r0, _08080888
	str		r0, [r7, #0x4c]
	ldr		r0, _0808088c
	str		r0, [r7, #0xc]
	ldr		r0, _08080890
	add		r5, r7, r0
	add		r0, r5, #0x0
	bl		sub_08089124
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	sub		r1, #0x34
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	mov		r6, #0xa2
	lsl		r6, r6, #0x1
	add		r0, r7, r6
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r6, #0xc
	add		r0, r7, r6
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r3, #0x1
	neg		r3, r3
	str		r3, [r0, #0x0]
	mov		r2, #0x18
	mov		r1, #0x28
	add		r6, #0xdc
	add		r0, r7, r6
	str		r2, [r0, #0x0]
	sub		r6, #0x4
	add		r0, r7, r6
	str		r1, [r0, #0x0]
	mov		r1, #0x8c
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r6, #0xc
	add		r0, r7, r6
	str		r4, [r0, #0x0]
	sub		r1, #0xc4
	add		r0, r7, r1
	str		r3, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x22
	mov		r2, #0x1
	mov		r3, #0x7
	bl		sub_080899f0
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r6, _08080894
	add		r1, r7, r6
	mov		r0, #0x5
	str		r0, [r1, #0x0]
	ldr		r1, _08080898
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x80886, 0x2

_08080888:	.4byte 0x080e29fc
_0808088c:	.4byte 0x080e2a14
_08080890:	.4byte 0x00003FC8
_08080894:	.4byte 0x000040B0
_08080898:	.4byte 0x000040B4

.incbin "base.gba", 0x8089C, 0x80
	thumb_func_end sub_080807e0

	thumb_func_start sub_0808091c
sub_0808091c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r2, _08080940
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808093a
	ldr		r0, _08080944
	add		r4, r4, r0
	add		r0, r4, #0x0
	bl		sub_08089524
	add		r0, r4, #0x0
	bl		sub_08089624
_0808093a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08080940:	.4byte 0x000007CC
_08080944:	.4byte 0x000005BC
	thumb_func_end sub_0808091c

	thumb_func_start sub_08080948
sub_08080948:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	mov		r8, r1
	ldr		r1, [sp, #0x0+0x18]
	ldr		r7, [sp, #0x8+0x18]
	ldr		r0, _08080990
	add		r5, r4, r0
	lsl		r2, r2, #0x8
	lsl		r3, r3, #0x8
	ldr		r6, _08080994
	add		r0, r4, r6
	str		r2, [r0, #0x0]
	mov		r2, #0xcd
	lsl		r2, r2, #0x3
	add		r0, r4, r2
	str		r3, [r0, #0x0]
	add		r0, r5, #0x0
	ldr		r2, [sp, #0x4+0x18]
	add		r3, r7, #0x0
	bl		sub_080898d0
	add		r0, r5, #0x0
	mov		r1, r8
	bl		sub_080896cc
	add		r6, #0x40
	add		r4, r4, r6
	str		r7, [r4, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8098E, 0x2

_08080990:	.4byte 0x000005BC
_08080994:	.4byte 0x00000664
	thumb_func_end sub_08080948

	thumb_func_start sub_08080998
sub_08080998:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0xfa
	lsl		r0, r0, #0x3
	add		r1, r5, r0
	ldr		r0, _08080a14
	str		r0, [r1, #0x0]
	ldr		r1, _08080a18
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_080897d0
	ldr		r1, _08080a1c
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_080897d0
	ldr		r1, _08080a20
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_080897d0
	mov		r1, #0xeb
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_080897d0
	mov		r1, #0xb1
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r5, #0x0
	add		r0, #0xf4
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r5, #0x0
	add		r0, #0xc
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08080a0c
	add		r0, r5, #0x0
	bl		sub_0808afac
_08080a0c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80A12, 0x2

_08080a14:	.4byte 0x080e2c34
_08080a18:	.4byte 0x000006C4
_08080a1c:	.4byte 0x000005BC
_08080a20:	.4byte 0x000004B4
	thumb_func_end sub_08080998

	thumb_func_start sub_08080a24
sub_08080a24:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0xfa
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	ldr		r0, _08080a90
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xc
	bl		sub_08089124
	add		r0, r4, #0x0
	add		r0, #0xf4
	bl		sub_08089124
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_08089124
	mov		r1, #0xb1
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_08089124
	mov		r1, #0xeb
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_0808983c
	ldr		r1, _08080a94
	add		r0, r4, r1
	bl		sub_0808983c
	ldr		r1, _08080a98
	add		r0, r4, r1
	bl		sub_0808983c
	ldr		r1, _08080a9c
	add		r0, r4, r1
	bl		sub_0808983c
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	ldr		r0, _08080aa0
	add		r1, r4, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08080a90:	.4byte 0x080e2c34
_08080a94:	.4byte 0x000004B4
_08080a98:	.4byte 0x000005BC
_08080a9c:	.4byte 0x000006C4
_08080aa0:	.4byte 0x000007CC
	thumb_func_end sub_08080a24

	thumb_func_start sub_08080aa4
sub_08080aa4:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r1, _08080ac4
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x5
	bne		_08080ab8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08080ab8:
	ldr		r1, [r1, #0x0]
	add		r0, r2, #0x0
	bl		sub_0807fc38
	pop		{ r0 }
	bx		r0

_08080ac4:	.4byte 0x0200D638
	thumb_func_end sub_08080aa4

	thumb_func_start sub_08080ac8
sub_08080ac8:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r3, #0x0
	add		r2, #0xf0
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08080af4
	str		r1, [r2, #0x0]
	ldr		r2, _08080af8
	lsl		r1, r1, #0x2
	add		r0, r3, #0x0
	add		r0, #0xec
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	add		r1, r1, r0
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	add		r0, r3, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
_08080af4:
	pop		{ r0 }
	bx		r0

_08080af8:	.4byte 0x080daa00
	thumb_func_end sub_08080ac8

	thumb_func_start sub_08080afc
sub_08080afc:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r3, #0x0
	add		r2, #0xec
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	beq		_08080b28
	str		r1, [r2, #0x0]
	ldr		r2, _08080b2c
	add		r0, r3, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	add		r0, r3, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
_08080b28:
	pop		{ r0 }
	bx		r0

_08080b2c:	.4byte 0x080daa00
	thumb_func_end sub_08080afc

	thumb_func_start sub_08080b30
sub_08080b30:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, #0xe8
	str		r1, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xc
	mov		r2, #0x2
	mov		r3, #0x9
	bl		sub_080899f0
	mov		r1, #0x1
	add		r0, r5, #0x0
	add		r0, #0xc0
	str		r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xf0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_08080ac8
	add		r4, r5, #0x0
	add		r4, #0xf4
	add		r0, r4, #0x0
	mov		r1, #0xc
	mov		r2, #0x2
	mov		r3, #0x9
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x18
	mov		r2, #0x20
	mov		r3, #0xd4
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	sub		r3, #0x4
	add		r0, r5, r3
	str		r2, [r0, #0x0]
	add		r3, #0x8
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xd8
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	str		r2, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80BA6, 0x5A
	thumb_func_end sub_08080b30

	thumb_func_start sub_08080c00
sub_08080c00:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x80
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_08080c14
	mov		r1, #0x0
_08080c14:
	cmp		r1, #0x0
	beq		_08080c22
	mov		r1, #0x0
	add		r0, r4, #0x0
	add		r0, #0xc0
	str		r1, [r0, #0x0]
	b		_08080c48
_08080c22:
	add		r0, r4, #0x0
	bl		sub_0808991c
	add		r0, r4, #0x0
	bl		sub_080892b8
	add		r0, r4, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08080c48
	add		r0, r4, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08080c48
	add		r0, r4, #0x0
	bl		sub_0808e4a0
_08080c48:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80C4E, 0x2
	thumb_func_end sub_08080c00

	thumb_func_start sub_08080c50
sub_08080c50:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x1
	mov		r3, #0x5
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08080c50

	thumb_func_start sub_08080c70
sub_08080c70:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	mov		r12, r0
	add		r5, r2, #0x0
	add		r0, #0xfc
	ldr		r3, _08080cc8
	ldr		r2, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	sub		r2, r2, r0
	asr		r2, r2, #0x8
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r3, _08080ccc
	ldr		r4, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	sub		r4, r4, r0
	asr		r4, r4, #0x8
	mov		r6, #0xba
	lsl		r6, r6, #0x1
	add		r6, r12
	ldr		r0, [r6, #0x0]
	add		r0, #0x78
	add		r3, r4, #0x0
	sub		r3, #0x20
	str		r2, [sp, #0x0]
	sub		r4, #0x38
	str		r4, [sp, #0x4]
	mov		r4, #0x1e
	str		r4, [sp, #0x8]
	bl		sub_08080948
	cmp		r5, #0x0
	beq		_08080cbe
	ldr		r0, [r6, #0x0]
	ldr		r1, _08080cd0
	add		r0, r0, r1
	bl		sub_08089780
_08080cbe:
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80CC6, 0x2

_08080cc8:	.4byte 0x0200BDD0
_08080ccc:	.4byte 0x0200BDCC
_08080cd0:	.4byte 0x0000073C
	thumb_func_end sub_08080c70

	thumb_func_start sub_08080cd4
sub_08080cd4:
	push	{ lr }
	add		r3, r0, #0x0
	mov		r0, #0xae
	lsl		r0, r0, #0x1
	add		r1, r3, r0
	ldr		r0, [r1, #0x0]
	add		r2, r0, #0x1
	str		r2, [r1, #0x0]
	cmp		r2, #0x1d
	bgt		_08080d02
	add		r0, r3, #0x0
	add		r0, #0x54
	add		r1, r3, #0x0
	add		r1, #0xfc
	ldr		r1, [r1, #0x0]
	asr		r1, r1, #0x8
	lsl		r2, r2, #0x5
	add		r2, #0x60
	mov		r3, #0x20
	bl		sub_080898d0
	mov		r0, #0x0
	b		_08080d06
_08080d02:
	mov		r0, #0x1
	neg		r0, r0
_08080d06:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x80D0A, 0x2
	thumb_func_end sub_08080cd4

	thumb_func_start sub_08080d0c
sub_08080d0c:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r3, r2, r0
	ldr		r0, [r3, #0x0]
	cmp		r0, r4
	beq		_08080d40
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	str		r4, [r3, #0x0]
	ldr		r1, [r2, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x80
	add		r1, #0x84
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r0, r2, r0
	ldr		r1, [r1, #0x0]
	bl		sub_080bbc74
_08080d40:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80D46, 0x42
	thumb_func_end sub_08080d0c

	thumb_func_start sub_08080d88
sub_08080d88:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	lsl		r2, r0, #0x4
	sub		r2, r2, r0
	lsl		r2, r2, #0x3
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _08080dd0
	add		r0, r0, r1
	add		r2, r2, r0
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r4, r3, r0
	ldr		r1, [r2, #0x0]
	ldr		r5, [r2, #0x4]
	ldr		r6, [r2, #0x8]
	add		r0, r4, #0x0
	mov		r2, #0x2
	mov		r3, #0x9
	bl		sub_080899f0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80DCE, 0x2

_08080dd0:	.4byte 0x080daa34
	thumb_func_end sub_08080d88

	thumb_func_start sub_08080dd4
sub_08080dd4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	mov		r2, #0x2
	mov		r3, #0x9
	bl		sub_080899f0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80DF6, 0x2
	thumb_func_end sub_08080dd4

	thumb_func_start sub_08080df8
sub_08080df8:
	push	{ r4, lr }
	mov		r12, r0
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r0, r12
	str		r1, [r0, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r0, r12
	str		r2, [r0, #0x0]
	mov		r0, #0xa2
	lsl		r0, r0, #0x1
	add		r0, r12
	str		r3, [r0, #0x0]
	mov		r0, #0xa8
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r0, #0xaa
	lsl		r0, r0, #0x1
	add		r0, r12
	mov		r3, #0x1
	neg		r3, r3
	str		r3, [r0, #0x0]
	mov		r2, #0x18
	mov		r1, #0x28
	mov		r0, #0x8b
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r2, [r0, #0x0]
	mov		r0, #0x8a
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r1, [r0, #0x0]
	mov		r0, #0x8c
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r2, [r0, #0x0]
	mov		r0, #0x8d
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r4, [r0, #0x0]
	mov		r0, #0xb6
	lsl		r0, r0, #0x1
	add		r0, r12
	str		r3, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08080df8

	thumb_func_start sub_08080e5c
sub_08080e5c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r5, #0x68
	mov		r4, #0x3
_08080e64:
	ldmia	r5!, { r0 }
	mov		r1, #0x9
	bl		sub_08080d0c
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08080e64
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08080e5c

	thumb_func_start sub_08080e78
sub_08080e78:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x0
	beq		_08080ee0
	add		r7, r5, #0x0
	add		r7, #0x68
	mov		r6, #0x0
	ldr		r0, _08080ef0
	mov		r10, r0
	ldr		r1, _08080ef4
	mov		r9, r1
	ldr		r2, _08080ef8
	mov		r8, r2
_08080e9c:
	add		r0, r5, #0x0
	bl		sub_080b7690
	ldr		r0, [r5, #0x64]
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r2, _08080efc
	add		r1, r0, r2
	cmp		r1, #0x0
	bge		_08080ebc
	mov		r1, #0x0
_08080ebc:
	ldr		r0, _08080f00
	str		r6, [r0, #0x0]
	asr		r0, r1, #0x8
	lsl		r0, r0, #0x8
	ldr		r2, _08080f04
	str		r0, [r2, #0x0]
	ldr		r0, _08080f08
	str		r6, [r0, #0x0]
	lsl		r0, r1, #0x8
	mov		r1, r10
	str		r0, [r1, #0x0]
	mov		r2, r9
	str		r6, [r2, #0x0]
	mov		r1, r8
	str		r0, [r1, #0x0]
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08080e9c
_08080ee0:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80EEE, 0x2

_08080ef0:	.4byte 0x0200CE44
_08080ef4:	.4byte 0x0200CE2C
_08080ef8:	.4byte 0x0200CE40
_08080efc:	.4byte 0xFFFF7C00
_08080f00:	.4byte 0x0200BDD0
_08080f04:	.4byte 0x0200BDCC
_08080f08:	.4byte 0x0200CE30
	thumb_func_end sub_08080e78

	thumb_func_start sub_08080f0c
sub_08080f0c:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r4, r0, #0x0
	add		r4, #0x68
	mov		r5, #0x3
_08080f16:
	ldr		r0, [r4, #0x0]
	mov		r1, #0xd
	cmp		r6, #0x0
	beq		_08080f20
	mov		r1, #0xb
_08080f20:
	bl		sub_08080d0c
	add		r4, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08080f16
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x80F32, 0xC6
	thumb_func_end sub_08080f0c

	thumb_func_start sub_08080ff8
sub_08080ff8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r1, #0x0
	str		r1, [r4, #0x58]
	ldr		r0, _08081068
	str		r1, [r0, #0x0]
	ldr		r0, _0808106c
	str		r1, [r0, #0x0]
	ldr		r0, _08081070
	str		r1, [r0, #0x0]
	ldr		r0, _08081074
	str		r1, [r0, #0x0]
	ldr		r0, _08081078
	str		r1, [r0, #0x0]
	ldr		r0, _0808107c
	str		r1, [r0, #0x0]
	mov		r0, #0x1
	str		r0, [r4, #0x64]
	mov		r5, #0x0
	add		r6, r4, #0x0
	add		r6, #0x68
_08081022:
	ldmia	r6!, { r0 }
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0x98
	add		r2, #0x9c
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r4, #0x64]
	ldr		r3, [r2, #0x0]
	add		r2, r5, #0x0
	bl		sub_080bbc7c
	str		r0, [r4, #0x64]
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08081022
	add		r0, r4, #0x0
	bl		sub_0807e94c
	add		r0, r4, #0x0
	bl		sub_0807e9dc
	add		r0, r4, #0x0
	bl		sub_0807eaa0
	add		r0, r4, #0x0
	bl		sub_0807eb98
	add		r0, r4, #0x0
	bl		sub_0807ee5c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08081068:	.4byte 0x0200BDD0
_0808106c:	.4byte 0x0200BDCC
_08081070:	.4byte 0x0200CE30
_08081074:	.4byte 0x0200CE44
_08081078:	.4byte 0x0200CE2C
_0808107c:	.4byte 0x0200CE40
	thumb_func_end sub_08080ff8

	thumb_func_start sub_08081080
sub_08081080:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	ldr		r1, _080810c8
	mov		r8, r1
	mov		r6, #0x0
	add		r5, r0, #0x0
	add		r5, #0x68
	mov		r4, #0x3
_08081094:
	ldmia	r5!, { r3 }
	mov		r2, #0xaa
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	ldr		r1, [r0, #0x0]
	mov		r7, #0xa0
	lsl		r7, r7, #0x1
	add		r0, r3, r7
	ldr		r2, [r0, #0x0]
	add		r7, #0x24
	add		r0, r3, r7
	ldr		r3, [r0, #0x0]
	str		r6, [sp, #0x0]
	mov		r7, r8
	ldr		r0, [r7, #0x0]
	bl		sub_08006368
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08081094
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080810c8:	.4byte 0x080daa30

.incbin "base.gba", 0x810CC, 0x4
	thumb_func_end sub_08081080

	thumb_func_start sub_080810d0
sub_080810d0:
	push	{ r4, r5, lr }
	mov		r3, #0x0
	mov		r4, #0x1
	neg		r4, r4
	ldr		r5, _080810e8
	add		r2, r0, r5
_080810dc:
	ldr		r0, [r2, #0x0]
	cmp		r0, r4
	bne		_080810ec
	str		r1, [r2, #0x0]
	add		r0, r3, #0x0
	b		_08081104

_080810e8:	.4byte 0x00000934

_080810ec:
	add		r2, #0x4
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_080810dc
	ldr		r0, _0808110c
	mov		r1, #0x7b
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
	mov		r0, #0x1
	neg		r0, r0
_08081104:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8110A, 0x2

_0808110c:	.4byte 0x080da9a8 @ y_tamura/tamCarrot.cpp
	thumb_func_end sub_080810d0

	thumb_func_start sub_08081110
sub_08081110:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _08081168
	str		r0, [r6, #0x4c]
	ldr		r0, _0808116c
	str		r0, [r6, #0x54]
	ldr		r0, _08081170
	str		r0, [r6, #0xc]
	ldr		r1, _08081174
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r1, _08081178
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	add		r0, #0x78
	mov		r1, #0x2
	bl		sub_08080998
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08081162
	add		r0, r6, #0x0
	bl		sub_080b74c8
_08081162:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08081168:	.4byte 0x080e2bf4
_0808116c:	.4byte 0x080e2bdc
_08081170:	.4byte 0x080e2c0c
_08081174:	.4byte 0x00000944
_08081178:	.4byte 0x0000084C
	thumb_func_end sub_08081110

	thumb_func_start sub_0808117c
sub_0808117c:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r1, _080811a0
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_080811a4
	mov		r3, #0xa6
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	sub		r3, #0x4
	add		r1, r2, r3
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
	b		_080811cc

.incbin "base.gba", 0x8119E, 0x2

_080811a0:	.4byte 0x00003FC8

_080811a4:
	mov		r1, #0xac
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	sub		r0, r1, #0x5
	cmp		r0, #0x1
	bls		_080811b6
	cmp		r1, #0x2
	bne		_080811c2
_080811b6:
	mov		r3, #0xae
	lsl		r3, r3, #0x1
	add		r1, r2, r3
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_080811c2:
	mov		r0, #0xa6
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_080811cc:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808117c

	thumb_func_start sub_080811d0
sub_080811d0:
	push	{ r4, lr }
	add		r2, r0, #0x0
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r4, r2, r0
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	str		r1, [r4, #0x0]
	ldr		r0, _0808122c
	add		r3, r2, r0
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	ble		_080811f6
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	sub		r0, #0x1
	str		r0, [r3, #0x0]
_080811f6:
	mov		r1, #0xb6
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08081226
	mov		r3, #0xae
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1d
	ble		_08081226
	ldr		r1, [r2, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x88
	add		r1, #0x8c
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r0, r2, r0
	ldr		r1, [r1, #0x0]
	bl		sub_080bbc74
_08081226:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808122c:	.4byte 0x00003FC8

.incbin "base.gba", 0x81230, 0x44
	thumb_func_end sub_080811d0

	thumb_func_start sub_08081274
sub_08081274:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r1, [r1, #0x0]
	bl		sub_080810d0
	mov		r1, #0xb6
	lsl		r1, r1, #0x1
	add		r3, r4, r1
	str		r0, [r3, #0x0]
	sub		r1, #0x8
	add		r2, r4, r1
	ldr		r1, _080812c8
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	ldr		r2, _080812cc
	add		r0, r4, r2
	ldr		r1, [r3, #0x0]
	add		r1, #0x1
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x1
	ldr		r2, _080812d0
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x812C6, 0x2

_080812c8:	.4byte 0x0200BD68
_080812cc:	.4byte 0x00003B10
_080812d0:	.4byte 0x00003BD0

.incbin "base.gba", 0x812D4, 0x8
	thumb_func_end sub_08081274

	thumb_func_start sub_080812dc
sub_080812dc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	mov		r2, #0xd2
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	add		r0, r4, r0
	mov		r1, #0x3
	bl		sub_08080ac8
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_08080d88
	ldr		r1, [r4, #0xc]
	mov		r2, #0x38
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r2, [r1, #0x3c]
	mov		r1, #0x37
	bl		sub_080bbc78
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	mov		r2, #0xd2
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	add		r4, r4, r0
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0807fc38
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080812dc

	thumb_func_start sub_08081340
sub_08081340:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r1, _08081370
	add		r3, r2, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_0808136c
	mov		r0, #0xb8
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, [r2, #0x0]
	mov		r0, #0x1
	eor		r0, r1
	orr		r1, r0
	str		r1, [r2, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r3, #0x0]
_0808136c:
	pop		{ r0 }
	bx		r0

_08081370:	.4byte 0x00003FC8
	thumb_func_end sub_08081340

	thumb_func_start sub_08081374
sub_08081374:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r0, #0xae
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x1d
	ble		_08081390
	ldr		r0, _080813ac
	ldr		r1, _080813b0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08081390:
	ldr		r3, _080813b4
	add		r2, r5, r3
	ldr		r0, [r4, #0x0]
	add		r3, #0x8
	add		r1, r5, r3
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x813AA, 0x2

_080813ac:	.4byte 0x080da948 @ y_tamura/tamCarrot.h
_080813b0:	.4byte 0x00000246
_080813b4:	.4byte 0x00003FC8

.incbin "base.gba", 0x813B8, 0x8
	thumb_func_end sub_08081374

	thumb_func_start sub_080813c0
sub_080813c0:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x89
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_080813dc
	add		r0, r2, #0x0
	mov		r1, #0x7
	bl		sub_08080d88
_080813dc:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x813E0, 0x78
	thumb_func_end sub_080813c0

	thumb_func_start sub_08081458
sub_08081458:
	push	{ lr }
	mov		r1, #0x2
	bl		sub_08080d0c
	mov		r0, #0x22
	mov		r1, #0x1
	bl		sub_08009650
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8146C, 0x2C
	thumb_func_end sub_08081458

	thumb_func_start sub_08081498
sub_08081498:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x78
	str		r0, [r1, #0x5c]
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	sub		r2, #0x38
	add		r1, r4, r2
	ldr		r1, [r1, #0x0]
	bl		sub_080810d0
	mov		r1, #0xb6
	lsl		r1, r1, #0x1
	add		r3, r4, r1
	str		r0, [r3, #0x0]
	sub		r1, #0x8
	add		r2, r4, r1
	ldr		r1, _08081504
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	ldr		r2, _08081508
	add		r0, r4, r2
	ldr		r1, [r3, #0x0]
	add		r1, #0x1
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x1
	ldr		r2, _0808150c
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x81502, 0x2

_08081504:	.4byte 0x0200BD68
_08081508:	.4byte 0x00003B10
_0808150c:	.4byte 0x00003BD0

.incbin "base.gba", 0x81510, 0x108
	thumb_func_end sub_08081498

	thumb_func_start sub_08081618
sub_08081618:
	push	{ lr }
	add		r0, r1, #0x0
	bl		sub_0808f690
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x81624, 0x97C
	thumb_func_end sub_08081618

	thumb_func_start sub_08081fa0
sub_08081fa0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r0, #0xcc
	add		r0, r0, r5
	mov		r10, r0
	ldr		r6, _08082040
	ldr		r1, _08082044
	mov		r8, r1
	mov		r7, #0x1
	mov		r9, r7
_08081fbc:
	add		r0, r5, #0x0
	bl		sub_080b7690
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_08081fce
	mov		r1, #0x1
_08081fce:
	add		r0, r5, #0x0
	bl		sub_08082a60
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_08082024
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_0808201e
	mov		r3, #0x1
	add		r4, r5, #0x0
	add		r4, #0xb8
	mov		r2, #0x3
_08081ff4:
	ldmia	r4!, { r1 }
	mov		r7, #0xd5
	lsl		r7, r7, #0x2
	add		r0, r1, r7
	str		r3, [r0, #0x0]
	sub		r7, #0xe8
	add		r0, r1, r7
	str		r3, [r0, #0x0]
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08081ff4
	mov		r2, #0x1
	mov		r1, #0xe2
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x4
_08082014:
	str		r2, [r0, #0x0]
	add		r0, #0xe8
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08082014
_0808201e:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_08081fbc
_08082024:
	mov		r7, r8
	ldr		r0, [r7, #0x0]
	ldr		r1, _08082048
	add		r0, r0, r1
	mov		r7, r9
	str		r7, [r0, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8203E, 0x2

_08082040:	.4byte 0x0200D530
_08082044:	.4byte 0x0200D520
_08082048:	.4byte 0x0000057C
	thumb_func_end sub_08081fa0

	thumb_func_start sub_0808204c
sub_0808204c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	ldr		r0, _08082150
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08082154
	mov		r3, #0x1
	bl		sub_080b7724
	mov		r1, #0x1
	mov		r2, #0xd8
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	ldr		r3, _08082158
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	ldr		r2, _0808215c
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	mov		r2, #0x1
	mov		r3, #0xe7
	lsl		r3, r3, #0x4
	add		r0, r4, r3
	mov		r1, #0x3
_08082088:
	str		r2, [r0, #0x0]
	add		r0, #0xe8
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08082088
	add		r7, r4, #0x0
	add		r7, #0xcc
	add		r6, r4, #0x0
	add		r6, #0x40
	mov		r0, #0xb8
	add		r0, r0, r4
	mov		r8, r0
	mov		r1, #0x54
	add		r1, r1, r4
	mov		r10, r1
	mov		r2, #0x1
	ldr		r3, _08082160
	add		r0, r4, r3
	mov		r1, #0x3
_080820ae:
	str		r2, [r0, #0x0]
	add		r0, #0xe8
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_080820ae
	ldr		r0, _08082164
	mov		r9, r0
_080820bc:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_080820cc
	mov		r1, #0x1
_080820cc:
	add		r0, r4, #0x0
	bl		sub_08082a60
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	bl		sub_0802b5f4
	cmp		r0, #0x2
	bne		_080820bc
	mov		r0, #0x3a
	mov		r1, #0x1
	bl		sub_08009650
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08082168
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r5, r8
	mov		r4, #0x3
_08082100:
	ldmia	r5!, { r0 }
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xc0
	add		r2, #0xc4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	bl		sub_080bbc74
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08082100
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	bl		sub_080706ac
	mov		r1, r10
	str		r1, [r0, #0x54]
	mov		r0, #0x1
	mov		r1, #0xff
	bl		sub_0808f558
	mov		r0, #0x1
	mov		r1, #0xa
	bl		sub_0808f5cc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08082150:	.4byte 0x0200D518
_08082154:	.4byte 0xFFFF8000
_08082158:	.4byte 0x00000C9C
_0808215c:	.4byte 0x00000D84
_08082160:	.4byte 0x000008FC
_08082164:	.4byte 0x0200D520
_08082168:	.4byte 0xFFFF8002
	thumb_func_end sub_0808204c

	thumb_func_start sub_0808216c
sub_0808216c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xbc
	mov		r9, r0
	ldr		r5, _08082308
	ldr		r1, _0808230c
	add		r0, r5, r1
	mov		r1, #0xfe
	lsl		r1, r1, #0x1
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	mov		r1, #0xd
	bl		sub_080300ac
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	ldr		r0, [r4, #0x0]
	add		r5, sp, #0x8
	mov		r1, sp
	add		r1, #0xa4
	str		r1, [sp, #0xA8]
	add		r2, sp, #0x14
	mov		r10, r2
	sub		r1, #0x80
	str		r1, [sp, #0xB4]
	mov		r2, sp
	add		r2, #0xa5
	str		r2, [sp, #0xAC]
	add		r1, #0x82
	str		r1, [sp, #0xB0]
	cmp		r0, #0x0
	bne		_080821d0
_080821c4:
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080821c4
_080821d0:
	add		r0, r5, #0x0
	mov		r2, #0x3
	mov		r5, r9
	add		r5, #0xb8
	str		r5, [sp, #0xB8]
	mov		r1, #0x0
	mov		r3, #0x1
	neg		r3, r3
_080821e0:
	strb	r1, [r0, #0x0]
	strb	r1, [r0, #0x1]
	strb	r1, [r0, #0x2]
	add		r0, #0x3
	sub		r2, #0x1
	cmp		r2, r3
	bne		_080821e0
	ldr		r7, [sp, #0xA8]
	ldr		r6, [sp, #0xB8]
	mov		r0, #0x3
	mov		r8, r0
_080821f6:
	ldr		r1, [r6, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldr		r5, [r0, #0x0]
	lsl		r4, r5, #0x1
	add		r4, r4, r5
	add		r4, sp
	add		r4, #0x4
	add		r4, #0x4
	ldr		r0, _08082310
	add		r1, r1, r0
	add		r0, sp, #0xa4
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, [r6, #0x0]
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r2, _08082314
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_080068e0
	lsl		r1, r5, #0x2
	add		r1, r10
	str		r0, [r1, #0x0]
	ldmia	r6!, { r0 }
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	add		r0, r0, r5
	add		r0, #0x4
	strb	r1, [r0, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	add		r8, r2
	mov		r5, r8
	cmp		r5, #0x0
	bge		_080821f6
	ldr		r4, _08082318
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08082278
	ldr		r0, _0808231c
	mov		r1, #0xfb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08082278:
	ldr		r7, [sp, #0xA8]
	ldr		r6, [sp, #0xB4]
	add		r5, sp, #0x8
	mov		r0, #0x3
	mov		r8, r0
_08082282:
	ldr		r1, _08082318
	ldr		r4, [r1, #0x0]
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	ldrb	r1, [r7, #0x0]
	ldr		r2, [sp, #0xAC]
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x8
	orr		r0, r1
	ldr		r2, [sp, #0xB0]
	ldrb	r1, [r2, #0x0]
	lsl		r1, r1, #0x10
	orr		r1, r0
	ldr		r0, _08082320
	and		r1, r0
	add		r0, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_0802cfe8
	add		r6, #0x20
	add		r5, #0x3
	mov		r1, #0x1
	neg		r1, r1
	add		r8, r1
	mov		r2, r8
	cmp		r2, #0x0
	bge		_08082282
	ldr		r0, _08082324
	ldr		r0, [r0, #0x0]
	mov		r1, #0x4
	str		r1, [sp, #0x0]
	mov		r1, r10
	add		r2, sp, #0x4
	ldr		r3, [sp, #0xB4]
	bl		sub_08033028
	mov		r4, #0x9
	mov		r3, #0x0
	ldr		r1, [sp, #0xB8]
	mov		r2, #0x3
_080822d8:
	ldr		r0, [r1, #0x0]
	mov		r5, #0xa8
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	str		r4, [r0, #0x0]
	stmia	r1!, {  r3 }
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080822d8
	ldr		r4, _08082324
_080822ec:
	mov		r0, r9
	bl		sub_080b7690
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080822ec
	add		sp, #0xbc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08082308:	.4byte 0x0200DB40
_0808230c:	.4byte 0xFFFFFEC0
_08082310:	.4byte 0x00000464
_08082314:	.4byte 0x080db1f8
_08082318:	.4byte 0x0200D520
_0808231c:	.4byte 0x080dadcc @ y_tamura/tamSailing.cpp
_08082320:	.4byte 0x00FFFFFF
_08082324:	.4byte 0x0200D534
	thumb_func_end sub_0808216c

	thumb_func_start sub_08082328
sub_08082328:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r1, #0x0
	add		r0, #0xcc
	str		r1, [r0, #0x0]
	ldr		r0, _08082354
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x2c]
	ldr		r2, _08082358
	mov		r3, #0x0
	bl		sub_080b7724
	ldr		r0, [r4, #0x5c]
	add		r1, r0, #0x0
	cmp		r0, #0x2
	beq		_080823ac
	cmp		r0, #0x2
	bgt		_0808235c
	cmp		r0, #0x1
	beq		_08082368
	b		_080823ac

_08082354:	.4byte 0x0200D520
_08082358:	.4byte 0xFFFF8000

_0808235c:
	cmp		r1, #0x4
	bgt		_080823ac
	mov		r4, #0x0
	add		r6, r5, #0x0
	add		r6, #0xb8
	b		_08082376
_08082368:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
	b		_080823ac
_08082376:
	lsl		r0, r4, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xc8
	add		r2, #0xcc
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	bl		sub_080bbc74
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08082376
	add		r0, r5, #0x0
	bl		sub_080851a8
	add		r0, r5, #0x0
	bl		sub_08082c58
	ldr		r0, _080823b4
	ldr		r1, _080823b8
	ldr		r2, _080823bc
	bl		sub_080037ec
_080823ac:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x823B2, 0x2

_080823b4:	.4byte 0x02000D1C
_080823b8:	.4byte 0x80808080
_080823bc:	.4byte 0x080dade4
	thumb_func_end sub_08082328

	thumb_func_start sub_080823c0
sub_080823c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x34
	add		r7, r0, #0x0
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r2, #0xa8
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080823fa
	mov		r3, #0xa9
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080823fa
	add		r0, r1, #0x0
	mov		r1, #0xf0
	lsl		r1, r1, #0x7
	mov		r2, #0xc0
	lsl		r2, r2, #0x6
	bl		sub_0808e4bc
_080823fa:
	ldr		r5, _080825b4
	add		r1, r7, r5
	ldr		r6, _080825b8
	add		r0, r7, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08082420
	ldr		r2, _080825bc
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08082420
	add		r0, r1, #0x0
	mov		r1, #0xb0
	lsl		r1, r1, #0x8
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	bl		sub_0808e4bc
_08082420:
	mov		r3, #0xea
	lsl		r3, r3, #0x3
	add		r1, r7, r3
	mov		r5, #0x81
	lsl		r5, r5, #0x4
	add		r0, r7, r5
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808244a
	ldr		r6, _080825c0
	add		r0, r7, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808244a
	add		r0, r1, #0x0
	mov		r1, #0xf0
	lsl		r1, r1, #0x7
	mov		r2, #0xa0
	lsl		r2, r2, #0x7
	bl		sub_0808e4bc
_0808244a:
	ldr		r0, _080825c4
	add		r1, r7, r0
	ldr		r2, _080825c8
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08082470
	mov		r3, #0xca
	lsl		r3, r3, #0x4
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08082470
	add		r0, r1, #0x0
	mov		r1, #0xb0
	lsl		r1, r1, #0x8
	mov		r2, #0x0
	bl		sub_0808e4bc
_08082470:
	mov		r3, #0x0
	mov		r5, #0xb8
	add		r5, r5, r7
	mov		r9, r5
	mov		r6, #0xbc
	add		r6, r6, r7
	mov		r10, r6
	mov		r0, #0x6
	add		r0, sp
	mov		r8, r0
	mov		r1, #0xe7
	lsl		r1, r1, #0x4
	add		r4, r7, r1
	mov		r2, #0xdb
	lsl		r2, r2, #0x4
	add		r6, r7, r2
	ldr		r5, _080825cc
_08082492:
	ldr		r0, [r5, #0x0]
	asr		r0, r0, #0x6
	ldr		r1, [r5, #0x4]
	asr		r1, r1, #0x6
	mov		r12, r1
	mov		r2, #0xb0
	lsl		r2, r2, #0x8
	add		r1, r0, r2
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080824ba
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	beq		_080824ba
	add		r0, r6, #0x0
	mov		r2, r12
	str		r3, [sp, #0x28]
	bl		sub_0808e4bc
	ldr		r3, [sp, #0x28]
_080824ba:
	add		r4, #0xe8
	add		r6, #0xe8
	add		r5, #0x8
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_08082492
	mov		r3, #0x0
	ldr		r5, _080825d0
	add		r4, r7, r5
	ldr		r6, _080825d4
	add		r6, r7, r6
	str		r6, [sp, #0x2c]
	mov		r5, r9
_080824d4:
	ldr		r2, [r5, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xfc
	ldr		r1, [r0, #0x0]
	asr		r1, r1, #0x6
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r0, r2, r6
	ldr		r0, [r0, #0x0]
	asr		r2, r0, #0x6
	mov		r0, #0xb0
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08082504
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	beq		_08082504
	ldr		r0, [sp, #0x2c]
	str		r3, [sp, #0x28]
	bl		sub_0808e4bc
	ldr		r3, [sp, #0x28]
_08082504:
	add		r4, #0xe8
	ldr		r1, [sp, #0x2c]
	add		r1, #0xe8
	str		r1, [sp, #0x2c]
	add		r5, #0x4
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_080824d4
	ldr		r0, _080825d8
	mov		r2, r10
	ldr		r1, [r2, #0x0]
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	ldr		r1, [r1, #0x0]
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	mov		r6, #0x0
	ldrsh	r5, [r1, r6]
	str		r5, [sp, #0xc]
	mov		r0, #0x0
	str		r0, [sp, #0x10]
	mov		r1, r8
	str		r1, [sp, #0x14]
	mov		r2, sp
	add		r2, #0x4
	str		r2, [sp, #0x18]
	add		r3, r7, #0x0
	add		r3, #0xcc
	str		r3, [sp, #0x1c]
	mov		r5, #0xee
	lsl		r5, r5, #0x1
	add		r5, r7, r5
	str		r5, [sp, #0x20]
	mov		r6, #0xec
	lsl		r6, r6, #0x1
	add		r6, r7, r6
	str		r6, [sp, #0x24]
	ldr		r0, _080825dc
	add		r0, r0, r7
	mov		r10, r0
	mov		r1, #0xca
	lsl		r1, r1, #0x2
	add		r6, r7, r1
	mov		r2, #0xb2
	lsl		r2, r2, #0x2
	add		r2, r2, r7
	mov		r9, r2
_08082564:
	ldr		r3, _080825e0
	ldr		r0, [r3, #0x0]
	ldr		r1, [r6, #0x48]
	ldr		r2, [r6, #0x4c]
	ldr		r5, [sp, #0x14]
	str		r5, [sp, #0x0]
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x3b
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0xa0
	bhi		_08082634
	ldr		r1, [sp, #0x18]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	mov		r3, #0x20
	neg		r3, r3
	cmp		r0, r3
	blt		_08082634
	ldr		r5, _080825e4
	cmp		r0, r5
	bgt		_08082634
	ldr		r0, [sp, #0x14]
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r3, #0xa0
	sub		r0, r3, r1
	asr		r0, r0, #0x1
	add		r0, #0xa0
	sub		r0, r0, r1
	sub		r5, #0xf
	cmp		r0, r5
	bgt		_080825e8
	cmp		r0, #0x0
	bge		_080825ec
	mov		r0, #0x0
	b		_080825ec

_080825b4:	.4byte 0x00000CC4
_080825b8:	.4byte 0x00000D84
_080825bc:	.4byte 0x00000D88
_080825c0:	.4byte 0x00000814
_080825c4:	.4byte 0x00000BDC
_080825c8:	.4byte 0x00000C9C
_080825cc:	.4byte 0x080db0dc
_080825d0:	.4byte 0x000008FC
_080825d4:	.4byte 0x0000083C
_080825d8:	.4byte 0x080db18c
_080825dc:	.4byte 0x00000326
_080825e0:	.4byte 0x0200D514
_080825e4:	.4byte 0x0000010F

_080825e8:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
_080825ec:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	sub		r0, r1, r0
	cmp		r0, r1
	bgt		_080825fe
	cmp		r0, #0x0
	bge		_08082602
	mov		r0, #0x0
	b		_08082602
_080825fe:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
_08082602:
	mov		r2, #0x1
	strb	r2, [r6, #0x4]
	strh	r0, [r6, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	ldr		r5, [sp, #0x18]
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r1, r0, #0x8
	mov		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r2, r0, #0x8
	ldr		r0, [r6, #0x60]
	cmp		r0, #0x0
	bne		_08082624
	b		_08082728
_08082624:
	ldr		r0, [r6, #0x64]
	cmp		r0, #0x0
	bne		_0808262c
	b		_08082728
_0808262c:
	mov		r0, r9
	bl		sub_0808e4bc
	b		_08082728
_08082634:
	ldr		r5, [sp, #0xc]
	cmp		r5, #0x3
	beq		_08082728
	ldr		r0, [sp, #0x10]
	cmp		r5, r0
	bne		_08082728
	mov		r1, r8
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x37
	bgt		_08082728
	cmp		r0, #0x0
	blt		_08082728
	mov		r3, #0xf0
	add		r3, r3, r7
	mov		r12, r3
	ldr		r5, [sp, #0x1c]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_080826fe
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	mov		r3, #0x38
	sub		r0, r3, r0
	asr		r0, r0, #0x1
	lsl		r5, r0, #0x8
	ldr		r1, [sp, #0x18]
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	lsl		r4, r0, #0x8
	ldr		r3, [sp, #0x20]
	ldr		r1, [r3, #0x0]
	sub		r0, r1, r4
	cmp		r0, #0x0
	blt		_08082684
	mov		r1, #0xe0
	lsl		r1, r1, #0x7
	cmp		r0, r1
	bgt		_0808268e
	b		_080826ae
_08082684:
	sub		r0, r4, r1
	mov		r2, #0xe0
	lsl		r2, r2, #0x7
	cmp		r0, r2
	ble		_080826ae
_0808268e:
	mov		r3, #0xee
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldr		r1, _080826a0
	cmp		r4, r1
	bgt		_080826a8
	ldr		r2, _080826a4
	str		r2, [r0, #0x0]
	b		_080826ae

_080826a0:	.4byte 0x000077FF
_080826a4:	.4byte 0xFFFFF000

_080826a8:
	mov		r3, #0x80
	lsl		r3, r3, #0x9
	str		r3, [r0, #0x0]
_080826ae:
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r3, r7, r0
	ldr		r2, [r3, #0x0]
	ldr		r1, [sp, #0x24]
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x30]
	ldr		r0, _0808279c
	add		r1, r2, r0
	ldr		r0, [sp, #0x30]
	cmp		r0, #0x0
	beq		_080826cc
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	add		r1, r2, r0
_080826cc:
	str		r1, [r3, #0x0]
	add		r2, r3, #0x0
	add		r0, r4, r5
	cmp		r1, r0
	ble		_080826dc
	mov		r1, #0x0
	ldr		r0, [sp, #0x24]
	str		r1, [r0, #0x0]
_080826dc:
	sub		r1, r4, r5
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	bge		_080826ea
	mov		r1, #0x1
	ldr		r2, [sp, #0x24]
	str		r1, [r2, #0x0]
_080826ea:
	ldr		r0, _080827a0
	cmp		r5, r0
	bgt		_080826fe
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	ble		_080826fe
	ldr		r1, _080827a4
	cmp		r0, r1
	bgt		_080826fe
	str		r4, [r3, #0x0]
_080826fe:
	ldr		r2, [sp, #0x20]
	ldr		r1, [r2, #0x0]
	sub		r0, r1, #0x1
	ldr		r3, _080827a8
	cmp		r0, r3
	bhi		_08082728
	mov		r0, r12
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08082728
	mov		r0, r12
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08082728
	mov		r0, r12
	mov		r2, #0xc0
	lsl		r2, r2, #0x6
	bl		sub_0808e4bc
_08082728:
	mov		r5, #0xe8
	add		r10, r5
	add		r6, #0xe8
	add		r9, r5
	ldr		r0, [sp, #0x10]
	add		r0, #0x1
	str		r0, [sp, #0x10]
	cmp		r0, #0x4
	bgt		_0808273c
	b		_08082564
_0808273c:
	ldr		r1, [sp, #0xc]
	cmp		r1, #0x3
	beq		_08082744
	b		_0808286a
_08082744:
	ldr		r0, _080827ac
	ldr		r0, [r0, #0x0]
	ldr		r2, _080827b0
	ldr		r1, [r2, #0x18]
	ldr		r2, [r2, #0x1c]
	add		r5, sp, #0x8
	mov		r4, sp
	add		r4, #0xa
	str		r4, [sp, #0x0]
	add		r3, r5, #0x0
	bl		sub_0802a768
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0x37
	bls		_08082764
	b		_0808286a
_08082764:
	add		r6, r7, #0x0
	add		r6, #0xf0
	add		r0, r7, #0x0
	add		r0, #0xcc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0808283a
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mov		r0, #0x38
	sub		r0, r0, r1
	asr		r0, r0, #0x1
	lsl		r4, r0, #0x8
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	lsl		r3, r0, #0x8
	mov		r5, #0xee
	lsl		r5, r5, #0x1
	add		r0, r7, r5
	ldr		r0, [r0, #0x0]
	sub		r1, r0, r3
	cmp		r1, #0x0
	blt		_080827b4
	mov		r0, #0xe0
	lsl		r0, r0, #0x7
	cmp		r1, r0
	bgt		_080827be
	b		_080827de

_0808279c:	.4byte 0xFFFFFE00
_080827a0:	.4byte 0x000001FF
_080827a4:	.4byte 0x0000EFFF
_080827a8:	.4byte 0x0000EFFE
_080827ac:	.4byte 0x0200D514
_080827b0:	.4byte 0x080db0dc

_080827b4:
	sub		r1, r3, r0
	mov		r0, #0xe0
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_080827de
_080827be:
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldr		r0, _080827d0
	cmp		r3, r0
	bgt		_080827d8
	ldr		r0, _080827d4
	b		_080827dc

.incbin "base.gba", 0x827CE, 0x2

_080827d0:	.4byte 0x000077FF
_080827d4:	.4byte 0xFFFFF000

_080827d8:
	mov		r0, #0x80
	lsl		r0, r0, #0x9
_080827dc:
	str		r0, [r1, #0x0]
_080827de:
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r2, r7, r1
	ldr		r1, [r2, #0x0]
	mov		r5, #0xec
	lsl		r5, r5, #0x1
	add		r0, r7, r5
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080827f6
	add		r5, #0x28
	b		_080827f8
_080827f6:
	ldr		r5, _08082880
_080827f8:
	add		r0, r1, r5
	str		r0, [r2, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	add		r1, r3, r4
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	ble		_08082814
	mov		r5, #0xec
	lsl		r5, r5, #0x1
	add		r1, r7, r5
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08082814:
	sub		r1, r3, r4
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	bge		_08082826
	mov		r0, #0xec
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_08082826:
	ldr		r0, _08082884
	cmp		r4, r0
	bgt		_0808283a
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	ble		_0808283a
	ldr		r0, _08082888
	cmp		r1, r0
	bgt		_0808283a
	str		r3, [r2, #0x0]
_0808283a:
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r2, [r0, #0x0]
	sub		r1, r2, #0x1
	ldr		r0, _0808288c
	cmp		r1, r0
	bhi		_0808286a
	add		r0, r6, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808286a
	add		r0, r6, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808286a
	add		r0, r6, #0x0
	add		r1, r2, #0x0
	mov		r2, #0xc0
	lsl		r2, r2, #0x6
	bl		sub_0808e4bc
_0808286a:
	add		r0, r7, #0x0
	bl		sub_08082890
	add		sp, #0x34
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08082880:	.4byte 0xFFFFFE00
_08082884:	.4byte 0x000001FF
_08082888:	.4byte 0x0000EFFF
_0808288c:	.4byte 0x0000EFFE
	thumb_func_end sub_080823c0

	thumb_func_start sub_08082890
sub_08082890:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r6, r0, #0x0
	mov		r5, #0x0
	ldr		r0, _08082a34
	ldr		r0, [r0, #0x0]
	mov		r1, #0xa8
	lsl		r1, r1, #0xc
	ldr		r2, _08082a38
	mov		r4, sp
	add		r4, #0x6
	str		r4, [sp, #0x0]
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x38
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x67
	bhi		_080828ca
	add		r0, sp, #0x4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	blt		_080828ca
	cmp		r0, #0xef
	bgt		_080828ca
	mov		r5, #0x1
_080828ca:
	ldr		r0, _08082a34
	ldr		r0, [r0, #0x0]
	mov		r1, #0xa8
	lsl		r1, r1, #0xc
	ldr		r2, _08082a3c
	str		r4, [sp, #0x0]
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x38
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x67
	bhi		_080828fa
	add		r0, sp, #0x4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	blt		_080828fa
	cmp		r0, #0xef
	bgt		_080828fa
	mov		r0, #0x1
	orr		r5, r0
_080828fa:
	ldr		r0, _08082a34
	ldr		r0, [r0, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0xc
	ldr		r2, _08082a38
	str		r4, [sp, #0x0]
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x38
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x67
	bhi		_0808292a
	add		r0, sp, #0x4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	blt		_0808292a
	cmp		r0, #0xef
	bgt		_0808292a
	mov		r0, #0x2
	orr		r5, r0
_0808292a:
	ldr		r0, _08082a34
	ldr		r0, [r0, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0xc
	ldr		r2, _08082a3c
	str		r4, [sp, #0x0]
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x38
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x67
	bhi		_0808295a
	add		r0, sp, #0x4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	blt		_0808295a
	cmp		r0, #0xef
	bgt		_0808295a
	mov		r0, #0x2
	orr		r5, r0
_0808295a:
	ldr		r0, _08082a34
	ldr		r0, [r0, #0x0]
	mov		r1, #0xae
	lsl		r1, r1, #0xc
	ldr		r2, _08082a38
	str		r4, [sp, #0x0]
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x38
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x67
	bhi		_0808298a
	add		r0, sp, #0x4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	blt		_0808298a
	cmp		r0, #0xef
	bgt		_0808298a
	mov		r0, #0x3
	orr		r5, r0
_0808298a:
	ldr		r0, _08082a34
	ldr		r0, [r0, #0x0]
	mov		r1, #0xae
	lsl		r1, r1, #0xc
	ldr		r2, _08082a3c
	str		r4, [sp, #0x0]
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x38
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x67
	bhi		_080829ba
	add		r0, sp, #0x4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	blt		_080829ba
	cmp		r0, #0xef
	bgt		_080829ba
	mov		r0, #0x3
	orr		r5, r0
_080829ba:
	ldr		r0, _08082a40
	add		r4, r6, r0
	ldr		r0, [r4, #0x0]
	cmp		r5, r0
	beq		_08082a2c
	str		r5, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x58
	ldr		r1, _08082a44
	mov		r2, #0x18
	ldr		r3, _08082a48
	bl		sub_08000a2c
	add		r0, r6, #0x0
	add		r0, #0x88
	ldr		r1, _08082a4c
	mov		r2, #0x18
	ldr		r3, _08082a48
	bl		sub_08000a2c
	ldr		r5, [r4, #0x0]
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_08082a08
	ldr		r4, _08082a50
	add		r0, r4, #0x0
	ldr		r1, _08082a44
	mov		r2, #0xc
	ldr		r3, _08082a48
	bl		sub_08000a2c
	add		r4, #0x18
	add		r0, r4, #0x0
	ldr		r1, _08082a4c
	mov		r2, #0xc
	ldr		r3, _08082a48
	bl		sub_08000a2c
_08082a08:
	mov		r0, #0x2
	and		r5, r0
	cmp		r5, #0x0
	beq		_08082a2c
	ldr		r4, _08082a54
	add		r0, r4, #0x0
	ldr		r1, _08082a58
	mov		r2, #0xc
	ldr		r3, _08082a48
	bl		sub_08000a2c
	add		r4, #0x18
	add		r0, r4, #0x0
	ldr		r1, _08082a5c
	mov		r2, #0xc
	ldr		r3, _08082a48
	bl		sub_08000a2c
_08082a2c:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08082a34:	.4byte 0x0200D514
_08082a38:	.4byte 0x0007FD00
_08082a3c:	.4byte 0x00080D00
_08082a40:	.4byte 0x00001150
_08082a44:	.4byte 0x0600F010
_08082a48:	.4byte 0x80000003
_08082a4c:	.4byte 0x0600F050
_08082a50:	.4byte 0x080dad90
_08082a54:	.4byte 0x080dad9c
_08082a58:	.4byte 0x0600F01C
_08082a5c:	.4byte 0x0600F05C
	thumb_func_end sub_08082890

	thumb_func_start sub_08082a60
sub_08082a60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	mov		r8, r0
	cmp		r1, #0x0
	bne		_08082a74
	b		_08082c1c
_08082a74:
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r0, r8
	bl		sub_0808991c
	mov		r0, #0xb8
	add		r0, r8
	mov		r9, r0
	mov		r4, #0xb2
	lsl		r4, r4, #0x2
	add		r4, r8
	mov		r5, #0x4
_08082a8c:
	add		r0, r4, #0x0
	bl		sub_0808991c
	add		r4, #0xe8
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08082a8c
	ldr		r5, _08082c2c
	add		r5, r8
	ldr		r4, _08082c30
	add		r4, r8
	ldr		r0, [r4, #0x0]
	sub		r0, #0x1
	str		r0, [r4, #0x0]
	cmp		r0, #0x0
	bgt		_08082ad0
	ldr		r2, _08082c34
	add		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x3
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r1, _08082c38
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, #0xb4
	str		r0, [r4, #0x0]
_08082ad0:
	add		r0, r5, #0x0
	bl		sub_0808991c
	ldr		r1, _08082c3c
	add		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	ble		_08082afa
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08082afa
	ldr		r0, _08082c40
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08082afa
	mov		r0, r8
	mov		r1, #0x0
	bl		sub_08085158
_08082afa:
	mov		r0, #0xea
	lsl		r0, r0, #0x3
	add		r0, r8
	bl		sub_0808991c
	mov		r4, #0xdb
	lsl		r4, r4, #0x4
	add		r4, r8
	mov		r5, #0x3
_08082b0c:
	add		r0, r4, #0x0
	bl		sub_0808991c
	add		r4, #0xe8
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08082b0c
	ldr		r4, _08082c44
	add		r4, r8
	mov		r5, #0x3
_08082b20:
	add		r0, r4, #0x0
	bl		sub_0808991c
	add		r4, #0xe8
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08082b20
	mov		r0, #0x0
	mov		r2, r9
_08082b32:
	add		r5, r0, #0x1
	add		r4, r5, #0x0
	cmp		r5, #0x3
	bgt		_08082b54
	lsl		r0, r0, #0x2
	add		r7, r2, r0
	lsl		r0, r5, #0x2
	add		r6, r0, r2
_08082b42:
	ldr		r0, [r7, #0x0]
	ldmia	r6!, { r1 }
	str		r2, [sp, #0x18]
	bl		sub_08083e34
	add		r4, #0x1
	ldr		r2, [sp, #0x18]
	cmp		r4, #0x3
	ble		_08082b42
_08082b54:
	add		r0, r5, #0x0
	cmp		r0, #0x2
	ble		_08082b32
	mov		r1, #0x0
	ldr		r2, _08082c48
	mov		r10, r2
_08082b60:
	lsl		r0, r1, #0x2
	add		r7, r1, #0x1
	mov		r3, r9
	add		r6, r3, r0
	mov		r4, r10
	mov		r5, #0x2
_08082b6c:
	ldr		r0, [r6, #0x0]
	ldr		r1, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	bl		sub_08084ef8
	add		r4, #0x8
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08082b6c
	add		r1, r7, #0x0
	cmp		r1, #0x3
	ble		_08082b60
	mov		r0, sp
	ldr		r1, _08082c4c
	ldmia	r1!, { r2, r4, r5 }
	stmia	r0!, {  r2, r4, r5 }
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x0]
	mov		r0, #0x0
	mov		r3, r9
	str		r3, [sp, #0x10]
	ldr		r4, _08082c50
	add		r4, r8
	str		r4, [sp, #0x14]
_08082b9c:
	mov		r7, #0x1
	neg		r7, r7
	mov		r12, r7
	mov		r8, r7
	mov		r6, #0x0
	lsl		r5, r0, #0x2
	mov		r9, r5
	add		r0, #0x1
	mov		r10, r0
	ldr		r4, [sp, #0x10]
	mov		r3, sp
_08082bb2:
	ldr		r0, [r3, #0x0]
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_08082be6
	ldr		r1, [r4, #0x0]
	mov		r2, #0xc8
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldr		r2, [r0, #0x0]
	str		r2, [sp, #0x1C]
	mov		r5, #0xac
	lsl		r5, r5, #0x1
	add		r0, r1, r5
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r2, r12
	bgt		_08082bde
	cmp		r2, r12
	bne		_08082be6
	cmp		r0, r7
	bge		_08082be6
_08082bde:
	ldr		r0, [sp, #0x1C]
	mov		r12, r0
	add		r7, r1, #0x0
	mov		r8, r6
_08082be6:
	add		r4, #0x4
	add		r3, #0x4
	add		r6, #0x1
	cmp		r6, #0x3
	ble		_08082bb2
	mov		r1, #0x1
	neg		r1, r1
	cmp		r8, r1
	bne		_08082c06
	ldr		r0, _08082c54
	mov		r1, #0x93
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08082c06:
	ldr		r0, [sp, #0x14]
	add		r0, r9
	mov		r2, r8
	str		r2, [r0, #0x0]
	lsl		r0, r2, #0x2
	add		r0, sp
	mov		r3, #0x1
	str		r3, [r0, #0x0]
	mov		r0, r10
	cmp		r0, #0x3
	ble		_08082b9c
_08082c1c:
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08082c2c:	.4byte 0x00000CC4
_08082c30:	.4byte 0x00000DAC
_08082c34:	.4byte 0x00000DA8
_08082c38:	.4byte 0x080db1bc
_08082c3c:	.4byte 0x00000838
_08082c40:	.4byte 0x00000834
_08082c44:	.4byte 0x0000083C
_08082c48:	.4byte 0x080db0dc
_08082c4c:	.4byte 0x080dadec
_08082c50:	.4byte 0x00001154
_08082c54:	.4byte 0x080dadcc @ y_tamura/tamSailing.cpp
	thumb_func_end sub_08082a60

	thumb_func_start sub_08082c58
sub_08082c58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	mov		r2, #0x0
	mov		r1, #0x12
	add		r1, sp
	mov		r9, r1
	mov		r3, #0x11
	add		r3, sp
	mov		r8, r3
	add		r1, r0, #0x0
	add		r1, #0xb8
	add		r3, r1, #0x0
	add		r4, r0, #0x0
	add		r4, #0xd4
_08082c7c:
	ldmia	r4!, { r0 }
	lsl		r0, r0, #0x2
	add		r0, r3, r0
	ldr		r0, [r0, #0x0]
	mov		r5, #0xa6
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	str		r2, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_08082c7c
	ldr		r6, _08082d08
	mov		r7, #0x0
	mov		r10, r7
	mov		r0, sp
	add		r0, #0x10
	str		r0, [sp, #0x14]
	add		r4, r1, #0x0
	mov		r5, #0x3
_08082ca2:
	ldr		r1, [r4, #0x0]
	ldr		r3, _08082d0c
	add		r1, r1, r3
	add		r0, sp, #0x10
	mov		r2, #0x3
	bl		sub_0808c818
	ldmia	r4!, { r2 }
	mov		r7, #0xa6
	lsl		r7, r7, #0x1
	add		r0, r2, r7
	ldr		r1, [r0, #0x0]
	mov		r3, #0xa2
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x3
	add		r2, r0, r6
	ldr		r2, [r2, #0x0]
	add		r0, #0x4
	add		r0, r0, r6
	ldr		r3, [r0, #0x0]
	mov		r7, r10
	str		r7, [sp, #0x0]
	mov		r7, r9
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	str		r0, [sp, #0x4]
	mov		r7, r8
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	str		r0, [sp, #0x8]
	ldr		r7, [sp, #0x14]
	mov		r0, #0x0
	ldrsb	r0, [r7, r0]
	str		r0, [sp, #0xC]
	ldr		r0, _08082d10
	bl		sub_08006490
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08082ca2
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x82D06, 0x2

_08082d08:	.4byte 0x080dad70
_08082d0c:	.4byte 0x00000464
_08082d10:	.4byte 0x02000D1C
	thumb_func_end sub_08082c58

	thumb_func_start sub_08082d14
sub_08082d14:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r5, r0, #0x0
	str		r1, [sp, #0x8]
	ldr		r0, _08082e50
	add		r1, r2, r0
	mov		r0, sp
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r1, #0x0
	str		r1, [sp, #0xC]
	mov		r2, #0x2
	add		r2, sp
	mov		r9, r2
	mov		r0, sp
	str		r0, [sp, #0x10]
	mov		r7, #0x1
	neg		r7, r7
	mov		r1, #0x1
	add		r1, sp
	mov		r8, r1
	mov		r2, sp
	add		r2, #0x6
	str		r2, [sp, #0x14]
	add		r0, #0x5
	str		r0, [sp, #0x18]
	add		r3, r5, #0x0
	add		r3, #0xe4
_08082d56:
	mov		r1, #0x0
	mov		r10, r1
	mov		r1, #0x0
	mov		r2, r9
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, r7
	bne		_08082d7c
	mov		r2, r8
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, r7
	bne		_08082d7c
	ldr		r2, [sp, #0x10]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, r7
	bne		_08082d7c
	mov		r1, #0x1
_08082d7c:
	cmp		r1, #0x0
	bne		_08082dc6
	mov		r6, sp
	add		r4, sp, #0x4
	add		r0, r4, #0x0
	add		r1, r3, #0x0
	mov		r2, #0x3
	str		r3, [sp, #0x1C]
	bl		sub_0808c818
	mov		r0, r9
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r2, [sp, #0x14]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	ldr		r3, [sp, #0x1C]
	cmp		r1, r0
	bgt		_08082dc6
	cmp		r1, r0
	blt		_08082de6
	mov		r0, r8
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	ldr		r2, [sp, #0x18]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r1, r0
	bgt		_08082dc6
	cmp		r1, r0
	blt		_08082de6
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r1, r0
	ble		_08082de6
_08082dc6:
	mov		r2, #0x0
	mov		r0, #0x2
	ldrsb	r0, [r3, r0]
	cmp		r0, r7
	bne		_08082de2
	mov		r1, #0x1
	ldrsb	r1, [r3, r1]
	cmp		r1, r0
	bne		_08082de2
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, r1
	bne		_08082de2
	mov		r2, #0x1
_08082de2:
	cmp		r2, #0x0
	beq		_08082dea
_08082de6:
	mov		r0, #0x1
	mov		r10, r0
_08082dea:
	mov		r1, r10
	cmp		r1, #0x0
	beq		_08082e54
	mov		r7, #0x3
	mov		r2, #0xd4
	add		r2, r2, r5
	mov		r10, r2
	ldr		r0, [sp, #0xC]
	lsl		r0, r0, #0x2
	mov		r9, r0
	mov		r1, #0xd0
	add		r1, r1, r5
	mov		r8, r1
	ldr		r2, [sp, #0xC]
	cmp		r7, r2
	ble		_08082e34
	add		r4, r5, #0x0
	add		r4, #0xdc
	add		r6, r5, #0x0
	add		r6, #0xea
	add		r5, #0xed
_08082e14:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x3
	str		r3, [sp, #0x1C]
	bl		sub_0808c818
	ldr		r0, [r4, #0x0]
	str		r0, [r4, #0x4]
	sub		r4, #0x4
	sub		r6, #0x3
	sub		r5, #0x3
	sub		r7, #0x1
	ldr		r3, [sp, #0x1C]
	ldr		r0, [sp, #0xC]
	cmp		r7, r0
	bgt		_08082e14
_08082e34:
	add		r0, r3, #0x0
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r0, r10
	add		r0, r9
	ldr		r1, [sp, #0x8]
	str		r1, [r0, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	b		_08082e70

_08082e50:	.4byte 0x00000464

_08082e54:
	add		r3, #0x3
	ldr		r0, [sp, #0xC]
	add		r0, #0x1
	str		r0, [sp, #0xC]
	cmp		r0, #0x3
	bgt		_08082e62
	b		_08082d56
_08082e62:
	ldr		r0, _08082e80
	mov		r1, #0xa6
	lsl		r1, r1, #0x2
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08082e70:
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08082e80:	.4byte 0x080dadcc @ y_tamura/tamSailing.cpp
	thumb_func_end sub_08082d14

	thumb_func_start sub_08082e84
sub_08082e84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	add		r6, r3, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	add		r0, r7, #0x0
	add		r0, #0x54
	bl		sub_08089124
	ldr		r0, _08082fa8
	str		r0, [r7, #0x4c]
	ldr		r0, _08082fac
	str		r0, [r7, #0xc]
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_08089124
	mov		r3, #0xa5
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	bl		sub_08089124
	mov		r1, #0xdf
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	bl		sub_08089124
	ldr		r3, _08082fb0
	add		r0, r7, r3
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	ldr		r1, _08082fb4
	add		r0, r7, r1
	strb	r2, [r0, #0x0]
	add		r3, #0x2
	add		r0, r7, r3
	strb	r2, [r0, #0x0]
	mov		r1, #0xd4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	mov		r3, #0xa2
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	str		r5, [r0, #0x0]
	sub		r1, #0x60
	add		r0, r7, r1
	str		r6, [r0, #0x0]
	add		r3, #0xc
	add		r1, r7, r3
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0xaa
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r5, #0x1
	neg		r5, r5
	str		r5, [r0, #0x0]
	sub		r3, #0x4
	add		r0, r7, r3
	str		r5, [r0, #0x0]
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r0, r7
	mov		r8, r0
	add		r1, #0x1c
	add		r6, r7, r1
	add		r3, #0x54
	add		r4, r7, r3
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r3, r7, r0
	sub		r0, #0x8
	add		r1, r7, r0
	mov		r0, #0x3
	str		r0, [r1, #0x0]
	str		r0, [r3, #0x0]
	str		r0, [r4, #0x0]
	str		r0, [r6, #0x0]
	mov		r1, r8
	str		r0, [r1, #0x0]
	mov		r3, #0xc4
	lsl		r3, r3, #0x1
	add		r4, r7, r3
	mov		r0, #0xc2
	lsl		r0, r0, #0x1
	add		r3, r7, r0
	add		r0, #0x8
	add		r1, r7, r0
	ldr		r0, _08082fb8
	str		r0, [r1, #0x0]
	str		r0, [r3, #0x0]
	str		r0, [r4, #0x0]
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	add		r3, #0x4
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	str		r2, [r1, #0x0]
	mov		r0, #0xb0
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	sub		r0, #0x60
	str		r0, [r1, #0x0]
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r3, #0x10
	add		r0, r7, r3
	str		r5, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	mov		r0, #0x5
	str		r0, [r1, #0x0]
	mov		r1, #0xac
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	sub		r3, #0xc
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	sub		r1, #0x1c
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	sub		r3, #0x58
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x82FA6, 0x2

_08082fa8:	.4byte 0x080e2e44
_08082fac:	.4byte 0x080e2e5c
_08082fb0:	.4byte 0x00000464
_08082fb4:	.4byte 0x00000465
_08082fb8:	.4byte 0x00013B00
	thumb_func_end sub_08082e84

	thumb_func_start sub_08082fbc
sub_08082fbc:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r1, _08083048
	mov		r0, #0xa2
	lsl		r0, r0, #0x1
	add		r3, r6, r0
	ldr		r0, [r3, #0x0]
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	add		r0, r6, #0x0
	add		r0, #0xfc
	str		r1, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	mov		r2, #0xa5
	lsl		r2, r2, #0x2
	add		r5, r6, r2
	ldr		r0, _0808304c
	ldr		r4, [r3, #0x0]
	lsl		r4, r4, #0x6
	add		r4, r4, r0
	ldr		r1, [r4, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x1
	mov		r3, #0x10
	bl		sub_080899f0
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldrb	r1, [r4, #0x4]
	ldr		r2, _08083050
	add		r0, r6, r2
	mov		r4, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0x3
	bl		sub_08084ffc
	mov		r1, #0xb6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r0, #0x0]
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	ldr		r1, [r6, #0xc]
	mov		r2, #0x38
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x3c]
	bl		sub_080bbc74
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08083048:	.4byte 0x080db09c
_0808304c:	.4byte 0x080daf9c
_08083050:	.4byte 0x000002FB
	thumb_func_end sub_08082fbc

	thumb_func_start sub_08083054
sub_08083054:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	add		r0, r0, r7
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, r1
	bne		_0808307c
	mov		r3, #0xb6
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, r2
	beq		_0808314a
_0808307c:
	mov		r0, r8
	str		r1, [r0, #0x0]
	mov		r3, #0xb6
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	mov		r0, #0xa2
	lsl		r0, r0, #0x1
	add		r0, r7, r0
	str		r0, [sp, #0x0]
	ldr		r0, [r0, #0x0]
	lsl		r4, r0, #0x2
	add		r4, r4, r0
	lsl		r4, r4, #0x4
	lsl		r3, r1, #0x2
	mov		r10, r3
	add		r0, r3, r1
	lsl		r0, r0, #0x3
	ldr		r1, _08083124
	add		r0, r0, r1
	add		r4, r4, r0
	lsl		r0, r2, #0x3
	add		r4, r4, r0
	add		r5, r7, #0x0
	add		r5, #0x54
	ldr		r6, [r4, #0x0]
	ldr		r1, [r7, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x40
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0x44]
	bl		sub_080bbc74
	add		r3, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x1
	bl		sub_080899f0
	ldr		r1, [r4, #0x4]
	add		r0, r5, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r3, #0x1
	mov		r9, r3
	mov		r0, #0x8a
	lsl		r0, r0, #0x1
	add		r6, r7, r0
	str		r3, [r6, #0x0]
	add		r0, r5, #0x0
	bl		sub_0808991c
	mov		r2, #0xdf
	lsl		r2, r2, #0x2
	add		r5, r7, r2
	mov		r1, #0x0
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_080830fe
	mov		r1, #0x1
_080830fe:
	add		r0, r5, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r0, _08083128
	add		r4, r7, r0
	mov		r2, r9
	str		r2, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_0808991c
	ldr		r0, [sp, #0x0+0x24]
	cmp		r0, #0x0
	beq		_0808312c
	mov		r0, #0x0
	str		r0, [r6, #0x0]
	str		r0, [r4, #0x0]
	b		_08083140

_08083124:	.4byte 0x080dac20
_08083128:	.4byte 0x0000043C

_0808312c:
	ldr		r0, _0808315c
	ldr		r3, [sp, #0x0]
	ldr		r1, [r3, #0x0]
	lsl		r1, r1, #0x3
	add		r1, r10
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	mov		r1, #0x1
	bl		sub_08009650
_08083140:
	mov		r0, #0x8d
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	mov		r0, #0x5a
	str		r0, [r1, #0x0]
_0808314a:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8315A, 0x2

_0808315c:	.4byte 0x080db1cc
	thumb_func_end sub_08083054

	thumb_func_start sub_08083160
sub_08083160:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r0, _08083200
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xfc
	ldr		r1, [r1, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r2, r5, r3
	ldr		r2, [r2, #0x0]
	mov		r4, sp
	add		r4, #0x6
	str		r4, [sp, #0x0]
	add		r3, sp, #0x4
	bl		sub_0802a768
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x42
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r4
	cmp		r0, #0x99
	bls		_08083198
	b		_0808331e
_08083198:
	add		r0, sp, #0x4
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	mov		r0, #0x20
	neg		r0, r0
	cmp		r1, r0
	bge		_080831a8
	b		_0808331e
_080831a8:
	ldr		r0, _08083204
	cmp		r1, r0
	ble		_080831b0
	b		_0808331e
_080831b0:
	add		r0, #0x9d
	add		r6, r5, r0
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	add		r7, r5, r1
	ldr		r1, [r5, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x68
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x6c]
	bl		sub_080bbc74
	mov		r3, r8
	mov		r4, #0x0
	ldrsh	r1, [r3, r4]
	mov		r0, #0xa0
	sub		r0, r0, r1
	asr		r0, r0, #0x1
	add		r0, #0xa0
	sub		r4, r0, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r4, r0
	bgt		_080831ec
	add		r0, r4, #0x0
	cmp		r0, #0x0
	bge		_080831ec
	mov		r0, #0x0
_080831ec:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	sub		r4, r1, r0
	cmp		r4, r1
	bgt		_08083208
	add		r0, r4, #0x0
	cmp		r0, #0x0
	bge		_0808320a
	mov		r0, #0x0
	b		_0808320a

_08083200:	.4byte 0x0200D514
_08083204:	.4byte 0x0000010F

_08083208:
	add		r0, r1, #0x0
_0808320a:
	add		r4, r0, #0x0
	ldr		r1, [r5, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x70
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0x74]
	bl		sub_080bbc74
	add		r0, r7, #0x0
	add		r0, #0x5e
	strh	r4, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x5e
	strh	r4, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x60
	strh	r4, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x60
	strh	r4, [r0, #0x0]
	add		r0, sp, #0x4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r1, r0, #0x8
	mov		r4, r8
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r2, r0, #0x8
	add		r0, r6, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08083260
	add		r0, r6, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08083260
	add		r0, r6, #0x0
	bl		sub_0808e4bc
_08083260:
	add		r0, sp, #0x4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r1, r0, #0x8
	mov		r4, r8
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r2, r0, #0x8
	add		r0, r7, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808328a
	add		r0, r7, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808328a
	add		r0, r7, #0x0
	bl		sub_0808e4bc
_0808328a:
	mov		r3, #0xa8
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080832fa
	add		r0, sp, #0x4
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	lsl		r1, r0, #0x8
	mov		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r2, r0, #0x8
	add		r3, r5, #0x0
	add		r3, #0x54
	mov		r4, #0x8a
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080832ca
	add		r4, #0x4
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080832ca
	add		r0, r3, #0x0
	bl		sub_0808e4bc
_080832ca:
	add		r0, sp, #0x4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r1, r0, #0x8
	mov		r2, r8
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r2, r0, #0x8
	mov		r4, #0xdf
	lsl		r4, r4, #0x2
	add		r3, r5, r4
	add		r4, #0xc0
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080832fa
	add		r4, #0x4
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080832fa
	add		r0, r3, #0x0
	bl		sub_0808e4bc
_080832fa:
	ldr		r3, [r5, #0xc]
	add		r0, r3, #0x0
	add		r0, #0xa0
	add		r3, #0xa4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r0, r5, r0
	add		r1, sp, #0x4
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl		r1, r1, #0x8
	mov		r4, r8
	mov		r5, #0x0
	ldrsh	r2, [r4, r5]
	lsl		r2, r2, #0x8
	ldr		r3, [r3, #0x0]
	bl		sub_080bbc7c
_0808331e:
	add		sp, #0x8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8332A, 0x9F2
	thumb_func_end sub_08083160

	thumb_func_start sub_08083d1c
sub_08083d1c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08083dee
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r7, [r0, #0x0]
	ldr		r2, [r6, #0xc]
	add		r0, r2, #0x0
	add		r0, #0xa8
	add		r2, #0xac
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r0, r6, r0
	mov		r1, #0xbe
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	ldr		r1, [r4, #0x0]
	ldr		r2, [r2, #0x0]
	bl		sub_080bbc78
	cmp		r7, r0
	ble		_08083d72
	ldr		r2, [r6, #0xc]
	add		r0, r2, #0x0
	add		r0, #0xa8
	add		r2, #0xac
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r0, r6, r0
	ldr		r1, [r4, #0x0]
	ldr		r2, [r2, #0x0]
	bl		sub_080bbc78
	b		_08083d7e
_08083d72:
	add		r0, r7, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	bge		_08083d7e
	add		r0, r1, #0x0
_08083d7e:
	add		r7, r0, #0x0
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r4, r6, r2
	ldr		r1, [r4, #0x0]
	asr		r1, r1, #0x8
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r1, r7, #0x0
	bl		sub_0808c588
	add		r5, r6, #0x0
	add		r5, #0xfc
	ldr		r1, [r5, #0x0]
	add		r1, r1, r0
	str		r1, [r5, #0x0]
	ldr		r1, [r4, #0x0]
	asr		r1, r1, #0x8
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r1, r7, #0x0
	bl		sub_0808c5a4
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r2, r6, r1
	ldr		r1, [r2, #0x0]
	sub		r1, r1, r0
	str		r1, [r2, #0x0]
	mov		r2, #0xd4
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, _08083de0
	ldr		r2, _08083de4
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08083de8
	cmp		r0, #0x2
	bne		_08083dee
	ldr		r0, [r5, #0x0]
	add		r0, #0xc0
	b		_08083dec

_08083de0:	.4byte 0x080db1bc
_08083de4:	.4byte 0x00000DA8

_08083de8:
	ldr		r0, [r5, #0x0]
	sub		r0, #0xc0
_08083dec:
	str		r0, [r5, #0x0]
_08083dee:
	mov		r3, #0x0
	add		r1, r6, #0x0
	add		r1, #0xfc
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_08083dfe
	str		r3, [r1, #0x0]
	mov		r3, #0x1
_08083dfe:
	ldr		r0, [r1, #0x0]
	ldr		r4, _08083e30
	cmp		r0, r4
	ble		_08083e0a
	str		r4, [r1, #0x0]
	mov		r3, #0x1
_08083e0a:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_08083e1c
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	mov		r3, #0x1
_08083e1c:
	ldr		r0, [r2, #0x0]
	cmp		r0, r4
	ble		_08083e26
	str		r4, [r2, #0x0]
	mov		r3, #0x1
_08083e26:
	add		r0, r3, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x83E2E, 0x2

_08083e30:	.4byte 0x000FFFFF
	thumb_func_end sub_08083d1c

	thumb_func_start sub_08083e34
sub_08083e34:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r0, r7, #0x0
	add		r0, #0xfc
	ldr		r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xfc
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r2, r0, #0x8
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	add		r1, r6, r1
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r3, r0, #0x8
	add		r0, r2, #0x0
	mul		r0, r2
	add		r1, r3, #0x0
	mul		r1, r3
	add		r0, r0, r1
	cmp		r0, #0xff
	bls		_08083e6e
	mov		r0, #0x0
	b		_08083f0c
_08083e6e:
	ldr		r1, [r6, #0xc]
	add		r0, r1, #0x0
	add		r0, #0xf8
	add		r1, #0xfc
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	add		r0, r6, r0
	ldr		r4, [r1, #0x0]
	add		r1, r7, #0x0
	bl		sub_080bbc80
	ldr		r1, [r6, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x48
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x4c]
	bl		sub_080bbc74
	add		r1, r0, #0x0
	ldr		r2, [r6, #0xc]
	add		r0, r2, #0x0
	add		r0, #0xf0
	add		r2, #0xf4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r0, r6, r0
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	ldr		r4, [r2, #0x0]
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080bbc80
	ldr		r1, [r7, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x48
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	add		r0, r7, r0
	ldr		r1, [r1, #0x4c]
	bl		sub_080bbc74
	add		r1, r0, #0x0
	ldr		r2, [r7, #0xc]
	add		r0, r2, #0x0
	add		r0, #0xf0
	add		r2, #0xf4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r0, r7, r0
	str		r5, [sp, #0x0]
	ldr		r4, [r2, #0x0]
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_080bbc80
	ldr		r1, [r6, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x58
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	add		r0, r6, r0
	ldr		r2, [r1, #0x5c]
	mov		r1, #0x43
	bl		sub_080bbc78
	ldr		r1, [r7, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x58
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r7, r0
	ldr		r2, [r1, #0x5c]
	mov		r1, #0x43
	bl		sub_080bbc78
	mov		r0, #0x1
_08083f0c:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08083e34

	thumb_func_start sub_08083f14
sub_08083f14:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	cmp		r6, #0x0
	beq		_08083fc2
	mov		r1, #0xd4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldr		r3, [r0, #0x0]
	mov		r2, #0x0
	ldr		r0, _08083f40
	add		r1, r1, r0
_08083f34:
	ldr		r0, [r1, #0x0]
	cmp		r0, r3
	bne		_08083f44
	add		r1, r2, #0x0
	b		_08083f50

.incbin "base.gba", 0x83F3E, 0x2

_08083f40:	.4byte 0x00001154

_08083f44:
	add		r1, #0x4
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_08083f34
	mov		r1, #0x1
	neg		r1, r1
_08083f50:
	ldr		r2, _08083fd4
	add		r5, r4, r2
	ldr		r0, [r5, #0x0]
	cmp		r0, r1
	beq		_08083f74
	str		r1, [r5, #0x0]
	sub		r2, #0xe8
	add		r0, r4, r2
	lsl		r1, r1, #0x1
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, #0xab
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	mov		r0, #0x3c
	str		r0, [r1, #0x0]
_08083f74:
	mov		r2, #0xab
	lsl		r2, r2, #0x3
	add		r1, r4, r2
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	ble		_08083f9a
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08083f9a
	ldr		r1, _08083fd8
	add		r0, r4, r1
	ldr		r1, [r5, #0x0]
	lsl		r1, r1, #0x1
	add		r1, #0x1
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
_08083f9a:
	ldr		r2, _08083fd8
	add		r0, r4, r2
	bl		sub_0808991c
	cmp		r6, #0x0
	beq		_08083fc2
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808991c
	mov		r2, #0xa5
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	bl		sub_0808991c
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_0808991c
_08083fc2:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08083fd4:	.4byte 0x00000554
_08083fd8:	.4byte 0x0000046C
	thumb_func_end sub_08083f14

	thumb_func_start sub_08083fdc
sub_08083fdc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0xae
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bgt		_08084048
	mov		r5, #0x0
	str		r5, [r1, #0x0]
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldr		r0, [r2, #0x0]
	mov		r1, #0x4
	bic		r0, r1
	str		r0, [r2, #0x0]
	mov		r2, #0xd4
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldr		r4, [r0, #0x0]
	mov		r3, #0xea
	lsl		r3, r3, #0x3
	add		r2, r4, r3
	ldr		r0, _0808403c
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0808401c
	b		_080841d0
_0808401c:
	str		r5, [r1, #0x0]
	ldr		r0, _08084040
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x81
	lsl		r1, r1, #0x4
	add		r0, r4, r1
	str		r5, [r0, #0x0]
	ldr		r2, _08084044
	add		r1, r4, r2
	mov		r0, #0xb4
	b		_080841ce

_0808403c:	.4byte 0x00000834
_08084040:	.4byte 0x080db1ec
_08084044:	.4byte 0x00000838

_08084048:
	mov		r3, #0xba
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	beq		_080840a0
	cmp		r0, r1
	ble		_0808406c
	sub		r3, #0x10
	add		r2, r4, r3
	ldr		r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	b		_0808407a
_0808406c:
	cmp		r0, r1
	bge		_08084080
	mov		r0, #0xb2
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldr		r1, [r2, #0x0]
	sub		r0, #0x64
_0808407a:
	eor		r0, r1
	orr		r1, r0
	str		r1, [r2, #0x0]
_08084080:
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r0, #0x78
	str		r0, [r1, #0x0]
	ldr		r1, [r4, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x58
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r0, r4, r0
	ldr		r2, [r1, #0x5c]
	mov		r1, #0x30
	bl		sub_080bbc78
	b		_080841d0
_080840a0:
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	ble		_080840b2
	b		_080841d0
_080840b2:
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r1, _0808410c
	mov		r2, #0xc8
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_080840d2
	b		_080841d0
_080840d2:
	ldr		r1, _08084110
	lsl		r0, r2, #0x3
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r1, [r0, #0x4]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r1, r4, #0x0
	add		r1, #0xfc
	ldr		r1, [r1, #0x0]
	sub		r1, r1, r2
	bl		sub_0808c4cc
	ldr		r1, _08084114
	add		r0, r0, r1
	bl		sub_0808c3ac
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r1, r0, #0x0
	cmp		r1, #0x43
	bgt		_08084118
	mov		r2, #0x0
	b		_08084144

.incbin "base.gba", 0x8410A, 0x2

_0808410c:	.4byte 0x080db18c
_08084110:	.4byte 0x080db0dc
_08084114:	.4byte 0xFFFFFC7C

_08084118:
	cmp		r1, #0x70
	bgt		_08084120
	mov		r2, #0x1
	b		_08084144
_08084120:
	cmp		r1, #0x9d
	bgt		_08084128
	mov		r2, #0x2
	b		_08084144
_08084128:
	cmp		r1, #0xca
	bgt		_08084130
	mov		r2, #0x3
	b		_08084144
_08084130:
	cmp		r1, #0xf7
	bgt		_08084138
	mov		r2, #0x4
	b		_08084144
_08084138:
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	mov		r2, #0x6
	cmp		r1, r0
	bgt		_08084144
	mov		r2, #0x5
_08084144:
	cmp		r2, #0x6
	bhi		_080841d0
	lsl		r0, r2, #0x2
	ldr		r1, _08084154
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x84152, 0x2

_08084154:	.4byte 0x08084158
_08084158:	.4byte 0x08084174

.incbin "base.gba", 0x8415C, 0x18

_08084174:
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r0, #0x4
	b		_080841ce

.incbin "base.gba", 0x8417E, 0xA
	thumb_func_end sub_08083fdc


.incbin "base.gba", 0x84188, 0x46

_080841ce:

.incbin "base.gba", 0x841CE, 0x2
_080841d0:

.incbin "base.gba", 0x841D0, 0x1D8
	thumb_func_start sub_080843a8
sub_080843a8:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	mov		r0, #0xa8
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	ldr		r1, [r2, #0x0]
	mov		r0, #0x4
	eor		r0, r1
	orr		r1, r0
	str		r1, [r2, #0x0]
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	sub		r2, #0x2c
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r1, r3, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	mov		r5, #0xb4
	str		r5, [r0, #0x0]
	add		r2, #0x34
	add		r0, r3, r2
	ldr		r4, [r0, #0x0]
	mov		r0, #0xea
	lsl		r0, r0, #0x3
	add		r2, r4, r0
	add		r0, #0xe4
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x2
	beq		_08084416
	mov		r0, #0x2
	str		r0, [r1, #0x0]
	ldr		r0, _0808441c
	ldr		r1, [r0, #0x8]
	add		r0, r2, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x1
	mov		r2, #0x81
	lsl		r2, r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	ldr		r1, _08084420
	add		r0, r4, r1
	str		r5, [r0, #0x0]
_08084416:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0808441c:	.4byte 0x080db1ec
_08084420:	.4byte 0x00000838
	thumb_func_end sub_080843a8

	thumb_func_start sub_08084424
sub_08084424:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	mov		r0, #0xd4
	lsl		r0, r0, #0x1
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, #0xc8
	ldr		r2, [r0, #0x0]
	mov		r0, #0xc2
	lsl		r0, r0, #0x1
	add		r0, r8
	ldr		r0, [r0, #0x0]
	asr		r1, r0, #0x8
	cmp		r1, #0xb4
	ble		_0808444a
	ldr		r0, _0808446c
	add		r1, r1, r0
_0808444a:
	sub		r1, r2, r1
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	ldr		r3, _0808446c
	add		r0, r1, r3
	cmp		r1, r2
	bgt		_08084460
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08084460
	add		r0, r1, r2
_08084460:
	add		r1, r0, #0x0
	sub		r0, #0x17
	cmp		r0, #0x2c
	bhi		_08084470
	mov		r5, #0x7
	b		_080844b8

_0808446c:	.4byte 0xFFFFFE98

_08084470:
	add		r0, r1, #0x0
	sub		r0, #0x44
	cmp		r0, #0x2c
	bhi		_0808447c
	mov		r5, #0x6
	b		_080844b8
_0808447c:
	add		r0, r1, #0x0
	sub		r0, #0x71
	cmp		r0, #0x2c
	bhi		_08084488
	mov		r5, #0x5
	b		_080844b8
_08084488:
	add		r0, r1, #0x0
	sub		r0, #0x9e
	cmp		r0, #0x2c
	bhi		_08084494
	mov		r5, #0x4
	b		_080844b8
_08084494:
	add		r0, r1, #0x0
	sub		r0, #0xcb
	cmp		r0, #0x2c
	bhi		_080844a0
	mov		r5, #0x3
	b		_080844b8
_080844a0:
	add		r0, r1, #0x0
	sub		r0, #0xf8
	cmp		r0, #0x2c
	bhi		_080844ac
	mov		r5, #0x2
	b		_080844b8
_080844ac:
	ldr		r2, _08084564
	add		r0, r1, r2
	mov		r5, #0x0
	cmp		r0, #0x2c
	bhi		_080844b8
	mov		r5, #0x1
_080844b8:
	mov		r0, #0x1
	neg		r0, r0
	cmp		r5, r0
	beq		_08084558
	mov		r4, #0xd2
	lsl		r4, r4, #0x1
	add		r4, r8
	ldr		r0, [r4, #0x0]
	cmp		r0, r5
	beq		_08084558
	cmp		r5, #0x7
	bls		_080844dc
	ldr		r0, _08084568
	ldr		r1, _0808456c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080844dc:
	mov		r7, #0xa2
	lsl		r7, r7, #0x1
	add		r7, r8
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x3
	bls		_080844f4
	ldr		r0, _08084568
	ldr		r1, _0808456c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080844f4:
	str		r5, [r4, #0x0]
	mov		r6, #0xa5
	lsl		r6, r6, #0x2
	add		r6, r8
	ldr		r4, [r7, #0x0]
	lsl		r4, r4, #0x6
	lsl		r5, r5, #0x3
	ldr		r0, _08084570
	add		r0, r5, r0
	add		r4, r4, r0
	ldr		r1, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r2, #0x1
	mov		r3, #0x10
	bl		sub_080899f0
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldrb	r1, [r4, #0x4]
	ldr		r0, _08084574
	add		r0, r8
	strb	r1, [r0, #0x0]
	mov		r6, #0xd6
	lsl		r6, r6, #0x1
	add		r6, r8
	ldr		r4, [r7, #0x0]
	lsl		r4, r4, #0x6
	ldr		r0, _08084578
	add		r5, r5, r0
	add		r4, r4, r5
	ldr		r1, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r2, #0x1
	mov		r3, #0xf
	bl		sub_080899f0
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldrb	r1, [r4, #0x4]
	ldr		r0, _0808457c
	add		r0, r8
	strb	r1, [r0, #0x0]
_08084558:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x84562, 0x2

_08084564:	.4byte 0xfffffedb
_08084568:	.4byte 0x080dadcc @ y_tamura/tamSailing.cpp
_0808456c:	.4byte 0x0000063C
_08084570:	.4byte 0x080daf9c
_08084574:	.4byte 0x000002FB
_08084578:	.4byte 0x080dae9c
_0808457c:	.4byte 0x00000213
	thumb_func_end sub_08084424

	thumb_func_start sub_08084580
sub_08084580:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r9, r0
	ldr		r0, _080845fc
	ldr		r1, [r0, #0x0]
	ldr		r0, _08084600
	add		r1, r1, r0
	add		r0, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	add		r4, sp, #0x4
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r1, sp
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	mov		r0, sp
	add		r0, #0x5
	ldrb	r0, [r0, #0x0]
	mov		r6, sp
	add		r6, #0x1
	strb	r0, [r6, #0x0]
	mov		r0, sp
	add		r0, #0x6
	ldrb	r0, [r0, #0x0]
	mov		r5, sp
	add		r5, #0x2
	strb	r0, [r5, #0x0]
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r0, r9
	ldr		r1, [r0, #0x0]
	mov		r0, #0x5
	sub		r0, r0, r1
	mov		r10, r0
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r0, r9
	ldr		r0, [r0, #0x0]
	bl		sub_080bb610
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_08084614
	cmp		r0, #0x2
	bgt		_08084604
	cmp		r0, #0x1
	beq		_08084610
	b		_08084618

_080845fc:	.4byte 0x0200D520
_08084600:	.4byte 0x0000056C

_08084604:
	cmp		r0, #0x3
	bne		_08084618
	lsr		r0, r7, #0x1f
	add		r0, r7, r0
	asr		r7, r0, #0x1
	b		_08084618
_08084610:
	lsl		r7, r7, #0x1
	b		_08084618
_08084614:
	lsl		r0, r7, #0x1
	add		r7, r0, r7
_08084618:
	ldr		r0, _080846c8
	lsr		r1, r7, #0x1f
	add		r1, r7, r1
	asr		r1, r1, #0x1
	bl		sub_080b63dc
	mov		r8, sp
	ldr		r1, _080846cc
	mov		r2, r10
	mul		r2, r1
	add		r1, r2, #0x0
	add		r1, r1, r0
	add		r1, r1, r7
	mov		r0, r8
	mov		r5, #0x0
	ldrsb	r5, [r0, r5]
	ldrb	r6, [r6, #0x0]
	lsl		r6, r6, #0x18
	asr		r6, r6, #0x18
	mov		r2, sp
	mov		r4, #0x2
	ldrsb	r4, [r2, r4]
	add		r5, r5, r1
	cmp		r5, #0x63
	ble		_08084686
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbcac
	add		r6, r6, r0
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_080bbd44
	add		r5, r0, #0x0
	cmp		r6, #0x3b
	ble		_08084686
	mov		r0, sp
	mov		r4, #0x2
	ldrsb	r4, [r0, r4]
	add		r0, r6, #0x0
	mov		r1, #0x3c
	bl		sub_080bbcac
	add		r4, r4, r0
	add		r0, r6, #0x0
	mov		r1, #0x3c
	bl		sub_080bbd44
	add		r6, r0, #0x0
	cmp		r4, #0x9
	ble		_08084686
	mov		r5, #0x63
	mov		r6, #0x3b
	mov		r4, #0x9
_08084686:
	mov		r1, r8
	strb	r5, [r1, #0x0]
	strb	r6, [r1, #0x1]
	strb	r4, [r1, #0x2]
	add		r0, sp, #0x4
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, _080846d0
	add		r0, r9
	add		r1, sp, #0x4
	mov		r2, #0x3
	bl		sub_0808c818
	ldr		r0, _080846d4
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_080846b8
	ldr		r0, _080846d8
	mov		r1, r10
	add		r2, r7, #0x0
	bl		sub_0808c670
_080846b8:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080846c8:	.4byte 0x0200BDD4
_080846cc:	.4byte 0x00000BB8
_080846d0:	.4byte 0x00000464
_080846d4:	.4byte 0x0200CDBC
_080846d8:	.4byte 0x080dae00 @ REM:%d,DIS:%d
	thumb_func_end sub_08084580

	thumb_func_start sub_080846dc
sub_080846dc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _08084778
	add		r2, r4, r0
	mov		r1, #0x8e
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, [r2, #0x0]
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	mov		r3, #0x1
	neg		r3, r3
	cmp		r0, r3
	bne		_08084706
	ldr		r0, [r1, #0x4]
	cmp		r0, r3
	beq		_08084750
_08084706:
	ldr		r2, _0808477c
	add		r0, r4, r2
	add		r1, r4, #0x0
	add		r1, #0xfc
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	sub		r2, r2, r0
	asr		r2, r2, #0x8
	mov		r5, #0x8f
	lsl		r5, r5, #0x3
	add		r0, r4, r5
	mov		r5, #0x80
	lsl		r5, r5, #0x1
	add		r1, r4, r5
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r1, r2, #0x0
	mul		r1, r2
	add		r2, r0, #0x0
	mul		r2, r0
	add		r0, r2, #0x0
	add		r1, r1, r0
	cmp		r1, #0xff
	bhi		_08084750
	ldr		r1, [r4, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x88
	add		r1, #0x8c
	mov		r5, #0x0
	ldrsh	r0, [r0, r5]
	add		r0, r4, r0
	ldr		r2, [r1, #0x0]
	add		r1, r3, #0x0
	bl		sub_080bbc78
_08084750:
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	beq		_080847a0
	cmp		r0, r1
	ble		_08084780
	mov		r3, #0xb2
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldr		r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	b		_08084790

.incbin "base.gba", 0x84776, 0x2

_08084778:	.4byte 0x0000046C
_0808477c:	.4byte 0x00000474

_08084780:
	cmp		r0, r1
	bge		_08084796
	mov		r5, #0xb2
	lsl		r5, r5, #0x1
	add		r2, r4, r5
	ldr		r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
_08084790:
	eor		r0, r1
	orr		r1, r0
	str		r1, [r2, #0x0]
_08084796:
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0xf
	b		_0808496e
_080847a0:
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	ble		_080847b2
	b		_08084970
_080847b2:
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r3, #0xd4
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	add		r0, #0xbc
	ldr		r2, [r0, #0x0]
	mov		r5, #0xc8
	lsl		r5, r5, #0x1
	add		r0, r2, r5
	ldr		r1, [r0, #0x0]
	add		r0, r4, r5
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08084874
	mov		r1, #0xb0
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	sub		r3, #0x50
	add		r0, r2, r3
	ldr		r1, [r0, #0x0]
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	sub		r1, r1, r0
	add		r2, r1, #0x0
	cmp		r1, #0x0
	bge		_080847f0
	neg		r2, r1
_080847f0:
	ldr		r0, _08084820
	cmp		r2, r0
	bgt		_08084828
	ldr		r5, _08084824
	add		r0, r4, r5
	ldr		r5, [r0, #0x0]
	mov		r2, #0x8f
	lsl		r2, r2, #0x3
	add		r0, r4, r2
	ldr		r3, [r0, #0x0]
	cmp		r1, #0x0
	bge		_08084850
	mov		r0, #0xb0
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	sub		r0, #0x60
	add		r0, r12
	ldr		r1, [r2, #0x0]
	cmp		r1, r0
	bge		_08084850
	add		r0, r1, #0x0
	add		r0, #0x8
	str		r0, [r2, #0x0]
	b		_08084850

_08084820:	.4byte 0x000FFFFF
_08084824:	.4byte 0x00000474

_08084828:
	cmp		r1, #0x0
	ble		_08084842
	mov		r1, #0xb0
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	mov		r0, r12
	sub		r0, #0x80
	ldr		r1, [r2, #0x0]
	cmp		r1, r0
	ble		_08084842
	add		r0, r1, #0x0
	sub		r0, #0x8
	str		r0, [r2, #0x0]
_08084842:
	ldr		r2, _08084870
	add		r0, r4, r2
	ldr		r5, [r0, #0x0]
	mov		r3, #0x8f
	lsl		r3, r3, #0x3
	add		r0, r4, r3
	ldr		r3, [r0, #0x0]
_08084850:
	mov		r0, #0xb0
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	sub		r0, #0x60
	add		r0, r12
	ldr		r1, [r2, #0x0]
	cmp		r1, r0
	bgt		_08084868
	mov		r0, r12
	sub		r0, #0x80
	cmp		r1, r0
	bge		_0808486a
_08084868:
	add		r1, r0, #0x0
_0808486a:
	str		r1, [r2, #0x0]
	b		_08084882

.incbin "base.gba", 0x8486E, 0x2

_08084870:	.4byte 0x00000474

_08084874:
	ldr		r1, _080848b0
	add		r0, r4, r1
	ldr		r5, [r0, #0x0]
	mov		r2, #0x8f
	lsl		r2, r2, #0x3
	add		r0, r4, r2
	ldr		r3, [r0, #0x0]
_08084882:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r3
	add		r1, r4, #0x0
	add		r1, #0xfc
	ldr		r1, [r1, #0x0]
	sub		r1, r1, r5
	bl		sub_0808c4cc
	ldr		r2, _080848b4
	add		r0, r0, r2
	bl		sub_0808c3ac
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r2, r0, #0x0
	cmp		r0, #0x43
	bgt		_080848b8
	mov		r1, #0x0
	b		_080848e4

_080848b0:	.4byte 0x00000474
_080848b4:	.4byte 0xFFFFFC7C

_080848b8:
	cmp		r0, #0x70
	bgt		_080848c0
	mov		r1, #0x1
	b		_080848e4
_080848c0:
	cmp		r0, #0x9d
	bgt		_080848c8
	mov		r1, #0x2
	b		_080848e4
_080848c8:
	cmp		r0, #0xca
	bgt		_080848d0
	mov		r1, #0x3
	b		_080848e4
_080848d0:
	cmp		r0, #0xf7
	bgt		_080848d8
	mov		r1, #0x4
	b		_080848e4
_080848d8:
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	mov		r1, #0x6
	cmp		r2, r0
	bgt		_080848e4
	mov		r1, #0x5
_080848e4:
	cmp		r1, #0x6
	bhi		_08084970
	lsl		r0, r1, #0x2
	ldr		r1, _080848f4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x848F2, 0x2

_080848f4:	.4byte 0x080848f8
_080848f8:	.4byte 0x08084914

.incbin "base.gba", 0x848FC, 0x18

_08084914:
	mov		r3, #0xd0
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	mov		r0, #0x4
	b		_0808496e

.incbin "base.gba", 0x8491E, 0xA
	thumb_func_end sub_080846dc


.incbin "base.gba", 0x84928, 0x46

_0808496e:

.incbin "base.gba", 0x8496E, 0x2
_08084970:

.incbin "base.gba", 0x84970, 0x510
	thumb_func_start sub_08084e80
sub_08084e80:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r0, r2, #0x0
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	bl		sub_0808c4cc
	ldr		r1, _08084eb8
	add		r0, r0, r1
	bl		sub_0808c3ac
	add		r4, r0, #0x0
	add		r1, r6, #0x0
	bl		sub_0808c588
	add		r1, r5, #0x0
	add		r1, #0xfc
	ldr		r2, [r1, #0x0]
	add		r2, r2, r0
	str		r2, [r1, #0x0]
	ldr		r0, _08084ebc
	cmp		r2, r0
	bgt		_08084ec0
	cmp		r2, #0x0
	bge		_08084ec2
	mov		r2, #0x0
	b		_08084ec2

.incbin "base.gba", 0x84EB6, 0x2

_08084eb8:	.4byte 0xFFFFFC7C
_08084ebc:	.4byte 0x000FFFFF

_08084ec0:
	add		r2, r0, #0x0
_08084ec2:
	str		r2, [r1, #0x0]
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0808c5a4
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r2, [r1, #0x0]
	sub		r2, r2, r0
	str		r2, [r1, #0x0]
	ldr		r3, _08084ee8
	cmp		r2, r3
	bgt		_08084eec
	cmp		r2, #0x0
	bge		_08084eee
	mov		r2, #0x0
	b		_08084eee

.incbin "base.gba", 0x84EE6, 0x2

_08084ee8:	.4byte 0x000FFFFF

_08084eec:
	add		r2, r3, #0x0
_08084eee:
	str		r2, [r1, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x84EF6, 0x2
	thumb_func_end sub_08084e80

	thumb_func_start sub_08084ef8
sub_08084ef8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0xfc
	ldr		r0, [r0, #0x0]
	sub		r1, r1, r0
	asr		r3, r1, #0x8
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	sub		r2, r2, r0
	asr		r2, r2, #0x8
	add		r0, r3, #0x0
	mul		r0, r3
	add		r1, r2, #0x0
	mul		r1, r2
	add		r0, r0, r1
	cmp		r0, #0xff
	bls		_08084f22
	mov		r0, #0x0
	b		_08084f2c
_08084f22:
	add		r0, r4, #0x0
	add		r1, r3, #0x0
	bl		sub_08084e80
	mov		r0, #0x1
_08084f2c:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x84F32, 0xCA
	thumb_func_end sub_08084ef8

	thumb_func_start sub_08084ffc
sub_08084ffc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	mov		r0, #0xd6
	lsl		r0, r0, #0x1
	add		r6, r5, r0
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r4, [r0, #0x0]
	lsl		r4, r4, #0x6
	lsl		r1, r1, #0x3
	ldr		r0, _08085040
	add		r1, r1, r0
	add		r4, r4, r1
	ldr		r1, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r2, #0x1
	mov		r3, #0xf
	bl		sub_080899f0
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldrb	r0, [r4, #0x4]
	ldr		r1, _08085044
	add		r5, r5, r1
	strb	r0, [r5, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8503E, 0x2

_08085040:	.4byte 0x080dae9c
_08085044:	.4byte 0x00000213
	thumb_func_end sub_08084ffc

	thumb_func_start sub_08085048
sub_08085048:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	ldr		r1, [r4, #0xc]
	add		r0, r1, #0x0
	add		r0, #0x48
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0x4c]
	bl		sub_080bbc74
	add		r1, r0, #0x0
	ldr		r2, [r4, #0xc]
	add		r0, r2, #0x0
	add		r0, #0xf0
	add		r2, #0xf4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r4, r4, r0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r5, [r2, #0x0]
	add		r0, r4, #0x0
	add		r2, r6, #0x0
	mov		r3, r8
	bl		sub_080bbc84
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08085048

	thumb_func_start sub_08085094
sub_08085094:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_08089124
	ldr		r0, _080850f0
	str		r0, [r4, #0x4c]
	ldr		r0, _080850f4
	str		r0, [r4, #0xc]
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_08089124
	mov		r2, #0xa5
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	bl		sub_08089124
	mov		r1, #0xdf
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_08089124
	ldr		r2, _080850f8
	add		r0, r4, r2
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r2, #0x1
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	add		r2, #0x1
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x850EE, 0x2

_080850f0:	.4byte 0x080e2e44
_080850f4:	.4byte 0x080e2e5c
_080850f8:	.4byte 0x00000464
	thumb_func_end sub_08085094

	thumb_func_start sub_080850fc
sub_080850fc:
	push	{ r4, r5, r6, lr }
	mov		r5, #0x0
	add		r6, r0, #0x0
	add		r6, #0xb8
	add		r4, r6, #0x0
_08085106:
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xe0
	add		r2, #0xe4
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	bl		sub_080bbc74
	cmp		r0, #0x0
	beq		_08085124
	mov		r0, #0x1
	b		_08085150
_08085124:
	add		r4, #0x4
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08085106
	add		r5, r6, #0x0
	mov		r4, #0x3
_08085130:
	ldmia	r5!, { r0 }
	ldr		r2, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xd8
	add		r2, #0xdc
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r0, r0, r1
	ldr		r2, [r2, #0x0]
	mov		r1, #0x0
	bl		sub_080bbc78
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08085130
	mov		r0, #0x0
_08085150:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x85156, 0x2
	thumb_func_end sub_080850fc

	thumb_func_start sub_08085158
sub_08085158:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0xea
	lsl		r0, r0, #0x3
	add		r2, r5, r0
	add		r0, #0xe4
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	beq		_08085198
	str		r4, [r1, #0x0]
	ldr		r1, _080851a0
	lsl		r0, r4, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	neg		r0, r4
	orr		r0, r4
	lsr		r0, r0, #0x1f
	mov		r2, #0x81
	lsl		r2, r2, #0x4
	add		r1, r5, r2
	str		r0, [r1, #0x0]
	ldr		r0, _080851a4
	add		r1, r5, r0
	mov		r0, #0xb4
	str		r0, [r1, #0x0]
_08085198:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8519E, 0x2

_080851a0:	.4byte 0x080db1ec
_080851a4:	.4byte 0x00000838
	thumb_func_end sub_08085158

	thumb_func_start sub_080851a8
sub_080851a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r5, #0x0
	mov		r0, #0x10
	mov		r8, r0
	mov		r7, #0x11
	add		r4, r6, #0x0
	add		r4, #0xb8
_080851bc:
	ldr		r2, [r4, #0x0]
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	mov		r3, r8
	and		r0, r3
	cmp		r0, #0x0
	bne		_080851f6
	ldr		r1, [r2, #0xc]
	add		r0, r1, #0x0
	add		r0, #0xd0
	add		r1, #0xd4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	add		r0, r2, r0
	ldr		r1, [r1, #0x0]
	bl		sub_080bbc74
	ldr		r2, [r4, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_08082d14
	ldr		r0, [r4, #0x0]
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	str		r7, [r0, #0x0]
_080851f6:
	add		r4, #0x4
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_080851bc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x85208, 0x58
	thumb_func_end sub_080851a8

	thumb_func_start sub_08085260
sub_08085260:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r4, #0x0
	add		r7, #0xcc
	add		r6, r4, #0x0
	add		r6, #0xd0
_0808526c:
	add		r0, r4, #0x0
	bl		sub_080b7690
	mov		r1, #0x0
	ldr		r0, [r7, #0x0]
	add		r5, r4, #0x0
	add		r5, #0xd0
	cmp		r0, #0x0
	bne		_0808528e
	ldr		r0, [r6, #0x0]
	mov		r2, #0x0
	cmp		r0, #0x4
	bne		_08085288
	mov		r2, #0x1
_08085288:
	cmp		r2, #0x0
	bne		_0808528e
	mov		r1, #0x1
_0808528e:
	add		r0, r4, #0x0
	bl		sub_08082a60
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, [r5, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x4
	bne		_080852aa
	mov		r1, #0x1
_080852aa:
	cmp		r1, #0x0
	beq		_0808526c
	ldr		r0, _080852c0
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	ldr		r2, _080852c4
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080852c0:	.4byte 0x0200D520
_080852c4:	.4byte 0x0000057C

.incbin "base.gba", 0x852C8, 0x5C
	thumb_func_end sub_08085260

	thumb_func_start sub_08085324
sub_08085324:
	push	{ r4, lr }
	ldr		r0, _08085344
	ldr		r4, [r0, #0x0]
	ldr		r0, _08085348
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08085350
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _0808534c
	mov		r3, #0x0
	bl		sub_080b7724
	b		_0808535c

.incbin "base.gba", 0x85342, 0x2

_08085344:	.4byte 0x0200D530
_08085348:	.4byte 0x00000282
_0808534c:	.4byte 0xFFFF8000

_08085350:
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	ldr		r2, _08085364
	mov		r3, #0x0
	bl		sub_080b7724
_0808535c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x85362, 0x2

_08085364:	.4byte 0xFFFF8001
	thumb_func_end sub_08085324

	thumb_func_start sub_08085368
sub_08085368:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0x0
	add		r0, #0xcc
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_08085324
	add		r0, r4, #0x0
	bl		sub_08081fa0
	add		r0, r4, #0x0
	bl		sub_0808204c
	add		r0, r4, #0x0
	bl		sub_08085260
	add		r0, r4, #0x0
	bl		sub_0808216c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x85396, 0x3E
	thumb_func_end sub_08085368

	thumb_func_start sub_080853d4
sub_080853d4:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	add		r5, r3, #0x0
	mov		r1, #0x8a
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080853fc
	add		r0, r4, #0x0
	add		r0, #0xd8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080853fc
	cmp		r5, #0x0
	beq		_08085420
_080853fc:
	mov		r1, #0xd4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	bl		sub_080850fc
	cmp		r0, #0x0
	beq		_08085410
	cmp		r5, #0x0
	beq		_08085420
_08085410:
	ldr		r0, [sp, #0x0+0x18]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	add		r3, r5, #0x0
	bl		sub_08083054
_08085420:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080853d4

	thumb_func_start sub_08085428
sub_08085428:
	push	{ r4, lr }
	add		r4, r1, #0x0
	add		r0, r4, #0x0
	mov		r1, #0x3b
	mov		r2, #0x1
	mov		r3, #0x7
	bl		sub_080899f0
	mov		r1, #0x7
	add		r0, r4, #0x0
	add		r0, #0xe4
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x85452, 0x96
	thumb_func_end sub_08085428

	thumb_func_start sub_080854e8
sub_080854e8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0xdf
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	add		r0, r4, #0x0
	mov		r1, #0x39
	mov		r2, #0x1
	mov		r3, #0xe
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x85510, 0x28
	thumb_func_end sub_080854e8

	thumb_func_start sub_08085538
sub_08085538:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	ldr		r4, [r0, #0xc]
	add		r1, r4, #0x0
	add		r1, #0xf8
	add		r4, #0xfc
	mov		r6, #0x0
	ldrsh	r1, [r1, r6]
	add		r0, r0, r1
	neg		r2, r2
	neg		r3, r3
	ldr		r4, [r4, #0x0]
	add		r1, r5, #0x0
	bl		sub_080bbc80
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8555E, 0x6
	thumb_func_end sub_08085538

	thumb_func_start sub_08085564
sub_08085564:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	add		r5, r0, #0x0
	ldr		r1, _080855b8
	add		r0, sp, #0x8
	mov		r2, #0x3
	bl		sub_0808c818
	add		r0, sp, #0x4
	add		r1, sp, #0x8
	mov		r2, #0x3
	bl		sub_0808c818
	add		r4, sp, #0x4
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x3
	bl		sub_0808c818
	mov		r1, sp
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	mov		r0, sp
	add		r0, #0x5
	ldrb	r1, [r0, #0x0]
	sub		r0, #0x4
	strb	r1, [r0, #0x0]
	add		r0, #0x5
	ldrb	r1, [r0, #0x0]
	sub		r0, #0x4
	strb	r1, [r0, #0x0]
	ldr		r0, _080855bc
	add		r5, r5, r0
	add		r0, r5, #0x0
	mov		r1, sp
	mov		r2, #0x3
	bl		sub_0808c818
	add		sp, #0xc
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080855b8:	.4byte 0x080dac14
_080855bc:	.4byte 0x00000464
	thumb_func_end sub_08085564

	thumb_func_start sub_080855c0
sub_080855c0:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	mov		r5, #0x8a
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080855e2
	add		r0, r4, #0x0
	add		r0, #0xd8
	mov		r5, #0x0
	ldrsh	r0, [r0, r5]
	cmp		r0, #0x0
	bne		_080855e2
	cmp		r3, #0x0
	beq		_080855ec
_080855e2:
	ldr		r0, [sp, #0x10]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	bl		sub_08083054
_080855ec:
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080855c0

	thumb_func_start sub_080855f4
sub_080855f4:
	push	{ r4, lr }
	add		r4, r1, #0x0
	add		r0, r4, #0x0
	mov		r1, #0x3c
	mov		r2, #0x1
	mov		r3, #0x6
	bl		sub_080899f0
	mov		r1, #0x7
	add		r0, r4, #0x0
	add		r0, #0xe4
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8561E, 0xE
	thumb_func_end sub_080855f4

	thumb_func_start sub_0808562c
sub_0808562c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08083d1c
	cmp		r0, #0x0
	beq		_0808564e
	mov		r1, #0xa8
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_0808564e
	add		r0, r4, #0x0
	bl		sub_080843a8
_0808564e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x85654, 0xFC
	thumb_func_end sub_0808562c

	thumb_func_start sub_08085750
sub_08085750:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0xdf
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	add		r0, r4, #0x0
	mov		r1, #0x39
	mov		r2, #0x1
	mov		r3, #0xc
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08085750

	thumb_func_start sub_08085778
sub_08085778:
	push	{ lr }
	add		r0, r1, #0x0
	mov		r2, #0x7
	add		r1, #0xe4
	str		r2, [r1, #0x0]
	mov		r1, #0x2
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08085778

	thumb_func_start sub_08085790
sub_08085790:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r2
	add		r1, r4, #0x0
	add		r1, #0xfc
	ldr		r1, [r1, #0x0]
	sub		r1, r1, r3
	bl		sub_0808c4cc
	ldr		r1, _080857c4
	add		r0, r0, r1
	bl		sub_0808c3ac
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r2, r0, #0x0
	cmp		r0, #0x43
	bgt		_080857c8
	mov		r1, #0x0
	b		_080857f4

_080857c4:	.4byte 0xFFFFFC7C

_080857c8:
	cmp		r0, #0x70
	bgt		_080857d0
	mov		r1, #0x1
	b		_080857f4
_080857d0:
	cmp		r0, #0x9d
	bgt		_080857d8
	mov		r1, #0x2
	b		_080857f4
_080857d8:
	cmp		r0, #0xca
	bgt		_080857e0
	mov		r1, #0x3
	b		_080857f4
_080857e0:
	cmp		r0, #0xf7
	bgt		_080857e8
	mov		r1, #0x4
	b		_080857f4
_080857e8:
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	mov		r1, #0x6
	cmp		r2, r0
	bgt		_080857f4
	mov		r1, #0x5
_080857f4:
	cmp		r1, #0x6
	bhi		_08085880
	lsl		r0, r1, #0x2
	ldr		r1, _08085804
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x85802, 0x2

_08085804:	.4byte 0x08085808
_08085808:	.4byte 0x08085824

.incbin "base.gba", 0x8580C, 0x18

_08085824:
	mov		r0, #0xd0
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	mov		r0, #0x4
	b		_0808587e

.incbin "base.gba", 0x8582E, 0xA
	thumb_func_end sub_08085790


.incbin "base.gba", 0x85838, 0x46

_0808587e:

.incbin "base.gba", 0x8587E, 0x2
_08085880:

.incbin "base.gba", 0x85880, 0x17C
	thumb_func_start sub_080859fc
sub_080859fc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, #0x58
	ldr		r1, _08085a24
	ldr		r5, _08085a28
	mov		r2, #0x18
	add		r3, r5, #0x0
	bl		sub_08000a2c
	add		r4, #0x88
	ldr		r1, _08085a2c
	add		r0, r4, #0x0
	mov		r2, #0x18
	add		r3, r5, #0x0
	bl		sub_08000a2c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x85A22, 0x2

_08085a24:	.4byte 0x0600F010
_08085a28:	.4byte 0x80000003
_08085a2c:	.4byte 0x0600F050
	thumb_func_end sub_080859fc

	thumb_func_start sub_08085a30
sub_08085a30:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _08085a58
	add		r1, r4, #0x0
	add		r1, #0x58
	ldr		r5, _08085a5c
	mov		r2, #0x18
	add		r3, r5, #0x0
	bl		sub_08000a2c
	ldr		r0, _08085a60
	add		r4, #0x88
	add		r1, r4, #0x0
	mov		r2, #0x18
	add		r3, r5, #0x0
	bl		sub_08000a2c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08085a58:	.4byte 0x0600F010
_08085a5c:	.4byte 0x80000003
_08085a60:	.4byte 0x0600F050
	thumb_func_end sub_08085a30

	thumb_func_start sub_08085a64
sub_08085a64:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_08085a8e
	ldr		r4, _08085abc
	ldr		r1, _08085ac0
	ldr		r5, _08085ac4
	add		r0, r4, #0x0
	mov		r2, #0xc
	add		r3, r5, #0x0
	bl		sub_08000a2c
	add		r4, #0x18
	ldr		r1, _08085ac8
	add		r0, r4, #0x0
	mov		r2, #0xc
	add		r3, r5, #0x0
	bl		sub_08000a2c
_08085a8e:
	mov		r0, #0x2
	and		r0, r6
	cmp		r0, #0x0
	beq		_08085ab4
	ldr		r4, _08085acc
	ldr		r1, _08085ad0
	ldr		r5, _08085ac4
	add		r0, r4, #0x0
	mov		r2, #0xc
	add		r3, r5, #0x0
	bl		sub_08000a2c
	add		r4, #0x18
	ldr		r1, _08085ad4
	add		r0, r4, #0x0
	mov		r2, #0xc
	add		r3, r5, #0x0
	bl		sub_08000a2c
_08085ab4:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x85ABA, 0x2

_08085abc:	.4byte 0x080dad90
_08085ac0:	.4byte 0x0600F010
_08085ac4:	.4byte 0x80000003
_08085ac8:	.4byte 0x0600F050
_08085acc:	.4byte 0x080dad9c
_08085ad0:	.4byte 0x0600F01C
_08085ad4:	.4byte 0x0600F05C
	thumb_func_end sub_08085a64

	thumb_func_start sub_08085ad8
sub_08085ad8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, r0, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _08085dd8
	str		r0, [r7, #0x54]
	add		r0, r7, #0x0
	add		r0, #0x58
	bl		sub_08089124
	ldr		r0, _08085ddc
	str		r0, [r7, #0x4c]
	ldr		r0, _08085de0
	str		r0, [r7, #0x54]
	ldr		r0, _08085de4
	str		r0, [r7, #0xc]
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	mov		r5, #0x1
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x1
	bl		sub_0806dcec
	str		r5, [r4, #0x0]
	mov		r2, #0xae
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	mov		r0, #0xff
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_080c361c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080c3610
	mov		r3, #0xe4
	lsl		r3, r3, #0x1
	add		r3, r3, r7
	mov		r9, r3
	mov		r0, r9
	bl		sub_08089124
	mov		r0, #0xac
	lsl		r0, r0, #0x2
	add		r0, r7, r0
	str		r0, [sp, #0x0]
	bl		sub_08089124
	mov		r1, #0xe6
	lsl		r1, r1, #0x2
	add		r1, r7, r1
	str		r1, [sp, #0x4]
	add		r0, r1, #0x0
	bl		sub_08089124
	mov		r5, #0x90
	lsl		r5, r5, #0x3
	add		r2, r7, r5
	str		r2, [sp, #0x8]
	add		r0, r2, #0x0
	bl		sub_08089124
	mov		r3, #0xad
	lsl		r3, r3, #0x3
	add		r3, r7, r3
	str		r3, [sp, #0xc]
	add		r0, r3, #0x0
	bl		sub_080888d0
	ldr		r0, _08085de8
	add		r0, r7, r0
	str		r0, [sp, #0x10]
	bl		sub_080888d0
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r6, r7, r1
	ldr		r4, _08085dec
	add		r0, r4, #0x0
	mov		r1, #0xa3
	lsl		r1, r1, #0x3
	add		r2, r5, #0x0
	bl		sub_080b73f8
	add		r1, r7, #0x0
	bl		sub_08086c7c
	add		r1, r0, #0x0
	str		r1, [r6, #0x0]
	mov		r2, #0xa8
	lsl		r2, r2, #0x1
	add		r2, r2, r4
	mov		r8, r2
	mov		r0, r8
	mov		r2, #0x0
	bl		sub_080b781c
	mov		r3, #0xd0
	lsl		r3, r3, #0x1
	add		r6, r7, r3
	add		r0, r4, #0x0
	mov		r1, #0x94
	lsl		r1, r1, #0x2
	add		r2, r5, #0x0
	bl		sub_080b73f8
	add		r1, r7, #0x0
	bl		sub_08088b88
	add		r1, r0, #0x0
	str		r1, [r6, #0x0]
	mov		r0, r8
	mov		r2, #0x0
	bl		sub_080b781c
	add		r0, r7, #0x0
	bl		sub_08086a68
	ldr		r1, _08085df0
	add		r0, r7, r1
	mov		r6, #0x1
	neg		r6, r6
	str		r6, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_08086b2c
	ldr		r0, _08085df4
	ldr		r1, _08085df8
	ldr		r2, _08085dfc
	bl		sub_08005fd0
	mov		r2, #0xd6
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r6, [r0, #0x0]
	mov		r3, #0xda
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	mov		r1, #0x0
	mov		r8, r1
	str		r1, [r0, #0x0]
	ldr		r1, _08085e00
	add		r2, #0xc0
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r3, #0x7d
	add		r0, r7, r3
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	sub		r2, #0x48
	add		r0, r7, r2
	mov		r3, #0x5
	strh	r3, [r0, #0x0]
	mov		r0, r9
	mov		r1, #0x0
	add		r2, r6, #0x0
	add		r3, r6, #0x0
	bl		sub_080891a4
	mov		r1, #0xe0
	lsl		r1, r1, #0x9
	mov		r2, #0xc8
	lsl		r2, r2, #0x8
	mov		r3, #0x9c
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	mov		r1, #0x9d
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r5, #0x18
	mov		r2, #0x28
	mov		r9, r2
	add		r3, #0xc
	add		r0, r7, r3
	str		r5, [r0, #0x0]
	add		r1, #0x4
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r3, #0x8
	add		r0, r7, r3
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r4, _08085e04
	add		r2, #0xd4
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	add		r3, #0x95
	add		r0, r7, r3
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	sub		r2, #0x48
	add		r0, r7, r2
	mov		r3, #0x5
	strh	r3, [r0, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r1, #0x0
	add		r2, r6, #0x0
	add		r3, r6, #0x0
	bl		sub_080891a4
	mov		r1, #0xd0
	lsl		r1, r1, #0x9
	mov		r0, #0xcc
	lsl		r0, r0, #0x8
	mov		r10, r0
	mov		r2, #0xd6
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xd7
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r1, r10
	str		r1, [r0, #0x0]
	add		r2, #0xc
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r3, #0x4
	add		r0, r7, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r3, #0xc
	add		r0, r7, r3
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r4, #0x48
	add		r2, #0xd4
	add		r0, r7, r2
	str		r4, [r0, #0x0]
	add		r3, #0x95
	add		r0, r7, r3
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	sub		r2, #0x48
	add		r0, r7, r2
	mov		r3, #0x5
	strh	r3, [r0, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, #0x0
	add		r2, r6, #0x0
	add		r3, r6, #0x0
	bl		sub_080891a4
	mov		r1, #0xf0
	lsl		r1, r1, #0x9
	mov		r2, #0x88
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	ldr		r3, _08085e08
	add		r0, r7, r3
	mov		r1, r10
	str		r1, [r0, #0x0]
	add		r2, #0xc
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r3, #0x4
	add		r0, r7, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r3, #0xc
	add		r0, r7, r3
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r1, _08085e0c
	add		r2, #0xd4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r3, #0x95
	add		r0, r7, r3
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	sub		r2, #0x48
	add		r0, r7, r2
	mov		r3, #0x5
	strh	r3, [r0, #0x0]
	ldr		r0, [sp, #0x8]
	mov		r1, #0x0
	add		r2, r6, #0x0
	add		r3, r6, #0x0
	bl		sub_080891a4
	mov		r1, #0x8c
	lsl		r1, r1, #0xa
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	mov		r3, #0xa5
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	ldr		r1, _08085e10
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	ldr		r2, _08085e14
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r3, #0x8
	add		r0, r7, r3
	mov		r1, r9
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	add		r3, #0xc
	add		r0, r7, r3
	mov		r1, r8
	str		r1, [r0, #0x0]
	mov		r4, #0xe0
	lsl		r4, r4, #0x1
	ldr		r0, [sp, #0xc]
	add		r1, r4, #0x0
	mov		r2, #0xa8
	mov		r3, #0x0
	bl		sub_08088458
	ldr		r1, _08085e18
	ldr		r0, [sp, #0xc]
	bl		sub_08088580
	ldr		r0, [sp, #0x10]
	add		r1, r4, #0x0
	mov		r2, #0xa8
	mov		r3, #0x1
	bl		sub_08088458
	ldr		r1, _08085e1c
	ldr		r0, [sp, #0x10]
	bl		sub_08088580
	mov		r2, #0xde
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	mov		r3, r8
	str		r3, [r0, #0x0]
	mov		r1, #0xdc
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	str		r3, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x4
	bl		sub_08001884
	mov		r2, #0xe2
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	str		r0, [r1, #0x0]
	add		r4, r7, r4
	mov		r3, r8
	str		r3, [r4, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x85DD6, 0x2

_08085dd8:	.4byte 0x080e3124
_08085ddc:	.4byte 0x080e2fcc
_08085de0:	.4byte 0x080e2fb4
_08085de4:	.4byte 0x080e2fe4
_08085de8:	.4byte 0x00000D9C
_08085dec:	.4byte 0x0200DA00
_08085df0:	.4byte 0x000015D0
_08085df4:	.4byte 0x02000E4C
_08085df8:	.4byte 0x80808080
_08085dfc:	.4byte 0x080db25a
_08085e00:	.4byte 0x080db2ac
_08085e04:	.4byte 0x080db2dc
_08085e08:	.4byte 0x00000444
_08085e0c:	.4byte 0x080db36c
_08085e10:	.4byte 0x0000052C
_08085e14:	.4byte 0x00000534
_08085e18:	.4byte 0x000186A0
_08085e1c:	.4byte 0x00001B58
	thumb_func_end sub_08085ad8

	thumb_func_start sub_08085e20
sub_08085e20:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	ldr		r5, _08085e58
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08085e3e
	ldr		r0, _08085e5c
	mov		r1, #0xa3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08085e3e:
	ldr		r5, [r5, #0x0]
	ldr		r0, _08085e60
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08085e68
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08085e64
	mov		r3, #0x0
	bl		sub_080b7724
	b		_08085e74

_08085e58:	.4byte 0x0200D530
_08085e5c:	.4byte 0x080db264 @ y_tamura/tamSynchronized.cpp
_08085e60:	.4byte 0x00000282
_08085e64:	.4byte 0xFFFF8000

_08085e68:
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08085e98
	mov		r3, #0x0
	bl		sub_080b7724
_08085e74:
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r9, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r1, r1, r4
	mov		r8, r1
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r7, r4, r2
	mov		r3, #0xd4
	lsl		r3, r3, #0x1
	add		r6, r4, r3
	add		r5, r4, #0x0
	add		r5, #0x40
	b		_08085ef4

.incbin "base.gba", 0x85E96, 0x2

_08085e98:	.4byte 0xFFFF8001

_08085e9c:
	ldr		r0, [r0, #0x7c]
	cmp		r0, #0x0
	beq		_08085ef4
	mov		r1, #0xd0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r2, [r0, #0x0]
	mov		r1, #0x1
	mov		r3, #0x8a
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	add		r3, #0xec
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	mov		r2, #0xd2
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldr		r2, [r0, #0x0]
	sub		r3, #0xec
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	add		r3, #0xec
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	mov		r2, #0xa2
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xdc
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	mov		r2, #0x8b
	lsl		r2, r2, #0x3
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xe2
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldr		r1, [r0, #0x0]
	add		r2, #0xe8
	add		r0, r4, r2
	str		r1, [r0, #0x0]
_08085ef4:
	add		r0, r4, #0x0
	bl		sub_080b7690
	mov		r3, r9
	ldr		r2, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xfc
	ldr		r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	mov		r2, r8
	str		r1, [r2, #0x0]
	str		r0, [r7, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_08085f4a
	add		r3, #0xc0
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08085f4a
	mov		r1, #0xe4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808991c
	mov		r2, #0xac
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	bl		sub_0808991c
	mov		r3, #0xe6
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	bl		sub_0808991c
	mov		r1, #0x90
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	bl		sub_0808991c
_08085f4a:
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0800067c
	ldr		r0, _08085f68
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08085e9c
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08085f68:	.4byte 0x0200D530
	thumb_func_end sub_08085e20

	thumb_func_start sub_08085f6c
sub_08085f6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	ldr		r0, _08086060
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x2c]
	add		r0, r5, #0x0
	ldr		r2, _08086064
	mov		r3, #0x1
	bl		sub_080b7724
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r10, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r1, r1, r4
	mov		r9, r1
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r2, r2, r4
	mov		r8, r2
	mov		r3, #0xd4
	lsl		r3, r3, #0x1
	add		r7, r4, r3
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r6, r4, r0
_08085fac:
	add		r0, r4, #0x0
	bl		sub_080b7690
	mov		r1, r10
	ldr		r2, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xfc
	ldr		r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	mov		r2, r9
	str		r1, [r2, #0x0]
	mov		r3, r8
	str		r0, [r3, #0x0]
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_08086000
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_08086000
	mov		r1, #0xe4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808991c
	mov		r2, #0xac
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	bl		sub_0808991c
	mov		r3, #0xe6
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	bl		sub_0808991c
	mov		r1, #0x90
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	bl		sub_0808991c
_08086000:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0800067c
	add		r0, r5, #0x0
	bl		sub_0802b5f4
	cmp		r0, #0x2
	bne		_08085fac
	mov		r2, #0xd6
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r3, #0xd0
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_08088918
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_08088918
	bl		sub_080706ac
	add		r1, r4, #0x0
	add		r1, #0x54
	str		r1, [r0, #0x54]
	add		r0, r4, #0x0
	bl		sub_08088be8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8605E, 0x2

_08086060:	.4byte 0x0200D518
_08086064:	.4byte 0xFFFF8000
	thumb_func_end sub_08085f6c

	thumb_func_start sub_08086068
sub_08086068:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r8, r0
	mov		r1, #0xd4
	lsl		r1, r1, #0x1
	add		r1, r4, r1
	str		r1, [sp, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r5, r4, r2
	mov		r3, #0xde
	lsl		r3, r3, #0x1
	add		r3, r4, r3
	str		r3, [sp, #0x4]
	mov		r0, #0xd2
	lsl		r0, r0, #0x1
	add		r0, r4, r0
	str		r0, [sp, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r1, r4, r1
	str		r1, [sp, #0xC]
	sub		r2, #0xbc
	add		r2, r2, r4
	mov		r10, r2
	mov		r3, #0xda
	lsl		r3, r3, #0x1
	add		r3, r3, r4
	mov		r9, r3
_080860ae:
	add		r0, r4, #0x0
	bl		sub_080b7690
	mov		r0, r8
	cmp		r0, #0x0
	bne		_080860cc
	mov		r1, #0x1
	mov		r8, r1
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_080860cc:
	add		r0, r4, #0x0
	add		r0, #0x58
	bl		sub_08089350
	ldr		r2, [sp, #0x0]
	ldr		r0, [r2, #0x0]
	add		r3, r4, #0x0
	add		r3, #0x58
	str		r3, [sp, #0x10]
	mov		r1, #0xd4
	lsl		r1, r1, #0x1
	add		r7, r4, r1
	cmp		r0, #0x0
	bne		_080860f8
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_080860f8
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	bl		sub_0806df2c
_080860f8:
	ldr		r3, [sp, #0x4]
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_0808611a
	ldr		r0, [sp, #0x8]
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xfc
	ldr		r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	ldr		r2, [sp, #0xC]
	str		r1, [r2, #0x0]
	mov		r3, r10
	str		r0, [r3, #0x0]
_0808611a:
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_0808614e
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0808614e
	mov		r1, #0xe4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_0808991c
	mov		r2, #0xac
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	bl		sub_0808991c
	mov		r3, #0xe6
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	bl		sub_0808991c
	mov		r1, #0x90
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	bl		sub_0808991c
_0808614e:
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0800067c
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	add		r6, r4, #0x0
	add		r6, #0x40
	cmp		r0, #0x0
	beq		_080860ae
	bl		sub_080706ac
	ldr		r1, [r0, #0x2c]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_080b7724
	mov		r5, #0x3c
	mov		r3, #0xe0
	lsl		r3, r3, #0x1
	add		r3, r3, r4
	mov		r8, r3
_0808617e:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_080861ba
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080861ba
	mov		r2, #0xe4
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	bl		sub_0808991c
	mov		r3, #0xac
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	bl		sub_0808991c
	mov		r1, #0xe6
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	bl		sub_0808991c
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	add		r0, r4, r2
	bl		sub_0808991c
_080861ba:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_0800067c
	sub		r5, #0x1
	cmp		r5, #0x0
	bgt		_0808617e
	mov		r1, #0xe0
	lsl		r1, r1, #0x9
	mov		r2, #0xa4
	lsl		r2, r2, #0x8
	ldr		r0, [sp, #0x10]
	mov		r3, #0xb4
	bl		sub_08089880
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x861EA, 0x3E

_08086228:	.4byte 0x08086258

.incbin "base.gba", 0x8622C, 0x2C
	thumb_func_end sub_08086068


.incbin "base.gba", 0x86258, 0x550

_080867a8:

.incbin "base.gba", 0x867A8, 0x2C
_080867d4:

.incbin "base.gba", 0x867D4, 0x294
	thumb_func_start sub_08086a68
sub_08086a68:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r3, #0x0
	ldr		r1, _08086b1c
	add		r1, r1, r0
	mov		r10, r1
	mov		r0, r10
	str		r0, [sp, #0x0]
_08086a80:
	lsl		r2, r3, #0x2
	ldr		r1, _08086b20
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _08086b24
	add		r0, r0, r1
	ldr		r7, [r0, #0x0]
	mov		r0, r10
	add		r1, r0, r2
	ldr		r0, [r7, #0x0]
	str		r0, [r1, #0x0]
	ldr		r5, [r7, #0x4]
	mov		r1, #0x0
	mov		r8, r1
	mov		r9, r2
	add		r3, #0x1
	str		r3, [sp, #0x4]
	cmp		r5, #0x0
	beq		_08086af4
	ldr		r6, [sp, #0x0]
	add		r6, r9
_08086aac:
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bb608
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_080bb600
	add		r5, r0, #0x0
	cmp		r4, #0x0
	bne		_08086ac6
	mov		r4, #0xa
_08086ac6:
	ldr		r0, _08086b28
	add		r1, r4, #0x0
	bl		sub_080b63dc
	add		r4, r0, #0x0
	mov		r1, r8
	add		r2, r1, #0x1
	cmp		r1, #0x0
	ble		_08086ae4
_08086ad8:
	lsl		r0, r4, #0x2
	add		r0, r0, r4
	lsl		r4, r0, #0x1
	sub		r1, #0x1
	cmp		r1, #0x0
	bgt		_08086ad8
_08086ae4:
	ldr		r0, [r6, #0x0]
	add		r0, r0, r4
	str		r0, [r6, #0x0]
	mov		r8, r2
	cmp		r2, #0x5
	bgt		_08086af4
	cmp		r5, #0x0
	bne		_08086aac
_08086af4:
	mov		r2, r10
	add		r2, r9
	ldr		r0, [r7, #0x0]
	ldr		r1, [r7, #0x4]
	add		r1, r0, r1
	ldr		r0, [r2, #0x0]
	cmp		r0, r1
	ble		_08086b06
	str		r1, [r2, #0x0]
_08086b06:
	ldr		r3, [sp, #0x4]
	cmp		r3, #0x3
	ble		_08086a80
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08086b1c:	.4byte 0x000015D0
_08086b20:	.4byte 0x080db6d8
_08086b24:	.4byte 0x0200BDBC
_08086b28:	.4byte 0x0200BDD4
	thumb_func_end sub_08086a68

	thumb_func_start sub_08086b2c
sub_08086b2c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	mov		r8, r0
	add		r0, sp, #0xc
	mov		r10, r0
	ldr		r1, _08086b78
	mov		r9, r1
	mov		r0, r8
	add		r0, r9
	mov		r12, r0
_08086b48:
	mov		r7, #0x0
	mov		r6, #0x0
_08086b4c:
	add		r4, r6, #0x1
	add		r3, r4, #0x0
	cmp		r4, #0x3
	bgt		_08086b88
	lsl		r0, r6, #0x2
	mov		r1, r12
	add		r5, r1, r0
	lsl		r0, r4, #0x2
	add		r0, r9
	mov		r1, r8
	add		r2, r0, r1
_08086b62:
	ldr		r1, [r5, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bne		_08086b80
	mov		r7, #0x1
	cmp		r6, #0x0
	bne		_08086b7c
	sub		r0, r1, #0x1
	str		r0, [r2, #0x0]
	b		_08086b80

.incbin "base.gba", 0x86B76, 0x2

_08086b78:	.4byte 0x000015D0

_08086b7c:
	sub		r0, r1, #0x1
	str		r0, [r5, #0x0]
_08086b80:
	add		r2, #0x4
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_08086b62
_08086b88:
	add		r6, r4, #0x0
	cmp		r6, #0x2
	ble		_08086b4c
	cmp		r7, #0x1
	beq		_08086b48
	mov		r3, #0x0
	ldr		r4, _08086c30
	add		r4, r8
	add		r2, sp, #0x8
	mov		r1, r10
_08086b9c:
	str		r3, [r1, #0x0]
	ldmia	r4!, { r0 }
	str		r0, [r2, #0x0]
	add		r2, #0x8
	add		r1, #0x8
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_08086b9c
	mov		r0, #0x0
_08086bae:
	add		r7, r0, #0x1
	add		r6, r7, #0x0
	cmp		r7, #0x3
	bgt		_08086be6
	lsl		r0, r0, #0x3
	mov		r5, sp
	add		r5, r5, r0
	add		r5, #0x8
	lsl		r0, r7, #0x3
	add		r4, r0, #0x0
	add		r4, sp
	add		r4, #0x8
_08086bc6:
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bge		_08086bde
	ldr		r2, [r5, #0x0]
	ldr		r3, [r5, #0x4]
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x4]
	str		r0, [r5, #0x0]
	str		r1, [r5, #0x4]
	str		r2, [r4, #0x0]
	str		r3, [r4, #0x4]
_08086bde:
	add		r4, #0x8
	add		r6, #0x1
	cmp		r6, #0x3
	ble		_08086bc6
_08086be6:
	add		r0, r7, #0x0
	cmp		r0, #0x2
	ble		_08086bae
	mov		r2, #0x0
	mov		r3, #0xaf
	lsl		r3, r3, #0x5
	add		r3, r8
	mov		r1, r10
_08086bf6:
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r3, r0
	str		r2, [r0, #0x0]
	add		r1, #0x8
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_08086bf6
	mov		r0, #0x1
	neg		r0, r0
	mov		r10, r0
	ldr		r4, _08086c30
	add		r4, r8
	ldr		r5, _08086c34
	mov		r1, #0x3
	mov		r9, r1
_08086c16:
	ldr		r6, [r4, #0x10]
	ldr		r7, [r5, #0x0]
	ldr		r0, [r5, #0x4]
	mov		r8, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, r10
	beq		_08086c38
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	bl		sub_080bbcac
	str		r0, [sp, #0x0]
	b		_08086c3c

_08086c30:	.4byte 0x000015D0
_08086c34:	.4byte 0x080db6e8

_08086c38:
	mov		r1, r10
	str		r1, [sp, #0x0]
_08086c3c:
	ldr		r0, [r4, #0x0]
	cmp		r0, r10
	beq		_08086c4a
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	bl		sub_080bbd44
_08086c4a:
	str		r0, [sp, #0x4]
	ldr		r0, _08086c78
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	mov		r3, r8
	bl		sub_080062b8
	add		r4, #0x4
	add		r5, #0x8
	mov		r0, #0x1
	neg		r0, r0
	add		r9, r0
	mov		r1, r9
	cmp		r1, #0x0
	bge		_08086c16
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08086c78:	.4byte 0x02000E4C
	thumb_func_end sub_08086b2c

	thumb_func_start sub_08086c7c
sub_08086c7c:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	add		r4, r0, #0x0
	mov		r9, r1
	bl		sub_08086d80
	ldr		r0, _08086d68
	str		r0, [r4, #0x4c]
	ldr		r0, _08086d6c
	str		r0, [r4, #0xc]
	mov		r0, #0x94
	lsl		r0, r0, #0x2
	add		r5, r4, r0
	add		r0, r5, #0x0
	bl		sub_08089124
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r6, r4, r1
	add		r0, r6, #0x0
	bl		sub_08089124
	mov		r0, #0x84
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	mov		r8, r0
	bl		sub_08089124
	mov		r0, #0xa1
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	ldr		r0, _08086d70
	str		r0, [r1, #0x0]
	ldr		r0, _08086d74
	add		r1, r4, r0
	ldr		r0, _08086d78
	str		r0, [r1, #0x0]
	mov		r0, #0xa2
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r1, r9
	str		r1, [r0, #0x0]
	mov		r0, #0x91
	lsl		r0, r0, #0x2
	add		r1, r4, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0xa8
	lsl		r1, r1, #0x9
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r4, #0x0
	bl		sub_08088b3c
	mov		r0, #0x8a
	lsl		r0, r0, #0x2
	add		r1, r4, r0
	ldr		r0, _08086d7c
	ldr		r0, [r0, #0x10]
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_08087c34
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080889f0
	add		r0, r5, #0x0
	mov		r1, #0xc
	mov		r2, #0x3
	mov		r3, #0x4
	bl		sub_080899f0
	add		r0, r5, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	add		r0, r6, #0x0
	mov		r1, #0xe
	mov		r2, #0x3
	mov		r3, #0x2
	bl		sub_080899f0
	add		r0, r6, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, r8
	mov		r1, #0xd
	mov		r2, #0x3
	mov		r3, #0x3
	bl		sub_080899f0
	mov		r0, r8
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	add		r0, r4, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x86D66, 0x2

_08086d68:	.4byte 0x080e300c
_08086d6c:	.4byte 0x080e3024
_08086d70:	.4byte 0x00003A98
_08086d74:	.4byte 0x0000050C
_08086d78:	.4byte 0x00002710
_08086d7c:	.4byte 0x0200BDA8
	thumb_func_end sub_08086c7c

	thumb_func_start sub_08086d80
sub_08086d80:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_080b74f4
	add		r0, r4, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	add		r0, r4, #0x0
	add		r0, #0x54
	bl		sub_08089124
	ldr		r0, _08086e10
	str		r0, [r4, #0x4c]
	ldr		r0, _08086e14
	str		r0, [r4, #0xc]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	bl		sub_08089124
	mov		r2, #0x92
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r3, #0x91
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	mov		r2, #0x1
	neg		r2, r2
	str		r2, [r0, #0x0]
	mov		r5, #0x8c
	lsl		r5, r5, #0x2
	add		r0, r4, r5
	str		r1, [r0, #0x0]
	sub		r3, #0xc
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	add		r5, #0xc
	add		r0, r4, r5
	str		r1, [r0, #0x0]
	add		r3, #0x8
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	sub		r5, #0x10
	add		r0, r4, r5
	str		r2, [r0, #0x0]
	mov		r2, #0x8a
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	mov		r3, #0x18
	mov		r2, #0x40
	mov		r5, #0x84
	lsl		r5, r5, #0x1
	add		r0, r4, r5
	str		r3, [r0, #0x0]
	sub		r5, #0x4
	add		r0, r4, r5
	str		r2, [r0, #0x0]
	add		r2, #0xcc
	add		r0, r4, r2
	str		r3, [r0, #0x0]
	add		r3, #0xf8
	add		r0, r4, r3
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x86E0E, 0x2

_08086e10:	.4byte 0x080e30fc
_08086e14:	.4byte 0x080e30bc
	thumb_func_end sub_08086d80

	thumb_func_start sub_08086e18
sub_08086e18:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x58
	add		r7, r0, #0x0
	str		r1, [sp, #0x0]
	cmp		r1, #0x0
	bne		_08086e30
	bl		sub_080879f8
_08086e30:
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	add		r4, r0, r2
	mov		r1, #0x0
	mov		r3, #0xa2
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	sub		r0, #0x3
	cmp		r0, #0x1
	bhi		_08086e50
	mov		r1, #0x1
_08086e50:
	cmp		r1, #0x0
	beq		_08086e6c
	add		r0, r4, #0x0
	bl		sub_080c35a4
	cmp		r0, #0x1
	bne		_08086e66
	ldr		r0, [r4, #0x0]
	bl		sub_0809668c
	b		_08086e68
_08086e66:
	mov		r0, #0x0
_08086e68:
	str		r0, [sp, #0x4]
	b		_08086e70
_08086e6c:
	mov		r4, #0x0
	str		r4, [sp, #0x4]
_08086e70:
	mov		r2, #0x8e
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, [sp, #0x4]
	cmp		r0, r1
	blt		sub_08086e82
	bl		sub_080879da
	thumb_func_end sub_08086e18

	non_word_aligned_thumb_func_start sub_08086e82
sub_08086e82:
	ldr		r1, _08086ee8
	mov		r3, #0x8f
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x8]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x8]
	mov		r0, #0x1
	neg		r0, r0
	ldr		r4, [sp, #0x8]
	cmp		r4, r0
	bne		_08086ea4
	bl		sub_080879f8
_08086ea4:
	add		r1, r7, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0x8d
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0x8c
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	sub		r0, #0x1
	add		r2, r7, #0x0
	add		r2, #0x54
	str		r2, [sp, #0x4c]
	add		r3, r7, #0x0
	add		r3, #0xfc
	str		r3, [sp, #0x50]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r4, r7, r4
	str		r4, [sp, #0x54]
	cmp		r0, #0x8
	bls		_08086ede
	bl		sub_08087988
_08086ede:
	lsl		r0, r0, #0x2
	ldr		r1, _08086eec
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08086ee8:	.4byte 0x0200BDA8
_08086eec:	.4byte 0x08086ef0
_08086ef0:	.4byte 0x08087988 @ sub_08087988

.incbin "base.gba", 0x86EF4, 0x20
	thumb_func_end sub_08086e82


.incbin "base.gba", 0x86F14, 0xA74
	thumb_func_start sub_08087988
sub_08087988:
	ldr		r0, [sp, #0x4c]
	bl		sub_08089350
	ldr		r3, [sp, #0x50]
	ldr		r1, [r3, #0x0]
	ldr		r4, [sp, #0x54]
	ldr		r2, [r4, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r5, r7, r0
	mov		r3, #0xf4
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	mov		r4, #0xf6
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	ldr		r0, [sp, #0x4c]
	bl		sub_0808991c
	add		r0, r5, #0x0
	bl		sub_0808991c
	ldr		r1, [r7, #0xc]
	mov		r2, #0x30
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r2, [r1, #0x34]
	ldr		r1, [sp, #0x0]
	bl		sub_080bbc78
	mov		r2, #0x8e
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	ldr		r3, [sp, #0x4]
	cmp		r0, r3
	bge		sub_080879da
	bl		sub_08086e82
	thumb_func_end sub_08087988

	non_word_aligned_thumb_func_start sub_080879da
sub_080879da:
	mov		r4, #0x8c
	lsl		r4, r4, #0x2
	add		r0, r7, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		sub_080879f8
	add		r0, r7, #0x0
	add		r0, #0x54
	bl		sub_0808991c
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	bl		sub_0808991c
	thumb_func_end sub_080879da

	thumb_func_start sub_080879f8
sub_080879f8:
	add		sp, #0x58
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080879f8

	thumb_func_start sub_08087a08
sub_08087a08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	add		r0, r5, #0x0
	bl		sub_080892b8
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087a3a
	mov		r2, #0x81
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087a3a
	add		r0, r5, #0x0
	bl		sub_0808e4a0
_08087a3a:
	add		r5, r4, #0x0
	add		r5, #0x54
	add		r0, r5, #0x0
	bl		sub_080892b8
	mov		r3, #0x8a
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087a62
	mov		r6, #0x8c
	lsl		r6, r6, #0x1
	add		r0, r4, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087a62
	add		r0, r5, #0x0
	bl		sub_0808e4a0
_08087a62:
	add		r3, r4, #0x0
	add		r3, #0xfc
	ldr		r0, [r3, #0x0]
	ldr		r1, _08087aa4
	add		r0, r0, r1
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r2, r4, r6
	ldr		r1, [r2, #0x0]
	mov		r6, #0xbe
	lsl		r6, r6, #0x2
	add		r5, r4, r6
	str		r0, [r5, #0x0]
	mov		r0, #0xbf
	lsl		r0, r0, #0x2
	add		r6, r4, r0
	str		r1, [r6, #0x0]
	mov		r1, #0xbb
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	add		r7, r3, #0x0
	mov		r8, r2
	cmp		r0, #0x1
	bne		_08087aa8
	ldr		r0, [r5, #0x0]
	asr		r0, r0, #0x8
	mov		r2, #0xa9
	lsl		r2, r2, #0x2
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x0]
	b		_08087ac2

_08087aa4:	.4byte 0xFFFFE000

_08087aa8:
	ldr		r1, _08087b28
	ldr		r0, [r5, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	mov		r2, #0xa9
	lsl		r2, r2, #0x2
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	ldr		r1, _08087b2c
	ldr		r0, [r6, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
_08087ac2:
	asr		r0, r0, #0x8
	ldr		r3, _08087b30
	add		r1, r4, r3
	strh	r0, [r1, #0x0]
	mov		r6, #0x94
	lsl		r6, r6, #0x2
	add		r1, r4, r6
	mov		r2, #0xc4
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087aee
	mov		r3, #0xc5
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087aee
	add		r0, r1, #0x0
	bl		sub_0808e4a0
_08087aee:
	ldr		r0, [r7, #0x0]
	mov		r6, r8
	ldr		r1, [r6, #0x0]
	mov		r3, #0xf8
	lsl		r3, r3, #0x2
	add		r2, r4, r3
	str		r0, [r2, #0x0]
	mov		r6, #0xf9
	lsl		r6, r6, #0x2
	add		r3, r4, r6
	str		r1, [r3, #0x0]
	mov		r1, #0xf5
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08087b38
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x8
	mov		r2, #0xe3
	lsl		r2, r2, #0x2
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	ldr		r3, _08087b34
	add		r1, r4, r3
	b		_08087b58

.incbin "base.gba", 0x87B26, 0x2

_08087b28:	.4byte 0x0200BDD0
_08087b2c:	.4byte 0x0200BDCC
_08087b30:	.4byte 0x000002A6
_08087b34:	.4byte 0x0000038E

_08087b38:
	ldr		r1, _08087bb8
	ldr		r0, [r2, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	mov		r6, #0xe3
	lsl		r6, r6, #0x2
	add		r1, r4, r6
	strh	r0, [r1, #0x0]
	ldr		r1, _08087bbc
	ldr		r0, [r3, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	ldr		r2, _08087bc0
	add		r1, r4, r2
_08087b58:
	strh	r0, [r1, #0x0]
	mov		r3, #0xce
	lsl		r3, r3, #0x2
	add		r1, r4, r3
	mov		r6, #0xfe
	lsl		r6, r6, #0x2
	add		r0, r4, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087b7e
	mov		r2, #0xff
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087b7e
	add		r0, r1, #0x0
	bl		sub_0808e4a0
_08087b7e:
	ldr		r1, [r7, #0x0]
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x5
	add		r0, r0, r6
	mov		r3, #0x99
	lsl		r3, r3, #0x3
	add		r2, r4, r3
	str		r1, [r2, #0x0]
	ldr		r6, _08087bc4
	add		r3, r4, r6
	str		r0, [r3, #0x0]
	ldr		r1, _08087bc8
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08087bd4
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x8
	ldr		r2, _08087bcc
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	asr		r0, r0, #0x8
	ldr		r3, _08087bd0
	add		r1, r4, r3
	b		_08087bf2

.incbin "base.gba", 0x87BB6, 0x2

_08087bb8:	.4byte 0x0200BDD0
_08087bbc:	.4byte 0x0200BDCC
_08087bc0:	.4byte 0x0000038E
_08087bc4:	.4byte 0x000004CC
_08087bc8:	.4byte 0x000004BC
_08087bcc:	.4byte 0x00000474
_08087bd0:	.4byte 0x00000476

_08087bd4:
	ldr		r1, _08087c20
	ldr		r0, [r2, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	ldr		r6, _08087c24
	add		r1, r4, r6
	strh	r0, [r1, #0x0]
	ldr		r1, _08087c28
	ldr		r0, [r3, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	ldr		r2, _08087c2c
	add		r1, r4, r2
_08087bf2:
	strh	r0, [r1, #0x0]
	mov		r3, #0x84
	lsl		r3, r3, #0x3
	add		r1, r4, r3
	mov		r6, #0x9c
	lsl		r6, r6, #0x3
	add		r0, r4, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087c16
	ldr		r2, _08087c30
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08087c16
	add		r0, r1, #0x0
	bl		sub_0808e4a0
_08087c16:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08087c20:	.4byte 0x0200BDD0
_08087c24:	.4byte 0x00000474
_08087c28:	.4byte 0x0200BDCC
_08087c2c:	.4byte 0x00000476
_08087c30:	.4byte 0x000004E4
	thumb_func_end sub_08087a08

	thumb_func_start sub_08087c34
sub_08087c34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	mov		r3, #0x8b
	lsl		r3, r3, #0x2
	add		r3, r9
	ldr		r2, [r3, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	mov		r10, r0
	cmp		r2, r10
	beq		_08087c6a
	mov		r0, #0x8a
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r1, [r0, #0x0]
	lsl		r0, r2, #0x2
	add		r0, r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, r10
	beq		_08087d54
_08087c6a:
	add		r0, r2, #0x1
	str		r0, [r3, #0x0]
	mov		r1, #0x8f
	lsl		r1, r1, #0x2
	add		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r2, #0x8a
	lsl		r2, r2, #0x2
	add		r2, r9
	ldr		r1, [r3, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, [r2, #0x0]
	add		r6, r1, r0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x2
	bne		_08087d54
	ldr		r2, [r6, #0x8]
	mov		r0, #0x91
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	lsl		r1, r0, #0x3
	add		r1, r1, r0
	lsl		r1, r1, #0x5
	lsl		r4, r2, #0x1
	add		r4, r4, r2
	lsl		r4, r4, #0x2
	ldr		r5, _08087d64
	add		r0, r4, r5
	add		r7, r1, r0
	mov		r1, r9
	add		r1, #0x54
	str		r1, [sp, #0x0]
	ldr		r1, [r7, #0x0]
	ldr		r0, [sp, #0x0]
	mov		r2, #0x3
	mov		r3, #0x5
	bl		sub_080899f0
	mov		r0, r9
	add		r0, #0xe8
	mov		r1, r10
	str		r1, [r0, #0x0]
	add		r0, #0x4
	mov		r1, #0x0
	mov		r8, r1
	str		r1, [r0, #0x0]
	ldr		r1, [r7, #0x4]
	ldr		r2, [r7, #0x8]
	ldr		r0, [sp, #0x0]
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, #0x90
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	add		r7, r4, r5
	mov		r4, #0xa0
	lsl		r4, r4, #0x1
	add		r4, r9
	ldr		r1, [r7, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0x3
	mov		r3, #0x5
	bl		sub_080899f0
	mov		r0, #0xea
	lsl		r0, r0, #0x1
	add		r0, r9
	mov		r1, r10
	str		r1, [r0, #0x0]
	mov		r0, #0xec
	lsl		r0, r0, #0x1
	add		r0, r9
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r1, [r7, #0x4]
	ldr		r2, [r7, #0x8]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, r9
	add		r1, #0xfc
	ldr		r0, [r6, #0xc]
	lsl		r0, r0, #0x8
	ldr		r1, [r1, #0x0]
	add		r1, r1, r0
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r2, r9
	ldr		r0, [r6, #0x10]
	lsl		r0, r0, #0x8
	ldr		r2, [r2, #0x0]
	add		r2, r2, r0
	ldr		r4, _08087d68
	mov		r0, #0x8f
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r3, [r0, #0x0]
	ldr		r0, [r4, #0x8]
	lsl		r3, r3, #0x2
	add		r3, r3, r0
	mov		r0, #0x8e
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	add		r0, #0x3f
	ldr		r3, [r3, #0x4]
	sub		r3, r3, r0
	ldr		r0, [sp, #0x0]
	bl		sub_08089880
_08087d54:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08087d64:	.4byte 0x080db378
_08087d68:	.4byte 0x0200BDA8
	thumb_func_end sub_08087c34

	thumb_func_start sub_08087d6c
sub_08087d6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r1, _08087e18
	mov		r2, #0x90
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r6, [r0, #0x0]
	add		r1, r6, #0x0
	sub		r1, #0x17
	mov		r0, #0x8e
	lsl		r0, r0, #0x2
	add		r7, r5, r0
	ldr		r0, [r7, #0x0]
	cmp		r1, r0
	bne		_08087dc2
	mov		r1, #0x84
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	add		r1, #0x94
	add		r2, r5, r1
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r2, #0x0]
	mov		r1, #0x97
	lsl		r1, r1, #0x3
	add		r2, r5, r1
	mov		r1, #0x0
	str		r1, [r2, #0x0]
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x1
	mov		r2, #0x9c
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	str		r1, [r0, #0x0]
_08087dc2:
	sub		r1, r6, #0x3
	ldr		r0, [r7, #0x0]
	cmp		r1, r0
	bne		_08087df4
	mov		r1, #0x84
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	add		r1, #0x94
	add		r2, r5, r1
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r2, #0x0]
	mov		r2, #0x97
	lsl		r2, r2, #0x3
	add		r1, r5, r2
	mov		r4, #0x0
	str		r4, [r1, #0x0]
	mov		r1, #0x1
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	ldr		r1, _08087e1c
	add		r0, r5, r1
	str		r4, [r0, #0x0]
_08087df4:
	mov		r0, #0x1
	neg		r0, r0
	mov		r2, #0xfe
	lsl		r2, r2, #0x2
	add		r2, r2, r5
	mov		r8, r2
	add		r3, r6, #0x3
	cmp		r6, r0
	bne		_08087e08
	b		_08087f58
_08087e08:
	ldr		r0, [r7, #0x0]
	sub		r1, r6, r0
	cmp		r1, #0x0
	blt		_08087e20
	cmp		r1, #0x3
	ble		_08087e28
	b		_08087f58

.incbin "base.gba", 0x87E16, 0x2

_08087e18:	.4byte 0x0200BDA8
_08087e1c:	.4byte 0x00000514

_08087e20:
	sub		r0, r0, r6
	cmp		r0, #0x3
	ble		_08087e28
	b		_08087f58
_08087e28:
	mov		r1, #0x84
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	bl		sub_0808991c
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_08001870
	cmp		r0, #0x0
	beq		_08087f10
	mov		r2, #0x8e
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_08087e8a
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	add		r1, #0x94
	add		r2, r5, r1
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r2, #0x0]
	mov		r1, #0xf4
	lsl		r1, r1, #0x2
	add		r2, r5, r1
	mov		r1, #0x0
	str		r1, [r2, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, #0x1
	mov		r2, #0xfe
	lsl		r2, r2, #0x2
	add		r4, r5, r2
	str		r0, [r4, #0x0]
	ldr		r1, [r5, #0xc]
	mov		r2, #0x38
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r2, [r1, #0x3c]
	mov		r1, #0x53
	bl		sub_080bbc78
	b		_08087ec6
_08087e8a:
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	add		r1, #0x94
	add		r2, r5, r1
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r2, #0x0]
	mov		r1, #0xf4
	lsl		r1, r1, #0x2
	add		r2, r5, r1
	mov		r1, #0x0
	str		r1, [r2, #0x0]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, #0x1
	mov		r2, #0xfe
	lsl		r2, r2, #0x2
	add		r4, r5, r2
	str		r0, [r4, #0x0]
	ldr		r1, [r5, #0xc]
	mov		r2, #0x38
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r2, [r1, #0x3c]
	mov		r1, #0x52
	bl		sub_080bbc78
_08087ec6:
	mov		r8, r4
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	sub		r0, r6, r1
	cmp		r0, #0x0
	bge		_08087ed8
	sub		r0, r1, r6
_08087ed8:
	ldr		r1, _08087f08
	add		r2, r5, r1
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bge		_08087ee4
	neg		r1, r1
_08087ee4:
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	sub		r1, r1, r0
	str		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_08087efa
	mov		r0, #0x0
	str		r0, [r2, #0x0]
_08087efa:
	ldr		r2, _08087f0c
	add		r1, r5, r2
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r3, r6, #0x3
	b		_08087f58

.incbin "base.gba", 0x87F06, 0x2

_08087f08:	.4byte 0x0000050C
_08087f0c:	.4byte 0x00000514

_08087f10:
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0xfe
	lsl		r2, r2, #0x2
	add		r2, r2, r5
	mov		r8, r2
	add		r3, r6, #0x3
	cmp		r3, r0
	bne		_08087f7a
	ldr		r1, _0808803c
	add		r0, r5, r1
	ldr		r7, [r0, #0x0]
	cmp		r7, #0x0
	bne		_08087f58
	sub		r0, r6, r3
	cmp		r0, #0x0
	bge		_08087f38
	sub		r0, r3, r6
_08087f38:
	ldr		r1, _08088040
	add		r2, r5, r1
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bge		_08087f44
	neg		r1, r1
_08087f44:
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	sub		r1, r1, r0
	str		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_08087f58
	str		r7, [r2, #0x0]
_08087f58:
	mov		r2, #0x8e
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bne		_08087f7a
	mov		r0, #0x90
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x9c
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	str		r1, [r0, #0x0]
_08087f7a:
	mov		r1, #0xee
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x8
	add		r0, r2, #0x0
	and		r0, r1
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_08087f90
	mov		r1, #0x0
_08087f90:
	cmp		r1, #0x0
	beq		_08087f9a
	mov		r0, #0x0
	mov		r1, r8
	str		r0, [r1, #0x0]
_08087f9a:
	mov		r0, #0x94
	lsl		r0, r0, #0x2
	add		r7, r5, r0
	mov		r1, #0xb4
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_08087fb4
	mov		r1, #0x0
_08087fb4:
	cmp		r1, #0x0
	beq		_08087fd0
	mov		r0, #0x92
	lsl		r0, r0, #0x2
	add		r2, r5, r0
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	bic		r0, r1
	str		r0, [r2, #0x0]
	mov		r1, #0x0
	mov		r2, #0xc4
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r1, [r0, #0x0]
_08087fd0:
	mov		r0, #0x92
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	ldr		r1, [r4, #0x0]
	mov		r6, #0x1
	add		r0, r1, #0x0
	and		r0, r6
	cmp		r0, #0x0
	beq		_08088010
	eor		r1, r0
	str		r1, [r4, #0x0]
	mov		r2, #0xb9
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	mov		r0, #0xba
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0xc4
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	str		r6, [r0, #0x0]
_08088010:
	ldr		r1, [r4, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808804a
	mov		r2, #0x10
	and		r1, r2
	cmp		r1, #0x0
	beq		_08088044
	mov		r0, #0x93
	lsl		r0, r0, #0x2
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bgt		_0808804a
	ldr		r0, [r4, #0x0]
	bic		r0, r2
	str		r0, [r4, #0x0]
	b		_0808804a

.incbin "base.gba", 0x8803A, 0x2

_0808803c:	.4byte 0x00000514
_08088040:	.4byte 0x0000050C

_08088044:
	add		r0, r7, #0x0
	bl		sub_0808991c
_0808804a:
	mov		r2, #0xce
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0808805e
	add		r0, r1, #0x0
	bl		sub_0808991c
_0808805e:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08087d6c

	thumb_func_start sub_08088068
sub_08088068:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r1, #0x8d
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0808808a
	mov		r3, #0x92
	lsl		r3, r3, #0x2
	add		r2, r6, r3
	ldr		r1, [r2, #0x0]
	mov		r0, #0x1
	eor		r0, r1
	orr		r1, r0
	str		r1, [r2, #0x0]
_0808808a:
	add		r0, r7, #0x0
	sub		r0, #0x14
	mov		r4, #0x8e
	lsl		r4, r4, #0x2
	add		r1, r6, r4
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	bne		_080880aa
	mov		r5, #0x92
	lsl		r5, r5, #0x2
	add		r2, r6, r5
	ldr		r1, [r2, #0x0]
	mov		r0, #0x2
	eor		r0, r1
	orr		r1, r0
	str		r1, [r2, #0x0]
_080880aa:
	mov		r0, #0x92
	lsl		r0, r0, #0x2
	add		r4, r6, r0
	ldr		r0, [r4, #0x0]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_080880bc
	b		_0808826a
_080880bc:
	mov		r0, #0x0
	bl		sub_08001870
	cmp		r0, #0x0
	bne		_080880c8
	b		_0808826a
_080880c8:
	ldr		r1, [r4, #0x0]
	mov		r0, #0x10
	eor		r0, r1
	orr		r1, r0
	str		r1, [r4, #0x0]
	mov		r2, #0x93
	lsl		r2, r2, #0x2
	add		r1, r6, r2
	mov		r0, #0x3c
	str		r0, [r1, #0x0]
	mov		r3, #0x8c
	lsl		r3, r3, #0x2
	add		r1, r6, r3
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x5
	beq		_080880f6
	mov		r0, #0x5
	str		r0, [r1, #0x0]
	mov		r4, #0x8d
	lsl		r4, r4, #0x2
	add		r1, r6, r4
	sub		r0, #0x6
	str		r0, [r1, #0x0]
_080880f6:
	mov		r5, #0x8b
	lsl		r5, r5, #0x2
	add		r0, r6, r5
	ldr		r1, [r0, #0x0]
	mov		r2, #0x8a
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	ldr		r2, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r3, r0, r2
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x1
	bne		_08088158
	add		r0, r6, #0x0
	add		r0, #0x54
	add		r1, r6, #0x0
	add		r1, #0xfc
	ldr		r2, [r3, #0xc]
	lsl		r2, r2, #0x8
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r2, r6, r4
	ldr		r3, [r3, #0x10]
	lsl		r3, r3, #0x8
	ldr		r2, [r2, #0x0]
	add		r2, r2, r3
	ldr		r4, _08088154
	add		r5, #0x10
	add		r3, r6, r5
	ldr		r5, [r3, #0x0]
	ldr		r3, [r4, #0x8]
	lsl		r5, r5, #0x2
	add		r5, r5, r3
	mov		r4, #0x8e
	lsl		r4, r4, #0x2
	add		r3, r6, r4
	ldr		r4, [r3, #0x0]
	add		r4, #0x3f
	ldr		r3, [r5, #0x4]
	sub		r3, r3, r4
	bl		sub_08089880
	b		_08088198

_08088154:	.4byte 0x0200BDA8

_08088158:
	cmp		r0, #0x3
	bne		_08088198
	mov		r5, #0x9e
	lsl		r5, r5, #0x1
	add		r0, r6, r5
	ldr		r2, [r0, #0x0]
	mov		r1, #0x1
	mov		r3, #0xde
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x58
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r2, r4
	ldr		r1, [r1, #0x0]
	sub		r5, #0x38
	add		r2, r2, r5
	ldr		r2, [r2, #0x0]
	ldr		r3, _080881e8
	add		r2, r2, r3
	mov		r3, #0x40
	bl		sub_08089880
	mov		r4, #0xa2
	lsl		r4, r4, #0x3
	add		r1, r6, r4
	ldr		r0, [r1, #0x0]
	ldr		r5, _080881ec
	add		r0, r0, r5
	str		r0, [r1, #0x0]
_08088198:
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	cmp		r7, r1
	bne		_080881f0
	mov		r2, #0xce
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	mov		r3, #0xf3
	lsl		r3, r3, #0x2
	add		r2, r6, r3
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r2, #0x0]
	mov		r4, #0xf4
	lsl		r4, r4, #0x2
	add		r2, r6, r4
	mov		r1, #0x0
	str		r1, [r2, #0x0]
	mov		r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x1
	mov		r5, #0xfe
	lsl		r5, r5, #0x2
	add		r0, r6, r5
	str		r1, [r0, #0x0]
	ldr		r1, [r6, #0xc]
	mov		r2, #0x38
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r2, [r1, #0x3c]
	mov		r1, #0x53
	bl		sub_080bbc78
	b		_0808823a

.incbin "base.gba", 0x881E6, 0x2

_080881e8:	.4byte 0xFFFFE000
_080881ec:	.4byte 0x00001388

_080881f0:
	sub		r0, r7, #0x5
	cmp		r1, r0
	blt		_0808823a
	add		r0, r7, #0x5
	cmp		r1, r0
	bgt		_0808823a
	mov		r3, #0xce
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	mov		r4, #0xf3
	lsl		r4, r4, #0x2
	add		r2, r6, r4
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r2, #0x0]
	mov		r5, #0xf4
	lsl		r5, r5, #0x2
	add		r2, r6, r5
	mov		r1, #0x0
	str		r1, [r2, #0x0]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x1
	mov		r2, #0xfe
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r1, [r6, #0xc]
	mov		r3, #0x38
	ldrsh	r0, [r1, r3]
	add		r0, r6, r0
	ldr		r2, [r1, #0x3c]
	mov		r1, #0x52
	bl		sub_080bbc78
_0808823a:
	mov		r4, #0x8e
	lsl		r4, r4, #0x2
	add		r0, r6, r4
	ldr		r0, [r0, #0x0]
	sub		r1, r7, r0
	cmp		r1, #0x0
	bge		_0808824a
	sub		r1, r0, r7
_0808824a:
	mov		r5, #0xa1
	lsl		r5, r5, #0x3
	add		r2, r6, r5
	cmp		r1, #0x0
	bge		_08088256
	neg		r1, r1
_08088256:
	mov		r0, #0x32
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	sub		r0, r0, r1
	str		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_0808831a
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	b		_0808831a
_0808826a:
	add		r1, r7, #0x0
	add		r1, #0x14
	mov		r0, #0x8e
	lsl		r0, r0, #0x2
	add		r2, r6, r0
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bne		_0808831a
	mov		r3, #0x8c
	lsl		r3, r3, #0x2
	add		r1, r6, r3
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x8
	beq		_08088294
	mov		r0, #0x8
	str		r0, [r1, #0x0]
	mov		r4, #0x8d
	lsl		r4, r4, #0x2
	add		r1, r6, r4
	sub		r0, #0x9
	str		r0, [r1, #0x0]
_08088294:
	ldr		r0, [r2, #0x0]
	sub		r1, r7, r0
	cmp		r1, #0x0
	bge		_0808829e
	sub		r1, r0, r7
_0808829e:
	mov		r5, #0xa1
	lsl		r5, r5, #0x3
	add		r2, r6, r5
	cmp		r1, #0x0
	bge		_080882aa
	neg		r1, r1
_080882aa:
	mov		r0, #0x32
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	sub		r0, r0, r1
	str		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_080882bc
	mov		r0, #0x0
	str		r0, [r2, #0x0]
_080882bc:
	mov		r1, #0x8b
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	mov		r2, #0x8a
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	ldr		r2, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r3, r0, r2
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x1
	bne		_0808831a
	add		r0, r6, #0x0
	add		r0, #0x54
	add		r1, r6, #0x0
	add		r1, #0xfc
	ldr		r2, [r3, #0xc]
	lsl		r2, r2, #0x8
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r2, r6, r4
	ldr		r3, [r3, #0x10]
	lsl		r3, r3, #0x8
	ldr		r2, [r2, #0x0]
	add		r2, r2, r3
	ldr		r4, _08088320
	mov		r5, #0x8f
	lsl		r5, r5, #0x2
	add		r3, r6, r5
	ldr		r5, [r3, #0x0]
	ldr		r3, [r4, #0x8]
	lsl		r5, r5, #0x2
	add		r5, r5, r3
	mov		r4, #0x8e
	lsl		r4, r4, #0x2
	add		r3, r6, r4
	ldr		r4, [r3, #0x0]
	add		r4, #0x3f
	ldr		r3, [r5, #0x4]
	sub		r3, r3, r4
	bl		sub_08089880
_0808831a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08088320:	.4byte 0x0200BDA8
	thumb_func_end sub_08088068

	thumb_func_start sub_08088324
sub_08088324:
	push	{ r4, r5, lr }
	mov		r12, r0
	add		r3, r1, #0x0
	mov		r5, #0x8b
	lsl		r5, r5, #0x2
	add		r5, r12
	ldr		r1, [r5, #0x0]
	mov		r4, #0x8a
	lsl		r4, r4, #0x2
	add		r4, r12
	ldr		r2, [r4, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_080883d4
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r2, r12
	ldr		r0, [r2, #0x0]
	mov		r1, #0xde
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080883a8
	add		r1, #0x74
	add		r1, r12
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x5
	beq		_08088374
	mov		r0, #0x5
	str		r0, [r1, #0x0]
	mov		r1, #0x8d
	lsl		r1, r1, #0x2
	add		r1, r12
	sub		r0, #0x6
	str		r0, [r1, #0x0]
_08088374:
	ldr		r0, [r2, #0x0]
	mov		r3, #0xd2
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xfc
	ldr		r1, [r0, #0x0]
	sub		r3, #0xa4
	add		r0, r2, r3
	ldr		r2, [r0, #0x0]
	mov		r0, r12
	add		r0, #0xfc
	str		r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, r12
	str		r2, [r0, #0x0]
	mov		r0, #0xf4
	lsl		r0, r0, #0x1
	add		r0, r12
	str		r1, [r0, #0x0]
	mov		r0, #0xf6
	lsl		r0, r0, #0x1
	add		r0, r12
	str		r2, [r0, #0x0]
	b		_0808844e
_080883a8:
	add		r0, r3, #0x0
	add		r0, #0x14
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0808844e
	mov		r1, #0x8c
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x8
	beq		_0808844e
	mov		r0, #0x8
	str		r0, [r1, #0x0]
	mov		r1, #0x8d
	lsl		r1, r1, #0x2
	add		r1, r12
	sub		r0, #0x9
	str		r0, [r1, #0x0]
	b		_0808844e
_080883d4:
	sub		r0, r3, #0x1
	mov		r1, #0x8e
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0808844e
	mov		r1, #0x8c
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x5
	beq		_080883fc
	mov		r0, #0x5
	str		r0, [r1, #0x0]
	mov		r1, #0x8d
	lsl		r1, r1, #0x2
	add		r1, r12
	sub		r0, #0x6
	str		r0, [r1, #0x0]
_080883fc:
	ldr		r1, [r5, #0x0]
	ldr		r2, [r4, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r3, r0, r2
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x1
	bne		_0808844e
	mov		r0, r12
	add		r0, #0x54
	mov		r1, r12
	add		r1, #0xfc
	ldr		r2, [r3, #0xc]
	lsl		r2, r2, #0x8
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r2, r12
	ldr		r3, [r3, #0x10]
	lsl		r3, r3, #0x8
	ldr		r2, [r2, #0x0]
	add		r2, r2, r3
	ldr		r4, _08088454
	mov		r3, #0x8f
	lsl		r3, r3, #0x2
	add		r3, r12
	ldr		r5, [r3, #0x0]
	ldr		r3, [r4, #0x8]
	lsl		r5, r5, #0x2
	add		r5, r5, r3
	mov		r3, #0x8e
	lsl		r3, r3, #0x2
	add		r3, r12
	ldr		r4, [r3, #0x0]
	add		r4, #0x3f
	ldr		r3, [r5, #0x4]
	sub		r3, r3, r4
	bl		sub_08089880
_0808844e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08088454:	.4byte 0x0200BDA8
	thumb_func_end sub_08088324

	thumb_func_start sub_08088458
sub_08088458:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	mov		r10, r1
	mov		r0, #0x0
	mov		r9, r0
	ldr		r1, _080884dc
	add		r0, r7, r1
	str		r3, [r0, #0x0]
	mov		r4, r10
	lsl		r1, r4, #0x8
	lsl		r3, r2, #0x8
	add		r0, r7, #0x0
	add		r0, #0xa8
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r3, [r0, #0x0]
	ldr		r4, _080884e0
	add		r0, r7, r4
	str		r1, [r0, #0x0]
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	str		r3, [r0, #0x0]
	mov		r4, #0x0
	mov		r8, r4
	sub		r2, #0x18
	lsl		r2, r2, #0x8
	str		r2, [sp, #0x0]
	mov		r0, #0x91
	lsl		r0, r0, #0x3
	add		r0, r7, r0
	str		r0, [sp, #0x4]
	add		r5, r7, #0x0
	add		r5, #0xec
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r4, r7, r1
_080884ac:
	add		r0, r5, #0x0
	mov		r1, #0x29
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080899f0
	mov		r2, r10
	mov		r1, r9
	sub		r0, r2, r1
	add		r0, #0x40
	lsl		r0, r0, #0x8
	str		r0, [r4, #0x0]
	ldr		r2, [sp, #0x0]
	str		r2, [r4, #0x4]
	mov		r0, r8
	cmp		r0, #0x3
	beq		_080884e4
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	b		_0808851e

_080884dc:	.4byte 0x0000082C
_080884e0:	.4byte 0x000007EC

_080884e4:
	mov		r1, #0xa
	ldr		r2, [sp, #0x4]
	str		r1, [r2, #0x0]
	add		r6, r5, #0x0
	ldr		r0, _080884fc
	bl		sub_0800227c
	cmp		r0, #0x0
	beq		_08088504
	ldr		r0, _08088500
	b		_08088506

.incbin "base.gba", 0x884FA, 0x2

_080884fc:	.4byte 0x00000836
_08088500:	.4byte 0x080db29f

_08088504:
	ldr		r0, _0808852c
_08088506:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r1, #0xb
	cmp		r0, #0x2e
	bne		_08088514
	mov		r1, #0xa
_08088514:
	add		r0, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
_0808851e:
	mov		r0, r8
	cmp		r0, #0x2
	bne		_08088530
	mov		r1, #0xc
	add		r9, r1
	b		_08088534

.incbin "base.gba", 0x8852A, 0x2

_0808852c:	.4byte 0x080db2a7

_08088530:
	mov		r2, #0x18
	add		r9, r2
_08088534:
	mov		r0, #0x1
	str		r0, [r4, #0x18]
	add		r5, #0xe8
	add		r4, #0xe8
	add		r8, r0
	mov		r1, r8
	cmp		r1, #0x6
	ble		_080884ac
	ldr		r2, _08088578
	add		r4, r7, r2
	add		r0, r4, #0x0
	mov		r1, #0x28
	mov		r2, #0x1
	mov		r3, #0x1
	bl		sub_080899f0
	add		r0, r4, #0x0
	mov		r1, #0x3
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r1, #0x1
	ldr		r4, _0808857c
	add		r0, r7, r4
	str		r1, [r0, #0x0]
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08088578:	.4byte 0x00000744
_0808857c:	.4byte 0x00000804
	thumb_func_end sub_08088458

	thumb_func_start sub_08088580
sub_08088580:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r8, r0
	mov		r9, r1
	add		r0, #0xe8
	str		r1, [r0, #0x0]
	ldr		r0, _08088620
	add		r0, r8
	ldr		r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	asr		r0, r0, #0x1f
	mov		r10, r0
	mov		r0, #0x2
	mov		r1, r10
	and		r1, r0
	mov		r10, r1
	mov		r7, #0x0
	mov		r5, r8
	add		r5, #0xec
	mov		r6, #0xe8
	lsl		r6, r6, #0x1
	add		r6, r8
_080885b4:
	cmp		r7, #0x3
	beq		_080885e0
	mov		r0, r9
	mov		r1, #0xa
	bl		sub_080bb608
	add		r4, r0, #0x0
	mov		r0, r9
	mov		r1, #0xa
	bl		sub_080bb600
	mov		r9, r0
	str		r4, [r6, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	add		r0, r5, #0x0
	bl		sub_0808991c
_080885e0:
	add		r5, #0xe8
	add		r6, #0xe8
	add		r7, #0x1
	cmp		r7, #0x6
	ble		_080885b4
	mov		r3, #0x0
	mov		r4, #0x0
	mov		r6, #0x0
	mov		r2, #0x6
	mov		r5, r8
	add		r5, #0xa8
	mov		r7, r8
	add		r7, #0xac
	cmp		r2, r10
	blt		_0808862e
	mov		r1, #0xe8
	lsl		r1, r1, #0x3
	add		r1, r8
_08088604:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08088612
	cmp		r3, #0x1
	beq		_08088612
	cmp		r2, #0x4
	bne		_08088626
_08088612:
	add		r6, #0x1
	mov		r3, #0x1
	cmp		r2, #0x3
	bne		_08088624
	add		r4, #0xc
	b		_08088626

.incbin "base.gba", 0x8861E, 0x2

_08088620:	.4byte 0x0000082C

_08088624:
	add		r4, #0x18
_08088626:
	sub		r1, #0xe8
	sub		r2, #0x1
	cmp		r2, r10
	bge		_08088604
_0808862e:
	ldr		r0, [r5, #0x0]
	asr		r5, r0, #0x8
	ldr		r0, [r7, #0x0]
	asr		r0, r0, #0x8
	mov		r3, r10
	cmp		r3, #0x6
	bgt		_08088670
	lsr		r1, r4, #0x1f
	add		r1, r4, r1
	asr		r1, r1, #0x1
	sub		r0, #0x18
	lsl		r4, r0, #0x8
	mov		r0, #0xe8
	mul		r0, r3
	mov		r2, #0xca
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	mov		r7, r8
	add		r2, r0, r7
	sub		r1, #0xc
	add		r1, r5, r1
_08088658:
	lsl		r0, r1, #0x8
	str		r0, [r2, #0x0]
	str		r4, [r2, #0x4]
	cmp		r3, #0x2
	bne		_08088666
	sub		r1, #0xc
	b		_08088668
_08088666:
	sub		r1, #0x18
_08088668:
	add		r2, #0xe8
	add		r3, #0x1
	cmp		r3, #0x6
	ble		_08088658
_08088670:
	ldr		r0, _080886a8
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08088688
	ldr		r0, _080886ac
	add		r0, r8
	sub		r1, r6, #0x5
	mov		r2, #0x2
	mov		r3, #0x0
	bl		sub_0808997c
_08088688:
	mov		r0, r9
	cmp		r0, #0x0
	beq		_0808869a
	ldr		r0, _080886b0
	ldr		r1, _080886b4
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808869a:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080886a8:	.4byte 0x0000082C
_080886ac:	.4byte 0x00000744
_080886b0:	.4byte 0x080db264 @ y_tamura/tamSynchronized.cpp
_080886b4:	.4byte 0x00000534
	thumb_func_end sub_08088580

	thumb_func_start sub_080886b8
sub_080886b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r5, r0, #0x0
	add		r0, #0xc0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080886d0
	b		_08088808
_080886d0:
	ldr		r1, _08088734
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	asr		r3, r0, #0x1f
	mov		r0, #0x2
	and		r3, r0
	mov		r2, #0x0
	mov		r8, r2
	mov		r2, #0x6
	mov		r7, #0xfc
	lsl		r7, r7, #0x3
	add		r7, r5, r7
	str		r7, [sp, #0x4]
	ldr		r0, _08088738
	add		r0, r0, r5
	mov		r9, r0
	mov		r1, #0xf3
	lsl		r1, r1, #0x3
	add		r1, r1, r5
	mov		r10, r1
	mov		r7, #0xfe
	lsl		r7, r7, #0x3
	add		r7, r5, r7
	str		r7, [sp, #0x8]
	ldr		r0, _0808873c
	add		r0, r5, r0
	str		r0, [sp, #0x0]
	ldr		r1, _08088740
	add		r1, r5, r1
	str		r1, [sp, #0xc]
	cmp		r2, r3
	blt		_080887a4
	mov		r7, #0xe1
	lsl		r7, r7, #0x3
	add		r7, r5, r7
	str		r7, [sp, #0x18]
	mov		r0, #0xd6
	lsl		r0, r0, #0x3
	add		r4, r5, r0
	ldr		r1, _08088744
	add		r6, r5, r1
_08088726:
	ldr		r7, [sp, #0x18]
	ldr		r0, [r7, #0x38]
	cmp		r0, #0x0
	beq		_08088748
	mov		r0, #0x1
	mov		r8, r0
	b		_08088752

_08088734:	.4byte 0x0000082C
_08088738:	.4byte 0x000007EC
_0808873c:	.4byte 0x0000079A
_08088740:	.4byte 0x00000804
_08088744:	.4byte 0x0000065C

_08088748:
	mov		r1, r8
	cmp		r1, #0x1
	beq		_08088752
	cmp		r2, #0x4
	bne		_08088794
_08088752:
	ldr		r0, [r4, #0x48]
	cmp		r0, #0x1
	bne		_08088762
	ldr		r0, [r4, #0x54]
	asr		r0, r0, #0x8
	strh	r0, [r4, #0x0]
	ldr		r0, [r4, #0x58]
	b		_08088776
_08088762:
	ldr		r0, [r4, #0x54]
	ldr		r7, _080887c4
	ldr		r1, [r7, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	strh	r0, [r4, #0x0]
	ldr		r0, [r4, #0x58]
	ldr		r7, _080887c8
	ldr		r1, [r7, #0x0]
	sub		r0, r0, r1
_08088776:
	asr		r0, r0, #0x8
	strh	r0, [r4, #0x2]
	ldr		r0, [r4, #0x6c]
	cmp		r0, #0x0
	beq		_08088794
	ldr		r0, [r4, #0x70]
	cmp		r0, #0x0
	beq		_08088794
	add		r0, r6, #0x0
	str		r2, [sp, #0x10]
	str		r3, [sp, #0x14]
	bl		sub_0808e4a0
	ldr		r3, [sp, #0x14]
	ldr		r2, [sp, #0x10]
_08088794:
	ldr		r0, [sp, #0x18]
	sub		r0, #0xe8
	str		r0, [sp, #0x18]
	sub		r4, #0xe8
	sub		r6, #0xe8
	sub		r2, #0x1
	cmp		r2, r3
	bge		_08088726
_080887a4:
	ldr		r1, [sp, #0x4]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_080887cc
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x8
	mov		r7, r10
	strh	r0, [r7, #0x0]
	ldr		r1, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	asr		r0, r0, #0x8
	ldr		r2, [sp, #0x0]
	strh	r0, [r2, #0x0]
	b		_080887ec

.incbin "base.gba", 0x887C2, 0x2

_080887c4:	.4byte 0x0200BDD0
_080887c8:	.4byte 0x0200BDCC

_080887cc:
	ldr		r1, _08088818
	mov		r7, r9
	ldr		r0, [r7, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	mov		r1, r10
	strh	r0, [r1, #0x0]
	ldr		r1, _0808881c
	ldr		r2, [sp, #0x8]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	ldr		r7, [sp, #0x0]
	strh	r0, [r7, #0x0]
_080887ec:
	ldr		r0, _08088820
	add		r1, r5, r0
	ldr		r2, [sp, #0xc]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_08088808
	ldr		r7, _08088824
	add		r0, r5, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08088808
	add		r0, r1, #0x0
	bl		sub_0808e4a0
_08088808:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08088818:	.4byte 0x0200BDD0
_0808881c:	.4byte 0x0200BDCC
_08088820:	.4byte 0x00000744
_08088824:	.4byte 0x00000808

.incbin "base.gba", 0x88828, 0xA8
	thumb_func_end sub_080886b8

	thumb_func_start sub_080888d0
sub_080888d0:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	bl		sub_08089124
	mov		r0, #0x83
	lsl		r0, r0, #0x4
	add		r1, r6, r0
	ldr		r0, _0808890c
	str		r0, [r1, #0x0]
	add		r4, r6, #0x0
	add		r4, #0xec
	mov		r5, #0x6
	mov		r7, #0x1
	neg		r7, r7
_080888ec:
	add		r0, r4, #0x0
	bl		sub_08089124
	add		r4, #0xe8
	sub		r5, #0x1
	cmp		r5, r7
	bne		_080888ec
	ldr		r1, _08088910
	add		r0, r6, r1
	bl		sub_08089124
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8890A, 0x2

_0808890c:	.4byte 0x080e3114
_08088910:	.4byte 0x00000744

.incbin "base.gba", 0x88914, 0x4
	thumb_func_end sub_080888d0

	thumb_func_start sub_08088918
sub_08088918:
	push	{ lr }
	mov		r12, r0
	mov		r3, #0x8c
	lsl		r3, r3, #0x2
	add		r3, r12
	ldr		r0, [r3, #0x0]
	cmp		r0, r1
	bne		_0808892c
	cmp		r2, #0x1
	bne		_0808893a
_0808892c:
	str		r1, [r3, #0x0]
	mov		r1, #0x8d
	lsl		r1, r1, #0x2
	add		r1, r12
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
_0808893a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8893E, 0xB2
	thumb_func_end sub_08088918

	thumb_func_start sub_080889f0
sub_080889f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r10, r0
	mov		r0, #0x91
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	lsl		r2, r0, #0x3
	add		r2, r2, r0
	lsl		r2, r2, #0x5
	lsl		r4, r1, #0x1
	add		r4, r4, r1
	lsl		r4, r4, #0x2
	ldr		r5, _08088a90
	add		r0, r4, r5
	add		r7, r2, r0
	mov		r6, r10
	add		r6, #0x54
	ldr		r1, [r7, #0x0]
	add		r0, r6, #0x0
	mov		r2, #0x3
	mov		r3, #0x5
	bl		sub_080899f0
	mov		r0, r10
	add		r0, #0xe8
	mov		r1, #0x1
	neg		r1, r1
	mov		r9, r1
	str		r1, [r0, #0x0]
	add		r0, #0x4
	mov		r1, #0x0
	mov		r8, r1
	str		r1, [r0, #0x0]
	ldr		r1, [r7, #0x4]
	ldr		r2, [r7, #0x8]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	mov		r0, #0x90
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	add		r7, r4, r5
	mov		r4, #0xa0
	lsl		r4, r4, #0x1
	add		r4, r10
	ldr		r1, [r7, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0x3
	mov		r3, #0x5
	bl		sub_080899f0
	mov		r0, #0xea
	lsl		r0, r0, #0x1
	add		r0, r10
	mov		r1, r9
	str		r1, [r0, #0x0]
	mov		r0, #0xec
	lsl		r0, r0, #0x1
	add		r0, r10
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r1, [r7, #0x4]
	ldr		r2, [r7, #0x8]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_0808997c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x88A8E, 0x2

_08088a90:	.4byte 0x080db378
	thumb_func_end sub_080889f0

	thumb_func_start sub_08088a94
sub_08088a94:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0x8c
	lsl		r0, r0, #0x2
	add		r6, r4, r0
	mov		r3, #0x9e
	lsl		r3, r3, #0x1
	add		r5, r4, r3
	b		_08088ad4
_08088aa6:
	mov		r1, #0x0
	ldr		r2, [r5, #0x0]
	mov		r3, #0xd4
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08088ac2
	add		r3, #0x18
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08088ac2
	mov		r1, #0x1
_08088ac2:
	add		r0, r4, #0x0
	bl		sub_08086e18
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08000644
_08088ad4:
	add		r0, r4, #0x0
	bl		sub_080b7690
	ldr		r0, [r6, #0x0]
	cmp		r0, #0xa
	bne		_08088aa6
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x88AE6, 0x56
	thumb_func_end sub_08088a94

	thumb_func_start sub_08088b3c
sub_08088b3c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r0, #0xfc
	str		r1, [r0, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r0, r3, r4
	str		r2, [r0, #0x0]
	add		r4, #0xe8
	add		r0, r3, r4
	str		r1, [r0, #0x0]
	mov		r1, #0xf6
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	str		r2, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x88B60, 0x28
	thumb_func_end sub_08088b3c

	thumb_func_start sub_08088b88
sub_08088b88:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_08086d80
	ldr		r0, _08088bdc
	str		r0, [r4, #0x4c]
	ldr		r0, _08088be0
	str		r0, [r4, #0xc]
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	str		r5, [r0, #0x0]
	mov		r0, #0x91
	lsl		r0, r0, #0x2
	add		r1, r4, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0x9
	mov		r2, #0xf0
	lsl		r2, r2, #0x8
	add		r0, r4, #0x0
	bl		sub_08088b3c
	mov		r0, #0x8a
	lsl		r0, r0, #0x2
	add		r1, r4, r0
	ldr		r0, _08088be4
	ldr		r0, [r0, #0x10]
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_08087c34
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_080889f0
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08088bdc:	.4byte 0x080e3064
_08088be0:	.4byte 0x080e307c
_08088be4:	.4byte 0x0200BDA8
	thumb_func_end sub_08088b88

	thumb_func_start sub_08088be8
sub_08088be8:
	push	{ lr }
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldr		r3, _08088c00
	ldr		r1, [r3, #0x0]
	ldr		r2, [r3, #0x4]
	ldr		r3, [r3, #0x8]
	bl		sub_0806e0f0
	pop		{ r0 }
	bx		r0

_08088c00:	.4byte 0x0200BDA8
	thumb_func_end sub_08088be8

	thumb_func_start sub_08088c04
sub_08088c04:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	mov		r1, #0x0
	mov		r2, #0xd4
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	ldr		r0, [r4, #0x5c]
	add		r1, r0, #0x0
	cmp		r0, #0x2
	beq		_08088c7a
	cmp		r0, #0x2
	bgt		_08088c26
	cmp		r0, #0x1
	beq		_08088c5a
	b		_08088c7a
_08088c26:
	cmp		r1, #0x4
	bgt		_08088c7a
	mov		r1, #0xd2
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	ldr		r2, [r0, #0x0]
	mov		r1, #0x8
	mov		r0, #0x92
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	ldr		r0, [r2, #0x0]
	eor		r1, r0
	orr		r0, r1
	str		r0, [r2, #0x0]
	mov		r1, #0x1
	mov		r2, #0xda
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	b		_08088c7a
_08088c5a:
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	add		r0, #0x4
	add		r1, r3, r0
	mov		r0, #0x3
	str		r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	bl		sub_080964fc
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_080b7724
_08088c7a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08088c04

	thumb_func_start sub_08088c80
sub_08088c80:
	push	{ lr }
	add		r3, r0, #0x0
	mov		r1, #0x1
	mov		r2, #0xd4
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	add		r0, #0x4
	add		r1, r3, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	bl		sub_080964e4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x88CA6, 0x23A
	thumb_func_end sub_08088c80

	thumb_func_start sub_08088ee0
sub_08088ee0:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r3, #0xde
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	str		r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x58
	sub		r3, #0xbc
	add		r1, r2, r3
	ldr		r1, [r1, #0x0]
	add		r3, #0x4
	add		r2, r2, r3
	ldr		r2, [r2, #0x0]
	ldr		r3, _08088f0c
	add		r2, r2, r3
	mov		r3, #0x40
	bl		sub_08089880
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x88F0A, 0x2

_08088f0c:	.4byte 0xFFFFE000

.incbin "base.gba", 0x88F10, 0x1EC
	thumb_func_end sub_08088ee0

	thumb_func_start sub_080890fc
sub_080890fc:
	push	{ r4, lr }
	lsl		r1, r1, #0x8
	lsl		r2, r2, #0x8
	add		r3, r0, #0x0
	add		r3, #0xa8
	str		r1, [r3, #0x0]
	add		r3, #0x4
	str		r2, [r3, #0x0]
	ldr		r4, _08089120
	add		r3, r0, r4
	str		r1, [r3, #0x0]
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08089120:	.4byte 0x000007EC
	thumb_func_end sub_080890fc

	thumb_func_start sub_08089124
sub_08089124:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b374
	mov		r1, #0x0
	str		r1, [r4, #0x6c]
	add		r0, r4, #0x0
	add		r0, #0xa8
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xb4
	add		r0, #0xc
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	sub		r2, #0x4
	add		r0, #0x4
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	sub		r0, #0x2c
	mov		r2, #0x1
	neg		r2, r2
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	add		r0, #0x28
	str		r1, [r0, #0x0]
	sub		r0, #0x24
	str		r1, [r0, #0x0]
	add		r0, #0x48
	str		r1, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xc8
	sub		r0, #0x18
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	add		r2, #0x8
	add		r0, #0x8
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	add		r2, #0x8
	add		r0, #0x8
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	sub		r0, #0x3c
	str		r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xc4
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x891A2, 0x2
	thumb_func_end sub_08089124

	thumb_func_start sub_080891a4
sub_080891a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r2, #0x0
	mov		r8, r3
	mov		r0, #0x1
	neg		r0, r0
	cmp		r7, r0
	bne		_080891c8
	add		r0, r4, #0x0
	add		r0, #0x69
	mov		r7, #0x0
	ldrsb	r7, [r0, r7]
_080891c8:
	mov		r1, #0x1
	neg		r1, r1
	cmp		r8, r1
	bne		_080891da
	add		r0, r4, #0x0
	add		r0, #0x5c
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r8, r2
_080891da:
	add		r6, r4, #0x0
	add		r6, #0xa4
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_080891f0
	ldr		r0, _080892b4
	mov		r1, #0x5e
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080891f0:
	ldr		r0, [r6, #0x0]
	lsl		r1, r5, #0x1
	add		r1, r1, r5
	lsl		r1, r1, #0x2
	str		r1, [sp, #0x0]
	add		r0, r1, r0
	ldr		r1, [r0, #0x0]
	add		r5, r4, #0x0
	add		r5, #0x90
	ldr		r0, [r5, #0x0]
	mov		r2, #0x94
	add		r2, r2, r4
	mov		r9, r2
	mov		r2, #0x98
	add		r2, r2, r4
	mov		r10, r2
	cmp		r0, r1
	beq		_0808923c
	str		r1, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e278
	ldr		r1, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	add		r0, #0x69
	strb	r7, [r0, #0x0]
	sub		r0, #0xd
	mov		r1, r8
	strh	r1, [r0, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	mov		r0, r9
	str		r2, [r0, #0x0]
	mov		r1, r10
	str		r2, [r1, #0x0]
_0808923c:
	ldr		r0, [r6, #0x0]
	ldr		r2, [sp, #0x0]
	add		r0, r2, r0
	ldr		r6, [r0, #0x4]
	ldr		r0, [r0, #0x8]
	mov		r8, r0
	mov		r7, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x1
	bne		_0808925c
	ldr		r0, _080892b4
	mov		r1, #0x48
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808925c:
	cmp		r6, #0x40
	bne		_0808926c
	ldr		r0, _080892b4
	mov		r1, #0x49
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808926c:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	bne		_0808927c
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	cmp		r0, r8
	beq		_080892a2
_0808927c:
	add		r0, r4, #0x0
	add		r0, #0xa0
	str		r7, [r0, #0x0]
	mov		r0, r9
	str		r6, [r0, #0x0]
	mov		r1, r8
	mov		r2, r10
	str		r1, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strb	r7, [r0, #0x0]
	sub		r0, #0x1
	strb	r7, [r0, #0x0]
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	ldr		r2, [r2, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e3c0
_080892a2:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x892B2, 0x2

_080892b4:	.4byte 0x080db70c @ y_tamura/tamUtil.cpp
	thumb_func_end sub_080891a4

	thumb_func_start sub_080892b8
sub_080892b8:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r0, #0x9c
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_080892da
	add		r0, r3, #0x0
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	add		r2, r3, #0x0
	add		r2, #0x54
	strh	r0, [r2, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xac
	ldr		r0, [r0, #0x0]
	b		_080892fa
_080892da:
	add		r0, r3, #0x0
	add		r0, #0xa8
	ldr		r1, _08089348
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	add		r2, r3, #0x0
	add		r2, #0x54
	strh	r0, [r2, #0x0]
	add		r0, r3, #0x0
	add		r0, #0xac
	ldr		r1, _0808934c
	ldr		r0, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
_080892fa:
	asr		r0, r0, #0x8
	add		r1, r3, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	add		r4, r3, #0x0
	add		r4, #0xc4
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r2, r0]
	add		r0, r3, #0x0
	add		r0, #0xb8
	ldr		r0, [r0, #0x0]
	cmn		r2, r0
	blt		_08089342
	add		r0, r3, #0x0
	add		r0, #0xb4
	ldr		r0, [r0, #0x0]
	add		r0, #0xf0
	cmp		r2, r0
	bgt		_08089342
	mov		r0, #0x0
	ldrsh	r1, [r1, r0]
	add		r0, r3, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmn		r1, r0
	blt		_08089342
	add		r0, r3, #0x0
	add		r0, #0xb0
	ldr		r0, [r0, #0x0]
	add		r0, #0xa0
	cmp		r1, r0
	bgt		_08089342
	mov		r0, #0x1
	str		r0, [r4, #0x0]
_08089342:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08089348:	.4byte 0x0200BDD0
_0808934c:	.4byte 0x0200BDCC
	thumb_func_end sub_080892b8

	thumb_func_start sub_08089350
sub_08089350:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r6, #0x0
	add		r2, r4, #0x0
	add		r2, #0xe0
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x1
	bne		_080893ae
	add		r5, r4, #0x0
	add		r5, #0xd8
	add		r1, r4, #0x0
	add		r1, #0xdc
	ldr		r0, [r5, #0x0]
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	ldr		r1, _080893b8
	cmp		r0, r1
	ble		_08089380
	mov		r0, #0xff
	lsl		r0, r0, #0x10
	str		r0, [r5, #0x0]
	str		r6, [r2, #0x0]
	mov		r6, #0x1
_08089380:
	add		r0, r4, #0x0
	add		r0, #0xc8
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xd0
	ldr		r1, [r1, #0x0]
	ldrb	r2, [r5, #0x2]
	bl		sub_0808b2f8
	add		r1, r4, #0x0
	add		r1, #0xa8
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xcc
	ldr		r0, [r0, #0x0]
	add		r1, #0x2c
	ldr		r1, [r1, #0x0]
	ldrb	r2, [r5, #0x2]
	bl		sub_0808b2f8
	add		r1, r4, #0x0
	add		r1, #0xac
	str		r0, [r1, #0x0]
_080893ae:
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x893B6, 0x2

_080893b8:	.4byte 0x00FEFFFF
	thumb_func_end sub_08089350

	thumb_func_start sub_080893bc
sub_080893bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	mov		r8, r0
	add		r4, r1, #0x0
	str		r2, [sp, #0x0]
	str		r3, [sp, #0x4]
	ldr		r5, [sp, #0x0+0x38]
	cmp		r4, #0x0
	bne		_080893e2
	ldr		r0, _080893f0
	mov		r1, #0xec
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080893e2:
	mov		r0, #0xfb
	str		r0, [sp, #0x8]
	cmp		r5, #0x1
	bne		_080893f4
	mov		r1, #0xfc
	str		r1, [sp, #0x8]
	b		_08089406

_080893f0:	.4byte 0x080db70c @ y_tamura/tamUtil.cpp

_080893f4:
	cmp		r5, #0x2
	bne		_080893fe
	mov		r2, #0xe
	str		r2, [sp, #0x8]
	b		_08089406
_080893fe:
	cmp		r5, #0x3
	bne		_08089406
	mov		r0, #0xf
	str		r0, [sp, #0x8]
_08089406:
	mov		r3, r8
	add		r3, #0xf0
	str		r5, [r3, #0x0]
	mov		r2, r8
	add		r2, #0xf8
	str		r4, [r2, #0x0]
	mov		r1, r8
	add		r1, #0xa8
	ldr		r4, [sp, #0x0]
	lsl		r0, r4, #0x8
	str		r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r4, [sp, #0x4]
	lsl		r0, r4, #0x8
	str		r0, [r1, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x1
	add		r5, r8
	ldr		r0, [r5, #0x0]
	str		r3, [sp, #0x14]
	mov		r10, r2
	cmp		r0, #0x0
	beq		_08089440
	ldr		r0, _0808951c
	mov		r1, #0xfc
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08089440:
	str		r5, [sp, #0xC]
	mov		r0, r10
	ldr		r4, [r0, #0x0]
	mov		r0, #0x94
	mul		r0, r4
	add		r0, #0x4
	bl		sub_0808afb8
	add		r1, r0, #0x0
	stmia	r1!, {  r4 }
	mov		r9, r1
	mov		r5, r9
	sub		r6, r4, #0x1
	mov		r1, #0x1
	neg		r1, r1
	cmp		r6, r1
	beq		_08089486
	mov		r7, #0x0
	add		r4, r0, #0x0
	add		r4, #0x74
_08089468:
	add		r0, r5, #0x0
	bl		sub_0808e21c
	add		r0, r4, #0x0
	bl		sub_0808b374
	str		r7, [r5, #0x6c]
	str		r7, [r4, #0x20]
	add		r4, #0x94
	add		r5, #0x94
	sub		r6, #0x1
	mov		r2, #0x1
	neg		r2, r2
	cmp		r6, r2
	bne		_08089468
_08089486:
	mov		r4, r9
	ldr		r0, [sp, #0xC]
	str		r4, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080894a4
	ldr		r0, _0808951c
	mov		r1, #0xfe
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080894a4:
	ldr		r0, _08089520
	ldr		r2, [sp, #0x14]
	ldr		r1, [r2, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	mov		r6, #0x0
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	cmp		r6, r0
	bge		_0808950c
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r8
	str		r0, [sp, #0x10]
	mov		r8, r6
	ldr		r5, [sp, #0x0]
	mov		r7, #0x0
	neg		r1, r1
	mov		r9, r1
_080894cc:
	ldr		r1, [sp, #0x10]
	ldr		r4, [r1, #0x0]
	add		r4, r4, r7
	add		r0, r4, #0x0
	ldr		r1, [sp, #0x8]
	bl		sub_0808e03c
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r0, r4, #0x0
	add		r0, #0x69
	mov		r2, r8
	strb	r2, [r0, #0x0]
	sub		r0, #0xd
	mov		r1, r8
	strh	r1, [r0, #0x0]
	sub		r0, #0x8
	strh	r5, [r0, #0x0]
	add		r4, #0x56
	mov		r2, sp
	ldrh		r2, [r2, #0x4]
	strh	r2, [r4, #0x0]
	add		r5, r9
	add		r7, #0x94
	add		r6, #0x1
	mov		r4, r10
	ldr		r0, [r4, #0x0]
	cmp		r6, r0
	blt		_080894cc
_0808950c:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0808951c:	.4byte 0x080db70c @ y_tamura/tamUtil.cpp
_08089520:	.4byte 0x080db724
	thumb_func_end sub_080893bc

	thumb_func_start sub_08089524
sub_08089524:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	cmp		r1, #0x0
	beq		_0808954c
	add		r3, r4, #0x0
	add		r3, #0xe8
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	ble		_0808954c
	sub		r2, r0, #0x1
	str		r2, [r3, #0x0]
	cmp		r2, #0x0
	bne		_0808954c
	add		r0, r4, #0x0
	add		r0, #0xfc
	str		r2, [r0, #0x0]
_0808954c:
	add		r0, r4, #0x0
	add		r0, #0xfc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08089614
	mov		r0, #0x0
	mov		r9, r0
	cmp		r1, #0x0
	beq		_08089564
	add		r0, r4, #0x0
	bl		sub_08089350
_08089564:
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	mov		r10, r0
	add		r0, r4, #0x0
	add		r0, #0xac
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	mov		r8, r0
	ldr		r1, _080895c0
	add		r0, r4, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	add		r0, r4, #0x0
	add		r0, #0xf4
	ldr		r0, [r0, #0x0]
	add		r6, r4, #0x0
	add		r6, #0xf8
	cmp		r0, #0x1
	bne		_080895de
	mov		r5, #0x0
	mov		r3, #0x0
	ldr		r0, [r6, #0x0]
	sub		r2, r0, #0x1
	mov		r1, r12
	asr		r7, r1, #0x1
	cmp		r2, #0x0
	blt		_080895d6
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x94
	mul		r0, r2
	add		r0, #0x90
	add		r1, r0, r1
_080895b6:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080895c4
	mov		r5, #0x1
	b		_080895cc

_080895c0:	.4byte 0x080db724

_080895c4:
	cmp		r5, #0x1
	beq		_080895cc
	cmp		r2, #0x0
	bne		_080895ce
_080895cc:
	add		r3, #0x1
_080895ce:
	sub		r1, #0x94
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080895b6
_080895d6:
	sub		r0, r3, #0x1
	add		r1, r0, #0x0
	mul		r1, r7
	mov		r9, r1
_080895de:
	mov		r3, #0x0
	add		r5, r6, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r3, r0
	bge		_08089614
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r7, r4, r0
	mov		r2, r10
	add		r2, r9
	mov		r4, #0x0
	mov		r1, r12
	neg		r6, r1
_080895f8:
	ldr		r0, [r7, #0x0]
	add		r0, r0, r4
	add		r1, r0, #0x0
	add		r1, #0x54
	strh	r2, [r1, #0x0]
	add		r0, #0x56
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r2, r2, r6
	add		r4, #0x94
	add		r3, #0x1
	ldr		r0, [r5, #0x0]
	cmp		r3, r0
	blt		_080895f8
_08089614:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x89622, 0x2
	thumb_func_end sub_08089524

	thumb_func_start sub_08089624
sub_08089624:
	push	{ r4, r5, r6, r7, lr }
	add		r1, r0, #0x0
	add		r0, #0xfc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08089672
	mov		r6, #0x0
	add		r0, r1, #0x0
	add		r0, #0xf8
	ldr		r0, [r0, #0x0]
	sub		r4, r0, #0x1
	cmp		r4, #0x0
	blt		_08089672
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r7, r1, r0
	mov		r0, #0x94
	add		r5, r4, #0x0
	mul		r5, r0
_0808964a:
	ldr		r0, [r7, #0x0]
	add		r1, r0, r5
	add		r0, r1, #0x0
	add		r0, #0x90
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808965c
	mov		r6, #0x1
	b		_08089664
_0808965c:
	cmp		r6, #0x1
	beq		_08089664
	cmp		r4, #0x0
	bne		_0808966a
_08089664:
	add		r0, r1, #0x0
	bl		sub_0808e4a0
_0808966a:
	sub		r5, #0x94
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0808964a
_08089672:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08089624

	thumb_func_start sub_08089678
sub_08089678:
	push	{ r4, r5, lr }
	mov		r12, r0
	add		r4, r1, #0x0
	mov		r5, #0x0
	add		r0, #0xf8
	ldr		r0, [r0, #0x0]
	sub		r3, r0, #0x1
	cmp		r3, #0x0
	blt		_080896be
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r1, [r0, #0x0]
	mov		r0, #0x94
	mul		r0, r3
	add		r0, #0x54
	add		r1, r0, r1
_0808969a:
	ldr		r0, [r1, #0x3c]
	cmp		r0, #0x0
	bne		_080896a8
	cmp		r5, #0x1
	beq		_080896a8
	cmp		r3, #0x0
	bne		_080896b6
_080896a8:
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	str		r0, [r4, #0x0]
	mov		r3, #0x2
	ldrsh	r0, [r1, r3]
	str		r0, [r2, #0x0]
	b		_080896c4
_080896b6:
	sub		r1, #0x94
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0808969a
_080896be:
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	str		r0, [r4, #0x0]
_080896c4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x896CA, 0x2
	thumb_func_end sub_08089678

	thumb_func_start sub_080896cc
sub_080896cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	add		r6, r1, #0x0
	add		r0, #0xec
	str		r6, [r0, #0x0]
	mov		r7, #0x0
	mov		r1, r9
	add		r1, #0xf8
	ldr		r0, [r1, #0x0]
	cmp		r7, r0
	bge		_0808973a
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r0, r9
	str		r0, [sp, #0x0]
	mov		r10, r1
	mov		r1, #0x0
	mov		r8, r1
_080896fa:
	add		r0, r6, #0x0
	mov		r1, #0xa
	bl		sub_080bb608
	add		r5, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, #0xa
	bl		sub_080bb600
	add		r6, r0, #0x0
	ldr		r0, [sp, #0x0]
	ldr		r4, [r0, #0x0]
	add		r4, r8
	add		r0, r4, #0x0
	add		r0, #0x90
	str		r5, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_0808e3c0
	add		r4, #0x70
	add		r0, r4, #0x0
	bl		sub_0808b3d4
	mov		r1, #0x94
	add		r8, r1
	add		r7, #0x1
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	cmp		r7, r0
	blt		_080896fa
_0808973a:
	cmp		r6, #0x0
	beq		_0808974a
	ldr		r0, _08089764
	ldr		r1, _08089768
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808974a:
	mov		r1, r9
	add		r1, #0xfc
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x89762, 0x2

_08089764:	.4byte 0x080db70c @ y_tamura/tamUtil.cpp
_08089768:	.4byte 0x00000149
	thumb_func_end sub_080896cc

	thumb_func_start sub_0808976c
sub_0808976c:
	push	{ lr }
	add		r1, r0, #0x0
	add		r1, #0xec
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	bl		sub_080896cc
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8977E, 0x2
	thumb_func_end sub_0808976c

	thumb_func_start sub_08089780
sub_08089780:
	push	{ lr }
	add		r1, r0, #0x0
	add		r1, #0xec
	ldr		r1, [r1, #0x0]
	sub		r1, #0x1
	bl		sub_080896cc
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x89792, 0x2
	thumb_func_end sub_08089780

	thumb_func_start sub_08089794
sub_08089794:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	mov		r1, #0x0
	add		r4, r3, #0x0
	add		r4, #0xf8
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bge		_080897c8
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r5, r3, r0
	mov		r2, #0x0
_080897b0:
	ldr		r0, [r5, #0x0]
	add		r0, r0, r2
	add		r3, r0, #0x0
	add		r3, #0x69
	strb	r7, [r3, #0x0]
	add		r0, #0x5c
	strh	r6, [r0, #0x0]
	add		r2, #0x94
	add		r1, #0x1
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	blt		_080897b0
_080897c8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x897CE, 0x2
	thumb_func_end sub_08089794

	thumb_func_start sub_080897d0
sub_080897d0:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r1, #0x82
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r1, _08089838
	str		r1, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0808981e
	sub		r0, r2, #0x4
	ldr		r1, [r0, #0x0]
	mov		r0, #0x94
	mul		r0, r1
	add		r4, r2, r0
	cmp		r2, r4
	beq		_08089810
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r5, r6, r0
_08089800:
	sub		r4, #0x94
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	ldr		r0, [r5, #0x0]
	cmp		r0, r4
	bne		_08089800
_08089810:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	sub		r0, #0x4
	bl		sub_0808afd0
_0808981e:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	bl		sub_0808e28c
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x89836, 0x2

_08089838:	.4byte 0x080e313c
	thumb_func_end sub_080897d0

	thumb_func_start sub_0808983c
sub_0808983c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08089124
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldr		r0, _0808987c
	str		r0, [r1, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xf8
	str		r1, [r0, #0x0]
	sub		r0, #0x8
	str		r1, [r0, #0x0]
	add		r0, #0xc
	str		r1, [r0, #0x0]
	sub		r0, #0x14
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	add		r0, #0x8
	str		r1, [r0, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8987A, 0x2

_0808987c:	.4byte 0x080e313c
	thumb_func_end sub_0808983c

	thumb_func_start sub_08089880
sub_08089880:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	asr		r1, r1, #0x8
	asr		r2, r2, #0x8
	add		r4, r5, #0x0
	add		r4, #0xc8
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	str		r0, [r4, #0x0]
	add		r4, #0x4
	add		r0, r5, #0x0
	add		r0, #0xac
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd0
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	add		r1, r3, #0x0
	bl		sub_080bb600
	add		r1, r5, #0x0
	add		r1, #0xdc
	str		r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x898CE, 0x2
	thumb_func_end sub_08089880

	thumb_func_start sub_080898d0
sub_080898d0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r4, #0xc8
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	str		r0, [r4, #0x0]
	add		r4, #0x4
	add		r0, r5, #0x0
	add		r0, #0xac
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x8
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd0
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	add		r1, r3, #0x0
	bl		sub_080bb600
	add		r1, r5, #0x0
	add		r1, #0xdc
	str		r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8991A, 0x2
	thumb_func_end sub_080898d0

	thumb_func_start sub_0808991c
sub_0808991c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, #0x90
	ldr		r0, [r0, #0x0]
	mov		r5, #0x1
	neg		r5, r5
	cmp		r0, r5
	bne		_08089938
	ldr		r0, _0808996c
	mov		r1, #0x6b
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_08089938:
	add		r0, r4, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	cmp		r0, r5
	bne		_0808994e
	ldr		r0, _0808996c
	mov		r1, #0x6c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808994e:
	add		r0, r4, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08089974
	add		r1, r4, #0x0
	add		r1, #0xa0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bgt		_08089970
	add		r0, r4, #0x0
	add		r0, #0x70
	bl		sub_0808b3d4
	b		_08089976

_0808996c:	.4byte 0x080db70c @ y_tamura/tamUtil.cpp

_08089970:
	sub		r0, #0x1
	str		r0, [r1, #0x0]
_08089974:
	mov		r0, #0x0
_08089976:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808991c

	thumb_func_start sub_0808997c
sub_0808997c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	add		r7, r3, #0x0
	add		r0, #0x90
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0808999a
	ldr		r0, _080899e0
	mov		r1, #0x48
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808999a:
	cmp		r5, #0x40
	bne		_080899aa
	ldr		r0, _080899e0
	mov		r1, #0x49
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080899aa:
	add		r3, r4, #0x0
	add		r3, #0x94
	ldr		r0, [r3, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x98
	cmp		r0, r5
	bne		_080899be
	ldr		r0, [r2, #0x0]
	cmp		r0, r6
	beq		_080899e4
_080899be:
	add		r0, r4, #0x0
	add		r0, #0xa0
	str		r7, [r0, #0x0]
	str		r5, [r3, #0x0]
	str		r6, [r2, #0x0]
	sub		r0, #0x38
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	sub		r0, #0x1
	strb	r1, [r0, #0x0]
	ldr		r1, [r3, #0x0]
	ldr		r2, [r2, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e3c0
	b		_080899e8

.incbin "base.gba", 0x899DE, 0x2

_080899e0:	.4byte 0x080db70c @ y_tamura/tamUtil.cpp

_080899e4:
	mov		r0, #0x1
	neg		r0, r0
_080899e8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x899EE, 0x2
	thumb_func_end sub_0808997c

	thumb_func_start sub_080899f0
sub_080899f0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r2, #0x0
	add		r7, r3, #0x0
	add		r5, r4, #0x0
	add		r5, #0x90
	ldr		r0, [r5, #0x0]
	cmp		r0, r1
	beq		_08089a28
	str		r1, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e278
	ldr		r1, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	add		r0, #0x69
	strb	r6, [r0, #0x0]
	sub		r0, #0xd
	strh	r7, [r0, #0x0]
	add		r0, #0x38
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
_08089a28:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x89A2E, 0x22
	thumb_func_end sub_080899f0

	thumb_func_start sub_08089a50
sub_08089a50:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, _08089a6c
	cmp		r1, r0
	beq		_08089a9c
	cmp		r1, r0
	bhi		_08089a70
	mov		r0, #0xd0
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08089ab4
	b		_08089ab0

_08089a6c:	.4byte 0x00000F82

_08089a70:
	ldr		r0, _08089aa0
	cmp		r1, r0
	bne		_08089ab0
	mov		r0, #0xac
	lsl		r0, r0, #0x6
	cmp		r3, r0
	bne		_08089a9c
	ldr		r4, _08089aa4
	ldr		r1, _08089aa8
	add		r0, r4, r1
	ldr		r1, _08089aac
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	bl		sub_080b73f8
	bl		sub_0808a540
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b781c
_08089a9c:
	mov		r0, #0x0
	b		_08089ab8

_08089aa0:	.4byte 0x00000F83
_08089aa4:	.4byte 0x0200DB50
_08089aa8:	.4byte 0xFFFFFEB0
_08089aac:	.4byte 0x0000042C

_08089ab0:
	add		r0, r4, #0x0
	b		_08089ab8
_08089ab4:
	lsl		r0, r2, #0x2
	add		r0, r4, r0
_08089ab8:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x89ABE, 0xA82
	thumb_func_end sub_08089a50

	thumb_func_start sub_0808a540
sub_0808a540:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	bl		sub_080b74f4
	add		r0, r7, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	ldr		r0, _0808a738
	str		r0, [r7, #0x4c]
	ldr		r0, _0808a73c
	str		r0, [r7, #0xc]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r7, #0x54]
	mov		r1, #0x0
	mov		r4, #0xf
	mov		r2, #0x96
	lsl		r2, r2, #0x2
	add		r0, r7, r2
_0808a570:
	strh	r1, [r0, #0x0]
	sub		r0, #0x20
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0808a570
	mov		r3, #0xac
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	ldr		r2, _0808a740
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, #0xa6
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	mov		r0, #0xa8
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	ldr		r0, _0808a744
	str		r0, [r1, #0x0]
	mov		r3, #0xa9
	lsl		r3, r3, #0x2
	add		r3, r3, r7
	mov		r9, r3
	ldr		r0, _0808a748
	str		r0, [r3, #0x0]
	mov		r3, #0xaa
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	ldr		r5, _0808a74c
	str		r5, [r0, #0x0]
	add		r3, #0x4
	add		r0, r7, r3
	str		r5, [r0, #0x0]
	add		r3, #0xc
	add		r0, r7, r3
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	mov		r3, #0xa7
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	mov		r3, #0x1
	neg		r3, r3
	str		r3, [r0, #0x0]
	mov		r3, #0xd0
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	ldr		r6, [r2, #0x4]
	str		r6, [r0, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x2
	add		r4, r7, r0
	mov		r2, #0x0
	str		r2, [r4, #0x0]
	sub		r3, #0x10
	add		r3, r3, r7
	mov		r8, r3
	ldr		r0, [r1, #0x0]
	ldr		r1, _0808a750
	bl		sub_080bc248
	mov		r1, r8
	str		r0, [r1, #0x0]
	mov		r2, #0xcd
	lsl		r2, r2, #0x2
	add		r2, r2, r7
	mov		r10, r2
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	ldr		r1, _0808a754
	bl		sub_080bc21c
	mov		r1, r10
	str		r0, [r1, #0x0]
	mov		r2, #0xce
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	mov		r3, #0xcf
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r5, [r0, #0x0]
	mov		r1, #0xd2
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	sub		r3, #0x10
	add		r0, r7, r3
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r0, #0x0]
	mov		r2, #0xd3
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	ldmia	r4!, { r1, r2, r3 }
	stmia	r0!, {  r1, r2, r3 }
	ldmia	r4!, { r1, r2, r3 }
	stmia	r0!, {  r1, r2, r3 }
	ldmia	r4!, { r1, r2, r3 }
	stmia	r0!, {  r1, r2, r3 }
	mov		r3, #0xb5
	lsl		r3, r3, #0x2
	add		r0, r7, r3
	str		r6, [r0, #0x0]
	mov		r1, #0xaf
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	sub		r3, #0x10
	add		r1, r7, r3
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	add		r3, #0x4
	add		r1, r7, r3
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	add		r3, #0x4
	add		r0, r7, r3
	str		r5, [r0, #0x0]
	mov		r1, #0xb4
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r5, [r0, #0x0]
	mov		r2, #0xb7
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	sub		r1, #0x10
	add		r0, r7, r1
	mov		r2, #0x1
	neg		r2, r2
	str		r2, [r0, #0x0]
	ldr		r4, _0808a758
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0800bcd0
	ldr		r3, _0808a75c
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	ldr		r1, _0808a760
	add		r0, r4, #0x0
	bl		sub_0800bcd0
	mov		r2, #0x81
	lsl		r2, r2, #0x3
	add		r1, r7, r2
	str		r0, [r1, #0x0]
	mov		r1, #0x85
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	bl		sub_0800bcd0
	ldr		r3, _0808a764
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	ldr		r1, _0808a768
	add		r0, r4, #0x0
	bl		sub_0800bcd0
	mov		r2, #0x84
	lsl		r2, r2, #0x3
	add		r1, r7, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x40
	bl		sub_0800bcd0
	ldr		r3, _0808a76c
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x41
	bl		sub_0800bcd0
	ldr		r2, _0808a770
	add		r1, r7, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x42
	bl		sub_0800bcd0
	mov		r3, #0x82
	lsl		r3, r3, #0x3
	add		r1, r7, r3
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x43
	bl		sub_0800bcd0
	mov		r2, #0x85
	lsl		r2, r2, #0x3
	add		r1, r7, r2
	str		r0, [r1, #0x0]
	mov		r4, #0x0
	ldr		r3, _0808a774
	add		r5, r7, r3
_0808a708:
	ldr		r0, _0808a758
	add		r1, r4, #0x0
	bl		sub_0800bcd0
	stmia	r5!, { r0 }
	add		r4, #0x1
	cmp		r4, #0xf
	ble		_0808a708
	ldr		r0, _0808a758
	ldr		r1, _0808a778
	bl		sub_0800bcd0
	ldr		r2, _0808a77c
	add		r1, r7, r2
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8A736, 0x2

_0808a738:	.4byte 0x080e034c
_0808a73c:	.4byte 0x080e314c
_0808a740:	.4byte 0x0200D9C4
_0808a744:	.4byte 0x43A00000
_0808a748:	.4byte 0x42A00000
_0808a74c:	.4byte 0x3F800000
_0808a750:	.4byte 0x42200000
_0808a754:	.4byte 0x41A00000
_0808a758:	.4byte 0x0200A26C
_0808a75c:	.4byte 0x00000404
_0808a760:	.4byte 0x00000105
_0808a764:	.4byte 0x0000041C
_0808a768:	.4byte 0x0000010B
_0808a76c:	.4byte 0x0000040C
_0808a770:	.4byte 0x00000424
_0808a774:	.4byte 0x00000444
_0808a778:	.4byte 0x00000113
_0808a77c:	.4byte 0x00000414
	thumb_func_end sub_0808a540

	thumb_func_start sub_0808a780
sub_0808a780:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r1, #0x0
	add		r0, r2, #0x0
	add		r5, r3, #0x0
	ldr		r6, [sp, #0x14]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r4, r7, r1
	bl		sub_080bc7e8
	lsl		r0, r0, #0x10
	str		r0, [r4, #0x0]
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	add		r0, r5, #0x0
	bl		sub_080bc7e8
	lsl		r0, r0, #0x10
	str		r0, [r4, #0x0]
	add		r0, r6, #0x0
	bl		sub_080bc7e8
	lsl		r0, r0, #0x10
	mov		r2, #0x97
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	strh	r0, [r1, #0x0]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	mov		r3, #0x0
	cmp		r7, #0x0
	beq		_0808a7c8
	add		r3, r7, #0x0
	add		r3, #0x88
_0808a7c8:
	ldr		r0, [r2, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0808a7d2
	neg		r1, r0
_0808a7d2:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0808a7da
	neg		r1, r1
_0808a7da:
	add		r0, r3, #0x0
	add		r0, #0x54
	strh	r1, [r0, #0x0]
	ldr		r0, [r2, #0x4]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0808a7ea
	neg		r1, r0
_0808a7ea:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0808a7f2
	neg		r1, r1
_0808a7f2:
	add		r0, r3, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	mov		r1, #0x97
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x5c
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808a780

	thumb_func_start sub_0808a80c
sub_0808a80c:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	mov		r4, #0x1
	neg		r4, r4
	mov		r3, #0x0
	cmp		r3, r1
	bge		_0808a838
	mov		r5, #0x0
	ldrsh	r0, [r2, r5]
	cmp		r0, #0x0
	bne		_0808a826
	mov		r4, #0x0
	b		_0808a838
_0808a826:
	add		r2, #0x20
	add		r3, #0x1
	cmp		r3, r1
	bge		_0808a838
	mov		r5, #0x0
	ldrsh	r0, [r2, r5]
	cmp		r0, #0x0
	bne		_0808a826
	add		r4, r3, #0x0
_0808a838:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808a80c

	thumb_func_start sub_0808a840
sub_0808a840:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r0, #0x40
	ldr		r1, _0808a874
	str		r1, [r5, #0x4c]
	ldr		r1, _0808a878
	str		r1, [r5, #0xc]
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0808a86c
	add		r0, r5, #0x0
	bl		sub_080b74c8
_0808a86c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8A872, 0x2

_0808a874:	.4byte 0x080e034c
_0808a878:	.4byte 0x080e314c
	thumb_func_end sub_0808a840

	thumb_func_start sub_0808a87c
sub_0808a87c:
	push	{ r4, r5, r6, lr }
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	ldr		r0, [r4, #0x18]
	mov		r1, #0xc
	ldrsb	r1, [r0, r1]
	cmp		r1, #0x8
	beq		_0808a898
	cmp		r1, #0x8
	bgt		_0808a8e2
	cmp		r1, #0x1
	beq		_0808a8d8
	b		_0808a8e2
_0808a898:
	str		r1, [r4, #0x0]
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x10]
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x1c]
	ldr		r1, [r0, #0x0]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	add		r0, r5, #0x0
	bl		sub_0800be04
	ldr		r0, [r4, #0x1c]
	ldr		r1, [r0, #0x4]
	add		r0, r5, #0x0
	bl		sub_0800bdbc
	ldr		r0, [r4, #0x1c]
	ldr		r1, [r0, #0x8]
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	add		r0, r6, #0x0
	bl		sub_0800be04
	ldr		r0, [r4, #0x1c]
	ldr		r1, [r0, #0xc]
	add		r0, r6, #0x0
	bl		sub_0800bdbc
_0808a8d8:
	ldr		r0, [r4, #0x18]
	ldr		r1, [r0, #0x4]
	str		r1, [r4, #0x10]
	ldr		r1, [r0, #0x8]
	str		r1, [r4, #0x14]
_0808a8e2:
	add		r0, #0x10
	str		r0, [r4, #0x18]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808a87c

	arm_func_start sub_0808a8ec
sub_0808a8ec:   
    stmdb   sp!, { r8-r11 }
    mov     r12, #LCDControl
    ldr     r11, _0808a92c                              
    ldr     r11, [r11, #0x0]
    add     r10, r11, #0x28
    mov     r9, #0x1
    mov     r8, #0x0
    strb    r8, [r12, #0x208]
    ldmia   r10, { r0, r1 }
    stmia   r10!, { r1 }
    stmia   r10!, { r0 }
    ldrb    r0, [ r11, #0x5]
    strb    r8, [ r11, #0x5]
    strb    r9, [ r12, #0x208]
    ldmia   sp!, { r8-r11 }
    bx      lr

_0808a92c:                                   
    .4byte 0x030072D4
	arm_func_end sub_0808a87c

_0808a930:   
	.arm                                                                            
    mov        r12, #LCDControl
    add        r12, r12, #0x120
    ldmia      r12, { r0, r1 }
    stmdb      sp!, { r7-r11 }
    ldr        r11, _0808aa70    
    ldr        r11, [r11, #0x0]
    mov        r8, #0xfe
    add        r8, r8, #0xfe00
    stmdb      sp!, { r0, r1 }
    mov        r0, #0x1
    ldrh       r1, [r12, #0x8]
    and        r1, r0, r1, lsr #0x6
    strb       r1, [r11, #0x7]
    ldr        r9, [r11, #0x14]
    ldr        r10, [r11, #0x18]
    ldrh       r2, [sp, #0x0]
    cmp        r2, r8
    bne        _0808a9d4
    cmp        r10, #0x12
    ble        _0808a9d4
    mvn        r10, #0x1
    ldr        r0, [r11, #0x28]
    ldr        r1, [r11, #0x24]
    str        r0, [r11, #0x24]
    str        r1, [r11, #0x28]
    mov        r2, #0x0
    ldrb       r0, [r11, #0x4]
    beq        _0808a9b8
    ldr        r0, [r11, #0x1c]
    ldr        r1, [r11, #0x20]
    str        r0, [r11, #0x20]
    str        r1, [r11, #0x1c]
    strb       r2, [r11, #0x4]
    mov        r9, #0x0
_0808a9b8:
	strh       r2, [r12, #0xe8]
    ldr        r1, _0808aa74    
    ldrh       r0, [r1, #0x0]
    orr        r0, r0, #0x80
    strh       r0, [r1, #0x0]
    mov        r3, #0x1
    strh       r3, [r12, #0xe8]
_0808a9d4:
	cmp        r9, #0x12
    ldrle      r0, [r11, #0x20]
.4byte 0xd19010b9 @ ldrhle     r1, [r0, r9]
.4byte 0xd1cc10ba @ strhle     r1, [r12, #0xa]
    cmp        r9, #0x16
    addlt      r9, r9, #0x2
    cmp        r10, #0x0
    addlt      sp, sp, #0x8
    blt        _0808aa20
    mov        r8, #0x3
    ldr        r7, [r11, #0x24]
    add        r7, r7, r10
_0808aa04:
	ldrh       r0, [sp], #0x2
	strh       r0, [r7], #0x18
	subs       r8, r8, #0x1
	bge        _0808aa04
	cmp        r10, #0x12
	moveq      r0, #0x1
.4byte 0x05cb0005 @ strbeq     r0, [r11, #0x5]
_0808aa20:
	cmp        r10, #0x16
	addlt      r10, r10, #0x2
	ldrb       r0, [r11, #0x0]
	movne      r2, #0x0
.4byte 0x114c21b2 @ strhne     r2, [r12, #-0x12]
	cmp        r9, #0x16
	bge        _0808aa58
	cmp        r0, #0x0
	beq        _0808aa58
	ldrh       r1, [r12, #0x8]
	orr        r1, r1, #0x80
	strh       r1, [r12, #0x8]
	mov        r2, #0xc0
	strh       r2, [r12, #-0x12]
_0808aa58:
	str        r9, [r11, #0x14]
    str        r10, [r11, #0x18]
    mov        r0, #0x1
    strb       r0, [r11, #0x9]
    ldmia      sp!, { r7-r11 }
    bx         lr

_0808aa70: 	.4byte 0x030072D4
_0808aa74:	.4byte 0x03007FF8

	non_word_aligned_thumb_func_start sub_0808aa78
sub_0808aa78:
	ldr		r3, _0808ab08
	mov		r2, #0xc
	mov		r1, pc
	bx		r3

_0808aa80:
	.arm
	ldr		r0, _0808aa88                                
	cpy		pc ,r0

_0808aa88: 	.4byte 0x080000C4                                   
_0808aa8c:	.4byte 0x00004770
	thumb_func_end sub_0808aa78

	thumb_func_start sub_0808aa90
sub_0808aa90:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r4, [r5, #0xc]
	mov		r7, #0x0
	b		_0808aaae
_0808aa9c:
	ldr		r1, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	add		r0, r6, #0x0
	bl		sub_0808c818
	ldr		r0, [r4, #0x4]
	add		r6, r6, r0
	add		r7, #0x1
	add		r4, #0x8
_0808aaae:
	ldr		r0, [r5, #0x10]
	cmp		r7, r0
	blt		_0808aa9c
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8AABA, 0x2
	thumb_func_end sub_0808aa90

	thumb_func_start sub_0808aabc
sub_0808aabc:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r4, [r5, #0xc]
	mov		r7, #0x0
	b		_0808aada
_0808aac8:
	ldr		r0, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	add		r1, r6, #0x0
	bl		sub_0808c818
	ldr		r0, [r4, #0x4]
	add		r6, r6, r0
	add		r7, #0x1
	add		r4, #0x8
_0808aada:
	ldr		r0, [r5, #0x10]
	cmp		r7, r0
	blt		_0808aac8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8AAE6, 0x2
	thumb_func_end sub_0808aabc

	thumb_func_start sub_0808aae8
sub_0808aae8:
	push	{ r4, lr }
	ldr		r4, _0808aaf0
	b		_0808aafa

.incbin "base.gba", 0x8AAEE, 0x2

_0808aaf0:	.4byte 0x080c3cfc

_0808aaf4:
	ldmia	r4!, { r0 }
	bl		sub_080bbc70
_0808aafa:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0808aaf4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8AB06, 0x2

_0808ab08: .4byte 0x0808C819

.include "main.s"

	thumb_func_start sub_0808acf8
sub_0808acf8:
	push	{ lr }
	ldr		r0, _0808ad08
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0808ad0c
	bl		sub_080bbc70
	b		_0808ad12

_0808ad08:	.4byte 0x0200CDC8

_0808ad0c:
	mov		r0, #0x1
	bl		sub_080014c0
_0808ad12:
	ldr		r0, _0808ad48
	bl		sub_080007bc
	ldr		r0, _0808ad4c
	bl		sub_08001898
	mov		r0, #0x0
	bl		sub_08000e48
	ldr		r0, _0808ad50
	bl		sub_080b7130
	bl		sub_0808f75c
	bl		sub_080964bc
	bl		sub_08094f9e
	ldr		r0, _0808ad54
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0808ad44
	bl		sub_080bba88
_0808ad44:
	pop		{ r0 }
	bx		r0

_0808ad48:	.4byte 0x03005918
_0808ad4c:	.4byte 0x02000B2C
_0808ad50:	.4byte 0x0200DA00
_0808ad54:	.4byte 0x0200CDBC
	thumb_func_end sub_0808acf8

	thumb_func_start sub_0808ad58
sub_0808ad58:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _0808adac
	str		r5, [r0, #0x0]
	str		r6, [r5, #0x0]
_0808ad64:
	ldr		r0, _0808adb0
	ldr		r7, [r0, #0x0]
	mov		r4, #0x0
_0808ad6a:
	add		r0, r7, #0x0
	asr		r0, r4
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808ad80
	lsl		r0, r4, #0x4
	ldr		r1, _0808adb4
	add		r0, r0, r1
	bl		sub_080b7890
_0808ad80:
	add		r4, #0x1
	cmp		r4, #0x1f
	ble		_0808ad6a
	bl		sub_0808acf8
	ldr		r2, [r5, #0x0]
	cmp		r2, r6
	beq		_0808ad64
	ldr		r0, _0808adb8
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0808ada2
	ldr		r0, _0808adbc
	add		r1, r6, #0x0
	bl		sub_0808c670
_0808ada2:
	ldr		r0, [r5, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8ADAA, 0x2

_0808adac:	.4byte 0x0200BEB4
_0808adb0:	.4byte 0x0200DD2C
_0808adb4:	.4byte 0x0200DA40
_0808adb8:	.4byte 0x0200CDBC
_0808adbc:	.4byte 0x080dc0fc @ *** Through out \"vloop()\" $%x=>$%x                                     @=
	thumb_func_end sub_0808ad58

	thumb_func_start sub_0808adc0
sub_0808adc0:
	push	{ lr }
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0808add4
	ldr		r0, _0808add8
	mov		r1, #0x9f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808add4:
	pop		{ r1 }
	bx		r1

_0808add8:	.4byte 0x080dc0e0 @ ../system/agbmain.cpp

.incbin "base.gba", 0x8ADDC, 0x1C
	thumb_func_end sub_0808adc0

	thumb_func_start sub_0808adf8
sub_0808adf8:
	push	{ r4, lr }
	add		r1, r0, #0x0
	add		r0, #0xf
	mov		r2, #0xf
	and		r0, r2
	sub		r0, #0xf
	sub		r1, r1, r0
	ldr		r0, _0808ae28
	bl		sub_080b6fec
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_0808ae1e
	ldr		r0, _0808ae2c
	mov		r1, #0xaa
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808ae1e:
	add		r0, r4, #0x0
	add		r0, #0x10
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0808ae28:	.4byte 0x0200D9CC
_0808ae2c:	.4byte 0x080dc0e0 @ ../system/agbmain.cpp
	thumb_func_end sub_0808adf8

	thumb_func_start sub_0808ae30
sub_0808ae30:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r4, r5
	sub		r0, r4, #0x1
	bl		sub_080bbeac
	add		r0, #0x1
	sub		r4, r4, r0
	add		r4, r4, r5
	ldr		r0, _0808ae84
	add		r1, r4, #0x0
	bl		sub_080b6fec
	add		r6, r0, #0x0
	cmp		r6, #0x0
	bne		_0808ae5e
	ldr		r0, _0808ae88
	mov		r1, #0xb1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808ae5e:
	add		r4, r5, #0x0
	add		r4, #0xc
	add		r4, r6, r4
	sub		r0, r4, #0x1
	add		r1, r5, #0x0
	bl		sub_080bbeac
	add		r0, #0x1
	sub		r4, r4, r0
	add		r1, r4, #0x0
	sub		r1, #0x10
	add		r0, r6, #0x0
	ldmia	r0!, { r2, r3, r5 }
	stmia	r1!, {  r2, r3, r5 }
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8AE82, 0x2

_0808ae84:	.4byte 0x0200D9CC
_0808ae88:	.4byte 0x080dc0e0 @ ../system/agbmain.cpp
	thumb_func_end sub_0808ae30

	thumb_func_start sub_0808ae8c
sub_0808ae8c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0808aebe
	add		r5, r4, #0x0
	sub		r5, #0x10
	add		r0, r5, #0x0
	bl		sub_0808aec8
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	beq		_0808aeb2
	ldr		r0, _0808aec4
	mov		r1, #0xba
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808aeb2:
	add		r0, r4, #0x0
	sub		r0, #0xc
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		sub_080b704c
_0808aebe:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0808aec4:	.4byte 0x080dc0e0 @ ../system/agbmain.cpp
	thumb_func_end sub_0808ae8c

	thumb_func_start sub_0808aec8
sub_0808aec8:
	push	{ r4, lr }
	lsr		r4, r0, #0x18
	cmp		r4, #0x2
	beq		_0808aed6
	cmp		r4, #0x3
	beq		_0808aee0
	b		_0808af00
_0808aed6:
	ldr		r2, _0808aedc
	b		_0808aee2

.incbin "base.gba", 0x8AEDA, 0x2

_0808aedc:	.4byte 0x0200D9CC

_0808aee0:
	ldr		r2, _0808aefc
_0808aee2:
	ldr		r3, [r2, #0x8]
	cmp		r0, r3
	bcc		_0808af00
	ldr		r1, [r0, #0x0]
	add		r1, r0, r1
	ldr		r0, [r2, #0x4]
	add		r0, r3, r0
	cmp		r1, r0
	bhi		_0808af00
	mov		r0, #0x1
	neg		r0, r0
	b		_0808af02

.incbin "base.gba", 0x8AEFA, 0x2

_0808aefc:	.4byte 0x0200DA00

_0808af00:
	add		r0, r4, #0x0
_0808af02:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808aec8

	thumb_func_start sub_0808af08
sub_0808af08:
	push	{ r4, lr }
	add		r4, r0, #0x0
	sub		r0, #0x10
	cmp		r4, #0x0
	beq		_0808af1e
	bl		sub_0808aec8
	cmp		r0, #0x0
	bge		_0808af1e
	add		r0, r4, #0x0
	b		_0808af20
_0808af1e:
	mov		r0, #0x0
_0808af20:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8AF26, 0x26
	thumb_func_end sub_0808af08

	thumb_func_start sub_0808af4c
sub_0808af4c:
	push	{ lr }
	lsr		r1, r0, #0xc
	mov		r2, #0x0
	ldr		r3, _0808af6c
	add		r0, r1, r3
	cmp		r0, #0x3f
	bls		_0808af62
	ldr		r3, _0808af70
	add		r0, r1, r3
	cmp		r0, #0x7
	bhi		_0808af64
_0808af62:
	mov		r2, #0x1
_0808af64:
	add		r0, r2, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8AF6A, 0x2

_0808af6c:	.4byte 0xFFFFE000
_0808af70:	.4byte 0xFFFFD000

.incbin "base.gba", 0x8AF74, 0x20
	thumb_func_end sub_0808af4c

	thumb_func_start sub_0808af94
sub_0808af94:
	push	{ lr }
	bl		sub_0808adf8
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8AF9E, 0xE
	thumb_func_end sub_0808af94

	thumb_func_start sub_0808afac
sub_0808afac:
	push	{ lr }
	bl		sub_0808ae8c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8AFB6, 0x2
	thumb_func_end sub_0808afac

	thumb_func_start sub_0808afb8
sub_0808afb8:
	push	{ lr }
	bl		sub_0808adf8
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8AFC2, 0xE
	thumb_func_end sub_0808afb8

	thumb_func_start sub_0808afd0
sub_0808afd0:
	push	{ lr }
	bl		sub_0808ae8c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8AFDA, 0x2
	push	{ lr }
	ldr		r0, _0808afec
	ldr		r1, _0808aff0
	bl		sub_080b6314
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8AFEA, 0x2

_0808afec:	.4byte 0x0200BDD4
_0808aff0:	.4byte 0xFFFFDE08
	thumb_func_end sub_0808afd0

	thumb_func_start sub_0808aff4
sub_0808aff4:
	push	{ r4, r5, r6, r7, lr }
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0808b0cc
	mov		r0, #0xbe
	lsl		r0, r0, #0x5
	bl		sub_0808afb8
	add		r6, r0, #0x0
	add		r3, r6, #0x0
	ldr		r5, _0808b0b0
	mov		r4, #0x0
	ldr		r7, _0808b0b4
_0808b010:
	ldrb	r2, [r5, #0x0]
	add		r5, #0x1
	mov		r1, #0x80
	and		r1, r2
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x1b
	mov		r0, #0x40
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1e
	orr		r1, r0
	strb	r1, [r3, #0x0]
	mov		r1, #0x20
	and		r1, r2
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x19
	mov		r0, #0x10
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1c
	orr		r1, r0
	strb	r1, [r3, #0x1]
	mov		r1, #0x8
	and		r1, r2
	lsl		r1, r1, #0x1
	mov		r0, #0x4
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1a
	orr		r1, r0
	strb	r1, [r3, #0x2]
	mov		r0, #0x2
	and		r0, r2
	lsl		r0, r0, #0x3
	mov		r1, #0x1
	and		r2, r1
	orr		r0, r2
	strb	r0, [r3, #0x3]
	ldr		r1, [r3, #0x0]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	stmia	r3!, { r0 }
	add		r4, #0x1
	cmp		r4, r7
	bls		_0808b010
	ldr		r1, _0808b0b8
	mov		r2, #0xbe
	lsl		r2, r2, #0x4
	ldr		r4, _0808b0bc
	add		r0, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_08000a2c
	ldr		r5, PTR_PTR_H_Reset_0808b0c0
	ldr		r0, _0808b0c4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r5, #0x0
	mov		r2, #0x20
	add		r3, r4, #0x0
	bl		sub_08000a2c
	ldr		r1, _0808b0c8
	add		r0, r5, #0x0
	mov		r2, #0x20
	add		r3, r4, #0x0
	bl		sub_08000a2c
	cmp		r6, #0x0
	beq		_0808b0a6
	add		r0, r6, #0x0
	bl		sub_0808afd0
_0808b0a6:
	mov		r0, #0x1
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8B0AE, 0x2

_0808b0b0:	.4byte 0x080dc144
_0808b0b4:	.4byte 0x000002F7
_0808b0b8:	.4byte 0x06005400
_0808b0bc:	.4byte 0x84000003
PTR_PTR_H_Reset_0808b0c0:	.4byte PTR_H_Reset_080dc124
_0808b0c4:	.4byte 0x0200CE70
_0808b0c8:	.4byte 0x050001E0
	thumb_func_end sub_0808aff4

	thumb_func_start sub_0808b0cc
sub_0808b0cc:
	ldr		r2, _0808b0d8
	strb	r0, [r2, #0x0]
	ldr		r0, _0808b0dc
	strb	r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x8B0D6, 0x2

_0808b0d8:	.4byte 0x0200BEF8
_0808b0dc:	.4byte 0x0200BEF9
	thumb_func_end sub_0808b0cc

	thumb_func_start sub_0808b0e0
sub_0808b0e0:
	push	{ lr }
	add		r3, r0, #0x0
	lsl		r2, r2, #0x5
	add		r2, r2, r1
	cmp		r2, #0x0
	bge		_0808b0ee
	mov		r2, #0x0
_0808b0ee:
	ldr		r0, _0808b0fc
	cmp		r2, r0
	ble		_0808b0f6
	mov		r2, #0x0
_0808b0f6:
	strh	r2, [r3, #0x14]
	pop		{ r0 }
	bx		r0

_0808b0fc:	.4byte 0x0000027F
	thumb_func_end sub_0808b0e0

	thumb_func_start sub_0808b100
sub_0808b100:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r2, r5, #0x0
	add		r2, #0x16
	add		r4, r1, #0x0
	mov		r6, #0x0
	b		_0808b130
_0808b10e:
	add		r0, r1, #0x0
	sub		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x5e
	bhi		_0808b12c
	mov		r3, #0xa0
	lsl		r3, r3, #0x2
	add		r0, r1, r3
	mov		r3, #0xf0
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r2, #0x2
_0808b12c:
	add		r4, #0x1
	add		r6, #0x1
_0808b130:
	cmp		r6, #0x1f
	bgt		_0808b150
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	cmp		r1, #0x0
	beq		_0808b150
	cmp		r1, #0xa
	bne		_0808b10e
	ldr		r0, _0808b17c
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x0
	bl		sub_0808b0cc
_0808b150:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0xa
	beq		_0808b16a
	ldr		r0, _0808b180
	ldrb	r0, [r0, #0x0]
	add		r0, r0, r6
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, _0808b17c
	ldrb	r1, [r1, #0x0]
	bl		sub_0808b0cc
_0808b16a:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r1, #0x0
	strh	r6, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0808b17c:	.4byte 0x0200BEF9
_0808b180:	.4byte 0x0200BEF8
	thumb_func_end sub_0808b100

	thumb_func_start sub_0808b184
sub_0808b184:
	push	{ lr }
	sub		sp, #0x4
	add		r3, r0, #0x0
	ldr		r0, _0808b1b8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808b1e4
	add		r0, r3, #0x0
	add		r0, #0x58
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0808b1bc
	cmp		r0, #0x1
	bne		_0808b1c8
	ldr		r1, _0808b1c0
	mov		r0, sp
	strh	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x0]
	ldr		r2, _0808b1c4
	mov		r0, sp
	bl		sub_080bb5fc
	b		_0808b1e4

.incbin "base.gba", 0x8B1B6, 0x2

_0808b1b8:	.4byte 0x0200DD28
_0808b1bc:	.4byte 0x080dc120
_0808b1c0:	.4byte 0x0000F2A0
_0808b1c4:	.4byte 0x01000280

_0808b1c8:
	add		r0, r3, #0x0
	add		r0, #0x16
	ldr		r1, [r2, #0x0]
	ldrh	r2, [r3, #0x14]
	lsl		r2, r2, #0x1
	ldr		r1, [r1, #0x0]
	add		r1, r1, r2
	add		r2, r3, #0x0
	add		r2, #0x56
	ldrh	r2, [r2, #0x0]
	lsl		r2, r2, #0x1
	ldr		r3, _0808b1ec
	bl		sub_08000a2c
_0808b1e4:
	add		sp, #0x4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8B1EA, 0x2

_0808b1ec:	.4byte 0x80000003
	thumb_func_end sub_0808b184

	thumb_func_start sub_0808b1f0
sub_0808b1f0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r0, #0x5c
	bl		sub_08000600
	add		r4, r0, #0x0
	bl		sub_080c3bcc
	ldr		r0, _0808b234
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x58
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, _0808b238
	ldrb	r1, [r0, #0x0]
	ldr		r0, _0808b23c
	ldrb	r2, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808b0e0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0808b100
	add		r0, r4, #0x0
	mov		r1, #0xf
	mov		r2, #0x0
	bl		sub_08000644
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8B232, 0x2

_0808b234:	.4byte 0x080e3174
_0808b238:	.4byte 0x0200BEF8
_0808b23c:	.4byte 0x0200BEF9
	thumb_func_end sub_0808b1f0

	thumb_func_start sub_0808b240
sub_0808b240:
	push	{ r0, r1, r2, r3 }
	push	{ r4, lr }
	ldr		r1, [sp, #0x8]
	add		r2, sp, #0xc
	ldr		r4, _0808b260
	add		r0, r4, #0x0
	bl		sub_0808c650
	add		r0, r4, #0x0
	bl		sub_0808b1f0
	pop		{ r4 }
	pop		{ r3 }
	add		sp, #0x10
	bx		r3

.incbin "base.gba", 0x8B25E, 0x2

_0808b260:	.4byte 0x0200BEB8
	thumb_func_end sub_0808b240

	thumb_func_start sub_0808b264
sub_0808b264:
	push	{ r4, lr }
	mov		r0, #0x5c
	bl		sub_08000600
	add		r4, r0, #0x0
	bl		sub_080c3bcc
	ldr		r0, _0808b298
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x58
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0xf
	mov		r2, #0x0
	bl		sub_08000644
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0808b0cc
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8B296, 0x2

_0808b298:	.4byte 0x080e3174

.incbin "base.gba", 0x8B29C, 0x8
	thumb_func_end sub_0808b264

	thumb_func_start sub_0808b2a4
sub_0808b2a4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080c3bcc
	ldr		r0, _0808b2c0
	str		r0, [r4, #0xc]
	add		r1, r4, #0x0
	add		r1, #0x58
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0808b2c0:	.4byte 0x080e3174

.incbin "base.gba", 0x8B2C4, 0x34
	thumb_func_end sub_0808b2a4

	thumb_func_start sub_0808b2f8
sub_0808b2f8:
	push	{ r4, lr }
	lsl		r2, r2, #0x18
	ldr		r3, _0808b318
	lsr		r2, r2, #0x15
	add		r2, r2, r3
	mov		r4, #0x0
	ldrsh	r3, [r2, r4]
	mul		r0, r3
	mov		r3, #0x2
	ldrsh	r2, [r2, r3]
	mul		r1, r2
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8B316, 0x2

_0808b318:	.4byte 0x080dc440
	thumb_func_end sub_0808b2f8

	thumb_func_start sub_0808b31c
sub_0808b31c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	lsl		r3, r3, #0x18
	lsr		r0, r3, #0x18
	ldr		r1, _0808b34c
	sub		r5, r2, r4
	cmp		r3, #0x0
	bge		_0808b350
	ldr		r1, [r1, #0x0]
	sub		r0, #0x80
	lsl		r0, r0, #0x4
	add		r3, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	mul		r0, r4
	mov		r4, #0x2
	ldrsh	r1, [r3, r4]
	mul		r1, r2
	add		r0, r0, r1
	mov		r2, #0x4
	ldrsh	r1, [r3, r2]
	b		_0808b368

.incbin "base.gba", 0x8B34A, 0x2

_0808b34c:	.4byte 0x080dc43c

_0808b350:
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r3, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	mul		r0, r6
	mov		r2, #0x2
	ldrsh	r1, [r3, r2]
	mul		r1, r4
	add		r0, r0, r1
	mov		r4, #0x6
	ldrsh	r1, [r3, r4]
_0808b368:
	mul		r1, r5
	add		r0, r0, r1
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8B372, 0x2
	thumb_func_end sub_0808b31c

	thumb_func_start sub_0808b374
sub_0808b374:
	mov		r1, #0x0
	strh	r1, [r0, #0x12]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	str		r1, [r0, #0xc]
	bx		lr
	thumb_func_end sub_0808b374

	thumb_func_start sub_0808b380
sub_0808b380:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	ldrb	r0, [r6, #0x2]
	cmp		r0, #0x0
	bne		_0808b39a
	ldr		r0, _0808b3cc
	mov		r1, #0x13
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808b39a:
	str		r6, [r4, #0x0]
	str		r6, [r4, #0x4]
	mov		r0, #0x8
	mov		r1, #0x0
	orr		r5, r0
	strh	r5, [r4, #0x10]
	strh	r1, [r4, #0x14]
	strh	r1, [r4, #0x16]
	ldr		r0, _0808b3d0
	strh	r0, [r4, #0x18]
	mov		r1, #0x16
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	add		r0, r6, r0
	ldrb	r1, [r0, #0x5]
	lsr		r1, r1, #0x5
	ldrb	r0, [r0, #0x6]
	lsl		r0, r0, #0x3
	orr		r0, r1
	lsl		r0, r0, #0x15
	asr		r0, r0, #0x5
	str		r0, [r4, #0x8]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0808b3cc:	.4byte 0x080dcc40
_0808b3d0:	.4byte 0x0000FFFF
	thumb_func_end sub_0808b380

	thumb_func_start sub_0808b3d4
sub_0808b3d4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldrh	r1, [r4, #0x10]
	mov		r0, #0xc
	and		r0, r1
	cmp		r0, #0x8
	bne		_0808b4a4
	mov		r0, #0x31
	neg		r0, r0
	and		r0, r1
	strh	r0, [r4, #0x10]
	ldr		r0, [r4, #0x8]
	ldr		r1, [r4, #0xc]
	sub		r0, r0, r1
	str		r0, [r4, #0x8]
	cmp		r0, #0x0
	blt		_0808b3fc
	b		_0808b4a4
_0808b3f8:
	mov		r0, #0x1
	b		_0808b4a6
_0808b3fc:
	ldrh	r0, [r4, #0x16]
	add		r0, #0x1
	strh	r0, [r4, #0x16]
_0808b402:
	ldrh	r1, [r4, #0x10]
	mov		r0, #0x10
	orr		r0, r1
	strh	r0, [r4, #0x10]
	mov		r0, #0x16
	ldrsh	r1, [r4, r0]
	ldr		r0, [r4, #0x4]
	ldrb	r0, [r0, #0x2]
	cmp		r1, r0
	bge		_0808b466
_0808b416:
	mov		r1, #0x16
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	blt		_0808b428
	add		r1, r0, #0x0
	ldr		r0, [r4, #0x4]
	ldrb	r0, [r0, #0x2]
	cmp		r1, r0
	blt		_0808b434
_0808b428:
	ldr		r0, _0808b490
	mov		r1, #0x29
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808b434:
	mov		r1, #0x16
	ldrsh	r0, [r4, r1]
	ldr		r2, [r4, #0x4]
	lsl		r0, r0, #0x2
	add		r0, r2, r0
	ldrb	r1, [r0, #0x5]
	lsr		r1, r1, #0x5
	ldrb	r0, [r0, #0x6]
	lsl		r0, r0, #0x3
	orr		r0, r1
	lsl		r0, r0, #0x15
	asr		r0, r0, #0x5
	ldr		r1, [r4, #0x8]
	add		r1, r1, r0
	str		r1, [r4, #0x8]
	cmp		r1, #0x0
	bge		_0808b3f8
	ldrh	r0, [r4, #0x16]
	add		r0, #0x1
	strh	r0, [r4, #0x16]
	mov		r1, #0x16
	ldrsh	r0, [r4, r1]
	ldrb	r2, [r2, #0x2]
	cmp		r0, r2
	blt		_0808b416
_0808b466:
	ldrh	r1, [r4, #0x10]
	mov		r0, #0x20
	mov		r5, #0x0
	orr		r0, r1
	strh	r0, [r4, #0x10]
	mov		r3, #0x2
	and		r0, r3
	cmp		r0, #0x0
	beq		_0808b494
	ldr		r2, [r4, #0x0]
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808b486
	str		r2, [r4, #0x4]
_0808b486:
	ldrh	r0, [r4, #0x14]
	add		r0, #0x1
	strh	r0, [r4, #0x14]
	strh	r5, [r4, #0x16]
	b		_0808b402

_0808b490:	.4byte 0x080dcc40

_0808b494:
	ldrh	r0, [r4, #0x16]
	sub		r0, #0x1
	strh	r0, [r4, #0x16]
	ldrh	r1, [r4, #0x10]
	mov		r0, #0x9
	neg		r0, r0
	and		r0, r1
	strh	r0, [r4, #0x10]
_0808b4a4:
	mov		r0, #0x0
_0808b4a6:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808b3d4

	thumb_func_start sub_0808b4ac
sub_0808b4ac:
	mov		r2, #0x16
	ldrsh	r1, [r0, r2]
	ldr		r2, [r0, #0x4]
	lsl		r1, r1, #0x2
	add		r2, r2, r1
	ldrb	r3, [r2, #0x4]
	ldrb	r1, [r2, #0x5]
	mov		r2, #0x1f
	and		r1, r2
	lsl		r1, r1, #0x8
	orr		r1, r3
	lsl		r1, r1, #0x13
	asr		r1, r1, #0x13
	strh	r1, [r0, #0x18]
	mov		r1, #0x18
	ldrsh	r0, [r0, r1]
	bx		lr

.incbin "base.gba", 0x8B4CE, 0x2
	thumb_func_end sub_0808b4ac

	thumb_func_start sub_0808b4d0
sub_0808b4d0:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	cmp		r1, #0x0
	bge		_0808b4dc
	neg		r2, r1
_0808b4dc:
	asr		r0, r2, #0x3
	add		r0, r3, r0
	ldrb	r3, [r0, #0x0]
	mov		r0, #0x7
	and		r2, r0
	mov		r0, #0x1
	lsl		r0, r2
	and		r3, r0
	cmp		r1, #0x0
	bge		_0808b4f2
	eor		r3, r0
_0808b4f2:
	add		r0, r3, #0x0
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808b4d0

	thumb_func_start sub_0808b4f8
sub_0808b4f8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	mov		r1, #0x0
	ldr		r0, _0808b524
	cmp		r3, r0
	bhi		_0808b508
	mov		r1, #0x1
_0808b508:
	cmp		r1, #0x0
	beq		_0808b51e
	asr		r2, r3, #0x3
	add		r2, r4, r2
	mov		r1, #0x7
	and		r1, r3
	mov		r0, #0x1
	lsl		r0, r1
	ldrb	r1, [r2, #0x0]
	orr		r0, r1
	strb	r0, [r2, #0x0]
_0808b51e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808b524:	.4byte 0x00007FFF
	thumb_func_end sub_0808b4f8

	thumb_func_start sub_0808b528
sub_0808b528:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r2, #0x0
	mov		r3, #0x0
	ldr		r0, _0808b55c
	cmp		r1, r0
	bhi		_0808b538
	mov		r3, #0x1
_0808b538:
	cmp		r3, #0x0
	beq		_0808b554
	asr		r0, r1, #0x3
	add		r2, r4, r0
	ldrb	r3, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	mov		r1, #0x1
	lsl		r1, r0
	bic		r3, r1
	cmp		r5, #0x0
	beq		_0808b552
	orr		r3, r1
_0808b552:
	strb	r3, [r2, #0x0]
_0808b554:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8B55A, 0x2

_0808b55c:	.4byte 0x00007FFF
	thumb_func_end sub_0808b528

	thumb_func_start sub_0808b560
sub_0808b560:
	push	{ lr }
	add		r3, r0, #0x0
	mov		r2, #0x0
	ldr		r0, _0808b588
	cmp		r1, r0
	bhi		_0808b56e
	mov		r2, #0x1
_0808b56e:
	cmp		r2, #0x0
	beq		_0808b584
	asr		r2, r1, #0x3
	add		r2, r3, r2
	mov		r0, #0x7
	and		r0, r1
	mov		r1, #0x1
	lsl		r1, r0
	ldrb	r0, [r2, #0x0]
	bic		r0, r1
	strb	r0, [r2, #0x0]
_0808b584:
	pop		{ r0 }
	bx		r0

_0808b588:	.4byte 0x00007FFF
	thumb_func_end sub_0808b560

	thumb_func_start sub_0808b58c
sub_0808b58c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	mov		r1, #0x0
	ldr		r0, _0808b5b8
	cmp		r3, r0
	bhi		_0808b59c
	mov		r1, #0x1
_0808b59c:
	cmp		r1, #0x0
	beq		_0808b5b2
	asr		r2, r3, #0x3
	add		r2, r4, r2
	mov		r1, #0x7
	and		r1, r3
	mov		r0, #0x1
	lsl		r0, r1
	ldrb	r1, [r2, #0x0]
	eor		r0, r1
	strb	r0, [r2, #0x0]
_0808b5b2:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808b5b8:	.4byte 0x00007FFF
	thumb_func_end sub_0808b58c

	thumb_func_start sub_0808b5bc
sub_0808b5bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	sub		r3, #0x1
	mov		r12, r3
	cmp		r3, #0x0
	blt		_0808b62a
_0808b5d2:
	mov		r0, #0x0
	ldr		r1, _0808b638
	cmp		r6, r1
	bhi		_0808b5dc
	mov		r0, #0x1
_0808b5dc:
	cmp		r0, #0x0
	beq		_0808b61a
	mov		r0, #0x0
	cmp		r7, r1
	bhi		_0808b5e8
	mov		r0, #0x1
_0808b5e8:
	cmp		r0, #0x0
	beq		_0808b61a
	asr		r0, r7, #0x3
	add		r0, r9
	mov		r8, r0
	ldrb	r5, [r0, #0x0]
	mov		r3, #0x7
	add		r0, r7, #0x0
	and		r0, r3
	mov		r2, #0x1
	add		r4, r2, #0x0
	lsl		r4, r0
	bic		r5, r4
	asr		r0, r6, #0x3
	add		r0, r9
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r3
	asr		r1, r0
	and		r1, r2
	cmp		r1, #0x0
	beq		_0808b616
	orr		r5, r4
_0808b616:
	mov		r0, r8
	strb	r5, [r0, #0x0]
_0808b61a:
	add		r7, #0x1
	add		r6, #0x1
	mov		r0, #0x1
	neg		r0, r0
	add		r12, r0
	mov		r0, r12
	cmp		r0, #0x0
	bge		_0808b5d2
_0808b62a:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8B636, 0x2

_0808b638:	.4byte 0x00007FFF
	thumb_func_end sub_0808b5bc

	thumb_func_start sub_0808b63c
sub_0808b63c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r10, r0
	add		r7, r2, #0x0
	mov		r0, #0x1
	neg		r0, r0
	mov		r9, r0
	cmp		r3, #0x0
	bge		_0808b658
	mov		r0, #0x1
	mov		r9, r0
_0808b658:
	sub		r6, r1, #0x1
	cmp		r3, #0x0
	blt		_0808b660
	add		r6, r1, r7
_0808b660:
	add		r3, r3, r6
	mov		r12, r3
	b		_0808b6b4
_0808b666:
	add		r6, r9
	mov		r0, #0x0
	ldr		r1, _0808b6c8
	cmp		r6, r1
	bhi		_0808b672
	mov		r0, #0x1
_0808b672:
	cmp		r0, #0x0
	beq		_0808b6b4
	add		r12, r9
	mov		r0, #0x0
	cmp		r12, r1
	bhi		_0808b680
	mov		r0, #0x1
_0808b680:
	cmp		r0, #0x0
	beq		_0808b6b4
	mov		r1, r12
	asr		r0, r1, #0x3
	add		r0, r10
	mov		r8, r0
	ldrb	r5, [r0, #0x0]
	mov		r3, #0x7
	mov		r0, r12
	and		r0, r3
	mov		r2, #0x1
	add		r4, r2, #0x0
	lsl		r4, r0
	bic		r5, r4
	asr		r0, r6, #0x3
	add		r0, r10
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	and		r0, r3
	asr		r1, r0
	and		r1, r2
	cmp		r1, #0x0
	beq		_0808b6b0
	orr		r5, r4
_0808b6b0:
	mov		r0, r8
	strb	r5, [r0, #0x0]
_0808b6b4:
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0808b666
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0808b6c8:	.4byte 0x00007FFF
	thumb_func_end sub_0808b63c

	thumb_func_start sub_0808b6cc
sub_0808b6cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	mov		r8, r3
	mov		r0, #0x0
	mov		r12, r0
	b		_0808b71e
_0808b6e2:
	mov		r1, #0x0
	ldr		r0, _0808b730
	cmp		r6, r0
	bhi		_0808b6ec
	mov		r1, #0x1
_0808b6ec:
	cmp		r1, #0x0
	beq		_0808b718
	asr		r0, r6, #0x3
	mov		r1, r9
	add		r7, r1, r0
	ldrb	r4, [r7, #0x0]
	mov		r0, #0x7
	and		r0, r6
	mov		r2, #0x1
	add		r3, r2, #0x0
	lsl		r3, r0
	bic		r4, r3
	mov		r1, #0x1f
	mov		r0, r12
	and		r1, r0
	mov		r0, r8
	asr		r0, r1
	and		r0, r2
	cmp		r0, #0x0
	beq		_0808b716
	orr		r4, r3
_0808b716:
	strb	r4, [r7, #0x0]
_0808b718:
	mov		r1, #0x1
	add		r12, r1
	add		r6, #0x1
_0808b71e:
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0808b6e2
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0808b730:	.4byte 0x00007FFF
	thumb_func_end sub_0808b6cc

	thumb_func_start sub_0808b734
sub_0808b734:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r7, r1, #0x0
	add		r4, r2, #0x0
	add		r5, r3, #0x0
	add		r6, r4, #0x0
	sub		r4, r6, #0x1
	cmp		r4, #0x0
	blt		_0808b762
_0808b74a:
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	mov		r0, r8
	bl		sub_0808b4d0
	cmp		r0, #0x0
	beq		_0808b75a
	sub		r6, #0x1
_0808b75a:
	add		r5, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0808b74a
_0808b762:
	mov		r1, #0x0
	ldr		r0, _0808b794
	cmp		r7, r0
	bhi		_0808b76c
	mov		r1, #0x1
_0808b76c:
	cmp		r1, #0x0
	beq		_0808b78a
	asr		r0, r7, #0x3
	mov		r1, r8
	add		r3, r1, r0
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x7
	and		r0, r7
	mov		r2, #0x1
	lsl		r2, r0
	bic		r1, r2
	cmp		r6, #0x0
	bne		_0808b788
	orr		r1, r2
_0808b788:
	strb	r1, [r3, #0x0]
_0808b78a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0808b794:	.4byte 0x00007FFF
	thumb_func_end sub_0808b734

	thumb_func_start sub_0808b798
sub_0808b798:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x0
	blt		_0808b7aa
	mov		r1, #0x6
	ldrsh	r0, [r5, r1]
	cmp		r4, r0
	blt		_0808b7b6
_0808b7aa:
	ldr		r0, _0808b7c8
	mov		r1, #0x5f
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808b7b6:
	lsl		r1, r4, #0x2
	add		r1, #0x14
	add		r1, r5, r1
	add		r0, r5, #0x0
	bl		sub_0808b7e0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0808b7c8:	.4byte 0x080dcc64
	thumb_func_end sub_0808b798

	thumb_func_start sub_0808b7cc
sub_0808b7cc:
	push	{ lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x8
	lsr		r1, r1, #0x8
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_0808b7dc
	add		r0, r2, r1
_0808b7dc:
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808b7cc

	thumb_func_start sub_0808b7e0
sub_0808b7e0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	cmp		r1, #0x0
	bne		_0808b7ec
	mov		r0, #0x0
	b		_0808b808
_0808b7ec:
	ldr		r4, [r1, #0x0]
	lsr		r0, r4, #0x18
	cmp		r0, #0x0
	beq		_0808b800
	ldr		r0, _0808b810
	mov		r1, #0x6b
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808b800:
	mov		r0, #0x0
	cmp		r4, #0x0
	beq		_0808b808
	add		r0, r5, r4
_0808b808:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8B80E, 0x2

_0808b810:	.4byte 0x080dcc64
	thumb_func_end sub_0808b7e0

	thumb_func_start sub_0808b814
sub_0808b814:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r2, #0x0
	cmp		r1, #0x0
	beq		_0808b854
	add		r3, r1, #0x0
	b		_0808b84a
_0808b822:
	lsr		r1, r2, #0x4
	ldr		r0, _0808b83c
	cmp		r1, r0
	bne		_0808b840
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r4, r0
	bne		_0808b840
	add		r1, r3, #0x4
	add		r0, r5, #0x0
	bl		sub_0808b7e0
	b		_0808b856

_0808b83c:	.4byte 0x00000F84

_0808b840:
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xf
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r3, r3, r0
_0808b84a:
	ldrh	r2, [r3, #0x2]
	lsr		r1, r2, #0x4
	ldr		r0, _0808b85c
	cmp		r1, r0
	bne		_0808b822
_0808b854:
	mov		r0, #0x0
_0808b856:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0808b85c:	.4byte 0x00000F9C
	thumb_func_end sub_0808b814

	thumb_func_start sub_0808b860
sub_0808b860:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r5, #0x0
	blt		_0808b872
	mov		r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp		r5, r0
	blt		_0808b87e
_0808b872:
	ldr		r0, _0808b8a0
	mov		r1, #0x78
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808b87e:
	mov		r2, #0x6
	ldrsh	r0, [r4, r2]
	add		r0, r5, r0
	mov		r2, #0x8
	ldrsh	r1, [r4, r2]
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r1, r4, #0x0
	add		r1, #0x14
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808b7cc
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0808b8a0:	.4byte 0x080dcc64
	thumb_func_end sub_0808b860

	thumb_func_start sub_0808b8a4
sub_0808b8a4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	cmp		r4, #0x0
	blt		_0808b8b6
	mov		r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp		r4, r0
	blt		_0808b8c2
_0808b8b6:
	ldr		r0, _0808b8d4
	mov		r1, #0x7d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808b8c2:
	mov		r1, #0x6
	ldrsh	r0, [r5, r1]
	add		r0, r4, r0
	lsl		r0, r0, #0x2
	add		r0, #0x14
	add		r0, r5, r0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0808b8d4:	.4byte 0x080dcc64
	thumb_func_end sub_0808b8a4

	thumb_func_start sub_0808b8d8
sub_0808b8d8:
	push	{ r4, lr }
	add		r2, r0, #0x0
	mov		r4, #0x0
	mov		r3, #0x0
	b		_0808b8ee
_0808b8e2:
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	eor		r3, r1
	lsl		r0, r3
	add		r4, r4, r0
	add		r2, #0x1
_0808b8ee:
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	bne		_0808b8e2
	mov		r0, #0x80
	neg		r0, r0
	and		r0, r4
	asr		r0, r0, #0x2
	add		r0, r4, r0
	mov		r1, #0x7f
	and		r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8B90A, 0x72
	thumb_func_end sub_0808b8d8

	thumb_func_start sub_0808b97c
sub_0808b97c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r0, #0x6
	ldrsh	r4, [r6, r0]
	mov		r1, #0x8
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	lsl		r4, r4, #0x2
	add		r4, #0x14
	add		r4, r6, r4
	add		r0, r7, #0x0
	bl		sub_080bdc3c
	mov		r8, r0
	add		r0, r7, #0x0
	bl		sub_0808b8d8
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	cmp		r4, #0x7e
	bgt		_0808b9b8
	mov		r1, #0x2
	ldrsh	r5, [r0, r1]
	b		_0808b9f2
_0808b9b8:
	mov		r0, #0x8
	ldrsh	r5, [r6, r0]
	b		_0808b9f2
_0808b9be:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0808b860
	add		r3, r0, #0x0
	mov		r0, r8
	add		r1, r7, r0
	b		_0808b9d0
_0808b9ce:
	add		r3, #0x1
_0808b9d0:
	sub		r1, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r1, r7
	bcs		_0808b9e0
	cmp		r0, #0x0
	bne		_0808b9f0
	add		r0, r4, #0x0
	b		_0808b9fa
_0808b9e0:
	mov		r2, #0x0
	ldrsb	r2, [r1, r2]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r2, r0
	bne		_0808b9f0
	cmp		r2, #0x0
	bne		_0808b9ce
_0808b9f0:
	add		r4, #0x1
_0808b9f2:
	cmp		r4, r5
	blt		_0808b9be
	mov		r0, #0x1
	neg		r0, r0
_0808b9fa:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808b97c

	thumb_func_start sub_0808ba04
sub_0808ba04:
	push	{ r4, lr }
	ldr		r4, _0808ba24
	ldr		r3, [r4, #0x0]
	str		r3, [r0, #0x0]
	ldr		r3, [r4, #0x4]
	str		r3, [r0, #0x4]
	mov		r3, #0x0
	strh	r1, [r0, #0x10]
	strh	r3, [r0, #0x12]
	strh	r3, [r0, #0x14]
	str		r2, [r0, #0x8]
	str		r3, [r0, #0xc]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8BA22, 0x2

_0808ba24:	.4byte 0x0200BF08
	thumb_func_end sub_0808ba04

	thumb_func_start sub_0808ba28
sub_0808ba28:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldrh	r0, [r7, #0x2]
	lsr		r1, r0, #0x4
	mov		r8, r1
	mov		r2, #0xf
	mov		r9, r2
	mov		r4, r9
	and		r4, r0
	mov		r9, r4
	mov		r0, #0x0
	ldrsh	r6, [r7, r0]
	add		r3, r7, #0x0
	ldr		r0, _0808ba60
	add		r0, r8
	cmp		r0, #0x1c
	bls		_0808ba56
	b		_0808bde4
_0808ba56:
	lsl		r0, r0, #0x2
	ldr		r1, _0808ba64
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0808ba60:	.4byte 0xFFFFF080
_0808ba64:	.4byte 0x0808ba68
_0808ba68:	.4byte 0x0808badc

.incbin "base.gba", 0x8BA6C, 0x70
	thumb_func_end sub_0808ba28


.incbin "base.gba", 0x8BADC, 0x28

_0808bb04:

.incbin "base.gba", 0x8BB04, 0x2C
_0808bb30:

.incbin "base.gba", 0x8BB30, 0x4
_0808bb34:

.incbin "base.gba", 0x8BB34, 0x2B0

_0808bde4:

.incbin "base.gba", 0x8BDE4, 0x1E

_0808be02:

.incbin "base.gba", 0x8BE02, 0xE
	thumb_func_start sub_0808be10
sub_0808be10:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r1, _0808be28
	add		r0, r2, r1
	cmp		r0, #0x1c
	bhi		_0808beba
	lsl		r0, r0, #0x2
	ldr		r1, _0808be2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0808be28:	.4byte 0xFFFFF080
_0808be2c:	.4byte 0x0808be30
_0808be30:	.4byte 0x0808bec6

.incbin "base.gba", 0x8BE34, 0x70
	thumb_func_end sub_0808be10


.incbin "base.gba", 0x8BEA4, 0x16

_0808beba:

.incbin "base.gba", 0x8BEBA, 0x10

_0808beca:

.incbin "base.gba", 0x8BECA, 0x6
	thumb_func_start sub_0808bed0
sub_0808bed0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	add		r5, r2, #0x0
	ldrh	r0, [r4, #0x12]
	bic		r0, r5
	strh	r0, [r4, #0x12]
_0808bede:
	cmp		r3, #0x0
	beq		_0808bf00
	str		r3, [r4, #0xc]
	add		r0, r4, #0x0
	add		r1, r3, #0x0
	bl		sub_0808ba28
	add		r3, r0, #0x0
	ldrh	r0, [r4, #0x12]
	mov		r1, #0x2
	orr		r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	and		r0, r5
	cmp		r0, #0x0
	beq		_0808bede
	str		r3, [r4, #0x8]
_0808bf00:
	add		r0, r3, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808bed0

	thumb_func_start sub_0808bf08
sub_0808bf08:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	cmp		r2, #0x0
	beq		_0808bf1c
	ldrh	r1, [r4, #0x2]
	mov		r0, #0xf
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r4, r0
	b		_0808bfa0
_0808bf1c:
	mov		r5, #0x0
_0808bf1e:
	ldrh	r0, [r4, #0x2]
	mov		r1, #0xf
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	ldrh	r0, [r4, #0x2]
	lsr		r1, r0, #0x4
	ldr		r2, _0808bf40
	add		r0, r1, r2
	cmp		r0, #0x4
	bhi		_0808bf7e
	lsl		r0, r0, #0x2
	ldr		r1, _0808bf44
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x8BF3E, 0x2

_0808bf40:	.4byte 0xFFFFF073
_0808bf44:	.4byte 0x0808bf48
_0808bf48:	.4byte 0x0808bf5c

.incbin "base.gba", 0x8BF4C, 0x10
	thumb_func_end sub_0808bf08


.incbin "base.gba", 0x8BF5C, 0x22

_0808bf7e:

.incbin "base.gba", 0x8BF7E, 0x16
_0808bf94:	.4byte 0x00000F9C
_0808bf98:	.4byte 0x080dcc64
_0808bf9c:	.4byte 0x00000157

_0808bfa0:

.incbin "base.gba", 0x8BFA0, 0xB4
	thumb_func_start sub_0808c054
sub_0808c054:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	bl		sub_0808b814
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808c054

	thumb_func_start sub_0808c060
sub_0808c060:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	bl		sub_0808b7e0
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808c060

	thumb_func_start sub_0808c06c
sub_0808c06c:
	push	{ lr }
	ldr		r0, [r0, #0x0]
	bl		sub_0808b7cc
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C078, 0x4
	thumb_func_end sub_0808c06c

	thumb_func_start sub_0808c07c
sub_0808c07c:
	add		r2, r0, #0x0
	ldrb	r1, [r2, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r0, #0x4
	add		r0, r2, r0
	ldrb	r1, [r2, #0x2]
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	bx		lr

.incbin "base.gba", 0x8C092, 0x2
	thumb_func_end sub_0808c07c

	thumb_func_start sub_0808c094
sub_0808c094:
	add		r2, r0, #0x0
	ldrb	r1, [r2, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r0, #0x4
	add		r0, r2, r0
	ldrb	r1, [r2, #0x2]
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldrb	r1, [r2, #0x3]
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	bx		lr
	thumb_func_end sub_0808c094

	thumb_func_start sub_0808c0b0
sub_0808c0b0:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	add		r0, #0xc
	mov		r3, #0x0
	ldrb	r1, [r2, #0x6]
	cmp		r3, r1
	bge		_0808c0d0
	add		r1, r0, #0x0
_0808c0c2:
	ldr		r0, [r1, #0x0]
	add		r0, r4, r0
	stmia	r1!, { r0 }
	add		r3, #0x1
	ldrb	r0, [r2, #0x6]
	cmp		r3, r0
	blt		_0808c0c2
_0808c0d0:
	ldrb	r0, [r2, #0x6]
	lsl		r0, r0, #0x2
	add		r0, #0xc
	add		r0, r2, r0
	mov		r3, #0x0
	ldrb	r1, [r2, #0x7]
	cmp		r3, r1
	bge		_0808c0f0
	add		r1, r0, #0x0
_0808c0e2:
	ldr		r0, [r1, #0x0]
	add		r0, r4, r0
	stmia	r1!, { r0 }
	add		r3, #0x1
	ldrb	r0, [r2, #0x7]
	cmp		r3, r0
	blt		_0808c0e2
_0808c0f0:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8C0F6, 0x2
	thumb_func_end sub_0808c0b0

	thumb_func_start sub_0808c0f8
sub_0808c0f8:
	mov		r3, pc
	bx		r3
_0808c0fc:
.incbin "base.gba", 0x8C0FC, 0x4
.incbin "base.gba", 0x8C100, 0x4
.incbin "base.gba", 0x8C104, 0x4
.incbin "base.gba", 0x8C108, 0x4
.incbin "base.gba", 0x8C10C, 0x4
.incbin "base.gba", 0x8C110, 0x4

.incbin "base.gba", 0x8C114, 0x4
	thumb_func_end sub_0808c0f8

	thumb_func_start sub_0808c118
sub_0808c118:
	mov		r3, pc
	bx		r3
_0808c11c:
.incbin "base.gba", 0x8C11C, 0x4
.incbin "base.gba", 0x8C120, 0x4
.incbin "base.gba", 0x8C124, 0x4
.incbin "base.gba", 0x8C128, 0x4
.incbin "base.gba", 0x8C12C, 0x4
.incbin "base.gba", 0x8C130, 0x4

.incbin "base.gba", 0x8C134, 0x4
	thumb_func_end sub_0808c118

	thumb_func_start sub_0808c138
sub_0808c138:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080bbcac
	add		r1, r0, #0x0
	add		r0, r1, #0x0
	mul		r0, r4
	sub		r5, r5, r0
	lsr		r0, r4, #0x1f
	add		r4, r4, r0
	asr		r4, r4, #0x1
	cmp		r5, r4
	blt		_0808c156
	add		r1, #0x1
_0808c156:
	add		r0, r1, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C15E, 0x4A
	thumb_func_end sub_0808c138

	thumb_func_start sub_0808c1a8
sub_0808c1a8:
	add		r1, r0, #0x0
	add		r2, r0, #0x0
	mov		r0, #0x1
	lsl		r0, r0, #0x1f
	mov		r3, pc
	bx		r3
_0808c1b4:
.incbin "base.gba", 0x8C1B4, 0x4
.incbin "base.gba", 0x8C1B8, 0x4
.incbin "base.gba", 0x8C1BC, 0x4
.incbin "base.gba", 0x8C1C0, 0x4
.incbin "base.gba", 0x8C1C4, 0x4
.incbin "base.gba", 0x8C1C8, 0x4
.incbin "base.gba", 0x8C1CC, 0x4
.incbin "base.gba", 0x8C1D0, 0x4
.incbin "base.gba", 0x8C1D4, 0x4
.incbin "base.gba", 0x8C1D8, 0x4
.incbin "base.gba", 0x8C1DC, 0x4
.incbin "base.gba", 0x8C1E0, 0x4
_0808c1e4:
.incbin "base.gba", 0x8C1E4, 0x4
_0808c1e8:
.incbin "base.gba", 0x8C1E8, 0x4
.incbin "base.gba", 0x8C1EC, 0x4
.incbin "base.gba", 0x8C1F0, 0x4
.incbin "base.gba", 0x8C1F4, 0x4
.incbin "base.gba", 0x8C1F8, 0x4
.incbin "base.gba", 0x8C1FC, 0x4
.incbin "base.gba", 0x8C200, 0x4
.incbin "base.gba", 0x8C204, 0x4
.incbin "base.gba", 0x8C208, 0x4
.incbin "base.gba", 0x8C20C, 0x4

.incbin "base.gba", 0x8C210, 0xCC
	thumb_func_end sub_0808c1a8

	thumb_func_start sub_0808c2dc
sub_0808c2dc:
	add		r3, r1, #0x0
	mov		r1, #0x0
	mov		r12, pc
	bx		r12
_0808c2e4:
.incbin "base.gba", 0x8C2E4, 0x4
.incbin "base.gba", 0x8C2E8, 0x4
.incbin "base.gba", 0x8C2EC, 0x4

.incbin "base.gba", 0x8C2F0, 0x4
	thumb_func_end sub_0808c2dc

	thumb_func_start sub_0808c2f4
sub_0808c2f4:
	push	{ r4, lr }
	add		r4, r2, #0x0
	cmp		r4, #0x0
	bge		_0808c2fe
	neg		r2, r4
_0808c2fe:
	bl		sub_0808c2dc
	cmp		r4, #0x0
	bge		_0808c30a
	bl		sub_080bbe14
_0808c30a:
	pop		{ r4 }
	pop		{ r2 }
	bx		r2
	thumb_func_end sub_0808c2f4

	thumb_func_start sub_0808c310
sub_0808c310:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bge		_0808c31a
	neg		r0, r4
_0808c31a:
	bl		sub_0808c1a8
	lsr		r0, r0, #0x1
	cmp		r4, #0x0
	bge		_0808c326
	neg		r0, r0
_0808c326:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808c310

	thumb_func_start sub_0808c32c
sub_0808c32c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	bl		sub_0808c1a8
	add		r1, r4, #0x0
	mov		r2, #0x20
	bl		sub_0808c0f8
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808c32c

	thumb_func_start sub_0808c344
sub_0808c344:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r4, #0x0
	cmp		r4, #0x0
	bge		_0808c352
	neg		r6, r4
_0808c352:
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_0808c35a
	neg		r0, r5
_0808c35a:
	bl		sub_0808c1a8
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	mov		r2, #0x20
	bl		sub_0808c118
	eor		r4, r5
	cmp		r4, #0x0
	bge		_0808c370
	neg		r0, r0
_0808c370:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C376, 0x36
	thumb_func_end sub_0808c344

	thumb_func_start sub_0808c3ac
sub_0808c3ac:
	push	{ lr }
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_0808c3d0
	mov		r0, #0xe1
	lsl		r0, r0, #0x4
	cmp		r1, r0
	blt		_0808c3da
_0808c3bc:
	mov		r0, #0xe1
	lsl		r0, r0, #0x4
	ldr		r2, _0808c3cc
	add		r1, r1, r2
	cmp		r1, r0
	bge		_0808c3bc
	b		_0808c3da

.incbin "base.gba", 0x8C3CA, 0x2

_0808c3cc:	.4byte 0xFFFFF1F0

_0808c3d0:
	mov		r0, #0xe1
	lsl		r0, r0, #0x4
	add		r1, r1, r0
	cmp		r1, #0x0
	blt		_0808c3d0
_0808c3da:
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808c3ac

	thumb_func_start sub_0808c3e0
sub_0808c3e0:
	push	{ lr }
	add		r2, r0, #0x0
	sub		r2, r2, r1
	ldr		r0, _0808c3f4
	cmp		r2, r0
	bge		_0808c3f8
	mov		r0, #0xe1
	lsl		r0, r0, #0x4
	b		_0808c402

.incbin "base.gba", 0x8C3F2, 0x2

_0808c3f4:	.4byte 0xFFFFF8F8

_0808c3f8:
	mov		r0, #0xe1
	lsl		r0, r0, #0x3
	cmp		r2, r0
	ble		_0808c404
	ldr		r0, _0808c40c
_0808c402:
	add		r2, r2, r0
_0808c404:
	add		r0, r2, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C40A, 0x2

_0808c40c:	.4byte 0xFFFFF1F0
	thumb_func_end sub_0808c3e0

	thumb_func_start sub_0808c410
sub_0808c410:
	push	{ lr }
	add		r2, r0, #0x0
	mov		r1, #0xe1
	lsl		r1, r1, #0x3
	ldr		r3, _0808c430
	cmp		r2, r1
	bge		_0808c440
	mov		r0, #0xe1
	lsl		r0, r0, #0x2
	cmp		r2, r0
	bge		_0808c434
	ldr		r0, [r3, #0x0]
	lsl		r1, r2, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	b		_0808c462

_0808c430:	.4byte 0x080dcca4

_0808c434:
	ldr		r0, [r3, #0x0]
	sub		r1, r1, r2
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	b		_0808c462
_0808c440:
	ldr		r0, _0808c450
	cmp		r2, r0
	blt		_0808c454
	ldr		r0, [r3, #0x0]
	mov		r1, #0xe1
	lsl		r1, r1, #0x4
	sub		r1, r1, r2
	b		_0808c45a

_0808c450:	.4byte 0x00000A8C

_0808c454:
	ldr		r0, [r3, #0x0]
	ldr		r3, _0808c468
	add		r1, r2, r3
_0808c45a:
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	neg		r0, r0
_0808c462:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C466, 0x2

_0808c468:	.4byte 0xFFFFF8F8
	thumb_func_end sub_0808c410

	thumb_func_start sub_0808c46c
sub_0808c46c:
	push	{ lr }
	add		r1, r0, #0x0
	mov		r0, #0xe1
	lsl		r0, r0, #0x3
	ldr		r3, _0808c490
	cmp		r1, r0
	bge		_0808c4a0
	mov		r2, #0xe1
	lsl		r2, r2, #0x2
	cmp		r1, r2
	bge		_0808c494
	ldr		r0, [r3, #0x0]
	sub		r1, r2, r1
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	b		_0808c4c8

.incbin "base.gba", 0x8C48E, 0x2

_0808c490:	.4byte 0x080dcca8

_0808c494:
	ldr		r0, [r3, #0x0]
	ldr		r2, _0808c49c
	add		r1, r1, r2
	b		_0808c4c0

_0808c49c:	.4byte 0xFFFFFC7C

_0808c4a0:
	ldr		r2, _0808c4b4
	cmp		r1, r2
	blt		_0808c4bc
	ldr		r0, [r3, #0x0]
	ldr		r2, _0808c4b8
	add		r1, r1, r2
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	b		_0808c4c8

_0808c4b4:	.4byte 0x00000A8C
_0808c4b8:	.4byte 0xFFFFF574

_0808c4bc:
	ldr		r0, [r3, #0x0]
	sub		r1, r2, r1
_0808c4c0:
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	neg		r0, r0
_0808c4c8:
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808c46c

	thumb_func_start sub_0808c4cc
sub_0808c4cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r6, r1, #0x0
	mov		r7, #0x0
	mov		r5, r8
	cmp		r5, #0x0
	bge		_0808c4e4
	neg		r5, r5
	mov		r7, #0xe1
	lsl		r7, r7, #0x3
_0808c4e4:
	add		r4, r6, #0x0
	cmp		r6, #0x0
	blt		_0808c4f6
	cmp		r6, #0x0
	bne		_0808c4f8
	mov		r1, #0xe1
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	b		_0808c578
_0808c4f6:
	neg		r4, r6
_0808c4f8:
	add		r0, r4, #0x0
	bl		sub_0808c1a8
	lsl		r5, r5, #0xa
	add		r1, r5, #0x0
	mov		r2, #0x20
	bl		sub_0808c0f8
	add		r3, r0, #0x0
	add		r0, r3, #0x0
	mul		r0, r4
	sub		r0, r5, r0
	lsr		r1, r4, #0x1
	cmp		r0, r1
	bcc		_0808c518
	add		r3, #0x1
_0808c518:
	mov		r2, #0xe1
	lsl		r2, r2, #0x1
	add		r4, r2, #0x0
	b		_0808c522
_0808c520:
	sub		r4, r4, r1
_0808c522:
	lsr		r0, r4, #0x1f
	add		r0, r4, r0
	asr		r1, r0, #0x1
	cmp		r1, #0x0
	bne		_0808c52e
	mov		r1, #0x1
_0808c52e:
	ldr		r5, _0808c540
	lsl		r0, r2, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bcs		_0808c544
	sub		r2, r2, r1
	b		_0808c520

.incbin "base.gba", 0x8C53E, 0x2

_0808c540:	.4byte 0x080ddac0

_0808c544:
	add		r0, r2, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bcc		_0808c554
	add		r2, r2, r1
	b		_0808c520
_0808c554:
	mov		r0, r8
	eor		r6, r0
	cmp		r6, #0x0
	bge		_0808c566
	mov		r0, #0xe1
	lsl		r0, r0, #0x3
	sub		r0, r0, r2
	add		r7, r7, r0
	b		_0808c568
_0808c566:
	add		r7, r7, r2
_0808c568:
	mov		r0, #0xe1
	lsl		r0, r0, #0x4
	add		r1, r7, #0x0
	cmp		r1, r0
	blt		_0808c576
	ldr		r0, _0808c584
	add		r1, r1, r0
_0808c576:
	add		r0, r1, #0x0
_0808c578:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C582, 0x2

_0808c584:	.4byte 0xFFFFF1F0
	thumb_func_end sub_0808c4cc

	thumb_func_start sub_0808c588
sub_0808c588:
	push	{ r4, lr }
	add		r4, r1, #0x0
	bl		sub_0808c3ac
	bl		sub_0808c410
	add		r1, r4, #0x0
	mov		r2, #0x1e
	bl		sub_0808c118
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C5A2, 0x2
	thumb_func_end sub_0808c588

	thumb_func_start sub_0808c5a4
sub_0808c5a4:
	push	{ r4, lr }
	add		r4, r1, #0x0
	bl		sub_0808c3ac
	bl		sub_0808c46c
	add		r1, r4, #0x0
	mov		r2, #0x1e
	bl		sub_0808c118
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C5BE, 0x2
	thumb_func_end sub_0808c5a4

	thumb_func_start sub_0808c5c0
sub_0808c5c0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	mov		r12, r1
	add		r7, r2, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r5, #0x0
	mov		r6, #0x0
	cmp		r2, r12
	bge		_0808c60c
_0808c5d4:
	lsl		r1, r1, #0x8
	lsr		r0, r4, #0x18
	orr		r1, r0
	lsl		r4, r4, #0x8
	lsl		r2, r2, #0x4
	lsl		r5, r5, #0x4
	cmp		r1, #0x0
	blt		_0808c5fc
	mov		r0, #0x0
	add		r3, r5, #0x1
	b		_0808c5ee
_0808c5ea:
	add		r3, #0x2
	add		r0, #0x1
_0808c5ee:
	sub		r1, r1, r3
	cmp		r1, #0x0
	bge		_0808c5ea
	add		r1, r1, r3
	add		r2, r2, r0
	lsl		r0, r0, #0x1
	add		r5, r5, r0
_0808c5fc:
	cmp		r6, #0x3
	bne		_0808c606
	cmp		r7, #0x0
	beq		_0808c606
	str		r1, [r7, #0x0]
_0808c606:
	add		r6, #0x1
	cmp		r6, r12
	blt		_0808c5d4
_0808c60c:
	add		r0, r2, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808c5c0

	thumb_func_start sub_0808c614
sub_0808c614:
	push	{ lr }
	add		r1, r0, #0x0
	sub		r0, #0x61
	cmp		r0, #0x19
	bhi		_0808c620
	sub		r1, #0x20
_0808c620:
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C626, 0x16
	thumb_func_end sub_0808c614

	thumb_func_start sub_0808c63c
sub_0808c63c:
	push	{ r1, r2, r3 }
	push	{ lr }
	ldr		r1, [sp, #0x4]
	add		r2, sp, #0x8
	bl		sub_0808c650
	pop		{ r3 }
	add		sp, #0xc
	bx		r3

.incbin "base.gba", 0x8C64E, 0x2
	thumb_func_end sub_0808c63c

	thumb_func_start sub_0808c650
sub_0808c650:
	push	{ lr }
	mov		lr, sp
	mov		r8, r8
	ldr		r3, _0808c83c
	mov		sp, r3
	push	{ lr }
	ldr		r3, _0808c840
	mov		lr, pc
	bx		r3
	pop		{ r3 }
	mov		sp, r3
	pop		{ r3 }
	bx		r3

.incbin "base.gba", 0x8C66A, 0x6
	thumb_func_end sub_0808c650

	thumb_func_start sub_0808c670
sub_0808c670:
	push	{ r0, r1, r2, r3 }
	push	{ r4, lr }
	ldr		r1, [sp, #0x8]
	ldr		r4, _0808c690
	add		r2, sp, #0xc
	add		r0, r4, #0x0
	bl		sub_0808c650
	add		r0, r4, #0x0
	bl		sub_080bb908
	pop		{ r4 }
	pop		{ r3 }
	add		sp, #0x10
	bx		r3

.incbin "base.gba", 0x8C68E, 0x2

_0808c690:	.4byte 0x0200DD34
	thumb_func_end sub_0808c670

	thumb_func_start sub_0808c694
sub_0808c694:
	lsr		r2, r2, #0x2
	beq		_0808c6b4
	thumb_func_end sub_0808c694

	thumb_func_start sub_0808c698
sub_0808c698:
	lsl		r3, r2, #0x1e
	beq		_0808c6a6
	ldmia	r1!, { r3 }
	stmia	r0!, {  r3 }
	sub		r2, #0x1
	bne		sub_0808c698
	bx		lr
_0808c6a6:
	push	{ r4, r5, r6, r7 }
_0808c6a8:
	ldmia	r1!, { r4, r5, r6, r7 }
	stmia	r0!, {  r4, r5, r6, r7 }
	sub		r2, #0x4
	bne		_0808c6a8
	pop		{ r4, r5, r6, r7 }
	bx		lr
_0808c6b4:
	bx		lr

.incbin "base.gba", 0x8C6B6, 0x2
	thumb_func_end sub_0808c698

	thumb_func_start sub_0808c6b8
sub_0808c6b8:
	lsr		r2, r2, #0x1
	beq		_0808c71c
	thumb_func_end sub_0808c6b8

	thumb_func_start sub_0808c6bc
sub_0808c6bc:
	add		r3, r0, #0x0
	eor		r3, r1
	lsr		r3, r3, #0x2
	bcs		_0808c6f0
	lsr		r3, r0, #0x2
	bcc		_0808c6d2
	ldrh	r3, [r1, #0x0]
	strh	r3, [r0, #0x0]
	sub		r2, #0x1
	add		r1, #0x2
	add		r0, #0x2
_0808c6d2:
	lsr		r3, r2, #0x1
	beq		_0808c6e4
	push	{ r2, lr }
	lsr		r2, r2, #0x1
	bl		sub_0808c698
	pop		{ r2, r3 }
	mov		lr, r3
	lsr		r2, r2, #0x1
_0808c6e4:
	bcc		_0808c6ee
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	add		r1, #0x2
	add		r0, #0x2
_0808c6ee:
	bx		lr
_0808c6f0:
	lsl		r3, r2, #0x1e
	beq		_0808c702
	ldrh	r3, [r1, #0x0]
	strh	r3, [r0, #0x0]
	add		r1, #0x2
	add		r0, #0x2
	sub		r2, #0x1
	bne		_0808c6f0
	bx		lr
_0808c702:
	ldrh	r3, [r1, #0x0]
	strh	r3, [r0, #0x0]
	ldrh	r3, [r1, #0x2]
	strh	r3, [r0, #0x2]
	ldrh	r3, [r1, #0x4]
	strh	r3, [r0, #0x4]
	ldrh	r3, [r1, #0x6]
	strh	r3, [r0, #0x6]
	add		r1, #0x8
	add		r0, #0x8
	sub		r2, #0x4
	bne		_0808c702
	bx		lr
_0808c71c:
	bx		lr

.incbin "base.gba", 0x8C71E, 0x2
	thumb_func_end sub_0808c6bc

	thumb_func_start sub_0808c720
sub_0808c720:
	cmp		r2, #0x0
	beq		_0808c784
	add		r3, r0, #0x0
	eor		r3, r1
	lsr		r3, r3, #0x1
	bcs		_0808c758
	lsr		r3, r0, #0x1
	bcc		_0808c73a
	ldrb	r3, [r1, #0x0]
	strb	r3, [r0, #0x0]
	sub		r2, #0x1
	add		r1, #0x1
	add		r0, #0x1
_0808c73a:
	lsr		r3, r2, #0x1
	beq		_0808c74c
	push	{ r2, lr }
	lsr		r2, r2, #0x1
	bl		sub_0808c6bc
	pop		{ r2, r3 }
	mov		lr, r3
	lsr		r2, r2, #0x1
_0808c74c:
	bcc		_0808c756
	ldrb	r2, [r1, #0x0]
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	add		r0, #0x1
_0808c756:
	bx		lr
_0808c758:
	lsl		r3, r2, #0x1e
	beq		_0808c76a
	ldrb	r3, [r1, #0x0]
	strb	r3, [r0, #0x0]
	add		r1, #0x1
	add		r0, #0x1
	sub		r2, #0x1
	bne		_0808c758
	bx		lr
_0808c76a:
	ldrb	r3, [r1, #0x0]
	strb	r3, [r0, #0x0]
	ldrb	r3, [r1, #0x1]
	strb	r3, [r0, #0x1]
	ldrb	r3, [r1, #0x2]
	strb	r3, [r0, #0x2]
	ldrb	r3, [r1, #0x3]
	strb	r3, [r0, #0x3]
	add		r1, #0x4
	add		r0, #0x4
	sub		r2, #0x4
	bne		_0808c76a
	bx		lr
_0808c784:
	bx		lr

.incbin "base.gba", 0x8C786, 0x2
	thumb_func_end sub_0808c720

	thumb_func_start sub_0808c788
sub_0808c788:
	lsr		r2, r2, #0x2
	beq		_0808c7ac
	thumb_func_end sub_0808c788

	thumb_func_start sub_0808c78c
sub_0808c78c:
	lsl		r3, r2, #0x1e
	beq		_0808c798
	stmia	r0!, {  r1 }
	sub		r2, #0x1
	bne		sub_0808c78c
	bx		lr
_0808c798:
	push	{ r5, r7 }
	add		r3, r1, #0x0
	add		r5, r1, #0x0
	add		r7, r1, #0x0
_0808c7a0:
	stmia	r0!, {  r1, r3, r5, r7 }
	sub		r2, #0x4
	bne		_0808c7a0
	pop		{ r5, r7 }
	bx		lr

.incbin "base.gba", 0x8C7AA, 0x2
_0808c7ac:
	bx		lr

.incbin "base.gba", 0x8C7AE, 0x2
	thumb_func_end sub_0808c78c

	thumb_func_start sub_0808c7b0
sub_0808c7b0:
	lsr		r2, r2, #0x1
	beq		_0808c7e0
	thumb_func_end sub_0808c7b0

	thumb_func_start sub_0808c7b4
sub_0808c7b4:
	lsr		r3, r0, #0x2
	bcc		_0808c7be
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	sub		r2, #0x1
_0808c7be:
	lsr		r3, r2, #0x1
	beq		_0808c7d6
	push	{ r2, lr }
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x10
	orr		r1, r3
	lsr		r2, r2, #0x1
	bl		sub_0808c78c
	pop		{ r2, r3 }
	mov		lr, r3
	lsr		r2, r2, #0x1
_0808c7d6:
	bcc		_0808c7dc
	strh	r1, [r0, #0x0]
	add		r0, #0x2
_0808c7dc:
	bx		lr

.incbin "base.gba", 0x8C7DE, 0x2
_0808c7e0:
	bx		lr

.incbin "base.gba", 0x8C7E2, 0x2
	thumb_func_end sub_0808c7b4

	thumb_func_start sub_0808c7e4
sub_0808c7e4:
	cmp		r2, #0x0
	beq		_0808c814
	lsr		r3, r0, #0x1
	bcc		_0808c7f2
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	sub		r2, #0x1
_0808c7f2:
	lsr		r3, r2, #0x1
	beq		_0808c80c
	push	{ r2, lr }
	lsl		r1, r1, #0x18
	lsr		r3, r1, #0x8
	orr		r1, r3
	lsr		r1, r1, #0x10
	lsr		r2, r2, #0x1
	bl		sub_0808c7b4
	pop		{ r2, r3 }
	mov		lr, r3
	lsr		r2, r2, #0x1
_0808c80c:
	bcc		_0808c812
	strb	r1, [r0, #0x0]
	add		r0, #0x1
_0808c812:
	bx		lr
_0808c814:
	bx		lr

.incbin "base.gba", 0x8C816, 0x2
	thumb_func_end sub_0808c7e4

	thumb_func_start sub_0808c818
sub_0808c818:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808c720
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808c818

	thumb_func_start sub_0808c828
sub_0808c828:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808c7e4
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8C838, 0x4

_0808c83c:	.4byte 0x0200E9AC
_0808c840:	.4byte 0x080BE949
	thumb_func_end sub_0808c828

	thumb_func_start sub_0808c844
sub_0808c844:
	cmp		r2, #0x0
	ble		_0808c870
	mov		r12, r3
	ldr		r3, _0808c874
	bx		r3

.incbin "base.gba", 0x8C84E, 0x2
_0808c850:
.incbin "base.gba", 0x8C850, 0x4
_0808c854:
.incbin "base.gba", 0x8C854, 0x4
.incbin "base.gba", 0x8C858, 0x4
.incbin "base.gba", 0x8C85C, 0x4
.incbin "base.gba", 0x8C860, 0x4
.incbin "base.gba", 0x8C864, 0x4
.incbin "base.gba", 0x8C868, 0x4
.incbin "base.gba", 0x8C86C, 0x4
_0808c870:
	bx		lr

.incbin "base.gba", 0x8C872, 0x2

_0808c874:	.4byte 0x030072D8
	thumb_func_end sub_0808c844

	thumb_func_start sub_0808c878
sub_0808c878:
	cmp		r2, #0x0
	ble		_0808c928
	cmp		r3, #0x0
	ble		_0808c928
	mov		r12, r3
	ldr		r3, _0808c92c
	mov		pc, r3

.incbin "base.gba", 0x8C886, 0x2
	thumb_func_end sub_0808c878


.incbin "base.gba", 0x8C888, 0xA0

_0808c928:

.incbin "base.gba", 0x8C928, 0x4
_0808c92c:	.4byte 0x030072F8
	thumb_func_start sub_0808c930
sub_0808c930:
	mov		r3, pc
	bx		r3
_0808c934:
.incbin "base.gba", 0x8C934, 0x4
.incbin "base.gba", 0x8C938, 0x4
.incbin "base.gba", 0x8C93C, 0x4
.incbin "base.gba", 0x8C940, 0x4
.incbin "base.gba", 0x8C944, 0x4
.incbin "base.gba", 0x8C948, 0x4
.incbin "base.gba", 0x8C94C, 0x4
.incbin "base.gba", 0x8C950, 0x4
.incbin "base.gba", 0x8C954, 0x4
.incbin "base.gba", 0x8C958, 0x4
.incbin "base.gba", 0x8C95C, 0x4

.incbin "base.gba", 0x8C960, 0x4
	thumb_func_end sub_0808c930

	thumb_func_start sub_0808c964
sub_0808c964:
	mov		r3, pc
	bx		r3
_0808c968:
.incbin "base.gba", 0x8C968, 0x4
.incbin "base.gba", 0x8C96C, 0x4
.incbin "base.gba", 0x8C970, 0x4
.incbin "base.gba", 0x8C974, 0x4
.incbin "base.gba", 0x8C978, 0x4
.incbin "base.gba", 0x8C97C, 0x4
.incbin "base.gba", 0x8C980, 0x4
.incbin "base.gba", 0x8C984, 0x4
.incbin "base.gba", 0x8C988, 0x4
.incbin "base.gba", 0x8C98C, 0x4
.incbin "base.gba", 0x8C990, 0x4
.incbin "base.gba", 0x8C994, 0x4
.incbin "base.gba", 0x8C998, 0x4
.incbin "base.gba", 0x8C99C, 0x4
.incbin "base.gba", 0x8C9A0, 0x4
.incbin "base.gba", 0x8C9A4, 0x4

.incbin "base.gba", 0x8C9A8, 0x4
	push	{ r4, lr }
	ldr		r0, _0808c9f4
	ldr		r4, _0808c9f8
	sub		r0, r0, r4
	cmp		r0, #0x20
	beq		_0808c9c4
	ldr		r0, _0808c9fc
	ldr		r1, _0808ca00
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808c9c4:
	ldr		r0, _0808ca04
	add		r1, r4, #0x0
	mov		r2, #0x20
	bl		sub_0808c818
	ldr		r0, _0808ca08
	ldr		r4, _0808ca0c
	sub		r0, r0, r4
	cmp		r0, #0xa0
	beq		_0808c9e4
	ldr		r0, _0808c9fc
	ldr		r1, _0808ca10
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808c9e4:
	ldr		r0, _0808ca14
	add		r1, r4, #0x0
	mov		r2, #0xa0
	bl		sub_0808c818
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808c9f4:	.4byte 0x0808C870
_0808c9f8:	.4byte 0x0808c850
_0808c9fc:	.4byte 0x080de8d4 @ ../a_toda/etcetera.cpp
_0808ca00:	.4byte 0x00000209
_0808ca04:	.4byte 0x030072D8
_0808ca08:	.4byte 0x0808C928
_0808ca0c:	.4byte 0x0808c888
_0808ca10:	.4byte 0x0000020B
_0808ca14:	.4byte 0x030072F8
	thumb_func_end sub_0808c964

	thumb_func_start sub_0808ca18
sub_0808ca18:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r1, #0x0
	mov		r1, #0x0
	ldrsh	r5, [r2, r1]
	mov		r6, #0x2
	ldrsh	r3, [r2, r6]
	mov		r8, r3
	mov		r3, #0x4
	ldrsh	r1, [r2, r3]
	mov		r3, #0x6
	ldrsh	r6, [r2, r3]
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	str		r2, [sp, #0x0]
	mov		r3, #0x2
	ldrsh	r2, [r0, r3]
	str		r2, [sp, #0x4]
	mov		r3, #0x4
	ldrsh	r2, [r0, r3]
	mov		r9, r2
	mov		r3, #0x6
	ldrsh	r2, [r0, r3]
	mov		r10, r2
	ldr		r0, [sp, #0x0]
	sub		r4, r0, r5
	add		r0, r1, #0x1
	add		r4, r4, r0
	sub		r0, r4, #0x1
	bl		sub_080bbd44
	add		r0, #0x1
	sub		r4, r4, r0
	add		r5, r4, r5
	ldr		r1, [sp, #0x4]
	mov		r2, r8
	sub		r4, r1, r2
	add		r0, r6, #0x1
	add		r4, r4, r0
	sub		r0, r4, #0x1
	add		r1, r6, #0x0
	bl		sub_080bbd44
	add		r0, #0x1
	sub		r4, r4, r0
	add		r4, r8
	cmp		r5, r9
	ble		_0808ca82
	mov		r5, r9
_0808ca82:
	cmp		r4, r10
	ble		_0808ca88
	mov		r4, r10
_0808ca88:
	mov		r2, #0x0
	cmp		r5, r9
	bge		_0808ca90
	mov		r2, #0x1
_0808ca90:
	mov		r3, #0x0
	cmp		r4, r10
	bge		_0808ca98
	mov		r3, #0x1
_0808ca98:
	add		r0, r7, #0x0
	cmp		r2, #0x0
	bne		_0808caa2
	cmp		r3, #0x0
	beq		_0808caca
_0808caa2:
	mov		r6, sp
	ldrh	r6, [r6, #0x0]
	strh	r6, [r7, #0x0]
	mov		r1, sp
	ldrh		r1, [r1, #0x4]
	strh	r1, [r7, #0x2]
	strh	r5, [r7, #0x4]
	strh	r4, [r7, #0x6]
	add		r7, #0x8
	cmp		r2, #0x0
	beq		_0808cace
	strh	r5, [r7, #0x0]
	mov		r6, sp
	ldrh		r6, [r6, #0x4]
	strh	r6, [r7, #0x2]
	mov		r1, r9
	strh	r1, [r7, #0x4]
	strh	r4, [r7, #0x6]
	add		r7, #0x8
	b		_0808cace
_0808caca:
	mov		r0, #0x0
	b		_0808cafa
_0808cace:
	cmp		r3, #0x0
	beq		_0808cae2
	mov		r6, sp
	ldrh	r6, [r6, #0x0]
	strh	r6, [r7, #0x0]
	strh	r4, [r7, #0x2]
	strh	r5, [r7, #0x4]
	mov		r1, r10
	strh	r1, [r7, #0x6]
	add		r7, #0x8
_0808cae2:
	and		r2, r3
	cmp		r2, #0x0
	beq		_0808caf6
	strh	r5, [r7, #0x0]
	strh	r4, [r7, #0x2]
	mov		r2, r9
	strh	r2, [r7, #0x4]
	mov		r3, r10
	strh	r3, [r7, #0x6]
	add		r7, #0x8
_0808caf6:
	sub		r0, r7, r0
	asr		r0, r0, #0x3
_0808cafa:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8CB0A, 0x2
	thumb_func_end sub_0808ca18

	thumb_func_start sub_0808cb0c
sub_0808cb0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	add		r7, r3, #0x0
	ldr		r1, [r6, #0x0]
	bl		sub_0808ca18
	add		r5, r0, #0x0
	cmp		r5, #0x0
	ble		_0808cb44
	ldr		r4, [r6, #0x0]
	lsl		r0, r5, #0x3
	add		r0, r4, r0
	str		r0, [r6, #0x0]
_0808cb2e:
	add		r0, r4, #0x0
	add		r4, #0x8
	add		r1, r6, #0x0
	mov		r2, r8
	add		r3, r7, #0x0
	bl		sub_0808cb0c
	sub		r5, #0x1
	cmp		r5, #0x0
	bgt		_0808cb2e
	b		_0808cb4a
_0808cb44:
	ldr		r0, [r7, #0x0]
	stmia	r0!, {  r4 }
	str		r0, [r7, #0x0]
_0808cb4a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808cb0c

	thumb_func_start sub_0808cb54
sub_0808cb54:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, _0808cb80
	ldrh	r2, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r0, r0, #0x1
	ldr		r1, _0808cb84
	add		r0, r0, r1
	ldrh	r6, [r0, #0x0]
	mov		r0, #0x7
	and		r2, r0
	mov		r1, #0xc0
	lsl		r1, r1, #0x8
	add		r3, r6, #0x0
	and		r3, r1
	cmp		r2, #0x0
	beq		_0808cb88
	cmp		r2, #0x1
	beq		_0808cba8
	b		_0808cbc0

.incbin "base.gba", 0x8CB7E, 0x2

_0808cb80:	.4byte 0x02000B18
_0808cb84:	.4byte 0x02000B1A

_0808cb88:
	mov		r0, #0x20
	strh	r0, [r5, #0x16]
	strh	r0, [r5, #0x14]
	ldr		r4, _0808cba4
	add		r0, r3, #0x0
	bl		sub_080bbcac
	mov		r1, #0x3
	and		r0, r1
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	add		r4, r1, r4
	b		_0808cbc0

_0808cba4:	.4byte 0x080de8ec

_0808cba8:
	add		r0, r3, #0x0
	asr		r0, r0, #0x9
	mov		r2, #0x20
	and		r0, r2
	add		r0, #0x20
	strh	r0, [r5, #0x14]
	add		r1, r3, #0x0
	asr		r0, r1, #0xa
	and		r0, r2
	add		r0, #0x20
	strh	r0, [r5, #0x16]
	ldr		r4, _0808cc28
_0808cbc0:
	mov		r0, #0xf8
	lsl		r0, r0, #0x5
	and		r6, r0
	lsl		r1, r6, #0x3
	mov		r0, #0xc0
	lsl		r0, r0, #0x13
	add		r1, r1, r0
	str		r1, [r5, #0x1c]
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r1, r0
	str		r0, [r5, #0x20]
	ldrh	r0, [r4, #0x2]
	lsl		r0, r0, #0x1
	add		r0, r1, r0
	str		r0, [r5, #0x24]
	ldrh	r0, [r4, #0x4]
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	str		r1, [r5, #0x28]
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl		r2, r0, #0x2
	ldr		r0, _0808cc2c
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0808cbfc
	neg		r1, r0
_0808cbfc:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0808cc04
	neg		r1, r1
_0808cc04:
	ldr		r0, _0808cc30
	add		r0, r2, r0
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x0
	cmp		r0, #0x0
	bge		_0808cc12
	neg		r2, r0
_0808cc12:
	asr		r2, r2, #0x10
	cmp		r0, #0x0
	bge		_0808cc1a
	neg		r2, r2
_0808cc1a:
	add		r0, r5, #0x0
	mov		r3, #0x1
	bl		sub_0808cc34
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0808cc28:	.4byte 0x080de8ec
_0808cc2c:	.4byte 0x0200CE24
_0808cc30:	.4byte 0x0200CE38
	thumb_func_end sub_0808cb54

	thumb_func_start sub_0808cc34
sub_0808cc34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	mov		r12, r0
	mov		r8, r1
	mov		r10, r2
	str		r3, [sp, #0x0]
	ldr		r2, [r0, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	add		r1, r2, r0
	mov		r3, r12
	ldr		r6, [r3, #0x8]
	add		r3, r6, r0
	mov		r5, r8
	add		r4, r5, r0
	mov		r7, r10
	add		r5, r7, r0
	mov		r0, r12
	str		r2, [r0, #0xc]
	str		r6, [r0, #0x10]
	mov		r7, r8
	str		r7, [r0, #0x4]
	mov		r7, r10
	str		r7, [r0, #0x8]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0808cc76
	ldr		r7, _0808cd30
	add		r0, r2, r7
_0808cc76:
	asr		r0, r0, #0x3
	str		r0, [sp, #0x4]
	mov		r2, r12
	strh	r0, [r2, #0x34]
	mov		r7, #0x34
	ldrsh	r0, [r2, r7]
	add		r2, r0, #0x0
	add		r2, #0x1e
	str		r2, [sp, #0x8]
	mov		r7, #0x7
	and		r1, r7
	cmp		r1, #0x0
	beq		_0808cc94
	add		r0, #0x1f
	str		r0, [sp, #0x8]
_0808cc94:
	mov		r0, sp
	ldrh		r1, [r0, #0x8]
	mov		r0, r12
	strh	r1, [r0, #0x38]
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0808cca6
	ldr		r2, _0808cd30
	add		r0, r6, r2
_0808cca6:
	asr		r0, r0, #0x3
	mov		r9, r0
	mov		r0, r9
	mov		r7, r12
	strh	r0, [r7, #0x36]
	mov		r1, #0x36
	ldrsh	r0, [r7, r1]
	add		r2, r0, #0x0
	add		r2, #0x14
	str		r2, [sp, #0xC]
	mov		r7, #0x7
	and		r3, r7
	cmp		r3, #0x0
	beq		_0808ccc6
	add		r0, #0x15
	str		r0, [sp, #0xC]
_0808ccc6:
	mov		r0, sp
	ldrh		r1, [r0, #0xC]
	mov		r0, r12
	strh	r1, [r0, #0x3a]
	add		r1, r4, #0x0
	cmp		r4, #0x0
	bge		_0808ccd8
	ldr		r1, _0808cd30
	add		r1, r8
_0808ccd8:
	asr		r6, r1, #0x3
	mov		r2, r12
	strh	r6, [r2, #0x2c]
	mov		r3, #0x2c
	ldrsh	r0, [r2, r3]
	mov		r7, #0x1e
	add		r7, r7, r0
	mov		r8, r7
	mov		r1, #0x7
	and		r4, r1
	cmp		r4, #0x0
	beq		_0808ccf4
	add		r0, #0x1f
	mov		r8, r0
_0808ccf4:
	mov		r3, r8
	mov		r2, r12
	strh	r3, [r2, #0x30]
	add		r1, r5, #0x0
	cmp		r5, #0x0
	bge		_0808cd04
	ldr		r1, _0808cd30
	add		r1, r10
_0808cd04:
	asr		r4, r1, #0x3
	mov		r7, r12
	strh	r4, [r7, #0x2e]
	mov		r0, #0x2e
	ldrsh	r2, [r7, r0]
	add		r7, r2, #0x0
	add		r7, #0x14
	mov		r1, #0x7
	and		r5, r1
	cmp		r5, #0x0
	beq		_0808cd1c
	add		r7, #0x1
_0808cd1c:
	mov		r2, r12
	strh	r7, [r2, #0x32]
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x0
	beq		_0808cd34
	mov		r0, #0x0
	strh	r0, [r2, #0x2]
	mov		r0, #0x1
	b		_0808ce38

.incbin "base.gba", 0x8CD2E, 0x2

_0808cd30:	.4byte 0x00002007

_0808cd34:
	mov		r2, r12
	add		r2, #0x3c
	add		r3, r6, #0x0
	lsl		r1, r6, #0x10
	ldr		r5, [sp, #0x4]
	lsl		r0, r5, #0x10
	cmp		r1, r0
	bge		_0808cd48
	mov		r0, sp
	ldrh		r3, [r0, #0x4]
_0808cd48:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	mov		r10, r0
	add		r3, r4, #0x0
	lsl		r1, r4, #0x10
	mov		r4, r9
	lsl		r0, r4, #0x10
	cmp		r1, r0
	bge		_0808cd5c
	mov		r3, r9
_0808cd5c:
	lsl		r0, r3, #0x10
	asr		r5, r0, #0x10
	mov		r3, r8
	mov		r0, r8
	lsl		r1, r0, #0x10
	ldr		r4, [sp, #0x8]
	lsl		r0, r4, #0x10
	cmp		r1, r0
	ble		_0808cd72
	mov		r0, sp
	ldrh		r3, [r0, #0x8]
_0808cd72:
	lsl		r0, r3, #0x10
	asr		r6, r0, #0x10
	add		r3, r7, #0x0
	lsl		r1, r7, #0x10
	ldr		r4, [sp, #0xC]
	lsl		r0, r4, #0x10
	cmp		r1, r0
	ble		_0808cd86
	mov		r7, sp
	ldrh		r3, [r7, #0xC]
_0808cd86:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	mov		r1, r12
	ldr		r3, [r1, #0x4]
	ldr		r1, [r1, #0xc]
	cmp		r3, r1
	beq		_0808cdb8
	cmp		r3, r1
	ble		_0808cda2
	add		r1, r6, #0x0
	mov		r3, r12
	mov		r7, #0x30
	ldrsh	r4, [r3, r7]
	b		_0808cdaa
_0808cda2:
	mov		r3, r12
	mov		r4, #0x2c
	ldrsh	r1, [r3, r4]
	mov		r4, r10
_0808cdaa:
	cmp		r4, r1
	ble		_0808cdb8
	strh	r1, [r2, #0x0]
	strh	r5, [r2, #0x2]
	strh	r4, [r2, #0x4]
	strh	r0, [r2, #0x6]
	add		r2, #0x8
_0808cdb8:
	mov		r7, r12
	ldr		r3, [r7, #0x8]
	ldr		r1, [r7, #0x10]
	cmp		r3, r1
	beq		_0808cde4
	cmp		r3, r1
	ble		_0808cdce
	add		r3, r0, #0x0
	mov		r0, #0x32
	ldrsh	r5, [r7, r0]
	b		_0808cdd4
_0808cdce:
	mov		r1, r12
	mov		r4, #0x2e
	ldrsh	r3, [r1, r4]
_0808cdd4:
	cmp		r5, r3
	ble		_0808cde4
	mov		r7, r10
	strh	r7, [r2, #0x0]
	strh	r3, [r2, #0x2]
	strh	r6, [r2, #0x4]
	strh	r5, [r2, #0x6]
	add		r2, #0x8
_0808cde4:
	mov		r0, r12
	add		r0, #0x4c
	cmp		r2, r0
	bne		_0808ce14
	mov		r1, r12
	ldrh	r0, [r1, #0x3c]
	strh	r0, [r2, #0x0]
	mov		r0, r12
	add		r0, #0x40
	ldrh	r1, [r0, #0x0]
	add		r0, #0x10
	strh	r1, [r0, #0x0]
	sub		r0, #0xa
	ldrh	r0, [r0, #0x0]
	mov		r1, r12
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r0, r12
	add		r0, #0x4a
	ldrh	r0, [r0, #0x0]
	add		r1, #0x4
	strh	r0, [r1, #0x0]
	mov		r2, r12
	add		r2, #0x54
_0808ce14:
	add		r0, r2, #0x0
	sub		r0, #0x3c
	mov		r2, r12
	sub		r0, r0, r2
	asr		r0, r0, #0x3
	strh	r0, [r2, #0x2]
	mov		r2, #0x0
	mov		r3, r12
	ldr		r1, [r3, #0x4]
	ldr		r0, [r3, #0xc]
	cmp		r1, r0
	bne		_0808ce34
	ldr		r1, [r3, #0x8]
	ldr		r0, [r3, #0x10]
	cmp		r1, r0
	beq		_0808ce36
_0808ce34:
	mov		r2, #0x1
_0808ce36:
	add		r0, r2, #0x0
_0808ce38:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808cc34

	thumb_func_start sub_0808ce48
sub_0808ce48:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	ldr		r0, [r0, #0x18]
	str		r0, [sp, #0x0]
	cmp		r0, #0x0
	beq		_0808cefc
	add		r6, r1, #0x0
	mov		r9, r2
	mov		r0, #0xf0
	lsl		r0, r0, #0x10
	add		r0, r0, r6
	mov		r8, r0
	mov		r1, #0xa0
	lsl		r1, r1, #0x10
	add		r1, r9
	mov		r10, r1
	ldr		r2, [sp, #0x0]
	mov		r4, #0x0
	ldrsh	r1, [r2, r4]
	add		r2, #0x6
	b		_0808cef6
_0808ce7a:
	mov		r7, #0x0
	ldrsh	r0, [r2, r7]
	lsl		r5, r0, #0x10
	mov		r4, #0x2
	ldrsh	r0, [r2, r4]
	lsl		r0, r0, #0x10
	mov		r12, r0
	mov		r7, #0x4
	ldrsh	r0, [r2, r7]
	lsl		r4, r0, #0x10
	mov		r7, #0x6
	ldrsh	r0, [r2, r7]
	lsl		r7, r0, #0x10
	cmp		r8, r5
	ble		_0808cef4
	cmp		r6, r4
	bge		_0808cef4
	cmp		r10, r12
	ble		_0808cef4
	cmp		r9, r7
	bge		_0808cef4
	cmp		r6, r5
	blt		_0808ceb4
	cmp		r8, r4
	bgt		_0808ceb4
	cmp		r9, r12
	blt		_0808ceb4
	cmp		r10, r7
	ble		_0808cefc
_0808ceb4:
	cmp		r3, #0x0
	beq		_0808ceea
	str		r2, [r3, #0x0]
	cmp		r6, r5
	bge		_0808cec2
	sub		r0, r6, r5
	b		_0808cece
_0808cec2:
	cmp		r8, r4
	ble		_0808cecc
	mov		r1, r8
	sub		r0, r1, r4
	b		_0808cece
_0808cecc:
	mov		r0, #0x0
_0808cece:
	str		r0, [r3, #0x4]
	cmp		r9, r12
	bge		_0808cedc
	mov		r4, r9
	mov		r7, r12
	sub		r0, r4, r7
	b		_0808cee8
_0808cedc:
	cmp		r10, r7
	ble		_0808cee6
	mov		r1, r10
	sub		r0, r1, r7
	b		_0808cee8
_0808cee6:
	mov		r0, #0x0
_0808cee8:
	str		r0, [r3, #0x8]
_0808ceea:
	sub		r0, r2, #0x6
	ldr		r2, [sp, #0x0]
	sub		r0, r0, r2
	asr		r0, r0, #0x3
	b		_0808cf00
_0808cef4:
	add		r2, #0x8
_0808cef6:
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0808ce7a
_0808cefc:
	mov		r0, #0x1
	neg		r0, r0
_0808cf00:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808ce48

	thumb_func_start sub_0808cf10
sub_0808cf10:
	push	{ lr }
	strh	r1, [r0, #0x4]
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	bl		sub_0808cf20
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808cf10

	thumb_func_start sub_0808cf20
sub_0808cf20:
	push	{ r4, r5, lr }
	ldr		r4, [r0, #0x0]
	ldrh	r3, [r4, #0x0]
	add		r3, r3, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r5, r1, #0x0
	add		r3, r3, r5
	strh	r3, [r0, #0x6]
	ldrh	r1, [r4, #0x2]
	add		r1, r1, r2
	add		r1, r1, r5
	strh	r1, [r0, #0x8]
	ldrh	r2, [r4, #0x4]
	add		r3, r3, r2
	strh	r3, [r0, #0xa]
	ldrh	r2, [r4, #0x6]
	add		r1, r1, r2
	strh	r1, [r0, #0xc]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808cf20

	thumb_func_start sub_0808cf4c
sub_0808cf4c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r2, r4, #0x0
	add		r2, #0x2c
	bl		sub_0808d0a4
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_0808d28c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8CF6A, 0x2
	thumb_func_end sub_0808cf4c

	thumb_func_start sub_0808cf6c
sub_0808cf6c:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	mov		r6, #0x0
	mov		r1, #0x2
	ldrsh	r0, [r4, r1]
	cmp		r6, r0
	bge		_0808cfa0
	add		r5, r4, #0x0
	add		r5, #0x3c
_0808cf80:
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808d0a4
	add		r1, r0, #0x0
	add		r0, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0808d28c
	add		r5, #0x8
	add		r6, #0x1
	mov		r1, #0x2
	ldrsh	r0, [r4, r1]
	cmp		r6, r0
	blt		_0808cf80
_0808cfa0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8CFA6, 0x2
	thumb_func_end sub_0808cf6c

	thumb_func_start sub_0808cfa8
sub_0808cfa8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r5, r2, #0x0
	mov		r0, #0x28
	bl		sub_08000600
	bl		sub_080c3be4
	add		r7, r0, #0x0
	mov		r1, #0xc
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r1, [sp, #0x0]
	ldr		r0, [r1, #0x0]
	str		r0, [r7, #0x14]
	str		r5, [r7, #0x18]
	ldr		r2, [sp, #0x4]
	mov		r0, #0x0
	ldrsh	r2, [r2, r0]
	mov		r9, r2
	ldr		r1, [sp, #0x4]
	mov		r2, #0x2
	ldrsh	r1, [r1, r2]
	mov		r10, r1
	mov		r1, #0x14
	ldrsh	r0, [r5, r1]
	mov		r8, r0
	mov		r2, #0x16
	ldrsh	r1, [r5, r2]
	mov		r0, r10
	bl		sub_080bbcac
	add		r4, r0, #0x0
	mov		r6, #0x1
	and		r4, r6
	lsl		r4, r4, #0x1
	mov		r0, r9
	mov		r1, r8
	bl		sub_080bbcac
	and		r0, r6
	add		r4, r4, r0
	lsl		r4, r4, #0x2
	add		r5, #0x1c
	add		r5, r5, r4
	mov		r2, r8
	sub		r2, #0x1
	mov		r0, r10
	and		r0, r2
	mov		r1, r8
	mul		r1, r0
	add		r0, r1, #0x0
	lsl		r0, r0, #0x1
	ldr		r1, [r5, #0x0]
	add		r1, r1, r0
	mov		r0, r9
	and		r2, r0
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	str		r1, [r7, #0x20]
	ldr		r1, [sp, #0x4]
	ldrh	r0, [r1, #0x4]
	mov		r2, r9
	sub		r0, r0, r2
	strh	r0, [r7, #0x24]
	ldrh	r0, [r1, #0x6]
	mov		r1, r10
	sub		r0, r0, r1
	strh	r0, [r7, #0x26]
	ldr		r2, [sp, #0x0]
	ldr		r6, [r2, #0x0]
	mov		r0, #0x4
	ldrsh	r5, [r6, r0]
	mov		r2, #0x6
	ldrsh	r1, [r6, r2]
	mov		r8, r1
	ldr		r1, [sp, #0x0]
	mov		r2, #0x6
	ldrsh	r0, [r1, r2]
	mov		r1, r9
	sub		r1, r1, r0
	mov		r9, r1
	mov		r0, r9
	add		r1, r5, #0x0
	bl		sub_080bbd44
	add		r4, r0, #0x0
	ldr		r2, [sp, #0x0]
	mov		r1, #0x8
	ldrsh	r0, [r2, r1]
	mov		r2, r10
	sub		r0, r2, r0
	mov		r1, r8
	bl		sub_080bbd44
	mov		r10, r0
	cmp		r4, #0x0
	bge		_0808d07c
	add		r4, r4, r5
_0808d07c:
	mov		r0, r10
	cmp		r0, #0x0
	bge		_0808d084
	add		r0, r8
_0808d084:
	mul		r0, r5
	lsl		r0, r0, #0x1
	add		r0, #0xa
	add		r0, r6, r0
	lsl		r1, r4, #0x1
	add		r0, r0, r1
	str		r0, [r7, #0x1c]
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D0A2, 0x2
	thumb_func_end sub_0808cfa8

	thumb_func_start sub_0808d0a4
sub_0808d0a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r3, r2, #0x0
	ldr		r0, _0808d0e8
	add		r1, r0, #0x0
	add		r1, #0x8
	add		r2, r0, #0x0
	stmia	r2!, {  r1 }
	add		r1, #0x48
	str		r1, [r0, #0x4]
	ldr		r0, _0808d0ec
	mov		r9, r0
	ldr		r1, _0808d0e8
	str		r1, [sp, #0x8]
	ldrh	r1, [r6, #0x4]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808d0f0
	ldrh	r0, [r3, #0x0]
	ldr		r2, _0808d0ec
	strh	r0, [r2, #0x0]
	ldrh	r1, [r3, #0x4]
	ldr		r0, _0808d0e8
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	b		_0808d136

.incbin "base.gba", 0x8D0E6, 0x2

_0808d0e8:	.4byte 0x03007398
_0808d0ec:	.4byte 0x030073E0

_0808d0f0:
	ldrh	r4, [r6, #0x6]
	mov		r8, r4
	mov		r5, #0x6
	ldrsh	r4, [r6, r5]
	mov		r1, #0x4
	ldrsh	r0, [r3, r1]
	cmp		r4, r0
	blt		_0808d102
	b		_0808d268
_0808d102:
	mov		r2, #0xa
	ldrsh	r0, [r6, r2]
	ldrh	r2, [r3, #0x0]
	mov		r5, #0x0
	ldrsh	r1, [r3, r5]
	cmp		r0, r1
	bgt		_0808d112
	b		_0808d268
_0808d112:
	add		r0, r2, #0x0
	cmp		r1, r4
	bge		_0808d11a
	mov		r0, r8
_0808d11a:
	ldr		r1, _0808d14c
	strh	r0, [r1, #0x0]
	ldrh	r2, [r3, #0x4]
	mov		r4, #0x4
	ldrsh	r1, [r3, r4]
	ldrh	r4, [r6, #0xa]
	mov		r5, #0xa
	ldrsh	r0, [r6, r5]
	cmp		r1, r0
	ble		_0808d130
	add		r2, r4, #0x0
_0808d130:
	ldr		r0, _0808d150
	add		r0, #0x4c
	strh	r2, [r0, #0x0]
_0808d136:
	ldrh	r1, [r6, #0x4]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808d154
	ldrh	r0, [r3, #0x2]
	mov		r1, r9
	strh	r0, [r1, #0x2]
	ldrh	r0, [r3, #0x6]
	strh	r0, [r1, #0x6]
	b		_0808d196

_0808d14c:	.4byte 0x030073E0
_0808d150:	.4byte 0x03007398

_0808d154:
	ldrh	r2, [r6, #0x8]
	mov		r8, r2
	mov		r5, #0x8
	ldrsh	r4, [r6, r5]
	mov		r1, #0x6
	ldrsh	r0, [r3, r1]
	cmp		r4, r0
	blt		_0808d166
	b		_0808d268
_0808d166:
	mov		r2, #0xc
	ldrsh	r0, [r6, r2]
	ldrh	r2, [r3, #0x2]
	mov		r5, #0x2
	ldrsh	r1, [r3, r5]
	cmp		r0, r1
	ble		_0808d268
	add		r0, r2, #0x0
	cmp		r1, r4
	bge		_0808d17c
	mov		r0, r8
_0808d17c:
	mov		r1, r9
	strh	r0, [r1, #0x2]
	ldrh	r2, [r3, #0x6]
	mov		r4, #0x6
	ldrsh	r1, [r3, r4]
	ldrh	r3, [r6, #0xc]
	mov		r5, #0xc
	ldrsh	r0, [r6, r5]
	cmp		r1, r0
	ble		_0808d192
	add		r2, r3, #0x0
_0808d192:
	mov		r0, r9
	strh	r2, [r0, #0x6]
_0808d196:
	mov		r0, sp
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldrh	r0, [r7, #0x14]
	add		r2, sp, #0x4
	mov		r10, r2
	strh	r0, [r2, #0x0]
	mov		r4, sp
	add		r4, #0x2
	str		r4, [sp, #0xC]
	strh	r1, [r4, #0x0]
	ldrh	r0, [r7, #0x16]
	mov		r5, sp
	add		r5, #0x6
	str		r5, [sp, #0x10]
	strh	r0, [r5, #0x0]
	ldr		r0, _0808d27c
	ldr		r1, [r0, #0x0]
	mov		r0, r9
	mov		r2, sp
	bl		sub_0808ca18
	add		r7, r0, #0x0
	ldrh	r1, [r6, #0x4]
	mov		r8, r1
	mov		r0, #0x1
	mov		r2, r8
	and		r0, r2
	cmp		r0, #0x0
	beq		_0808d1ec
	ldr		r0, [r6, #0x0]
	mov		r5, #0x4
	ldrsh	r4, [r0, r5]
	mov		r5, sp
	mov		r1, #0x6
	ldrsh	r0, [r6, r1]
	add		r1, r4, #0x0
	bl		sub_080bbd44
	sub		r0, r0, r4
	strh	r0, [r5, #0x0]
	mov		r2, r10
	strh	r4, [r2, #0x0]
_0808d1ec:
	mov		r0, #0x2
	mov		r4, r8
	and		r0, r4
	cmp		r0, #0x0
	beq		_0808d210
	ldr		r0, [r6, #0x0]
	mov		r5, #0x6
	ldrsh	r4, [r0, r5]
	mov		r1, #0x8
	ldrsh	r0, [r6, r1]
	add		r1, r4, #0x0
	bl		sub_080bbd44
	sub		r0, r0, r4
	ldr		r2, [sp, #0xC]
	strh	r0, [r2, #0x0]
	ldr		r5, [sp, #0x10]
	strh	r4, [r5, #0x0]
_0808d210:
	cmp		r7, #0x0
	ble		_0808d222
	ldr		r0, _0808d27c
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	lsl		r0, r7, #0x3
	add		r0, r9
	ldr		r1, _0808d27c
	str		r0, [r1, #0x0]
_0808d222:
	mov		r0, r9
	mov		r2, #0x8
	add		r9, r2
	ldr		r1, _0808d27c
	mov		r2, sp
	ldr		r3, [sp, #0x8]
	bl		sub_0808cb0c
	sub		r7, #0x1
	cmp		r7, #0x0
	bgt		_0808d222
	ldr		r4, _0808d280
	ldr		r0, [r4, #0x0]
	ldr		r5, _0808d284
	cmp		r0, r5
	bcc		_0808d24e
	ldr		r0, _0808d288
	mov		r1, #0xfd
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808d24e:
	ldr		r0, _0808d280
	mov		r2, #0x88
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	ldr		r0, [r0, #0x4]
	cmp		r0, r1
	bcc		_0808d268
	ldr		r0, _0808d288
	mov		r1, #0xfe
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808d268:
	ldr		r0, _0808d280
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8D27A, 0x2

_0808d27c:	.4byte 0x0300739C
_0808d280:	.4byte 0x03007398
_0808d284:	.4byte 0x030073E0
_0808d288:	.4byte 0x080de904 @ ../a_toda/agbbgsys.cpp
	thumb_func_end sub_0808d0a4

	thumb_func_start sub_0808d28c
sub_0808d28c:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	add		r4, r5, #0x0
	add		r4, #0x8
	b		_0808d2a4
_0808d29a:
	ldmia	r4!, { r1 }
	add		r0, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_0808cfa8
_0808d2a4:
	ldr		r0, [r5, #0x0]
	cmp		r4, r0
	bcc		_0808d29a
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808d28c

	thumb_func_start sub_0808d2b0
sub_0808d2b0:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	ldr		r4, [r0, #0x20]
	ldr		r1, [r0, #0x1c]
	mov		r3, #0x24
	ldrsh	r2, [r0, r3]
	mov		r5, #0x26
	ldrsh	r3, [r0, r5]
	ldr		r0, [r0, #0x14]
	mov		r5, #0x4
	ldrsh	r0, [r0, r5]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808c878
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D2D6, 0x2
	thumb_func_end sub_0808d2b0

	thumb_func_start sub_0808d2d8
sub_0808d2d8:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	ldr		r0, _0808d338
	mov		r9, r0
	ldr		r1, _0808d33c
	mov		r8, r1
	ldr		r6, _0808d340
	ldr		r5, _0808d344
	ldr		r4, _0808d348
	ldr		r3, _0808d34c
	ldr		r2, _0808d350
	ldr		r1, _0808d354
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	str		r0, [r4, #0x0]
	str		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
	mov		r1, r8
	str		r0, [r1, #0x0]
	mov		r1, r9
	str		r0, [r1, #0x0]
	mov		r4, #0x0
_0808d30c:
	mov		r0, #0x54
	mul		r0, r4
	ldr		r1, _0808d358
	add		r0, r0, r1
	mov		r1, #0x0
	strh	r4, [r0, #0x0]
	str		r1, [r0, #0x18]
	bl		sub_0808cb54
	add		r0, r4, #0x0
	bl		sub_08001424
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0808d30c
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D336, 0x2

_0808d338:	.4byte 0x0200CE24
_0808d33c:	.4byte 0x0200CE38
_0808d340:	.4byte 0x0200CE28
_0808d344:	.4byte 0x0200CE3C
_0808d348:	.4byte 0x0200CE2C
_0808d34c:	.4byte 0x0200CE40
_0808d350:	.4byte 0x0200CE30
_0808d354:	.4byte 0x0200CE44
_0808d358:	.4byte 0x0200E9AC
	thumb_func_end sub_0808d2d8

	thumb_func_start sub_0808d35c
sub_0808d35c:
	push	{ r4, lr }
	mov		r4, #0x0
_0808d360:
	ldr		r1, _0808d378
	mov		r0, #0x54
	mul		r0, r4
	add		r0, r0, r1
	bl		sub_0808cb54
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0808d360
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808d378:	.4byte 0x0200E9AC
	thumb_func_end sub_0808d35c

	thumb_func_start sub_0808d37c
sub_0808d37c:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	add		r4, r0, #0x0
	mov		r8, r1
	mov		r9, r2
	mov		r0, #0x0
	strh	r0, [r4, #0x24]
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	str		r0, [r4, #0x0]
	add		r6, r4, #0x0
	add		r6, #0xc
	str		r0, [r4, #0x10]
	str		r0, [r4, #0x14]
	str		r0, [r4, #0xc]
	str		r0, [r4, #0x1c]
	str		r0, [r4, #0x20]
	str		r0, [r4, #0x18]
	ldr		r1, [r4, #0x28]
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	add		r0, r4, r0
	ldr		r1, [r1, #0xc]
	bl		sub_080bbc74
	ldr		r0, [r4, #0x1c]
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r5, r1, #0x0
	add		r5, #0x10
	mov		r0, r8
	strh	r0, [r5, #0x10]
	mov		r2, r9
	strh	r2, [r1, #0x22]
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808d37c

	thumb_func_start sub_0808d3e4
sub_0808d3e4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	b		_0808d3ee
_0808d3ea:
	bl		sub_0808afac
_0808d3ee:
	ldr		r0, [r4, #0x1c]
	cmp		r0, #0x0
	bne		_0808d3ea
	b		_0808d3fa
_0808d3f6:
	bl		sub_0808afac
_0808d3fa:
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bne		_0808d3f6
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D406, 0x22
	thumb_func_end sub_0808d3e4

	thumb_func_start sub_0808d428
sub_0808d428:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r1, r3, #0x0
	ldrh	r0, [r6, #0x24]
	sub		r0, r0, r2
	strh	r0, [r6, #0x24]
	add		r4, r5, #0x0
	add		r4, #0x10
	ldrh	r0, [r4, #0x10]
	strh	r0, [r1, #0x10]
	strh	r2, [r1, #0x12]
	ldrh	r0, [r4, #0x10]
	add		r0, r0, r2
	strh	r0, [r4, #0x10]
	ldrh	r0, [r5, #0x22]
	sub		r0, r0, r2
	strh	r0, [r5, #0x22]
	add		r0, r6, #0x0
	add		r0, #0xc
	add		r2, r4, #0x0
	bl		sub_080b5e54
	mov		r1, #0x22
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x0
	bne		_0808d478
	add		r0, r4, #0x0
	bl		sub_080b5dc4
	add		r4, r6, #0x0
	add		r4, #0x18
	add		r0, r5, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
_0808d478:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D47E, 0x2
	thumb_func_end sub_0808d428

	thumb_func_start sub_0808d480
sub_0808d480:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r8, r0
	mov		r10, r1
	str		r2, [sp, #0x0]
_0808d492:
	mov		r6, #0x0
	mov		r5, #0x0
	mov		r9, r5
	mov		r4, #0x0
	mov		r0, r8
	ldr		r3, [r0, #0x4]
	add		r1, r3, #0x0
	cmp		r3, #0x0
	beq		_0808d4ca
_0808d4a4:
	mov		r7, #0x22
	ldrsh	r2, [r1, r7]
	cmp		r4, r2
	bge		_0808d4b0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
_0808d4b0:
	ldr		r0, [r1, #0x14]
	cmp		r0, #0x0
	beq		_0808d4c4
	mov		r7, #0x12
	ldrsh	r0, [r0, r7]
	add		r2, r2, r0
	cmp		r9, r2
	bge		_0808d4c4
	add		r6, r1, #0x0
	mov		r9, r2
_0808d4c4:
	ldr		r1, [r1, #0x8]
	cmp		r1, #0x0
	bne		_0808d4a4
_0808d4ca:
	mov		r0, r10
	sub		r4, r4, r0
	cmp		r4, #0x0
	blt		_0808d4e2
	ldr		r1, [sp, #0x0]
	cmp		r1, #0x0
	beq		_0808d53a
	mov		r0, r8
	add		r1, r5, #0x0
	mov		r2, r10
	ldr		r3, [sp, #0x0]
	b		_0808d536
_0808d4e2:
	cmp		r6, #0x0
	bne		_0808d4ea
	mov		r0, #0x0
	b		_0808d59c
_0808d4ea:
	ldr		r4, [r6, #0x14]
	add		r5, r3, #0x0
	cmp		r5, #0x0
	beq		_0808d544
_0808d4f2:
	cmp		r5, r6
	beq		_0808d53e
	mov		r2, #0x22
	ldrsh	r1, [r5, r2]
	mov		r3, #0x12
	ldrsh	r0, [r4, r3]
	cmp		r1, r0
	blt		_0808d53e
	ldrh	r0, [r4, #0x10]
	strh	r0, [r6, #0x20]
	ldrh	r0, [r4, #0x12]
	ldrh	r7, [r6, #0x22]
	add		r0, r0, r7
	strh	r0, [r6, #0x22]
	add		r0, r4, #0x0
	bl		sub_080b5dc4
	mov		r0, #0x12
	ldrsh	r2, [r4, r0]
	mov		r0, r8
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_0808d428
	mov		r1, r9
	mov		r2, r10
	sub		r1, r1, r2
	cmp		r1, #0x0
	blt		_0808d492
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x0
	beq		_0808d53a
	mov		r0, r8
	add		r1, r6, #0x0
_0808d536:
	bl		sub_0808d428
_0808d53a:
	ldr		r0, [sp, #0x0]
	b		_0808d59c
_0808d53e:
	ldr		r5, [r5, #0x8]
	cmp		r5, #0x0
	bne		_0808d4f2
_0808d544:
	ldr		r5, [r6, #0x4]
	mov		r7, #0x10
	add		r7, r7, r6
	mov		r9, r7
	mov		r4, r9
	cmp		r6, #0x0
	bne		_0808d554
	mov		r4, #0x0
_0808d554:
	ldr		r2, [r5, #0x18]
	cmp		r2, r4
	beq		_0808d570
_0808d55a:
	add		r1, r5, #0x0
	add		r1, #0x10
	ldrh	r0, [r1, #0x10]
	strh	r0, [r2, #0x10]
	ldrh	r0, [r2, #0x12]
	ldrh	r3, [r1, #0x10]
	add		r0, r0, r3
	strh	r0, [r1, #0x10]
	ldr		r2, [r2, #0x8]
	cmp		r2, r4
	bne		_0808d55a
_0808d570:
	add		r0, r5, #0x0
	add		r0, #0x10
	ldrh	r1, [r0, #0x10]
	mov		r7, r9
	strh	r1, [r7, #0x10]
	ldrh	r1, [r5, #0x22]
	ldrh	r2, [r6, #0x22]
	add		r1, r1, r2
	strh	r1, [r6, #0x22]
	bl		sub_080b5dc4
	mov		r4, r8
	add		r4, #0x18
	add		r0, r5, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	b		_0808d492
_0808d59c:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808d480

	thumb_func_start sub_0808d5ac
sub_0808d5ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r1
	ldr		r0, [r7, #0x18]
	cmp		r0, #0x0
	bne		_0808d5ca
	ldr		r1, [r7, #0x28]
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	add		r0, r7, r0
	ldr		r1, [r1, #0xc]
	bl		sub_080bbc74
_0808d5ca:
	ldr		r0, [r7, #0x1c]
	bl		sub_080b5dc4
	add		r6, r0, #0x0
	ldr		r5, [r7, #0x4]
	b		_0808d5d8
_0808d5d6:
	ldr		r5, [r5, #0x8]
_0808d5d8:
	cmp		r5, #0x0
	bne		_0808d5e8
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	b		_0808d600
_0808d5e8:
	mov		r3, #0x20
	ldrsh	r1, [r5, r3]
	mov		r2, r8
	mov		r3, #0x10
	ldrsh	r0, [r2, r3]
	cmp		r1, r0
	ble		_0808d5d6
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_080b5e54
_0808d600:
	mov		r1, r8
	ldrh	r0, [r1, #0x12]
	ldrh	r2, [r7, #0x24]
	add		r0, r0, r2
	strh	r0, [r7, #0x24]
	add		r4, r6, #0x0
	add		r4, #0x10
	ldrh	r0, [r1, #0x10]
	strh	r0, [r4, #0x10]
	ldrh	r0, [r1, #0x12]
	strh	r0, [r6, #0x22]
	add		r0, r7, #0x0
	add		r0, #0xc
	add		r1, r4, #0x0
	mov		r2, r8
	bl		sub_080b5e54
	mov		r0, r8
	bl		sub_080b5dc4
	ldr		r5, [r6, #0x4]
	cmp		r5, #0x0
	beq		_0808d65e
	add		r1, r5, #0x0
	add		r1, #0x10
	ldr		r0, [r6, #0x14]
	cmp		r1, r0
	bne		_0808d65e
	ldrh	r0, [r1, #0x10]
	strh	r0, [r4, #0x10]
	ldrh	r0, [r5, #0x22]
	ldrh	r3, [r6, #0x22]
	add		r0, r0, r3
	strh	r0, [r6, #0x22]
	add		r0, r1, #0x0
	bl		sub_080b5dc4
	add		r4, r7, #0x0
	add		r4, #0x18
	add		r0, r5, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
_0808d65e:
	ldr		r5, [r6, #0x8]
	cmp		r5, #0x0
	beq		_0808d690
	add		r1, r5, #0x0
	add		r1, #0x10
	ldr		r0, [r6, #0x18]
	cmp		r1, r0
	bne		_0808d690
	ldrh	r0, [r5, #0x22]
	ldrh	r2, [r6, #0x22]
	add		r0, r0, r2
	strh	r0, [r6, #0x22]
	add		r0, r1, #0x0
	bl		sub_080b5dc4
	add		r4, r7, #0x0
	add		r4, #0x18
	add		r0, r5, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
_0808d690:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D69A, 0xE
	thumb_func_end sub_0808d5ac

	thumb_func_start sub_0808d6a8
sub_0808d6a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x140
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	mov		r9, r3
	mov		r4, sp
	mov		r5, #0xf
_0808d6be:
	add		r0, r4, #0x0
	bl		sub_080c3c88
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	str		r0, [r4, #0x0]
	add		r4, #0x14
	sub		r5, #0x1
	sub		r0, #0x1
	cmp		r5, r0
	bne		_0808d6be
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	mov		r2, r8
	bl		sub_0808d37c
	ldr		r0, [sp, #0x0+0x15c]
	cmp		r0, #0x0
	ble		_0808d71e
	mov		r4, r9
	mov		r5, sp
	add		r6, r0, #0x0
_0808d6ec:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	ble		_0808d700
	add		r1, r0, #0x0
	add		r0, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_0808d480
	b		_0808d714
_0808d700:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl		r1, r0, #0x2
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r0, sp
	sub		r1, r0, r1
	add		r0, r7, #0x0
	bl		sub_0808d5ac
_0808d714:
	add		r4, #0x2
	add		r5, #0x14
	sub		r6, #0x1
	cmp		r6, #0x0
	bne		_0808d6ec
_0808d71e:
	add		sp, #0x140
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808d6a8

	thumb_func_start sub_0808d72c
sub_0808d72c:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r3, _0808d778
	mov		r0, #0x6
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x19
	bl		sub_0808d6a8
	ldr		r3, _0808d77c
	mov		r4, #0x5
	str		r4, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x1e
	bl		sub_0808d6a8
	ldr		r3, _0808d780
	str		r4, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x19
	bl		sub_0808d6a8
	ldr		r3, _0808d784
	str		r4, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x1e
	bl		sub_0808d6a8
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D776, 0x2

_0808d778:	.4byte 0x080de91c
_0808d77c:	.4byte 0x080de928
_0808d780:	.4byte 0x080de932
_0808d784:	.4byte 0x080de93c
	thumb_func_end sub_0808d72c

	thumb_func_start sub_0808d788
sub_0808d788:
	push	{ lr }
	sub		sp, #0x4
	ldr		r3, _0808d7a0
	mov		r1, #0x6
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0xf
	bl		sub_0808d6a8
	add		sp, #0x4
	pop		{ r0 }
	bx		r0

_0808d7a0:	.4byte 0x080de946
	thumb_func_end sub_0808d788

	thumb_func_start sub_0808d7a4
sub_0808d7a4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0808d7ba
	ldr		r0, _0808d7c4
	mov		r1, #0xb1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808d7ba:
	mov		r0, #0xda
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	b		_0808d7d6

.incbin "base.gba", 0x8D7C2, 0x2

_0808d7c4:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp

_0808d7c8:
	add		r1, r4, #0x0
	add		r4, #0x24
	add		r0, r5, #0x0
	add		r0, #0x18
	mov		r2, #0x0
	bl		sub_080b5dfc
_0808d7d6:
	mov		r1, #0xfd
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	cmp		r4, r0
	bcc		_0808d7c8
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D7E6, 0x76
	thumb_func_end sub_0808d7a4

	thumb_func_start sub_0808d85c
sub_0808d85c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	mov		r1, #0x0
	bl		sub_0808d37c
	mov		r0, #0x0
	strh	r0, [r4, #0x2e]
	strh	r0, [r4, #0x2c]
	strh	r0, [r4, #0x30]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808d85c

	thumb_func_start sub_0808d878
sub_0808d878:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	b		_0808d898
_0808d87e:
	add		r0, r4, #0x0
	add		r0, #0x10
	bl		sub_080b5dc4
	add		r0, r4, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	add		r0, #0x18
	mov		r2, #0x0
	bl		sub_080b5dfc
_0808d898:
	ldr		r4, [r5, #0x4]
	cmp		r4, #0x0
	bne		_0808d87e
	b		_0808d8a4
_0808d8a0:
	bl		sub_080b5dc4
_0808d8a4:
	ldr		r0, [r5, #0x10]
	cmp		r0, #0x0
	bne		_0808d8a0
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808d878

	thumb_func_start sub_0808d8b0
sub_0808d8b0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldrh	r0, [r4, #0x30]
	add		r1, r0, #0x1
	strh	r1, [r4, #0x30]
	lsl		r0, r0, #0x10
	asr		r5, r0, #0x10
	cmp		r5, #0x5f
	ble		_0808d8d0
	ldr		r0, _0808d8e0
	mov		r1, #0xdb
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808d8d0:
	lsl		r0, r5, #0x2
	add		r0, #0x34
	add		r0, r4, r0
	str		r6, [r0, #0x0]
	str		r0, [r6, #0xc]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0808d8e0:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
	thumb_func_end sub_0808d8b0

	thumb_func_start sub_0808d8e4
sub_0808d8e4:
	push	{ r4, lr }
	add		r4, r1, #0x0
	ldr		r3, [r4, #0xc]
	cmp		r3, #0x0
	beq		_0808d904
	ldrh	r1, [r0, #0x30]
	sub		r1, #0x1
	mov		r2, #0x0
	strh	r1, [r0, #0x30]
	lsl		r1, r1, #0x10
	asr		r1, r1, #0xe
	add		r0, #0x34
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x0]
	str		r2, [r4, #0xc]
_0808d904:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D90A, 0x2
	thumb_func_end sub_0808d8e4

	thumb_func_start sub_0808d90c
sub_0808d90c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	ldr		r0, _0808d93c
	str		r0, [sp, #0x4]
	str		r0, [sp, #0x8]
	mov		r0, #0x30
	ldrsh	r5, [r7, r0]
	cmp		r5, #0x0
	ble		_0808d9a8
	mov		r0, #0x34
	add		r0, r0, r7
	mov		r8, r0
	ldr		r3, _0808d940
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, r8
	mov		r1, #0x0
	add		r2, r5, #0x0
	bl		sub_080b65dc
	b		_0808d99e

_0808d93c:	.4byte 0x03000400
_0808d940:	.4byte sub_0808d9f0

_0808d944:
	mov		r0, r8
	add		r0, #0x4
	mov		r8, r0
	sub		r0, #0x4
	ldmia	r0!, { r6 }
	ldr		r4, [r6, #0x0]
	cmp		r4, #0x0
	bne		_0808d960
	ldr		r0, _0808d9bc
	mov		r1, #0xf3
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808d960:
	mov		r0, #0x1a
	ldrsh	r1, [r4, r0]
	ldr		r0, _0808d9c0
	bl		sub_08008c04
	mov		r0, #0x1c
	ldrsh	r1, [r4, r0]
	ldr		r0, _0808d9c4
	bl		sub_08008cf4
	mov		r0, #0x1e
	ldrsh	r1, [r4, r0]
	ldr		r0, _0808d9c8
	bl		sub_08008df4
	mov		r0, #0x0
	str		r0, [r6, #0xc]
	ldrh	r1, [r6, #0x14]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808d992
	add		r0, r6, #0x0
	bl		sub_0808df88
_0808d992:
	ldr		r1, [r6, #0x8]
	add		r0, r6, #0x0
	add		r2, sp, #0x4
	add		r3, sp, #0x8
	bl		sub_0808da80
_0808d99e:
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0808d944
	mov		r0, #0x0
	strh	r0, [r7, #0x30]
_0808d9a8:
	ldr		r0, [sp, #0x4]
	bl		sub_0808d9cc
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D9BA, 0x2

_0808d9bc:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808d9c0:	.4byte 0x020092EC
_0808d9c4:	.4byte 0x02009984
_0808d9c8:	.4byte 0x02009E1C
	thumb_func_end sub_0808d90c

	thumb_func_start sub_0808d9cc
sub_0808d9cc:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0808d9e8
	ldr		r0, [r0, #0x0]
	ldr		r2, _0808d9ec
	cmp		r1, r2
	bcs		_0808d9e2
_0808d9da:
	str		r0, [r1, #0x0]
	add		r1, #0x8
	cmp		r1, r2
	bcc		_0808d9da
_0808d9e2:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8D9E6, 0x2

_0808d9e8:	.4byte 0x080c7184
_0808d9ec:	.4byte 0x03000800
	thumb_func_end sub_0808d9cc

	thumb_func_start sub_0808d9f0
sub_0808d9f0:
	push	{ r4, lr }
	add		r3, r1, #0x0
	mov		r12, r2
	add		r0, r3, #0x0
	add		r0, #0x5c
	mov		r1, r12
	add		r1, #0x5c
	mov		r4, #0x0
	ldrsh	r2, [r0, r4]
	mov		r0, #0x0
	ldrsh	r1, [r1, r0]
	cmp		r2, r1
	beq		_0808da14
	mov		r0, #0x0
	cmp		r2, r1
	ble		_0808da42
	mov		r0, #0x1
	b		_0808da42
_0808da14:
	add		r0, r3, #0x0
	add		r0, #0x56
	mov		r1, r12
	add		r1, #0x56
	mov		r4, #0x0
	ldrsh	r2, [r0, r4]
	mov		r0, #0x0
	ldrsh	r1, [r1, r0]
	cmp		r2, r1
	beq		_0808da32
	mov		r0, #0x0
	cmp		r2, r1
	bgt		_0808da42
	mov		r0, #0x1
	b		_0808da42
_0808da32:
	mov		r2, #0x0
	ldr		r1, [r3, #0xc]
	mov		r3, r12
	ldr		r0, [r3, #0xc]
	cmp		r1, r0
	bls		_0808da40
	mov		r2, #0x1
_0808da40:
	add		r0, r2, #0x0
_0808da42:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808d9f0

	thumb_func_start sub_0808da48
sub_0808da48:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r6, [r5, #0x14]
	ldr		r0, [r5, #0x1c]
	ldrb	r4, [r0, #0x3]
	b		_0808da74
_0808da54:
	ldr		r2, [r5, #0x20]
	ldrh	r0, [r2, #0x0]
	lsl		r0, r0, #0x5
	ldr		r1, [r5, #0x18]
	add		r1, r1, r0
	ldrh	r2, [r2, #0x2]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0808c844
	ldr		r1, [r5, #0x20]
	ldrh	r0, [r1, #0x2]
	lsl		r0, r0, #0x5
	add		r6, r6, r0
	add		r1, #0x4
	str		r1, [r5, #0x20]
_0808da74:
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0808da54
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808da48

	thumb_func_start sub_0808da80
sub_0808da80:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x40
	mov		r9, r0
	str		r1, [sp, #0x10]
	str		r2, [sp, #0x14]
	str		r3, [sp, #0x18]
	add		r0, #0x64
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808dafe
	mov		r0, r9
	add		r0, #0x62
	mov		r1, #0x0
	ldrsh	r7, [r0, r1]
	sub		r0, #0x4
	mov		r2, #0x0
	ldrsh	r4, [r0, r2]
	lsl		r4, r4, #0x8
	add		r0, #0x2
	mov		r3, #0x0
	ldrsh	r5, [r0, r3]
	lsl		r5, r5, #0x8
	add		r0, r7, #0x0
	bl		sub_0808c3ac
	add		r7, r0, #0x0
	bl		sub_0808c410
	add		r6, r0, #0x0
	add		r0, r7, #0x0
	bl		sub_0808c46c
	mov		r8, r0
	add		r1, r4, #0x0
	mov		r2, #0x1e
	bl		sub_0808c118
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x1e
	bl		sub_0808c118
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x1e
	bl		sub_0808c118
	neg		r0, r0
	str		r0, [sp, #0x8]
	mov		r0, r8
	add		r1, r5, #0x0
	mov		r2, #0x1e
	bl		sub_0808c118
	str		r0, [sp, #0xC]
_0808dafe:
	ldr		r2, [sp, #0x10]
	add		r2, #0x4
	ldr		r4, [sp, #0x10]
	ldrb	r1, [r4, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r0, #0x4
	add		r0, r4, r0
	str		r0, [sp, #0x1C]
	ldr		r6, [sp, #0x14]
	ldr		r6, [r6, #0x0]
	mov		r10, r6
	ldr		r0, _0808db2c
	cmp		r10, r0
	bcc		_0808db20
	b		_0808de1e
_0808db20:
	mov		r7, #0x1
	neg		r7, r7
	str		r7, [sp, #0x20]
	str		r1, [sp, #0x24]
	b		_0808ddf6

.incbin "base.gba", 0x8DB2A, 0x2

_0808db2c:	.4byte 0x03000800

_0808db30:
	mov		r5, r10
	ldrh	r0, [r2, #0x0]
	strh	r0, [r5, #0x0]
	ldrh	r1, [r2, #0x2]
	strh	r1, [r5, #0x2]
	ldrh	r0, [r2, #0x4]
	strh	r0, [r5, #0x4]
	mov		r7, #0x0
	ldrsb	r7, [r5, r7]
	lsl		r1, r1, #0x17
	asr		r6, r1, #0x17
	ldrb	r0, [r5, #0x1]
	lsl		r0, r0, #0x1e
	lsr		r1, r0, #0x1e
	mov		r0, r9
	add		r0, #0x64
	str		r0, [sp, #0x2C]
	mov		r3, #0x0
	ldrsb	r3, [r0, r3]
	orr		r3, r1
	str		r3, [sp, #0x28]
	mov		r4, #0x1
	mov		r8, r4
	add		r0, r3, #0x0
	and		r0, r4
	ldrb	r4, [r5, #0x3]
	mov		r3, r9
	add		r3, #0x68
	str		r3, [sp, #0x3C]
	mov		r3, #0x67
	add		r3, r9
	mov		r12, r3
	mov		r3, r9
	add		r3, #0x56
	str		r3, [sp, #0x30]
	sub		r3, #0x2
	str		r3, [sp, #0x34]
	add		r2, #0x6
	str		r2, [sp, #0x38]
	cmp		r0, #0x0
	beq		_0808dc44
	mov		r0, r8
	and		r1, r0
	cmp		r1, #0x0
	beq		_0808dba6
	lsl		r1, r4, #0x1a
	lsr		r1, r1, #0x1b
	lsl		r1, r1, #0x2
	ldr		r3, [sp, #0x3C]
	ldrb	r2, [r3, #0x0]
	and		r0, r2
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	mov		r4, r12
	ldrb	r2, [r4, #0x0]
	mov		r0, r8
	and		r0, r2
	add		r4, r1, r0
	b		_0808dbd2
_0808dba6:
	ldr		r0, [sp, #0x10]
	ldrb	r2, [r0, #0x1]
	lsl		r2, r2, #0x2
	lsl		r0, r4, #0x1a
	lsr		r0, r0, #0x1f
	ldr		r3, [sp, #0x3C]
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	eor		r0, r1
	mov		r1, r8
	and		r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	lsl		r0, r4, #0x1b
	lsr		r0, r0, #0x1f
	mov		r3, r12
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	eor		r0, r1
	mov		r4, r8
	and		r0, r4
	add		r4, r2, r0
_0808dbd2:
	ldr		r0, [sp, #0x20]
	asr		r0, r4
	mov		r1, #0x1
	mov		r8, r1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808dbfc
	mov		r0, r8
	lsl		r0, r4
	ldr		r2, [sp, #0x20]
	eor		r2, r0
	str		r2, [sp, #0x20]
	ldr		r3, [sp, #0x18]
	ldr		r2, [r3, #0x0]
	mov		r0, r9
	ldr		r1, [sp, #0x10]
	add		r3, r4, #0x0
	bl		sub_0808de44
	ldr		r1, [sp, #0x18]
	str		r0, [r1, #0x0]
_0808dbfc:
	ldr		r0, _0808dc40
	add		r0, r4, r0
	mov		r2, #0x1f
	ldrb	r1, [r0, #0x0]
	and		r1, r2
	lsl		r1, r1, #0x1
	ldrb	r0, [r5, #0x3]
	mov		r3, #0x3f
	neg		r3, r3
	add		r2, r3, #0x0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r5, #0x3]
	ldr		r4, [sp, #0x2C]
	ldrb	r1, [r4, #0x0]
	mov		r0, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808dc82
	add		r2, r7, #0x0
	ldr		r0, [sp, #0x4]
	mul		r0, r6
	ldr		r1, [sp, #0xC]
	mul		r1, r2
	add		r0, r0, r1
	asr		r7, r0, #0x10
	ldr		r0, [sp, #0x0]
	mul		r0, r6
	ldr		r1, [sp, #0x8]
	mul		r1, r2
	add		r0, r0, r1
	asr		r6, r0, #0x10
	b		_0808dc82

.incbin "base.gba", 0x8DC3E, 0x2

_0808dc40:	.4byte 0x0200EAFC

_0808dc44:
	lsl		r0, r4, #0x1a
	lsr		r0, r0, #0x1f
	ldr		r2, [sp, #0x3C]
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	eor		r0, r1
	mov		r3, #0x1
	and		r0, r3
	lsl		r0, r0, #0x5
	mov		r2, #0x21
	neg		r2, r2
	add		r1, r2, #0x0
	and		r1, r4
	orr		r1, r0
	mov		r4, r10
	strb	r1, [r4, #0x3]
	lsl		r0, r1, #0x1b
	lsr		r0, r0, #0x1f
	mov		r4, r12
	mov		r2, #0x0
	ldrsb	r2, [r4, r2]
	eor		r0, r2
	and		r0, r3
	lsl		r0, r0, #0x4
	mov		r3, #0x11
	neg		r3, r3
	add		r2, r3, #0x0
	and		r1, r2
	orr		r1, r0
	mov		r4, r10
	strb	r1, [r4, #0x3]
_0808dc82:
	mov		r0, r9
	add		r0, #0x68
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	mov		r8, r0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808dc94
	neg		r7, r7
_0808dc94:
	mov		r0, r9
	add		r0, #0x67
	ldrb	r1, [r0, #0x0]
	mov		r0, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808dca4
	neg		r6, r6
_0808dca4:
	ldrb	r4, [r5, #0x1]
	lsr		r2, r4, #0x6
	lsl		r2, r2, #0x3
	ldrb	r0, [r5, #0x3]
	lsr		r0, r0, #0x6
	lsl		r0, r0, #0x1
	ldr		r1, _0808dd80
	add		r0, r0, r1
	add		r2, r2, r0
	ldrb	r0, [r2, #0x1]
	lsr		r3, r0, #0x1
	ldrb	r0, [r2, #0x0]
	lsr		r2, r0, #0x1
	sub		r7, r7, r3
	mov		r12, r7
	ldr		r1, [sp, #0x30]
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	mov		r1, r12
	add		r7, r1, r0
	sub		r6, r6, r2
	mov		r12, r6
	ldr		r6, [sp, #0x34]
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	mov		r1, r12
	add		r6, r1, r0
	add		r0, r7, #0x0
	add		r0, #0x5f
	cmp		r0, #0xfe
	bls		_0808dce4
	b		_0808ddf4
_0808dce4:
	add		r1, r6, #0x0
	add		r1, #0x7f
	mov		r0, #0xb7
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bls		_0808dcf2
	b		_0808ddf4
_0808dcf2:
	mov		r0, #0x2
	mov		r12, r0
	ldr		r0, [sp, #0x28]
	mov		r1, r12
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808dd04
	sub		r7, r7, r3
	sub		r6, r6, r2
_0808dd04:
	mov		r2, #0x3
	ldr		r3, [sp, #0x28]
	and		r3, r2
	mov		r1, #0x4
	neg		r1, r1
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	and		r1, r0
	orr		r1, r3
	strb	r1, [r5, #0x1]
	mov		r0, r9
	add		r0, #0x65
	ldrb	r0, [r0, #0x0]
	and		r0, r2
	lsl		r0, r0, #0x2
	mov		r3, #0xd
	neg		r3, r3
	add		r2, r3, #0x0
	and		r1, r2
	orr		r1, r0
	strb	r1, [r5, #0x1]
	lsl		r0, r1, #0x1b
	lsr		r0, r0, #0x1f
	mov		r2, r9
	add		r2, #0x66
	ldrb	r2, [r2, #0x0]
	lsl		r2, r2, #0x18
	asr		r2, r2, #0x18
	eor		r0, r2
	mov		r4, #0x1
	and		r0, r4
	lsl		r0, r0, #0x4
	sub		r3, #0x4
	add		r2, r3, #0x0
	and		r1, r2
	orr		r1, r0
	strb	r1, [r5, #0x1]
	strb	r7, [r5, #0x0]
	ldr		r4, _0808dd84
	add		r0, r4, #0x0
	and		r6, r0
	ldrh	r0, [r5, #0x2]
	ldr		r7, _0808dd88
	add		r1, r7, #0x0
	and		r0, r1
	orr		r0, r6
	strh	r0, [r5, #0x2]
	ldrh	r3, [r5, #0x4]
	lsl		r0, r3, #0x16
	lsr		r2, r0, #0x16
	mov		r0, r9
	ldrh	r1, [r0, #0x14]
	mov		r0, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808dd8c
	lsl		r0, r2, #0x2
	ldr		r1, [sp, #0x1C]
	add		r0, r0, r1
	ldrh	r2, [r0, #0x0]
	b		_0808dd9c

.incbin "base.gba", 0x8DD7E, 0x2

_0808dd80:	.4byte 0x080dcc8c
_0808dd84:	.4byte 0x000001FF
_0808dd88:	.4byte 0xFFFFFE00

_0808dd8c:
	mov		r0, r12
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808dd9c
	lsl		r0, r2, #0x2
	ldr		r2, [sp, #0x1C]
	add		r0, r0, r2
	ldrh	r2, [r0, #0x2]
_0808dd9c:
	mov		r4, r9
	ldr		r0, [r4, #0x10]
	ldrh	r1, [r0, #0x0]
	add		r1, r1, r2
	ldr		r6, _0808de30
	add		r0, r6, #0x0
	and		r1, r0
	ldr		r7, _0808de34
	add		r0, r7, #0x0
	and		r0, r3
	orr		r0, r1
	strh	r0, [r5, #0x4]
	ldrb	r2, [r5, #0x5]
	lsl		r0, r2, #0x1c
	lsr		r0, r0, #0x1e
	mov		r1, r9
	add		r1, #0x69
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	add		r0, r0, r1
	mov		r1, #0x3
	and		r0, r1
	lsl		r0, r0, #0x2
	mov		r3, #0xd
	neg		r3, r3
	add		r1, r3, #0x0
	and		r2, r1
	orr		r2, r0
	strb	r2, [r5, #0x5]
	lsr		r1, r2, #0x4
	mov		r0, r9
	add		r0, #0x6a
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r1, r1, r0
	lsl		r1, r1, #0x4
	mov		r0, #0xf
	and		r2, r0
	orr		r2, r1
	strb	r2, [r5, #0x5]
	mov		r4, #0x8
	add		r10, r4
_0808ddf4:
	ldr		r2, [sp, #0x38]
_0808ddf6:
	ldr		r6, [sp, #0x24]
	sub		r6, #0x1
	str		r6, [sp, #0x24]
	cmp		r6, #0x0
	blt		_0808de18
	ldr		r0, _0808de38
	cmp		r10, r0
	bcs		_0808de08
	b		_0808db30
_0808de08:
	ldr		r0, _0808de3c
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r0, #0x0
	bne		_0808de18
	ldr		r0, _0808de40
	bl		sub_0808c670
_0808de18:
	mov		r0, r10
	ldr		r1, [sp, #0x14]
	str		r0, [r1, #0x0]
_0808de1e:
	add		sp, #0x40
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8DE2E, 0x2

_0808de30:	.4byte 0x000003FF
_0808de34:	.4byte 0xFFFFFC00
_0808de38:	.4byte 0x03000800
_0808de3c:	.4byte 0x0200CDBC
_0808de40:	.4byte 0x080de984 @ NOTICE_OAM_OVER
	thumb_func_end sub_0808da80

	thumb_func_start sub_0808de44
sub_0808de44:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	mov		r10, r1
	add		r6, r2, #0x0
	mov		r9, r3
	ldr		r5, _0808ded0
	cmp		r6, r5
	bcc		_0808de6a
	ldr		r0, _0808ded4
	mov		r1, #0xbb
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808de6a:
	ldr		r0, _0808ded8
	mov		r2, r9
	add		r1, r2, r0
	ldr		r2, _0808dedc
	add		r0, r5, r2
	sub		r0, r6, r0
	asr		r0, r0, #0x3
	cmp		r0, #0x0
	bge		_0808de7e
	add		r0, #0x3
_0808de7e:
	asr		r0, r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r5, #0x0
	mov		r7, #0x80
	lsl		r7, r7, #0x1
	mov		r8, r7
	add		r0, r4, #0x0
	add		r0, #0x64
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808deae
	add		r0, r4, #0x0
	add		r0, #0x62
	mov		r1, #0x0
	ldrsh	r5, [r0, r1]
	sub		r0, #0x4
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r8, r2
	add		r0, #0x2
	mov		r2, #0x0
	ldrsh	r7, [r0, r2]
_0808deae:
	mov		r1, r9
	cmp		r1, #0x0
	bge		_0808deb6
	add		r1, #0x3
_0808deb6:
	asr		r4, r1, #0x2
	mov		r0, r10
	ldrb	r0, [r0, #0x1]
	cmp		r4, r0
	bge		_0808dee0
	mov		r0, r10
	bl		sub_0808c094
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	lsl		r1, r1, #0x1
	add		r1, r0, r1
	b		_0808dee2

_0808ded0:	.4byte 0x03000800
_0808ded4:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808ded8:	.4byte 0x0200EAFC
_0808dedc:	.4byte 0xFFFFFC00

_0808dee0:
	ldr		r1, _0808df84
_0808dee2:
	ldrh	r0, [r1, #0x4]
	add		r5, r5, r0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	mov		r2, r8
	mul		r2, r0
	mov		r8, r2
	mov		r2, #0x2
	ldrsh	r0, [r1, r2]
	mul		r7, r0
	add		r0, r5, #0x0
	bl		sub_0808c3ac
	add		r5, r0, #0x0
	bl		sub_0808c410
	mov		r10, r0
	add		r0, r5, #0x0
	bl		sub_0808c46c
	add		r5, r0, #0x0
	mov		r4, #0x80
	lsl		r4, r4, #0x11
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0808c344
	mov		r8, r0
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_0808c344
	add		r7, r0, #0x0
	mov		r0, #0x1
	mov		r1, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808df34
	mov		r2, r8
	neg		r2, r2
	mov		r8, r2
_0808df34:
	mov		r0, #0x2
	mov		r1, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808df40
	neg		r7, r7
_0808df40:
	add		r0, r5, #0x0
	mov		r1, r8
	mov		r2, #0x1e
	bl		sub_0808c118
	strh	r0, [r6, #0x6]
	mov		r0, r10
	add		r1, r7, #0x0
	mov		r2, #0x1e
	bl		sub_0808c118
	strh	r0, [r6, #0xe]
	mov		r0, r10
	mov		r1, r8
	mov		r2, #0x1e
	bl		sub_0808c118
	neg		r0, r0
	strh	r0, [r6, #0x16]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	mov		r2, #0x1e
	bl		sub_0808c118
	strh	r0, [r6, #0x1e]
	add		r0, r6, #0x0
	add		r0, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0808df84:	.4byte 0x080de996
	thumb_func_end sub_0808de44

	thumb_func_start sub_0808df88
sub_0808df88:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r2, r5, #0x0
	add		r2, #0x1c
	ldr		r0, [r5, #0x1c]
	cmp		r0, #0x0
	bne		_0808dfb0
	ldr		r0, _0808e00c
	ldr		r1, [r5, #0x4]
	ldrb	r1, [r1, #0x8]
	bl		sub_0808d480
	cmp		r0, #0x0
	bne		_0808dfb0
	ldr		r0, _0808e010
	ldr		r1, _0808e014
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808dfb0:
	add		r0, r5, #0x0
	add		r0, #0x5a
	mov		r1, #0x0
	ldrsh	r7, [r0, r1]
	ldr		r0, [r5, #0x10]
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r6, r0, #0x10
	mov		r2, #0x16
	ldrsh	r0, [r5, r2]
	cmp		r0, r7
	bne		_0808dfd0
	mov		r1, #0x18
	ldrsh	r0, [r5, r1]
	cmp		r0, r6
	beq		_0808e006
_0808dfd0:
	add		r4, r5, #0x0
	add		r4, #0x30
	ldr		r0, _0808e018
	lsl		r1, r6, #0x5
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	str		r0, [r5, #0x44]
	ldr		r0, _0808e01c
	ldr		r1, [r5, #0x0]
	mov		r2, #0x1c
	ldrsh	r1, [r1, r2]
	bl		sub_08008cf4
	ldr		r0, [r0, #0x24]
	str		r0, [r5, #0x48]
	ldr		r0, [r5, #0x8]
	str		r0, [r5, #0x4c]
	bl		sub_0808c07c
	str		r0, [r5, #0x50]
	add		r0, r4, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	bl		sub_08000644
	strh	r7, [r5, #0x16]
	strh	r6, [r5, #0x18]
_0808e006:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0808e00c:	.4byte 0x0200BF14
_0808e010:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808e014:	.4byte 0x0000018F
_0808e018:	.4byte 0x0200CE6C
_0808e01c:	.4byte 0x02009984
	thumb_func_end sub_0808df88

	thumb_func_start sub_0808e020
sub_0808e020:
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	str		r1, [r0, #0x4]
	str		r1, [r0, #0xc]
	str		r1, [r0, #0x10]
	ldr		r1, _0808e038
	strh	r1, [r0, #0x18]
	mov		r1, #0x1
	neg		r1, r1
	strh	r1, [r0, #0x16]
	bx		lr

.incbin "base.gba", 0x8E036, 0x2

_0808e038:	.4byte 0x0000FFFF
	thumb_func_end sub_0808e020

	thumb_func_start sub_0808e03c
sub_0808e03c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	bl		sub_0808af4c
	cmp		r0, #0x0
	beq		_0808e056
	ldr		r0, [r4, #0xc]
	cmp		r0, #0x0
	bne		_0808e056
	ldr		r0, [r4, #0x1c]
	cmp		r0, #0x0
	beq		_0808e062
_0808e056:
	ldr		r0, _0808e0b4
	ldr		r1, _0808e0b8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808e062:
	ldr		r0, _0808e0bc
	add		r1, r4, #0x0
	add		r1, #0x58
	strh	r6, [r1, #0x0]
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	bl		sub_08008b30
	str		r0, [r4, #0x0]
	ldr		r2, _0808e0c0
	mov		r3, #0x1c
	ldrsh	r1, [r0, r3]
	add		r0, r2, #0x0
	bl		sub_08008cf4
	ldr		r0, _0808e0c4
	ldr		r1, [r4, #0x0]
	mov		r2, #0x1e
	ldrsh	r1, [r1, r2]
	bl		sub_08008df4
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r1, #0x18]
	strh	r0, [r4, #0x14]
	ldr		r0, _0808e0c8
	mov		r3, #0x1a
	ldrsh	r1, [r1, r3]
	bl		sub_08008c04
	ldr		r0, [r0, #0x1c]
	str		r0, [r4, #0x4]
	ldrh	r1, [r4, #0x14]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808e0cc
	ldr		r0, [r4, #0x0]
	add		r0, #0x22
	str		r0, [r4, #0x10]
	b		_0808e0e8

.incbin "base.gba", 0x8E0B2, 0x2

_0808e0b4:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808e0b8:	.4byte 0x000001A7
_0808e0bc:	.4byte 0x02008C54
_0808e0c0:	.4byte 0x02009984
_0808e0c4:	.4byte 0x02009E1C
_0808e0c8:	.4byte 0x020092EC

_0808e0cc:
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808e0dc
	add		r0, r4, #0x0
	add		r0, #0x2c
	str		r0, [r4, #0x10]
	b		_0808e0e8
_0808e0dc:
	ldr		r0, _0808e198
	ldr		r1, _0808e19c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808e0e8:
	ldr		r0, [r4, #0x0]
	ldrh	r0, [r0, #0x20]
	add		r5, r4, #0x0
	add		r5, #0x6a
	strb	r0, [r5, #0x0]
	ldrh	r1, [r4, #0x14]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808e122
	ldr		r0, [r4, #0x10]
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _0808e1a0
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	blt		_0808e122
	ldr		r0, _0808e1a4
	ldr		r1, [r4, #0x0]
	mov		r2, #0x1c
	ldrsh	r1, [r1, r2]
	mov		r3, #0x1
	neg		r3, r3
	add		r2, r6, #0x0
	bl		sub_08000268
_0808e122:
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	mov		r1, #0x80
	neg		r1, r1
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	cmp		r1, #0x0
	blt		_0808e146
	ldr		r0, _0808e1a8
	ldr		r1, [r4, #0x0]
	mov		r3, #0x1e
	ldrsh	r1, [r1, r3]
	mov		r3, #0x1
	neg		r3, r3
	add		r2, r6, #0x0
	bl		sub_08000268
_0808e146:
	add		r0, r4, #0x0
	add		r0, #0x5c
	mov		r3, #0x0
	mov		r2, #0x0
	strh	r2, [r0, #0x0]
	sub		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x54
	mov		r0, #0x78
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x50
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x60
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x4
	strh	r2, [r0, #0x0]
	add		r0, #0x6
	strb	r3, [r0, #0x0]
	sub		r0, #0x1
	strb	r3, [r0, #0x0]
	sub		r0, #0x1
	strb	r3, [r0, #0x0]
	sub		r0, #0x1
	strb	r3, [r0, #0x0]
	sub		r0, #0x1
	strb	r3, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x69
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8E196, 0x2

_0808e198:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808e19c:	.4byte 0x000001B3
_0808e1a0:	.4byte 0xFFFF8080
_0808e1a4:	.4byte 0x080de99c
_0808e1a8:	.4byte 0x080de9bc
	thumb_func_end sub_0808e03c

	thumb_func_start sub_0808e1ac
sub_0808e1ac:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808af4c
	cmp		r0, #0x0
	bne		_0808e1c4
	ldr		r0, _0808e20c
	ldr		r1, _0808e210
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808e1c4:
	ldr		r0, [r4, #0xc]
	cmp		r0, #0x0
	beq		_0808e1d2
	ldr		r0, _0808e214
	add		r1, r4, #0x0
	bl		sub_0808d8e4
_0808e1d2:
	ldrh	r1, [r4, #0x14]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808e206
	add		r1, r4, #0x0
	add		r1, #0x1c
	ldr		r0, [r4, #0x1c]
	cmp		r0, #0x0
	beq		_0808e1ec
	ldr		r0, _0808e214
	bl		sub_0808d5ac
_0808e1ec:
	add		r1, r4, #0x0
	add		r1, #0x30
	ldr		r0, [r4, #0x30]
	cmp		r0, #0x0
	beq		_0808e1fc
	add		r0, r1, #0x0
	bl		sub_080b5dc4
_0808e1fc:
	ldr		r0, _0808e218
	strh	r0, [r4, #0x18]
	mov		r0, #0x1
	neg		r0, r0
	strh	r0, [r4, #0x16]
_0808e206:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808e20c:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808e210:	.4byte 0x000001C3
_0808e214:	.4byte 0x0200BF14
_0808e218:	.4byte 0x0000FFFF
	thumb_func_end sub_0808e1ac

	thumb_func_start sub_0808e21c
sub_0808e21c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x1c
	bl		sub_080c3c88
	mov		r0, #0x0
	str		r0, [r4, #0x20]
	str		r0, [r4, #0x24]
	str		r0, [r4, #0x1c]
	add		r0, r4, #0x0
	add		r0, #0x30
	bl		sub_080c3c3c
	add		r0, r4, #0x0
	bl		sub_0808e020
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808e21c

	thumb_func_start sub_0808e244
sub_0808e244:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r0, #0x1c
	bl		sub_080c3c88
	mov		r0, #0x0
	str		r0, [r4, #0x20]
	str		r0, [r4, #0x24]
	str		r0, [r4, #0x1c]
	add		r0, r4, #0x0
	add		r0, #0x30
	bl		sub_080c3c3c
	add		r0, r4, #0x0
	bl		sub_0808e020
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0808e03c
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8E276, 0x2
	thumb_func_end sub_0808e244

	thumb_func_start sub_0808e278
sub_0808e278:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808e1ac
	add		r0, r4, #0x0
	bl		sub_0808e020
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808e278

	thumb_func_start sub_0808e28c
sub_0808e28c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_0808e1ac
	add		r0, r5, #0x0
	add		r0, #0x30
	mov		r1, #0x2
	bl		sub_080c3c54
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0808e2ae
	add		r0, r5, #0x0
	bl		sub_0808afac
_0808e2ae:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808e28c

	thumb_func_start sub_0808e2b4
sub_0808e2b4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808af4c
	cmp		r0, #0x0
	bne		_0808e2cc
	ldr		r0, _0808e2dc
	ldr		r1, _0808e2e0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808e2cc:
	ldr		r0, _0808e2e4
	add		r1, r4, #0x0
	bl		sub_0808d8e4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8E2DA, 0x2

_0808e2dc:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808e2e0:	.4byte 0x000001E3
_0808e2e4:	.4byte 0x0200BF14
	thumb_func_end sub_0808e2b4

	thumb_func_start sub_0808e2e8
sub_0808e2e8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0808af4c
	cmp		r0, #0x0
	beq		_0808e30a
	add		r1, r4, #0x0
	add		r1, #0x5a
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	blt		_0808e30a
	add		r1, r0, #0x0
	ldr		r0, [r4, #0x4]
	ldrb	r0, [r0, #0x6]
	cmp		r1, r0
	blt		_0808e316
_0808e30a:
	ldr		r0, _0808e340
	ldr		r1, _0808e344
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808e316:
	add		r0, r4, #0x0
	add		r0, #0x5a
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, [r4, #0x4]
	add		r0, #0xc
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	str		r0, [r4, #0x8]
	ldr		r0, [r4, #0xc]
	cmp		r0, #0x0
	bne		_0808e338
	ldr		r0, _0808e348
	add		r1, r4, #0x0
	bl		sub_0808d8b0
_0808e338:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8E33E, 0x2

_0808e340:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808e344:	.4byte 0x000001E9
_0808e348:	.4byte 0x0200BF14

.incbin "base.gba", 0x8E34C, 0x74
	thumb_func_end sub_0808e2e8

	thumb_func_start sub_0808e3c0
sub_0808e3c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	mov		r8, r2
	bl		sub_0808af4c
	cmp		r0, #0x0
	beq		_0808e3dc
	ldr		r0, [r6, #0x4]
	cmp		r0, #0x0
	bne		_0808e3e8
_0808e3dc:
	ldr		r0, _0808e408
	ldr		r1, _0808e40c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808e3e8:
	add		r0, r6, #0x0
	add		r0, #0x8c
	strh	r5, [r0, #0x0]
	ldr		r1, [r6, #0x4]
	ldrb	r7, [r1, #0x7]
	cmp		r5, r7
	bge		_0808e43c
	ldrb	r0, [r1, #0x6]
	lsl		r0, r0, #0x2
	add		r0, #0xc
	add		r0, r1, r0
	lsl		r1, r5, #0x2
	add		r1, r1, r0
	ldr		r4, [r1, #0x0]
	b		_0808e470

.incbin "base.gba", 0x8E406, 0x2

_0808e408:	.4byte 0x080de954 @ ../a_toda/agbobjsys.cpp
_0808e40c:	.4byte 0x00000202

_0808e410:
	mov		r0, #0x0
	ldrsh	r5, [r4, r0]
	cmp		r5, r7
	bge		_0808e426
	add		r2, r6, #0x0
	add		r2, #0x67
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	eor		r0, r1
	strb	r0, [r2, #0x0]
	b		_0808e460
_0808e426:
	mov		r1, #0x2
	ldrsh	r5, [r4, r1]
	cmp		r5, r7
	bge		_0808e43c
	add		r0, r6, #0x0
	add		r0, #0x68
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	eor		r1, r2
	strb	r1, [r0, #0x0]
	b		_0808e460
_0808e43c:
	ldr		r0, _0808e494
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	bne		_0808e45e
	ldr		r0, _0808e498
	ldr		r0, [r0, #0x0]
	ldr		r1, _0808e49c
	ldr		r2, [r6, #0x0]
	mov		r4, #0x1a
	ldrsh	r3, [r2, r4]
	mov		r4, #0x14
	ldrsh	r2, [r2, r4]
	str		r2, [sp, #0x0]
	add		r2, r5, #0x0
	bl		sub_0808c670
_0808e45e:
	mov		r5, #0x0
_0808e460:
	ldr		r1, [r6, #0x4]
	ldrb	r0, [r1, #0x6]
	lsl		r0, r0, #0x2
	add		r0, #0xc
	add		r1, r1, r0
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
_0808e470:
	ldrb	r0, [r4, #0x6]
	cmp		r0, #0x0
	beq		_0808e410
	add		r0, r6, #0x0
	add		r0, #0x70
	str		r4, [r6, #0x6c]
	add		r1, r4, #0x4
	mov		r2, r8
	bl		sub_0808b380
	ldrb	r0, [r4, #0x6]
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8E492, 0x2

_0808e494:	.4byte 0x0200CDBC
_0808e498:	.4byte 0x080c70c0 @ WARNING_@(%s_%d)_#($%08x,$%08x)
_0808e49c:	.4byte 0x080de9d8
	thumb_func_end sub_0808e3c0

	thumb_func_start sub_0808e4a0
sub_0808e4a0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x70
	bl		sub_0808b4ac
	add		r1, r4, #0x0
	add		r1, #0x5a
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e2e8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808e4a0

	thumb_func_start sub_0808e4bc
sub_0808e4bc:
	push	{ lr }
	ldr		r3, [r0, #0x6c]
	asr		r1, r1, #0x8
	ldrh	r3, [r3, #0x0]
	add		r1, r1, r3
	sub		r1, #0x40
	add		r3, r0, #0x0
	add		r3, #0x54
	strh	r1, [r3, #0x0]
	ldr		r1, [r0, #0x6c]
	asr		r2, r2, #0x8
	ldrh	r1, [r1, #0x2]
	add		r2, r2, r1
	sub		r2, #0x40
	add		r1, r0, #0x0
	add		r1, #0x56
	strh	r2, [r1, #0x0]
	bl		sub_0808e4a0
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8E4E6, 0x2
	thumb_func_end sub_0808e4bc

	thumb_func_start sub_0808e4e8
sub_0808e4e8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0808e4f4
	neg		r0, r1
_0808e4f4:
	asr		r3, r0, #0x10
	cmp		r1, #0x0
	bge		_0808e4fc
	neg		r3, r3
_0808e4fc:
	ldr		r0, [r4, #0x6c]
	ldrh	r0, [r0, #0x0]
	add		r0, r0, r3
	sub		r0, #0x40
	add		r1, r4, #0x0
	add		r1, #0x54
	strh	r0, [r1, #0x0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0808e512
	neg		r0, r2
_0808e512:
	asr		r1, r0, #0x10
	cmp		r2, #0x0
	bge		_0808e51a
	neg		r1, r1
_0808e51a:
	ldr		r0, [r4, #0x6c]
	ldrh	r0, [r0, #0x2]
	add		r0, r0, r1
	sub		r0, #0x40
	add		r1, r4, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808e4a0
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808e4e8

	thumb_func_start sub_0808e534
sub_0808e534:
	push	{ lr }
	ldr		r2, _0808e554
	ldr		r1, _0808e558
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldr		r0, _0808e55c
	bl		sub_0808d85c
	ldr		r0, _0808e560
	bl		sub_0808d9cc
	bl		sub_08001458
	pop		{ r0 }
	bx		r0

_0808e554:	.4byte 0x0200CE34
_0808e558:	.4byte 0x0200CE48
_0808e55c:	.4byte 0x0200BF14
_0808e560:	.4byte 0x03000400

.incbin "base.gba", 0x8E564, 0x64
	push	{ lr }
	ldr		r0, _0808e5d4
	bl		sub_080c3c08
	pop		{ r0 }
	bx		r0

_0808e5d4:	.4byte 0x0200BF14
	thumb_func_end sub_0808e534

	thumb_func_start sub_0808e5d8
sub_0808e5d8:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0808e5e8
	add		r0, r2, #0x0
	bl		sub_0808d5ac
_0808e5e8:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808e5d8

	thumb_func_start sub_0808e5ec
sub_0808e5ec:
	ldr		r3, _0808e6c8
	mov		pc, r3

.incbin "base.gba", 0x8E5F0, 0x24
	thumb_func_end sub_0808e5ec


.incbin "base.gba", 0x8E614, 0x4
	thumb_func_start sub_0808e618
sub_0808e618:
	mov		r12, pc
	bx		r12
_0808e61c:
.incbin "base.gba", 0x8E61C, 0x4
.incbin "base.gba", 0x8E620, 0x4
.incbin "base.gba", 0x8E624, 0x4
.incbin "base.gba", 0x8E628, 0x4
.incbin "base.gba", 0x8E62C, 0x4
.incbin "base.gba", 0x8E630, 0x4
.incbin "base.gba", 0x8E634, 0x4
.incbin "base.gba", 0x8E638, 0x4
.incbin "base.gba", 0x8E63C, 0x4
	thumb_func_end sub_0808e618

.incbin "base.gba", 0x8E640, 0x4
.incbin "base.gba", 0x8E644, 0x4
.incbin "base.gba", 0x8E648, 0x4
.incbin "base.gba", 0x8E64C, 0x4
.incbin "base.gba", 0x8E650, 0x4
.incbin "base.gba", 0x8E654, 0x4
.incbin "base.gba", 0x8E658, 0x4
.incbin "base.gba", 0x8E65C, 0x4
.incbin "base.gba", 0x8E660, 0x4
.incbin "base.gba", 0x8E664, 0x4
.incbin "base.gba", 0x8E668, 0x4
.incbin "base.gba", 0x8E66C, 0x4
.incbin "base.gba", 0x8E670, 0x4
.incbin "base.gba", 0x8E674, 0x4
.incbin "base.gba", 0x8E678, 0x4
.incbin "base.gba", 0x8E67C, 0x4
.incbin "base.gba", 0x8E680, 0x4
.incbin "base.gba", 0x8E684, 0x4
.incbin "base.gba", 0x8E688, 0x4
.incbin "base.gba", 0x8E68C, 0x4
.incbin "base.gba", 0x8E690, 0x4
.incbin "base.gba", 0x8E694, 0x4
.incbin "base.gba", 0x8E698, 0x4
.incbin "base.gba", 0x8E69C, 0x4
.incbin "base.gba", 0x8E6A0, 0x4
.incbin "base.gba", 0x8E6A4, 0x4
.incbin "base.gba", 0x8E6A8, 0x4
.incbin "base.gba", 0x8E6AC, 0x4
_0808e6b0:
.incbin "base.gba", 0x8E6B0, 0x4
_0808e6b4:
.incbin "base.gba", 0x8E6B4, 0x4
.incbin "base.gba", 0x8E6B8, 0x4
.incbin "base.gba", 0x8E6BC, 0x4
.incbin "base.gba", 0x8E6C0, 0x4

.incbin "base.gba", 0x8E6C4, 0x4
_0808e6c8:	.4byte 0x030074D0
_0808e6cc:	.4byte 0x0200EB28

	thumb_func_start sub_0808e6d0
sub_0808e6d0:
	mov		r12, r0
	ldr		r0, _0808e850
	bx		r0

.incbin "base.gba", 0x8E6D6, 0x2
_0808e6d8:
.incbin "base.gba", 0x8E6D8, 0x4
.incbin "base.gba", 0x8E6DC, 0x4
_0808e6e0:
.incbin "base.gba", 0x8E6E0, 0x4
.incbin "base.gba", 0x8E6E4, 0x4
.incbin "base.gba", 0x8E6E8, 0x4
.incbin "base.gba", 0x8E6EC, 0x4
.incbin "base.gba", 0x8E6F0, 0x4
.incbin "base.gba", 0x8E6F4, 0x4
.incbin "base.gba", 0x8E6F8, 0x4
.incbin "base.gba", 0x8E6FC, 0x4
.incbin "base.gba", 0x8E700, 0x4
.incbin "base.gba", 0x8E704, 0x4
.incbin "base.gba", 0x8E708, 0x4
.incbin "base.gba", 0x8E70C, 0x4
.incbin "base.gba", 0x8E710, 0x4
.incbin "base.gba", 0x8E714, 0x4
.incbin "base.gba", 0x8E718, 0x4
.incbin "base.gba", 0x8E71C, 0x4
.incbin "base.gba", 0x8E720, 0x4
.incbin "base.gba", 0x8E724, 0x4
.incbin "base.gba", 0x8E728, 0x4

.incbin "base.gba", 0x8E72C, 0x4
	thumb_func_end sub_0808e6d0

	thumb_func_start sub_0808e730
sub_0808e730:
	mov		r12, pc
	bx		r12
_0808e734:
.incbin "base.gba", 0x8E734, 0x4
.incbin "base.gba", 0x8E738, 0x4
.incbin "base.gba", 0x8E73C, 0x4
.incbin "base.gba", 0x8E740, 0x4
.incbin "base.gba", 0x8E744, 0x4
.incbin "base.gba", 0x8E748, 0x4
.incbin "base.gba", 0x8E74C, 0x4
.incbin "base.gba", 0x8E750, 0x4
.incbin "base.gba", 0x8E754, 0x4
.incbin "base.gba", 0x8E758, 0x4
.incbin "base.gba", 0x8E75C, 0x4
.incbin "base.gba", 0x8E760, 0x4
.incbin "base.gba", 0x8E764, 0x4
.incbin "base.gba", 0x8E768, 0x4
.incbin "base.gba", 0x8E76C, 0x4
.incbin "base.gba", 0x8E770, 0x4
.incbin "base.gba", 0x8E774, 0x4
.incbin "base.gba", 0x8E778, 0x4
.incbin "base.gba", 0x8E77C, 0x4
.incbin "base.gba", 0x8E780, 0x4

.incbin "base.gba", 0x8E784, 0x4
	thumb_func_end sub_0808e730

	thumb_func_start sub_0808e788
sub_0808e788:
	mov		r12, pc
	bx		r12
_0808e78c:
.incbin "base.gba", 0x8E78C, 0x4
.incbin "base.gba", 0x8E790, 0x4
.incbin "base.gba", 0x8E794, 0x4
_0808e798:
.incbin "base.gba", 0x8E798, 0x4
.incbin "base.gba", 0x8E79C, 0x4
.incbin "base.gba", 0x8E7A0, 0x4
.incbin "base.gba", 0x8E7A4, 0x4
.incbin "base.gba", 0x8E7A8, 0x4
.incbin "base.gba", 0x8E7AC, 0x4
.incbin "base.gba", 0x8E7B0, 0x4
.incbin "base.gba", 0x8E7B4, 0x4
.incbin "base.gba", 0x8E7B8, 0x4
.incbin "base.gba", 0x8E7BC, 0x4
.incbin "base.gba", 0x8E7C0, 0x4
.incbin "base.gba", 0x8E7C4, 0x4
.incbin "base.gba", 0x8E7C8, 0x4
.incbin "base.gba", 0x8E7CC, 0x4
.incbin "base.gba", 0x8E7D0, 0x4
.incbin "base.gba", 0x8E7D4, 0x4
.incbin "base.gba", 0x8E7D8, 0x4
.incbin "base.gba", 0x8E7DC, 0x4
.incbin "base.gba", 0x8E7E0, 0x4
.incbin "base.gba", 0x8E7E4, 0x4
.incbin "base.gba", 0x8E7E8, 0x4
.incbin "base.gba", 0x8E7EC, 0x4

.incbin "base.gba", 0x8E7F0, 0x4
	thumb_func_end sub_0808e788

	thumb_func_start sub_0808e7f4
sub_0808e7f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x1c
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	mov		r9, r3
	ldr		r7, [sp, #0x0+0x38]
	ldr		r4, [sp, #0x8+0x38]
	add		r0, sp, #0x4
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	mov		r3, r8
	bl		sub_0808e730
	str		r4, [sp, #0x0]
	add		r0, sp, #0x4
	mov		r1, r9
	add		r2, r7, #0x0
	ldr		r3, [sp, #0x4+0x38]
	bl		sub_0808e788
	add		sp, #0x1c
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8E832, 0x2
	thumb_func_end sub_0808e7f4

	thumb_func_start sub_0808e834
sub_0808e834:
	ldr		r3, _0808e848
	ldr		r2, _0808e84c
	mov		r1, #0x1
	and		r0, r1
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x3
	add		r1, r1, r2
	str		r1, [r3, #0x24]
	bx		lr

_0808e848:	.4byte 0x030074A8
_0808e84c:	.4byte 0x080dea0c
_0808e850:	.4byte 0x030074F4
	thumb_func_end sub_0808e834

	thumb_func_start sub_0808e854
sub_0808e854:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _0808e898
	str		r0, [r4, #0xc]
	ldr		r1, _0808e89c
	sub		r1, r4, r1
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r1, r0, #0x4
	add		r0, r0, r1
	lsl		r1, r0, #0x8
	add		r0, r0, r1
	lsl		r1, r0, #0x10
	add		r0, r0, r1
	neg		r0, r0
	asr		r0, r0, #0x3
	strh	r0, [r4, #0x16]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r0, #0x4
	ldr		r2, _0808e8a0
	lsl		r0, r0, #0x5
	add		r1, r0, r1
	add		r1, r1, r2
	str		r1, [r4, #0x20]
	ldr		r1, _0808e8a4
	add		r0, r0, r1
	str		r0, [r4, #0x24]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0808e898:	.4byte 0x080e3214
_0808e89c:	.4byte 0x0200C688
_0808e8a0:	.4byte 0x03000800
_0808e8a4:	.4byte 0x03000000
	thumb_func_end sub_0808e854

	thumb_func_start sub_0808e8a8
sub_0808e8a8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _0808e8d4
	mov		r0, #0x18
	ldrsh	r1, [r4, r0]
	mov		r0, #0x1a
	ldrsh	r2, [r4, r0]
	mov		r0, #0x1c
	ldrsh	r3, [r4, r0]
	add		r0, r5, #0x0
	bl		sub_0808e618
	ldr		r1, [r4, #0x20]
	ldr		r2, [r4, #0x24]
	add		r0, r5, #0x0
	mov		r3, #0x10
	bl		sub_0808e6d0
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8E8D2, 0x2

_0808e8d4:	.4byte 0x030074A8
	thumb_func_end sub_0808e8a8

	thumb_func_start sub_0808e8d8
sub_0808e8d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	ldr		r1, _0808e970
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	blt		_0808e902
	mov		r1, r9
	lsl		r0, r1, #0x1
	ldr		r1, _0808e974
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r8, r2
_0808e902:
	mov		r2, r9
	lsl		r0, r2, #0x1
	ldr		r1, _0808e978
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r4, r4, r0
	sub		r6, #0x1
	cmp		r6, #0x0
	blt		_0808e964
	lsl		r0, r4, #0x3
	sub		r0, r0, r4
	lsl		r7, r0, #0x2
	lsl		r0, r4, #0x2
	add		r0, r0, r4
	lsl		r5, r0, #0x3
_0808e922:
	cmp		r4, #0x1f
	bls		_0808e934
	ldr		r0, _0808e97c
	mov		r1, #0xc1
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808e934:
	ldr		r0, _0808e980
	add		r0, r5, r0
	mov		r2, r9
	strh	r2, [r0, #0x14]
	mov		r1, r8
	strh	r1, [r0, #0x1c]
	strh	r1, [r0, #0x1a]
	strh	r1, [r0, #0x18]
	mov		r1, #0x2
	mov		r2, #0x0
	bl		sub_08000644
	ldr		r0, _0808e984
	add		r0, r7, r0
	mov		r1, #0xb
	mov		r2, #0x0
	bl		sub_08000644
	add		r7, #0x1c
	add		r5, #0x28
	add		r4, #0x1
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0808e922
_0808e964:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0808e970:	.4byte 0x80808080
_0808e974:	.4byte 0x0200EB1C
_0808e978:	.4byte 0x0200CE8C
_0808e97c:	.4byte 0x080de9f4 @ ../a_toda/agbpalsys.cpp
_0808e980:	.4byte 0x0200C688
_0808e984:	.4byte 0x0200C308
	thumb_func_end sub_0808e8d8

	thumb_func_start sub_0808e988
sub_0808e988:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _0808e9b8
	str		r0, [r4, #0xc]
	ldr		r0, _0808e9bc
	sub		r0, r4, r0
	ldr		r1, _0808e9c0
	mul		r0, r1
	asr		r0, r0, #0x2
	ldr		r1, _0808e9c4
	lsl		r0, r0, #0x5
	add		r1, r0, r1
	str		r1, [r4, #0x14]
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	add		r0, r0, r1
	str		r0, [r4, #0x18]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8E9B6, 0x2

_0808e9b8:	.4byte 0x080e31fc
_0808e9bc:	.4byte 0x0200C308
_0808e9c0:	.4byte 0xB6DB6DB7
_0808e9c4:	.4byte 0x03000000
	thumb_func_end sub_0808e988

	thumb_func_start sub_0808e9c8
sub_0808e9c8:
	push	{ lr }
	ldr		r2, [r0, #0x14]
	ldr		r1, [r0, #0x18]
	ldr		r3, _0808e9dc
	add		r0, r2, #0x0
	mov		r2, #0x20
	bl		sub_08000a2c
	pop		{ r0 }
	bx		r0

_0808e9dc:	.4byte 0x84000003
	thumb_func_end sub_0808e9c8

	thumb_func_start sub_0808e9e0
sub_0808e9e0:
	push	{ r4, r5, r6, lr }
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r0, r0, #0x1
	ldr		r1, _0808ea2c
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r4, r4, r0
	sub		r5, #0x1
	cmp		r5, #0x0
	blt		_0808ea26
	lsl		r0, r4, #0x3
	sub		r0, r0, r4
	lsl		r6, r0, #0x2
_0808e9fe:
	cmp		r4, #0x1f
	bls		_0808ea10
	ldr		r0, _0808ea30
	mov		r1, #0xd1
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808ea10:
	ldr		r0, _0808ea34
	add		r0, r6, r0
	mov		r1, #0xb
	mov		r2, #0x0
	bl		sub_08000644
	add		r6, #0x1c
	add		r4, #0x1
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0808e9fe
_0808ea26:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0808ea2c:	.4byte 0x0200CE8C
_0808ea30:	.4byte 0x080de9f4 @ ../a_toda/agbpalsys.cpp
_0808ea34:	.4byte 0x0200C308
	thumb_func_end sub_0808e9e0

	thumb_func_start sub_0808ea38
sub_0808ea38:
	push	{ lr }
	ldr		r3, _0808ea50
	str		r0, [r3, #0x0]
	str		r1, [r3, #0x4]
	str		r2, [r3, #0x8]
	ldr		r0, _0808ea54
	mov		r1, #0x80
	mov		r2, #0xc
	bl		sub_0808c828
	pop		{ r0 }
	bx		r0

_0808ea50:	.4byte 0x0200EB28
_0808ea54:	.4byte 0x030074C0
	thumb_func_end sub_0808ea38

	thumb_func_start sub_0808ea58
sub_0808ea58:
	push	{ r4, lr }
	ldr		r0, _0808eaa0
	cmp		r0, #0x0
	beq		_0808ea7a
	mov		r1, #0xe0
	lsl		r1, r1, #0x2
	add		r4, r0, r1
	cmp		r0, r4
	beq		_0808ea7a
_0808ea6a:
	sub		r4, #0x1c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080c3c94
	ldr		r0, _0808eaa0
	cmp		r0, r4
	bne		_0808ea6a
_0808ea7a:
	ldr		r0, _0808eaa4
	cmp		r0, #0x0
	beq		_0808ea9a
	mov		r1, #0xa0
	lsl		r1, r1, #0x3
	add		r4, r0, r1
	cmp		r0, r4
	beq		_0808ea9a
_0808ea8a:
	sub		r4, #0x28
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080c3ca0
	ldr		r0, _0808eaa4
	cmp		r0, r4
	bne		_0808ea8a
_0808ea9a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808eaa0:	.4byte 0x0200C308
_0808eaa4:	.4byte 0x0200C688
	thumb_func_end sub_0808ea58

	thumb_func_start sub_0808eaa8
sub_0808eaa8:
	push	{ r4, r5, lr }
	ldr		r0, _0808eb30
	ldr		r5, _0808eb34
	sub		r0, r0, r5
	cmp		r0, #0x24
	beq		_0808eac0
	ldr		r0, _0808eb38
	ldr		r1, _0808eb3c
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808eac0:
	ldr		r0, _0808eb40
	ldr		r4, _0808eb44
	sub		r0, r0, r4
	cmp		r0, #0x54
	beq		_0808ead8
	ldr		r0, _0808eb38
	mov		r1, #0xb1
	lsl		r1, r1, #0x1
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_0808ead8:
	ldr		r0, _0808eb48
	add		r1, r5, #0x0
	mov		r2, #0x24
	bl		sub_0808c818
	ldr		r0, _0808eb4c
	add		r1, r4, #0x0
	mov		r2, #0x54
	bl		sub_0808c818
	ldr		r4, _0808eb50
	add		r0, r4, #0x0
	mov		r1, #0x80
	mov		r2, #0x28
	bl		sub_0808c828
	ldr		r0, _0808eb54
	str		r0, [r4, #0x24]
	ldr		r5, _0808eb58
	mov		r4, #0x1f
_0808eb00:
	add		r0, r5, #0x0
	bl		sub_0808e854
	add		r5, #0x28
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	bne		_0808eb00
	ldr		r5, _0808eb5c
	mov		r4, #0x1f
_0808eb16:
	add		r0, r5, #0x0
	bl		sub_0808e988
	add		r5, #0x1c
	sub		r4, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	bne		_0808eb16
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8EB2E, 0x2

_0808eb30:	.4byte 0x0808e614
_0808eb34:	.4byte 0x0808e5f0
_0808eb38:	.4byte 0x080de9f4 @ ../a_toda/agbpalsys.cpp
_0808eb3c:	.4byte 0x00000161
_0808eb40:	.4byte 0x0808e72c
_0808eb44:	.4byte 0x0808e6d8
_0808eb48:	.4byte 0x030074D0
_0808eb4c:	.4byte 0x030074F4
_0808eb50:	.4byte 0x030074A8
_0808eb54:	.4byte 0x080dea24
_0808eb58:	.4byte 0x0200C688
_0808eb5c:	.4byte 0x0200C308
	thumb_func_end sub_0808eaa8

	thumb_func_start sub_0808eb60
sub_0808eb60:
	push	{ lr }
	ldr		r2, _0808eb74
	ldr		r1, _0808eb78
	sub		r2, r2, r1
	ldr		r0, _0808eb7c
	bl		sub_0808c818
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8EB72, 0x2

_0808eb74:	.4byte 0x080904d4 @ sub_080904d4
_0808eb78:	.4byte 0x0808f83c
_0808eb7c:	.4byte 0x03004C80
	thumb_func_end sub_0808eb60

	thumb_func_start sub_0808eb80
sub_0808eb80:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	cmp		r2, #0x0
	ble		_0808eba6
_0808eb8a:
	cmp		r5, #0x0
	ble		_0808eb9e
	add		r0, r4, #0x0
	add		r1, r5, #0x0
_0808eb92:
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	sub		r1, #0x1
	add		r3, #0x1
	cmp		r1, #0x0
	bne		_0808eb92
_0808eb9e:
	sub		r2, #0x1
	add		r4, #0x40
	cmp		r2, #0x0
	bne		_0808eb8a
_0808eba6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808eb80

	thumb_func_start sub_0808ebac
sub_0808ebac:
	push	{ lr }
	b		_0808ebb6
_0808ebb0:
	strh	r2, [r0, #0x0]
	add		r2, #0x1
	add		r0, #0x2
_0808ebb6:
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0808ebb0
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808ebac

	thumb_func_start sub_0808ebc0
sub_0808ebc0:
	push	{ lr }
	mul		r1, r2
	b		_0808ebcc
_0808ebc6:
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	add		r3, #0x1
_0808ebcc:
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0808ebc6
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8EBD6, 0x2
	thumb_func_end sub_0808ebc0

	thumb_func_start sub_0808ebd8
sub_0808ebd8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [sp, #0x0+0x8]
	strh	r2, [r4, #0xe]
	strh	r3, [r4, #0x10]
	strh	r0, [r4, #0x12]
	add		r0, r4, #0x0
	bl		sub_0808ebf4
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8EBF2, 0x2
	thumb_func_end sub_0808ebd8

	thumb_func_start sub_0808ebf4
sub_0808ebf4:
	push	{ lr }
	add		r3, r0, #0x0
	ldr		r2, [r1, #0x0]
	str		r1, [r3, #0x0]
	add		r1, #0x84
	str		r1, [r3, #0x4]
	lsr		r0, r2, #0x4
	mov		r1, #0xf
	and		r0, r1
	lsl		r0, r0, #0x2
	strh	r0, [r3, #0xa]
	and		r2, r1
	lsl		r2, r2, #0x2
	strh	r2, [r3, #0xc]
	mov		r0, #0xa
	ldrsh	r1, [r3, r0]
	mov		r2, #0xc
	ldrsh	r0, [r3, r2]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0808ec20
	add		r0, #0xf
_0808ec20:
	asr		r0, r0, #0x4
	strh	r0, [r3, #0x8]
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808ebf4

	thumb_func_start sub_0808ec28
sub_0808ec28:
	push	{ lr }
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldrh	r0, [r2, #0x10]
	cmp		r3, r0
	beq		_0808ec4c
	lsr		r0, r3, #0x3
	ldr		r1, [r2, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	mov		r1, #0x7
	and		r1, r3
	lsl		r1, r1, #0x2
	ldr		r0, [r0, #0x4]
	lsr		r0, r1
	mov		r1, #0xf
	and		r0, r1
	b		_0808ec4e
_0808ec4c:
	ldrh	r0, [r2, #0xe]
_0808ec4e:
	add		r0, #0x1
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808ec28

	thumb_func_start sub_0808ec54
sub_0808ec54:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x10
	mov		r8, r0
	add		r6, r1, #0x0
	mov		r9, r2
	mov		r7, #0x0
	mov		r5, r8
	b		_0808ed3c
_0808ec6a:
	ldrb	r0, [r6, #0x0]
	add		r6, #0x1
	cmp		r0, #0xff
	beq		_0808ec8c
	cmp		r0, #0xfb
	bls		_0808ec84
	ldrb	r1, [r6, #0x0]
	neg		r0, r0
	add		r0, #0xff
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x10
	orr		r0, r1
	add		r6, #0x1
_0808ec84:
	strh	r0, [r5, #0x0]
	add		r5, #0x2
	add		r7, #0x1
	b		_0808ed3e
_0808ec8c:
	ldrb	r2, [r6, #0x0]
	add		r6, #0x1
	mov		r0, #0xf0
	and		r0, r2
	cmp		r0, #0xc0
	beq		_0808ecf0
	cmp		r0, #0xd0
	bne		_0808ed34
	mov		r0, #0xf
	and		r2, r0
	ldr		r1, _0808ece4
	lsl		r0, r2, #0x2
	add		r1, r0, r1
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0808ecb0
	ldr		r0, _0808ece8
	str		r0, [r1, #0x0]
_0808ecb0:
	ldr		r0, [r1, #0x0]
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r0, sp
	ldr		r1, _0808ecec
	bl		sub_0808c63c
	mov		r2, sp
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	beq		_0808ed3e
_0808ecc8:
	ldrb	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r5, #0x0]
	add		r5, #0x2
	add		r2, #0x1
	add		r7, #0x1
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	bne		_0808ecc8
	b		_0808ed3e

_0808ece4:	.4byte 0x02000B58
_0808ece8:	.4byte 0x080dea74
_0808ecec:	.4byte 0x080dea6c

_0808ecf0:
	mov		r0, #0xf
	and		r2, r0
	ldr		r1, _0808ed28
	lsl		r0, r2, #0x2
	add		r4, r0, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0808ed04
	ldr		r0, _0808ed2c
	str		r0, [r4, #0x0]
_0808ed04:
	ldr		r4, [r4, #0x0]
	ldrb	r2, [r4, #0x0]
	add		r1, r4, #0x2
	lsl		r2, r2, #0x1
	add		r0, r5, #0x0
	bl		sub_0808c6b8
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r5, r5, r0
	ldr		r1, _0808ed30
	add		r0, r1, #0x0
	strh	r0, [r5, #0x0]
	add		r5, #0x2
	ldrb	r0, [r4, #0x1]
	add		r7, r7, r0
	b		_0808ed3e

.incbin "base.gba", 0x8ED26, 0x2

_0808ed28:	.4byte 0x0200D0A4
_0808ed2c:	.4byte 0x080dea70
_0808ed30:	.4byte 0x0000FF21

_0808ed34:
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	orr		r2, r0
	strh	r2, [r5, #0x0]
_0808ed3c:
	add		r5, #0x2
_0808ed3e:
	cmp		r6, r9
	bcc		_0808ec6a
	sub		r0, r5, #0x2
	mov		r3, r8
	sub		r0, r0, r3
	asr		r0, r0, #0x1
	strb	r0, [r3, #0x0]
	strb	r7, [r3, #0x1]
	add		sp, #0x10
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808ec54

	thumb_func_start sub_0808ed5c
sub_0808ed5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r8, r0
	add		r5, r1, #0x0
	ldr		r0, _0808edb0
	bl		sub_0800227c
	mov		r1, #0xa4
	lsl		r1, r1, #0x3
	mov		r9, r1
	cmp		r0, #0x0
	beq		_0808ed80
	ldr		r2, _0808edb4
	mov		r9, r2
_0808ed80:
	mov		r6, #0xa6
	lsl		r6, r6, #0x3
	mov		r12, r6
	cmp		r0, #0x0
	beq		_0808ed90
	mov		r1, #0x98
	lsl		r1, r1, #0x1
	mov		r12, r1
_0808ed90:
	ldr		r2, _0808edb8
	str		r2, [sp, #0x0]
	cmp		r0, #0x0
	beq		_0808ed9c
	ldr		r6, _0808edbc
	str		r6, [sp, #0x0]
_0808ed9c:
	ldr		r1, _0808edc0
	str		r1, [sp, #0x4]
	cmp		r0, #0x0
	beq		_0808eda8
	ldr		r2, _0808edc4
	str		r2, [sp, #0x4]
_0808eda8:
	mov		r7, r8
	add		r7, #0x2
	add		r3, r5, #0x0
	b		_0808f02c

_0808edb0:	.4byte 0x00000876
_0808edb4:	.4byte 0x000004BF
_0808edb8:	.4byte 0x00000541
_0808edbc:	.4byte 0x00000141
_0808edc0:	.4byte 0x00000561
_0808edc4:	.4byte 0x00000161

_0808edc8:
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1e
	bls		_0808ede6
	add		r0, r1, #0x0
	add		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1c
	bhi		_0808ede8
_0808ede6:
	mov		r2, #0x1
_0808ede8:
	ldrb	r5, [r3, #0x0]
	add		r6, r7, #0x2
	mov		r10, r6
	cmp		r2, #0x0
	bne		_0808edf4
	b		_0808f01e
_0808edf4:
	mov		r0, #0x1
	ldrsb	r0, [r3, r0]
	mov		r1, #0x0
	str		r1, [sp, #0x8]
	lsl		r1, r0, #0x18
	asr		r2, r1, #0x18
	mov		r6, #0xc0
	lsl		r6, r6, #0x18
	add		r0, r1, r6
	lsr		r0, r0, #0x18
	cmp		r0, #0x3e
	bls		_0808ee16
	cmp		r2, #0x0
	bge		_0808ee1a
	lsr		r0, r1, #0x18
	cmp		r0, #0xfc
	bhi		_0808ee1a
_0808ee16:
	mov		r0, #0x1
	str		r0, [sp, #0x8]
_0808ee1a:
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x0
	bne		_0808ee22
	b		_0808f01e
_0808ee22:
	lsl		r0, r5, #0x8
	ldrb	r1, [r3, #0x1]
	orr		r1, r0
	ldr		r0, _0808ee4c
	cmp		r1, r0
	bne		_0808ee30
	b		_0808f018
_0808ee30:
	mov		r2, #0x0
	ldr		r5, _0808ee50
	add		r0, r1, r5
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x9
	bhi		_0808ee40
	mov		r2, #0x1
_0808ee40:
	cmp		r2, #0x0
	beq		_0808ee58
	ldr		r0, _0808ee54
	add		r0, r12
	add		r4, r1, r0
	b		_0808f01a

_0808ee4c:	.4byte 0x00008140
_0808ee50:	.4byte 0x00007DB1
_0808ee54:	.4byte 0xFFFF7DB1

_0808ee58:
	mov		r2, #0x0
	ldr		r6, _0808ee74
	add		r0, r1, r6
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x52
	bhi		_0808ee68
	mov		r2, #0x1
_0808ee68:
	cmp		r2, #0x0
	beq		_0808ee7c
	ldr		r0, _0808ee78
	add		r4, r1, r0
	b		_0808f01a

.incbin "base.gba", 0x8EE72, 0x2

_0808ee74:	.4byte 0x00007D61
_0808ee78:	.4byte 0xFFFF81C0

_0808ee7c:
	mov		r2, #0x0
	ldr		r5, _0808ee98
	add		r0, r1, r5
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x56
	bhi		_0808ee8c
	mov		r2, #0x1
_0808ee8c:
	cmp		r2, #0x0
	beq		_0808eea0
	ldr		r6, _0808ee9c
	add		r4, r1, r6
	b		_0808f01a

.incbin "base.gba", 0x8EE96, 0x2

_0808ee98:	.4byte 0x00007CC0
_0808ee9c:	.4byte 0xFFFF80BF

_0808eea0:
	mov		r2, #0x0
	ldr		r5, _0808eebc
	add		r0, r1, r5
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x19
	bhi		_0808eeb0
	mov		r2, #0x1
_0808eeb0:
	cmp		r2, #0x0
	beq		_0808eec4
	ldr		r6, [sp, #0x4]
	ldr		r2, _0808eec0
	b		_0808eedc

.incbin "base.gba", 0x8EEBA, 0x2

_0808eebc:	.4byte 0x00007D7F
_0808eec0:	.4byte 0xFFFF7D7F

_0808eec4:
	mov		r2, #0x0
	ldr		r5, _0808eee4
	add		r0, r1, r5
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x19
	bhi		_0808eed4
	mov		r2, #0x1
_0808eed4:
	cmp		r2, #0x0
	beq		_0808eeec
	ldr		r6, [sp, #0x0]
	ldr		r2, _0808eee8
_0808eedc:
	add		r0, r6, r2
	add		r4, r1, r0
	b		_0808f01a

.incbin "base.gba", 0x8EEE2, 0x2

_0808eee4:	.4byte 0x00007DA0
_0808eee8:	.4byte 0xFFFF7DA0

_0808eeec:
	ldr		r5, _0808ef00
	add		r0, r4, r5
	cmp		r0, #0x35
	bls		_0808eef6
	b		_0808f018
_0808eef6:
	lsl		r0, r0, #0x2
	ldr		r1, _0808ef04
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0808ef00:	.4byte 0xFFFF7EBF
_0808ef04:	.4byte 0x0808ef08
_0808ef08:	.4byte 0x0808f008

.incbin "base.gba", 0x8EF0C, 0xD4
	thumb_func_end sub_0808ed5c


.incbin "base.gba", 0x8EFE0, 0x38

_0808f018:

.incbin "base.gba", 0x8F018, 0x2
_0808f01a:

.incbin "base.gba", 0x8F01A, 0x4
_0808f01e:

.incbin "base.gba", 0x8F01E, 0xA
_0808f028:

.incbin "base.gba", 0x8F028, 0x4
_0808f02c:

.incbin "base.gba", 0x8F02C, 0xA
_0808f036:

.incbin "base.gba", 0x8F036, 0x1E
	thumb_func_start sub_0808f054
sub_0808f054:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r6, #0x0
	mov		r5, #0x0
	strh	r1, [r4, #0x0]
	strh	r2, [r4, #0x2]
	ldr		r0, _0808f08c
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0808f090
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0808f09c
	strh	r5, [r4, #0x10]
	strh	r5, [r4, #0x12]
	strb	r6, [r4, #0xe]
	strb	r6, [r4, #0xf]
	mov		r0, #0x1
	strh	r0, [r4, #0x14]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8F08A, 0x2

_0808f08c:	.4byte 0x0200EB34
	thumb_func_end sub_0808f054

	thumb_func_start sub_0808f090
sub_0808f090:
	mov		r2, #0xf
	and		r1, r2
	strb	r1, [r0, #0xc]
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x8F09A, 0x2
	thumb_func_end sub_0808f090

	thumb_func_start sub_0808f09c
sub_0808f09c:
	add		r3, r0, #0x0
	lsl		r0, r2, #0x1
	orr		r0, r1
	strb	r0, [r3, #0xd]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bx		lr

.incbin "base.gba", 0x8F0AA, 0x2
	thumb_func_end sub_0808f09c

	thumb_func_start sub_0808f0ac
sub_0808f0ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r6, r2, #0x0
	add		r7, r3, #0x0
	ldmia	r1!, { r2, r3, r5 }
	stmia	r0!, {  r2, r3, r5 }
	ldmia	r1!, { r2, r3, r5 }
	stmia	r0!, {  r2, r3, r5 }
	mov		r1, #0x10
	ldrsh	r0, [r4, r1]
	mov		r8, r0
_0808f0c6:
	cmp		r6, r7
	bcs		_0808f19c
	ldrh	r2, [r6, #0x0]
	add		r6, #0x2
	lsr		r0, r2, #0x8
	lsl		r1, r2, #0x18
	cmp		r0, #0x5
	bhi		_0808f10c
	lsr		r1, r1, #0x18
	ldr		r2, [r4, #0x8]
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0808ec28
	add		r3, r0, #0x0
	mov		r2, #0x14
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	bne		_0808f0f4
	mov		r1, #0x12
	ldrsh	r0, [r5, r1]
_0808f0f4:
	cmp		r3, r0
	bge		_0808f0fa
	add		r3, r0, #0x0
_0808f0fa:
	ldrh	r0, [r4, #0x10]
	add		r0, #0x1
	ldrb	r2, [r4, #0xd]
	mov		r1, #0x1
	and		r1, r2
	lsl		r3, r1
	add		r0, r0, r3
	strh	r0, [r4, #0x10]
	b		_0808f0c6
_0808f10c:
	lsr		r1, r1, #0x18
	mov		r0, #0xf0
	and		r0, r1
	cmp		r0, #0x10
	beq		_0808f12a
	cmp		r0, #0x10
	bhi		_0808f120
	cmp		r0, #0x0
	beq		_0808f178
	b		_0808f0c6
_0808f120:
	cmp		r0, #0x30
	beq		_0808f148
	cmp		r0, #0x40
	beq		_0808f15a
	b		_0808f0c6
_0808f12a:
	cmp		r2, #0x10
	beq		_0808f13c
	ldr		r0, _0808f138
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x8]
	b		_0808f0c6

.incbin "base.gba", 0x8F136, 0x2

_0808f138:	.4byte 0x0200EB34

_0808f13c:
	ldr		r0, _0808f144
	str		r0, [r4, #0x8]
	b		_0808f0c6

.incbin "base.gba", 0x8F142, 0x2

_0808f144:	.4byte 0x0200D184

_0808f148:
	mov		r1, #0x2
	and		r1, r2
	lsr		r1, r1, #0x1
	mov		r0, #0x1
	and		r2, r0
	add		r0, r4, #0x0
	bl		sub_0808f09c
	b		_0808f0c6
_0808f15a:
	ldr		r0, _0808f174
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0808f0c6
	mov		r0, #0xf
	and		r2, r0
	lsl		r0, r2, #0x1
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r2, [r4, #0x10]
	add		r0, r0, r2
	strh	r0, [r4, #0x10]
	b		_0808f0c6

_0808f174:	.4byte 0x0200D0E4

_0808f178:
	cmp		r1, #0x2
	bne		_0808f0c6
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x3
	mov		r5, r8
	sub		r0, r0, r5
	add		r0, #0x1
	mov		r2, #0x10
	ldrsh	r1, [r4, r2]
	sub		r1, r1, r5
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	ldrh	r3, [r4, #0x10]
	add		r0, r0, r3
	strh	r0, [r4, #0x10]
_0808f19c:
	add		r0, r6, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808f0ac

	thumb_func_start sub_0808f1a8
sub_0808f1a8:
	push	{ r4, r5, lr }
	sub		sp, #0x18
	add		r5, r0, #0x0
	add		r3, r1, #0x0
	add		r4, r2, #0x0
	cmp		r3, r4
	bcs		_0808f1c8
_0808f1b6:
	mov		r0, sp
	add		r1, r5, #0x0
	add		r2, r3, #0x0
	add		r3, r4, #0x0
	bl		sub_0808f0ac
	add		r3, r0, #0x0
	cmp		r3, r4
	bcc		_0808f1b6
_0808f1c8:
	add		r0, sp, #0x10
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r2, #0x10
	ldrsh	r1, [r5, r2]
	sub		r0, r0, r1
	sub		r0, #0x1
	add		sp, #0x18
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8F1DE, 0x2
	thumb_func_end sub_0808f1a8

	thumb_func_start sub_0808f1e0
sub_0808f1e0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, [sp, #0x0+0x10]
	mov		r6, #0xc
	ldrsh	r4, [r0, r6]
	asr		r3, r3, #0x1
	mov		r0, #0x1
	and		r3, r0
	lsl		r4, r3
	sub		r2, r2, r4
	mov		r3, #0x8
	neg		r3, r3
	and		r1, r3
	lsl		r1, r1, #0x2
	ldr		r0, [r5, #0x4]
	add		r0, r0, r1
	add		r1, r2, #0x0
	and		r1, r3
	mov		r4, #0x0
	ldrsh	r3, [r5, r4]
	mul		r1, r3
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r1, #0x7
	and		r1, r2
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808f1e0

	thumb_func_start sub_0808f21c
sub_0808f21c:
	push	{ r4, lr }
	ldr		r3, _0808f23c
	mov		r4, #0xa
	ldrsh	r0, [r2, r4]
	sub		r1, #0x8
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r1, _0808f240
	ldr		r2, _0808f244
	sub		r1, r1, r2
	ldr		r0, [r0, #0x0]
	sub		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0808f23c:	.4byte 0x080dea3c
_0808f240:	.4byte 0x0808f83c
_0808f244:	.4byte 0x03004C80
	thumb_func_end sub_0808f21c

	thumb_func_start sub_0808f248
sub_0808f248:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r0, [sp, #0x4]
	mov		r9, r1
	mov		r10, r2
	str		r3, [sp, #0x0]
	add		r0, sp, #0x28
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x1]
	mov		r5, r9
	add		r5, #0x2
	ldr		r1, [sp, #0x0]
	cmp		r10, r1
	bcs		_0808f338
_0808f26c:
	mov		r2, r10
	ldrh	r6, [r2, #0x0]
	mov		r3, #0x2
	add		r10, r3
	lsr		r0, r6, #0x8
	lsl		r1, r6, #0x18
	cmp		r0, #0x5
	bhi		_0808f2f4
	lsr		r1, r1, #0x18
	ldr		r7, [sp, #0x4]
	ldr		r2, [r7, #0x8]
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r0, #0x10
	ldrsh	r4, [r7, r0]
	mov		r0, r8
	bl		sub_0808ec28
	add		r1, r0, #0x0
	ldrb	r0, [r7, #0xd]
	mov		r3, #0x1
	and		r3, r0
	lsl		r1, r3
	mov		r2, #0x14
	ldrsh	r0, [r7, r2]
	cmp		r0, #0x0
	beq		_0808f2aa
	add		r2, r0, #0x0
	b		_0808f2b0
_0808f2aa:
	mov		r7, r8
	mov		r0, #0x12
	ldrsh	r2, [r7, r0]
_0808f2b0:
	lsl		r2, r3
	cmp		r1, r2
	bge		_0808f2c2
	sub		r0, r2, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r4, r4, r0
	add		r1, r2, #0x0
_0808f2c2:
	ldr		r2, [sp, #0x4]
	ldrh	r0, [r2, #0x10]
	add		r0, #0x1
	add		r0, r0, r1
	strh	r0, [r2, #0x10]
	ldr		r3, _0808f2ec
	add		r0, r3, #0x0
	and		r4, r0
	ldr		r7, _0808f2f0
	add		r0, r7, #0x0
	orr		r4, r0
	strh	r4, [r5, #0x0]
	add		r5, #0x2
	strh	r6, [r5, #0x0]
	add		r5, #0x2
	ldr		r0, [sp, #0x0+0x28]
	sub		r0, #0x1
	str		r0, [sp, #0x0+0x28]
	cmp		r0, #0x0
	beq		_0808f338
	b		_0808f332

_0808f2ec:	.4byte 0x00000FFF
_0808f2f0:	.4byte 0xFFFFC000

_0808f2f4:
	lsr		r1, r1, #0x18
	mov		r0, #0xf0
	and		r1, r0
	cmp		r1, #0x20
	beq		_0808f304
	cmp		r1, #0x30
	beq		_0808f314
	b		_0808f332
_0808f304:
	ldr		r0, [sp, #0x4]
	add		r1, r6, #0x0
	bl		sub_0808f090
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r1, r2, #0x0
	b		_0808f32c
_0808f314:
	mov		r1, #0x2
	and		r1, r6
	lsr		r1, r1, #0x1
	mov		r0, #0x1
	and		r6, r0
	ldr		r0, [sp, #0x4]
	add		r2, r6, #0x0
	bl		sub_0808f09c
	mov		r3, #0xc0
	lsl		r3, r3, #0x6
	add		r1, r3, #0x0
_0808f32c:
	orr		r0, r1
	strh	r0, [r5, #0x0]
	add		r5, #0x2
_0808f332:
	ldr		r7, [sp, #0x0]
	cmp		r10, r7
	bcc		_0808f26c
_0808f338:
	sub		r0, r5, #0x2
	mov		r1, r9
	sub		r0, r0, r1
	asr		r0, r0, #0x1
	strb	r0, [r1, #0x0]
	ldrb	r0, [r1, #0x1]
	ldr		r2, [sp, #0x0+0x28]
	sub		r0, r0, r2
	strb	r0, [r1, #0x1]
	mov		r0, r10
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808f248

	thumb_func_start sub_0808f35c
sub_0808f35c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	mov		r12, r1
	mov		r8, r2
	ldr		r1, _0808f3a8
	ldr		r1, [r1, #0x0]
	str		r1, [r0, #0x8]
	ldr		r5, _0808f3ac
	add		r4, r5, #0x0
	add		r1, r0, #0x0
	ldmia	r1!, { r2, r6, r7 }
	stmia	r4!, {  r2, r6, r7 }
	ldmia	r1!, { r2, r6, r7 }
	stmia	r4!, {  r2, r6, r7 }
	str		r3, [sp, #0x0]
	add		r1, r4, #0x0
	mov		r2, r12
	mov		r3, r8
	bl		sub_0808f248
	add		r6, r0, #0x0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0808f3b0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r6, #0x0
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0808f3a8:	.4byte 0x0200EB34
_0808f3ac:	.4byte 0x03007548
	thumb_func_end sub_0808f35c

	thumb_func_start sub_0808f3b0
sub_0808f3b0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldrb	r1, [r4, #0x0]
	lsl		r1, r1, #0x1
	add		r1, #0x2e
	mov		r0, #0xd0
	bl		sub_080005bc
	add		r1, r5, #0x0
	bl		sub_0808f3f0
	add		r5, r0, #0x0
	ldrb	r1, [r4, #0x0]
	add		r0, #0x2c
	strb	r1, [r0, #0x0]
	ldrb	r2, [r4, #0x0]
	add		r0, #0x2
	add		r4, #0x2
	lsl		r2, r2, #0x1
	add		r1, r4, #0x0
	bl		sub_0808c6b8
	add		r0, r5, #0x0
	mov		r1, #0xe
	mov		r2, #0x0
	bl		sub_08000644
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0808f3b0

	thumb_func_start sub_0808f3f0
sub_0808f3f0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080c3bcc
	ldr		r0, _0808f414
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x14
	ldmia	r4!, { r1, r2, r3 }
	stmia	r0!, {  r1, r2, r3 }
	ldmia	r4!, { r1, r2, r3 }
	stmia	r0!, {  r1, r2, r3 }
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8F412, 0x2

_0808f414:	.4byte 0x080e322c
	thumb_func_end sub_0808f3f0

	thumb_func_start sub_0808f418
sub_0808f418:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	mov		r10, r1
	str		r2, [sp, #0xC]
	cmp		r10, r2
	bcs		_0808f508
_0808f42e:
	mov		r0, r10
	ldrh	r6, [r0, #0x0]
	mov		r1, #0x2
	add		r10, r1
	lsr		r0, r6, #0x8
	cmp		r0, #0x5
	bhi		_0808f4c0
	lsl		r6, r6, #0x18
	lsr		r6, r6, #0x18
	add		r4, r7, #0x0
	add		r4, #0x14
	ldr		r1, [r4, #0x8]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	mov		r0, #0x26
	ldrsh	r2, [r7, r0]
	mov		r0, #0x21
	add		r0, r0, r7
	mov		r8, r0
	ldrb	r3, [r0, #0x0]
	str		r5, [sp, #0x0]
	add		r0, r4, #0x0
	bl		sub_0808f1e0
	mov		r9, r0
	mov		r2, r8
	ldrb	r1, [r2, #0x0]
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0808f21c
	mov		r8, r0
	add		r0, r7, #0x0
	add		r0, #0x20
	ldrb	r0, [r0, #0x0]
	mov		r4, #0x24
	ldrsh	r3, [r7, r4]
	mov		r2, #0xc
	ldrsh	r1, [r5, r2]
	lsl		r2, r0, #0x4
	add		r2, r2, r0
	lsl		r0, r2, #0x8
	add		r2, r2, r0
	lsl		r0, r2, #0x10
	add		r2, r2, r0
	mov		r0, #0x7
	and		r3, r0
	lsl		r3, r3, #0x2
	mov		r4, #0x14
	ldrsh	r0, [r7, r4]
	sub		r0, #0x1
	lsl		r0, r0, #0x5
	str		r0, [sp, #0x0]
	mov		r4, #0x8
	ldrsh	r0, [r5, r4]
	add		r4, r6, #0x0
	mul		r4, r0
	lsl		r4, r4, #0x2
	ldr		r0, [r5, #0x4]
	add		r0, r0, r4
	str		r0, [sp, #0x4]
	ldr		r0, _0808f4bc
	str		r0, [sp, #0x8]
	mov		r0, r9
	bl		sub_080bbc90
	b		_0808f502

.incbin "base.gba", 0x8F4BA, 0x2

_0808f4bc:	.4byte 0x11111111

_0808f4c0:
	mov		r1, #0xf0
	and		r1, r0
	cmp		r1, #0x30
	beq		_0808f4e8
	cmp		r1, #0x30
	bhi		_0808f4d2
	cmp		r1, #0x20
	beq		_0808f4dc
	b		_0808f502
_0808f4d2:
	cmp		r1, #0xc0
	beq		_0808f4f4
	cmp		r1, #0xd0
	beq		_0808f4fc
	b		_0808f502
_0808f4dc:
	mov		r0, #0xf
	and		r6, r0
	add		r0, r7, #0x0
	add		r0, #0x20
	strb	r6, [r0, #0x0]
	b		_0808f502
_0808f4e8:
	mov		r0, #0x3
	and		r6, r0
	add		r0, r7, #0x0
	add		r0, #0x21
	strb	r6, [r0, #0x0]
	b		_0808f502
_0808f4f4:
	lsl		r0, r6, #0x14
	asr		r0, r0, #0x14
	strh	r0, [r7, #0x24]
	b		_0808f502
_0808f4fc:
	lsl		r0, r6, #0x14
	asr		r0, r0, #0x14
	strh	r0, [r7, #0x26]
_0808f502:
	ldr		r0, [sp, #0xC]
	cmp		r10, r0
	bcc		_0808f42e
_0808f508:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0808f418

	thumb_func_start sub_0808f518
sub_0808f518:
	push	{ lr }
	add		r1, r0, #0x0
	add		r1, #0x2e
	add		r2, r0, #0x0
	add		r2, #0x2c
	ldrb	r2, [r2, #0x0]
	lsl		r2, r2, #0x1
	add		r2, #0x2e
	add		r2, r0, r2
	bl		sub_0808f418
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8F532, 0x2
	push	{ lr }
	bl		sub_0808eb60
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8F53E, 0x2
	thumb_func_end sub_0808f518

	thumb_func_start sub_0808f540
sub_0808f540:
	push	{ lr }
	bl		sub_0808f71c
	mov		r0, #0x1
	bl		sub_0808f628
	mov		r0, #0x2
	bl		sub_0808f628
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8F556, 0x2
	thumb_func_end sub_0808f540

	thumb_func_start sub_0808f558
sub_0808f558:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	lsl		r2, r4, #0x10
	ldr		r1, _0808f584
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	ldr		r0, _0808f588
	ldrb	r0, [r0, #0x0]
	asr		r0, r3
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808f57e
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_08096514
_0808f57e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808f584:	.4byte 0x0200EB38
_0808f588:	.4byte 0x0200DD29
	thumb_func_end sub_0808f558

	thumb_func_start sub_0808f58c
sub_0808f58c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	lsl		r0, r0, #0x10
	ldr		r2, _0808f5c4
	lsl		r4, r5, #0x2
	add		r2, r4, r2
	ldr		r2, [r2, #0x0]
	sub		r0, r0, r2
	bl		sub_0808c344
	ldr		r1, _0808f5c8
	add		r4, r4, r1
	str		r0, [r4, #0x0]
	mov		r1, #0xfb
	lsl		r1, r1, #0x4
	add		r5, r5, r1
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0808f5b8
	mov		r1, #0x1
_0808f5b8:
	add		r0, r5, #0x0
	bl		sub_08002250
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0808f5c4:	.4byte 0x0200EB38
_0808f5c8:	.4byte 0x0200CB94
	thumb_func_end sub_0808f58c

	thumb_func_start sub_0808f5cc
sub_0808f5cc:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	ldr		r6, _0808f620
	ldrb	r0, [r6, #0x0]
	asr		r0, r4
	mov		r5, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0808f610
	ldr		r1, _0808f624
	lsl		r0, r4, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_0808f5f0
	neg		r1, r0
_0808f5f0:
	asr		r1, r1, #0x10
	cmp		r0, #0x0
	bge		_0808f5f8
	neg		r1, r1
_0808f5f8:
	add		r0, r4, #0x0
	bl		sub_08096514
	ldrb	r0, [r6, #0x0]
	asr		r0, r4
	and		r0, r5
	cmp		r0, #0x0
	beq		_0808f610
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_080964d0
_0808f610:
	mov		r1, #0xfb
	lsl		r1, r1, #0x4
	add		r0, r4, r1
	bl		sub_08002268
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0808f620:	.4byte 0x0200DD29
_0808f624:	.4byte 0x0200EB38
	thumb_func_end sub_0808f5cc

	thumb_func_start sub_0808f628
sub_0808f628:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r2, #0xff
	lsl		r2, r2, #0x10
	ldr		r0, _0808f664
	lsl		r1, r4, #0x2
	add		r0, r1, r0
	str		r2, [r0, #0x0]
	ldr		r0, _0808f668
	add		r1, r1, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, _0808f66c
	ldrb	r0, [r0, #0x0]
	asr		r0, r4
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808f654
	add		r0, r4, #0x0
	bl		sub_080964e4
_0808f654:
	mov		r1, #0xfb
	lsl		r1, r1, #0x4
	add		r0, r4, r1
	bl		sub_08002268
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0808f664:	.4byte 0x0200EB38
_0808f668:	.4byte 0x0200CB94
_0808f66c:	.4byte 0x0200DD29
	thumb_func_end sub_0808f628

	thumb_func_start sub_0808f670
sub_0808f670:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _0808f68c
	ldrb	r0, [r0, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808f688
	add		r0, r2, #0x0
	bl		sub_080964fc
_0808f688:
	pop		{ r0 }
	bx		r0

_0808f68c:	.4byte 0x0200DD29
	thumb_func_end sub_0808f670

	thumb_func_start sub_0808f690
sub_0808f690:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r6, _0808f6b4
	ldr		r1, [r6, #0x0]
	ldr		r5, _0808f6b8
	ldr		r0, [r5, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	mov		r2, #0x34
	ldrsh	r0, [r0, r2]
	ldr		r2, _0808f6bc
	cmp		r1, r0
	beq		_0808f6c0
	ldr		r1, [r2, #0x0]
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_0808f6ca

.incbin "base.gba", 0x8F6B2, 0x2

_0808f6b4:	.4byte 0x080dea78
_0808f6b8:	.4byte 0x080dea7c
_0808f6bc:	.4byte 0x080dea80

_0808f6c0:
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x2
	bgt		_0808f6e4
_0808f6ca:
	ldr		r3, _0808f6ec
	ldr		r2, _0808f6f0
	ldrh	r0, [r2, #0x0]
	add		r1, r0, #0x1
	strh	r1, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0xf
	add		r0, r0, r3
	strh	r4, [r0, #0x0]
	ldr		r1, [r6, #0x0]
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x34]
	strh	r0, [r1, #0x0]
_0808f6e4:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8F6EA, 0x2

_0808f6ec:	.4byte 0x0200CBA4
_0808f6f0:	.4byte 0x0200CBA2
	thumb_func_end sub_0808f690

	thumb_func_start sub_0808f6f4
sub_0808f6f4:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _0808f718
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808f70a
	add		r0, r2, #0x0
	bl		sub_08096548
_0808f70a:
	mov		r0, #0xfb
	lsl		r0, r0, #0x4
	bl		sub_08002268
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8F716, 0x2

_0808f718:	.4byte 0x0200DD29
	thumb_func_end sub_0808f6f4

	thumb_func_start sub_0808f71c
sub_0808f71c:
	push	{ lr }
	mov		r2, #0x0
	ldr		r0, _0808f74c
	strh	r2, [r0, #0x0]
	mov		r1, #0xff
	lsl		r1, r1, #0x10
	ldr		r0, _0808f750
	str		r1, [r0, #0x0]
	ldr		r0, _0808f754
	str		r2, [r0, #0x0]
	ldr		r0, _0808f758
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808f740
	bl		sub_08096560
_0808f740:
	mov		r0, #0xfb
	lsl		r0, r0, #0x4
	bl		sub_08002268
	pop		{ r0 }
	bx		r0

_0808f74c:	.4byte 0x0200CBA2
_0808f750:	.4byte 0x0200EB38
_0808f754:	.4byte 0x0200CB94
_0808f758:	.4byte 0x0200DD29
	thumb_func_end sub_0808f71c

	thumb_func_start sub_0808f75c
sub_0808f75c:
	push	{ r4, r5, r6, r7, lr }
	ldr		r4, _0808f7cc
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	ble		_0808f798
	ldr		r0, _0808f7d0
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808f77e
	ldr		r0, _0808f7d4
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	bl		sub_08096530
_0808f77e:
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_0808f798
	ldr		r0, _0808f7d4
	ldrh	r1, [r0, #0x2]
	strh	r1, [r0, #0x0]
	ldrh	r1, [r0, #0x4]
	strh	r1, [r0, #0x2]
	ldrh	r1, [r0, #0x6]
	strh	r1, [r0, #0x4]
_0808f798:
	mov		r5, #0x0
_0808f79a:
	ldr		r0, _0808f7d8
	lsl		r6, r5, #0x2
	add		r1, r6, r0
	ldr		r2, [r1, #0x0]
	cmp		r2, #0x0
	beq		_0808f826
	ldr		r7, _0808f7dc
	ldr		r0, [r7, #0x0]
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	add		r4, r0, r2
	mov		r0, #0xff
	lsl		r0, r0, #0x10
	cmp		r4, r0
	blt		_0808f7e0
	add		r4, r0, #0x0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0xfb
	lsl		r1, r1, #0x4
	add		r0, r5, r1
	bl		sub_08002268
	b		_0808f7fc

.incbin "base.gba", 0x8F7CA, 0x2

_0808f7cc:	.4byte 0x0200CBA2
_0808f7d0:	.4byte 0x0200DD29
_0808f7d4:	.4byte 0x0200CBA4
_0808f7d8:	.4byte 0x0200CB94
_0808f7dc:	.4byte 0x080dea84

_0808f7e0:
	cmp		r4, #0x0
	bgt		_0808f7fc
	mov		r4, #0x0
	str		r4, [r1, #0x0]
	cmp		r5, #0x0
	ble		_0808f7f2
	add		r0, r5, #0x0
	bl		sub_0808f628
_0808f7f2:
	mov		r1, #0xfb
	lsl		r1, r1, #0x4
	add		r0, r5, r1
	bl		sub_08002268
_0808f7fc:
	ldr		r0, [r7, #0x0]
	add		r0, r6, r0
	str		r4, [r0, #0x0]
	ldr		r0, _0808f834
	ldrb	r0, [r0, #0x0]
	asr		r0, r5
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0808f826
	add		r1, r4, #0x0
	cmp		r4, #0x0
	bge		_0808f818
	neg		r1, r4
_0808f818:
	asr		r1, r1, #0x10
	cmp		r4, #0x0
	bge		_0808f820
	neg		r1, r1
_0808f820:
	add		r0, r5, #0x0
	bl		sub_08096514
_0808f826:
	add		r5, #0x1
	cmp		r5, #0x2
	ble		_0808f79a
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8F832, 0x2

_0808f834:	.4byte 0x0200DD29
	bx		lr

.incbin "base.gba", 0x8F83A, 0x2
_0808f83c:
.incbin "base.gba", 0x8F83C, 0x4
.incbin "base.gba", 0x8F840, 0x4
.incbin "base.gba", 0x8F844, 0x4
.incbin "base.gba", 0x8F848, 0x4
.incbin "base.gba", 0x8F84C, 0x4
.incbin "base.gba", 0x8F850, 0x4
_0808f854:
.incbin "base.gba", 0x8F854, 0x4
.incbin "base.gba", 0x8F858, 0x4
.incbin "base.gba", 0x8F85C, 0x4
.incbin "base.gba", 0x8F860, 0x4
.incbin "base.gba", 0x8F864, 0x4
.incbin "base.gba", 0x8F868, 0x4
.incbin "base.gba", 0x8F86C, 0x4
.incbin "base.gba", 0x8F870, 0x4
.incbin "base.gba", 0x8F874, 0x4
.incbin "base.gba", 0x8F878, 0x4
.incbin "base.gba", 0x8F87C, 0x4
.incbin "base.gba", 0x8F880, 0x4
.incbin "base.gba", 0x8F884, 0x4
.incbin "base.gba", 0x8F888, 0x4
.incbin "base.gba", 0x8F88C, 0x4
.incbin "base.gba", 0x8F890, 0x4
.incbin "base.gba", 0x8F894, 0x4
.incbin "base.gba", 0x8F898, 0x4
.incbin "base.gba", 0x8F89C, 0x4
.incbin "base.gba", 0x8F8A0, 0x4
.incbin "base.gba", 0x8F8A4, 0x4
.incbin "base.gba", 0x8F8A8, 0x4
.incbin "base.gba", 0x8F8AC, 0x4
.incbin "base.gba", 0x8F8B0, 0x4
.incbin "base.gba", 0x8F8B4, 0x4
.incbin "base.gba", 0x8F8B8, 0x4
.incbin "base.gba", 0x8F8BC, 0x4
.incbin "base.gba", 0x8F8C0, 0x4
.incbin "base.gba", 0x8F8C4, 0x4
.incbin "base.gba", 0x8F8C8, 0x4
_0808f8cc:
.incbin "base.gba", 0x8F8CC, 0x4
.incbin "base.gba", 0x8F8D0, 0x4
.incbin "base.gba", 0x8F8D4, 0x4
.incbin "base.gba", 0x8F8D8, 0x4
.incbin "base.gba", 0x8F8DC, 0x4
.incbin "base.gba", 0x8F8E0, 0x4
.incbin "base.gba", 0x8F8E4, 0x4
.incbin "base.gba", 0x8F8E8, 0x4
.incbin "base.gba", 0x8F8EC, 0x4
.incbin "base.gba", 0x8F8F0, 0x4
.incbin "base.gba", 0x8F8F4, 0x4
.incbin "base.gba", 0x8F8F8, 0x4
.incbin "base.gba", 0x8F8FC, 0x4
.incbin "base.gba", 0x8F900, 0x4
.incbin "base.gba", 0x8F904, 0x4
.incbin "base.gba", 0x8F908, 0x4
.incbin "base.gba", 0x8F90C, 0x4
.incbin "base.gba", 0x8F910, 0x4
.incbin "base.gba", 0x8F914, 0x4
.incbin "base.gba", 0x8F918, 0x4
.incbin "base.gba", 0x8F91C, 0x4
.incbin "base.gba", 0x8F920, 0x4
.incbin "base.gba", 0x8F924, 0x4
.incbin "base.gba", 0x8F928, 0x4
.incbin "base.gba", 0x8F92C, 0x4
.incbin "base.gba", 0x8F930, 0x4
.incbin "base.gba", 0x8F934, 0x4
.incbin "base.gba", 0x8F938, 0x4
.incbin "base.gba", 0x8F93C, 0x4
.incbin "base.gba", 0x8F940, 0x4
.incbin "base.gba", 0x8F944, 0x4
.incbin "base.gba", 0x8F948, 0x4
.incbin "base.gba", 0x8F94C, 0x4
.incbin "base.gba", 0x8F950, 0x4
.incbin "base.gba", 0x8F954, 0x4
.incbin "base.gba", 0x8F958, 0x4
.incbin "base.gba", 0x8F95C, 0x4
.incbin "base.gba", 0x8F960, 0x4
.incbin "base.gba", 0x8F964, 0x4
.incbin "base.gba", 0x8F968, 0x4
.incbin "base.gba", 0x8F96C, 0x4
.incbin "base.gba", 0x8F970, 0x4
.incbin "base.gba", 0x8F974, 0x4
.incbin "base.gba", 0x8F978, 0x4
.incbin "base.gba", 0x8F97C, 0x4
_0808f980:
.incbin "base.gba", 0x8F980, 0x4
.incbin "base.gba", 0x8F984, 0x4
.incbin "base.gba", 0x8F988, 0x4
.incbin "base.gba", 0x8F98C, 0x4
.incbin "base.gba", 0x8F990, 0x4
.incbin "base.gba", 0x8F994, 0x4
.incbin "base.gba", 0x8F998, 0x4
.incbin "base.gba", 0x8F99C, 0x4
.incbin "base.gba", 0x8F9A0, 0x4
.incbin "base.gba", 0x8F9A4, 0x4
.incbin "base.gba", 0x8F9A8, 0x4
.incbin "base.gba", 0x8F9AC, 0x4
.incbin "base.gba", 0x8F9B0, 0x4
.incbin "base.gba", 0x8F9B4, 0x4
.incbin "base.gba", 0x8F9B8, 0x4
.incbin "base.gba", 0x8F9BC, 0x4
.incbin "base.gba", 0x8F9C0, 0x4
.incbin "base.gba", 0x8F9C4, 0x4
.incbin "base.gba", 0x8F9C8, 0x4
.incbin "base.gba", 0x8F9CC, 0x4
.incbin "base.gba", 0x8F9D0, 0x4
.incbin "base.gba", 0x8F9D4, 0x4
.incbin "base.gba", 0x8F9D8, 0x4
.incbin "base.gba", 0x8F9DC, 0x4
.incbin "base.gba", 0x8F9E0, 0x4
.incbin "base.gba", 0x8F9E4, 0x4
.incbin "base.gba", 0x8F9E8, 0x4
.incbin "base.gba", 0x8F9EC, 0x4
.incbin "base.gba", 0x8F9F0, 0x4
.incbin "base.gba", 0x8F9F4, 0x4
.incbin "base.gba", 0x8F9F8, 0x4
.incbin "base.gba", 0x8F9FC, 0x4
.incbin "base.gba", 0x8FA00, 0x4
.incbin "base.gba", 0x8FA04, 0x4
.incbin "base.gba", 0x8FA08, 0x4
.incbin "base.gba", 0x8FA0C, 0x4
.incbin "base.gba", 0x8FA10, 0x4
.incbin "base.gba", 0x8FA14, 0x4
.incbin "base.gba", 0x8FA18, 0x4
.incbin "base.gba", 0x8FA1C, 0x4
.incbin "base.gba", 0x8FA20, 0x4
.incbin "base.gba", 0x8FA24, 0x4
_0808fa28:
.incbin "base.gba", 0x8FA28, 0x4
.incbin "base.gba", 0x8FA2C, 0x4
.incbin "base.gba", 0x8FA30, 0x4
.incbin "base.gba", 0x8FA34, 0x4
.incbin "base.gba", 0x8FA38, 0x4
.incbin "base.gba", 0x8FA3C, 0x4
.incbin "base.gba", 0x8FA40, 0x4
.incbin "base.gba", 0x8FA44, 0x4
.incbin "base.gba", 0x8FA48, 0x4
.incbin "base.gba", 0x8FA4C, 0x4
.incbin "base.gba", 0x8FA50, 0x4
.incbin "base.gba", 0x8FA54, 0x4
.incbin "base.gba", 0x8FA58, 0x4
.incbin "base.gba", 0x8FA5C, 0x4
.incbin "base.gba", 0x8FA60, 0x4
.incbin "base.gba", 0x8FA64, 0x4
.incbin "base.gba", 0x8FA68, 0x4
.incbin "base.gba", 0x8FA6C, 0x4
.incbin "base.gba", 0x8FA70, 0x4
.incbin "base.gba", 0x8FA74, 0x4
.incbin "base.gba", 0x8FA78, 0x4
.incbin "base.gba", 0x8FA7C, 0x4
.incbin "base.gba", 0x8FA80, 0x4
.incbin "base.gba", 0x8FA84, 0x4
.incbin "base.gba", 0x8FA88, 0x4
.incbin "base.gba", 0x8FA8C, 0x4
.incbin "base.gba", 0x8FA90, 0x4
.incbin "base.gba", 0x8FA94, 0x4
.incbin "base.gba", 0x8FA98, 0x4
.incbin "base.gba", 0x8FA9C, 0x4
.incbin "base.gba", 0x8FAA0, 0x4
.incbin "base.gba", 0x8FAA4, 0x4
.incbin "base.gba", 0x8FAA8, 0x4
.incbin "base.gba", 0x8FAAC, 0x4
.incbin "base.gba", 0x8FAB0, 0x4
.incbin "base.gba", 0x8FAB4, 0x4
.incbin "base.gba", 0x8FAB8, 0x4
.incbin "base.gba", 0x8FABC, 0x4
.incbin "base.gba", 0x8FAC0, 0x4
.incbin "base.gba", 0x8FAC4, 0x4
.incbin "base.gba", 0x8FAC8, 0x4
_0808facc:
.incbin "base.gba", 0x8FACC, 0x4
.incbin "base.gba", 0x8FAD0, 0x4
.incbin "base.gba", 0x8FAD4, 0x4
.incbin "base.gba", 0x8FAD8, 0x4
.incbin "base.gba", 0x8FADC, 0x4
.incbin "base.gba", 0x8FAE0, 0x4
.incbin "base.gba", 0x8FAE4, 0x4
.incbin "base.gba", 0x8FAE8, 0x4
.incbin "base.gba", 0x8FAEC, 0x4
.incbin "base.gba", 0x8FAF0, 0x4
.incbin "base.gba", 0x8FAF4, 0x4
.incbin "base.gba", 0x8FAF8, 0x4
.incbin "base.gba", 0x8FAFC, 0x4
.incbin "base.gba", 0x8FB00, 0x4
.incbin "base.gba", 0x8FB04, 0x4
.incbin "base.gba", 0x8FB08, 0x4
.incbin "base.gba", 0x8FB0C, 0x4
.incbin "base.gba", 0x8FB10, 0x4
.incbin "base.gba", 0x8FB14, 0x4
.incbin "base.gba", 0x8FB18, 0x4
.incbin "base.gba", 0x8FB1C, 0x4
.incbin "base.gba", 0x8FB20, 0x4
.incbin "base.gba", 0x8FB24, 0x4
.incbin "base.gba", 0x8FB28, 0x4
.incbin "base.gba", 0x8FB2C, 0x4
.incbin "base.gba", 0x8FB30, 0x4
.incbin "base.gba", 0x8FB34, 0x4
.incbin "base.gba", 0x8FB38, 0x4
.incbin "base.gba", 0x8FB3C, 0x4
.incbin "base.gba", 0x8FB40, 0x4
.incbin "base.gba", 0x8FB44, 0x4
.incbin "base.gba", 0x8FB48, 0x4
.incbin "base.gba", 0x8FB4C, 0x4
.incbin "base.gba", 0x8FB50, 0x4
.incbin "base.gba", 0x8FB54, 0x4
.incbin "base.gba", 0x8FB58, 0x4
.incbin "base.gba", 0x8FB5C, 0x4
.incbin "base.gba", 0x8FB60, 0x4
.incbin "base.gba", 0x8FB64, 0x4
.incbin "base.gba", 0x8FB68, 0x4
.incbin "base.gba", 0x8FB6C, 0x4
.incbin "base.gba", 0x8FB70, 0x4
.incbin "base.gba", 0x8FB74, 0x4
.incbin "base.gba", 0x8FB78, 0x4
.incbin "base.gba", 0x8FB7C, 0x4
.incbin "base.gba", 0x8FB80, 0x4
.incbin "base.gba", 0x8FB84, 0x4
.incbin "base.gba", 0x8FB88, 0x4
.incbin "base.gba", 0x8FB8C, 0x4
.incbin "base.gba", 0x8FB90, 0x4
.incbin "base.gba", 0x8FB94, 0x4
.incbin "base.gba", 0x8FB98, 0x4
.incbin "base.gba", 0x8FB9C, 0x4
.incbin "base.gba", 0x8FBA0, 0x4
.incbin "base.gba", 0x8FBA4, 0x4
.incbin "base.gba", 0x8FBA8, 0x4
.incbin "base.gba", 0x8FBAC, 0x4
.incbin "base.gba", 0x8FBB0, 0x4
.incbin "base.gba", 0x8FBB4, 0x4
.incbin "base.gba", 0x8FBB8, 0x4
.incbin "base.gba", 0x8FBBC, 0x4
.incbin "base.gba", 0x8FBC0, 0x4
_0808fbc4:
.incbin "base.gba", 0x8FBC4, 0x4
.incbin "base.gba", 0x8FBC8, 0x4
.incbin "base.gba", 0x8FBCC, 0x4
.incbin "base.gba", 0x8FBD0, 0x4
.incbin "base.gba", 0x8FBD4, 0x4
.incbin "base.gba", 0x8FBD8, 0x4
.incbin "base.gba", 0x8FBDC, 0x4
.incbin "base.gba", 0x8FBE0, 0x4
.incbin "base.gba", 0x8FBE4, 0x4
.incbin "base.gba", 0x8FBE8, 0x4
.incbin "base.gba", 0x8FBEC, 0x4
.incbin "base.gba", 0x8FBF0, 0x4
.incbin "base.gba", 0x8FBF4, 0x4
.incbin "base.gba", 0x8FBF8, 0x4
.incbin "base.gba", 0x8FBFC, 0x4
.incbin "base.gba", 0x8FC00, 0x4
.incbin "base.gba", 0x8FC04, 0x4
.incbin "base.gba", 0x8FC08, 0x4
.incbin "base.gba", 0x8FC0C, 0x4
.incbin "base.gba", 0x8FC10, 0x4
.incbin "base.gba", 0x8FC14, 0x4
.incbin "base.gba", 0x8FC18, 0x4
.incbin "base.gba", 0x8FC1C, 0x4
.incbin "base.gba", 0x8FC20, 0x4
.incbin "base.gba", 0x8FC24, 0x4
.incbin "base.gba", 0x8FC28, 0x4
.incbin "base.gba", 0x8FC2C, 0x4
.incbin "base.gba", 0x8FC30, 0x4
.incbin "base.gba", 0x8FC34, 0x4
.incbin "base.gba", 0x8FC38, 0x4
.incbin "base.gba", 0x8FC3C, 0x4
.incbin "base.gba", 0x8FC40, 0x4
.incbin "base.gba", 0x8FC44, 0x4
.incbin "base.gba", 0x8FC48, 0x4
.incbin "base.gba", 0x8FC4C, 0x4
.incbin "base.gba", 0x8FC50, 0x4
.incbin "base.gba", 0x8FC54, 0x4
.incbin "base.gba", 0x8FC58, 0x4
.incbin "base.gba", 0x8FC5C, 0x4
.incbin "base.gba", 0x8FC60, 0x4
.incbin "base.gba", 0x8FC64, 0x4
.incbin "base.gba", 0x8FC68, 0x4
.incbin "base.gba", 0x8FC6C, 0x4
.incbin "base.gba", 0x8FC70, 0x4
.incbin "base.gba", 0x8FC74, 0x4
.incbin "base.gba", 0x8FC78, 0x4
.incbin "base.gba", 0x8FC7C, 0x4
.incbin "base.gba", 0x8FC80, 0x4
.incbin "base.gba", 0x8FC84, 0x4
.incbin "base.gba", 0x8FC88, 0x4
.incbin "base.gba", 0x8FC8C, 0x4
.incbin "base.gba", 0x8FC90, 0x4
.incbin "base.gba", 0x8FC94, 0x4
.incbin "base.gba", 0x8FC98, 0x4
.incbin "base.gba", 0x8FC9C, 0x4
.incbin "base.gba", 0x8FCA0, 0x4
_0808fca4:
.incbin "base.gba", 0x8FCA4, 0x4
.incbin "base.gba", 0x8FCA8, 0x4
.incbin "base.gba", 0x8FCAC, 0x4
.incbin "base.gba", 0x8FCB0, 0x4
.incbin "base.gba", 0x8FCB4, 0x4
.incbin "base.gba", 0x8FCB8, 0x4
.incbin "base.gba", 0x8FCBC, 0x4
.incbin "base.gba", 0x8FCC0, 0x4
.incbin "base.gba", 0x8FCC4, 0x4
.incbin "base.gba", 0x8FCC8, 0x4
.incbin "base.gba", 0x8FCCC, 0x4
.incbin "base.gba", 0x8FCD0, 0x4
.incbin "base.gba", 0x8FCD4, 0x4
.incbin "base.gba", 0x8FCD8, 0x4
.incbin "base.gba", 0x8FCDC, 0x4
.incbin "base.gba", 0x8FCE0, 0x4
.incbin "base.gba", 0x8FCE4, 0x4
.incbin "base.gba", 0x8FCE8, 0x4
.incbin "base.gba", 0x8FCEC, 0x4
.incbin "base.gba", 0x8FCF0, 0x4
.incbin "base.gba", 0x8FCF4, 0x4
.incbin "base.gba", 0x8FCF8, 0x4
.incbin "base.gba", 0x8FCFC, 0x4
.incbin "base.gba", 0x8FD00, 0x4
.incbin "base.gba", 0x8FD04, 0x4
.incbin "base.gba", 0x8FD08, 0x4
.incbin "base.gba", 0x8FD0C, 0x4
.incbin "base.gba", 0x8FD10, 0x4
.incbin "base.gba", 0x8FD14, 0x4
.incbin "base.gba", 0x8FD18, 0x4
.incbin "base.gba", 0x8FD1C, 0x4
.incbin "base.gba", 0x8FD20, 0x4
.incbin "base.gba", 0x8FD24, 0x4
.incbin "base.gba", 0x8FD28, 0x4
.incbin "base.gba", 0x8FD2C, 0x4
.incbin "base.gba", 0x8FD30, 0x4
.incbin "base.gba", 0x8FD34, 0x4
.incbin "base.gba", 0x8FD38, 0x4
_0808fd3c:
.incbin "base.gba", 0x8FD3C, 0x4
.incbin "base.gba", 0x8FD40, 0x4
.incbin "base.gba", 0x8FD44, 0x4
.incbin "base.gba", 0x8FD48, 0x4
.incbin "base.gba", 0x8FD4C, 0x4
.incbin "base.gba", 0x8FD50, 0x4
.incbin "base.gba", 0x8FD54, 0x4
.incbin "base.gba", 0x8FD58, 0x4
.incbin "base.gba", 0x8FD5C, 0x4
.incbin "base.gba", 0x8FD60, 0x4
.incbin "base.gba", 0x8FD64, 0x4
.incbin "base.gba", 0x8FD68, 0x4
.incbin "base.gba", 0x8FD6C, 0x4
.incbin "base.gba", 0x8FD70, 0x4
.incbin "base.gba", 0x8FD74, 0x4
.incbin "base.gba", 0x8FD78, 0x4
.incbin "base.gba", 0x8FD7C, 0x4
.incbin "base.gba", 0x8FD80, 0x4
.incbin "base.gba", 0x8FD84, 0x4
.incbin "base.gba", 0x8FD88, 0x4
.incbin "base.gba", 0x8FD8C, 0x4
.incbin "base.gba", 0x8FD90, 0x4
.incbin "base.gba", 0x8FD94, 0x4
.incbin "base.gba", 0x8FD98, 0x4
.incbin "base.gba", 0x8FD9C, 0x4
.incbin "base.gba", 0x8FDA0, 0x4
.incbin "base.gba", 0x8FDA4, 0x4
.incbin "base.gba", 0x8FDA8, 0x4
.incbin "base.gba", 0x8FDAC, 0x4
.incbin "base.gba", 0x8FDB0, 0x4
.incbin "base.gba", 0x8FDB4, 0x4
.incbin "base.gba", 0x8FDB8, 0x4
.incbin "base.gba", 0x8FDBC, 0x4
.incbin "base.gba", 0x8FDC0, 0x4
.incbin "base.gba", 0x8FDC4, 0x4
.incbin "base.gba", 0x8FDC8, 0x4
.incbin "base.gba", 0x8FDCC, 0x4
.incbin "base.gba", 0x8FDD0, 0x4
.incbin "base.gba", 0x8FDD4, 0x4
.incbin "base.gba", 0x8FDD8, 0x4
.incbin "base.gba", 0x8FDDC, 0x4
.incbin "base.gba", 0x8FDE0, 0x4
.incbin "base.gba", 0x8FDE4, 0x4
.incbin "base.gba", 0x8FDE8, 0x4
.incbin "base.gba", 0x8FDEC, 0x4
.incbin "base.gba", 0x8FDF0, 0x4
.incbin "base.gba", 0x8FDF4, 0x4
.incbin "base.gba", 0x8FDF8, 0x4
.incbin "base.gba", 0x8FDFC, 0x4
.incbin "base.gba", 0x8FE00, 0x4
.incbin "base.gba", 0x8FE04, 0x4
.incbin "base.gba", 0x8FE08, 0x4
.incbin "base.gba", 0x8FE0C, 0x4
_0808fe10:
.incbin "base.gba", 0x8FE10, 0x4
.incbin "base.gba", 0x8FE14, 0x4
.incbin "base.gba", 0x8FE18, 0x4
_0808fe1c:
.incbin "base.gba", 0x8FE1C, 0x4
.incbin "base.gba", 0x8FE20, 0x4
.incbin "base.gba", 0x8FE24, 0x4
.incbin "base.gba", 0x8FE28, 0x4
.incbin "base.gba", 0x8FE2C, 0x4
.incbin "base.gba", 0x8FE30, 0x4
.incbin "base.gba", 0x8FE34, 0x4
.incbin "base.gba", 0x8FE38, 0x4
.incbin "base.gba", 0x8FE3C, 0x4
.incbin "base.gba", 0x8FE40, 0x4
.incbin "base.gba", 0x8FE44, 0x4
.incbin "base.gba", 0x8FE48, 0x4
.incbin "base.gba", 0x8FE4C, 0x4
.incbin "base.gba", 0x8FE50, 0x4
.incbin "base.gba", 0x8FE54, 0x4
.incbin "base.gba", 0x8FE58, 0x4
.incbin "base.gba", 0x8FE5C, 0x4
.incbin "base.gba", 0x8FE60, 0x4
.incbin "base.gba", 0x8FE64, 0x4
.incbin "base.gba", 0x8FE68, 0x4
.incbin "base.gba", 0x8FE6C, 0x4
.incbin "base.gba", 0x8FE70, 0x4
.incbin "base.gba", 0x8FE74, 0x4
.incbin "base.gba", 0x8FE78, 0x4
.incbin "base.gba", 0x8FE7C, 0x4
.incbin "base.gba", 0x8FE80, 0x4
.incbin "base.gba", 0x8FE84, 0x4
.incbin "base.gba", 0x8FE88, 0x4
.incbin "base.gba", 0x8FE8C, 0x4
.incbin "base.gba", 0x8FE90, 0x4
.incbin "base.gba", 0x8FE94, 0x4
.incbin "base.gba", 0x8FE98, 0x4
.incbin "base.gba", 0x8FE9C, 0x4
.incbin "base.gba", 0x8FEA0, 0x4
.incbin "base.gba", 0x8FEA4, 0x4
.incbin "base.gba", 0x8FEA8, 0x4
.incbin "base.gba", 0x8FEAC, 0x4
.incbin "base.gba", 0x8FEB0, 0x4
_0808feb4:
.incbin "base.gba", 0x8FEB4, 0x4
.incbin "base.gba", 0x8FEB8, 0x4
.incbin "base.gba", 0x8FEBC, 0x4
.incbin "base.gba", 0x8FEC0, 0x4
.incbin "base.gba", 0x8FEC4, 0x4
.incbin "base.gba", 0x8FEC8, 0x4
.incbin "base.gba", 0x8FECC, 0x4
.incbin "base.gba", 0x8FED0, 0x4
.incbin "base.gba", 0x8FED4, 0x4
.incbin "base.gba", 0x8FED8, 0x4
.incbin "base.gba", 0x8FEDC, 0x4
.incbin "base.gba", 0x8FEE0, 0x4
.incbin "base.gba", 0x8FEE4, 0x4
.incbin "base.gba", 0x8FEE8, 0x4
.incbin "base.gba", 0x8FEEC, 0x4
.incbin "base.gba", 0x8FEF0, 0x4
.incbin "base.gba", 0x8FEF4, 0x4
.incbin "base.gba", 0x8FEF8, 0x4
.incbin "base.gba", 0x8FEFC, 0x4
.incbin "base.gba", 0x8FF00, 0x4
.incbin "base.gba", 0x8FF04, 0x4
.incbin "base.gba", 0x8FF08, 0x4
_0808ff0c:
.incbin "base.gba", 0x8FF0C, 0x4
.incbin "base.gba", 0x8FF10, 0x4
.incbin "base.gba", 0x8FF14, 0x4
_0808ff18:
.incbin "base.gba", 0x8FF18, 0x4
.incbin "base.gba", 0x8FF1C, 0x4
.incbin "base.gba", 0x8FF20, 0x4
.incbin "base.gba", 0x8FF24, 0x4
.incbin "base.gba", 0x8FF28, 0x4
.incbin "base.gba", 0x8FF2C, 0x4
.incbin "base.gba", 0x8FF30, 0x4
.incbin "base.gba", 0x8FF34, 0x4
.incbin "base.gba", 0x8FF38, 0x4
.incbin "base.gba", 0x8FF3C, 0x4
.incbin "base.gba", 0x8FF40, 0x4
.incbin "base.gba", 0x8FF44, 0x4
.incbin "base.gba", 0x8FF48, 0x4
.incbin "base.gba", 0x8FF4C, 0x4
.incbin "base.gba", 0x8FF50, 0x4
.incbin "base.gba", 0x8FF54, 0x4
.incbin "base.gba", 0x8FF58, 0x4
.incbin "base.gba", 0x8FF5C, 0x4
.incbin "base.gba", 0x8FF60, 0x4
.incbin "base.gba", 0x8FF64, 0x4
.incbin "base.gba", 0x8FF68, 0x4
.incbin "base.gba", 0x8FF6C, 0x4
.incbin "base.gba", 0x8FF70, 0x4
.incbin "base.gba", 0x8FF74, 0x4
.incbin "base.gba", 0x8FF78, 0x4
.incbin "base.gba", 0x8FF7C, 0x4
.incbin "base.gba", 0x8FF80, 0x4
.incbin "base.gba", 0x8FF84, 0x4
.incbin "base.gba", 0x8FF88, 0x4
.incbin "base.gba", 0x8FF8C, 0x4
.incbin "base.gba", 0x8FF90, 0x4
.incbin "base.gba", 0x8FF94, 0x4
.incbin "base.gba", 0x8FF98, 0x4
.incbin "base.gba", 0x8FF9C, 0x4
.incbin "base.gba", 0x8FFA0, 0x4
.incbin "base.gba", 0x8FFA4, 0x4
.incbin "base.gba", 0x8FFA8, 0x4
.incbin "base.gba", 0x8FFAC, 0x4
.incbin "base.gba", 0x8FFB0, 0x4
.incbin "base.gba", 0x8FFB4, 0x4
.incbin "base.gba", 0x8FFB8, 0x4
.incbin "base.gba", 0x8FFBC, 0x4
.incbin "base.gba", 0x8FFC0, 0x4
.incbin "base.gba", 0x8FFC4, 0x4
.incbin "base.gba", 0x8FFC8, 0x4
.incbin "base.gba", 0x8FFCC, 0x4
.incbin "base.gba", 0x8FFD0, 0x4
.incbin "base.gba", 0x8FFD4, 0x4
.incbin "base.gba", 0x8FFD8, 0x4
.incbin "base.gba", 0x8FFDC, 0x4
.incbin "base.gba", 0x8FFE0, 0x4
.incbin "base.gba", 0x8FFE4, 0x4
.incbin "base.gba", 0x8FFE8, 0x4
.incbin "base.gba", 0x8FFEC, 0x4
.incbin "base.gba", 0x8FFF0, 0x4
.incbin "base.gba", 0x8FFF4, 0x4
_0808fff8:
.incbin "base.gba", 0x8FFF8, 0x4
.incbin "base.gba", 0x8FFFC, 0x4
.incbin "base.gba", 0x90000, 0x4
.incbin "base.gba", 0x90004, 0x4
.incbin "base.gba", 0x90008, 0x4
.incbin "base.gba", 0x9000C, 0x4
.incbin "base.gba", 0x90010, 0x4
.incbin "base.gba", 0x90014, 0x4
.incbin "base.gba", 0x90018, 0x4
.incbin "base.gba", 0x9001C, 0x4
.incbin "base.gba", 0x90020, 0x4
.incbin "base.gba", 0x90024, 0x4
.incbin "base.gba", 0x90028, 0x4
.incbin "base.gba", 0x9002C, 0x4
.incbin "base.gba", 0x90030, 0x4
.incbin "base.gba", 0x90034, 0x4
.incbin "base.gba", 0x90038, 0x4
.incbin "base.gba", 0x9003C, 0x4
.incbin "base.gba", 0x90040, 0x4
.incbin "base.gba", 0x90044, 0x4
.incbin "base.gba", 0x90048, 0x4
.incbin "base.gba", 0x9004C, 0x4
.incbin "base.gba", 0x90050, 0x4
.incbin "base.gba", 0x90054, 0x4
.incbin "base.gba", 0x90058, 0x4
.incbin "base.gba", 0x9005C, 0x4
.incbin "base.gba", 0x90060, 0x4
.incbin "base.gba", 0x90064, 0x4
.incbin "base.gba", 0x90068, 0x4
.incbin "base.gba", 0x9006C, 0x4
.incbin "base.gba", 0x90070, 0x4
.incbin "base.gba", 0x90074, 0x4
.incbin "base.gba", 0x90078, 0x4
_0809007c:
.incbin "base.gba", 0x9007C, 0x4
.incbin "base.gba", 0x90080, 0x4
.incbin "base.gba", 0x90084, 0x4
_08090088:
.incbin "base.gba", 0x90088, 0x4
.incbin "base.gba", 0x9008C, 0x4
.incbin "base.gba", 0x90090, 0x4
.incbin "base.gba", 0x90094, 0x4
.incbin "base.gba", 0x90098, 0x4
.incbin "base.gba", 0x9009C, 0x4
.incbin "base.gba", 0x900A0, 0x4
.incbin "base.gba", 0x900A4, 0x4
.incbin "base.gba", 0x900A8, 0x4
.incbin "base.gba", 0x900AC, 0x4
.incbin "base.gba", 0x900B0, 0x4
.incbin "base.gba", 0x900B4, 0x4
.incbin "base.gba", 0x900B8, 0x4
.incbin "base.gba", 0x900BC, 0x4
.incbin "base.gba", 0x900C0, 0x4
.incbin "base.gba", 0x900C4, 0x4
.incbin "base.gba", 0x900C8, 0x4
.incbin "base.gba", 0x900CC, 0x4
.incbin "base.gba", 0x900D0, 0x4
.incbin "base.gba", 0x900D4, 0x4
.incbin "base.gba", 0x900D8, 0x4
.incbin "base.gba", 0x900DC, 0x4
.incbin "base.gba", 0x900E0, 0x4
.incbin "base.gba", 0x900E4, 0x4
.incbin "base.gba", 0x900E8, 0x4
.incbin "base.gba", 0x900EC, 0x4
.incbin "base.gba", 0x900F0, 0x4
.incbin "base.gba", 0x900F4, 0x4
.incbin "base.gba", 0x900F8, 0x4
.incbin "base.gba", 0x900FC, 0x4
.incbin "base.gba", 0x90100, 0x4
.incbin "base.gba", 0x90104, 0x4
.incbin "base.gba", 0x90108, 0x4
.incbin "base.gba", 0x9010C, 0x4
.incbin "base.gba", 0x90110, 0x4
.incbin "base.gba", 0x90114, 0x4
_08090118:
.incbin "base.gba", 0x90118, 0x4
.incbin "base.gba", 0x9011C, 0x4
.incbin "base.gba", 0x90120, 0x4
.incbin "base.gba", 0x90124, 0x4
.incbin "base.gba", 0x90128, 0x4
.incbin "base.gba", 0x9012C, 0x4
.incbin "base.gba", 0x90130, 0x4
.incbin "base.gba", 0x90134, 0x4
.incbin "base.gba", 0x90138, 0x4
.incbin "base.gba", 0x9013C, 0x4
.incbin "base.gba", 0x90140, 0x4
.incbin "base.gba", 0x90144, 0x4
.incbin "base.gba", 0x90148, 0x4
.incbin "base.gba", 0x9014C, 0x4
.incbin "base.gba", 0x90150, 0x4
.incbin "base.gba", 0x90154, 0x4
.incbin "base.gba", 0x90158, 0x4
.incbin "base.gba", 0x9015C, 0x4
.incbin "base.gba", 0x90160, 0x4
.incbin "base.gba", 0x90164, 0x4
.incbin "base.gba", 0x90168, 0x4
.incbin "base.gba", 0x9016C, 0x4
.incbin "base.gba", 0x90170, 0x4
.incbin "base.gba", 0x90174, 0x4
.incbin "base.gba", 0x90178, 0x4
.incbin "base.gba", 0x9017C, 0x4
.incbin "base.gba", 0x90180, 0x4
.incbin "base.gba", 0x90184, 0x4
.incbin "base.gba", 0x90188, 0x4
.incbin "base.gba", 0x9018C, 0x4
.incbin "base.gba", 0x90190, 0x4
.incbin "base.gba", 0x90194, 0x4
.incbin "base.gba", 0x90198, 0x4
.incbin "base.gba", 0x9019C, 0x4
.incbin "base.gba", 0x901A0, 0x4
_080901a4:
.incbin "base.gba", 0x901A4, 0x4
.incbin "base.gba", 0x901A8, 0x4
.incbin "base.gba", 0x901AC, 0x4
_080901b0:
.incbin "base.gba", 0x901B0, 0x4
.incbin "base.gba", 0x901B4, 0x4
.incbin "base.gba", 0x901B8, 0x4
.incbin "base.gba", 0x901BC, 0x4
.incbin "base.gba", 0x901C0, 0x4
.incbin "base.gba", 0x901C4, 0x4
.incbin "base.gba", 0x901C8, 0x4
.incbin "base.gba", 0x901CC, 0x4
.incbin "base.gba", 0x901D0, 0x4
.incbin "base.gba", 0x901D4, 0x4
.incbin "base.gba", 0x901D8, 0x4
.incbin "base.gba", 0x901DC, 0x4
.incbin "base.gba", 0x901E0, 0x4
.incbin "base.gba", 0x901E4, 0x4
.incbin "base.gba", 0x901E8, 0x4
.incbin "base.gba", 0x901EC, 0x4
.incbin "base.gba", 0x901F0, 0x4
.incbin "base.gba", 0x901F4, 0x4
.incbin "base.gba", 0x901F8, 0x4
.incbin "base.gba", 0x901FC, 0x4
.incbin "base.gba", 0x90200, 0x4
.incbin "base.gba", 0x90204, 0x4
.incbin "base.gba", 0x90208, 0x4
.incbin "base.gba", 0x9020C, 0x4
.incbin "base.gba", 0x90210, 0x4
.incbin "base.gba", 0x90214, 0x4
.incbin "base.gba", 0x90218, 0x4
.incbin "base.gba", 0x9021C, 0x4
.incbin "base.gba", 0x90220, 0x4
.incbin "base.gba", 0x90224, 0x4
.incbin "base.gba", 0x90228, 0x4
.incbin "base.gba", 0x9022C, 0x4
.incbin "base.gba", 0x90230, 0x4
.incbin "base.gba", 0x90234, 0x4
.incbin "base.gba", 0x90238, 0x4
.incbin "base.gba", 0x9023C, 0x4
.incbin "base.gba", 0x90240, 0x4
.incbin "base.gba", 0x90244, 0x4
.incbin "base.gba", 0x90248, 0x4
.incbin "base.gba", 0x9024C, 0x4
.incbin "base.gba", 0x90250, 0x4
.incbin "base.gba", 0x90254, 0x4
.incbin "base.gba", 0x90258, 0x4
.incbin "base.gba", 0x9025C, 0x4
.incbin "base.gba", 0x90260, 0x4
.incbin "base.gba", 0x90264, 0x4
.incbin "base.gba", 0x90268, 0x4
.incbin "base.gba", 0x9026C, 0x4
.incbin "base.gba", 0x90270, 0x4
.incbin "base.gba", 0x90274, 0x4
.incbin "base.gba", 0x90278, 0x4
.incbin "base.gba", 0x9027C, 0x4
.incbin "base.gba", 0x90280, 0x4
.incbin "base.gba", 0x90284, 0x4
_08090288:
.incbin "base.gba", 0x90288, 0x4
.incbin "base.gba", 0x9028C, 0x4
.incbin "base.gba", 0x90290, 0x4
.incbin "base.gba", 0x90294, 0x4
.incbin "base.gba", 0x90298, 0x4
.incbin "base.gba", 0x9029C, 0x4
.incbin "base.gba", 0x902A0, 0x4
.incbin "base.gba", 0x902A4, 0x4
.incbin "base.gba", 0x902A8, 0x4
.incbin "base.gba", 0x902AC, 0x4
.incbin "base.gba", 0x902B0, 0x4
.incbin "base.gba", 0x902B4, 0x4
.incbin "base.gba", 0x902B8, 0x4
.incbin "base.gba", 0x902BC, 0x4
.incbin "base.gba", 0x902C0, 0x4
.incbin "base.gba", 0x902C4, 0x4
.incbin "base.gba", 0x902C8, 0x4
.incbin "base.gba", 0x902CC, 0x4
.incbin "base.gba", 0x902D0, 0x4
.incbin "base.gba", 0x902D4, 0x4
.incbin "base.gba", 0x902D8, 0x4
.incbin "base.gba", 0x902DC, 0x4
.incbin "base.gba", 0x902E0, 0x4
.incbin "base.gba", 0x902E4, 0x4
.incbin "base.gba", 0x902E8, 0x4
.incbin "base.gba", 0x902EC, 0x4
.incbin "base.gba", 0x902F0, 0x4
.incbin "base.gba", 0x902F4, 0x4
.incbin "base.gba", 0x902F8, 0x4
.incbin "base.gba", 0x902FC, 0x4
.incbin "base.gba", 0x90300, 0x4
.incbin "base.gba", 0x90304, 0x4
.incbin "base.gba", 0x90308, 0x4
.incbin "base.gba", 0x9030C, 0x4
.incbin "base.gba", 0x90310, 0x4
.incbin "base.gba", 0x90314, 0x4
.incbin "base.gba", 0x90318, 0x4
.incbin "base.gba", 0x9031C, 0x4
.incbin "base.gba", 0x90320, 0x4
.incbin "base.gba", 0x90324, 0x4
.incbin "base.gba", 0x90328, 0x4
.incbin "base.gba", 0x9032C, 0x4
.incbin "base.gba", 0x90330, 0x4
.incbin "base.gba", 0x90334, 0x4
.incbin "base.gba", 0x90338, 0x4
.incbin "base.gba", 0x9033C, 0x4
.incbin "base.gba", 0x90340, 0x4
.incbin "base.gba", 0x90344, 0x4
.incbin "base.gba", 0x90348, 0x4
.incbin "base.gba", 0x9034C, 0x4
.incbin "base.gba", 0x90350, 0x4
.incbin "base.gba", 0x90354, 0x4
.incbin "base.gba", 0x90358, 0x4
.incbin "base.gba", 0x9035C, 0x4
.incbin "base.gba", 0x90360, 0x4
.incbin "base.gba", 0x90364, 0x4
.incbin "base.gba", 0x90368, 0x4
.incbin "base.gba", 0x9036C, 0x4
.incbin "base.gba", 0x90370, 0x4
.incbin "base.gba", 0x90374, 0x4
.incbin "base.gba", 0x90378, 0x4
.incbin "base.gba", 0x9037C, 0x4
.incbin "base.gba", 0x90380, 0x4
.incbin "base.gba", 0x90384, 0x4
.incbin "base.gba", 0x90388, 0x4
.incbin "base.gba", 0x9038C, 0x4
.incbin "base.gba", 0x90390, 0x4
.incbin "base.gba", 0x90394, 0x4
.incbin "base.gba", 0x90398, 0x4
.incbin "base.gba", 0x9039C, 0x4
.incbin "base.gba", 0x903A0, 0x4
.incbin "base.gba", 0x903A4, 0x4
.incbin "base.gba", 0x903A8, 0x4
.incbin "base.gba", 0x903AC, 0x4
.incbin "base.gba", 0x903B0, 0x4
.incbin "base.gba", 0x903B4, 0x4
.incbin "base.gba", 0x903B8, 0x4
.incbin "base.gba", 0x903BC, 0x4
.incbin "base.gba", 0x903C0, 0x4
.incbin "base.gba", 0x903C4, 0x4
.incbin "base.gba", 0x903C8, 0x4
.incbin "base.gba", 0x903CC, 0x4
.incbin "base.gba", 0x903D0, 0x4
.incbin "base.gba", 0x903D4, 0x4
.incbin "base.gba", 0x903D8, 0x4
.incbin "base.gba", 0x903DC, 0x4
.incbin "base.gba", 0x903E0, 0x4
.incbin "base.gba", 0x903E4, 0x4
.incbin "base.gba", 0x903E8, 0x4
.incbin "base.gba", 0x903EC, 0x4
.incbin "base.gba", 0x903F0, 0x4
.incbin "base.gba", 0x903F4, 0x4
.incbin "base.gba", 0x903F8, 0x4
.incbin "base.gba", 0x903FC, 0x4
.incbin "base.gba", 0x90400, 0x4
.incbin "base.gba", 0x90404, 0x4
.incbin "base.gba", 0x90408, 0x4
.incbin "base.gba", 0x9040C, 0x4
.incbin "base.gba", 0x90410, 0x4
.incbin "base.gba", 0x90414, 0x4
.incbin "base.gba", 0x90418, 0x4
.incbin "base.gba", 0x9041C, 0x4
.incbin "base.gba", 0x90420, 0x4
.incbin "base.gba", 0x90424, 0x4
.incbin "base.gba", 0x90428, 0x4
.incbin "base.gba", 0x9042C, 0x4
.incbin "base.gba", 0x90430, 0x4
.incbin "base.gba", 0x90434, 0x4
.incbin "base.gba", 0x90438, 0x4
.incbin "base.gba", 0x9043C, 0x4
.incbin "base.gba", 0x90440, 0x4
.incbin "base.gba", 0x90444, 0x4
.incbin "base.gba", 0x90448, 0x4
.incbin "base.gba", 0x9044C, 0x4
.incbin "base.gba", 0x90450, 0x4
.incbin "base.gba", 0x90454, 0x4
.incbin "base.gba", 0x90458, 0x4
.incbin "base.gba", 0x9045C, 0x4
.incbin "base.gba", 0x90460, 0x4
.incbin "base.gba", 0x90464, 0x4
.incbin "base.gba", 0x90468, 0x4
.incbin "base.gba", 0x9046C, 0x4
.incbin "base.gba", 0x90470, 0x4
.incbin "base.gba", 0x90474, 0x4
.incbin "base.gba", 0x90478, 0x4
.incbin "base.gba", 0x9047C, 0x4
.incbin "base.gba", 0x90480, 0x4
.incbin "base.gba", 0x90484, 0x4
.incbin "base.gba", 0x90488, 0x4
.incbin "base.gba", 0x9048C, 0x4
.incbin "base.gba", 0x90490, 0x4
.incbin "base.gba", 0x90494, 0x4
.incbin "base.gba", 0x90498, 0x4
.incbin "base.gba", 0x9049C, 0x4
.incbin "base.gba", 0x904A0, 0x4
.incbin "base.gba", 0x904A4, 0x4
.incbin "base.gba", 0x904A8, 0x4
.incbin "base.gba", 0x904AC, 0x4
.incbin "base.gba", 0x904B0, 0x4
.incbin "base.gba", 0x904B4, 0x4
.incbin "base.gba", 0x904B8, 0x4
.incbin "base.gba", 0x904BC, 0x4
.incbin "base.gba", 0x904C0, 0x4
.incbin "base.gba", 0x904C4, 0x4
.incbin "base.gba", 0x904C8, 0x4
.incbin "base.gba", 0x904CC, 0x4
.incbin "base.gba", 0x904D0, 0x4

	thumb_func_start sub_080904d4
sub_080904d4:
	push	{ r4, lr }
	add		r3, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	cmp		r2, #0x1
	bne		_08090510
	add		r2, r3, #0x0
	add		r2, #0xe8
	str		r2, [r1, #0x0]
	ldr		r1, _080904fc
	ldr		r0, _08090500
	str		r0, [r1, #0x0]
	str		r2, [r1, #0x4]
	ldr		r0, _08090504
	str		r0, [r1, #0x8]
	ldr		r0, [r1, #0x8]
	ldr		r1, _08090508
	ldr		r2, _0809050c
	add		r0, r3, r2
	b		_0809051a

_080904fc:	.4byte 0x040000D4
_08090500:	.4byte 0x08091010
_08090504:	.4byte 0x800004B0
_08090508:	.4byte 0x0200CCA8
_0809050c:	.4byte 0x00000A48

_08090510:
	ldr		r0, _08090594
	str		r0, [r1, #0x0]
	ldr		r1, _08090598
	add		r0, r3, #0x0
	add		r0, #0xe8
_0809051a:
	str		r0, [r1, #0x0]
	add		r2, r1, #0x0
	ldr		r1, [r2, #0x0]
	str		r3, [r1, #0x28]
	add		r0, r3, #0x0
	add		r0, #0x74
	str		r0, [r1, #0x24]
	ldrb	r0, [r1, #0x14]
	mov		r4, #0x0
	mov		r0, #0x1
	strb	r0, [r1, #0x14]
	ldr		r0, [r2, #0x0]
	str		r4, [r0, #0x0]
	strb	r4, [r0, #0x4]
	ldr		r0, [r2, #0x0]
	strb	r4, [r0, #0x5]
	ldr		r0, [r2, #0x0]
	strb	r4, [r0, #0x7]
	ldr		r0, [r2, #0x0]
	strb	r4, [r0, #0x8]
	ldr		r0, [r2, #0x0]
	strb	r4, [r0, #0x9]
	ldr		r0, [r2, #0x0]
	str		r4, [r0, #0xc]
	ldrb	r1, [r0, #0x10]
	strb	r4, [r0, #0x10]
	ldr		r0, [r2, #0x0]
	ldrh	r1, [r0, #0x12]
	mov		r1, #0x0
	strh	r4, [r0, #0x12]
	strb	r1, [r0, #0x15]
	ldr		r0, [r2, #0x0]
	add		r0, #0x2c
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	ldr		r1, _0809059c
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	sub		r1, #0xc
	ldr		r2, _080905a0
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	bl		sub_08090710
	bl		sub_0809071c
	ldr		r3, _080905a4
	ldrh	r2, [r3, #0x0]
	strh	r4, [r3, #0x0]
	ldr		r4, _080905a8
	ldrh	r0, [r4, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r4, #0x0]
	strh	r2, [r3, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90592, 0x2

_08090594:	.4byte 0x08091010
_08090598:	.4byte 0x0200CCA8
_0809059c:	.4byte 0x04000134
_080905a0:	.4byte 0x00005003
_080905a4:	.4byte 0x04000208
_080905a8:	.4byte 0x04000200
	thumb_func_end sub_080904d4

	thumb_func_start sub_080905ac
sub_080905ac:
	push	{ r4, r5, lr }
	ldr		r2, _080905d8
	str		r2, [r0, #0x0]
	ldr		r5, _080905dc
	ldr		r0, [r5, #0x0]
	mov		r4, #0x0
	strb	r1, [r0, #0xa]
	ldr		r3, _080905e0
	ldrh	r2, [r3, #0x0]
	strh	r4, [r3, #0x0]
	ldr		r4, _080905e4
	ldr		r1, [r5, #0x0]
	mov		r0, #0x8
	ldrb	r1, [r1, #0xa]
	lsl		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r1
	strh	r0, [r4, #0x0]
	strh	r2, [r3, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080905d8:	.4byte 0x08090CD1
_080905dc:	.4byte 0x0200CCA8
_080905e0:	.4byte 0x04000208
_080905e4:	.4byte 0x04000200
	thumb_func_end sub_080905ac

	thumb_func_start sub_080905e8
sub_080905e8:
	push	{ r4, r5, lr }
	ldr		r5, _08090680
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	add		r0, r1, #0x0
	strh	r0, [r5, #0x0]
	ldr		r2, _08090684
	add		r0, r2, #0x0
	strh	r0, [r5, #0x0]
	ldr		r1, _08090688
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0xa]
	lsl		r0, r0, #0x2
	ldr		r3, _0809068c
	add		r2, r0, r3
	ldr		r4, _08090690
	add		r3, r0, r4
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, #0x83
	strh	r0, [r3, #0x0]
	ldrh	r0, [r2, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x11
	bhi		_08090628
	ldr		r0, _08090694
	add		r1, r0, #0x0
_08090620:
	strh	r1, [r5, #0x0]
	ldrh	r0, [r2, #0x0]
	cmp		r0, #0x11
	bls		_08090620
_08090628:
	mov		r0, #0x3
	strh	r0, [r3, #0x0]
	ldr		r1, _08090680
	ldr		r2, _08090684
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	sub		r1, #0xc
	ldr		r3, _08090698
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	strb	r2, [r0, #0x4]
	ldr		r0, [r4, #0x0]
	strb	r2, [r0, #0x5]
	ldr		r0, [r4, #0x0]
	strb	r2, [r0, #0x6]
	ldr		r0, [r4, #0x0]
	strb	r2, [r0, #0x7]
	ldr		r0, [r4, #0x0]
	strb	r2, [r0, #0x8]
	ldr		r0, [r4, #0x0]
	strb	r2, [r0, #0x9]
	ldr		r0, [r4, #0x0]
	str		r2, [r0, #0xc]
	ldrb	r1, [r0, #0x10]
	strb	r2, [r0, #0x10]
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r1, #0x12]
	mov		r3, #0x0
	strh	r2, [r1, #0x12]
	ldrb	r0, [r1, #0x14]
	mov		r0, #0x1
	strb	r0, [r1, #0x14]
	ldr		r0, [r4, #0x0]
	strb	r3, [r0, #0x15]
	ldr		r0, [r4, #0x0]
	add		r0, #0x2c
	ldrb	r1, [r0, #0x0]
	strb	r3, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08090680:	.4byte 0x04000134
_08090684:	.4byte 0x000080A0
_08090688:	.4byte 0x0200CCA8
_0809068c:	.4byte 0x04000100
_08090690:	.4byte 0x04000102
_08090694:	.4byte 0x000080A2
_08090698:	.4byte 0x00005003

.incbin "base.gba", 0x9069C, 0x14
	thumb_func_end sub_080905e8

	thumb_func_start sub_080906b0
sub_080906b0:
	push	{ lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r1, r0, #0x0
	cmp		r0, #0x1
	beq		_080906dc
	cmp		r0, #0x1
	bgt		_080906c6
	cmp		r0, #0x0
	beq		_080906d0
	b		_08090704
_080906c6:
	cmp		r1, #0x2
	beq		_080906e8
	cmp		r1, #0x3
	beq		_080906f8
	b		_08090704
_080906d0:
	ldr		r0, _080906d8
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x12]
	b		_08090706

_080906d8:	.4byte 0x0200CCA8

_080906dc:
	ldr		r0, _080906e4
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x14]
	b		_08090706

_080906e4:	.4byte 0x0200CCA8

_080906e8:
	ldr		r0, _080906f4
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	b		_08090706

_080906f4:	.4byte 0x0200CCA8

_080906f8:
	ldr		r0, _08090700
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x6]
	b		_08090706

_08090700:	.4byte 0x0200CCA8

_08090704:
	ldr		r0, _0809070c
_08090706:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9070A, 0x2

_0809070c:	.4byte 0x0000FFFF
	thumb_func_end sub_080906b0

	thumb_func_start sub_08090710
sub_08090710:
	push	{ lr }
	mov		r0, #0x0
	bl		sub_08090728
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08090710

	thumb_func_start sub_0809071c
sub_0809071c:
	push	{ lr }
	mov		r0, #0x0
	bl		sub_08090734
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0809071c

	thumb_func_start sub_08090728
sub_08090728:
	ldr		r1, _08090730
	ldr		r1, [r1, #0x0]
	str		r0, [r1, #0x18]
	bx		lr

_08090730:	.4byte 0x0200CCA8
	thumb_func_end sub_08090728

	thumb_func_start sub_08090734
sub_08090734:
	ldr		r1, _0809073c
	ldr		r1, [r1, #0x0]
	str		r0, [r1, #0x1c]
	bx		lr

_0809073c:	.4byte 0x0200CCA8
	thumb_func_end sub_08090734

	thumb_func_start sub_08090740
sub_08090740:
	ldr		r1, _08090748
	ldr		r1, [r1, #0x0]
	str		r0, [r1, #0x20]
	bx		lr

_08090748:	.4byte 0x0200CCA8
	thumb_func_end sub_08090740

	thumb_func_start sub_0809074c
sub_0809074c:
	push	{ lr }
	ldr		r0, _08090770
	ldr		r1, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x2c
	ldrb	r1, [r2, #0x0]
	add		r3, r0, #0x0
	cmp		r1, #0x1
	bne		_08090766
	add		r1, r2, #0x0
_08090760:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	beq		_08090760
_08090766:
	ldr		r0, [r3, #0x0]
	ldrh	r0, [r0, #0x12]
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9076E, 0x2

_08090770:	.4byte 0x0200CCA8
	thumb_func_end sub_0809074c

	thumb_func_start sub_08090774
sub_08090774:
	push	{ lr }
	mov		r0, #0x10
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_0809078e
	ldr		r0, _08090794
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_0809078e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90792, 0x2

_08090794:	.4byte 0x0200CCA8
	thumb_func_end sub_08090774

	thumb_func_start sub_08090798
sub_08090798:
	push	{ lr }
	mov		r0, #0x11
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080907b2
	ldr		r0, _080907b8
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_080907b2:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x907B6, 0x2

_080907b8:	.4byte 0x0200CCA8

.incbin "base.gba", 0x907BC, 0x24
	thumb_func_end sub_08090798

	thumb_func_start sub_080907e0
sub_080907e0:
	push	{ lr }
	mov		r0, #0x13
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080907fa
	ldr		r0, _08090800
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_080907fa:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x907FE, 0x2

_08090800:	.4byte 0x0200CCA8
	thumb_func_end sub_080907e0

	thumb_func_start sub_08090804
sub_08090804:
	push	{ lr }
	mov		r0, #0x14
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_0809081e
	ldr		r0, _08090824
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_0809081e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90822, 0x2

_08090824:	.4byte 0x0200CCA8

.incbin "base.gba", 0x90828, 0x24
	thumb_func_end sub_08090804

	thumb_func_start sub_0809084c
sub_0809084c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0x16
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08090898
	ldr		r2, _080908a0
	ldr		r1, [r2, #0x0]
	mov		r0, #0x6
	strb	r0, [r1, #0x4]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x24]
	add		r1, #0x4
	ldrh	r0, [r4, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r4, #0x2
	mov		r2, #0xd
_08090876:
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	add		r4, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08090876
	mov		r2, #0x7
_08090886:
	ldrb	r0, [r5, #0x0]
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	add		r5, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08090886
	bl		sub_08090ee4
_08090898:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9089E, 0x2

_080908a0:	.4byte 0x0200CCA8

.incbin "base.gba", 0x908A4, 0x40
	thumb_func_end sub_0809084c

	thumb_func_start sub_080908e4
sub_080908e4:
	push	{ lr }
	mov		r0, #0x19
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080908fe
	ldr		r0, _08090904
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_080908fe:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90902, 0x2

_08090904:	.4byte 0x0200CCA8
	thumb_func_end sub_080908e4

	thumb_func_start sub_08090908
sub_08090908:
	push	{ lr }
	mov		r0, #0x1a
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08090922
	ldr		r0, _08090928
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_08090922:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90926, 0x2

_08090928:	.4byte 0x0200CCA8
	thumb_func_end sub_08090908

	thumb_func_start sub_0809092c
sub_0809092c:
	push	{ lr }
	mov		r0, #0x1b
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08090946
	ldr		r0, _0809094c
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_08090946:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9094A, 0x2

_0809094c:	.4byte 0x0200CCA8
	thumb_func_end sub_0809092c

	thumb_func_start sub_08090950
sub_08090950:
	push	{ lr }
	mov		r0, #0x1c
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_0809096a
	ldr		r0, _08090970
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_0809096a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9096E, 0x2

_08090970:	.4byte 0x0200CCA8
	thumb_func_end sub_08090950

	thumb_func_start sub_08090974
sub_08090974:
	push	{ lr }
	mov		r0, #0x1d
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_0809098e
	ldr		r0, _08090994
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_0809098e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90992, 0x2

_08090994:	.4byte 0x0200CCA8

.incbin "base.gba", 0x90998, 0x9C
	thumb_func_end sub_08090974

	thumb_func_start sub_08090a34
sub_08090a34:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	lsl		r4, r1, #0x18
	lsr		r5, r4, #0x18
	mov		r0, #0x24
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08090a72
	lsr		r2, r4, #0x1a
	mov		r0, #0x3
	and		r0, r5
	cmp		r0, #0x0
	beq		_08090a54
	add		r2, #0x1
_08090a54:
	ldr		r1, _08090a78
	ldr		r0, [r1, #0x0]
	strb	r2, [r0, #0x4]
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x24]
	add		r1, #0x4
	ldrb	r2, [r0, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	orr		r2, r0
	add		r0, r6, #0x0
	bl		sub_080bb5fc
	bl		sub_08090ee4
_08090a72:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08090a78:	.4byte 0x0200CCA8
	thumb_func_end sub_08090a34

	thumb_func_start sub_08090a7c
sub_08090a7c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	lsl		r4, r1, #0x18
	lsr		r5, r4, #0x18
	mov		r0, #0x25
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08090aba
	lsr		r2, r4, #0x1a
	mov		r0, #0x3
	and		r0, r5
	cmp		r0, #0x0
	beq		_08090a9c
	add		r2, #0x1
_08090a9c:
	ldr		r1, _08090ac0
	ldr		r0, [r1, #0x0]
	strb	r2, [r0, #0x4]
	ldr		r0, [r1, #0x0]
	ldr		r1, [r0, #0x24]
	add		r1, #0x4
	ldrb	r2, [r0, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	orr		r2, r0
	add		r0, r6, #0x0
	bl		sub_080bb5fc
	bl		sub_08090ee4
_08090aba:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08090ac0:	.4byte 0x0200CCA8
	thumb_func_end sub_08090a7c

	thumb_func_start sub_08090ac4
sub_08090ac4:
	push	{ lr }
	mov		r0, #0x26
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08090ade
	ldr		r0, _08090ae4
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_08090ade:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90AE2, 0x2

_08090ae4:	.4byte 0x0200CCA8
	thumb_func_end sub_08090ac4

	thumb_func_start sub_08090ae8
sub_08090ae8:
	push	{ lr }
	mov		r0, #0x27
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08090b02
	ldr		r0, _08090b08
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_08090b02:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90B06, 0x2

_08090b08:	.4byte 0x0200CCA8

.incbin "base.gba", 0x90B0C, 0x90
	thumb_func_end sub_08090ae8

	thumb_func_start sub_08090b9c
sub_08090b9c:
	push	{ lr }
	mov		r0, #0x37
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08090bb6
	ldr		r0, _08090bbc
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_08090bb6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90BBA, 0x2

_08090bbc:	.4byte 0x0200CCA8
	thumb_func_end sub_08090b9c

	thumb_func_start sub_08090bc0
sub_08090bc0:
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r0, #0x30
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08090be4
	ldr		r2, _08090bec
	ldr		r1, [r2, #0x0]
	mov		r0, #0x1
	strb	r0, [r1, #0x4]
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x24]
	str		r4, [r0, #0x4]
	bl		sub_08090ee4
_08090be4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90BEA, 0x2

_08090bec:	.4byte 0x0200CCA8
	thumb_func_end sub_08090bc0

	thumb_func_start sub_08090bf0
sub_08090bf0:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r4, r1, #0x18
	mov		r0, #0x31
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08090c1c
	ldr		r2, _08090c24
	ldr		r1, [r2, #0x0]
	mov		r0, #0x1
	strb	r0, [r1, #0x4]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r0, #0x24]
	lsl		r0, r4, #0x8
	orr		r0, r5
	str		r0, [r1, #0x4]
	bl		sub_08090ee4
_08090c1c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90C22, 0x2

_08090c24:	.4byte 0x0200CCA8

.incbin "base.gba", 0x90C28, 0x84
	thumb_func_end sub_08090bf0

	thumb_func_start sub_08090cac
sub_08090cac:
	push	{ lr }
	mov		r0, #0x3d
	bl		sub_08090e0c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08090cc6
	ldr		r0, _08090ccc
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x4]
	bl		sub_08090ee4
_08090cc6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90CCA, 0x2

_08090ccc:	.4byte 0x0200CCA8
	thumb_func_end sub_08090cac

	thumb_func_start sub_08090cd0
sub_08090cd0:
	push	{ r4, lr }
	ldr		r4, _08090ce8
	ldr		r1, [r4, #0x0]
	ldr		r0, [r1, #0xc]
	cmp		r0, #0x2
	beq		_08090cf6
	cmp		r0, #0x2
	bhi		_08090cec
	cmp		r0, #0x1
	beq		_08090d04
	b		_08090d2c

.incbin "base.gba", 0x90CE6, 0x2

_08090ce8:	.4byte 0x0200CCA8

_08090cec:
	cmp		r0, #0x3
	beq		_08090d0e
	cmp		r0, #0x4
	beq		_08090d04
	b		_08090d2c
_08090cf6:
	ldrb	r0, [r1, #0x10]
	mov		r0, #0x1
	strb	r0, [r1, #0x10]
	mov		r0, #0x32
	bl		sub_08090d34
	b		_08090d2c
_08090d04:
	bl		sub_08090de0
	bl		sub_08090f58
	b		_08090d2c
_08090d0e:
	ldrb	r0, [r1, #0x10]
	mov		r0, #0x1
	strb	r0, [r1, #0x10]
	bl		sub_08090de0
	bl		sub_08090fd8
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0x18]
	cmp		r2, #0x0
	beq		_08090d2c
	mov		r0, #0xff
	mov		r1, #0x0
	bl		sub_080bbc78
_08090d2c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90D32, 0x2
	thumb_func_end sub_08090cd0

	thumb_func_start sub_08090d34
sub_08090d34:
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	add		r5, r3, #0x0
	ldr		r2, _08090d64
	ldr		r0, [r2, #0x0]
	ldrb	r0, [r0, #0xa]
	lsl		r0, r0, #0x2
	ldr		r1, _08090d68
	add		r4, r0, r1
	add		r1, #0x2
	add		r7, r0, r1
	ldr		r1, _08090d6c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r6, r2, #0x0
	cmp		r3, #0x50
	beq		_08090d8c
	cmp		r3, #0x50
	bgt		_08090d70
	cmp		r3, #0x32
	beq		_08090d7a
	b		_08090db8

.incbin "base.gba", 0x90D62, 0x2

_08090d64:	.4byte 0x0200CCA8
_08090d68:	.4byte 0x04000100
_08090d6c:	.4byte 0x04000208

_08090d70:
	cmp		r5, #0x64
	beq		_08090d9c
	cmp		r5, #0x82
	beq		_08090dac
	b		_08090db8
_08090d7a:
	ldr		r1, _08090d88
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	ldr		r1, [r6, #0x0]
	mov		r0, #0x1
	b		_08090db6

.incbin "base.gba", 0x90D86, 0x2

_08090d88:	.4byte 0x0000FCCB

_08090d8c:
	ldr		r1, _08090d98
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	ldr		r1, [r6, #0x0]
	mov		r0, #0x2
	b		_08090db6

_08090d98:	.4byte 0x0000FAE0

_08090d9c:
	ldr		r1, _08090da8
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	ldr		r1, [r6, #0x0]
	mov		r0, #0x3
	b		_08090db6

_08090da8:	.4byte 0x0000F996

_08090dac:
	ldr		r1, _08090dd4
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	ldr		r1, [r6, #0x0]
	mov		r0, #0x4
_08090db6:
	str		r0, [r1, #0xc]
_08090db8:
	mov		r0, #0xc3
	strh	r0, [r7, #0x0]
	ldr		r2, _08090dd8
	ldr		r1, [r6, #0x0]
	mov		r0, #0x8
	ldrb	r1, [r1, #0xa]
	lsl		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08090ddc
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08090dd4:	.4byte 0x0000F7AD
_08090dd8:	.4byte 0x04000202
_08090ddc:	.4byte 0x04000208
	thumb_func_end sub_08090d34

	thumb_func_start sub_08090de0
sub_08090de0:
	ldr		r2, _08090e00
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	str		r1, [r0, #0xc]
	ldrb	r0, [r0, #0xa]
	lsl		r0, r0, #0x2
	ldr		r3, _08090e04
	add		r0, r0, r3
	strh	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	ldrb	r0, [r0, #0xa]
	lsl		r0, r0, #0x2
	ldr		r2, _08090e08
	add		r0, r0, r2
	strh	r1, [r0, #0x0]
	bx		lr

_08090e00:	.4byte 0x0200CCA8
_08090e04:	.4byte 0x04000100
_08090e08:	.4byte 0x04000102
	thumb_func_end sub_08090de0

	thumb_func_start sub_08090e0c
sub_08090e0c:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	add		r6, r5, #0x0
	ldr		r0, _08090e38
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08090e40
	ldr		r0, _08090e3c
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x12]
	mov		r0, #0x6
	strh	r0, [r1, #0x12]
	ldr		r2, [r1, #0x18]
	cmp		r2, #0x0
	beq		_08090e8a
	ldrh	r1, [r1, #0x12]
	add		r0, r5, #0x0
	bl		sub_080bbc78
	b		_08090e8a

.incbin "base.gba", 0x90E36, 0x2

_08090e38:	.4byte 0x04000208
_08090e3c:	.4byte 0x0200CCA8

_08090e40:
	ldr		r4, _08090e6c
	ldr		r2, [r4, #0x0]
	add		r3, r2, #0x0
	add		r3, #0x2c
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x1
	bne		_08090e70
	ldrh	r0, [r2, #0x12]
	mov		r1, #0x0
	mov		r0, #0x2
	strh	r0, [r2, #0x12]
	ldrb	r0, [r3, #0x0]
	strb	r1, [r3, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r2, [r0, #0x18]
	cmp		r2, #0x0
	beq		_08090e8a
	ldrh	r1, [r0, #0x12]
	add		r0, r5, #0x0
	bl		sub_080bbc78
	b		_08090e8a

_08090e6c:	.4byte 0x0200CCA8

_08090e70:
	ldrb	r0, [r2, #0x14]
	cmp		r0, #0x0
	bne		_08090e8e
	ldrh	r0, [r2, #0x12]
	mov		r0, #0x4
	strh	r0, [r2, #0x12]
	ldr		r3, [r2, #0x18]
	cmp		r3, #0x0
	beq		_08090e8a
	ldrh	r1, [r2, #0x12]
	add		r0, r5, #0x0
	bl		sub_080bbc7c
_08090e8a:
	mov		r0, #0x1
	b		_08090ed6
_08090e8e:
	ldrb	r0, [r3, #0x0]
	mov		r1, #0x0
	mov		r0, #0x1
	strb	r0, [r3, #0x0]
	ldr		r0, [r4, #0x0]
	strb	r6, [r0, #0x6]
	ldr		r0, [r4, #0x0]
	str		r1, [r0, #0x0]
	strb	r1, [r0, #0x4]
	ldr		r0, [r4, #0x0]
	strb	r1, [r0, #0x5]
	ldr		r0, [r4, #0x0]
	strb	r1, [r0, #0x7]
	ldr		r0, [r4, #0x0]
	strb	r1, [r0, #0x8]
	ldr		r0, [r4, #0x0]
	strb	r1, [r0, #0x9]
	ldr		r0, [r4, #0x0]
	str		r1, [r0, #0xc]
	ldrb	r2, [r0, #0x10]
	strb	r1, [r0, #0x10]
	ldr		r0, [r4, #0x0]
	ldrh	r2, [r0, #0x12]
	mov		r2, #0x0
	strh	r1, [r0, #0x12]
	strb	r2, [r0, #0x15]
	ldr		r1, _08090edc
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	sub		r1, #0xc
	ldr		r2, _08090ee0
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
_08090ed6:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08090edc:	.4byte 0x04000134
_08090ee0:	.4byte 0x00005003
	thumb_func_end sub_08090e0c

	thumb_func_start sub_08090ee4
sub_08090ee4:
	push	{ r4, r5, lr }
	ldr		r5, _08090f3c
	ldr		r0, [r5, #0x0]
	ldr		r3, [r0, #0x24]
	ldrb	r1, [r0, #0x4]
	lsl		r1, r1, #0x8
	ldrb	r0, [r0, #0x6]
	ldr		r2, _08090f40
	orr		r0, r2
	orr		r1, r0
	str		r1, [r3, #0x0]
	ldr		r2, _08090f44
	ldr		r1, [r5, #0x0]
	ldr		r0, [r1, #0x24]
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	mov		r2, #0x0
	str		r2, [r1, #0x0]
	mov		r0, #0x1
	strb	r0, [r1, #0x5]
	ldr		r4, _08090f48
	ldrh	r3, [r4, #0x0]
	strh	r2, [r4, #0x0]
	ldr		r2, _08090f4c
	ldr		r1, [r5, #0x0]
	mov		r0, #0x8
	ldrb	r1, [r1, #0xa]
	lsl		r0, r1
	ldrh	r1, [r2, #0x0]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	strh	r3, [r4, #0x0]
	ldr		r1, _08090f50
	ldr		r2, _08090f54
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08090f3c:	.4byte 0x0200CCA8
_08090f40:	.4byte 0x99660000
_08090f44:	.4byte 0x04000120
_08090f48:	.4byte 0x04000208
_08090f4c:	.4byte 0x04000200
_08090f50:	.4byte 0x04000128
_08090f54:	.4byte 0x00005083
	thumb_func_end sub_08090ee4

	thumb_func_start sub_08090f58
sub_08090f58:
	push	{ r4, lr }
	ldr		r4, _08090f70
	ldr		r2, [r4, #0x0]
	ldrb	r0, [r2, #0x15]
	add		r3, r4, #0x0
	cmp		r0, #0x1
	bhi		_08090f74
	add		r0, #0x1
	strb	r0, [r2, #0x15]
	bl		sub_08090ee4
	b		_08090fce

_08090f70:	.4byte 0x0200CCA8

_08090f74:
	ldrb	r0, [r2, #0x6]
	cmp		r0, #0x27
	beq		_08090f86
	cmp		r0, #0x25
	beq		_08090f86
	cmp		r0, #0x35
	beq		_08090f86
	cmp		r0, #0x37
	bne		_08090fa8
_08090f86:
	ldr		r0, [r3, #0x0]
	ldrh	r1, [r0, #0x12]
	mov		r2, #0x0
	mov		r1, #0x1
	strh	r1, [r0, #0x12]
	add		r0, #0x2c
	ldrb	r1, [r0, #0x0]
	strb	r2, [r0, #0x0]
	ldr		r1, [r3, #0x0]
	ldr		r2, [r1, #0x18]
	cmp		r2, #0x0
	beq		_08090fce
	ldrb	r0, [r1, #0x6]
	ldrh	r1, [r1, #0x12]
	bl		sub_080bbc78
	b		_08090fce
_08090fa8:
	ldrh	r0, [r2, #0x12]
	mov		r1, #0x0
	mov		r0, #0x1
	strh	r0, [r2, #0x12]
	add		r0, r2, #0x0
	add		r0, #0x2c
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	ldr		r1, [r4, #0x0]
	ldr		r2, [r1, #0x18]
	cmp		r2, #0x0
	beq		_08090fc8
	ldrb	r0, [r1, #0x6]
	ldrh	r1, [r1, #0x12]
	bl		sub_080bbc78
_08090fc8:
	ldr		r1, [r4, #0x0]
	mov		r0, #0x4
	str		r0, [r1, #0x0]
_08090fce:
	mov		r0, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x90FD6, 0x2
	thumb_func_end sub_08090f58

	thumb_func_start sub_08090fd8
sub_08090fd8:
	ldr		r3, _08091004
	ldr		r1, [r3, #0x0]
	mov		r0, #0x5
	str		r0, [r1, #0x0]
	mov		r2, #0x0
	strb	r2, [r1, #0x4]
	ldr		r0, [r3, #0x0]
	strb	r2, [r0, #0x5]
	ldr		r1, _08091008
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	str		r0, [r1, #0x0]
	add		r1, #0x8
	strh	r2, [r1, #0x0]
	ldr		r2, _0809100c
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		r2, #0x7f
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bx		lr

_08091004:	.4byte 0x0200CCA8
_08091008:	.4byte 0x04000120
_0809100c:	.4byte 0x00005003
	thumb_func_end sub_08090fd8

	arm_func_start sub_08091010
sub_08091010:
	cpy  	r12, sp
	stmdb	sp!, { r11, r12, lr, pc}
	ldr  	r3, _08091070
	_0809101c:
	ldr    	r0, [r3, #0x0]
	ldr    	r2, [r0, #0x0]
	sub    	r11, r12, #0x4
	cmp    	r2, #0xa
	bne    	_0809104c
	ldr    	r0, [r0, #0x20]
	cmp    	r0, #0x0
	ldmeqdb	r11, { r11, sp, lr }
	bxeq   	lr
	bl     	sub_0809196c
	ldmdb  	r11, { r11, sp, lr }
	bx     	lr
	_0809104c:                                   
	ldrb 	r3, [r0, #0x14]
	cmp  	r3, #0x1
	bne  	_08091064
	bl   	sub_08091074                                     
	ldmdb	r11, { r11, sp, lr }
	bx   	lr
	_08091064:                                   
	bl    	sub_08091304                                     
	ldmdb 	r11, { r11, sp, lr }
	bx    	lr

	_08091070: .4byte 0x0200CCA8
	arm_func_end sub_08091010

	arm_func_start sub_08091074
sub_08091074:  
	cpy  	r12, sp
	stmdb	sp!, { r4, r5, r6, r11, r12, lr, pc}
	mov  	r0, #0x50
	sub  	r11, r12, #0x4
	bl   	sub_08091778                                    
	mov  	r4, #0x120
	ldr  	r2, _080912e8
	add  	r4, r4, #0x4000000
	ldr  	lr, [r4, #0x0]
	ldr  	r12, [r2, #0x0]
	ldr  	r3, [r12, #0x0]
	cpy  	r6, r2
	cmp  	r3, #0x0
	bne  	_080910f4
	cmp  	lr, #0x80000000
	bne  	_08091174
	ldrb 	r2, [r12, #0x5]
	ldrb 	r3, [r12, #0x4]
	cmp  	r2, r3
	bhi  	_080910e4
	ldr  	r3, [r12, #0x24]
	cpy  	r1, r2
	ldr  	r2, [r3 ,r1,lsl #0x2]
	str  	r2, [r4, #0x0]
	ldrb 	r3, [r12, #0x5]
	add  	r3, r3, #0x1
	strb 	r3, [r12, #0x5]
	b    	_080911d0
_080910e4:
	mov		r3, #0x1
    str		r3, [r12, #0x0]
    str		lr, [r4, #0x0]
    b  		_080911d0
_080910f4:
	ldr  	r3, [r12, #0x0]
    cmp  	r3, #0x1
    bne  	_08091184
    mov  	r3, #0x99000000
    add  	r3, r3, #0x660000
    mov  	r5, #0x80000000
    and  	r2, lr, r5, asr #0xf
    cmp  	r2, r3
    bne  	_08091174
    mov  	r3, #0x0
    strb 	r3, [r12, #0x8]
    ldr  	r1, [r6, #0x0]
    ldrb 	r0, [r1, #0x8]
    ldr  	r2, [r1, #0x28]
    str  	lr, [r2, r0, lsl #0x2]
    ldrb 	r3, [r1, #0x8]
    add  	r3, r3, #0x1
    strb 	r3, [r1, #0x8]
    ldr  	r2, [r6, #0x0]
    strb 	lr, [r2, #0x9]
    ldr  	r3, [r6, #0x0]
    mov  	r2, lr, lsr #0x8
    strb 	r2, [r3, #0x7]
    ldr  	r1, [r6, #0x0]
    ldrb 	r2, [r1, #0x7]
    ldrb 	r3, [r1, #0x8]
    cmp  	r2, r3
    bcc  	_080911bc
    mov  	r3, #0x2
    str  	r3, [r1, #0x0]
    str  	r5, [r4, #0x0]
    b    	_080911d0
_08091174:
	bl 		sub_08091888
	mov		r0, #0x82
    bl 		sub_08091778
	b  		_080912fc
_08091184:
	ldr 	r3, [r12, #0x0]
    cmp 	r3, #0x2
    bne 	_080911d0
    ldrb	r1, [r12, #0x8]
    ldr 	r2, [r12, #0x28]
    str 	lr, [r2, r1, lsl #0x2]
    ldrb	r3, [r12, #0x8]
    add 	r3, r3, #0x1
    strb	r3, [r12, #0x8]
    ldr 	r1, [r6, #0x0]
    ldrb	r2, [r1, #0x7]
    ldrb	r3, [r1, #0x8]
    cmp 	r2, r3
    bcs 	_080911c8
 _080911bc:
 	mov		r3, #0x3
    str		r3, [r1, #0x0]
    b  		_080911d0
 _080911c8:
 	mov 	r3, #0x80000000
    str 	r3, [r4,#0x0]
 _080911d0:
 	mov  	r0,#0x1
    bl   	sub_08091710       
	mov  	r0, r0, lsl #0x10
    cmp  	r0, #0x10000
    beq  	_080912fc
    mov  	r4, #0x128
    add  	r4, r4, #0x4000000
    mov  	r5, #0x5000
    add  	r3, r5, #0xb
    strh 	r3, [r4, #0x0]
    mov  	r0, #0x0
    bl   	sub_08091710                                     
    mov  	r0, r0, lsl #0x10
    cmp  	r0, #0x10000
    beq  	_080912fc
    bl   	sub_08091888                                     
    ldr  	r1, [r6, #0x0]
    ldr  	r0, [r1, #0x0]
    cmp  	r0, #0x3
    bne  	_080912ec
    ldrb 	r3, [r1, #0x9]
    cmp  	r3, #0xa5
    cmpne	r3, #0xa7
    beq  	_08091244
    and  	r3, r3, #0xff
    cmp  	r3, #0xb5
    beq  	_08091244
    cmp  	r3, #0xb7
    bne  	_0809128c
 _08091244:                                     
    mov 	r1, #0x120
    add 	r1, r1, #0x4000000
    mov 	r12, #0x128
    add 	r12, r12, #0x4000000
    ldr 	r0, [r6, #0x0]
    mov 	r3, #0x0
    strb	r3, [r0, #0x14]
    mov 	r2, #0x80000000
    str 	r2, [r1, #0x0]
    add 	r3, r3, #0x5000
    add 	r2, r3, #0x2
    strh	r2, [r12, #0x0]
    add 	r3, r3, #0x82
    strh	r3, [r12, #0x0]
    ldr 	r2, [r6, #0x0]
    mov 	r3, #0x5
    str 	r3, [r2, #0x0]
    b   	_080912bc
 _0809128c:    
 	cmp 	r3, #0xee
    bne 	_080912ac
    add 	r3, r5, #0x3
    strh	r3, [r4, #0x0]
    mov 	r2, #0x4
    str 	r2, [r1, #0x0]
    strh	r0, [r1, #0x12]
    b   	_080912bc
 _080912ac: 
 	add 	r3, r5, #0x3
    strh	r3, [r4, #0x0]
    mov 	r2, #0x4
    str 	r2, [r1, #0x0]
 _080912bc:
 	ldr  	r2, [r6, #0x0]
    mov  	r3, #0x0
    strb 	r3, [r2, #0x2c]
    ldr  	r0, [r6, #0x0]
    ldr  	r2, [r0, #0x18]
    cmp  	r2, r3
    beq  	_080912fc
    ldrh 	r1, [r0, #0x12]
    ldrb 	r0, [r0, #0x6]
    bl   	sub_08091964
    b    	_080912fc

 _080912e8: .4byte 0x0200CCA8
 
 _080912ec:
 	add  	r3,	r5, #0x3
    strh 	r3,	[r4, #0x0]
    add  	r2,	r5, #0x83
    strh 	r2,	[r4, #0x0]
 _080912fc:
 	ldmdb  	r11,{ r4, r5, r6, r11, sp, lr }
    bx     	lr
	arm_func_end sub_08091074

	arm_func_start sub_08091304
 sub_08091304:
 	cpy  	r12, sp
    stmdb	sp!, { r4, r5, r6, r11, r12, lr, pc}
    ldr  	r4, _080916b0                                
    mov  	r0, #0x64
    ldr  	r3, [r4, #0x0]
    mov  	r6, #0x0
    strb 	r6, [r3,#0x10]
    sub  	r11, r12, #0x4
    bl   	sub_08091778                                     
    cpy  	r0, r6
    bl   	sub_08091710                                     
    mov  	r0, r0, lsl #0x10
    cmp  	r0, #0x10000
    cpy  	r5, r4
    beq  	_08091708
    mov  	r3, #0x128
    add  	r3, r3, #0x4000000
    mov  	r2, #0x5000
    add  	r2, r2, #0xa
    strh 	r2, [r3, #0x0]
    mov  	lr, #0x120
    ldr  	r0, [r5, #0x0]
    add  	lr, lr, #0x4000000
    ldr  	r12,[lr, #0x0]
    ldr  	r3, [r0, #0x0]
    cmp  	r3, #0x5
    bne  	_08091434
    ldr  	r3, [r0, #0x28]
    mov  	r4, #0x1
    mov  	r0, #0x99000000
    str  	r12, [r3, #0x0]
    add  	r0, r0, #0x660000
    ldr  	r2, [r5, #0x0]
    mov  	r3, r0, lsr #0x10
    strb 	r4, [r2, #0x5]
    cmp  	r3, r12, lsr #0x10
    bne  	_08091580
    ldr  	r3, [r5, #0x0]
    mov  	r2, r12, lsr #0x8
    strb 	r2, [r3, #0x4]
    ldr  	r2, [r5, #0x0]
    strb 	r12, [r2, #0x6]
    ldr  	r1, [r5, #0x0]
    ldrb 	r3, [r1, #0x4]
    cmp  	r3, r6
    bne  	_08091418
    ldrb 	r2, [r1, #0x6]
    sub  	r3, r2, #0x27
    cmp  	r2, #0x36
    cmpne	r3, #0x2
    bhi  	_080913ec
    add  	r3, r2, #0x80
    strb 	r3, [r1, #0x9]
    ldr  	r2, [r5, #0x0]
    ldrb 	r3, [r2, #0x9]
    ldr  	r1, [r2, #0x24]
    add  	r3, r3,r0
    b    	_0809149c
 _080913ec:
 	ldr 	r2, [r1, #0x24]
    ldr 	r3, _080916b4
	str 	r3, [r2, #0x0]
    ldr 	r2, [r5, #0x0]
    ldrb	r3, [r2, #0x6]
    sub 	r3, r3, #0x10
    cmp 	r3, #0x2d
    bhi 	_080914d4
    ldr 	r3, [r2, #0x24]
    str 	r4, [r3, #0x4]
    b   	_080914e0
 _08091418:
 	mov 	r3, #0x80000000
    str 	r3, [lr, #0x0]
    strb	r4, [r1, #0x5]
    ldr 	r2, [r5, #0x0]
    add 	r3, r3, #0x80000006
    str 	r3, [r2, #0x0]
    b   	_08091590
 _08091434:
 	ldr  	r3, [r0, #0x0]
    cmp  	r3, #0x6
    bne  	_08091534
    ldrb 	r1, [r0, #0x5]
    ldr  	r2, [r0, #0x28]
    str  	r12, [r2, r1, lsl #0x2]
    ldrb 	r3, [r0, #0x5]
    add  	r3, r3, #0x1
    strb 	r3, [r0, #0x5]
    ldr  	r1, [r5, #0x0]
    ldrb 	r2, [r1, #0x4]
    ldrb 	r3, [r1, #0x5]
    cmp  	r2, r3
    bcs  	_08091528
    ldrb 	r2, [r1, #0x6]
    sub  	r3, r2, #0x28
    cmp  	r2, #0x36
    cmpne	r3, #0x1
    bhi  	_080914ac
    add  	r3, r2, #0x80
    strb 	r3, [r1, #0x9]
    ldr  	r2, [r5, #0x0]
    ldrb 	r3, [r2, #0x9]
    ldr  	r1, [r2, #0x24]
    orr  	r3, r3, #0x99000000
    orr  	r3, r3, #0x660000
 _0809149c:
 	str 	r3, [r1, #0x0]
    ldr 	r2, [r5, #0x0]
    strb	r6, [r2, #0x7]
    b   	_080914f8
 _080914ac:
 	ldr 	r2, [r1, #0x24]
    ldr 	r3, _080916b4
	str 	r3, [r2, #0x0]
    ldr 	r2, [r5, #0x0]
    ldrb	r3, [r2, #0x6]
    sub 	r3, r3, #0x10
    cmp 	r3, #0x2d
    ldrls	r2, [r2, #0x24]
    movls	r3, #0x1
    bls 	_080914dc
 _080914d4:
 	ldr  	r2, [r2, #0x24]
    mov  	r3, #0x2
 _080914dc:
 	str   	r3, [r2, #0x4]
 _080914e0:
 	ldr  	r2, [r5, #0x0]
    mov  	r3, #0x1
    strb 	r3, [r2, #0x7]
    ldr  	r1, [r5, #0x0]
    add  	r3, r3, #0x2
    strh 	r3, [r1, #0x12]
 _080914f8:
 	ldr  	r0, [r5, #0x0]
    ldr  	r2, [r0, #0x24]
    mov  	r3, #0x120
    ldr  	r1, [r2, #0x0]
    add  	r3, r3, #0x4000000
    str  	r1, [r3, #0x0]
    mov  	r2, #0x1
    strb 	r2, [r0, #0x8]
    ldr  	r1, [r5, #0x0]
    mov  	r3, #0x7
    str  	r3, [r1, #0x0]
    b    	_08091590
 _08091528:
 	mov  	r3, #0x80000000
    str  	r3, [lr, #0x0]
    b    	_08091590
 _08091534:
 	ldr  	r3, [r0, #0x0]
    cmp  	r3, #0x7
    bne  	_08091590
    cmp  	r12, #0x80000000
    bne  	_08091580
    ldrb 	r2, [r0, #0x7]
    ldrb 	r3, [r0, #0x8]
    cmp  	r2, r3
    movcc	r3, #0x8
    strcc	r3, [r0, #0x0]
    bcc  	_08091590
    ldrb 	r1, [r0, #0x8]
    ldr  	r3, [r0, #0x24]
    ldr  	r2, [r3, r1, lsl #0x2]
    str  	r2, [lr, #0x0]
    ldrb 	r3, [r0, #0x8]
    add  	r3, r3, #0x1
    strb 	r3, [r0, #0x8]
    b    	_08091590
 _08091580:
 	bl  	sub_08091888                                     
    mov 	r0, #0x64
    bl  	sub_08091778                                     
    b   	_08091708
 _08091590:
 	mov  	r0, #0x1
    bl   	sub_08091710
    mov  	r0, r0, lsl #0x10
    cmp  	r0, #0x10000
    beq  	_08091708
    cpy  	r6, r5
    ldr  	r3, [r6, #0x0]
    ldr  	r2, [r3, #0x0]
    cmp  	r2, #0x8
    bne  	_08091658
    mov  	r4, #0x128
    add  	r4, r4, #0x4000000
    mov  	r3, #0x5000
    add  	r3, r3, #0x2
    strh 	r3, [r4, #0x0]
    bl   	sub_08091888                                     
    ldr  	r0, [r6, #0x0]
    ldrh 	r3, [r0, #0x12]
    cmp  	r3, #0x3
    bne  	_08091604
    bl   	sub_080918d8                                     
    ldr  	r3, [r6, #0x0]
    ldr  	r1, [r3, #0x1c]
    cmp  	r1, #0x0
    beq  	_08091708
    mov  	r0, #0x1ec
    add  	r0, r0, #0x2
    bl   	sub_08091968                                     
    b       _08091708
 _08091604:
    mov 	r3, #0x120
    add 	r3, r3, #0x4000000
    mov 	r1, #0x0
    str 	r1, [r3, #0x0]
    mov 	r2, #0x5000
    strh	r1, [r4, #0x0]
    add 	r2, r2, #0x3
    strh	r2, [r4, #0x0]
    mov 	r3, #0x1
    strb	r3, [r0, #0x14]
    ldr 	r0, [r5, #0x0]
    ldr 	r2, [r0, #0x1c]
    str 	r1, [r0, #0x0]
    cmp 	r2, r1
    beq 	_08091708
    ldrb	r3, [r0, #0x4]
    ldrb	r0, [r0, #0x6]
    cpy 	r1, r2
    orr 	r0, r0, r3, lsl #0x8
    bl  	sub_08091968
    b   	_08091708
 _08091658: 
    mov  	r3, #0x208
    add  	r3, r3, #0x4000000
    mov  	r2, #0x0
    strh 	r2, [r3, #0x0]
    mov  	r1, #0x100
    add  	r2, r1, #0x4000002
    ldrh 	r3, [r2, #0x0]
    tst  	r3, #0x80
    beq  	_080916dc
    ldrh 	r3, [r2, #0x0]
    tst  	r3, #0x3
    bne  	_080916b8
    mov  	r2, #0xff00
    add  	r1, r1, #0x4000000
    ldrh 	r3, [r1, #0x0]
    add  	r2, r2, #0x9b
    cmp  	r3, r2
    bls  	_080916dc
 _080916a0:                                    
    ldrh	r3, [r1,#0x0]
    cmp 	r3, r2
    bhi 	_080916a0
    b   	_080916dc

 _080916b0:	.4byte 0x0200CCA8
 _080916b4: .4byte 0x996601EE

 _080916b8:
 	mov 	r2, #0xff00
    add 	r1, r1, #0x4000000
    ldrh	r3, [r1, #0x0]
    add 	r2, r2, #0xfe
    cmp 	r3, r2
    bls 	_080916dc
 _080916d0:
 	ldrh 	r3, [r1,#0x0]
    cmp  	r3, r2
    bhi  	_080916d0
 _080916dc:
 	mov   	r1, #0x128
    add   	r1, r1, #0x4000000
    mov   	r0, #0x208
    add   	r0, r0, #0x4000000
    mov   	r3, #0x5000
    add   	r2, r3, #0x2
    strh  	r2, [r1, #0x0]
    add   	r3, r3, #0x82
    strh  	r3, [r1, #0x0]
    mov   	r2, #0x1
    strh  	r2, [r0, #0x0]
 _08091708:
 	ldmdb	r11, { r4, r5, r6, r11, sp, lr }
    bx   	lr
	arm_func_end sub_08091304

	arm_func_start sub_08091710
sub_08091710:
	cpy   	r12, sp
    stmdb 	sp!, { r11, r12, lr, pc}
    mov   	r1, #0x128
    add   	r1, r1, #0x4000000
    mov   	r0, r0, lsl #0x10
    ldr   	r2, _08091774
	sub   	r11, r12, #0x4
    mov   	lr, r0, lsr #0xe
    ldr   	r12, [r2, #0x0]
 _08091734:
 	ldrb  	r3, [r12, #0x10]
    and   	r0, r3, #0xff
    cmp   	r0, #0x1
    beq   	_08091760
    ldrh  	r3, [r1, #0x0]
    and   	r3, r3, #0x4
    cmp   	r3, lr
    bne   	_08091734
    mov   	r0, #0x0
    ldmdb 	r11, { r11, sp, lr }
    bx    	lr
 _08091760:
 	ldr  	r2, [r2,#0x0]
    mov  	r3, #0x0
    strb 	r3, [r2,#0x10]
    ldmdb	r11, { r11, sp, lr }
    bx   	lr
 _08091774: .4byte 0x0200CCA8
	arm_func_end sub_08091710

	arm_func_start sub_08091778
sub_08091778:
	cpy  	r12, sp
    stmdb	sp!, { r4, r5, r11, r12, lr, pc}
    mov  	r1, #0x208
    add  	r1, r1, #0x4000000
    mov  	r3, #0x0
    sub  	r11, r12,#0x4
    ldr  	r12, _08091830
	and  	lr, r0, #0xff
    ldr  	r2, [r12, #0x0]
    cmp  	lr, #0x50
    ldrb 	r0, [r2, #0xa]
    cpy  	r4, r12
    cpy  	r2, lr
    strh 	r3, [r1, #0x0]
    mov  	r0, r0, lsl #0x2
    add  	r3, r3, #0x100
    add  	r1, r3, #0x4000000
    add  	r3, r3, #0x4000002
    add  	r5, r0, r3
    beq  	_08091800
    bgt  	_080917d8
    cmp  	lr, #0x32
    beq  	_080917ec
    b    	_0809184c
 _080917d8:
 	cmp  	r2, #0x64
    beq  	_08091818
    cmp  	r2, #0x82
    beq  	_08091834
    b    	_0809184c
 _080917ec:
 	mvn 	r3, #0x334
    strh	r3, [r0, r1]
    ldr 	r2, [r4, #0x0]
    mov 	r3, #0x1
    b   	_08091848
 _08091800:
 	mov 	r3, #0xae000000
    mov 	r3, r3, asr #0x14
    strh	r3, [r0, r1]
    ldr 	r2, [r4, #0x0]
    mov 	r3, #0x2
    b   	_08091848
 _08091818:
 	mvn 	r3, #0x660
    sub 	r3, r3, #0x9
    strh	r3, [r0, r1]
    ldr 	r2, [r4, #0x0]
    mov 	r3, #0x3
    b   	_08091848
	
 _08091830: .4byte 0x0200CCA8

 _08091834:
 	mvn  	r3, #0x850
    sub  	r3, r3, #0x2
    strh 	r3, [r0, r1]
    ldr  	r2, [r4, #0x0]
    mov  	r3, #0x4
 _08091848:
 	str  	r3, [r2, #0xc]
 _0809184c:
 	mov   	r12, #0x200
    add   	r12, r12, #0x4000002
    mov   	r3, #0xc3
    strh  	r3, [r5, #0x0]
    mov   	r1, #0x208
    ldr   	r2, [r4, #0x0]
    add   	r1, r1, #0x4000000
    ldrb  	r0, [r2, #0xa]
    sub   	r3, r3, #0xbb
    mov   	r3, r3, lsl r0
    strh  	r3, [r12, #0x0]
    mov   	r2, #0x1
    strh  	r2, [r1, #0x0]
    ldmdb 	r11, { r4, r5, r11, sp, lr }
    bx    	lr
	arm_func_end sub_08091778

	arm_func_start sub_08091888
sub_08091888:
	cpy   	r12, sp
    stmdb 	sp!, { r11, r12, lr, pc}
    mov   	r1, #0x100
    ldr   	lr, _080918d4
	add   	r0, r1, #0x4000000
    ldr   	r2, [lr, #0x0]
    sub   	r11, r12, #0x4
    ldrb  	r3, [r2, #0xa]
    mov   	r12, #0x0
    str   	r12, [r2, #0xc]
    mov   	r3, r3, lsl #0x2
    strh  	r12, [r3, r0]
    ldr   	r2, [lr, #0x0]
    ldrb  	r3, [r2, #0xa]
    add   	r1, r1, #0x4000002
    mov   	r3, r3, lsl #0x2
    strh  	r12, [r3, r1]
    ldmdb 	r11, { r11, sp, lr }
    bx    	lr

 _080918d4: .4byte 0x0200CCA8
 	arm_func_end sub_08091888

	arm_func_start sub_080918d8
sub_080918d8:
	cpy  	r12,sp
    stmdb	sp!, { r11, r12, lr, pc}
    ldr  	r0, _08091960
	ldr  	r2, [r0, #0x0]
    mov  	r3, #0x5
    str  	r3, [r2, #0x0]
    mov  	r1, #0x0
    strb 	r1, [r2, #0x14]
    ldr  	r3, [r0, #0x0]
    strb 	r1, [r3, #0x4]
    ldr  	r2, [r0, #0x0]
    strb 	r1, [r2, #0x5]
    ldr  	r3, [r0, #0x0]
    strb 	r1, [r3, #0x6]
    ldr  	r2, [r0, #0x0]
    strb 	r1, [r2, #0x7]
    ldr  	r3, [r0, #0x0]
    strb 	r1, [r3, #0x8]
    ldr  	r2, [r0, #0x0]
    strb 	r1, [r2, #0x9]
    ldr  	r3, [r0, #0x0]
    str  	r1, [r3, #0xc]
    sub  	r11, r12, #0x4
    strb 	r1, [r3, #0x10]
    mov  	r2, #0x128
    ldr  	r12,[ r0, #0x0]
    add  	r2, r2, #0x4000000
    strh 	r1, [r12, #0x12]
    mov  	r3, #0x5000
    strb 	r1, [r12, #0x15]
    add  	r3, r3, #0x82
    strh 	r3, [r2, #0x0]
    ldmdb	r11, { r11, sp, lr }
    bx   	lr

_08091960: .4byte 0x0200CCA8
	arm_func_end sub_080918d8

	arm_func_start sub_08091964
sub_08091964:
	bx		r2
	arm_func_end sub_08091964
	
	arm_func_start sub_08091968
sub_08091968:
	bx		r1
	arm_func_end sub_08091968

	arm_func_start sub_0809196c
sub_0809196c:
	bx		r0
	arm_func_end sub_0809196c

	thumb_func_start sub_08091970
sub_08091970:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	mov		r12, r2
	lsl		r1, r1, #0x10
	lsr		r2, r1, #0x10
	lsl		r3, r3, #0x18
	lsr		r7, r3, #0x18
	mov		r0, #0xf0
	lsl		r0, r0, #0x14
	and		r0, r4
	mov		r1, #0x80
	lsl		r1, r1, #0x12
	cmp		r0, r1
	bne		_08091990
	cmp		r7, #0x0
	bne		_08091998
_08091990:
	mov		r0, #0x3
	and		r0, r4
	cmp		r0, #0x0
	beq		_0809199c
_08091998:
	mov		r0, #0x2
	b		_08091a86
_0809199c:
	cmp		r7, #0x0
	beq		_080919a8
	ldr		r3, _080919a4
	b		_080919aa

_080919a4:	.4byte 0x00000E64

_080919a8:
	ldr		r3, _080919b4
_080919aa:
	cmp		r2, r3
	bcs		_080919b8
	mov		r0, #0x1
	b		_08091a86

.incbin "base.gba", 0x919B2, 0x2

_080919b4:	.4byte 0x00000504

_080919b8:
	ldr		r0, _08091a8c
	str		r4, [r0, #0x0]
	ldr		r1, _08091a90
	add		r0, r4, #0x0
	add		r0, #0xb4
	str		r0, [r1, #0x0]
	ldr		r1, _08091a94
	add		r0, #0x28
	str		r0, [r1, #0x0]
	ldr		r2, _08091a98
	mov		r1, #0xde
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	str		r0, [r2, #0x0]
	ldr		r1, _08091a9c
	mov		r3, #0xdf
	lsl		r3, r3, #0x2
	add		r0, r4, r3
	str		r0, [r1, #0x0]
	mov		r5, #0x1
	add		r6, r2, #0x0
	add		r4, r1, #0x0
_080919e4:
	lsl		r2, r5, #0x2
	add		r3, r2, r6
	sub		r1, r5, #0x1
	lsl		r1, r1, #0x2
	add		r0, r1, r6
	ldr		r0, [r0, #0x0]
	add		r0, #0x70
	str		r0, [r3, #0x0]
	add		r2, r2, r4
	add		r1, r1, r4
	ldr		r0, [r1, #0x0]
	add		r0, #0x1c
	str		r0, [r2, #0x0]
	add		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x3
	bls		_080919e4
	ldr		r0, _08091a94
	ldr		r1, [r0, #0x0]
	add		r1, #0xdc
	ldr		r4, _08091a9c
	ldr		r0, [r4, #0xc]
	add		r0, #0x1c
	str		r0, [r1, #0x0]
	mov		r1, r12
	add		r2, r7, #0x0
	bl		sub_080904d4
	bl		sub_08091aac
	mov		r5, #0x0
	ldr		r3, _08091a98
	mov		r2, #0x0
_08091a28:
	lsl		r1, r5, #0x2
	add		r0, r1, r3
	ldr		r0, [r0, #0x0]
	str		r2, [r0, #0x68]
	str		r2, [r0, #0x6c]
	add		r1, r1, r4
	ldr		r0, [r1, #0x0]
	str		r2, [r0, #0x14]
	str		r2, [r0, #0x18]
	add		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x3
	bls		_08091a28
	ldr		r1, _08091aa0
	mov		r5, #0x2
	neg		r5, r5
	and		r5, r1
	ldr		r2, _08091a94
	ldr		r0, [r2, #0x0]
	add		r4, r0, #0x0
	add		r4, #0x8
	ldr		r0, _08091aa4
	sub		r0, r0, r1
	lsl		r0, r0, #0xf
	lsr		r3, r0, #0x10
	sub		r0, r3, #0x1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	ldr		r0, _08091aa8
	cmp		r3, r0
	beq		_08091a7c
	add		r6, r0, #0x0
_08091a6a:
	ldrh	r0, [r5, #0x0]
	strh	r0, [r4, #0x0]
	add		r5, #0x2
	add		r4, #0x2
	sub		r0, r3, #0x1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, r6
	bne		_08091a6a
_08091a7c:
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x9
	str		r0, [r1, #0x4]
	mov		r0, #0x0
_08091a86:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08091a8c:	.4byte 0x0200CCD0
_08091a90:	.4byte 0x0200CCD4
_08091a94:	.4byte 0x0200CCD8
_08091a98:	.4byte 0x0200CCC0
_08091a9c:	.4byte 0x0200CCB0
_08091aa0:	.4byte 0x08092EE5
_08091aa4:	.4byte 0x08092f15
_08091aa8:	.4byte 0x0000FFFF
	thumb_func_end sub_08091970

	thumb_func_start sub_08091aac
sub_08091aac:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	ldr		r1, _08091b20
	ldrh	r0, [r1, #0x0]
	add		r7, r0, #0x0
	mov		r6, #0x0
	strh	r6, [r1, #0x0]
	ldr		r5, _08091b24
	ldr		r1, [r5, #0x0]
	ldrb	r4, [r1, #0x0]
	mov		r0, sp
	strh	r6, [r0, #0x0]
	ldr		r2, _08091b28
	bl		sub_080bb5fc
	ldr		r2, [r5, #0x0]
	mov		r0, #0x8
	and		r4, r0
	mov		r1, #0x0
	strb	r4, [r2, #0x0]
	mov		r0, sp
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldr		r4, _08091b2c
	ldr		r1, [r4, #0x0]
	ldr		r2, _08091b30
	bl		sub_080bb5fc
	ldr		r1, [r4, #0x0]
	mov		r0, #0x4
	strb	r0, [r1, #0x9]
	ldr		r0, [r5, #0x0]
	strb	r6, [r0, #0x6]
	ldr		r1, [r4, #0x0]
	mov		r0, #0xff
	strb	r0, [r1, #0x0]
	bl		sub_08092f78
	ldr		r0, [r5, #0x0]
	strb	r6, [r0, #0x9]
	mov		r2, #0x0
	mov		r3, #0x0
_08091b00:
	ldr		r0, [r5, #0x0]
	lsl		r1, r2, #0x1
	add		r0, #0x12
	add		r0, r0, r1
	strh	r3, [r0, #0x0]
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x3
	bls		_08091b00
	ldr		r0, _08091b20
	strh	r7, [r0, #0x0]
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08091b20:	.4byte 0x04000208
_08091b24:	.4byte 0x0200CCD4
_08091b28:	.4byte 0x01000014
_08091b2c:	.4byte 0x0200CCD0
_08091b30:	.4byte 0x0100005A
	thumb_func_end sub_08091aac

	thumb_func_start sub_08091b34
sub_08091b34:
	push	{ lr }
	ldr		r0, _08091b44
	bl		sub_08090728
	bl		sub_08090b9c
	pop		{ r0 }
	bx		r0

_08091b44:	.4byte 0x08091C09
	thumb_func_end sub_08091b34

	thumb_func_start sub_08091b48
sub_08091b48:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	ldr		r5, _08091b60
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08091b64
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	b		_08091b8a

_08091b60:	.4byte 0x0200CCD0

_08091b64:
	bl		sub_08091ba4
	add		r1, r0, #0x0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x28
	beq		_08091b74
	cmp		r0, #0x36
	bne		_08091b88
_08091b74:
	ldrb	r0, [r1, #0x1]
	cmp		r0, #0x0
	bne		_08091b80
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x2]
	b		_08091b82
_08091b80:
	ldrb	r0, [r1, #0x4]
_08091b82:
	strb	r0, [r4, #0x0]
	mov		r0, #0x0
	b		_08091b8a
_08091b88:
	mov		r0, #0x10
_08091b8a:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08091b48

	thumb_func_start sub_08091b90
sub_08091b90:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r1, r2, #0x0
	bl		sub_080905ac
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08091b90

	thumb_func_start sub_08091ba4
sub_08091ba4:
	ldr		r0, _08091bb0
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x91BAE, 0x2

_08091bb0:	.4byte 0x0200CCD8
	thumb_func_end sub_08091ba4

	thumb_func_start sub_08091bb4
sub_08091bb4:
	push	{ lr }
	bl		sub_08090734
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x91BBE, 0x2
	thumb_func_end sub_08091bb4

	thumb_func_start sub_08091bc0
sub_08091bc0:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08091bd8
	ldr		r0, [r0, #0x0]
	str		r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	lsr		r0, r0, #0x1f
	bl		sub_08091bdc
	pop		{ r0 }
	bx		r0

_08091bd8:	.4byte 0x0200CCD8
	thumb_func_end sub_08091bc0

	thumb_func_start sub_08091bdc
sub_08091bdc:
	push	{ lr }
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_08091bf4
	ldr		r0, _08091bf0
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x8
	orr		r0, r1
	b		_08091bfe

_08091bf0:	.4byte 0x0200CCD4

_08091bf4:
	ldr		r0, _08091c04
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xf7
	and		r0, r1
_08091bfe:
	strb	r0, [r2, #0x0]
	pop		{ r0 }
	bx		r0

_08091c04:	.4byte 0x0200CCD4
	thumb_func_end sub_08091bdc

	thumb_func_start sub_08091c08
sub_08091c08:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x10
	ldr		r0, _08091c3c
	bl		sub_08090728
	ldr		r0, _08091c40
	ldr		r0, [r0, #0x0]
	strh	r4, [r0, #0x1c]
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08091c36
	ldr		r0, _08091c44
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080bbc78
_08091c36:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08091c3c:	.4byte 0x08091c49
_08091c40:	.4byte 0x0200CCD4
_08091c44:	.4byte 0x0200CCD8
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x10
	cmp		r0, #0xff
	bne		_08091ca4
	ldr		r0, _08091cac
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08091c72
	ldr		r0, _08091cb0
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0x0]
	mov		r0, #0xff
	add		r1, r3, #0x0
	bl		sub_080bbc78
_08091c72:
	ldr		r0, _08091cb4
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x2]
	ldrb	r0, [r0, #0x3]
	add		r5, r0, #0x0
	orr		r5, r1
	mov		r4, #0x0
_08091c80:
	add		r0, r5, #0x0
	asr		r0, r4
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08091c92
	add		r0, r4, #0x0
	bl		sub_08092b6c
_08091c92:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, #0x3
	bls		_08091c80
	ldr		r0, _08091cb4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xff
	strb	r0, [r1, #0x0]
_08091ca4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x91CAA, 0x2

_08091cac:	.4byte 0x0200CCD4
_08091cb0:	.4byte 0x0200CCD8
_08091cb4:	.4byte 0x0200CCD0
	thumb_func_end sub_08091c08

	thumb_func_start sub_08091cb8
sub_08091cb8:
	push	{ lr }
	bl		sub_0809074c
	ldr		r0, _08091cc8
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x1c]
	pop		{ r1 }
	bx		r1

_08091cc8:	.4byte 0x0200CCD4
	thumb_func_end sub_08091cb8

	thumb_func_start sub_08091ccc
sub_08091ccc:
	push	{ lr }
	ldr		r0, _08091cdc
	bl		sub_08090728
	bl		sub_080907e0
	pop		{ r0 }
	bx		r0

_08091cdc:	.4byte 0x08091C09
	thumb_func_end sub_08091ccc

	thumb_func_start sub_08091ce0
sub_08091ce0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _08091cf8
	ldr		r0, [r5, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x93
	beq		_08091cfc
	mov		r0, #0x10
	b		_08091d16

.incbin "base.gba", 0x91CF6, 0x2

_08091cf8:	.4byte 0x0200CCD8

_08091cfc:
	bl		sub_0809074c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08091d10
	ldr		r0, [r5, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x7]
	b		_08091d12
_08091d10:
	mov		r0, #0xff
_08091d12:
	strb	r0, [r4, #0x0]
	mov		r0, #0x0
_08091d16:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08091ce0

	thumb_func_start sub_08091d1c
sub_08091d1c:
	push	{ lr }
	ldr		r2, _08091d24
	ldr		r3, _08091d28
	b		_08091d36

_08091d24:	.4byte 0x080deab4 @ RFU-MBOOT
_08091d28:	.4byte 0x030000F0

_08091d2c:
	ldrb	r0, [r3, #0x0]
	add		r3, #0x1
	add		r2, #0x1
	cmp		r1, r0
	bne		_08091d8c
_08091d36:
	ldrb	r1, [r2, #0x0]
	cmp		r1, #0x0
	bne		_08091d2c
	mov		r2, #0xc0
	lsl		r2, r2, #0x12
	mov		r3, #0x0
	mov		r1, #0x0
_08091d44:
	ldrh	r0, [r2, #0x0]
	add		r0, r3, r0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r2, #0x2
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x59
	bls		_08091d44
	ldr		r0, _08091d80
	ldrh	r0, [r0, #0x0]
	cmp		r3, r0
	bne		_08091d8c
	mov		r0, #0xc0
	lsl		r0, r0, #0x12
	ldr		r1, _08091d84
	ldr		r1, [r1, #0x0]
	mov		r2, #0x5a
	bl		sub_080bb5fc
	ldr		r0, _08091d88
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x80
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r0, #0x0
	b		_08091d8e

.incbin "base.gba", 0x91D7E, 0x2

_08091d80:	.4byte 0x030000FA
_08091d84:	.4byte 0x0200CCD0
_08091d88:	.4byte 0x0200CCD4

_08091d8c:
	mov		r0, #0x1
_08091d8e:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x91D92, 0x2
	thumb_func_end sub_08091d1c

	thumb_func_start sub_08091d94
sub_08091d94:
	push	{ lr }
	ldr		r0, _08091db4
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08091dbc
	mov		r0, #0x3d
	mov		r1, #0x6
	bl		sub_08091c08
	ldr		r0, _08091db8
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x12]
	mov		r0, #0x6
	strh	r0, [r1, #0x12]
	b		_08091e32

.incbin "base.gba", 0x91DB2, 0x2

_08091db4:	.4byte 0x04000208
_08091db8:	.4byte 0x0200CCA8

_08091dbc:
	bl		sub_080905e8
	bl		sub_08091aac
	mov		r0, #0x8
	bl		sub_0809485c
	ldr		r1, _08091e0c
	cmp		r0, r1
	bne		_08091e20
	ldr		r0, _08091e10
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0xa]
	lsl		r0, r0, #0x2
	ldr		r2, _08091e14
	add		r1, r0, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0x83
	lsl		r0, r0, #0x10
	str		r0, [r1, #0x0]
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	ldr		r2, _08091e18
	ldr		r3, _08091e1c
	cmp		r0, r2
	bhi		_08091dfa
_08091df2:
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, r2
	bls		_08091df2
_08091dfa:
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r3, #0x0
	bl		sub_08090728
	bl		sub_08090cac
	b		_08091e32

.incbin "base.gba", 0x91E0A, 0x2

_08091e0c:	.4byte 0x00008001
_08091e10:	.4byte 0x0200CCA8
_08091e14:	.4byte 0x04000100
_08091e18:	.4byte 0x0105FFFF
_08091e1c:	.4byte 0x08091e3d

_08091e20:
	ldr		r1, _08091e38
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x3d
	mov		r1, #0x0
	bl		sub_08091c08
_08091e32:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x91E36, 0x2

_08091e38:	.4byte 0x04000128
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r2, r1, #0x0
	cmp		r2, #0x0
	bne		_08091e56
	ldr		r1, _08091e64
	mov		r4, #0x80
	lsl		r4, r4, #0x6
	add		r0, r4, #0x0
	strh	r0, [r1, #0x0]
_08091e56:
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	bl		sub_08091c08
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08091e64:	.4byte 0x04000128
	thumb_func_end sub_08091d94

	thumb_func_start sub_08091e68
sub_08091e68:
	push	{ lr }
	ldr		r0, _08091e78
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08091e7c
	mov		r0, #0x1
	neg		r0, r0
	b		_08091e9c

_08091e78:	.4byte 0x04000208

_08091e7c:
	bl		sub_080905e8
	bl		sub_08091aac
	mov		r0, #0x1e
	bl		sub_0809485c
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_08091e9a
	ldr		r1, _08091ea0
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
_08091e9a:
	add		r0, r2, #0x0
_08091e9c:
	pop		{ r1 }
	bx		r1

_08091ea0:	.4byte 0x04000128
	thumb_func_end sub_08091e68

	thumb_func_start sub_08091ea4
sub_08091ea4:
	push	{ lr }
	ldr		r0, _08091eb4
	bl		sub_08090728
	bl		sub_08090774
	pop		{ r0 }
	bx		r0

_08091eb4:	.4byte 0x08091eb9
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r4, r1, #0x0
	cmp		r4, #0x0
	bne		_08091ecc
	bl		sub_08091aac
_08091ecc:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08091c08
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x91EDA, 0x6A
	thumb_func_end sub_08091ea4

	thumb_func_start sub_08091f44
sub_08091f44:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	add		r4, r2, #0x0
	add		r7, r3, #0x0
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	lsl		r2, r1, #0x10
	add		r5, r4, #0x0
	mov		r0, sp
	strb	r1, [r0, #0x0]
	lsr		r2, r2, #0x18
	strb	r2, [r0, #0x1]
	cmp		r6, #0x0
	beq		_08091f6a
	mov		r1, #0x80
	orr		r2, r1
	mov		r1, #0x0
	orr		r2, r1
	strb	r2, [r0, #0x1]
_08091f6a:
	mov		r2, #0x2
	ldr		r0, _08091fcc
	mov		r12, r0
_08091f70:
	mov		r3, sp
	add		r1, r3, r2
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	add		r4, #0x1
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0xe
	bls		_08091f70
	mov		r3, #0x0
	add		r1, r7, #0x0
	mov		r2, #0x0
_08091f8a:
	ldrb	r0, [r1, #0x0]
	add		r0, r3, r0
	lsl		r0, r0, #0x18
	add		r1, #0x1
	lsr		r0, r0, #0x18
	ldrb	r3, [r5, #0x0]
	add		r0, r0, r3
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	add		r5, #0x1
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x7
	bls		_08091f8a
	mov		r1, sp
	mvn		r0, r3
	strb	r0, [r1, #0xF]
	cmp		r6, #0x0
	beq		_08091fb6
	mov		r0, #0x0
	strb	r0, [r1, #0xE]
_08091fb6:
	mov		r0, r12
	bl		sub_08090728
	mov		r0, sp
	add		r1, r7, #0x0
	bl		sub_0809084c
	add		sp, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08091fcc:	.4byte 0x08091fd1
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r12, r0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	cmp		r7, #0x0
	bne		_0809205a
	ldr		r0, _08092014
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x24]
	ldr		r0, _08092018
	ldr		r6, [r0, #0x0]
	ldrb	r2, [r1, #0x4]
	add		r5, r6, #0x0
	add		r5, #0x98
	strh	r2, [r5, #0x0]
	ldrb	r0, [r1, #0x5]
	lsl		r3, r0, #0x8
	orr		r3, r2
	strh	r3, [r5, #0x0]
	add		r4, r1, #0x6
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0809201c
	eor		r3, r1
	strh	r3, [r5, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x97
	mov		r0, #0x1
	b		_08092022

_08092014:	.4byte 0x0200CCA8
_08092018:	.4byte 0x0200CCD0

_0809201c:
	add		r1, r6, #0x0
	add		r1, #0x97
	mov		r0, #0x0
_08092022:
	strb	r0, [r1, #0x0]
	mov		r2, #0x0
	ldr		r3, _08092068
_08092028:
	ldr		r0, [r3, #0x0]
	add		r0, #0x9a
	add		r0, r0, r2
	ldrb	r1, [r4, #0x0]
	strb	r1, [r0, #0x0]
	add		r4, #0x1
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0xc
	bls		_08092028
	add		r4, #0x1
	mov		r2, #0x0
	ldr		r3, _08092068
_08092044:
	ldr		r0, [r3, #0x0]
	add		r0, #0xa9
	add		r0, r0, r2
	ldrb	r1, [r4, #0x0]
	strb	r1, [r0, #0x0]
	add		r4, #0x1
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x7
	bls		_08092044
_0809205a:
	mov		r0, r12
	add		r1, r7, #0x0
	bl		sub_08091c08
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08092068:	.4byte 0x0200CCD0
	thumb_func_end sub_08091f44

	thumb_func_start sub_0809206c
sub_0809206c:
	push	{ lr }
	ldr		r0, _0809209c
	bl		sub_08090728
	bl		sub_080907e0
	bl		sub_0809074c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080920a4
	ldr		r0, _080920a0
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x7]
	cmp		r0, #0x0
	bne		_080920aa
	mov		r0, #0x1
	bl		sub_080920e4
	b		_080920aa

.incbin "base.gba", 0x9209A, 0x2

_0809209c:	.4byte 0x08091C49
_080920a0:	.4byte 0x0200CCD8

_080920a4:
	mov		r0, #0x19
	bl		sub_08091c08
_080920aa:
	ldr		r0, _080920b8
	bl		sub_08090728
	bl		sub_080908e4
	pop		{ r0 }
	bx		r0

_080920b8:	.4byte 0x080920bd
	push	{ lr }
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r2, r1, #0x0
	cmp		r2, #0x0
	bne		_080920d4
	ldr		r0, _080920e0
	ldr		r1, [r0, #0x0]
	mov		r0, #0x1
	strb	r0, [r1, #0x9]
_080920d4:
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	bl		sub_08091c08
	pop		{ r0 }
	bx		r0

_080920e0:	.4byte 0x0200CCD4
	thumb_func_end sub_0809206c

	thumb_func_start sub_080920e4
sub_080920e4:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	bl		sub_08092f78
	cmp		r4, #0x0
	beq		_0809210c
	mov		r0, sp
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	ldr		r4, _08092140
	ldr		r1, [r4, #0x0]
	add		r1, #0x14
	ldr		r2, _08092144
	bl		sub_080bb5fc
	ldr		r0, [r4, #0x0]
	strb	r5, [r0, #0x8]
_0809210c:
	mov		r1, #0x0
	ldr		r2, _08092140
	add		r4, r2, #0x0
	mov		r3, #0x0
_08092114:
	ldr		r0, [r4, #0x0]
	add		r0, #0xa
	add		r0, r0, r1
	strb	r3, [r0, #0x0]
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x3
	bls		_08092114
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	strb	r1, [r0, #0x1]
	ldr		r0, [r2, #0x0]
	strb	r1, [r0, #0x2]
	ldr		r0, [r2, #0x0]
	strb	r1, [r0, #0x3]
	ldr		r0, [r2, #0x0]
	strb	r1, [r0, #0x7]
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08092140:	.4byte 0x0200CCD0
_08092144:	.4byte 0x01000040
	thumb_func_end sub_080920e4

	thumb_func_start sub_08092148
sub_08092148:
	push	{ lr }
	ldr		r0, _08092158
	bl		sub_08090728
	bl		sub_08090908
	pop		{ r0 }
	bx		r0

_08092158:	.4byte 0x08092171
	thumb_func_end sub_08092148

	thumb_func_start sub_0809215c
sub_0809215c:
	push	{ lr }
	ldr		r0, _0809216c
	bl		sub_08090728
	bl		sub_0809092c
	pop		{ r0 }
	bx		r0

_0809216c:	.4byte 0x08092171
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	cmp		r6, #0x0
	bne		_08092182
	bl		sub_080921f8
_08092182:
	cmp		r4, #0x1a
	bne		_080921c4
	ldr		r5, _080921b8
	ldr		r0, [r5, #0x0]
	add		r0, #0x94
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080921e0
	ldr		r0, _080921bc
	bl		sub_08090728
	bl		sub_080907e0
	bl		sub_0809074c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_080921e0
	ldr		r1, [r5, #0x0]
	ldr		r0, _080921c0
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x4]
	add		r1, #0x94
	strh	r0, [r1, #0x0]
	b		_080921e0

_080921b8:	.4byte 0x0200CCD0
_080921bc:	.4byte 0x08091C49
_080921c0:	.4byte 0x0200CCD8

_080921c4:
	cmp		r4, #0x1b
	bne		_080921e0
	ldr		r0, _080921f0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0xff
	bne		_080921d8
	add		r1, #0x94
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_080921d8:
	ldr		r0, _080921f4
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	strb	r0, [r1, #0x9]
_080921e0:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08091c08
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x921EE, 0x2

_080921f0:	.4byte 0x0200CCD0
_080921f4:	.4byte 0x0200CCD4
	thumb_func_end sub_0809215c

	thumb_func_start sub_080921f8
sub_080921f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	ldr		r1, _08092324
	ldr		r0, [r1, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrb	r2, [r0, #0x1]
	mov		r8, r2
	add		r4, r1, #0x0
	cmp		r2, #0x0
	beq		_08092256
	ldr		r5, [r0, #0x4]
	ldr		r0, _08092328
	bl		sub_08090728
	bl		sub_08090798
	bl		sub_0809074c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0809224a
	ldr		r0, [r4, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	add		r4, r0, #0x4
	mov		r2, #0x0
_08092236:
	mov		r0, sp
	add		r1, r0, r2
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	add		r4, #0x1
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x3
	bls		_08092236
_0809224a:
	ldr		r0, _08092324
	ldr		r1, [r0, #0x0]
	add		r1, #0xdc
	ldr		r1, [r1, #0x0]
	str		r5, [r1, #0x4]
	add		r4, r0, #0x0
_08092256:
	ldr		r0, [r4, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	add		r4, r0, #0x4
	mov		r1, r8
	cmp		r1, #0x0
	beq		_08092312
	ldr		r2, _0809232c
	mov		r9, r2
	ldr		r7, _08092330
	mov		r10, r9
_0809226c:
	ldrb	r2, [r4, #0x2]
	add		r5, r2, #0x0
	cmp		r2, #0x3
	bhi		_08092302
	ldr		r1, [r7, #0x0]
	ldrb	r0, [r1, #0x2]
	asr		r0, r2
	mov		r6, #0x1
	and		r0, r6
	cmp		r0, #0x0
	bne		_08092302
	ldrb	r3, [r1, #0x3]
	asr		r3, r2
	and		r3, r6
	cmp		r3, #0x0
	bne		_08092302
	mov		r1, sp
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	mov		r12, r10
	cmp		r0, #0x0
	beq		_080922a6
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	add		r1, #0xe
	add		r1, r1, r2
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
_080922a6:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	add		r0, #0xe
	add		r1, r0, r5
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x3
	bls		_08092302
	strb	r3, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, #0xa
	add		r0, r0, r5
	mov		r1, #0xff
	strb	r1, [r0, #0x0]
	ldr		r2, [r7, #0x0]
	add		r0, r6, #0x0
	lsl		r0, r5
	ldrb	r1, [r2, #0x2]
	orr		r0, r1
	strb	r0, [r2, #0x2]
	ldr		r1, [r7, #0x0]
	ldrb	r0, [r1, #0x1]
	add		r0, #0x1
	strb	r0, [r1, #0x1]
	ldr		r1, [r7, #0x0]
	lsl		r3, r5, #0x5
	add		r1, r1, r3
	ldrh	r0, [r4, #0x0]
	strh	r0, [r1, #0x14]
	strb	r5, [r1, #0x16]
	ldr		r0, [r7, #0x0]
	strb	r6, [r0, #0x0]
	mov		r0, r12
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x7f
	and		r0, r1
	strb	r0, [r2, #0x0]
	mov		r2, r12
	ldr		r1, [r2, #0x0]
	lsl		r0, r5, #0x1
	add		r1, #0x12
	add		r1, r1, r0
	ldr		r0, [r7, #0x0]
	add		r0, r0, r3
	ldrh	r0, [r0, #0x14]
	strh	r0, [r1, #0x0]
_08092302:
	mov		r0, r8
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r8, r0
	add		r4, #0x4
	cmp		r0, #0x0
	bne		_0809226c
_08092312:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x92322, 0x2

_08092324:	.4byte 0x0200CCD8
_08092328:	.4byte 0x08091C49
_0809232c:	.4byte 0x0200CCD4
_08092330:	.4byte 0x0200CCD0
	thumb_func_end sub_080921f8

	thumb_func_start sub_08092334
sub_08092334:
	push	{ lr }
	ldr		r0, _08092344
	bl		sub_08090728
	bl		sub_08090950
	pop		{ r0 }
	bx		r0

_08092344:	.4byte 0x08092349
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r4, r1, #0x0
	cmp		r4, #0x0
	bne		_0809235e
	mov		r0, #0x0
	bl		sub_080920e4
_0809235e:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08091c08
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08092334

	thumb_func_start sub_0809236c
sub_0809236c:
	push	{ lr }
	ldr		r0, _0809237c
	bl		sub_08090728
	bl		sub_08090974
	pop		{ r0 }
	bx		r0

_0809237c:	.4byte 0x08092381
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r4, r1, #0x0
	cmp		r4, #0x0
	bne		_08092394
	bl		sub_080923b8
_08092394:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08091c08
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x923A2, 0x16
	thumb_func_end sub_0809236c

	thumb_func_start sub_080923b8
sub_080923b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	mov		r0, sp
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	ldr		r5, _08092460
	ldr		r1, [r5, #0x0]
	add		r1, #0x14
	ldr		r2, _08092464
	bl		sub_080bb5fc
	ldr		r0, _08092468
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r2, [r0, #0x0]
	ldrb	r7, [r2, #0x1]
	add		r2, #0x4
	ldr		r0, [r5, #0x0]
	strb	r4, [r0, #0x8]
	mov		r6, #0x0
	cmp		r7, #0x0
	beq		_080924bc
	mov		r12, r5
	ldr		r0, _0809246c
	mov		r8, r0
_080923ee:
	sub		r0, r7, #0x7
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	add		r1, r2, #0x6
	add		r2, #0x13
	ldrb	r0, [r2, #0x0]
	mvn		r0, r0
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	add		r2, #0x1
	mov		r4, #0x0
	mov		r3, #0x0
	add		r6, #0x1
_08092408:
	ldrb	r0, [r2, #0x0]
	add		r0, r4, r0
	lsl		r0, r0, #0x18
	add		r2, #0x1
	lsr		r0, r0, #0x18
	ldrb	r4, [r1, #0x0]
	add		r0, r0, r4
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	add		r1, #0x1
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x7
	bls		_08092408
	cmp		r4, r5
	bne		_080924b0
	sub		r2, #0x1c
	mov		r0, r12
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x8]
	lsl		r0, r0, #0x5
	add		r0, #0x14
	add		r4, r1, r0
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x0
	strh	r0, [r4, #0x0]
	add		r2, #0x2
	ldrb	r0, [r2, #0x0]
	strb	r0, [r4, #0x2]
	add		r2, #0x2
	ldrh	r1, [r2, #0x0]
	mov		r0, r8
	and		r0, r1
	strh	r0, [r4, #0x4]
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08092470
	mov		r0, #0x1
	strb	r0, [r4, #0x3]
	b		_08092472

_08092460:	.4byte 0x0200CCD0
_08092464:	.4byte 0x01000040
_08092468:	.4byte 0x0200CCD8
_0809246c:	.4byte 0x00007FFF

_08092470:
	strb	r3, [r4, #0x3]
_08092472:
	add		r2, #0x2
	mov		r3, #0x0
	add		r5, r4, #0x0
	add		r5, #0x15
	add		r4, #0x6
_0809247c:
	add		r1, r4, r3
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0xc
	bls		_0809247c
	add		r2, #0x1
	mov		r3, #0x0
	add		r4, r5, #0x0
_08092494:
	add		r1, r4, r3
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x7
	bls		_08092494
	mov		r4, r12
	ldr		r1, [r4, #0x0]
	ldrb	r0, [r1, #0x8]
	add		r0, #0x1
	strb	r0, [r1, #0x8]
_080924b0:
	lsl		r0, r6, #0x18
	lsr		r6, r0, #0x18
	cmp		r6, #0x3
	bhi		_080924bc
	cmp		r7, #0x0
	bne		_080923ee
_080924bc:
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x924C8, 0x208
	thumb_func_end sub_080923b8

	thumb_func_start sub_080926d0
sub_080926d0:
	push	{ r4, r5, lr }
	bl		sub_080947a8
	ldr		r0, _08092718
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	beq		_080927a8
	ldr		r4, _0809271c
	ldr		r1, [r4, #0x0]
	ldrb	r0, [r1, #0x6]
	cmp		r0, #0x0
	beq		_080926ee
	sub		r0, #0x1
	strb	r0, [r1, #0x6]
_080926ee:
	bl		sub_08092f40
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	ldr		r2, [r4, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08092720
	cmp		r3, #0x0
	bne		_0809272e
	mov		r0, #0x4
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, [r4, #0x0]
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x20]
	b		_0809272a

.incbin "base.gba", 0x92716, 0x2

_08092718:	.4byte 0x0200CCD0
_0809271c:	.4byte 0x0200CCD4

_08092720:
	cmp		r3, #0x0
	beq		_08092740
	mov		r0, #0xfb
	and		r0, r1
	strb	r0, [r2, #0x0]
_0809272a:
	cmp		r3, #0x0
	beq		_08092740
_0809272e:
	ldr		r3, _0809273c
	ldr		r2, [r3, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0809274a

.incbin "base.gba", 0x9273A, 0x2

_0809273c:	.4byte 0x0200CCD4

_08092740:
	ldr		r3, _0809279c
	ldr		r2, [r3, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
_0809274a:
	strb	r0, [r2, #0x0]
	ldr		r3, [r3, #0x0]
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_080927a8
	ldrh	r0, [r3, #0x20]
	cmp		r0, #0x0
	bne		_080927a4
	mov		r0, #0xfb
	and		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r0, _080927a0
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x2]
	ldrb	r0, [r0, #0x3]
	add		r5, r0, #0x0
	orr		r5, r1
	mov		r4, #0x0
_08092772:
	add		r0, r5, #0x0
	asr		r0, r4
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08092784
	add		r0, r4, #0x0
	bl		sub_08092b6c
_08092784:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, #0x3
	bls		_08092772
	ldr		r0, _080927a0
	ldr		r1, [r0, #0x0]
	mov		r0, #0xff
	strb	r0, [r1, #0x0]
	mov		r0, #0x1
	b		_080927aa

.incbin "base.gba", 0x9279A, 0x2

_0809279c:	.4byte 0x0200CCD4
_080927a0:	.4byte 0x0200CCD0

_080927a4:
	sub		r0, #0x1
	strh	r0, [r3, #0x20]
_080927a8:
	mov		r0, #0x0
_080927aa:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080926d0

	thumb_func_start sub_080927b0
sub_080927b0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	mov		r8, r1
	str		r2, [sp, #0x0]
	str		r3, [sp, #0x4]
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	mov		r0, #0x0
	str		r0, [sp, #0x8]
	mov		r1, #0x0
	str		r1, [sp, #0xC]
	mov		r2, r8
	strb	r1, [r2, #0x0]
	mov		r0, sp
	ldrb	r1, [r0, #0xC]
	ldr		r0, [sp, #0x0]
	strb	r1, [r0, #0x0]
	mov		r2, sp
	ldrb	r0, [r2, #0xC]
	ldr		r2, [sp, #0x4]
	strb	r0, [r2, #0x0]
	ldr		r4, _08092850
	ldr		r0, [r4, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	bne		_080927ee
	b		_08092b4e
_080927ee:
	ldr		r0, _08092854
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x14]
	cmp		r0, #0x0
	bne		_080927fa
	b		_08092b4e
_080927fa:
	ldr		r3, _08092858
	ldr		r2, [r3, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0809280e
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r2, #0x20]
_0809280e:
	ldr		r1, [r3, #0x0]
	ldrb	r0, [r1, #0x6]
	cmp		r0, #0x0
	bne		_08092820
	ldr		r0, [r4, #0x0]
	ldrb	r0, [r0, #0x9]
	strb	r0, [r1, #0x6]
	mov		r1, #0x1
	str		r1, [sp, #0x8]
_08092820:
	lsl		r0, r5, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x29
	bne		_08092860
	ldr		r0, _0809285c
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x4]
	mov		r2, r8
	strb	r0, [r2, #0x0]
	ldrb	r0, [r1, #0x5]
	ldr		r1, [sp, #0x0]
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bne		_0809284a
	ldr		r0, [r4, #0x0]
	ldrb	r0, [r0, #0x2]
	strb	r0, [r2, #0x0]
_0809284a:
	mov		r2, #0x2
	str		r2, [sp, #0x8]
	b		_080928b8

_08092850:	.4byte 0x0200CCD0
_08092854:	.4byte 0x0200CCA8
_08092858:	.4byte 0x0200CCD4
_0809285c:	.4byte 0x0200CCD8

_08092860:
	mov		r0, #0x9b
	lsl		r0, r0, #0x1
	cmp		r5, r0
	bne		_080928b0
	ldr		r0, _0809290c
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrb	r6, [r0, #0x5]
	ldr		r0, [r4, #0x0]
	ldrb	r0, [r0, #0x2]
	eor		r6, r0
	and		r6, r0
	mov		r0, r8
	strb	r6, [r0, #0x0]
	mov		r0, #0x1
	ldr		r1, [sp, #0x0]
	strb	r0, [r1, #0x0]
	mov		r5, #0x0
_08092886:
	mov		r2, r8
	ldrb	r0, [r2, #0x0]
	asr		r0, r5
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080928a6
	ldr		r0, _08092910
	ldr		r0, [r0, #0x0]
	add		r0, #0xa
	add		r0, r0, r5
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_08092b6c
_080928a6:
	add		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x3
	bls		_08092886
_080928b0:
	ldr		r0, [sp, #0x8]
	cmp		r0, #0x0
	bne		_080928b8
	b		_08092b4e
_080928b8:
	ldr		r4, _0809290c
	ldr		r0, [r4, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	str		r1, [sp, #0x10]
	ldr		r0, [r0, #0x4]
	str		r0, [sp, #0x14]
	ldr		r0, _08092914
	bl		sub_08090728
	bl		sub_08090798
	bl		sub_0809074c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0xC]
	cmp		r0, #0x0
	bne		_08092918
	ldr		r0, [r4, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x4
	mov		r5, #0x0
	ldr		r3, _08092910
_080928ec:
	ldr		r0, [r3, #0x0]
	add		r0, #0xa
	add		r0, r0, r5
	ldrb	r1, [r2, #0x0]
	strb	r1, [r0, #0x0]
	add		r2, #0x1
	add		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x3
	bls		_080928ec
	mov		r2, #0x0
	mov		r9, r2
	mov		r5, #0x0
	b		_08092924

.incbin "base.gba", 0x9290A, 0x2

_0809290c:	.4byte 0x0200CCD8
_08092910:	.4byte 0x0200CCD0
_08092914:	.4byte 0x08091c49

_08092918:
	mov		r0, #0x11
	ldr		r1, [sp, #0xC]
	bl		sub_08091c08
	ldr		r0, [sp, #0xC]
	b		_08092b50
_08092924:
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	lsl		r0, r5
	lsr		r6, r0, #0x18
	add		r0, r5, #0x1
	mov		r10, r0
	ldr		r1, [sp, #0xC]
	cmp		r1, #0x0
	beq		_08092938
	b		_08092b02
_08092938:
	ldr		r2, [sp, #0x8]
	cmp		r2, #0x1
	bne		_08092a0e
	ldr		r4, _08092978
	ldr		r1, [r4, #0x0]
	ldrb	r0, [r1, #0x2]
	and		r0, r6
	cmp		r0, #0x0
	beq		_08092a0e
	add		r0, r1, #0x0
	add		r0, #0xa
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08092a00
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_08092980
	ldr		r2, _0809297c
	ldr		r1, [r2, #0x0]
	add		r1, #0xa
	add		r1, r1, r5
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, #0xa
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bls		_08092a0e
	b		_080929e6

_08092978:	.4byte 0x0200CCD0
_0809297c:	.4byte 0x0200CCD4

_08092980:
	bl		sub_080907e0
	bl		sub_0809074c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08092a0e
	ldr		r0, _080929b0
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x7]
	cmp		r0, #0x0
	bne		_080929b4
	mov		r2, r8
	ldrb	r1, [r2, #0x0]
	add		r0, r6, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r0, sp
	ldrb	r1, [r0, #0x8]
	ldr		r0, [sp, #0x0]
	b		_08092a0c

.incbin "base.gba", 0x929AE, 0x2

_080929b0:	.4byte 0x0200CCD8

_080929b4:
	ldr		r2, _080929fc
	ldr		r1, [r2, #0x0]
	add		r1, #0xa
	add		r1, r1, r5
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	ldr		r2, [r2, #0x0]
	lsr		r0, r0, #0x18
	ldrh	r1, [r2, #0x1a]
	cmp		r0, r1
	bls		_08092a0e
	add		r0, r2, #0x0
	add		r0, #0xa
	add		r0, r0, r5
	mov		r2, sp
	ldrb	r2, [r2, #0xC]
	strb	r2, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	ldrb	r0, [r0, #0x2]
	bl		sub_08090bc0
	bl		sub_0809074c
_080929e6:
	mov		r0, r8
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	orr		r0, r1
	mov		r1, r8
	strb	r0, [r1, #0x0]
	mov		r2, sp
	ldrb	r0, [r2, #0x8]
	ldr		r2, [sp, #0x0]
	strb	r0, [r2, #0x0]
	b		_08092a0e

_080929fc:	.4byte 0x0200CCD4

_08092a00:
	ldr		r0, _08092a70
	ldr		r0, [r0, #0x0]
	add		r0, #0xa
	add		r0, r0, r5
	mov		r1, sp
	ldrb	r1, [r1, #0xC]
_08092a0c:
	strb	r1, [r0, #0x0]
_08092a0e:
	ldr		r2, _08092a74
	mov		r12, r2
	ldr		r1, [r2, #0x0]
	ldrb	r7, [r1, #0x0]
	add		r0, r5, #0x1
	mov		r10, r0
	cmp		r7, #0x1
	bne		_08092b02
	add		r0, r1, #0x0
	add		r0, #0xa
	add		r4, r0, r5
	ldrb	r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_08092b02
	ldrb	r2, [r1, #0x3]
	add		r0, r6, #0x0
	and		r0, r2
	cmp		r0, #0x0
	beq		_08092a7e
	cmp		r3, #0xa
	bls		_08092a78
	ldr		r2, [sp, #0x4]
	ldrb	r1, [r2, #0x0]
	add		r0, r6, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r0, r12
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x2]
	add		r0, r6, #0x0
	orr		r0, r1
	mov		r3, #0x0
	strb	r0, [r2, #0x2]
	mov		r2, r12
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r1, #0x3]
	bic		r0, r6
	strb	r0, [r1, #0x3]
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r1, #0x1]
	add		r0, #0x1
	strb	r0, [r1, #0x1]
	ldr		r0, _08092a70
	ldr		r0, [r0, #0x0]
	add		r0, #0xa
	add		r0, r0, r5
	strb	r3, [r0, #0x0]
	b		_08092b02

.incbin "base.gba", 0x92A6E, 0x2

_08092a70:	.4byte 0x0200CCD4
_08092a74:	.4byte 0x0200CCD0

_08092a78:
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	b		_08092b02
_08092a7e:
	ldrb	r0, [r1, #0x2]
	orr		r0, r2
	and		r0, r6
	cmp		r0, #0x0
	bne		_08092b02
	bl		sub_08090804
	bl		sub_0809074c
	ldr		r0, _08092ac8
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r2, [r0, #0x0]
	ldrb	r0, [r2, #0x1]
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	add		r2, #0x8
	cmp		r3, #0x0
	beq		_08092b02
	ldrh	r4, [r2, #0x0]
	ldrb	r0, [r2, #0x2]
	cmp		r0, r5
	bne		_08092ad0
	ldr		r0, _08092acc
	ldr		r0, [r0, #0x0]
	lsl		r1, r5, #0x1
	add		r0, #0x12
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08092ad0
	lsl		r7, r5
	mov		r0, r9
	orr		r0, r7
	lsl		r0, r0, #0x18
	b		_08092afe

_08092ac8:	.4byte 0x0200CCD8
_08092acc:	.4byte 0x0200CCD4

_08092ad0:
	add		r2, #0x4
	sub		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x0
	beq		_08092b02
	ldrh	r4, [r2, #0x0]
	ldrb	r0, [r2, #0x2]
	cmp		r0, r5
	bne		_08092ad0
	ldr		r0, _08092b60
	ldr		r0, [r0, #0x0]
	lsl		r1, r5, #0x1
	add		r0, #0x12
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08092ad0
	mov		r0, #0x1
	lsl		r0, r5
	mov		r1, r9
	orr		r1, r0
	lsl		r0, r1, #0x18
_08092afe:
	lsr		r0, r0, #0x18
	mov		r9, r0
_08092b02:
	ldr		r0, _08092b64
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x2]
	mov		r2, r8
	ldrb	r0, [r2, #0x0]
	and		r0, r1
	and		r6, r0
	cmp		r6, #0x0
	beq		_08092b1c
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_08092b6c
_08092b1c:
	mov		r1, r10
	lsl		r0, r1, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x3
	bhi		_08092b28
	b		_08092924
_08092b28:
	mov		r2, r9
	cmp		r2, #0x0
	beq		_08092b38
	mov		r0, r9
	bl		sub_08090bc0
	bl		sub_0809074c
_08092b38:
	ldr		r1, _08092b68
	ldr		r0, [r1, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldr		r2, [sp, #0x10]
	str		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldr		r1, [sp, #0x14]
	str		r1, [r0, #0x4]
_08092b4e:
	mov		r0, #0x0
_08092b50:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08092b60:	.4byte 0x0200CCD4
_08092b64:	.4byte 0x0200CCD0
_08092b68:	.4byte 0x0200CCD8
	thumb_func_end sub_080927b0

	thumb_func_start sub_08092b6c
sub_08092b6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r12, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	lsl		r0, r7
	lsr		r5, r0, #0x18
	ldr		r1, _08092c10
	ldr		r4, [r1, #0x0]
	ldrb	r0, [r4, #0x2]
	and		r0, r5
	mov		r8, r1
	cmp		r0, #0x0
	beq		_08092b9e
	ldrb	r0, [r4, #0x1]
	cmp		r0, #0x0
	beq		_08092b9e
	sub		r0, #0x1
	strb	r0, [r4, #0x1]
_08092b9e:
	mov		r3, r8
	ldr		r2, [r3, #0x0]
	mvn		r6, r5
	ldrb	r1, [r2, #0x2]
	add		r0, r6, #0x0
	and		r0, r1
	strb	r0, [r2, #0x2]
	ldr		r2, [r3, #0x0]
	ldrb	r1, [r2, #0x3]
	add		r0, r5, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x3]
	ldr		r3, [r3, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, _08092c14
	and		r0, r1
	cmp		r0, #0x0
	bne		_08092bc6
	mov		r0, #0xff
	strb	r0, [r3, #0x0]
_08092bc6:
	mov		r0, r12
	cmp		r0, #0x0
	beq		_08092c04
	mov		r1, sp
	mov		r4, #0x0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	lsl		r0, r7, #0x5
	add		r0, #0x14
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	add		r1, r1, r0
	ldr		r2, _08092c18
	mov		r0, sp
	bl		sub_080bb5fc
	mov		r0, r8
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x3]
	add		r0, r6, #0x0
	and		r0, r1
	strb	r0, [r2, #0x3]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r1, #0x7]
	and		r6, r0
	strb	r6, [r1, #0x7]
	ldr		r0, [r2, #0x0]
	add		r0, #0xa
	add		r0, r0, r7
	strb	r4, [r0, #0x0]
_08092c04:
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08092c10:	.4byte 0x0200CCD0
_08092c14:	.4byte 0x00FF00FF
_08092c18:	.4byte 0x01000010
	thumb_func_end sub_08092b6c

	thumb_func_start sub_08092c1c
sub_08092c1c:
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	ldr		r2, _08092c60
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r1, #0x2]
	ldrb	r1, [r1, #0x3]
	orr		r0, r1
	and		r0, r4
	cmp		r0, #0x0
	beq		_08092ca0
	ldr		r0, _08092c64
	ldr		r1, [r0, #0x0]
	strb	r4, [r1, #0x5]
	ldr		r2, [r2, #0x0]
	ldrb	r1, [r2, #0x0]
	add		r3, r0, #0x0
	cmp		r1, #0xff
	bne		_08092c68
	ldr		r0, [r3, #0x0]
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08092c68
	ldrb	r0, [r2, #0x3]
	and		r0, r4
	cmp		r0, #0x0
	beq		_08092ca0
	mov		r0, #0x30
	mov		r1, #0x0
	bl		sub_08092cac
	b		_08092ca0

_08092c60:	.4byte 0x0200CCD0
_08092c64:	.4byte 0x0200CCD4

_08092c68:
	ldr		r0, [r3, #0x0]
	ldrb	r0, [r0, #0x9]
	cmp		r0, #0x0
	beq		_08092c94
	ldr		r0, _08092c90
	bl		sub_08090728
	bl		sub_0809092c
	bl		sub_0809074c
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	beq		_08092c94
	mov		r0, #0x1b
	bl		sub_08091c08
	b		_08092ca0

.incbin "base.gba", 0x92C8E, 0x2

_08092c90:	.4byte 0x08091c49

_08092c94:
	ldr		r0, _08092ca8
	bl		sub_08090728
	add		r0, r4, #0x0
	bl		sub_08090bc0
_08092ca0:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x92CA6, 0x2

_08092ca8:	.4byte 0x08092CAD
	thumb_func_end sub_08092c1c

	thumb_func_start sub_08092cac
sub_08092cac:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	cmp		r5, #0x3
	bne		_08092ce8
	ldr		r0, _08092d7c
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08092ce8
	ldr		r0, _08092d80
	bl		sub_08090728
	bl		sub_080907e0
	bl		sub_0809074c
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08092ce8
	ldr		r0, _08092d84
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x7]
	cmp		r0, #0x0
	bne		_08092ce8
	mov		r5, #0x0
_08092ce8:
	ldr		r3, _08092d88
	ldr		r2, [r3, #0x0]
	ldr		r0, _08092d7c
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x2]
	ldrb	r1, [r1, #0x3]
	orr		r0, r1
	ldrb	r1, [r2, #0x5]
	and		r0, r1
	strb	r0, [r2, #0x5]
	ldr		r0, _08092d84
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	ldrb	r0, [r0, #0x5]
	strb	r0, [r1, #0x8]
	cmp		r5, #0x0
	bne		_08092d36
	mov		r4, #0x0
_08092d10:
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	lsl		r0, r4
	lsr		r0, r0, #0x18
	ldr		r1, _08092d88
	ldr		r1, [r1, #0x0]
	ldrb	r1, [r1, #0x5]
	and		r0, r1
	cmp		r0, #0x0
	beq		_08092d2c
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_08092b6c
_08092d2c:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, #0x3
	bls		_08092d10
_08092d36:
	ldr		r0, _08092d7c
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x2]
	ldrb	r0, [r2, #0x3]
	orr		r0, r1
	cmp		r0, #0x0
	bne		_08092d48
	mov		r0, #0xff
	strb	r0, [r2, #0x0]
_08092d48:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_08091c08
	ldr		r0, _08092d88
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x9]
	cmp		r0, #0x0
	beq		_08092d76
	ldr		r0, _08092d80
	bl		sub_08090728
	bl		sub_080908e4
	bl		sub_0809074c
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_08092d76
	mov		r0, #0x19
	add		r1, r5, #0x0
	bl		sub_08091c08
_08092d76:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08092d7c:	.4byte 0x0200CCD0
_08092d80:	.4byte 0x08091c49
_08092d84:	.4byte 0x0200CCD8
_08092d88:	.4byte 0x0200CCD4

.incbin "base.gba", 0x92D8C, 0x15C
	thumb_func_end sub_08092cac


.incbin "base.gba", 0x92EE8, 0x48
_08092f30:	.4byte 0x08091C09

_08092f34:

.incbin "base.gba", 0x92F34, 0x8
_08092f3c:

.incbin "base.gba", 0x92F3C, 0x4
	thumb_func_start sub_08092f40
sub_08092f40:
	push	{ lr }
	mov		r0, #0x1
	bl		sub_080906b0
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x1
	bne		_08092f6e
	ldr		r0, _08092f74
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x2c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08092f6e
	ldrb	r0, [r1, #0x6]
	cmp		r0, #0x27
	beq		_08092f6c
	cmp		r0, #0x25
	beq		_08092f6c
	cmp		r0, #0x37
	bne		_08092f6e
_08092f6c:
	mov		r2, #0x0
_08092f6e:
	add		r0, r2, #0x0
	pop		{ r1 }
	bx		r1

_08092f74:	.4byte 0x0200CCA8
	thumb_func_end sub_08092f40

	thumb_func_start sub_08092f78
sub_08092f78:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	ldr		r1, _08092ffc
	ldrh	r0, [r1, #0x0]
	mov		r8, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r5, #0x0
	mov		r0, sp
	add		r0, #0x2
	mov		r7, #0x0
	add		r6, r0, #0x0
_08092f94:
	mov		r0, sp
	strh	r7, [r0, #0x0]
	ldr		r0, _08093000
	lsl		r4, r5, #0x2
	add		r0, r4, r0
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	ldr		r2, _08093004
	bl		sub_080bb5fc
	strh	r7, [r6, #0x0]
	ldr		r0, _08093008
	add		r4, r4, r0
	ldr		r1, [r4, #0x0]
	add		r0, r6, #0x0
	ldr		r2, _0809300c
	bl		sub_080bb5fc
	ldr		r3, _08093010
	ldr		r0, [r3, #0x0]
	add		r0, #0x10
	add		r0, r0, r5
	mov		r1, #0x10
	strb	r1, [r0, #0x0]
	add		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x3
	bls		_08092f94
	ldr		r2, [r3, #0x0]
	mov		r1, #0x0
	mov		r0, #0x57
	strb	r0, [r2, #0xf]
	ldr		r0, [r3, #0x0]
	strb	r1, [r0, #0x4]
	ldr		r0, [r3, #0x0]
	strb	r1, [r0, #0x5]
	ldr		r0, [r3, #0x0]
	strb	r1, [r0, #0x6]
	ldr		r0, _08093014
	ldr		r0, [r0, #0x0]
	strb	r1, [r0, #0x2]
	ldr		r0, _08092ffc
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x92FFA, 0x2

_08092ffc:	.4byte 0x04000208
_08093000:	.4byte 0x0200CCC0
_08093004:	.4byte 0x01000034
_08093008:	.4byte 0x0200CCB0
_0809300c:	.4byte 0x0100000A
_08093010:	.4byte 0x0200CCD0
_08093014:	.4byte 0x0200CCD4
	thumb_func_end sub_08092f78

	thumb_func_start sub_08093018
sub_08093018:
	push	{ r4, r5, r6, lr }
	add		r4, r2, #0x0
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	add		r5, r2, #0x0
	lsl		r1, r1, #0x18
	lsr		r3, r1, #0x18
	ldr		r0, _08093050
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08093058
	ldr		r6, _08093054
	cmp		r3, #0x0
	bne		_08093044
	ldr		r1, [r6, #0x0]
	ldrb	r0, [r1, #0xf]
	ldrh	r4, [r4, #0x2e]
	add		r0, r0, r4
	strb	r0, [r1, #0xf]
_08093044:
	ldr		r1, [r6, #0x0]
	ldrb	r0, [r1, #0xf]
	add		r0, #0x3
	strb	r0, [r1, #0xf]
	b		_08093078

.incbin "base.gba", 0x9304E, 0x2

_08093050:	.4byte 0x0200CCD4
_08093054:	.4byte 0x0200CCD0

_08093058:
	ldr		r6, _08093080
	cmp		r3, #0x0
	bne		_0809306c
	ldr		r1, [r6, #0x0]
	add		r1, #0x10
	add		r1, r1, r2
	ldrb	r0, [r1, #0x0]
	ldrh	r4, [r4, #0x2e]
	add		r0, r0, r4
	strb	r0, [r1, #0x0]
_0809306c:
	ldr		r1, [r6, #0x0]
	add		r1, #0x10
	add		r1, r1, r5
	ldrb	r0, [r1, #0x0]
	add		r0, #0x2
	strb	r0, [r1, #0x0]
_08093078:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9307E, 0x2

_08093080:	.4byte 0x0200CCD0
	thumb_func_end sub_08093018

	thumb_func_start sub_08093084
sub_08093084:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r8, r0
	lsl		r1, r1, #0x18
	lsr		r7, r1, #0x18
	cmp		r7, #0x3
	bls		_080930a4
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	b		_0809321c
_080930a4:
	mov		r0, #0xf
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080930b4
	mov		r0, #0xc0
	lsl		r0, r0, #0x3
	b		_0809321c
_080930b4:
	ldr		r1, _080930f8
	ldrh	r0, [r1, #0x0]
	mov		r10, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0xc
	mov		r2, r8
	and		r0, r2
	cmp		r0, #0x0
	beq		_0809317c
	mov		r3, #0x0
	ldr		r1, _080930fc
	lsl		r0, r7, #0x2
	add		r0, r0, r1
	mov		r9, r0
_080930d2:
	mov		r4, #0x0
	cmp		r3, #0x0
	bne		_08093104
	mov		r0, #0x4
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08093124
	mov		r2, r9
	ldr		r4, [r2, #0x0]
	ldr		r0, _08093100
	ldr		r2, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x2c
	ldrb	r1, [r0, #0x0]
	ldrb	r0, [r2, #0x4]
	bic		r0, r1
	strb	r0, [r2, #0x4]
	b		_08093124

_080930f8:	.4byte 0x04000208
_080930fc:	.4byte 0x0200CCC0
_08093100:	.4byte 0x0200CCD0

_08093104:
	mov		r0, #0x8
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08093124
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	add		r4, r0, #0x0
	add		r4, #0x34
	ldr		r0, _080931b8
	ldr		r2, [r0, #0x0]
	mov		r1, #0x1
	lsl		r1, r7
	ldrb	r0, [r2, #0x5]
	bic		r0, r1
	strb	r0, [r2, #0x5]
_08093124:
	add		r6, r3, #0x1
	cmp		r4, #0x0
	beq		_08093174
	ldrh	r0, [r4, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08093164
	lsl		r1, r3, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_08093018
	mov		r1, #0x0
	add		r2, r4, #0x0
	add		r2, #0x2c
	mov		r5, #0x1
	mov		r3, #0x0
_0809314e:
	ldrb	r0, [r2, #0x0]
	asr		r0, r1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0809315a
	strh	r3, [r4, #0x2]
_0809315a:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x3
	bls		_0809314e
_08093164:
	mov		r1, sp
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, sp
	add		r1, r4, #0x0
	ldr		r2, _080931bc
	bl		sub_080bb5fc
_08093174:
	lsl		r0, r6, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x1
	bls		_080930d2
_0809317c:
	mov		r0, #0x1
	mov		r4, r8
	and		r0, r4
	cmp		r0, #0x0
	beq		_080931f2
	ldr		r1, _080931c0
	lsl		r0, r7, #0x2
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	ldrh	r1, [r3, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080931e4
	ldr		r0, _080931c4
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_080931c8
	ldr		r2, _080931b8
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r1, #0xf]
	add		r0, #0x3
	ldrb	r4, [r3, #0x4]
	add		r0, r0, r4
	strb	r0, [r1, #0xf]
	b		_080931da

_080931b8:	.4byte 0x0200CCD0
_080931bc:	.4byte 0x0100001A
_080931c0:	.4byte 0x0200CCB0
_080931c4:	.4byte 0x0200CCD4

_080931c8:
	ldr		r2, _0809322c
	ldr		r1, [r2, #0x0]
	add		r1, #0x10
	add		r1, r1, r7
	ldrb	r0, [r1, #0x0]
	add		r0, #0x2
	ldrb	r4, [r3, #0x4]
	add		r0, r0, r4
	strb	r0, [r1, #0x0]
_080931da:
	ldr		r2, [r2, #0x0]
	ldrb	r1, [r3, #0x3]
	ldrb	r0, [r2, #0x6]
	bic		r0, r1
	strb	r0, [r2, #0x6]
_080931e4:
	mov		r0, sp
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r2, _08093230
	add		r1, r3, #0x0
	bl		sub_080bb5fc
_080931f2:
	mov		r0, #0x2
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08093214
	mov		r1, sp
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _08093234
	lsl		r0, r7, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r1, #0xc
	ldr		r2, _08093238
	mov		r0, sp
	bl		sub_080bb5fc
_08093214:
	ldr		r0, _0809323c
	mov		r2, r10
	strh	r2, [r0, #0x0]
	mov		r0, #0x0
_0809321c:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0809322c:	.4byte 0x0200CCD0
_08093230:	.4byte 0x01000006
_08093234:	.4byte 0x0200CCB0
_08093238:	.4byte 0x01000004
_0809323c:	.4byte 0x04000208
	thumb_func_end sub_08093084

	thumb_func_start sub_08093240
sub_08093240:
	push	{ r4, r5, r6, lr }
	add		r5, r2, #0x0
	add		r6, r3, #0x0
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	add		r2, r3, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r4, r1, #0x0
	cmp		r1, #0x3
	bls		_0809325c
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	b		_08093294
_0809325c:
	mov		r0, #0x20
	and		r0, r3
	cmp		r0, #0x0
	beq		_08093278
	ldr		r0, _08093274
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	str		r5, [r0, #0x68]
	str		r6, [r0, #0x6c]
	b		_08093292

.incbin "base.gba", 0x93272, 0x2

_08093274:	.4byte 0x0200CCC0

_08093278:
	mov		r0, #0x10
	and		r2, r0
	cmp		r2, #0x0
	bne		_08093286
	mov		r0, #0xc0
	lsl		r0, r0, #0x3
	b		_08093294
_08093286:
	ldr		r0, _0809329c
	lsl		r1, r4, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	str		r5, [r0, #0x14]
	str		r6, [r0, #0x18]
_08093292:
	mov		r0, #0x0
_08093294:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9329A, 0x2

_0809329c:	.4byte 0x0200CCB0
	thumb_func_end sub_08093240

	thumb_func_start sub_080932a0
sub_080932a0:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	str		r3, [sp, #0x0]
	mov		r0, #0x20
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_0809333c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080932a0

	thumb_func_start sub_080932cc
sub_080932cc:
	push	{ lr }
	sub		sp, #0x4
	add		r3, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	ldr		r0, _080932e8
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_080932ec
	add		r0, r2, #0x3
	b		_080932ee

_080932e8:	.4byte 0x0200CCD0

_080932ec:
	add		r0, r2, #0x2
_080932ee:
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0x10
	bl		sub_0809333c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		sp, #0x4
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x93306, 0x36
	thumb_func_end sub_080932cc

	thumb_func_start sub_0809333c
sub_0809333c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r3, [sp, #0x0]
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r3, r1, #0x18
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r8, r2
	ldr		r0, _08093368
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r10, r0
	cmp		r1, #0xff
	bne		_08093370
	ldr		r0, _0809336c
	b		_08093526

_08093368:	.4byte 0x0200CCD0
_0809336c:	.4byte 0x00000301

_08093370:
	mov		r0, #0xf
	and		r0, r3
	cmp		r0, #0x0
	bne		_0809337e
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	b		_08093526
_0809337e:
	ldrb	r0, [r2, #0x2]
	ldrb	r1, [r2, #0x3]
	orr		r0, r1
	and		r0, r3
	cmp		r0, r3
	beq		_08093394
	ldr		r0, _08093390
	b		_08093526

.incbin "base.gba", 0x9338E, 0x2

_08093390:	.4byte 0x00000401

_08093394:
	mov		r0, #0x10
	and		r0, r6
	cmp		r0, #0x0
	beq		_080933a0
	ldrb	r0, [r2, #0x6]
	b		_080933a2
_080933a0:
	ldrb	r0, [r2, #0x4]
_080933a2:
	and		r0, r3
	cmp		r0, #0x0
	beq		_080933b0
	ldr		r0, _080933ac
	b		_08093526

_080933ac:	.4byte 0x00000402

_080933b0:
	mov		r2, #0x0
	mov		r0, #0x1
	and		r0, r3
	ldr		r4, _080933e0
	cmp		r0, #0x0
	bne		_080933d2
	mov		r1, #0x1
_080933be:
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x3
	bhi		_080933d2
	add		r0, r3, #0x0
	asr		r0, r2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080933be
_080933d2:
	mov		r0, r10
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_080933e4
	add		r1, #0xf
	b		_080933ee

_080933e0:	.4byte 0x080dea88

_080933e4:
	cmp		r0, #0x0
	bne		_080933f0
	add		r0, r2, #0x0
	add		r0, #0x10
	add		r1, r1, r0
_080933ee:
	mov		r9, r1
_080933f0:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r4
	ldrb	r4, [r0, #0x0]
	mov		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r8, r0
	bhi		_08093408
	cmp		r8, r4
	bhi		_0809340e
_08093408:
	mov		r0, #0xa0
	lsl		r0, r0, #0x3
	b		_08093526
_0809340e:
	ldr		r1, _0809345c
	ldrh	r0, [r1, #0x0]
	str		r0, [sp, #0x4]
	mov		r7, #0x0
	strh	r7, [r1, #0x0]
	mov		r0, #0x20
	and		r0, r6
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x0
	bne		_08093428
	cmp		r6, #0x40
	bne		_080934e4
_08093428:
	ldr		r1, _08093460
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	mov		r1, #0x0
	strh	r1, [r0, #0x18]
	mov		r1, r12
	add		r1, #0x2d
	mov		r2, r12
	str		r1, [r2, #0x4]
	mov		r0, #0x7
	str		r0, [r2, #0x14]
	mov		r0, r12
	add		r0, #0x2c
	strb	r3, [r0, #0x0]
	strb	r3, [r2, #0x1a]
	mov		r2, r8
	sub		r0, r2, r4
	mov		r2, r12
	strh	r0, [r2, #0x2e]
	cmp		r5, #0x0
	beq		_08093464
	strb	r7, [r1, #0x0]
	b		_08093468

.incbin "base.gba", 0x9345A, 0x2

_0809345c:	.4byte 0x04000208
_08093460:	.4byte 0x0200CCC0

_08093464:
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
_08093468:
	ldr		r0, [sp, #0x0+0x28]
	mov		r1, r12
	str		r0, [r1, #0x30]
	ldr		r2, [sp, #0x0]
	str		r2, [r1, #0x28]
	mov		r1, #0x0
	mov		r0, r12
	strb	r1, [r0, #0x1f]
	add		r0, #0x20
	strb	r1, [r0, #0x0]
	mov		r4, r12
	add		r4, #0x1b
	mov		r6, #0x0
	mov		r2, r12
	add		r2, #0x21
	mov		r5, #0x1
_08093488:
	add		r0, r4, r1
	strb	r6, [r0, #0x0]
	add		r0, r2, r1
	strb	r5, [r0, #0x0]
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x3
	bls		_08093488
	mov		r2, #0x0
	mov		r5, #0x1
	ldr		r4, _080934dc
	mov		r1, #0x0
_080934a2:
	add		r0, r3, #0x0
	asr		r0, r2
	and		r0, r5
	cmp		r0, #0x0
	beq		_080934b4
	lsl		r0, r2, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	strh	r1, [r0, #0x2]
_080934b4:
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x3
	bls		_080934a2
	mov		r1, r10
	ldr		r2, [r1, #0x0]
	ldrb	r1, [r2, #0x4]
	add		r0, r3, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x4]
	mov		r2, r9
	ldrb	r0, [r2, #0x0]
	mov		r1, r8
	sub		r0, r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, _080934e0
	mov		r2, r12
	strh	r0, [r2, #0x0]
	b		_0809351c

_080934dc:	.4byte 0x0200CCC0
_080934e0:	.4byte 0x00008021

_080934e4:
	mov		r0, #0x10
	and		r0, r6
	cmp		r0, #0x0
	beq		_0809351c
	ldr		r1, _08093538
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	strb	r3, [r1, #0x3]
	ldr		r0, [sp, #0x0]
	str		r0, [r1, #0x8]
	mov		r2, r8
	sub		r0, r2, r4
	strh	r0, [r1, #0x4]
	mov		r2, r9
	ldrb	r0, [r2, #0x0]
	mov		r2, r8
	sub		r0, r0, r2
	mov		r2, r9
	strb	r0, [r2, #0x0]
	ldr		r0, _0809353c
	strh	r0, [r1, #0x0]
	mov		r0, r10
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x6]
	add		r0, r3, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x6]
_0809351c:
	ldr		r0, _08093540
	mov		r1, sp
	ldrh		r1, [r1, #0x4]
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
_08093526:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x93536, 0x2

_08093538:	.4byte 0x0200CCB0
_0809353c:	.4byte 0x00008024
_08093540:	.4byte 0x04000208
	thumb_func_end sub_0809333c

	thumb_func_start sub_08093544
sub_08093544:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r3, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r7, r1, #0x18
	lsl		r2, r2, #0x18
	lsr		r6, r2, #0x18
	cmp		r7, #0x3
	bls		_08093568
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	b		_0809369c
_08093568:
	cmp		r0, #0x20
	bne		_08093608
	ldr		r0, _080935f8
	mov		r12, r0
	lsl		r0, r7, #0x2
	add		r0, r12
	ldr		r5, [r0, #0x0]
	ldrh	r2, [r5, #0x0]
	ldr		r1, _080935fc
	add		r0, r1, #0x0
	and		r0, r2
	cmp		r0, r1
	bne		_0809361e
	ldrb	r0, [r5, #0x1a]
	add		r3, r6, #0x0
	eor		r3, r0
	add		r2, r3, #0x0
	and		r2, r6
	cmp		r2, #0x0
	bne		_08093656
	cmp		r3, #0x0
	bne		_08093596
	b		_0809369a
_08093596:
	ldr		r1, _08093600
	ldrh	r0, [r1, #0x0]
	mov		r8, r0
	strh	r2, [r1, #0x0]
	mov		r2, #0x0
	mvn		r1, r3
	str		r1, [sp, #0x0]
	lsl		r4, r6, #0x18
	mov		r10, r4
	mov		r0, #0x1
	mov		r9, r0
	mov		r1, #0x0
_080935ae:
	add		r0, r3, #0x0
	asr		r0, r2
	mov		r4, r9
	and		r0, r4
	cmp		r0, #0x0
	beq		_080935c2
	lsl		r0, r2, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	strh	r1, [r0, #0x2]
_080935c2:
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x3
	bls		_080935ae
	ldr		r0, _08093604
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x4]
	ldr		r2, [sp, #0x0]
	and		r2, r0
	strb	r2, [r1, #0x4]
	strb	r6, [r5, #0x1a]
	mov		r0, r10
	cmp		r0, #0x0
	bne		_080935ee
	add		r0, r7, #0x0
	mov		r1, #0x0
	add		r2, r5, #0x0
	bl		sub_08093018
	mov		r0, #0x27
	strh	r0, [r5, #0x0]
_080935ee:
	ldr		r0, _08093600
	mov		r1, r8
	strh	r1, [r0, #0x0]
	b		_0809369a

.incbin "base.gba", 0x935F6, 0x2

_080935f8:	.4byte 0x0200CCC0
_080935fc:	.4byte 0x00008020
_08093600:	.4byte 0x04000208
_08093604:	.4byte 0x0200CCD0

_08093608:
	cmp		r3, #0x10
	bne		_08093694
	ldr		r3, _08093624
	lsl		r1, r7, #0x2
	add		r0, r1, r3
	ldr		r0, [r0, #0x0]
	ldrh	r2, [r0, #0x0]
	ldr		r0, _08093628
	add		r5, r3, #0x0
	cmp		r2, r0
	beq		_08093630
_0809361e:
	ldr		r0, _0809362c
	b		_0809369c

.incbin "base.gba", 0x93622, 0x2

_08093624:	.4byte 0x0200CCB0
_08093628:	.4byte 0x00008024
_0809362c:	.4byte 0x00000403

_08093630:
	mov		r3, #0x0
	mov		r2, #0x0
	add		r4, r5, #0x0
_08093636:
	cmp		r2, r7
	beq		_08093644
	lsl		r0, r2, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x3]
	orr		r3, r0
_08093644:
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x3
	bls		_08093636
	add		r2, r6, #0x0
	and		r2, r3
	cmp		r2, #0x0
	beq		_08093660
_08093656:
	ldr		r0, _0809365c
	b		_0809369c

.incbin "base.gba", 0x9365A, 0x2

_0809365c:	.4byte 0x00000404

_08093660:
	ldr		r3, _0809368c
	ldrh	r0, [r3, #0x0]
	mov		r8, r0
	strh	r2, [r3, #0x0]
	ldr		r4, _08093690
	ldr		r2, [r4, #0x0]
	add		r5, r1, r5
	ldr		r0, [r5, #0x0]
	ldrb	r1, [r0, #0x3]
	ldrb	r0, [r2, #0x6]
	bic		r0, r1
	strb	r0, [r2, #0x6]
	ldr		r2, [r4, #0x0]
	ldrb	r1, [r2, #0x6]
	add		r0, r6, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x6]
	ldr		r0, [r5, #0x0]
	strb	r6, [r0, #0x3]
	mov		r2, r8
	strh	r2, [r3, #0x0]
	b		_0809369a

_0809368c:	.4byte 0x04000208
_08093690:	.4byte 0x0200CCD0

_08093694:
	mov		r0, #0xc0
	lsl		r0, r0, #0x3
	b		_0809369c
_0809369a:
	mov		r0, #0x0
_0809369c:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08093544

	thumb_func_start sub_080936ac
sub_080936ac:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x3
	bls		_080936bc
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	b		_08093716
_080936bc:
	ldr		r1, _080936e8
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	add		r5, r2, #0x0
	add		r5, #0x34
	ldr		r1, _080936ec
	ldrh	r0, [r1, #0x0]
	add		r4, r0, #0x0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldrh	r1, [r2, #0x34]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08093710
	ldr		r0, _080936f0
	cmp		r1, r0
	bne		_080936f4
	mov		r0, #0x48
	b		_080936f6

_080936e8:	.4byte 0x0200CCC0
_080936ec:	.4byte 0x04000208
_080936f0:	.4byte 0x00008043

_080936f4:
	mov		r0, #0x47
_080936f6:
	strh	r0, [r2, #0x34]
	ldr		r0, _0809371c
	ldr		r2, [r0, #0x0]
	mov		r1, #0x1
	lsl		r1, r3
	ldrb	r0, [r2, #0x5]
	bic		r0, r1
	strb	r0, [r2, #0x5]
	add		r0, r3, #0x0
	mov		r1, #0x1
	add		r2, r5, #0x0
	bl		sub_08093018
_08093710:
	ldr		r0, _08093720
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
_08093716:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0809371c:	.4byte 0x0200CCD0
_08093720:	.4byte 0x04000208
	thumb_func_end sub_080936ac

	thumb_func_start sub_08093724
sub_08093724:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r3, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r5, r2, #0x18
	cmp		r0, #0x3
	bls		_0809373c
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	b		_080937b0
_0809373c:
	ldr		r1, _08093750
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	ldrh	r1, [r4, #0x0]
	ldr		r0, _08093754
	cmp		r1, r0
	beq		_0809375c
	ldr		r0, _08093758
	b		_080937b0

_08093750:	.4byte 0x0200CCB0
_08093754:	.4byte 0x00008024
_08093758:	.4byte 0x00000403

_0809375c:
	ldr		r0, _08093770
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_08093774
	add		r6, r1, #0x0
	add		r6, #0xf
	ldrb	r0, [r4, #0x4]
	ldrb	r1, [r1, #0xf]
	b		_08093782

_08093770:	.4byte 0x0200CCD0

_08093774:
	add		r0, r3, #0x0
	add		r0, #0x10
	add		r6, r1, r0
	add		r1, #0x10
	add		r1, r1, r3
	ldrb	r0, [r4, #0x4]
	ldrb	r1, [r1, #0x0]
_08093782:
	add		r0, r0, r1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, r5
	bcc		_080937ac
	ldr		r2, _080937a8
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	str		r7, [r4, #0x8]
	sub		r0, r3, r5
	strb	r0, [r6, #0x0]
	strh	r5, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x2]
	strh	r1, [r2, #0x0]
	mov		r0, #0x0
	b		_080937b0

.incbin "base.gba", 0x937A6, 0x2

_080937a8:	.4byte 0x04000208

_080937ac:
	mov		r0, #0xa0
	lsl		r0, r0, #0x3
_080937b0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x937B6, 0x4E
	thumb_func_end sub_08093724

	thumb_func_start sub_08093804
sub_08093804:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	ldr		r0, _08093850
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x0]
	add		r4, r0, #0x0
	cmp		r1, #0xff
	bne		_08093818
	b		_0809393e
_08093818:
	cmp		r1, #0x1
	bne		_080938a8
	ldrb	r0, [r2, #0x4]
	ldrb	r1, [r2, #0x5]
	add		r3, r0, #0x0
	orr		r3, r1
	ldrb	r0, [r2, #0x6]
	orr		r3, r0
	cmp		r3, #0x0
	bne		_080938a8
	ldr		r0, _08093854
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x3]
	add		r4, r0, #0x0
	cmp		r1, #0x0
	beq		_08093840
	mov		r0, #0x10
	strb	r0, [r2, #0x8]
	ldr		r0, [r4, #0x0]
	strb	r3, [r0, #0x7]
_08093840:
	ldr		r1, [r4, #0x0]
	ldrb	r0, [r1, #0x8]
	cmp		r0, #0x0
	beq		_08093858
	sub		r0, #0x1
	strb	r0, [r1, #0x8]
	b		_0809385e

.incbin "base.gba", 0x9384E, 0x2

_08093850:	.4byte 0x0200CCD0
_08093854:	.4byte 0x0200CCD4

_08093858:
	ldrb	r0, [r1, #0x7]
	add		r0, #0x1
	strb	r0, [r1, #0x7]
_0809385e:
	ldr		r1, [r4, #0x0]
	ldrb	r0, [r1, #0x8]
	cmp		r0, #0x0
	bne		_08093870
	ldrb	r1, [r1, #0x7]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x0
	bne		_08093902
_08093870:
	ldr		r4, _08093894
	ldr		r1, [r4, #0x0]
	mov		r0, #0x1
	str		r0, [r1, #0x68]
	mov		r0, #0xff
	str		r0, [r1, #0x78]
	ldr		r0, _08093898
	bl		sub_08090728
	cmp		r5, #0x0
	bne		_0809389c
	ldr		r0, [r4, #0x0]
	add		r0, #0x68
	mov		r1, #0x1
	bl		sub_08090a34
	b		_0809393e

.incbin "base.gba", 0x93892, 0x2

_08093894:	.4byte 0x0200CCD8
_08093898:	.4byte 0x080939f1

_0809389c:
	ldr		r0, [r4, #0x0]
	add		r0, #0x68
	mov		r1, #0x1
	bl		sub_08090a7c
	b		_0809393e
_080938a8:
	ldr		r0, [r4, #0x0]
	ldrb	r0, [r0, #0xe]
	cmp		r0, #0x0
	bne		_080938b4
	bl		sub_08093a18
_080938b4:
	ldr		r0, [r4, #0x0]
	ldrb	r0, [r0, #0xe]
	cmp		r0, #0x0
	beq		_08093902
	ldr		r0, _080938e0
	bl		sub_08090728
	cmp		r5, #0x0
	beq		_080938ec
	ldr		r0, _080938e4
	ldr		r0, [r0, #0x0]
	add		r0, #0x68
	ldr		r1, _080938e8
	ldr		r1, [r1, #0x0]
	ldr		r1, [r1, #0x24]
	add		r1, #0x4
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	bl		sub_08090a7c
	b		_0809393e

.incbin "base.gba", 0x938DE, 0x2

_080938e0:	.4byte sub_08093948
_080938e4:	.4byte 0x0200CCD8
_080938e8:	.4byte 0x0200CCD4

_080938ec:
	ldr		r0, _08093924
	ldr		r0, [r0, #0x0]
	add		r0, #0x68
	ldr		r1, _08093928
	ldr		r1, [r1, #0x0]
	ldr		r1, [r1, #0x24]
	add		r1, #0x4
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	bl		sub_08090a34
_08093902:
	cmp		r5, #0x0
	beq		_0809393e
	ldr		r0, _0809392c
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08093934
	ldr		r0, _08093930
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x1c]
	cmp		r1, #0x0
	beq		_0809393e
	mov		r0, #0x27
	bl		sub_080bbc74
	b		_0809393e

.incbin "base.gba", 0x93922, 0x2

_08093924:	.4byte 0x0200CCD8
_08093928:	.4byte 0x0200CCD4
_0809392c:	.4byte 0x0200CCD0
_08093930:	.4byte 0x0200CCA8

_08093934:
	ldr		r0, _08093944
	bl		sub_08090728
	bl		sub_08090ae8
_0809393e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08093944:	.4byte 0x080939e1
	thumb_func_end sub_08093804

	thumb_func_start sub_08093948
sub_08093948:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	cmp		r7, #0x0
	bne		_080939b2
	mov		r6, #0x0
	ldr		r0, _080939d0
	mov		r8, r0
_0809395c:
	ldr		r0, _080939d4
	lsl		r2, r6, #0x2
	add		r0, r2, r0
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x2]
	cmp		r0, #0x0
	beq		_0809396e
	mov		r0, #0x0
	strb	r0, [r1, #0x2]
_0809396e:
	ldr		r0, _080939d8
	add		r0, r2, r0
	ldr		r4, [r0, #0x0]
	ldrh	r0, [r4, #0x0]
	cmp		r0, r8
	bne		_080939a8
	add		r0, r6, #0x0
	mov		r1, #0x0
	add		r2, r4, #0x0
	bl		sub_08093018
	ldr		r5, _080939dc
	ldr		r2, [r5, #0x0]
	ldrb	r1, [r4, #0x1a]
	ldrb	r0, [r2, #0x4]
	bic		r0, r1
	strb	r0, [r2, #0x4]
	add		r0, r4, #0x0
	add		r0, #0x2d
	ldrb	r3, [r0, #0x0]
	cmp		r3, #0x1
	bne		_080939a4
	ldr		r1, [r5, #0x0]
	lsl		r3, r6
	ldrb	r0, [r1, #0x7]
	orr		r3, r0
	strb	r3, [r1, #0x7]
_080939a4:
	mov		r0, #0x26
	strh	r0, [r4, #0x0]
_080939a8:
	add		r0, r6, #0x1
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	cmp		r6, #0x3
	bls		_0809395c
_080939b2:
	ldr		r0, _080939dc
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0xe]
	mov		r0, #0x0
	strb	r0, [r1, #0xe]
	mov		r0, #0x24
	add		r1, r7, #0x0
	bl		sub_08091c08
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x939CE, 0x2

_080939d0:	.4byte 0x00008020
_080939d4:	.4byte 0x0200CCB0
_080939d8:	.4byte 0x0200CCC0
_080939dc:	.4byte 0x0200CCD0
	push	{ lr }
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r0, #0x24
	bl		sub_08091c08
	pop		{ r0 }
	bx		r0
	push	{ lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	cmp		r1, #0x0
	beq		_08093a06
	mov		r0, #0x24
	bl		sub_08091c08
	b		_08093a12
_08093a06:
	cmp		r0, #0xff
	bne		_08093a12
	mov		r0, #0xff
	mov		r1, #0x0
	bl		sub_08091c08
_08093a12:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x93A16, 0x2
	thumb_func_end sub_08093948

	thumb_func_start sub_08093a18
sub_08093a18:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	ldr		r0, _08093ac4
	ldr		r2, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0xff
	bne		_08093a30
	b		_08093b34
_08093a30:
	ldrb	r0, [r2, #0x4]
	ldrb	r1, [r2, #0x5]
	orr		r0, r1
	ldrb	r1, [r2, #0x6]
	orr		r0, r1
	cmp		r0, #0x0
	beq		_08093b34
	ldrb	r0, [r2, #0xe]
	mov		r0, #0x0
	strb	r0, [r2, #0xe]
	mov		r8, r0
	ldr		r0, _08093ac8
	ldr		r0, [r0, #0x0]
	add		r0, #0x6c
	str		r0, [sp, #0x0]
	mov		r6, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	mov		r9, r0
	ldr		r1, _08093acc
	mov		r10, r1
_08093a5a:
	mov		r5, #0x0
	ldr		r0, _08093ad0
	lsl		r7, r6, #0x2
	add		r4, r7, r0
	ldr		r2, [r4, #0x0]
	ldrh	r1, [r2, #0x0]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_08093a7a
	add		r0, r6, #0x0
	mov		r1, sp
	bl		sub_08093b50
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
_08093a7a:
	ldr		r2, [r4, #0x0]
	ldrh	r1, [r2, #0x34]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_08093a96
	add		r2, #0x34
	add		r0, r6, #0x0
	mov		r1, sp
	bl		sub_08093b50
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r5, r5, r0
_08093a96:
	ldr		r0, _08093ad4
	add		r0, r7, r0
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x0]
	cmp		r0, r10
	bne		_08093ab0
	add		r0, r6, #0x0
	mov		r1, sp
	bl		sub_08093d10
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r5, r5, r0
_08093ab0:
	cmp		r5, #0x0
	beq		_08093ae4
	ldr		r0, _08093ac4
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08093ad8
	add		r8, r5
	b		_08093ae4

.incbin "base.gba", 0x93AC2, 0x2

_08093ac4:	.4byte 0x0200CCD0
_08093ac8:	.4byte 0x0200CCD8
_08093acc:	.4byte 0x00008024
_08093ad0:	.4byte 0x0200CCC0
_08093ad4:	.4byte 0x0200CCB0

_08093ad8:
	add		r0, r7, r6
	add		r0, #0x8
	lsl		r5, r0
	mov		r2, r8
	orr		r2, r5
	mov		r8, r2
_08093ae4:
	add		r0, r6, #0x1
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	cmp		r6, #0x3
	bls		_08093a5a
	ldr		r6, _08093b44
	mov		r0, r8
	cmp		r0, #0x0
	beq		_08093b2e
	ldr		r2, [sp, #0x0]
	mov		r0, #0x3
	and		r0, r2
	ldr		r5, _08093b48
	ldr		r1, _08093b4c
	cmp		r0, #0x0
	beq		_08093b16
	mov		r4, #0x0
	mov		r3, #0x3
_08093b08:
	strb	r4, [r2, #0x0]
	add		r0, r2, #0x1
	str		r0, [sp, #0x0]
	add		r2, r0, #0x0
	and		r0, r3
	cmp		r0, #0x0
	bne		_08093b08
_08093b16:
	ldr		r0, [r1, #0x0]
	mov		r2, r8
	str		r2, [r0, #0x68]
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08093b2e
	ldr		r0, [sp, #0x0]
	sub		r0, #0x6c
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	mov		r8, r0
_08093b2e:
	ldr		r0, [r6, #0x0]
	mov		r1, r8
	str		r1, [r0, #0x24]
_08093b34:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08093b44:	.4byte 0x0200CCD4
_08093b48:	.4byte 0x0200CCD0
_08093b4c:	.4byte 0x0200CCD8
	thumb_func_end sub_08093a18

	thumb_func_start sub_08093b50
sub_08093b50:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r12, r1
	add		r4, r2, #0x0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r10, r0
	ldr		r2, _08093bcc
	ldr		r0, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	ldr		r1, _08093bd0
	add		r0, r0, r1
	mov		r8, r0
	ldrh	r1, [r4, #0x0]
	ldr		r0, _08093bd4
	cmp		r1, r0
	bne		_08093bba
	add		r3, r4, #0x0
	add		r3, #0x20
	ldrb	r1, [r3, #0x0]
	lsl		r1, r1, #0x2
	add		r5, r4, #0x4
	add		r1, r5, r1
	ldr		r2, [r4, #0x28]
	ldr		r0, [r4, #0x30]
	add		r2, r2, r0
	ldr		r0, [r1, #0x0]
	add		r6, r3, #0x0
	cmp		r0, r2
	bcc		_08093bba
	mov		r7, #0x0
_08093b98:
	ldrb	r0, [r3, #0x0]
	add		r0, #0x1
	strb	r0, [r3, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x4
	bne		_08093ba8
	strb	r7, [r6, #0x0]
_08093ba8:
	ldrb	r1, [r3, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r5, r1
	ldr		r2, [r4, #0x28]
	ldr		r0, [r4, #0x30]
	add		r2, r2, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r2
	bcs		_08093b98
_08093bba:
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x40
	and		r0, r1
	mov		r9, r1
	cmp		r0, #0x0
	beq		_08093bd8
	mov		r5, #0x0
	b		_08093c1c

.incbin "base.gba", 0x93BCA, 0x2

_08093bcc:	.4byte 0x0200CCD0
_08093bd0:	.4byte 0x080dea88
_08093bd4:	.4byte 0x00008022

_08093bd8:
	ldr		r0, _08093c04
	cmp		r9, r0
	bne		_08093c0c
	add		r3, r4, #0x0
	add		r3, #0x20
	ldrb	r0, [r3, #0x0]
	lsl		r0, r0, #0x2
	add		r1, r4, #0x4
	add		r1, r1, r0
	ldrh	r7, [r4, #0x2e]
	ldr		r5, [r1, #0x0]
	add		r2, r5, r7
	ldr		r1, [r4, #0x28]
	ldr		r0, [r4, #0x30]
	add		r0, r1, r0
	add		r6, r3, #0x0
	cmp		r2, r0
	bls		_08093c08
	sub		r0, r0, r5
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	b		_08093c20

_08093c04:	.4byte 0x00008022

_08093c08:
	add		r5, r7, #0x0
	b		_08093c20
_08093c0c:
	ldrh	r2, [r4, #0x2e]
	ldr		r0, [r4, #0x14]
	cmp		r0, r2
	bcc		_08093c18
	add		r5, r2, #0x0
	b		_08093c1c
_08093c18:
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
_08093c1c:
	add		r6, r4, #0x0
	add		r6, #0x20
_08093c20:
	mov		r3, #0xf
	mov		r0, r9
	and		r3, r0
	mov		r1, r8
	ldrb	r1, [r1, #0x3]
	lsl		r3, r1
	ldrb	r0, [r4, #0x1f]
	mov		r2, r8
	ldrb	r2, [r2, #0x4]
	lsl		r0, r2
	orr		r3, r0
	ldrb	r1, [r6, #0x0]
	add		r0, r1, #0x0
	mov		r7, r8
	ldrb	r7, [r7, #0x5]
	lsl		r0, r7
	orr		r3, r0
	add		r0, r4, #0x0
	add		r0, #0x21
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	mov		r1, r8
	ldrb	r1, [r1, #0x6]
	lsl		r0, r1
	orr		r3, r0
	orr		r3, r5
	str		r3, [sp, #0x0]
	ldr		r2, _08093cdc
	ldr		r0, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08093c68
	ldrb	r0, [r4, #0x1a]
	lsl		r0, r0, #0x12
	orr		r3, r0
	str		r3, [sp, #0x0]
_08093c68:
	mov		r2, sp
	mov		r3, #0x0
	mov		r7, r8
	ldrb	r7, [r7, #0x0]
	cmp		r3, r7
	bcs		_08093c92
_08093c74:
	mov		r0, r12
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r1, #0x1
	mov		r7, r12
	str		r1, [r7, #0x0]
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	mov		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r3, r0
	bcc		_08093c74
_08093c92:
	cmp		r5, #0x0
	beq		_08093cb2
	ldrb	r1, [r6, #0x0]
	lsl		r1, r1, #0x2
	add		r0, r4, #0x4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	ldr		r0, _08093ce0
	ldr		r1, [r0, #0x0]
	add		r0, sp, #0x4
	ldr		r3, [r1, #0x4]
	mov		r1, r12
	add		r2, r5, #0x0
	bl		sub_080bbc7c
_08093cb2:
	ldrh	r1, [r4, #0x0]
	ldr		r0, _08093ce4
	cmp		r1, r0
	bne		_08093ccc
	ldrb	r0, [r6, #0x0]
	add		r0, #0x1
	strb	r0, [r6, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x4
	bne		_08093ccc
	mov		r0, #0x0
	strb	r0, [r6, #0x0]
_08093ccc:
	ldr		r0, _08093cdc
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x0]
	cmp		r1, #0x1
	bne		_08093ce8
	ldrb	r0, [r2, #0xe]
	strb	r1, [r2, #0xe]
	b		_08093cf6

_08093cdc:	.4byte 0x0200CCD0
_08093ce0:	.4byte 0x0200CCD8
_08093ce4:	.4byte 0x00008022

_08093ce8:
	mov		r0, #0x1
	mov		r1, r10
	lsl		r0, r1
	ldrb	r1, [r2, #0xe]
	orr		r0, r1
	ldrb	r1, [r2, #0xe]
	strb	r0, [r2, #0xe]
_08093cf6:
	mov		r2, r8
	ldrb	r0, [r2, #0x0]
	add		r0, r5, r0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08093b50

	thumb_func_start sub_08093d10
sub_08093d10:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x8
	add		r6, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r8, r0
	ldr		r1, _08093d38
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	ldrb	r0, [r4, #0x2]
	cmp		r0, #0x0
	beq		_08093d34
	ldrb	r0, [r4, #0x3]
	cmp		r0, #0x0
	bne		_08093d3c
_08093d34:
	mov		r0, #0x0
	b		_08093dd8

_08093d38:	.4byte 0x0200CCB0

_08093d3c:
	ldr		r0, _08093db4
	ldr		r2, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x4
	ldr		r1, _08093db8
	add		r5, r0, r1
	ldrh	r0, [r4, #0x0]
	mov		r1, #0xf
	and		r1, r0
	ldrb	r0, [r5, #0x3]
	lsl		r1, r0
	ldrh	r0, [r4, #0x4]
	orr		r1, r0
	str		r1, [sp, #0x0]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1
	bne		_08093d66
	ldrb	r0, [r4, #0x3]
	lsl		r0, r0, #0x12
	orr		r1, r0
	str		r1, [sp, #0x0]
_08093d66:
	mov		r2, sp
	mov		r3, #0x0
	ldr		r1, _08093dbc
	mov		r12, r1
	add		r7, sp, #0x4
	ldrb	r0, [r5, #0x0]
	cmp		r3, r0
	bcs		_08093d8e
_08093d76:
	ldr		r1, [r6, #0x0]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r1, #0x1
	str		r1, [r6, #0x0]
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	ldrb	r1, [r5, #0x0]
	cmp		r3, r1
	bcc		_08093d76
_08093d8e:
	ldr		r0, [r4, #0x8]
	str		r0, [sp, #0x4]
	mov		r2, r12
	ldr		r0, [r2, #0x0]
	ldrh	r2, [r4, #0x4]
	ldr		r3, [r0, #0x4]
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_080bbc7c
	ldr		r0, _08093db4
	ldr		r2, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1
	bne		_08093dc0
	ldrb	r0, [r2, #0xe]
	mov		r0, #0x10
	b		_08093dcc

.incbin "base.gba", 0x93DB2, 0x2

_08093db4:	.4byte 0x0200CCD0
_08093db8:	.4byte 0x080dea88
_08093dbc:	.4byte 0x0200CCD8

_08093dc0:
	mov		r0, #0x10
	mov		r1, r8
	lsl		r0, r1
	ldrb	r1, [r2, #0xe]
	orr		r0, r1
	ldrb	r1, [r2, #0xe]
_08093dcc:
	strb	r0, [r2, #0xe]
	ldrh	r0, [r4, #0x4]
	ldrb	r5, [r5, #0x0]
	add		r0, r0, r5
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
_08093dd8:
	add		sp, #0x8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08093d10

	thumb_func_start sub_08093de4
sub_08093de4:
	push	{ r4, lr }
	ldr		r0, _08093e18
	ldr		r4, [r0, #0x0]
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0xff
	beq		_08093e10
	ldr		r2, _08093e1c
	ldr		r3, [r2, #0x0]
	ldrb	r0, [r4, #0x4]
	ldrb	r1, [r4, #0x5]
	orr		r0, r1
	ldrb	r1, [r4, #0x6]
	orr		r0, r1
	mov		r1, #0x0
	strb	r0, [r3, #0x3]
	ldr		r0, [r2, #0x0]
	strb	r1, [r0, #0x4]
	ldr		r0, _08093e20
	bl		sub_08090728
	bl		sub_08090ac4
_08093e10:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x93E16, 0x2

_08093e18:	.4byte 0x0200CCD0
_08093e1c:	.4byte 0x0200CCD4
_08093e20:	.4byte sub_08093e24
	thumb_func_end sub_08093de4

	thumb_func_start sub_08093e24
sub_08093e24:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r9, r0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	cmp		r7, #0x0
	bne		_08093ee8
	ldr		r0, _08093e60
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	cmp		r0, #0x0
	beq		_08093ee8
	ldr		r0, _08093e64
	ldr		r0, [r0, #0x0]
	strb	r7, [r0, #0x1]
	ldr		r0, _08093e68
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08093e6c
	bl		sub_08093f10
	b		_08093e70

_08093e60:	.4byte 0x0200CCD8
_08093e64:	.4byte 0x0200CCD4
_08093e68:	.4byte 0x0200CCD0

_08093e6c:
	bl		sub_08093fa8
_08093e70:
	mov		r6, #0x0
	ldr		r0, _08093f00
	mov		r8, r0
	ldr		r3, _08093f04
_08093e78:
	ldr		r0, _08093f08
	lsl		r1, r6, #0x2
	add		r1, r1, r0
	ldr		r4, [r1, #0x0]
	ldrh	r0, [r4, #0x34]
	cmp		r0, r8
	bne		_08093eca
	ldr		r0, _08093f0c
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	asr		r0, r6
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08093eca
	add		r5, r4, #0x0
	add		r5, #0x34
	add		r0, r4, #0x0
	add		r0, #0x61
	ldrb	r2, [r0, #0x0]
	cmp		r2, #0x1
	bne		_08093eae
	ldr		r1, [r3, #0x0]
	lsl		r2, r6
	ldrb	r0, [r1, #0x7]
	orr		r2, r0
	strb	r2, [r1, #0x7]
_08093eae:
	add		r0, r6, #0x0
	mov		r1, #0x1
	add		r2, r5, #0x0
	str		r3, [sp, #0x0]
	bl		sub_08093018
	ldr		r3, [sp, #0x0]
	ldr		r2, [r3, #0x0]
	ldrb	r1, [r5, #0x1a]
	ldrb	r0, [r2, #0x5]
	bic		r0, r1
	strb	r0, [r2, #0x5]
	mov		r0, #0x46
	strh	r0, [r4, #0x34]
_08093eca:
	add		r0, r6, #0x1
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	cmp		r6, #0x3
	bls		_08093e78
	ldr		r0, _08093f0c
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_08093ee8
	add		r7, r0, #0x0
	mov		r1, #0xe0
	lsl		r1, r1, #0x3
	add		r0, r1, #0x0
	orr		r7, r0
_08093ee8:
	mov		r0, r9
	add		r1, r7, #0x0
	bl		sub_08091c08
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x93EFE, 0x2

_08093f00:	.4byte 0x00008043
_08093f04:	.4byte 0x0200CCD0
_08093f08:	.4byte 0x0200CCC0
_08093f0c:	.4byte 0x0200CCD4
	thumb_func_end sub_08093e24

	thumb_func_start sub_08093f10
sub_08093f10:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	ldr		r1, _08093fa0
	ldr		r0, [r1, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	lsr		r3, r0, #0x8
	mov		r5, #0x0
	mov		r12, r1
	mov		r7, #0x1f
	ldr		r4, _08093fa4
	mov		r6, #0x1
_08093f2a:
	mov		r0, sp
	add		r1, r0, r5
	add		r0, r3, #0x0
	and		r0, r7
	strb	r0, [r1, #0x0]
	lsr		r3, r3, #0x5
	cmp		r0, #0x0
	bne		_08093f46
	ldr		r0, [r4, #0x0]
	add		r1, r6, #0x0
	lsl		r1, r5
	ldrb	r2, [r0, #0x1]
	orr		r1, r2
	strb	r1, [r0, #0x1]
_08093f46:
	add		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x3
	bls		_08093f2a
	mov		r1, r12
	ldr		r0, [r1, #0x0]
	add		r0, #0xdc
	ldr		r0, [r0, #0x0]
	add		r6, r0, #0x0
	add		r6, #0x8
	mov		r5, #0x0
_08093f5e:
	mov		r0, sp
	add		r1, r0, r5
	ldrb	r0, [r1, #0x0]
	add		r7, r5, #0x1
	cmp		r0, #0x0
	beq		_08093f90
	add		r4, r1, #0x0
_08093f6c:
	ldrb	r2, [r4, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08094000
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r6, r6, r0
	ldrb	r1, [r4, #0x0]
	sub		r1, r1, r0
	strb	r1, [r4, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08093f90
	lsl		r0, r1, #0x18
	cmp		r0, #0x0
	bne		_08093f6c
_08093f90:
	lsl		r0, r7, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x3
	bls		_08093f5e
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08093fa0:	.4byte 0x0200CCD8
_08093fa4:	.4byte 0x0200CCD4
	thumb_func_end sub_08093f10

	thumb_func_start sub_08093fa8
sub_08093fa8:
	push	{ r4, r5, r6, lr }
	ldr		r0, _08093ff8
	ldr		r0, [r0, #0x0]
	add		r0, #0xdc
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	mov		r4, #0x7f
	and		r4, r0
	add		r5, r1, #0x0
	add		r5, #0x8
	cmp		r4, #0x0
	bne		_08093fc8
	ldr		r0, _08093ffc
	ldr		r1, [r0, #0x0]
	mov		r0, #0xf
	strb	r0, [r1, #0x1]
_08093fc8:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	add		r6, r0, #0x0
_08093fce:
	cmp		r4, #0x0
	beq		_08093ff0
	mov		r0, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_08094000
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r5, r5, r0
	sub		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	add		r0, r4, #0x0
	and		r0, r6
	cmp		r0, #0x0
	beq		_08093fce
_08093ff0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x93FF6, 0x2

_08093ff8:	.4byte 0x0200CCD8
_08093ffc:	.4byte 0x0200CCD4
	thumb_func_end sub_08093fa8

	thumb_func_start sub_08094000
sub_08094000:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r12, r0
	lsl		r2, r2, #0x10
	lsr		r3, r2, #0x10
	ldr		r2, _08094034
	ldr		r0, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	mvn		r0, r0
	mov		r1, #0x1
	and		r0, r1
	lsl		r0, r0, #0x4
	ldr		r1, _08094038
	add		r6, r0, r1
	ldrb	r0, [r6, #0x0]
	cmp		r3, r0
	bcs		_0809403c
	add		r0, r3, #0x0
	b		_0809422e

_08094034:	.4byte 0x0200CCD0
_08094038:	.4byte 0x080dea88

_0809403c:
	mov		r5, #0x0
	mov		r4, #0x0
	ldrb	r3, [r6, #0x1]
	ldrb	r1, [r6, #0x7]
	mov		r8, r1
	ldr		r2, [sp, #0x0]
	mov		r9, r2
	cmp		r4, r0
	bcs		_08094064
	add		r2, r0, #0x0
_08094050:
	ldrb	r0, [r7, #0x0]
	lsl		r1, r4, #0x3
	lsl		r0, r1
	orr		r5, r0
	add		r7, #0x1
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, r2
	bcc		_08094050
_08094064:
	add		r0, r5, #0x0
	lsr		r0, r3
	mov		r3, r8
	and		r0, r3
	ldr		r1, _0809413c
	mov		r10, r1
	mov		r3, r10
	mov		r2, r9
	and		r3, r2
	orr		r3, r0
	str		r3, [sp, #0x0]
	add		r0, r5, #0x0
	ldrb	r1, [r6, #0x2]
	lsr		r0, r1
	ldrb	r1, [r6, #0x8]
	and		r0, r1
	lsl		r0, r0, #0x8
	ldr		r4, _08094140
	add		r2, r4, #0x0
	and		r2, r3
	orr		r2, r0
	str		r2, [sp, #0x0]
	add		r0, r5, #0x0
	ldrb	r3, [r6, #0x3]
	lsr		r0, r3
	ldrb	r1, [r6, #0x9]
	and		r0, r1
	lsl		r0, r0, #0x10
	ldr		r3, _08094144
	and		r3, r2
	orr		r3, r0
	str		r3, [sp, #0x0]
	add		r0, r5, #0x0
	ldrb	r1, [r6, #0x4]
	lsr		r0, r1
	ldrb	r1, [r6, #0xa]
	and		r0, r1
	lsl		r0, r0, #0x18
	ldr		r2, _08094148
	mov		r8, r2
	mov		r1, r8
	and		r1, r3
	orr		r1, r0
	mov		r8, r1
	str		r1, [sp, #0x0]
	add		r1, r5, #0x0
	ldrb	r2, [r6, #0x5]
	lsr		r1, r2
	ldrb	r0, [r6, #0xb]
	and		r1, r0
	mov		r9, sp
	ldr		r2, [sp, #0x4]
	mov		r3, r10
	and		r2, r3
	orr		r2, r1
	str		r2, [sp, #0x4]
	add		r0, r5, #0x0
	ldrb	r1, [r6, #0x6]
	lsr		r0, r1
	ldrb	r1, [r6, #0xc]
	and		r0, r1
	lsl		r0, r0, #0x8
	and		r4, r2
	orr		r4, r0
	str		r4, [sp, #0x4]
	ldrh	r0, [r6, #0xe]
	and		r5, r0
	lsl		r1, r5, #0x10
	ldr		r0, _0809414c
	and		r0, r4
	orr		r0, r1
	str		r0, [sp, #0x4]
	lsr		r0, r0, #0x10
	ldrb	r6, [r6, #0x0]
	add		r0, r0, r6
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r10, r0
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0809410a
	b		_0809422c
_0809410a:
	ldr		r2, _08094150
	ldr		r3, [r2, #0x0]
	ldrb	r2, [r3, #0x0]
	cmp		r2, #0x1
	bne		_080941c8
	ldrb	r0, [r3, #0x2]
	mov		r5, r12
	asr		r0, r5
	and		r0, r2
	cmp		r0, #0x0
	bne		_08094122
	b		_0809422c
_08094122:
	mov		r1, r8
	lsr		r0, r1, #0x10
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x4
	bne		_08094154
	mov		r0, r12
	mov		r1, sp
	add		r2, r7, #0x0
	bl		sub_08094244
	b		_0809422c

.incbin "base.gba", 0x9413A, 0x2

_0809413c:	.4byte 0xFFFFFF00
_08094140:	.4byte 0xFFFF00FF
_08094144:	.4byte 0xFF00FFFF
_08094148:	.4byte 0x00FFFFFF
_0809414c:	.4byte 0x0000FFFF
_08094150:	.4byte 0x0200CCD0

_08094154:
	mov		r5, r9
	ldrb	r0, [r5, #0x3]
	cmp		r0, #0x0
	bne		_08094168
	mov		r0, r12
	mov		r1, sp
	add		r2, r7, #0x0
	bl		sub_080944e4
	b		_0809422c
_08094168:
	mov		r4, #0x0
	ldr		r1, _08094180
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x1a]
	mov		r5, r12
	asr		r0, r5
	and		r0, r2
	cmp		r0, #0x0
	beq		_08094184
	ldrb	r0, [r3, #0x4]
	b		_080941aa

.incbin "base.gba", 0x9417E, 0x2

_08094180:	.4byte 0x0200CCC0

_08094184:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, #0x3
	bhi		_0809422c
	lsl		r0, r4, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x1a]
	mov		r2, r12
	asr		r0, r2
	mov		r2, #0x1
	and		r0, r2
	cmp		r0, #0x0
	beq		_08094184
	ldr		r3, _080941c4
	ldr		r0, [r3, #0x0]
	ldrb	r0, [r0, #0x4]
	mov		r5, r12
_080941aa:
	asr		r0, r5
	and		r0, r2
	cmp		r0, #0x0
	beq		_08094184
	cmp		r4, #0x3
	bhi		_0809422c
	add		r0, r4, #0x0
	mov		r1, r12
	mov		r2, sp
	add		r3, r7, #0x0
	bl		sub_080942f8
	b		_0809422c

_080941c4:	.4byte 0x0200CCD0

_080941c8:
	ldrb	r1, [r3, #0x2]
	mov		r2, r9
	ldrb	r0, [r2, #0x1]
	add		r5, r1, #0x0
	and		r5, r0
	cmp		r5, #0x0
	beq		_0809422c
	mov		r4, #0x0
	mov		r6, #0x1
_080941da:
	add		r0, r5, #0x0
	asr		r0, r4
	and		r0, r6
	cmp		r0, #0x0
	beq		_08094222
	mov		r1, sp
	ldrb	r0, [r1, #0x2]
	cmp		r0, #0x4
	bne		_080941f6
	add		r0, r4, #0x0
	add		r2, r7, #0x0
	bl		sub_08094244
	b		_08094222
_080941f6:
	ldrb	r0, [r1, #0x3]
	cmp		r0, #0x0
	bne		_08094208
	add		r0, r4, #0x0
	mov		r1, sp
	add		r2, r7, #0x0
	bl		sub_080944e4
	b		_08094222
_08094208:
	ldr		r0, _08094240
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x4]
	asr		r0, r4
	and		r0, r6
	cmp		r0, #0x0
	beq		_08094222
	add		r0, r4, #0x0
	add		r1, r4, #0x0
	mov		r2, sp
	add		r3, r7, #0x0
	bl		sub_080942f8
_08094222:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, #0x3
	bls		_080941da
_0809422c:
	mov		r0, r10
_0809422e:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9423E, 0x2

_08094240:	.4byte 0x0200CCD0
	thumb_func_end sub_08094000

	thumb_func_start sub_08094244
sub_08094244:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r6, r1, #0x0
	str		r2, [sp, #0x0]
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	ldr		r2, _08094278
	lsl		r1, r7, #0x2
	add		r1, r1, r2
	ldr		r3, [r1, #0x0]
	add		r5, r3, #0x0
	add		r5, #0xc
	mov		r4, #0x0
	mov		r0, #0x0
	strh	r0, [r5, #0x2]
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x18]
	add		r1, r2, #0x0
	ldrh	r2, [r6, #0x6]
	cmp		r0, r2
	bcs		_08094280
	mov		r0, #0x49
	strh	r0, [r3, #0xc]
	ldr		r0, _0809427c
	strh	r0, [r5, #0x2]
	b		_080942ce

_08094278:	.4byte 0x0200CCB0
_0809427c:	.4byte 0x00000701

_08094280:
	ldrb	r0, [r5, #0x7]
	cmp		r0, #0x0
	beq		_08094298
	ldrb	r0, [r5, #0x6]
	cmp		r0, #0x0
	beq		_080942a4
	ldr		r0, _08094294
	strh	r0, [r5, #0x2]
	b		_080942ce

.incbin "base.gba", 0x94292, 0x2

_08094294:	.4byte 0x00000709

_08094298:
	ldrb	r0, [r5, #0x6]
	cmp		r0, #0x0
	beq		_080942a4
	mov		r0, #0xe1
	lsl		r0, r0, #0x3
	strh	r0, [r5, #0x2]
_080942a4:
	mov		r4, #0x0
	ldr		r0, _080942ec
	strh	r0, [r5, #0x0]
	ldrh	r0, [r6, #0x6]
	strh	r0, [r5, #0x4]
	ldrh	r2, [r6, #0x6]
	lsl		r0, r7, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x14]
	str		r0, [sp, #0x4]
	ldr		r0, _080942f0
	ldr		r0, [r0, #0x0]
	add		r1, sp, #0x4
	ldr		r3, [r0, #0x4]
	mov		r0, sp
	bl		sub_080bbc7c
	mov		r0, #0x1
	strb	r0, [r5, #0x6]
	strh	r4, [r5, #0x0]
_080942ce:
	ldrh	r0, [r5, #0x2]
	cmp		r0, #0x0
	beq		_080942e2
	ldr		r0, _080942f4
	ldr		r2, [r0, #0x0]
	mov		r0, #0x10
	lsl		r0, r7
	ldrb	r1, [r2, #0x4]
	orr		r0, r1
	strb	r0, [r2, #0x4]
_080942e2:
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x942EA, 0x2

_080942ec:	.4byte 0x00008042
_080942f0:	.4byte 0x0200CCD8
_080942f4:	.4byte 0x0200CCD4
	thumb_func_end sub_08094244

	thumb_func_start sub_080942f8
sub_080942f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r2, #0x0
	lsl		r0, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r10, r1
	ldr		r1, _080943c4
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	ldrh	r0, [r0, #0x0]
	mov		r9, r0
	mov		r0, r12
	add		r0, #0x21
	ldrb	r2, [r6, #0x4]
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	ldrb	r2, [r6, #0x2]
	cmp		r2, #0x2
	bne		_08094334
	ldr		r0, _080943c8
	cmp		r9, r0
	beq		_0809434e
_08094334:
	cmp		r2, #0x1
	bne		_0809433e
	ldr		r0, _080943cc
	cmp		r9, r0
	beq		_0809434e
_0809433e:
	mov		r3, #0x1b
	add		r3, r12
	mov		r8, r3
	cmp		r2, #0x3
	bne		_08094372
	ldr		r0, _080943d0
	cmp		r9, r0
	bne		_08094372
_0809434e:
	ldrb	r1, [r6, #0x4]
	mov		r0, r12
	add		r0, #0x21
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	mov		r7, #0x1b
	add		r7, r12
	mov		r8, r7
	ldrb	r2, [r6, #0x5]
	cmp		r0, r2
	bne		_08094372
	add		r0, r7, r1
	mov		r1, #0x1
	mov		r3, r10
	lsl		r1, r3
	ldrb	r2, [r0, #0x0]
	orr		r1, r2
	strb	r1, [r0, #0x0]
_08094372:
	ldrb	r2, [r6, #0x4]
	mov		r7, r8
	add		r0, r7, r2
	ldrb	r0, [r0, #0x0]
	mov		r3, r12
	ldrb	r1, [r3, #0x1a]
	and		r0, r1
	cmp		r0, r1
	bne		_0809446e
	add		r3, #0x21
	add		r2, r3, r2
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x3
	and		r0, r1
	mov		r1, #0x0
	strb	r0, [r2, #0x0]
	ldrb	r0, [r6, #0x4]
	add		r0, r8
	strb	r1, [r0, #0x0]
	mov		r7, r12
	ldrh	r1, [r7, #0x0]
	ldr		r2, _080943d4
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r5, r3, #0x0
	cmp		r0, #0x1
	bhi		_08094460
	ldr		r0, _080943cc
	cmp		r1, r0
	bne		_080943d8
	ldrb	r1, [r6, #0x4]
	lsl		r1, r1, #0x2
	sub		r3, #0x1d
	add		r1, r3, r1
	ldrh	r2, [r7, #0x2e]
	ldr		r0, [r1, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	b		_080943ee

_080943c4:	.4byte 0x0200CCC0
_080943c8:	.4byte 0x00008022
_080943cc:	.4byte 0x00008021
_080943d0:	.4byte 0x00008023
_080943d4:	.4byte 0x00007FDF

_080943d8:
	ldrb	r2, [r6, #0x4]
	lsl		r2, r2, #0x2
	mov		r3, r12
	add		r3, #0x4
	add		r2, r3, r2
	mov		r7, r12
	ldrh	r1, [r7, #0x2e]
	lsl		r1, r1, #0x2
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_080943ee:
	mov		r0, r12
	ldrh	r1, [r0, #0x2e]
	ldr		r0, [r0, #0x14]
	sub		r0, r0, r1
	mov		r1, r12
	str		r0, [r1, #0x14]
	cmp		r0, #0x0
	beq		_08094402
	cmp		r0, #0x0
	bge		_0809446e
_08094402:
	mov		r0, r12
	add		r0, #0x20
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	mov		r7, r12
	ldrh	r1, [r7, #0x0]
	ldr		r0, _08094444
	cmp		r1, r0
	bne		_0809444c
	mov		r4, #0x0
_08094416:
	add		r0, r5, r4
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	lsl		r1, r4, #0x2
	add		r1, r3, r1
	mov		r2, r12
	ldrh	r0, [r2, #0x2e]
	add		r2, r0, #0x0
	mul		r2, r4
	mov		r7, r12
	ldr		r0, [r7, #0x28]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, #0x3
	bls		_08094416
	ldr		r0, [r7, #0x30]
	str		r0, [r7, #0x14]
	ldr		r0, _08094448
	strh	r0, [r7, #0x0]
	b		_0809446e

_08094444:	.4byte 0x00008021
_08094448:	.4byte 0x00008022

_0809444c:
	strb	r2, [r5, #0x0]
	mov		r0, r12
	str		r2, [r0, #0x14]
	ldr		r0, _0809445c
	mov		r1, r12
	strh	r0, [r1, #0x0]
	b		_0809446e

.incbin "base.gba", 0x9445A, 0x2

_0809445c:	.4byte 0x00008023

_08094460:
	lsl		r1, r1, #0x10
	ldr		r0, _080944d0
	cmp		r1, r0
	bne		_0809446e
	ldr		r0, _080944d4
	mov		r2, r12
	strh	r0, [r2, #0x0]
_0809446e:
	mov		r3, r12
	ldrh	r0, [r3, #0x0]
	cmp		r0, r9
	bne		_08094498
	ldrb	r2, [r6, #0x4]
	mov		r0, r12
	add		r0, #0x21
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldr		r7, [sp, #0x0]
	cmp		r0, r7
	bne		_08094498
	mov		r1, r8
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	mov		r2, r10
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080944be
_08094498:
	ldr		r4, _080944d8
	ldrh	r2, [r4, #0x0]
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	ldr		r0, _080944dc
	ldr		r3, [r0, #0x0]
	mov		r0, #0x10
	mov		r7, r10
	lsl		r0, r7
	ldrb	r1, [r3, #0x2]
	orr		r0, r1
	mov		r1, #0x0
	strb	r0, [r3, #0x2]
	lsl		r0, r7, #0x2
	ldr		r3, _080944e0
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	strh	r1, [r0, #0x2]
	strh	r2, [r4, #0x0]
_080944be:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x944CE, 0x2

_080944d0:	.4byte 0x80230000
_080944d4:	.4byte 0x00008020
_080944d8:	.4byte 0x04000208
_080944dc:	.4byte 0x0200CCD4
_080944e0:	.4byte 0x0200CCC0
	thumb_func_end sub_080942f8

	thumb_func_start sub_080944e4
sub_080944e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r1, #0x0
	str		r2, [sp, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r8, r0
	mov		r7, #0x0
	ldr		r1, _08094544
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	add		r5, r4, #0x0
	add		r5, #0x34
	ldrh	r0, [r4, #0x34]
	mov		r9, r0
	ldrb	r0, [r6, #0x4]
	add		r3, r4, #0x0
	add		r3, #0x55
	add		r0, r3, r0
	ldrb	r0, [r0, #0x0]
	mov		r10, r0
	ldrb	r0, [r6, #0x2]
	cmp		r0, #0x3
	bne		_08094554
	ldr		r0, _08094548
	ldr		r2, [r0, #0x0]
	mov		r0, #0x1
	mov		r1, r8
	lsl		r0, r1
	ldrb	r1, [r2, #0x1]
	orr		r0, r1
	strb	r0, [r2, #0x1]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _0809454c
	cmp		r1, r0
	bne		_0809459a
	add		r0, r4, #0x0
	add		r0, #0x54
	strb	r7, [r0, #0x0]
	strb	r7, [r3, #0x0]
	ldr		r0, _08094550
	strh	r0, [r4, #0x34]
	b		_0809459a

_08094544:	.4byte 0x0200CCC0
_08094548:	.4byte 0x0200CCD4
_0809454c:	.4byte 0x00008042
_08094550:	.4byte 0x00008043

_08094554:
	cmp		r0, #0x2
	bne		_08094580
	ldr		r0, _08094578
	cmp		r9, r0
	bne		_0809456c
	ldr		r0, [r5, #0x14]
	cmp		r0, #0x0
	bne		_0809456c
	mov		r0, r8
	add		r1, r5, #0x0
	bl		sub_080946f0
_0809456c:
	ldrh	r1, [r5, #0x0]
	ldr		r0, _0809457c
	cmp		r1, r0
	bne		_0809459a
	b		_0809459e

.incbin "base.gba", 0x94576, 0x2

_08094578:	.4byte 0x00008041
_0809457c:	.4byte 0x00008042

_08094580:
	cmp		r0, #0x1
	bne		_0809459a
	ldr		r7, _0809464c
	cmp		r9, r7
	beq		_0809459e
	mov		r0, r8
	add		r1, r5, #0x0
	bl		sub_08094660
	ldrh	r0, [r4, #0x34]
	cmp		r0, r7
	bne		_0809463a
	mov		r7, #0x1
_0809459a:
	cmp		r7, #0x0
	beq		_080945f4
_0809459e:
	ldrb	r2, [r6, #0x5]
	ldrb	r3, [r6, #0x4]
	add		r4, r5, #0x0
	add		r4, #0x21
	add		r0, r4, r3
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0x3
	and		r0, r1
	cmp		r2, r0
	bne		_080945f4
	ldr		r0, _08094650
	ldr		r0, [r0, #0x0]
	lsl		r1, r3, #0x2
	add		r1, #0x4
	add		r1, r5, r1
	ldrh	r2, [r6, #0x6]
	ldr		r3, [r0, #0x4]
	mov		r0, sp
	bl		sub_080bbc7c
	ldrh	r1, [r5, #0x0]
	ldr		r0, _08094654
	cmp		r1, r0
	bne		_080945e4
	ldrb	r0, [r6, #0x4]
	lsl		r0, r0, #0x2
	add		r2, r5, #0x4
	add		r2, r2, r0
	ldrh	r0, [r5, #0x2e]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
_080945e4:
	ldrh	r1, [r6, #0x6]
	ldr		r0, [r5, #0x14]
	sub		r0, r0, r1
	str		r0, [r5, #0x14]
	ldrb	r0, [r6, #0x4]
	add		r0, r4, r0
	ldrb	r1, [r6, #0x5]
	strb	r1, [r0, #0x0]
_080945f4:
	ldrh	r0, [r5, #0x18]
	cmp		r0, #0x0
	bne		_0809463a
	ldrb	r0, [r6, #0x4]
	add		r1, r5, #0x0
	add		r1, #0x20
	strb	r0, [r1, #0x0]
	ldrh	r0, [r5, #0x0]
	cmp		r0, r9
	bne		_0809461c
	add		r0, r5, #0x0
	add		r0, #0x21
	ldrb	r2, [r6, #0x4]
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, r10
	bne		_0809461c
	ldrb	r6, [r6, #0x5]
	cmp		r0, r6
	bne		_0809463a
_0809461c:
	ldr		r3, _08094658
	ldrh	r2, [r3, #0x0]
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
	ldr		r0, _0809465c
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	mov		r1, r8
	lsl		r0, r1
	ldrb	r1, [r4, #0x2]
	orr		r0, r1
	mov		r1, #0x0
	strb	r0, [r4, #0x2]
	strh	r1, [r5, #0x2]
	strh	r2, [r3, #0x0]
_0809463a:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9464A, 0x2

_0809464c:	.4byte 0x00008041
_08094650:	.4byte 0x0200CCD8
_08094654:	.4byte 0x00008042
_08094658:	.4byte 0x04000208
_0809465c:	.4byte 0x0200CCD4
	thumb_func_end sub_080944e4

	thumb_func_start sub_08094660
sub_08094660:
	push	{ r4, r5, r6, r7, lr }
	add		r2, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	ldr		r0, _0809467c
	ldr		r3, [r0, #0x0]
	ldrb	r1, [r3, #0x0]
	mov		r12, r0
	cmp		r1, #0x1
	bne		_08094680
	mov		r5, #0x3
	add		r1, r3, #0x0
	add		r1, #0xf
	b		_08094688

_0809467c:	.4byte 0x0200CCD0

_08094680:
	mov		r5, #0x2
	add		r0, r4, #0x0
	add		r0, #0x10
	add		r1, r3, r0
_08094688:
	mov		r7, #0x1
	add		r0, r7, #0x0
	lsl		r0, r4
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	add		r4, r6, #0x0
	ldrh	r3, [r2, #0x0]
	cmp		r3, #0x0
	bne		_080946e6
	ldrb	r0, [r1, #0x0]
	cmp		r0, r5
	bcs		_080946c0
	mov		r0, #0x49
	strh	r0, [r2, #0x0]
	ldr		r0, _080946b8
	strh	r0, [r2, #0x18]
	ldr		r0, _080946bc
	ldr		r2, [r0, #0x0]
	ldrb	r1, [r2, #0x4]
	add		r0, r6, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x4]
	b		_080946e6

.incbin "base.gba", 0x946B6, 0x2

_080946b8:	.4byte 0x00000702
_080946bc:	.4byte 0x0200CCD4

_080946c0:
	strh	r3, [r2, #0x18]
	ldrb	r0, [r1, #0x0]
	sub		r0, r0, r5
	strb	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x2d
	str		r0, [r2, #0x4]
	mov		r0, #0x7
	str		r0, [r2, #0x14]
	strb	r7, [r2, #0x1f]
	strh	r3, [r2, #0x2e]
	strb	r4, [r2, #0x1a]
	ldr		r0, _080946ec
	strh	r0, [r2, #0x0]
	mov		r0, r12
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x5]
	orr		r4, r0
	strb	r4, [r1, #0x5]
_080946e6:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080946ec:	.4byte 0x00008041
	thumb_func_end sub_08094660

	thumb_func_start sub_080946f0
sub_080946f0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	add		r0, r4, #0x0
	add		r0, #0x2d
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08094714
	ldr		r0, _08094710
	lsl		r1, r5, #0x5
	add		r1, #0x14
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	add		r0, #0x4
	b		_0809476a

_08094710:	.4byte 0x0200CCD0

_08094714:
	ldr		r1, _08094758
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r1, [r4, #0x30]
	ldr		r0, [r2, #0x6c]
	cmp		r1, r0
	bls		_08094768
	mov		r1, #0x80
	lsl		r1, r1, #0x11
	lsl		r1, r5
	lsr		r1, r1, #0x18
	ldr		r0, _0809475c
	ldr		r3, [r0, #0x0]
	ldrb	r2, [r3, #0x4]
	add		r0, r1, #0x0
	orr		r0, r2
	strb	r0, [r3, #0x4]
	ldr		r0, _08094760
	ldr		r2, [r0, #0x0]
	ldrb	r0, [r2, #0x5]
	bic		r0, r1
	strb	r0, [r2, #0x5]
	ldr		r0, _08094764
	strh	r0, [r4, #0x18]
	mov		r0, #0x47
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_08093018
	b		_0809479c

.incbin "base.gba", 0x94756, 0x2

_08094758:	.4byte 0x0200CCC0
_0809475c:	.4byte 0x0200CCD4
_08094760:	.4byte 0x0200CCD0
_08094764:	.4byte 0x00000701

_08094768:
	ldr		r0, [r2, #0x68]
_0809476a:
	str		r0, [r4, #0x4]
	mov		r3, #0x0
	add		r6, r4, #0x0
	add		r6, #0x21
	mov		r7, #0x0
	add		r5, r4, #0x4
_08094776:
	add		r0, r6, r3
	strb	r7, [r0, #0x0]
	lsl		r1, r3, #0x2
	add		r1, r5, r1
	ldrh	r0, [r4, #0x2e]
	add		r2, r0, #0x0
	mul		r2, r3
	ldr		r0, [r4, #0x4]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x3
	bls		_08094776
	ldr		r0, [r4, #0x30]
	str		r0, [r4, #0x14]
	ldr		r0, _080947a4
	strh	r0, [r4, #0x0]
_0809479c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x947A2, 0x2

_080947a4:	.4byte 0x00008042
	thumb_func_end sub_080946f0

	thumb_func_start sub_080947a8
sub_080947a8:
	push	{ r4, r5, r6, r7, lr }
	ldr		r2, _08094834
	ldr		r0, [r2, #0x0]
	ldrb	r1, [r0, #0x4]
	ldrb	r0, [r0, #0x5]
	orr		r0, r1
	cmp		r0, #0x0
	beq		_0809482e
	ldr		r1, _08094838
	ldrh	r0, [r1, #0x0]
	mov		r12, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _0809483c
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x2]
	lsr		r7, r0, #0x4
	mov		r3, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	ldr		r4, _08094840
_080947d2:
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	lsl		r0, r3
	lsr		r2, r0, #0x18
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x4]
	and		r0, r2
	cmp		r0, #0x0
	beq		_080947fa
	ldr		r0, [r6, #0x0]
	ldrb	r0, [r0, #0x2]
	and		r0, r2
	cmp		r0, #0x0
	bne		_080947fa
	lsl		r0, r3, #0x2
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x2]
	add		r0, #0x1
	strh	r0, [r1, #0x2]
_080947fa:
	ldr		r0, [r5, #0x0]
	ldrb	r0, [r0, #0x5]
	and		r0, r2
	cmp		r0, #0x0
	beq		_08094818
	add		r0, r7, #0x0
	and		r0, r2
	cmp		r0, #0x0
	bne		_08094818
	lsl		r0, r3, #0x2
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x36]
	add		r0, #0x1
	strh	r0, [r1, #0x36]
_08094818:
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x3
	bls		_080947d2
	ldr		r0, [r6, #0x0]
	mov		r1, #0x0
	strb	r1, [r0, #0x2]
	ldr		r0, _08094838
	mov		r1, r12
	strh	r1, [r0, #0x0]
_0809482e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08094834:	.4byte 0x0200CCD0
_08094838:	.4byte 0x04000208
_0809483c:	.4byte 0x0200CCD4
_08094840:	.4byte 0x0200CCC0
	thumb_func_end sub_080947a8

	thumb_func_start sub_08094844
sub_08094844:
	push	{ lr }
	ldr		r0, _08094858
	bl		sub_08090728
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_08090bf0
	pop		{ r0 }
	bx		r0

_08094858:	.4byte 0x08091C09
	thumb_func_end sub_08094844

	thumb_func_start sub_0809485c
sub_0809485c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	ldr		r0, _08094874
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08094878
	mov		r0, #0x1
	neg		r0, r0
	b		_080948f8

_08094874:	.4byte 0x04000208

_08094878:
	ldr		r0, _080948a4
	ldrh	r0, [r0, #0x0]
	mov		r8, r0
	ldr		r4, _080948a8
	ldr		r1, [r4, #0x0]
	mov		r0, #0xa
	str		r0, [r1, #0x0]
	ldr		r0, _080948ac
	bl		sub_08090740
	bl		sub_08094910
	ldr		r0, [r4, #0x0]
	ldrb	r0, [r0, #0xa]
	lsl		r0, r0, #0x2
	ldr		r1, _080948b0
	add		r4, r0, r1
	lsl		r0, r5, #0x1b
	lsr		r5, r0, #0x18
	mov		r7, #0x0
	b		_080948c6

.incbin "base.gba", 0x948A2, 0x2

_080948a4:	.4byte 0x04000200
_080948a8:	.4byte 0x0200CCA8
_080948ac:	.4byte sub_08094a78
_080948b0:	.4byte 0x04000100

_080948b4:
	strh		r6, [r4, #0x2]
	strh	r6, [r4, #0x0]
	mov		r0, #0x83
	strh		r0, [r4, #0x2]
_080948bc:
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0x1f
	bls		_080948bc
	strh		r7, [r4, #0x2]
	strh	r7, [r4, #0x0]
_080948c6:
	sub		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0xff
	beq		_080948da
	bl		sub_08094984
	add		r6, r0, #0x0
	cmp		r6, #0x0
	beq		_080948b4
_080948da:
	ldr		r1, _08094904
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, _08094908
	mov		r2, r8
	strh	r2, [r0, #0x0]
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r0, _0809490c
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	bl		sub_08090740
	add		r0, r6, #0x0
_080948f8:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x94902, 0x2

_08094904:	.4byte 0x04000208
_08094908:	.4byte 0x04000200
_0809490c:	.4byte 0x0200CCA8
	thumb_func_end sub_0809485c

	thumb_func_start sub_08094910
sub_08094910:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	ldr		r3, _08094968
	mov		r4, #0x0
	strh	r4, [r3, #0x0]
	ldr		r2, _0809496c
	ldr		r0, _08094970
	ldr		r0, [r0, #0x0]
	mov		r1, #0x8
	ldrb	r0, [r0, #0xa]
	lsl		r1, r0
	mov		r5, #0x80
	orr		r1, r5
	ldrh	r0, [r2, #0x0]
	bic		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	ldr		r0, _08094974
	strh	r4, [r0, #0x0]
	sub		r2, #0xd8
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	add		r0, r1, #0x0
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x81
	lsl		r3, r3, #0x7
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r1, _08094978
	ldr		r2, _0809497c
	mov		r0, sp
	bl		sub_080bb5fc
	ldr		r0, _08094980
	strh	r5, [r0, #0x0]
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08094968:	.4byte 0x04000208
_0809496c:	.4byte 0x04000200
_08094970:	.4byte 0x0200CCA8
_08094974:	.4byte 0x04000134
_08094978:	.4byte 0x0200CCE0
_0809497c:	.4byte 0x05000003
_08094980:	.4byte 0x04000202
	thumb_func_end sub_08094910

	thumb_func_start sub_08094984
sub_08094984:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, _08094998
	ldrb	r1, [r0, #0x1]
	mov		r12, r1
	add		r7, r0, #0x0
	cmp		r1, #0x0
	beq		_0809499c
	cmp		r1, #0x1
	beq		_080949d4
	b		_08094a6c

_08094998:	.4byte 0x0200CCE0

_0809499c:
	mov		r6, #0x1
	strb	r6, [r7, #0x0]
	ldr		r3, _080949c8
	ldrh	r0, [r3, #0x0]
	mov		r5, #0x1
	orr		r0, r5
	strh	r0, [r3, #0x0]
	ldr		r4, _080949cc
	mov		r0, r12
	strh	r0, [r4, #0x0]
	ldr		r2, _080949d0
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	strh	r6, [r4, #0x0]
	strb	r5, [r7, #0x1]
	ldrb	r0, [r3, #0x0]
	orr		r0, r1
	strb	r0, [r3, #0x0]
	b		_08094a70

.incbin "base.gba", 0x949C6, 0x2

_080949c8:	.4byte 0x04000128
_080949cc:	.4byte 0x04000208
_080949d0:	.4byte 0x04000200

_080949d4:
	ldrh	r0, [r7, #0xa]
	cmp		r0, #0x0
	bne		_08094a68
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x1
	bne		_08094a04
	ldrh	r0, [r7, #0x2]
	cmp		r0, #0x0
	bne		_08094a70
	ldr		r3, _080949fc
	strh	r0, [r3, #0x0]
	ldr		r2, _08094a00
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r1, r12
	strh	r1, [r3, #0x0]
	b		_08094a70

.incbin "base.gba", 0x949FA, 0x2

_080949fc:	.4byte 0x04000208
_08094a00:	.4byte 0x04000128

_08094a04:
	ldrh	r1, [r7, #0x4]
	ldr		r0, _08094a50
	cmp		r1, r0
	beq		_08094a70
	ldrh	r6, [r7, #0x2]
	cmp		r6, #0x0
	bne		_08094a70
	ldr		r4, _08094a54
	strh	r6, [r4, #0x0]
	ldr		r3, _08094a58
	ldrh	r1, [r3, #0x0]
	ldr		r0, _08094a5c
	and		r0, r1
	strh	r0, [r3, #0x0]
	mov		r7, r12
	strh	r7, [r4, #0x0]
	ldr		r2, _08094a60
	strh	r6, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	add		r0, r1, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _08094a64
	mov		r5, #0x80
	strh	r5, [r0, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r7, #0x81
	lsl		r7, r7, #0x7
	add		r1, r7, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	strh	r6, [r4, #0x0]
	ldrh	r0, [r3, #0x0]
	orr		r0, r5
	strh	r0, [r3, #0x0]
	mov		r0, r12
	strh	r0, [r4, #0x0]
	b		_08094a70

_08094a50:	.4byte 0x00008001
_08094a54:	.4byte 0x04000208
_08094a58:	.4byte 0x04000200
_08094a5c:	.4byte 0x0000FF7F
_08094a60:	.4byte 0x04000128
_08094a64:	.4byte 0x04000202

_08094a68:
	mov		r0, #0x2
	strb	r0, [r7, #0x1]
_08094a6c:
	ldrh	r0, [r7, #0xa]
	b		_08094a72
_08094a70:
	mov		r0, #0x0
_08094a72:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08094984

	thumb_func_start sub_08094a78
sub_08094a78:
	push	{ r4, r5, lr }
	ldr		r0, _08094ac0
	ldr		r5, [r0, #0x0]
	ldr		r0, _08094ac4
	ldrb	r1, [r0, #0x0]
	add		r4, r0, #0x0
	cmp		r1, #0x1
	beq		_08094a92
	ldr		r0, _08094ac8
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	orr		r1, r2
	strh	r1, [r0, #0x0]
_08094a92:
	ldrb	r2, [r4, #0x0]
	lsl		r1, r2, #0x4
	add		r0, r5, #0x0
	lsl		r0, r1
	lsr		r1, r0, #0x10
	mov		r0, #0x1
	sub		r0, r0, r2
	lsl		r0, r0, #0x4
	lsl		r5, r0
	add		r0, r5, #0x0
	lsr		r5, r0, #0x10
	ldrh	r0, [r4, #0xa]
	cmp		r0, #0x0
	bne		_08094ae6
	ldrh	r2, [r4, #0x6]
	cmp		r1, r2
	bne		_08094ae4
	ldrh	r3, [r4, #0x2]
	cmp		r3, #0x3
	bls		_08094acc
	strh	r5, [r4, #0xa]
	b		_08094ae6

.incbin "base.gba", 0x94ABE, 0x2

_08094ac0:	.4byte 0x04000120
_08094ac4:	.4byte 0x0200CCE0
_08094ac8:	.4byte 0x04000128

_08094acc:
	ldrh	r0, [r4, #0x4]
	mvn		r0, r0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r1, r0
	bne		_08094ae6
	mvn		r0, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r5, r0
	bne		_08094ae6
	add		r0, r3, #0x1
_08094ae4:
	strh	r0, [r4, #0x2]
_08094ae6:
	ldrh	r0, [r4, #0x2]
	cmp		r0, #0x3
	bhi		_08094afc
	lsl		r0, r0, #0x1
	ldr		r1, _08094af8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	b		_08094afe

.incbin "base.gba", 0x94AF6, 0x2

_08094af8:	.4byte 0x080deac0 @ NINTENDOSio32ID_030820

_08094afc:
	ldr		r0, _08094b54
_08094afe:
	strh	r0, [r4, #0x4]
	mvn		r0, r5
	strh	r0, [r4, #0x6]
	ldr		r3, _08094b58
	ldrh	r2, [r4, #0x4]
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x1
	sub		r0, r0, r1
	lsl		r0, r0, #0x4
	lsl		r2, r0
	ldrh	r0, [r4, #0x6]
	lsl		r1, r1, #0x4
	lsl		r0, r1
	add		r2, r2, r0
	str		r2, [r3, #0x0]
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x1
	bne		_08094b4c
	ldrh	r0, [r4, #0x2]
	cmp		r0, #0x0
	bne		_08094b2e
	ldr		r0, _08094b5c
	cmp		r5, r0
	bne		_08094b4c
_08094b2e:
	mov		r0, #0x0
	ldr		r1, _08094b60
_08094b32:
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, r1
	bls		_08094b32
	ldrh	r0, [r4, #0xa]
	cmp		r0, #0x0
	bne		_08094b4c
	ldr		r0, _08094b64
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	orr		r1, r2
	strh	r1, [r0, #0x0]
_08094b4c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x94B52, 0x2

_08094b54:	.4byte 0x00008001
_08094b58:	.4byte 0x04000120
_08094b5c:	.4byte 0x0000494E
_08094b60:	.4byte 0x00000257
_08094b64:	.4byte 0x04000128

.incbin "base.gba", 0x94B68, 0x14
	thumb_func_end sub_08094a78

	thumb_func_start sub_08094b7c
sub_08094b7c:
	mov		r12, r0
.incbin "base.gba", 0x94b7e, 0x2
	ldrb	r1, [r1, r3]
.incbin "base.gba", 0x94b82, 0x2
	lsl		r0, r1, #0x1c
	lsr		r0, r0, #0x1a
	add		r0, r0, r3
	ldr		r3, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	sub		r0, r0, r3
	mul		r0, r2
	lsr		r0, r0, #0x8
	add		r3, r3, r0
	lsr		r1, r1, #0x4
	lsr		r3, r1
	ldr		r2, _08094bb0
	bx		pc

.incbin "base.gba", 0x94B9E, 0x2
_08094ba0:
.incbin "base.gba", 0x94BA0, 0x4
.incbin "base.gba", 0x94BA4, 0x4
.incbin "base.gba", 0x94BA8, 0x4
.incbin "base.gba", 0x94BAC, 0x4
_08094bb0:	.4byte 0x0A080000

.incbin "base.gba", 0x94BB4, 0x4
	thumb_func_end sub_08094b7c


.incbin "base.gba", 0x94BB8, 0xB0
	non_word_aligned_thumb_func_start sub_08094c68
sub_08094c68:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	push	{ r2, r3 }
	mov		r5, #0x0
	ldr		r6, _08094fdc
	mov		r7, #0x8
	mov		r9, r0
	mov		r10, r1
_08094c7e:
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_08094ce4
	cmp		r0, #0x80
	beq		_08094ca2
	ldrb	r1, [r6, #0x1]
	cmp		r0, #0x81
	beq		_08094ca8
	cmp		r0, #0x82
	beq		_08094cb6
	cmp		r0, #0x83
	beq		_08094cca
	ldrb	r2, [r6, #0xf]
	sub		r1, r1, r2
	bhi		_08094cc8
	mov		r0, #0x0
	strb	r0, [r6, #0x0]
	b		_08094ce4
_08094ca2:
	add		r0, #0x1
	ldrb	r1, [r6, #0xc]
	b		_08094cc6
_08094ca8:
	ldrb	r2, [r6, #0xc]
	add		r1, r1, r2
	cmp		r1, #0xff
	bmi		_08094cc8
	mov		r1, #0xff
	add		r0, #0x1
	b		_08094cc6
_08094cb6:
	ldrb	r2, [r6, #0xd]
	sub		r1, r1, r2
	bcs		_08094cc2
	ldrb	r2, [r6, #0xe]
	cmp		r0, r2
	bhi		_08094cc8
_08094cc2:
	add		r0, #0x1
	ldrb	r1, [r6, #0xe]
_08094cc6:
	strb	r0, [r6, #0x0]
_08094cc8:
	strb	r1, [r6, #0x1]
_08094cca:
	ldrb	r4, [r6, #0x9]
	lsl		r4, r4, #0x10
	ldrb	r0, [r6, #0x8]
	orr		r4, r0
	mul		r4, r1
	lsr		r4, r4, #0x8
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	bic		r4, r0
	lsl		r1, r4, #0x7
	add		r5, r5, r1
	bl		sub_08094d10
_08094ce4:
	add		r6, #0x10
	sub		r7, #0x1
	bne		_08094c7e
	pop		{ r1, r2 }
	mov		r12, r9
	mov		r0, #0xff
	lsl		r4, r0, #0x10
	add		r4, r4, r0
	lsl		r4, r4, #0x8
	mov		r6, #0x0
	mov		r7, #0x0
	mov		r8, r6
	mov		r9, r6
	ldr		r0, _08094fe0
	bl		sub_08094f48
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0x94D0E, 0x2
	thumb_func_end sub_08094c68

	non_word_aligned_thumb_func_start sub_08094d10
sub_08094d10:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r5, r9
	mov		r3, r8
	push	{ r3, r5, r7 }
	ldrh	r2, [r6, #0x2]
	ldr		r1, _08094fe4
	lsl		r0, r2, #0x11
	lsr		r0, r0, #0xf
	ldr		r7, [r1, r0]
	add		r7, r7, r1
	lsl		r2, r2, #0x11
	bcc		_08094d32
	ldr		r0, [r7, #0x4]
	mov		r1, #0x3c
	mov		r2, #0x0
	b		_08094d38
_08094d32:
	ldr		r0, [r7, #0x4]
	ldrb	r1, [r6, #0xb]
	ldrb	r2, [r6, #0xa]
_08094d38:
	bl		sub_08094b7c
	mov		r12, r0
	ldr		r0, [r6, #0x4]
	mov		r11, r0
_08094d42:
	ldr		r0, [r7, #0xC]
	lsl		r0, r0, #0xa
	mov		r1, r11
	sub		r0, r0, r1
	add		r0, r12
	sub		r0, #0x1
	mov		r2, r10
	mov		r1, r12
	mul		r1, r2
	cmp		r1, r0
	bcc		_08094d60
	mov		r1, r12
	bl		sub_080bbe34
	add		r2, r0, #0x0
_08094d60:
	mov		r0, #0x0
	sub		r0, r0, r2
	add		r10, r0
	add		r1, r7, #0x0
	add		r1, #0x10
	ldr		r0, _08094fe8
	bl		sub_08094f48
	ldr		r0, [r7, #0xC]
	lsl		r0, r0, #0xa
	cmp		r11, r0
	blt		_08094da6
	ldrb	r1, [r7, #0x3]
	mov		r0, #0x40
	and		r0, r1
	beq		_08094d92
	ldr		r0, [r7, #0x8]
	ldr		r1, [r7, #0xC]
	sub		r0, r0, r1
	lsl		r0, r0, #0xa
	add		r11, r0
	mov		r0, r10
	cmp		r0, #0x0
	beq		_08094da6
	b		_08094d42
_08094d92:
	mov		r0, #0x0
	strb	r0, [r6, #0x0]
	mov		r0, r10
	cmp		r0, #0x0
	beq		_08094da6
	mov		r0, #0x80
	mul		r4, r0
	ldr		r0, _08094fec
	bl		sub_08094f48
_08094da6:
	mov		r0, r11
	str		r0, [r6, #0x4]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_08094d10

	thumb_func_start sub_08094db4
sub_08094db4:
.incbin "base.gba", 0x94db4, 0x2 @ adr r0, 0x8094e24
	ldr		r1, _08094ff0
	svc		0x11
	ldr		r0, _08094ff4
	mov		r1, #0x0
	mov		r2, #0x10
_08094dc0:
	stmia	r0!, {  r1 }
	sub		r2, #0x1
	bne		_08094dc0
	ldr		r0, _08094ff8
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	strb	r1, [r0, #0x1]
	mov		r2, #0x0
	strb	r2, [r0, #0x2]
	ldr		r3, _08094ffc
	mov		r0, #0x80
	strh	r0, [r3, #0x24]
	mov		r1, #0x42
	lsl		r1, r1, #0x8
	strh	r1, [r3, #0x28]
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	strh	r0, [r3, #0x22]
	mov		r0, #0x0
	mov		r1, #0x8
_08094de8:
	str		r0, [r3, #0x40]
	str		r0, [r3, #0x44]
	sub		r1, #0x1
	bne		_08094de8
	ldr		r2, _08095000
	mov		r0, #0x40
	add		r0, r0, r3
	str		r0, [r2, #0x10]
	add		r0, #0x4
	str		r0, [r2, #0x1c]
	ldr		r0, _08095004
	str		r0, [r2, #0xc]
	ldr		r0, _08095008
	str		r0, [r2, #0x18]
	mov		r0, #0xb6
	mov		r1, #0x4
	lsl		r0, r0, #0x18
	orr		r0, r1
	str		r0, [r2, #0x14]
	str		r0, [r2, #0x20]
	ldr		r1, _0809500c
	strh	r1, [r3, #0x22]
	ldr		r2, _08095010
	mov		r0, #0x0
	strh		r0, [r2, #0x2]
	ldr		r1, _08095014
	strh	r1, [r2, #0x0]
	mov		r0, #0x80
	strh		r0, [r2, #0x2]
	bx		lr

.incbin "base.gba", 0x94E24, 0x124
	thumb_func_end sub_08094db4

	non_word_aligned_thumb_func_start sub_08094f48
sub_08094f48:
	bx		r0
	thumb_func_end sub_08094f48

	non_word_aligned_thumb_func_start sub_08094f4a
sub_08094f4a:
	ldr		r3, _08095018
	mov		r2, #0x0
	ldrb	r0, [r3, #0x2]
	mov		r1, #0x1
	eor		r0, r1
	strb	r0, [r3, #0x2]
	strb	r2, [r3, r0]
	bne		_08094f76
	ldr		r3, _08095000
	ldr		r1, _0809501c
	strh	r1, [r3, #0x16]
	strh	r1, [r3, #0x22]
	mov		r8, r8
	mov		r8, r8
	ldr		r1, _08095020
	strh	r1, [r3, #0x16]
	strh	r1, [r3, #0x22]
	mov		r8, r8
	mov		r1, #0xb6
	lsl		r1, r1, #0x8
	strh	r1, [r3, #0x16]
	strh	r1, [r3, #0x22]
_08094f76:
	bx		lr

.incbin "base.gba", 0x94F78, 0x26
	thumb_func_end sub_08094f4a

	non_word_aligned_thumb_func_start sub_08094f9e
sub_08094f9e:
	ldr		r3, _08095024
	ldrb	r1, [r3, #0x0]
	cmp		r1, #0x0
	bne		_08094fb4
	ldrb	r0, [r3, #0x2]
	cmp		r0, #0x0
	beq		_08094fb4
	mov		r1, #0x1
	strb	r1, [r3, #0x0]
	ldr		r2, _08095028
	b		_08094fc6
_08094fb4:
	ldrb	r2, [r3, #0x1]
	cmp		r2, #0x0
	bne		_08094fd8
	ldrb	r0, [r3, #0x2]
	cmp		r0, #0x1
	beq		_08094fd8
	mov		r1, #0x1
	strb	r1, [r3, #0x1]
	ldr		r2, _0809502c
_08094fc6:
	ldr		r0, _08095030
	mov		r1, #0x21
	lsl		r1, r1, #0x3
	add		r3, r1, r1
	add		r3, r3, r2
	push	{ lr }
	bl		sub_08094c68
	pop		{ pc }
_08094fd8:
	bx		lr

.incbin "base.gba", 0x94FDA, 0x2

_08094fdc:	.4byte 0x0200CCF0
_08094fe0:	.4byte 0x03005AE0
_08094fe4:	.4byte 0x08100000
_08094fe8:	.4byte 0x030059E4
_08094fec:	.4byte 0x03005A80
_08094ff0:	.4byte 0x030059E4
_08094ff4:	.4byte 0x0200CCF0
_08094ff8:	.4byte 0x03005B3C
_08094ffc:	.4byte 0x04000060
_08095000:	.4byte 0x040000B0
_08095004: 	.4byte 0x03005F60
_08095008:	.4byte 0x03006170
_0809500c:	.4byte 0x0000120E
_08095010:	.4byte 0x04000100
_08095014:	.4byte 0xFFFFFBD8
_08095018:	.4byte 0x03005B3C
_0809501c:	.4byte 0x00008440
_08095020:	.4byte 0x00000440
_08095024:	.4byte 0x03005B3C
_08095028:	.4byte 0x03005F60
_0809502c:	.4byte 0x03006068
_08095030:	.4byte 0x03005B40
	thumb_func_end sub_08094f9e

	thumb_func_start sub_08095034
sub_08095034:
	ldrh	r2, [r0, #0x0]
	ldr		r1, _08095044
	and		r1, r2
	strh	r1, [r0, #0x0]
	ldrb	r1, [r0, #0x16]
	strb	r1, [r0, #0x17]
	bx		lr

.incbin "base.gba", 0x95042, 0x2

_08095044:	.4byte 0x0000CFFF
	thumb_func_end sub_08095034

	thumb_func_start sub_08095048
sub_08095048:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	ldrb	r0, [r2, #0x17]
	cmp		r0, #0x0
	beq		_0809505a
	sub		r0, #0x1
	strb	r0, [r2, #0x17]
	b		_08095086
_0809505a:
	ldrb	r0, [r2, #0x15]
	strb	r0, [r2, #0x17]
	ldrh	r3, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	add		r0, r1, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_08095080
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	add		r0, r1, #0x0
	eor		r0, r3
	strh	r0, [r2, #0x0]
	ldr		r1, [r4, #0x8]
	add		r0, r2, #0x0
	bl		sub_080bbc74
	b		_08095086
_08095080:
	add		r0, r1, #0x0
	orr		r0, r3
	strh	r0, [r2, #0x0]
_08095086:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08095048

	thumb_func_start sub_0809508c
sub_0809508c:
	push	{ lr }
	add		r1, r0, #0x0
	ldrh	r2, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r0, r2
	cmp		r0, #0x0
	beq		_080950b0
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r0, r2
	cmp		r0, #0x0
	beq		_080950ac
	ldrb	r0, [r1, #0x14]
	neg		r0, r0
	b		_080950b2
_080950ac:
	ldrb	r0, [r1, #0x14]
	b		_080950b2
_080950b0:
	mov		r0, #0x0
_080950b2:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x950B6, 0x2
	thumb_func_end sub_0809508c

	thumb_func_start sub_080950b8
sub_080950b8:
	ldrh	r2, [r0, #0x0]
	ldr		r1, _080950c8
	and		r1, r2
	strh	r1, [r0, #0x0]
	ldrb	r1, [r0, #0x1a]
	strb	r1, [r0, #0x1b]
	bx		lr

.incbin "base.gba", 0x950C6, 0x2

_080950c8:	.4byte 0x0000F9FF
	thumb_func_end sub_080950b8

	thumb_func_start sub_080950cc
sub_080950cc:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	ldrb	r0, [r2, #0x1b]
	cmp		r0, #0x0
	beq		_080950de
	sub		r0, #0x1
	strb	r0, [r2, #0x1b]
	b		_0809510a
_080950de:
	ldrb	r0, [r2, #0x19]
	strb	r0, [r2, #0x1b]
	ldrh	r3, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	add		r0, r1, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_08095104
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r1, #0x0
	eor		r0, r3
	strh	r0, [r2, #0x0]
	ldr		r1, [r4, #0x10]
	add		r0, r2, #0x0
	bl		sub_080bbc74
	b		_0809510a
_08095104:
	add		r0, r1, #0x0
	orr		r0, r3
	strh	r0, [r2, #0x0]
_0809510a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080950cc

	thumb_func_start sub_08095110
sub_08095110:
	push	{ lr }
	add		r1, r0, #0x0
	ldrh	r2, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r2
	cmp		r0, #0x0
	beq		_08095134
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	and		r0, r2
	cmp		r0, #0x0
	beq		_08095130
	ldrb	r0, [r1, #0x18]
	neg		r0, r0
	b		_08095136
_08095130:
	ldrb	r0, [r1, #0x18]
	b		_08095136
_08095134:
	mov		r0, #0x0
_08095136:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9513A, 0x2
	thumb_func_end sub_08095110

	thumb_func_start sub_0809513c
sub_0809513c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldrb	r0, [r5, #0xb]
	lsl		r4, r0, #0x8
	mov		r1, #0x10
	ldrsb	r1, [r5, r1]
	ldrb	r0, [r5, #0xf]
	lsl		r0, r0, #0x1
	mul		r0, r1
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r0, #0x11
	ldrsb	r0, [r5, r0]
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08095176
	add		r0, r5, #0x0
	bl		sub_08095110
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
_08095176:
	ldrb	r0, [r5, #0x12]
	lsl		r0, r0, #0x4
	ldr		r1, _08095188
	add		r0, r0, r1
	strh	r4, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x95186, 0x2

_08095188:	.4byte 0x0200CCFA
	thumb_func_end sub_0809513c

	thumb_func_start sub_0809518c
sub_0809518c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldrb	r0, [r6, #0x12]
	lsl		r0, r0, #0x4
	ldr		r1, _080951d0
	add		r4, r0, r1
	mov		r7, #0x0
	strb	r7, [r4, #0x0]
	ldrb	r0, [r6, #0xc]
	ldrb	r1, [r6, #0xb]
	bl		sub_080952a0
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_080951ca
	add		r0, r6, #0x0
	bl		sub_0809513c
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r5, #0x4]
	strb	r0, [r4, #0xc]
	ldrb	r0, [r5, #0x5]
	strb	r0, [r4, #0xd]
	ldrb	r0, [r5, #0x6]
	strb	r0, [r4, #0xe]
	ldrb	r0, [r5, #0x7]
	strb	r0, [r4, #0xf]
	str		r7, [r4, #0x4]
	mov		r0, #0x80
	strb	r0, [r4, #0x0]
_080951ca:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080951d0:	.4byte 0x0200CCF0
	thumb_func_end sub_0809518c

	thumb_func_start sub_080951d4
sub_080951d4:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldrb	r1, [r5, #0xe]
	mov		r0, #0xe
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	blt		_080951e8
	mov		r7, #0x7f
	ldrb	r6, [r5, #0xe]
	b		_080951f2
_080951e8:
	mov		r0, #0xff
	sub		r0, r0, r1
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	mov		r6, #0x7f
_080951f2:
	ldrb	r4, [r5, #0xd]
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08095216
	add		r0, r5, #0x0
	bl		sub_0809508c
	add		r4, r4, r0
	cmp		r4, #0x0
	bge		_08095210
	mov		r4, #0x0
	b		_08095216
_08095210:
	cmp		r4, #0xff
	ble		_08095216
	mov		r4, #0xff
_08095216:
	ldr		r0, _08095258
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r5, #0x13]
	lsl		r0, r0, #0x1
	mov		r2, #0x93
	lsl		r2, r2, #0x3
	add		r1, r1, r2
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	lsr		r0, r0, #0x8
	add		r0, #0x1
	mul		r0, r4
	asr		r4, r0, #0x8
	add		r0, r4, #0x1
	add		r1, r7, #0x0
	mul		r1, r0
	asr		r1, r1, #0x8
	add		r2, r6, #0x0
	mul		r2, r0
	asr		r2, r2, #0x8
	ldr		r3, _0809525c
	ldrb	r0, [r5, #0x12]
	lsl		r0, r0, #0x4
	add		r0, r0, r3
	strb	r1, [r0, #0x8]
	ldrb	r0, [r5, #0x12]
	lsl		r0, r0, #0x4
	add		r0, r0, r3
	strb	r2, [r0, #0x9]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x95256, 0x2

_08095258:	.4byte 0x03007FF0
_0809525c:	.4byte 0x0200CCF0
	ldr		r2, _08095274
	ldrb	r1, [r0, #0x12]
	lsl		r1, r1, #0x4
	add		r1, r1, r2
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x40
	orr		r0, r2
	strb	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x95272, 0x2

_08095274:	.4byte 0x0200CCF0
	ldr		r1, _08095288
	ldrb	r0, [r0, #0x12]
	lsl		r0, r0, #0x4
	add		r0, r0, r1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x95286, 0x2

_08095288:	.4byte 0x0200CCF0
	thumb_func_end sub_080951d4

	thumb_func_start sub_0809528c
sub_0809528c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0809513c
	add		r0, r4, #0x0
	bl		sub_080951d4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0809528c

	thumb_func_start sub_080952a0
sub_080952a0:
	push	{ lr }
	add		r3, r1, #0x0
	ldr		r2, _080952cc
	lsl		r1, r0, #0x1
	add		r1, r1, r2
	ldrh	r1, [r1, #0x0]
	add		r1, r1, r2
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	add		r2, r0, r2
	cmp		r1, r2
	beq		_080952d6
_080952bc:
	ldrb	r0, [r1, #0x0]
	cmp		r0, r3
	bgt		_080952d0
	ldrb	r0, [r1, #0x1]
	cmp		r0, r3
	blt		_080952d0
	add		r0, r1, #0x0
	b		_080952d8

_080952cc:	.4byte 0x080df10c

_080952d0:
	add		r1, #0x8
	cmp		r1, r2
	bne		_080952bc
_080952d6:
	mov		r0, #0x0
_080952d8:
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080952a0

	thumb_func_start sub_080952dc
sub_080952dc:
	ldr		r1, _0809530c
	mov		r0, #0x77
	strb	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x8f
	strb	r0, [r1, #0x0]
	ldr		r2, _08095310
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08095314
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08095318
	mov		r0, #0x80
	strb	r0, [r1, #0x0]
	ldr		r0, _0809531c
	ldr		r0, [r0, #0x0]
	ldr		r1, _08095320
	add		r0, r0, r1
	mov		r1, #0xff
	strb	r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x9530A, 0x2

_0809530c:	.4byte 0x04000080
_08095310:	.4byte 0x04000082
_08095314:	.4byte 0x0000FFFC
_08095318:	.4byte 0x04000065
_0809531c:	.4byte 0x03007FF0
_08095320:	.4byte 0x0000051C
	thumb_func_end sub_080952dc
	
	thumb_func_start sub_08095324
sub_08095324:
	push	{ r4, lr }
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x18
	mov		r1, #0xff
	lsl		r1, r1, #0x10
	and		r1, r0
	lsr		r4, r1, #0x10
	sub		r3, #0x24
	cmp		r3, #0x0
	blt		_08095364
	ldr		r2, _08095360
	lsl		r0, r3, #0x1
	add		r0, r0, r2
	ldrh	r1, [r0, #0x0]
	add		r0, r3, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	sub		r0, r0, r1
	mul		r0, r4
	lsr		r0, r0, #0x8
	add		r1, r1, r0
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r0, r2, #0x0
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	b		_08095366

.incbin "base.gba", 0x9535E, 0x2

_08095360:	.4byte 0x080deaf8

_08095364:
	mov		r0, #0x0
_08095366:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08095324

	thumb_func_start sub_0809536c
sub_0809536c:
	push	{ lr }
	add		r1, r0, #0x0
	cmp		r1, #0x14
	bgt		_08095378
	mov		r0, #0xd7
	b		_0809538e
_08095378:
	cmp		r1, #0x50
	bgt		_0809538c
	ldr		r0, _08095388
	sub		r1, #0x15
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	b		_0809538e

.incbin "base.gba", 0x95386, 0x2

_08095388:	.4byte 0x080debc4

_0809538c:
	mov		r0, #0x0
_0809538e:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x95392, 0x2
	thumb_func_end sub_0809536c

	thumb_func_start sub_08095394
sub_08095394:
	lsl		r0, r0, #0x4
	ldr		r1, _080953e4
	add		r0, r0, r1
	ldr		r3, _080953e8
	mov		r1, #0xc0
	strb	r1, [r3, #0x0]
	ldr		r1, _080953ec
	ldrh	r2, [r0, #0x0]
	strh	r2, [r1, #0x0]
	add		r0, #0x2
	add		r1, #0x2
	ldrh	r2, [r0, #0x0]
	strh	r2, [r1, #0x0]
	add		r0, #0x2
	add		r1, #0x2
	ldrh	r2, [r0, #0x0]
	strh	r2, [r1, #0x0]
	add		r0, #0x2
	add		r1, #0x2
	ldrh	r2, [r0, #0x0]
	strh	r2, [r1, #0x0]
	add		r0, #0x2
	add		r1, #0x2
	ldrh	r2, [r0, #0x0]
	strh	r2, [r1, #0x0]
	add		r0, #0x2
	add		r1, #0x2
	ldrh	r2, [r0, #0x0]
	strh	r2, [r1, #0x0]
	add		r0, #0x2
	add		r1, #0x2
	ldrh	r2, [r0, #0x0]
	strh	r2, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r0, #0x2]
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	strb	r0, [r3, #0x0]
	bx		lr

.incbin "base.gba", 0x953E2, 0x2

_080953e4:	.4byte 0x080dfd3e
_080953e8:	.4byte 0x04000070
_080953ec:	.4byte 0x04000090
	thumb_func_end sub_08095394

	thumb_func_start sub_080953f0
sub_080953f0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldrb	r0, [r5, #0xb]
	lsl		r4, r0, #0x8
	mov		r1, #0x10
	ldrsb	r1, [r5, r1]
	ldrb	r0, [r5, #0xf]
	mul		r0, r1
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r0, #0x11
	ldrsb	r0, [r5, r0]
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08095428
	add		r0, r5, #0x0
	bl		sub_08095110
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
_08095428:
	add		r0, r4, #0x0
	bl		sub_08095324
	ldr		r1, _0809544c
	ldr		r3, [r1, #0x0]
	ldrb	r1, [r5, #0x12]
	mov		r2, #0x3
	and		r2, r1
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r1, r1, #0x2
	add		r3, r3, r1
	ldr		r1, _08095450
	add		r3, r3, r1
	strh	r0, [r3, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0809544c:	.4byte 0x03007FF0
_08095450:	.4byte 0x000004F4
	push	{ lr }
	ldrb	r0, [r0, #0xb]
	bl		sub_0809536c
	ldr		r1, _08095470
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r2, #0xa3
	lsl		r2, r2, #0x3
	add		r1, r1, r2
	strh	r0, [r1, #0x0]
	pop		{ r0 }
	bx		r0

_08095470:	.4byte 0x03007FF0
	ldr		r1, _08095490
	ldr		r2, [r1, #0x0]
	ldrb	r0, [r0, #0x12]
	mov		r1, #0x3
	and		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	ldr		r0, _08095494
	add		r2, r2, r0
	mov		r0, #0x5
	strb	r0, [r2, #0x0]
	bx		lr

_08095490:	.4byte 0x03007FF0
_08095494:	.4byte 0x000004F3
	thumb_func_end sub_080953f0

	thumb_func_start sub_08095498
sub_08095498:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x20
	mov		r2, sp
	ldr		r1, _080954f8
	ldmia	r1!, { r3, r4, r5 }
	stmia	r2!, {  r3, r4, r5 }
	ldr		r1, [r1, #0x0]
	str		r1, [r2, #0x0]
	add		r6, sp, #0x10
	add		r2, r6, #0x0
	ldr		r1, _080954fc
	ldmia	r1!, { r3, r4, r5 }
	stmia	r2!, {  r3, r4, r5 }
	ldr		r1, [r1, #0x0]
	str		r1, [r2, #0x0]
	ldr		r1, _08095500
	ldr		r4, [r1, #0x0]
	ldrb	r1, [r0, #0x12]
	mov		r3, #0x3
	add		r2, r3, #0x0
	and		r2, r1
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	ldr		r1, _08095504
	add		r4, r4, r1
	mov		r5, #0x0
	strb	r5, [r4, #0x0]
	ldrb	r2, [r0, #0x12]
	add		r1, r3, #0x0
	and		r1, r2
	lsl		r1, r1, #0x2
	add		r1, sp
	ldr		r1, [r1, #0x0]
	strb	r5, [r1, #0x0]
	ldrb	r0, [r0, #0x12]
	and		r3, r0
	lsl		r3, r3, #0x2
	add		r6, r6, r3
	ldr		r1, [r6, #0x0]
	mov		r0, #0x80
	strb	r0, [r1, #0x0]
	add		sp, #0x20
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x954F6, 0x2

_080954f8:	.4byte 0x080dec00
_080954fc:	.4byte 0x080dec10
_08095500:	.4byte 0x03007FF0
_08095504:	.4byte 0x000004F3
	ldr		r1, _08095528
	ldr		r2, [r1, #0x0]
	ldrb	r0, [r0, #0x12]
	mov		r1, #0x3
	and		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	ldr		r0, _0809552c
	add		r2, r2, r0
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	ldr		r0, _08095530
	strb	r1, [r0, #0x0]
	bx		lr

_08095528:	.4byte 0x03007FF0
_0809552c:	.4byte 0x000004F3
_08095530:	.4byte 0x04000073
	thumb_func_end sub_08095498

	thumb_func_start sub_08095534
sub_08095534:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldrb	r0, [r4, #0xc]
	ldrb	r1, [r4, #0xb]
	bl		sub_080952a0
	add		r3, r0, #0x0
	cmp		r3, #0x0
	beq		_08095574
	ldr		r2, _0809557c
	ldrb	r0, [r4, #0x12]
	mov		r1, #0x3
	and		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _08095580
	add		r0, r0, r1
	ldr		r1, [r2, #0x0]
	add		r1, r1, r0
	ldrb	r0, [r3, #0x4]
	strb	r0, [r1, #0x0]
	ldrb	r0, [r3, #0x5]
	strb	r0, [r1, #0x1]
	ldrb	r0, [r3, #0x6]
	strb	r0, [r1, #0x2]
	ldrb	r0, [r3, #0x7]
	strb	r0, [r1, #0x3]
	ldrh	r0, [r3, #0x2]
	strb	r0, [r1, #0x6]
	mov		r0, #0x1
	strb	r0, [r1, #0x7]
_08095574:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9557A, 0x2

_0809557c:	.4byte 0x03007FF0
_08095580:	.4byte 0x000004EC
	push	{ r4, lr }
	ldrb	r2, [r0, #0xc]
	ldrb	r1, [r0, #0xb]
	add		r0, r2, #0x0
	bl		sub_080952a0
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_080955bc
	ldr		r4, _080955c4
	ldr		r0, [r4, #0x0]
	ldr		r3, _080955c8
	add		r2, r0, r3
	ldrh	r1, [r1, #0x2]
	ldrb	r0, [r2, #0x0]
	cmp		r0, r1
	beq		_080955b2
	strb	r1, [r2, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, r0, r3
	ldrb	r0, [r0, #0x0]
	bl		sub_08095394
_080955b2:
	ldr		r0, [r4, #0x0]
	ldr		r1, _080955cc
	add		r0, r0, r1
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
_080955bc:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x955C2, 0x2

_080955c4:	.4byte 0x03007FF0
_080955c8:	.4byte 0x0000051C
_080955cc:	.4byte 0x0000050B
	thumb_func_end sub_08095534

	thumb_func_start sub_080955d0
sub_080955d0:
	push	{ r4, r5, r6, lr }
	ldrb	r1, [r0, #0x12]
	mov		r2, #0x3
	and		r2, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x11
	lsl		r1, r2
	lsr		r3, r1, #0x18
	ldr		r5, _0809560c
	ldrb	r2, [r5, #0x0]
	lsl		r4, r3, #0x4
	add		r1, r3, #0x0
	orr		r1, r4
	add		r6, r2, #0x0
	bic		r6, r1
	add		r1, r6, #0x0
	ldrb	r0, [r0, #0xe]
	cmp		r0, #0x80
	bhi		_080955f8
	orr		r1, r3
_080955f8:
	cmp		r0, #0x7e
	bls		_08095602
	orr		r1, r4
	lsl		r0, r1, #0x18
	lsr		r1, r0, #0x18
_08095602:
	strb	r1, [r5, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9560A, 0x2

_0809560c:	.4byte 0x04000081
	thumb_func_end sub_080955d0

	thumb_func_start sub_08095610
sub_08095610:
	push	{ r4, lr }
	ldr		r1, _0809564c
	ldr		r3, [r1, #0x0]
	ldrb	r2, [r0, #0x12]
	mov		r1, #0x3
	and		r1, r2
	lsl		r2, r1, #0x1
	add		r2, r2, r1
	lsl		r2, r2, #0x2
	add		r2, r3, r2
	ldrb	r1, [r0, #0x13]
	lsl		r1, r1, #0x1
	mov		r4, #0x93
	lsl		r4, r4, #0x3
	add		r3, r3, r4
	add		r3, r3, r1
	ldrh	r1, [r3, #0x0]
	lsr		r1, r1, #0x8
	add		r1, #0x1
	ldrb	r0, [r0, #0xd]
	mul		r0, r1
	asr		r0, r0, #0xc
	mov		r1, #0x9e
	lsl		r1, r1, #0x3
	add		r2, r2, r1
	strb	r0, [r2, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9564A, 0x2

_0809564c:	.4byte 0x03007FF0
	thumb_func_end sub_08095610

	thumb_func_start sub_08095650
sub_08095650:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080953f0
	add		r0, r4, #0x0
	bl		sub_08095610
	add		r0, r4, #0x0
	bl		sub_080955d0
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x9566A, 0x72
	thumb_func_end sub_08095650

	thumb_func_start sub_080956dc
sub_080956dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x30
	add		r6, r0, #0x0
	mov		r1, sp
	ldr		r0, _08095748
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r3, sp, #0x10
	add		r1, r3, #0x0
	ldr		r0, _0809574c
	ldmia	r0!, { r2, r5, r7 }
	stmia	r1!, {  r2, r5, r7 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r2, sp, #0x20
	add		r1, r2, #0x0
	ldr		r0, _08095750
	ldmia	r0!, { r4, r5, r7 }
	stmia	r1!, {  r4, r5, r7 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r1, _08095754
	lsl		r0, r6, #0x1
	add		r0, r0, r6
	lsl		r0, r0, #0x2
	ldr		r4, _08095758
	add		r0, r0, r4
	ldr		r1, [r1, #0x0]
	add		r5, r1, r0
	ldrb	r0, [r5, #0xa]
	add		r7, r3, #0x0
	mov		r8, r2
	cmp		r0, #0x0
	beq		_08095734
	ldrb	r1, [r5, #0x5]
	add		r0, r1, #0x0
	cmp		r0, #0xff
	beq		_08095734
	add		r0, r1, #0x1
	strb	r0, [r5, #0x5]
_08095734:
	ldrb	r0, [r5, #0x7]
	cmp		r0, #0x6
	bls		_0809573c
	b		_08095980
_0809573c:
	lsl		r0, r0, #0x2
	ldr		r1, _0809575c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x95746, 0x2

_08095748:	.4byte 0x080deca0
_0809574c:	.4byte 0x080dec00
_08095750:	.4byte 0x080decb0
_08095754:	.4byte 0x03007FF0
_08095758:	.4byte 0x000004EC
_0809575c:	.4byte 0x08095760
_08095760:	.4byte 0x08095980

.incbin "base.gba", 0x95764, 0x18
	thumb_func_end sub_080956dc


.incbin "base.gba", 0x9577C, 0x204

_08095980:

.incbin "base.gba", 0x95980, 0xC
	thumb_func_start sub_0809598c
sub_0809598c:
	push	{ r4, lr }
	ldr		r0, _080959ac
	ldr		r0, [r0, #0x0]
	ldr		r1, _080959b0
	add		r3, r0, r1
	ldrb	r0, [r3, #0x7]
	cmp		r0, #0x1
	beq		_080959b4
	cmp		r0, #0x1
	ble		_080959f6
	cmp		r0, #0x2
	beq		_080959e0
	cmp		r0, #0x5
	beq		_080959ec
	b		_080959f6

.incbin "base.gba", 0x959AA, 0x2

_080959ac:	.4byte 0x03007FF0
_080959b0:	.4byte 0x00000504

_080959b4:
	ldr		r2, _080959d8
	ldrh	r0, [r3, #0x8]
	mov		r4, #0x80
	lsl		r4, r4, #0x8
	add		r1, r4, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	sub		r2, #0x2
	ldr		r1, _080959dc
	ldrb	r0, [r3, #0x4]
	lsr		r0, r0, #0x2
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	strh	r0, [r2, #0x0]
	ldrb	r0, [r3, #0x7]
	add		r0, #0x1
	b		_080959f4

_080959d8:	.4byte 0x04000074
_080959dc:	.4byte 0x080decc0

_080959e0:
	ldr		r1, _080959e8
	ldrh	r0, [r3, #0x8]
	strh	r0, [r1, #0x0]
	b		_080959f6

_080959e8:	.4byte 0x04000074

_080959ec:
	ldr		r0, _080959fc
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r0, #0x0
_080959f4:
	strb	r0, [r3, #0x7]
_080959f6:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080959fc:	.4byte 0x04000073
	thumb_func_end sub_0809598c

	thumb_func_start sub_08095a00
sub_08095a00:
	push	{ lr }
	mov		r0, #0x0
	bl		sub_080956dc
	mov		r0, #0x1
	bl		sub_080956dc
	bl		sub_0809598c
	mov		r0, #0x3
	bl		sub_080956dc
	pop		{ r0 }
	bx		r0
	bx		lr

.incbin "base.gba", 0x95A1E, 0x2
	thumb_func_end sub_08095a00

	thumb_func_start sub_08095a20
sub_08095a20:
	push	{ r4, r5, r6, lr }
	ldr		r4, _08095aa4
	str		r0, [r4, #0x0]
	bl		sub_080952dc
	ldr		r0, [r4, #0x0]
	ldr		r1, _08095aa8
	add		r2, r0, r1
	mov		r3, #0x0
	mov		r1, #0x0
	strh	r1, [r2, #0x0]
	mov		r2, #0x92
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, _08095aac
	add		r0, r0, r1
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r2, #0x5
	add		r0, r0, r2
	strb	r3, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	ldr		r1, _08095ab0
	add		r0, r0, r1
	strb	r3, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r2, #0xf
	add		r0, r0, r2
	mov		r1, #0x4b
	str		r1, [r0, #0x0]
	mov		r3, #0x0
	mov		r6, #0x0
_08095a66:
	ldr		r0, [r4, #0x0]
	lsl		r2, r3, #0x1
	mov		r1, #0x93
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	add		r0, r0, r2
	ldr		r1, _08095ab4
	strh	r1, [r0, #0x0]
	mov		r1, #0x0
	add		r5, r3, #0x1
	add		r2, r2, r3
	lsl		r2, r2, #0x7
_08095a7e:
	ldr		r0, [r4, #0x0]
	add		r0, r0, r2
	strh	r6, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	add		r0, r0, r2
	strb	r1, [r0, #0x12]
	ldr		r0, [r4, #0x0]
	add		r0, r0, r2
	strb	r3, [r0, #0x13]
	add		r2, #0x20
	add		r1, #0x1
	cmp		r1, #0xb
	ble		_08095a7e
	add		r3, r5, #0x0
	cmp		r3, #0x2
	ble		_08095a66
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08095aa4:	.4byte 0x03007FF0
_08095aa8:	.4byte 0x00000492
_08095aac:	.4byte 0x00000494
_08095ab0:	.4byte 0x00000496
_08095ab4:	.4byte 0x0000FFFF

.incbin "base.gba", 0x95AB8, 0x340
	thumb_func_end sub_08095a20

	thumb_func_start sub_08095df8
sub_08095df8:
	push	{ r4, lr }
	b		_08095eca
_08095dfc:
	ldr		r1, [r3, #0x0]
	add		r2, r1, r2
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x1
	mov		r4, #0x90
	lsl		r4, r4, #0x3
	add		r1, r1, r4
	add		r1, r1, r0
	ldrh	r3, [r1, #0x0]
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strh	r0, [r2, #0x0]
	lsr		r0, r3, #0xc
	cmp		r0, #0x9
	bhi		_08095eca
	lsl		r0, r0, #0x2
	ldr		r1, _08095e2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x95E2A, 0x2

_08095e2c:	.4byte 0x08095e30
_08095e30:	.4byte 0x08095e58

.incbin "base.gba", 0x95E34, 0x24
	thumb_func_end sub_08095df8


.incbin "base.gba", 0x95E58, 0x72

_08095eca:

.incbin "base.gba", 0x95ECA, 0x22
_08095eec:	.4byte 0x03007FF0
_08095ef0:	.4byte 0x00000492
	thumb_func_start sub_08095ef4
sub_08095ef4:
	push	{ r4, r5, lr }
	ldr		r4, _08095f24
	ldr		r2, [r4, #0x0]
	ldr		r3, _08095f28
	add		r1, r2, r3
	mov		r5, #0x0
	ldrsh	r1, [r1, r5]
	lsl		r1, r1, #0x1
	mov		r5, #0x90
	lsl		r5, r5, #0x3
	add		r2, r2, r5
	add		r2, r2, r1
	strh	r0, [r2, #0x0]
	ldr		r2, [r4, #0x0]
	add		r2, r2, r3
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08095f24:	.4byte 0x03007FF0
_08095f28:	.4byte 0x00000492
	thumb_func_end sub_08095ef4

	thumb_func_start sub_08095f2c
sub_08095f2c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r2, #0x0
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08095f68
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08095f54
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_080950cc
_08095f54:
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08095f68
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_08095048
_08095f68:
	ldrb	r1, [r5, #0x3]
	ldrb	r0, [r5, #0x2]
	add		r1, r1, r0
	mov		r0, #0x0
	mov		r8, r0
	cmp		r1, r4
	ble		_08095f80
_08095f76:
	mov		r2, #0x1
	add		r8, r2
	sub		r1, r1, r4
	cmp		r1, r4
	bgt		_08095f76
_08095f80:
	strb	r1, [r5, #0x3]
	mov		r0, r8
	cmp		r0, #0x0
	bne		_08095f8a
	b		_0809635a
_08095f8a:
	ldrb	r0, [r5, #0xa]
	mov		r1, r8
	sub		r1, r1, r0
	mov		r8, r1
	cmp		r1, #0x0
	bge		_08095f9c
	neg		r0, r1
	strb	r0, [r5, #0xa]
	b		_0809635a
_08095f9c:
	ldrh	r1, [r5, #0x0]
	mov		r0, #0xc0
	and		r0, r1
	cmp		r0, #0x80
	bne		_08095fd4
	ldr		r0, _08095fd0
	and		r0, r1
	strh	r0, [r5, #0x0]
	ldr		r1, [r7, #0x14]
	add		r0, r5, #0x0
	bl		sub_080bbc74
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08095fd4
	ldrh	r1, [r5, #0x8]
	add		r0, r1, #0x1
	strh	r0, [r5, #0x8]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r0, [r5, #0x4]
	add		r0, r0, r1
	b		_08096256

.incbin "base.gba", 0x95FCE, 0x2

_08095fd0:	.4byte 0x0000FF3F

_08095fd4:
	ldrh	r0, [r5, #0x8]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x8]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r1, [r5, #0x4]
	add		r0, r1, r0
	ldrb	r6, [r0, #0x0]
	add		r0, r6, #0x0
	sub		r0, #0xe0
	add		r2, r1, #0x0
	cmp		r0, #0x1f
	bhi		_0809607c
	lsl		r0, r0, #0x2
	ldr		r1, _08095ff8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08095ff8:	.4byte 0x08095ffc
_08095ffc:	.4byte 0x08096138

.incbin "base.gba", 0x96000, 0x7C

_0809607c:
	ldrh	r0, [r5, #0x8]
	add		r1, r0, #0x1
	strh	r1, [r5, #0x8]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r0, r2, r0
	ldrb	r4, [r0, #0x0]
	mov		r0, #0x7f
	and		r0, r4
	strb	r0, [r5, #0xb]
	add		r0, r1, #0x1
	strh	r0, [r5, #0x8]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r1, r2, r1
	ldrb	r0, [r1, #0x0]
	strb	r0, [r5, #0xd]
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_080960bc
	ldr		r1, [r7, #0x10]
	add		r0, r5, #0x0
	bl		sub_080bbc74
	ldrh	r1, [r5, #0x0]
	ldr		r0, _080960b8
	and		r0, r1
	b		_080960fc

_080960b8:	.4byte 0x0000FFBF

_080960bc:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_080960cc
	add		r0, r5, #0x0
	bl		sub_08095034
_080960cc:
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080960de
	add		r0, r5, #0x0
	bl		sub_080950b8
_080960de:
	ldr		r1, [r7, #0x8]
	add		r0, r5, #0x0
	bl		sub_080bbc74
	ldr		r1, [r7, #0x10]
	add		r0, r5, #0x0
	bl		sub_080bbc74
	ldr		r1, [r7, #0x0]
	add		r0, r5, #0x0
	bl		sub_080bbc74
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	orr		r0, r1
_080960fc:
	strh	r0, [r5, #0x0]
	cmp		r6, #0x0
	bne		_08096124
	ldrh	r0, [r5, #0x0]
	mov		r1, #0x40
	orr		r1, r0
	strh	r1, [r5, #0x0]
	mov		r0, #0x80
	and		r4, r0
	cmp		r4, #0x0
	bne		_08096114
	b		_08095fd4
_08096114:
	ldrh	r1, [r5, #0x8]
	add		r0, r1, #0x1
	strh	r0, [r5, #0x8]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r0, [r5, #0x4]
	add		r0, r0, r1
	b		_08096256
_08096124:
	mov		r0, #0x80
	and		r4, r0
	cmp		r4, #0x0
	beq		_08096134
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x20
	orr		r0, r1
	strh	r0, [r5, #0x0]
_08096134:
	strb	r6, [r5, #0xa]
	b		_08095f8a

.incbin "base.gba", 0x96138, 0x30
	thumb_func_end sub_08095f2c


.incbin "base.gba", 0x96168, 0xEE

_08096256:

.incbin "base.gba", 0x96256, 0x104

_0809635a:

.incbin "base.gba", 0x9635A, 0xA
	thumb_func_start sub_08096364
sub_08096364:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r0, #0x0
	mov		r10, r0
	mov		r12, r0
_08096376:
	ldr		r0, _08096428
	ldr		r3, [r0, #0x0]
	ldr		r1, _0809642c
	add		r0, r3, r1
	add		r0, r12
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	mov		r2, r12
	add		r2, #0x1
	str		r2, [sp, #0x0]
	cmp		r0, #0x0
	bne		_08096392
	b		_08096494
_08096392:
	mov		r0, r12
	lsl		r4, r0, #0x2
	mov		r1, #0x96
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	add		r1, #0x4b
	str		r1, [r0, #0x0]
	ldr		r2, _08096430
	add		r0, r3, r2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	mov		r9, r4
	mov		r2, r12
	lsl		r2, r2, #0x1
	mov		r8, r2
	cmp		r1, r0
	blt		_080963e2
	ldr		r0, _08096434
	add		r7, r3, r0
	mov		r1, #0x96
	lsl		r1, r1, #0x3
	add		r6, r3, r1
	ldr		r2, _08096430
	add		r5, r3, r2
_080963c6:
	add		r2, r6, r4
	add		r3, r5, r4
	ldr		r0, [r2, #0x0]
	ldr		r1, [r3, #0x0]
	sub		r0, r0, r1
	str		r0, [r2, #0x0]
	add		r1, r7, r4
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, [r2, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bge		_080963c6
_080963e2:
	mov		r6, #0x0
	ldr		r7, _08096428
	mov		r0, r8
	add		r0, r12
	lsl		r0, r0, #0x7
	mov		r8, r0
_080963ee:
	ldr		r0, [r7, #0x0]
	add		r0, r8
	lsl		r1, r6, #0x5
	add		r4, r0, r1
	ldrh	r2, [r4, #0x0]
	mov		r1, #0x1
	add		r0, r1, #0x0
	and		r0, r2
	cmp		r0, #0x0
	beq		_0809648e
	lsl		r1, r6
	mov		r0, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0809643c
	mov		r0, #0x2
	orr		r0, r2
	strh	r0, [r4, #0x0]
	ldr		r0, [r7, #0x0]
	ldr		r1, _08096430
	add		r0, r0, r1
	add		r0, r9
	ldr		r2, [r0, #0x0]
	add		r0, r4, #0x0
	ldr		r1, _08096438
	bl		sub_08095f2c
	b		_0809648e

.incbin "base.gba", 0x96426, 0x2

_08096428:	.4byte 0x03007FF0
_0809642c:	.4byte 0x00000494
_08096430:	.4byte 0x000004A4
_08096434:	.4byte 0x000004BC
_08096438:	.4byte 0x080decc4

_0809643c:
	mov		r0, r10
	orr		r0, r1
	mov		r10, r0
	ldr		r0, PTR_PTR_080964b0
	lsl		r1, r6, #0x2
	add		r1, r1, r0
	ldr		r5, [r1, #0x0]
	mov		r0, #0x2
	and		r0, r2
	cmp		r0, #0x0
	beq		_0809647c
	ldr		r1, _080964b4
	add		r0, r1, #0x0
	and		r0, r2
	strh	r0, [r4, #0x0]
	ldr		r1, [r5, #0x1c]
	add		r0, r4, #0x0
	bl		sub_080bbc74
	ldr		r1, [r5, #0x18]
	add		r0, r4, #0x0
	bl		sub_080bbc74
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0809647c
	ldr		r1, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_080bbc74
_0809647c:
	ldr		r0, [r7, #0x0]
	ldr		r2, _080964b8
	add		r0, r0, r2
	add		r0, r9
	ldr		r2, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08095f2c
_0809648e:
	add		r6, #0x1
	cmp		r6, #0xb
	ble		_080963ee
_08096494:
	ldr		r0, [sp, #0x0]
	mov		r12, r0
	cmp		r0, #0x2
	bgt		_0809649e
	b		_08096376
_0809649e:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x964AE, 0x2

PTR_PTR_080964b0:	.4byte 0x080dece4
_080964b4:	.4byte 0x0000FFFD
_080964b8:	.4byte 0x000004A4
	thumb_func_end sub_08096364

	thumb_func_start sub_080964bc
sub_080964bc:
	push	{ lr }
	bl		sub_08095df8
	bl		sub_08096364
	bl		sub_08095a00
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x964CE, 0x2
	thumb_func_end sub_080964bc

	thumb_func_start sub_080964d0
sub_080964d0:
	push	{ lr }
	lsl		r0, r0, #0x8
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08095ef4
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x964E2, 0x2
	thumb_func_end sub_080964d0

	thumb_func_start sub_080964e4
sub_080964e4:
	push	{ lr }
	lsl		r0, r0, #0x8
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r2, #0x0
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08095ef4
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080964e4

	thumb_func_start sub_080964fc
sub_080964fc:
	push	{ lr }
	lsl		r0, r0, #0x8
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r1, r2, #0x0
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08095ef4
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080964fc

	thumb_func_start sub_08096514
sub_08096514:
	push	{ lr }
	lsl		r0, r0, #0x8
	ldr		r3, _0809652c
	add		r2, r3, #0x0
	orr		r0, r2
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08095ef4
	pop		{ r1 }
	bx		r1

_0809652c:	.4byte 0xFFFF9000
	thumb_func_end sub_08096514

	thumb_func_start sub_08096530
sub_08096530:
	push	{ lr }
	mov		r2, #0xa0
	lsl		r2, r2, #0x7
	add		r1, r2, #0x0
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08095ef4
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x96546, 0x2
	thumb_func_end sub_08096530

	thumb_func_start sub_08096548
sub_08096548:
	push	{ lr }
	mov		r2, #0xc0
	lsl		r2, r2, #0x7
	add		r1, r2, #0x0
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08095ef4
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9655E, 0x2
	thumb_func_end sub_08096548

	thumb_func_start sub_08096560
sub_08096560:
	push	{ lr }
	mov		r0, #0xe0
	lsl		r0, r0, #0x7
	bl		sub_08095ef4
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x9656E, 0x2
	thumb_func_end sub_08096560

	thumb_func_start sub_08096570
sub_08096570:
	push	{ lr }
	lsl		r0, r0, #0x8
	ldr		r3, _08096588
	add		r2, r3, #0x0
	orr		r0, r2
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08095ef4
	pop		{ r1 }
	bx		r1

_08096588:	.4byte 0xFFFF8000
	thumb_func_end sub_08096570

	thumb_func_start sub_0809658c
sub_0809658c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r6, #0x0
	mov		r3, #0x0
	ldr		r0, _080965d8
	mov		r9, r0
	ldr		r1, [r0, #0x0]
	mov		r12, r1
	ldr		r0, _080965dc
	add		r0, r12
	mov		r10, r0
	mov		r1, #0x1
	mov		r8, r1
_080965ac:
	mov		r1, r10
	add		r0, r1, r3
	ldrb	r1, [r0, #0x0]
	mov		r0, r8
	and		r0, r1
	add		r7, r3, #0x1
	cmp		r0, #0x0
	beq		_08096606
	mov		r4, #0x0
	lsl		r2, r3, #0x1
	add		r0, r2, r3
	lsl		r0, r0, #0x7
	add		r0, r12
	ldrh	r1, [r0, #0x0]
	mov		r0, r8
	and		r0, r1
	add		r5, r2, #0x0
	cmp		r0, #0x0
	beq		_080965e0
	mov		r0, r8
	b		_08096602

.incbin "base.gba", 0x965D6, 0x2

_080965d8:	.4byte 0x03007FF0
_080965dc:	.4byte 0x00000494

_080965e0:
	add		r4, #0x1
	cmp		r4, #0xb
	bgt		_08096606
	mov		r0, r9
	ldr		r2, [r0, #0x0]
	lsl		r1, r4, #0x5
	add		r0, r5, r3
	lsl		r0, r0, #0x7
	add		r1, r1, r0
	add		r2, r2, r1
	ldrh	r1, [r2, #0x0]
	mov		r2, #0x1
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080965e0
	add		r0, r2, #0x0
_08096602:
	lsl		r0, r3
	orr		r6, r0
_08096606:
	add		r3, r7, #0x0
	cmp		r3, #0x2
	ble		_080965ac
	add		r0, r6, #0x0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0809658c

	thumb_func_start sub_0809661c
sub_0809661c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r6, #0x0
	ldr		r0, _08096684
	ldr		r2, [r0, #0x0]
	ldr		r1, _08096688
	add		r0, r2, r1
	ldrb	r1, [r0, #0x0]
	mov		r5, #0x1
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0809667c
	mov		r3, #0x0
	ldrh	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08096654
	mov		r5, #0x99
	lsl		r5, r5, #0x3
	add		r0, r2, r5
	ldrh	r0, [r0, #0x0]
	cmp		r0, r4
	bne		_0809667c
_0809664e:
	mov		r0, #0x1
	lsl		r0, r3
	orr		r6, r0
_08096654:
	add		r3, #0x1
	cmp		r3, #0xb
	bgt		_0809667c
	ldr		r0, _08096684
	ldr		r2, [r0, #0x0]
	lsl		r0, r3, #0x5
	add		r0, r2, r0
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08096654
	lsl		r0, r3, #0x1
	mov		r5, #0x99
	lsl		r5, r5, #0x3
	add		r1, r2, r5
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, r4
	beq		_0809664e
_0809667c:
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08096684:	.4byte 0x03007FF0
_08096688:	.4byte 0x00000494
	thumb_func_end sub_0809661c

	thumb_func_start sub_0809668c
sub_0809668c:
	ldr		r1, _0809669c
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x2
	ldr		r2, _080966a0
	add		r1, r1, r2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	bx		lr

_0809669c:	.4byte 0x03007FF0
_080966a0:	.4byte 0x000004BC

.incbin "base.gba", 0x966A4, 0xAC8
	thumb_func_end sub_0809668c


.incbin "base.gba", 0x9716C, 0x1EC58
	thumb_func_start sub_080b5dc4
sub_080b5dc4:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r2, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r0, #0x1
	str		r0, [r2, #0x0]
	ldr		r0, [r1, #0x4]
	ldr		r3, [r1, #0x8]
	cmp		r0, #0x0
	bne		_080b5ddc
	str		r3, [r2, #0x4]
	b		_080b5dde
_080b5ddc:
	str		r3, [r0, #0x8]
_080b5dde:
	ldr		r0, [r1, #0x8]
	ldr		r3, [r1, #0x4]
	cmp		r0, #0x0
	bne		_080b5dea
	str		r3, [r2, #0x8]
	b		_080b5dec
_080b5dea:
	str		r3, [r0, #0x4]
_080b5dec:
	mov		r0, #0x0
	str		r0, [r1, #0x4]
	str		r0, [r1, #0x8]
	str		r0, [r1, #0x0]
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB5DFA, 0x2
	thumb_func_end sub_080b5dc4

	thumb_func_start sub_080b5dfc
sub_080b5dfc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	str		r5, [r4, #0x0]
	cmp		r6, #0x0
	bne		_080b5e24
	str		r6, [r4, #0x8]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x4]
	cmp		r0, #0x0
	bne		_080b5e1e
	str		r4, [r5, #0x4]
	b		_080b5e20
_080b5e1e:
	str		r4, [r0, #0x8]
_080b5e20:
	str		r4, [r5, #0x8]
	b		_080b5e4c
_080b5e24:
	ldr		r0, [r6, #0x0]
	cmp		r5, r0
	beq		_080b5e36
	ldr		r0, _080b5e44
	mov		r1, #0x2d
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080b5e36:
	str		r6, [r4, #0x4]
	ldr		r0, [r6, #0x8]
	str		r0, [r4, #0x8]
	cmp		r0, #0x0
	bne		_080b5e48
	str		r4, [r5, #0x8]
	b		_080b5e4a

_080b5e44:	.4byte 0x080dfd90

_080b5e48:
	str		r4, [r0, #0x4]
_080b5e4a:
	str		r4, [r6, #0x8]
_080b5e4c:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b5dfc

	thumb_func_start sub_080b5e54
sub_080b5e54:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	str		r5, [r4, #0x0]
	cmp		r6, #0x0
	bne		_080b5e7c
	str		r6, [r4, #0x4]
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x8]
	cmp		r0, #0x0
	bne		_080b5e76
	str		r4, [r5, #0x8]
	b		_080b5e78
_080b5e76:
	str		r4, [r0, #0x4]
_080b5e78:
	str		r4, [r5, #0x4]
	b		_080b5ea4
_080b5e7c:
	ldr		r0, [r6, #0x0]
	cmp		r5, r0
	beq		_080b5e8e
	ldr		r0, _080b5e9c
	mov		r1, #0x43
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080b5e8e:
	str		r6, [r4, #0x8]
	ldr		r0, [r6, #0x4]
	str		r0, [r4, #0x4]
	cmp		r0, #0x0
	bne		_080b5ea0
	str		r4, [r5, #0x4]
	b		_080b5ea2

_080b5e9c:	.4byte 0x080dfd90

_080b5ea0:
	str		r4, [r0, #0x8]
_080b5ea2:
	str		r4, [r6, #0x4]
_080b5ea4:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b5e54

	thumb_func_start sub_080b5eac
sub_080b5eac:
	push	{ lr }
	ldr		r2, [r0, #0x4]
	cmp		r2, #0x0
	beq		_080b5ebc
_080b5eb4:
	stmia	r1!, {  r2 }
	ldr		r2, [r2, #0x8]
	cmp		r2, #0x0
	bne		_080b5eb4
_080b5ebc:
	ldr		r0, [r0, #0x0]
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB5EC2, 0x10A
	thumb_func_end sub_080b5eac

	thumb_func_start sub_080b5fcc
sub_080b5fcc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_080b5fda
	bl		sub_0808afd0
_080b5fda:
	ldr		r0, [r4, #0x18]
	cmp		r0, #0x0
	beq		_080b5fe4
	bl		sub_0808afd0
_080b5fe4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB5FEA, 0x2F2
	thumb_func_end sub_080b5fcc

	thumb_func_start sub_080b62dc
sub_080b62dc:
	push	{ r4, lr }
	mov		r4, #0x1
	add		r3, r0, #0x0
	sub		r3, #0x5c
	add		r1, r0, #0x4
_080b62e6:
	ldr		r2, [r1, #0x0]
	cmp		r4, #0x18
	bgt		_080b62f0
	ldr		r0, [r1, #0x7c]
	b		_080b62f2
_080b62f0:
	ldr		r0, [r3, #0x0]
_080b62f2:
	sub		r0, r2, r0
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_080b6302
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_080b6302:
	add		r3, #0x4
	add		r1, #0x4
	add		r4, #0x1
	cmp		r4, #0x37
	ble		_080b62e6
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB6312, 0x2
	thumb_func_end sub_080b62dc

	thumb_func_start sub_080b6314
sub_080b6314:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	mov		r8, r6
	mov		r2, #0x1
	add		r1, r6, #0x0
	add		r1, #0xdc
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_080b6332
	ldr		r3, _080b6348
	add		r0, r4, r3
_080b6332:
	asr		r0, r0, #0x10
	lsl		r0, r0, #0x10
	sub		r4, r4, r0
	cmp		r4, #0x0
	bge		_080b634c
	mov		r3, #0x80
	lsl		r3, r3, #0x9
	add		r0, r4, r3
	str		r0, [r1, #0x0]
	b		_080b634e

.incbin "base.gba", 0xB6346, 0x2

_080b6348:	.4byte 0x0000FFFF

_080b634c:
	str		r4, [r1, #0x0]
_080b634e:
	mov		r7, #0x15
	mov		r5, #0x35
_080b6352:
	add		r0, r7, #0x0
	mov		r1, #0x37
	str		r2, [sp, #0x0]
	bl		sub_080bbd44
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r2, [sp, #0x0]
	str		r2, [r0, #0x0]
	sub		r2, r4, r2
	cmp		r2, #0x0
	bge		_080b6370
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	add		r2, r2, r1
_080b6370:
	ldr		r4, [r0, #0x0]
	add		r7, #0x15
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080b6352
	mov		r5, #0x2
_080b637c:
	add		r0, r6, #0x0
	bl		sub_080b62dc
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080b637c
	mov		r0, #0x37
	str		r0, [r6, #0x0]
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b6314

	thumb_func_start sub_080b6398
sub_080b6398:
	push	{ r4, lr }
	add		r1, r0, #0x0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x37
	ble		_080b63aa
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_080b63aa:
	add		r2, r1, #0x0
	ldr		r0, [r2, #0x0]
	lsl		r4, r0, #0x2
	add		r1, r4, r2
	ldr		r3, [r1, #0x0]
	cmp		r0, #0x18
	bgt		_080b63bc
	ldr		r0, [r1, #0x7c]
	b		_080b63c2
_080b63bc:
	add		r0, r1, #0x0
	sub		r0, #0x60
	ldr		r0, [r0, #0x0]
_080b63c2:
	sub		r0, r3, r0
	add		r1, r4, r2
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_080b63d4
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_080b63d4:
	ldr		r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b6398

	thumb_func_start sub_080b63dc
sub_080b63dc:
	push	{ r4, lr }
	add		r4, r1, #0x0
	bl		sub_080b6398
	mul		r0, r4
	cmp		r0, #0x0
	bge		_080b63ee
	ldr		r1, _080b63f8
	add		r0, r0, r1
_080b63ee:
	asr		r0, r0, #0x10
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB63F6, 0x2

_080b63f8:	.4byte 0x0000FFFF
	thumb_func_end sub_080b63dc

	thumb_func_start sub_080b63fc
sub_080b63fc:
	push	{ lr }
	add		r3, r0, #0x0
	b		_080b642a
_080b6402:
	ldrb	r0, [r1, #0x0]
	strb	r0, [r3, #0x0]
	ldrb	r0, [r1, #0x1]
	strb	r0, [r3, #0x1]
	ldrb	r0, [r1, #0x2]
	strb	r0, [r3, #0x2]
	ldrb	r0, [r1, #0x3]
	strb	r0, [r3, #0x3]
	ldrb	r0, [r1, #0x4]
	strb	r0, [r3, #0x4]
	ldrb	r0, [r1, #0x5]
	strb	r0, [r3, #0x5]
	ldrb	r0, [r1, #0x6]
	strb	r0, [r3, #0x6]
	ldrb	r0, [r1, #0x7]
	strb	r0, [r3, #0x7]
	ldrb	r0, [r1, #0x8]
	strb	r0, [r3, #0x8]
	add		r3, #0x9
	add		r1, #0x9
_080b642a:
	sub		r2, #0x9
	cmp		r2, #0x0
	bge		_080b6402
	add		r2, #0x5
	cmp		r2, #0x0
	blt		_080b6450
_080b6436:
	ldrb	r0, [r1, #0x0]
	strb	r0, [r3, #0x0]
	ldrb	r0, [r1, #0x1]
	strb	r0, [r3, #0x1]
	ldrb	r0, [r1, #0x2]
	strb	r0, [r3, #0x2]
	ldrb	r0, [r1, #0x3]
	strb	r0, [r3, #0x3]
	add		r3, #0x4
	add		r1, #0x4
	sub		r2, #0x4
	cmp		r2, #0x0
	bge		_080b6436
_080b6450:
	add		r2, #0x3
	cmp		r2, #0x0
	blt		_080b6464
_080b6456:
	ldrb	r0, [r1, #0x0]
	strb	r0, [r3, #0x0]
	add		r1, #0x1
	add		r3, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080b6456
_080b6464:
	add		r0, r3, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB646A, 0x2
	thumb_func_end sub_080b63fc

	thumb_func_start sub_080b646c
sub_080b646c:
	lsl		r3, r1, #0x1
	add		r3, r3, r1
	lsl		r3, r3, #0x2
	add		r0, r0, r3
	ldrb	r3, [r0, #0x8]
	ldrb	r1, [r0, #0x9]
	lsl		r1, r1, #0x8
	orr		r3, r1
	ldrb	r1, [r0, #0xa]
	lsl		r1, r1, #0x10
	orr		r3, r1
	ldrb	r1, [r0, #0xb]
	lsl		r1, r1, #0x18
	orr		r3, r1
	str		r3, [r2, #0x0]
	ldrb	r3, [r0, #0xc]
	ldrb	r1, [r0, #0xd]
	lsl		r1, r1, #0x8
	orr		r3, r1
	ldrb	r1, [r0, #0xe]
	lsl		r1, r1, #0x10
	orr		r3, r1
	ldrb	r1, [r0, #0xf]
	lsl		r1, r1, #0x18
	orr		r3, r1
	str		r3, [r2, #0x4]
	ldrb	r3, [r0, #0x10]
	ldrb	r1, [r0, #0x11]
	lsl		r1, r1, #0x8
	orr		r3, r1
	ldrb	r1, [r0, #0x12]
	lsl		r1, r1, #0x10
	orr		r3, r1
	ldrb	r0, [r0, #0x13]
	lsl		r0, r0, #0x18
	orr		r3, r0
	str		r3, [r2, #0x8]
	add		r0, r2, #0x0
	bx		lr

.incbin "base.gba", 0xB64BA, 0x2
	thumb_func_end sub_080b646c

	thumb_func_start sub_080b64bc
sub_080b64bc:
	push	{ lr }
	add		r3, r0, #0x0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r2, r3, r0
	cmp		r1, #0x0
	blt		_080b64f2
	ldr		r0, [r3, #0x4]
	cmp		r1, r0
	bge		_080b64f2
	ldrb	r1, [r2, #0x8]
	ldrb	r0, [r2, #0x9]
	lsl		r0, r0, #0x8
	orr		r1, r0
	ldrb	r0, [r2, #0xa]
	lsl		r0, r0, #0x10
	orr		r1, r0
	ldrb	r0, [r2, #0xb]
	lsl		r0, r0, #0x18
	orr		r1, r0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_080b64f2
	mov		r0, #0x1
	b		_080b64f4
_080b64f2:
	mov		r0, #0x0
_080b64f4:
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b64bc

	thumb_func_start sub_080b64f8
sub_080b64f8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, [r4, #0x4]
	bl		sub_0808afb8
	add		r1, r0, #0x0
	add		r5, r1, #0x0
	cmp		r1, #0x0
	beq		_080b6514
	ldr		r2, [r4, #0x0]
	add		r0, r6, #0x0
	bl		sub_080b651c
_080b6514:
	add		r0, r5, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b64f8

	thumb_func_start sub_080b651c
sub_080b651c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r3, r1, #0x0
	add		r4, r0, r2
	ldrb	r5, [r4, #0x0]
	ldrb	r0, [r4, #0x1]
	lsl		r0, r0, #0x8
	orr		r5, r0
	ldrb	r0, [r4, #0x2]
	lsl		r0, r0, #0x10
	orr		r5, r0
	ldrb	r0, [r4, #0x3]
	lsl		r0, r0, #0x18
	orr		r5, r0
	asr		r7, r5, #0x3
	add		r4, #0x4
	mov		r0, #0x8
	mov		r8, r0
_080b6546:
	sub		r7, #0x1
	ldrb	r1, [r4, #0x0]
	add		r4, #0x1
	mov		r2, r8
	cmp		r2, #0x0
	beq		_080b65b0
_080b6552:
	mov		r0, #0x1
	and		r0, r1
	add		r6, r4, #0x1
	sub		r2, #0x1
	mov		r9, r2
	lsr		r1, r1, #0x1
	mov		r10, r1
	cmp		r0, #0x0
	beq		_080b656e
	ldrb	r0, [r4, #0x0]
	strb	r0, [r3, #0x0]
	add		r4, r6, #0x0
	add		r3, #0x1
	b		_080b65a8
_080b656e:
	ldrb	r2, [r4, #0x0]
	add		r4, r6, #0x0
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x8
	orr		r2, r0
	add		r4, #0x1
	ldr		r0, _080b6594
	and		r0, r2
	sub		r0, r3, r0
	sub		r1, r0, #0x1
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	and		r0, r2
	cmp		r0, #0x0
	beq		_080b6598
	asr		r0, r2, #0xc
	add		r2, r0, #0x2
	b		_080b65a0

.incbin "base.gba", 0xB6592, 0x2

_080b6594:	.4byte 0x00000FFF

_080b6598:
	ldrb	r0, [r4, #0x0]
	add		r2, r0, #0x0
	add		r2, #0x12
	add		r4, #0x1
_080b65a0:
	add		r0, r3, #0x0
	bl		sub_080b63fc
	add		r3, r0, #0x0
_080b65a8:
	mov		r2, r9
	mov		r1, r10
	cmp		r2, #0x0
	bne		_080b6552
_080b65b0:
	cmp		r7, #0x0
	bgt		_080b6546
	cmp		r5, #0x0
	ble		_080b65c4
	mov		r0, #0x7
	mov		r8, r0
	and		r0, r5
	mov		r8, r0
	mov		r5, #0x0
	b		_080b6546
_080b65c4:
	add		r0, r3, #0x3
	mov		r1, #0x3
	and		r0, r1
	sub		r0, #0x3
	sub		r0, r3, r0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b651c

	thumb_func_start sub_080b65dc
sub_080b65dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	mov		r10, r2
	str		r3, [sp, #0x8]
	mov		r7, #0x1
	cmp		r7, r10
	bge		_080b665a
_080b65f6:
	lsl		r0, r7, #0x2
	add		r7, r0, #0x1
	cmp		r7, r10
	blt		_080b65f6
	b		_080b665a
_080b6600:
	ldr		r1, [sp, #0x4]
	add		r4, r1, r0
	add		r1, r10
	str		r1, [sp, #0x10]
	cmp		r4, r1
	bge		_080b665a
	lsl		r0, r4, #0x2
	ldr		r3, [sp, #0x0]
	add		r0, r0, r3
	mov		r8, r0
_080b6614:
	mov		r9, r4
	sub		r6, r4, r7
	mov		r0, r8
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0xC]
_080b661e:
	lsl		r0, r6, #0x2
	ldr		r1, [sp, #0x0]
	add		r5, r0, r1
	ldr		r1, [r5, #0x0]
	ldr		r0, [sp, #0x0+0x34]
	ldr		r2, [sp, #0xC]
	ldr		r3, [sp, #0x8]
	bl		sub_080bbc7c
	cmp		r0, #0x0
	ble		_080b664e
	mov		r1, r9
	lsl		r0, r1, #0x2
	ldr		r3, [sp, #0x0]
	add		r0, r0, r3
	ldr		r1, [r5, #0x0]
	str		r1, [r0, #0x0]
	ldr		r0, [sp, #0xC]
	str		r0, [r5, #0x0]
	mov		r9, r6
	sub		r6, r6, r7
	ldr		r1, [sp, #0x4]
	cmp		r6, r1
	bge		_080b661e
_080b664e:
	mov		r3, #0x4
	add		r8, r3
	add		r4, #0x1
	ldr		r0, [sp, #0x10]
	cmp		r4, r0
	blt		_080b6614
_080b665a:
	add		r0, r7, #0x0
	cmp		r7, #0x0
	bge		_080b6662
	add		r0, r7, #0x3
_080b6662:
	asr		r0, r0, #0x2
	add		r7, r0, #0x0
	cmp		r0, #0x0
	bgt		_080b6600
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB667A, 0xEA
	thumb_func_end sub_080b65dc

	thumb_func_start sub_080b6764
sub_080b6764:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	b		_080b67d2
_080b676e:
	mov		r1, #0x0
	ldrsb	r1, [r3, r1]
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1e
	bls		_080b678c
	add		r0, r1, #0x0
	add		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1c
	bhi		_080b678e
_080b678c:
	mov		r2, #0x1
_080b678e:
	ldrb	r4, [r3, #0x0]
	cmp		r2, #0x0
	beq		_080b67c8
	mov		r0, #0x1
	ldrsb	r0, [r3, r0]
	mov		r6, #0x0
	lsl		r2, r0, #0x18
	asr		r1, r2, #0x18
	mov		r7, #0xc0
	lsl		r7, r7, #0x18
	add		r0, r2, r7
	lsr		r0, r0, #0x18
	cmp		r0, #0x3e
	bls		_080b67b4
	cmp		r1, #0x0
	bge		_080b67b6
	lsr		r0, r2, #0x18
	cmp		r0, #0xfc
	bhi		_080b67b6
_080b67b4:
	mov		r6, #0x1
_080b67b6:
	cmp		r6, #0x0
	beq		_080b67c8
	lsl		r1, r4, #0x8
	ldrb	r0, [r3, #0x1]
	orr		r0, r1
	cmp		r5, r0
	beq		_080b67cc
	add		r3, #0x2
	b		_080b67d2
_080b67c8:
	cmp		r5, r4
	bne		_080b67d0
_080b67cc:
	add		r0, r3, #0x0
	b		_080b67e2
_080b67d0:
	add		r3, #0x1
_080b67d2:
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x0
	bne		_080b676e
	mov		r0, #0x0
	cmp		r5, #0x0
	bne		_080b67e2
	add		r0, r3, #0x0
_080b67e2:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b6764

	thumb_func_start sub_080b67e8
sub_080b67e8:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	b		_080b6926
_080b67f0:
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1e
	bls		_080b680e
	add		r0, r1, #0x0
	add		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1c
	bhi		_080b6810
_080b680e:
	mov		r2, #0x1
_080b6810:
	cmp		r2, #0x0
	beq		_080b68b8
	mov		r0, #0x1
	ldrsb	r0, [r4, r0]
	mov		r3, #0x0
	lsl		r1, r0, #0x18
	asr		r2, r1, #0x18
	mov		r5, #0xc0
	lsl		r5, r5, #0x18
	add		r0, r1, r5
	lsr		r0, r0, #0x18
	cmp		r0, #0x3e
	bls		_080b6834
	cmp		r2, #0x0
	bge		_080b6836
	lsr		r0, r1, #0x18
	cmp		r0, #0xfc
	bhi		_080b6836
_080b6834:
	mov		r3, #0x1
_080b6836:
	cmp		r3, #0x0
	beq		_080b68b8
	add		r2, r6, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x0
	beq		_080b68b4
_080b6844:
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	mov		r3, #0x0
	add		r0, r1, #0x0
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1e
	bls		_080b6862
	add		r0, r1, #0x0
	add		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1c
	bhi		_080b6864
_080b6862:
	mov		r3, #0x1
_080b6864:
	cmp		r3, #0x0
	beq		_080b68aa
	mov		r0, #0x1
	ldrsb	r0, [r2, r0]
	mov		r5, #0x0
	lsl		r1, r0, #0x18
	asr		r3, r1, #0x18
	mov		r7, #0xc0
	lsl		r7, r7, #0x18
	add		r0, r1, r7
	lsr		r0, r0, #0x18
	cmp		r0, #0x3e
	bls		_080b6888
	cmp		r3, #0x0
	bge		_080b688a
	lsr		r0, r1, #0x18
	cmp		r0, #0xfc
	bhi		_080b688a
_080b6888:
	mov		r5, #0x1
_080b688a:
	cmp		r5, #0x0
	beq		_080b68aa
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r1, r0
	bne		_080b68a6
	mov		r1, #0x1
	ldrsb	r1, [r2, r1]
	mov		r0, #0x1
	ldrsb	r0, [r4, r0]
	cmp		r1, r0
	beq		_080b6916
_080b68a6:
	add		r2, #0x2
	b		_080b68ac
_080b68aa:
	add		r2, #0x1
_080b68ac:
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	bne		_080b6844
_080b68b4:
	add		r4, #0x2
	b		_080b6926
_080b68b8:
	add		r2, r6, #0x0
	b		_080b691c
_080b68bc:
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	mov		r3, #0x0
	add		r0, r1, #0x0
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1e
	bls		_080b68da
	add		r0, r1, #0x0
	add		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1c
	bhi		_080b68dc
_080b68da:
	mov		r3, #0x1
_080b68dc:
	cmp		r3, #0x0
	beq		_080b690a
	mov		r0, #0x1
	ldrsb	r0, [r2, r0]
	mov		r5, #0x0
	lsl		r1, r0, #0x18
	asr		r3, r1, #0x18
	mov		r7, #0xc0
	lsl		r7, r7, #0x18
	add		r0, r1, r7
	lsr		r0, r0, #0x18
	cmp		r0, #0x3e
	bls		_080b6900
	cmp		r3, #0x0
	bge		_080b6902
	lsr		r0, r1, #0x18
	cmp		r0, #0xfc
	bhi		_080b6902
_080b6900:
	mov		r5, #0x1
_080b6902:
	cmp		r5, #0x0
	beq		_080b690a
	add		r2, #0x2
	b		_080b691c
_080b690a:
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r1, r0
	bne		_080b691a
_080b6916:
	add		r0, r4, #0x0
	b		_080b6932
_080b691a:
	add		r2, #0x1
_080b691c:
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	bne		_080b68bc
	add		r4, #0x1
_080b6926:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	beq		_080b6930
	b		_080b67f0
_080b6930:
	mov		r0, #0x0
_080b6932:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b67e8

	thumb_func_start sub_080b6938
sub_080b6938:
	push	{ r4, r5, r6, r7, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r12, r1
	add		r5, r2, #0x0
	add		r1, r5, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x0
	beq		_080b69d8
_080b694e:
	mov		r3, #0x0
	ldrsb	r3, [r2, r3]
	mov		r4, #0x0
	add		r0, r3, #0x0
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1e
	bls		_080b696c
	add		r0, r3, #0x0
	add		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1c
	bhi		_080b696e
_080b696c:
	mov		r4, #0x1
_080b696e:
	cmp		r4, #0x0
	beq		_080b69aa
	mov		r0, #0x1
	ldrsb	r0, [r2, r0]
	mov		r6, #0x0
	lsl		r3, r0, #0x18
	asr		r4, r3, #0x18
	mov		r7, #0xc0
	lsl		r7, r7, #0x18
	add		r0, r3, r7
	lsr		r0, r0, #0x18
	cmp		r0, #0x3e
	bls		_080b6992
	cmp		r4, #0x0
	bge		_080b6994
	lsr		r0, r3, #0x18
	cmp		r0, #0xfc
	bhi		_080b6994
_080b6992:
	mov		r6, #0x1
_080b6994:
	cmp		r6, #0x0
	beq		_080b69aa
	cmp		r2, r1
	beq		_080b69a4
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
	ldrb	r0, [r2, #0x1]
	strb	r0, [r1, #0x1]
_080b69a4:
	add		r2, #0x2
	add		r1, #0x2
	b		_080b69d0
_080b69aa:
	cmp		r2, r1
	beq		_080b69b2
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
_080b69b2:
	mov		r4, #0x0
	ldrsb	r4, [r2, r4]
	mov		r3, r12
	lsl		r0, r3, #0x18
	asr		r0, r0, #0x18
	add		r3, r2, #0x1
	cmp		r4, r0
	bne		_080b69cc
	mov		r0, #0x1
	ldrsb	r0, [r2, r0]
	cmp		r0, r4
	bne		_080b69cc
	add		r3, r2, #0x2
_080b69cc:
	add		r2, r3, #0x0
	add		r1, #0x1
_080b69d0:
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	bne		_080b694e
_080b69d8:
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b6938

	thumb_func_start sub_080b69e4
sub_080b69e4:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	b		_080b69f8
_080b69ea:
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x20
	beq		_080b69f6
	cmp		r0, #0x9
	bne		_080b6a42
_080b69f6:
	add		r2, #0x1
_080b69f8:
	mov		r1, #0x0
	ldrsb	r1, [r2, r1]
	mov		r3, #0x0
	add		r0, r1, #0x0
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1e
	bls		_080b6a16
	add		r0, r1, #0x0
	add		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1c
	bhi		_080b6a18
_080b6a16:
	mov		r3, #0x1
_080b6a18:
	cmp		r3, #0x0
	beq		_080b69ea
	mov		r0, #0x1
	ldrsb	r0, [r2, r0]
	mov		r4, #0x0
	lsl		r1, r0, #0x18
	asr		r3, r1, #0x18
	mov		r5, #0xc0
	lsl		r5, r5, #0x18
	add		r0, r1, r5
	lsr		r0, r0, #0x18
	cmp		r0, #0x3e
	bls		_080b6a3c
	cmp		r3, #0x0
	bge		_080b6a3e
	lsr		r0, r1, #0x18
	cmp		r0, #0xfc
	bhi		_080b6a3e
_080b6a3c:
	mov		r4, #0x1
_080b6a3e:
	cmp		r4, #0x0
	beq		_080b69ea
_080b6a42:
	add		r0, r2, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB6A4A, 0x8E
	thumb_func_end sub_080b69e4

	thumb_func_start sub_080b6ad8
sub_080b6ad8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	mov		r8, r1
	add		r6, r4, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x0
	beq		_080b6b8a
_080b6aec:
	mov		r3, #0x0
	ldrsb	r3, [r4, r3]
	mov		r1, #0x0
	add		r0, r3, #0x0
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1e
	bls		_080b6b0a
	add		r0, r3, #0x0
	add		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1c
	bhi		_080b6b0c
_080b6b0a:
	mov		r1, #0x1
_080b6b0c:
	cmp		r1, #0x0
	beq		_080b6b78
	mov		r0, #0x1
	ldrsb	r0, [r4, r0]
	mov		r5, #0x0
	lsl		r1, r0, #0x18
	asr		r2, r1, #0x18
	mov		r7, #0xc0
	lsl		r7, r7, #0x18
	add		r0, r1, r7
	lsr		r0, r0, #0x18
	cmp		r0, #0x3e
	bls		_080b6b30
	cmp		r2, #0x0
	bge		_080b6b32
	lsr		r0, r1, #0x18
	cmp		r0, #0xfc
	bhi		_080b6b32
_080b6b30:
	mov		r5, #0x1
_080b6b32:
	cmp		r5, #0x0
	beq		_080b6b78
	mov		r0, r8
	cmp		r0, #0x0
	beq		_080b6b74
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x8
	ldrb	r1, [r4, #0x1]
	orr		r1, r0
	mov		r2, #0x0
	ldr		r3, _080b6b64
	add		r0, r1, r3
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x19
	bhi		_080b6b54
	mov		r2, #0x1
_080b6b54:
	cmp		r2, #0x0
	beq		_080b6b68
	add		r0, r1, #0x0
	sub		r0, #0x21
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	b		_080b6b6a

.incbin "base.gba", 0xB6B62, 0x2

_080b6b64:	.4byte 0x00007D7F

_080b6b68:
	add		r0, r1, #0x0
_080b6b6a:
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	lsr		r0, r0, #0x18
	strb	r0, [r4, #0x0]
	strb	r1, [r4, #0x1]
_080b6b74:
	add		r4, #0x2
	b		_080b6b82
_080b6b78:
	add		r0, r3, #0x0
	bl		sub_0808c614
	strb	r0, [r4, #0x0]
	add		r4, #0x1
_080b6b82:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	bne		_080b6aec
_080b6b8a:
	add		r0, r6, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB6B96, 0x30E
	thumb_func_end sub_080b6ad8

	thumb_func_start sub_080b6ea4
sub_080b6ea4:
	push	{ lr }
	str		r2, [r0, #0xc]
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	str		r1, [r0, #0x4]
	cmp		r1, #0x0
	beq		_080b6eb6
	str		r2, [r1, #0x0]
	str		r3, [r1, #0x4]
_080b6eb6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB6EBA, 0x2
	thumb_func_end sub_080b6ea4

	thumb_func_start sub_080b6ebc
sub_080b6ebc:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r7, #0x0
	b		_080b6ec8
_080b6ec6:
	add		r5, r4, #0x0
_080b6ec8:
	ldr		r4, [r5, #0x4]
	cmp		r4, #0x0
	beq		_080b6efc
	add		r0, r4, #0x0
	bl		sub_0808aec8
	cmp		r0, #0x0
	blt		_080b6ee4
	ldr		r0, _080b6ef8
	mov		r1, #0x2d
	add		r2, r4, #0x0
	mov		r3, #0x9
	bl		sub_08000268
_080b6ee4:
	ldr		r0, [r4, #0x0]
	cmp		r0, r6
	bcc		_080b6ec6
	sub		r1, r0, r6
	cmp		r1, #0xf
	bhi		_080b6f00
	add		r6, r0, #0x0
	ldr		r0, [r4, #0x4]
	str		r0, [r5, #0x4]
	b		_080b6f0a

_080b6ef8:	.4byte 0x080dfdc4

_080b6efc:
	mov		r0, #0x0
	b		_080b6f14
_080b6f00:
	add		r0, r4, r6
	str		r0, [r5, #0x4]
	str		r1, [r0, #0x0]
	ldr		r1, [r4, #0x4]
	str		r1, [r0, #0x4]
_080b6f0a:
	ldr		r0, [r7, #0xc]
	sub		r0, r0, r6
	str		r0, [r7, #0xc]
	str		r4, [r4, #0x8]
	add		r0, r4, #0x0
_080b6f14:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB6F1A, 0x2
	thumb_func_end sub_080b6ebc

	thumb_func_start sub_080b6f1c
sub_080b6f1c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r7, [r1, #0x0]
	add		r6, r1, #0x0
	add		r5, r0, #0x0
	add		r0, r6, r7
	mov		r8, r0
	ldr		r0, [r5, #0xc]
	add		r0, r0, r7
	str		r0, [r5, #0xc]
	b		_080b6f36
_080b6f34:
	add		r5, r4, #0x0
_080b6f36:
	ldr		r4, [r5, #0x4]
	cmp		r4, #0x0
	beq		_080b6f60
	add		r0, r4, #0x0
	bl		sub_0808aec8
	cmp		r0, #0x0
	blt		_080b6f52
	ldr		r0, _080b6f70
	mov		r1, #0x46
	add		r2, r4, #0x0
	mov		r3, #0x9
	bl		sub_08000268
_080b6f52:
	cmp		r4, r6
	bls		_080b6f34
	cmp		r4, r8
	bne		_080b6f60
	ldr		r0, [r4, #0x0]
	add		r7, r7, r0
	ldr		r4, [r4, #0x4]
_080b6f60:
	ldr		r1, [r5, #0x0]
	add		r0, r5, r1
	cmp		r0, r6
	bne		_080b6f74
	add		r0, r1, r7
	str		r0, [r5, #0x0]
	str		r4, [r5, #0x4]
	b		_080b6f7a

_080b6f70:	.4byte 0x080dfdc4

_080b6f74:
	str		r7, [r6, #0x0]
	str		r4, [r6, #0x4]
	str		r6, [r5, #0x4]
_080b6f7a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB6F84, 0x3C
	thumb_func_end sub_080b6f1c

	thumb_func_start sub_080b6fc0
sub_080b6fc0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	str		r2, [r4, #0x0]
	mov		r0, #0x0
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	add		r0, #0x14
	str		r1, [r4, #0x8]
	str		r2, [r4, #0x4]
	bl		sub_080b6ea4
	mov		r0, #0x1
	str		r0, [r4, #0x10]
	add		r4, #0x24
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080b6ea4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b6fc0

	thumb_func_start sub_080b6fec
sub_080b6fec:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r0, r6, #0x0
	add		r0, #0x1b
	mov		r1, #0xf
	and		r0, r1
	sub		r0, #0x1b
	sub		r6, r6, r0
	ldr		r7, [r5, #0xc]
	lsl		r0, r7, #0x4
	add		r0, #0x14
	add		r0, r5, r0
	add		r1, r6, #0x0
	bl		sub_080b6ebc
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_080b703a
	ldr		r4, [r5, #0x10]
	str		r7, [r5, #0x10]
	str		r4, [r5, #0xc]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080b7068
	lsl		r4, r4, #0x4
	add		r4, #0x14
	add		r4, r5, r4
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080b6ebc
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_080b703a
	mov		r0, #0x0
	b		_080b7046
_080b703a:
	str		r6, [r2, #0x0]
	str		r5, [r2, #0x4]
	ldr		r0, [r5, #0x0]
	sub		r0, r0, r6
	str		r0, [r5, #0x0]
	add		r0, r2, #0x0
_080b7046:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b6fec

	thumb_func_start sub_080b704c
sub_080b704c:
	push	{ lr }
	ldr		r2, [r0, #0x0]
	ldr		r3, [r1, #0x0]
	add		r2, r2, r3
	str		r2, [r0, #0x0]
	ldr		r2, [r0, #0x10]
	lsl		r2, r2, #0x4
	add		r2, #0x14
	add		r0, r0, r2
	bl		sub_080b6f1c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB7066, 0x2
	thumb_func_end sub_080b704c

	thumb_func_start sub_080b7068
sub_080b7068:
	push	{ r4, r5, r6, lr }
	lsl		r1, r1, #0x4
	add		r1, #0x14
	add		r5, r0, r1
	lsl		r2, r2, #0x4
	add		r2, #0x14
	add		r6, r0, r2
	ldr		r4, [r5, #0x4]
	cmp		r4, #0x0
	beq		_080b708a
_080b707c:
	add		r1, r4, #0x0
	ldr		r4, [r4, #0x4]
	add		r0, r6, #0x0
	bl		sub_080b6f1c
	cmp		r4, #0x0
	bne		_080b707c
_080b708a:
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080b6ea4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB709A, 0x2
	thumb_func_end sub_080b7068

	thumb_func_start sub_080b709c
sub_080b709c:
	mov		r3, pc
	bx		r3
_080b70a0:
.incbin "base.gba", 0xB70A0, 0x4
.incbin "base.gba", 0xB70A4, 0x4
.incbin "base.gba", 0xB70A8, 0x4

.incbin "base.gba", 0xB70AC, 0x4
	thumb_func_end sub_080b709c

	thumb_func_start sub_080b70b0
sub_080b70b0:
	mov		r3, pc
	bx		r3
_080b70b4:
.incbin "base.gba", 0xB70B4, 0x4
.incbin "base.gba", 0xB70B8, 0x4
.incbin "base.gba", 0xB70BC, 0x4

.incbin "base.gba", 0xB70C0, 0x4
	thumb_func_end sub_080b70b0

	thumb_func_start sub_080b70c4
sub_080b70c4:
	mov		sp, r3
	bx		r2

.incbin "base.gba", 0xB70C8, 0x4
	thumb_func_end sub_080b70c4

	thumb_func_start sub_080b70cc
sub_080b70cc:
	mov		r0, sp
	bx		lr

.incbin "base.gba", 0xB70D0, 0x4
	thumb_func_end sub_080b70cc

	thumb_func_start sub_080b70d4
sub_080b70d4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b6fc0
	add		r0, r4, #0x0
	add		r0, #0x40
	mov		r2, #0x1f
_080b70e2:
	str		r4, [r0, #0xc]
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x8]
	str		r1, [r0, #0x0]
	add		r0, #0x10
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080b70e2
	mov		r0, #0x1
	str		r0, [r4, #0x34]
	str		r1, [r4, #0x38]
	mov		r0, #0x90
	lsl		r0, r0, #0x2
	add		r1, r4, r0
	mov		r2, #0x91
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	str		r0, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x80
	bl		sub_0808c828
	mov		r0, #0xb1
	lsl		r0, r0, #0x2
	add		r1, r4, r0
	mov		r2, #0xb2
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	str		r0, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x60
	bl		sub_0808c828
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB712E, 0x2
	thumb_func_end sub_080b70d4

	thumb_func_start sub_080b7130
sub_080b7130:
	ldr		r1, [r0, #0x34]
	add		r1, #0x2
	ldr		r2, _080b713c
	and		r1, r2
	str		r1, [r0, #0x34]
	bx		lr

_080b713c:	.4byte 0x7FFFFFFF
	thumb_func_end sub_080b7130

	thumb_func_start sub_080b7140
sub_080b7140:
	mov		r2, #0xb1
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	add		r3, r2, #0x0
	add		r2, #0xc
	str		r2, [r0, #0x0]
	str		r1, [r3, #0x0]
	add		r0, r3, #0x0
	bx		lr
	thumb_func_end sub_080b7140

	thumb_func_start sub_080b7154
sub_080b7154:
	mov		r1, #0xb1
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	sub		r1, #0xc
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0xB7162, 0x2
	thumb_func_end sub_080b7154

	thumb_func_start sub_080b7164
sub_080b7164:
	ldr		r2, [r1, #0x4]
	str		r2, [r0, #0x4]
	ldr		r1, [r1, #0x8]
	str		r1, [r0, #0x8]
	bx		lr

.incbin "base.gba", 0xB716E, 0x2
	thumb_func_end sub_080b7164

	thumb_func_start sub_080b7170
sub_080b7170:
	push	{ lr }
	mov		r12, r0
	add		r3, r1, #0x0
	mov		r2, #0xb2
	lsl		r2, r2, #0x2
	add		r2, r12
	b		_080b719e
_080b717e:
	ldr		r1, [r3, #0x1c]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bne		_080b719c
	ldr		r0, [r2, #0x4]
	cmp		r3, r0
	bne		_080b7192
	ldr		r0, [r3, #0x4]
	str		r0, [r2, #0x4]
	b		_080b719c
_080b7192:
	ldr		r0, [r2, #0x8]
	cmp		r3, r0
	bne		_080b719c
	ldr		r0, [r3, #0x8]
	str		r0, [r2, #0x8]
_080b719c:
	add		r2, #0xc
_080b719e:
	mov		r0, #0xb1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	cmp		r2, r0
	bcc		_080b717e
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB71AE, 0x2
	thumb_func_end sub_080b7170

	thumb_func_start sub_080b71b0
sub_080b71b0:
	push	{ lr }
	mov		r12, r0
	add		r3, r1, #0x0
	mov		r2, #0xb2
	lsl		r2, r2, #0x2
	add		r2, r12
	b		_080b71de
_080b71be:
	ldr		r1, [r3, #0x1c]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bne		_080b71dc
	ldr		r1, [r3, #0x8]
	ldr		r0, [r2, #0x8]
	cmp		r1, r0
	bne		_080b71dc
	ldr		r0, [r3, #0x4]
	str		r0, [r2, #0x4]
	cmp		r0, #0x0
	beq		_080b71da
	ldr		r0, [r0, #0x4]
	str		r0, [r2, #0x4]
_080b71da:
	str		r3, [r2, #0x8]
_080b71dc:
	add		r2, #0xc
_080b71de:
	mov		r0, #0xb1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	cmp		r2, r0
	bcc		_080b71be
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB71EE, 0x2
	thumb_func_end sub_080b71b0

	thumb_func_start sub_080b71f0
sub_080b71f0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x30]
	str		r0, [r1, #0x24]
	str		r1, [r4, #0x30]
	str		r2, [r4, #0x24]
	bl		sub_080b70cc
	str		r0, [r4, #0x34]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b71f0

	thumb_func_start sub_080b7208
sub_080b7208:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x3c]
	str		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_080b7224
	ldr		r1, [r2, #0xc]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r2, r0
	ldr		r2, [r1, #0x14]
	mov		r1, #0x3
	bl		sub_080bbc78
_080b7224:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b7208

	thumb_func_start sub_080b7228
sub_080b7228:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
_080b722c:
	mov		r1, #0x90
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r4, [r0, #0x0]
	add		r1, r4, #0x0
	sub		r1, #0x10
	str		r1, [r0, #0x0]
	ldr		r2, [r1, #0x0]
	str		r2, [r5, #0x38]
	cmp		r2, #0x0
	bne		_080b724e
	ldr		r0, [r1, #0x4]
	mov		r1, #0x3
	neg		r1, r1
	bl		sub_080b70b0
	b		_080b722c
_080b724e:
	ldr		r1, [r2, #0x28]
	cmp		r1, #0x0
	bge		_080b7264
	add		r0, r1, #0x1
	str		r0, [r2, #0x28]
	cmp		r0, #0x0
	bne		_080b722c
	add		r0, r2, #0x0
	bl		sub_080b7208
	b		_080b722c
_080b7264:
	ldr		r3, [r2, #0x24]
	cmp		r3, #0x0
	blt		_080b7270
	ldr		r0, [r5, #0x34]
	cmp		r3, r0
	bne		_080b7276
_080b7270:
	sub		r0, r1, #0x1
	str		r0, [r2, #0x28]
	b		_080b722c
_080b7276:
	add		r0, r4, #0x0
	sub		r0, #0x8
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x24]
	ldr		r0, [r2, #0x30]
	ldr		r1, [r0, #0x24]
	str		r1, [r2, #0x30]
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_080b70b0
	b		_080b722c

.incbin "base.gba", 0xB728E, 0x2
	thumb_func_end sub_080b7228

	thumb_func_start sub_080b7290
sub_080b7290:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r5, #0x0
	add		r6, #0x10
	ldr		r0, [r6, #0x10]
	ldr		r0, [r0, #0x38]
	cmp		r5, r0
	beq		_080b72ac
	ldr		r0, _080b72e8
	ldr		r1, _080b72ec
	add		r2, r5, #0x0
	mov		r3, #0x1
	bl		sub_08000268
_080b72ac:
	ldr		r1, [r6, #0x28]
	mvn		r4, r5
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	bne		_080b72bc
	ldr		r0, [r1, #0x4]
	cmp		r0, r4
	beq		_080b72c8
_080b72bc:
	ldr		r0, _080b72e8
	ldr		r1, _080b72f0
	add		r2, r5, #0x0
	mov		r3, #0x2
	bl		sub_08000268
_080b72c8:
	ldr		r0, [r6, #0x2c]
	ldr		r1, [r0, #0x0]
	cmp		r1, r4
	bne		_080b72d6
	ldr		r0, [r0, #0x4]
	cmp		r0, r1
	beq		_080b72e2
_080b72d6:
	ldr		r0, _080b72e8
	ldr		r1, _080b72f4
	add		r2, r5, #0x0
	mov		r3, #0x3
	bl		sub_08000268
_080b72e2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080b72e8:	.4byte 0x080dfdc4
_080b72ec:	.4byte 0x000001FB
_080b72f0:	.4byte 0x00000201
_080b72f4:	.4byte 0x00000203
	thumb_func_end sub_080b7290

	thumb_func_start sub_080b72f8
sub_080b72f8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_080b7290
	add		r5, r4, #0x0
	add		r5, #0x10
	ldr		r1, [r4, #0x28]
	mov		r0, #0x1
	sub		r0, r0, r1
	str		r0, [r4, #0x28]
	cmp		r0, #0x0
	bne		_080b7316
	add		r0, r4, #0x0
	bl		sub_080b7208
_080b7316:
	ldr		r0, [r5, #0x10]
	bl		sub_080b7228
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB7322, 0x2
	push	{ r4, r5, lr }
	sub		sp, #0x28
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, [r4, #0x2c]
	str		r0, [sp, #0x24]
	mov		r0, sp
	str		r0, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r1, sp
	mov		r2, #0x0
	bl		sub_080b71f0
	mov		r0, sp
	bl		sub_080b709c
	cmp		r0, #0x0
	bne		_080b7352
	mov		r1, #0x1
	neg		r1, r1
	add		r0, r5, #0x0
	bl		sub_080b70b0
_080b7352:
	add		r0, r4, #0x0
	bl		sub_08000264
	ldr		r3, [r4, #0xc]
	mov		r1, #0x18
	ldrsh	r0, [r3, r1]
	add		r0, r4, r0
	ldr		r1, [r4, #0x14]
	ldr		r2, [r4, #0x10]
	ldr		r3, [r3, #0x1c]
	bl		sub_080bbc7c
	add		r0, r4, #0x0
	bl		sub_08000260
	add		r0, r4, #0x0
	bl		sub_080b72f8
	add		sp, #0x28
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB737E, 0x2
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	add		r0, r4, #0x0
	bl		sub_08000264
	ldr		r3, [r4, #0xc]
	mov		r1, #0x20
	ldrsh	r0, [r3, r1]
	add		r0, r4, r0
	add		r5, r4, #0x0
	add		r5, #0x10
	ldr		r1, [r4, #0x14]
	ldr		r2, [r4, #0x10]
	ldr		r3, [r3, #0x24]
	bl		sub_080bbc7c
	add		r0, r4, #0x0
	bl		sub_08000260
	ldr		r0, [r5, #0x10]
	ldr		r1, [r0, #0x3c]
	add		r0, r4, #0x0
	bl		sub_080bbc74
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB73B6, 0x2
	thumb_func_end sub_080b72f8

	thumb_func_start sub_080b73b8
sub_080b73b8:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	str		r4, [r0, #0x38]
	str		r3, [r0, #0x3c]
	ldr		r1, [r4, #0x28]
	add		r1, #0x1
	str		r1, [r4, #0x28]
	mov		r1, #0x90
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r2, r1, #0x0
	add		r1, #0x10
	str		r1, [r0, #0x0]
	str		r5, [r2, #0x4]
	str		r4, [r2, #0x10]
	str		r3, [r2, #0x1c]
	ldr		r4, [r2, #0x0]
	cmp		r4, #0x0
	beq		_080b73f0
	ldr		r0, [r4, #0x24]
	str		r0, [r2, #0x8]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b71f0
_080b73f0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB73F6, 0x2
	thumb_func_end sub_080b73b8

	thumb_func_start sub_080b73f8
sub_080b73f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x28
	mov		r8, r0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	add		r0, r7, #0x0
	add		r0, #0xf
	mov		r4, #0xf
	and		r0, r4
	sub		r0, #0xf
	sub		r7, r7, r0
	mov		r1, #0x90
	lsl		r1, r1, #0x3
	add		r0, r6, #0x0
	bl		sub_080bbeac
	add		r1, r6, #0x0
	add		r1, #0xf
	and		r1, r4
	mvn		r1, r1
	add		r6, r1, r6
	cmp		r0, #0x0
	bgt		_080b7436
	mov		r0, r8
	add		r1, r6, #0x0
	bl		sub_080b6fec
	add		r5, r0, #0x0
	b		_080b7438
_080b7436:
	mov		r5, #0x0
_080b7438:
	cmp		r5, #0x0
	bne		_080b7448
	add		r0, r7, r6
	bl		sub_0808afb8
	add		r4, r0, #0x0
	add		r5, r4, r7
	b		_080b7452
_080b7448:
	add		r0, r7, #0x0
	bl		sub_0808afb8
	add		r4, r0, #0x0
	add		r5, #0x10
_080b7452:
	cmp		r4, #0x0
	bne		_080b7462
	ldr		r0, _080b74bc
	ldr		r1, _080b74c0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080b7462:
	add		r1, r4, #0x0
	add		r1, #0x10
	str		r5, [r4, #0x38]
	add		r0, r5, r6
	str		r0, [r4, #0x34]
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	str		r0, [r4, #0x0]
	str		r0, [r4, #0x10]
	str		r0, [r4, #0x14]
	str		r0, [r4, #0x18]
	str		r0, [r4, #0x1c]
	mov		r2, r8
	str		r2, [r1, #0x10]
	str		r0, [r4, #0x24]
	str		r0, [r4, #0x28]
	str		r0, [r4, #0x2c]
	add		r0, r5, #0x0
	add		r0, #0x78
	str		r0, [r4, #0x3c]
	mvn		r0, r4
	str		r0, [r5, #0x4]
	str		r0, [r5, #0x0]
	ldr		r1, [r1, #0x2c]
	str		r0, [r1, #0x4]
	str		r0, [r1, #0x0]
	mov		r0, sp
	bl		sub_080b709c
	cmp		r0, #0x0
	bne		_080b74ae
	ldr		r2, _080b74c4
	ldr		r3, [r4, #0x34]
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080b70c4
_080b74ae:
	add		r0, r4, #0x0
	add		sp, #0x28
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080b74bc:	.4byte 0x080dfdc4
_080b74c0:	.4byte 0x0000026F
_080b74c4:	.4byte 0x080b7325
	thumb_func_end sub_080b73f8

	thumb_func_start sub_080b74c8
sub_080b74c8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r2, [r4, #0x38]
	lsr		r0, r2, #0x18
	cmp		r0, #0x3
	bne		_080b74e2
	add		r1, r2, #0x0
	sub		r1, #0x10
	add		r0, r2, #0x0
	sub		r0, #0xc
	ldr		r0, [r0, #0x0]
	bl		sub_080b704c
_080b74e2:
	cmp		r4, #0x0
	beq		_080b74ec
	add		r0, r4, #0x0
	bl		sub_0808afd0
_080b74ec:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB74F2, 0x2
	thumb_func_end sub_080b74c8

	thumb_func_start sub_080b74f4
sub_080b74f4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080c3c88
	ldr		r0, _080b7520
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x3c]
	mvn		r1, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, r1
	beq		_080b7516
	ldr		r0, _080b7524
	ldr		r1, _080b7528
	add		r2, r4, #0x0
	mov		r3, #0x4
	bl		sub_08000268
_080b7516:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB751E, 0x2

_080b7520:	.4byte 0x080e3244
_080b7524:	.4byte 0x080dfdc4
_080b7528:	.4byte 0x00000293
	thumb_func_end sub_080b74f4

	thumb_func_start sub_080b752c
sub_080b752c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _080b7564
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x3c]
	ldr		r0, [r0, #0x0]
	cmp		r0, r4
	beq		_080b754a
	ldr		r0, _080b7568
	ldr		r1, _080b756c
	add		r2, r4, #0x0
	mov		r3, #0x6
	bl		sub_08000268
_080b754a:
	add		r0, r4, #0x0
	bl		sub_080b7588
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080b755e
	add		r0, r4, #0x0
	bl		sub_080b74c8
_080b755e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080b7564:	.4byte 0x080e3244
_080b7568:	.4byte 0x080dfdc4
_080b756c:	.4byte 0x00000297
	thumb_func_end sub_080b752c

	thumb_func_start sub_080b7570
sub_080b7570:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _080b7584
	mov		r1, #0xa7
	lsl		r1, r1, #0x2
	mov		r3, #0xa
	bl		sub_08000268
	pop		{ r0 }
	bx		r0

_080b7584:	.4byte 0x080dfdc4
	thumb_func_end sub_080b7570

	thumb_func_start sub_080b7588
sub_080b7588:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r1, r4, #0x0
	add		r1, #0x10
	ldr		r0, [r4, #0x1c]
	cmp		r0, #0x0
	beq		_080b75a8
	ldr		r0, [r1, #0x10]
	add		r1, r4, #0x0
	bl		sub_080b7170
	add		r0, r4, #0x0
	bl		sub_080b5dc4
	mov		r0, #0x0
	str		r0, [r4, #0x1c]
_080b75a8:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB75AE, 0x2
	thumb_func_end sub_080b7588

	thumb_func_start sub_080b75b0
sub_080b75b0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x10
	ldr		r1, [r4, #0x28]
	cmp		r1, #0x0
	bne		_080b75c4
	add		r0, r4, #0x0
	bl		sub_080b7208
	b		_080b75f0
_080b75c4:
	ldr		r0, [r0, #0x10]
	ldr		r0, [r0, #0x38]
	cmp		r4, r0
	bne		_080b75da
	add		r0, r4, #0x0
	bl		sub_08000260
	add		r0, r4, #0x0
	bl		sub_080b72f8
	b		_080b75f0
_080b75da:
	cmp		r1, #0x0
	ble		_080b75e4
	neg		r0, r1
	str		r0, [r4, #0x28]
	b		_080b75f0
_080b75e4:
	ldr		r0, _080b75f8
	ldr		r1, _080b75fc
	add		r2, r4, #0x0
	mov		r3, #0x5
	bl		sub_08000268
_080b75f0:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB75F6, 0x2

_080b75f8:	.4byte 0x080dfdc4
_080b75fc:	.4byte 0x000002B1
	thumb_func_end sub_080b75b0

	thumb_func_start sub_080b7600
sub_080b7600:
	push	{ r4, r5, lr }
	sub		sp, #0x28
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x10
	mov		r0, #0x0
	str		r0, [r4, #0x14]
	str		r1, [r4, #0x18]
	add		r0, r4, #0x0
	bl		sub_08000260
	add		r0, r4, #0x0
	bl		sub_080b7290
	mov		r0, sp
	bl		sub_080b709c
	cmp		r0, #0x0
	bne		_080b763e
	mov		r2, #0x10
	neg		r2, r2
	add		r0, r4, #0x0
	mov		r1, sp
	bl		sub_080b71f0
	ldr		r0, [r4, #0x28]
	sub		r0, #0x1
	str		r0, [r4, #0x28]
	ldr		r0, [r5, #0x10]
	bl		sub_080b7228
_080b763e:
	add		r0, r4, #0x0
	bl		sub_08000264
	ldr		r0, [r4, #0x14]
	add		sp, #0x28
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB764E, 0x2
	thumb_func_end sub_080b7600

	thumb_func_start sub_080b7650
sub_080b7650:
	push	{ r4, lr }
	sub		sp, #0x28
	add		r4, r0, #0x0
	bl		sub_08000260
	add		r0, r4, #0x0
	bl		sub_080b7290
	mov		r0, sp
	bl		sub_080b709c
	cmp		r0, #0x0
	bne		_080b7680
	add		r0, r4, #0x0
	mov		r1, sp
	mov		r2, #0x0
	bl		sub_080b71f0
	ldr		r0, [r4, #0x28]
	sub		r0, #0x1
	str		r0, [r4, #0x28]
	ldr		r0, [r4, #0x20]
	bl		sub_080b7228
_080b7680:
	add		r0, r4, #0x0
	bl		sub_08000264
	add		sp, #0x28
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB768E, 0x2
	thumb_func_end sub_080b7650

	thumb_func_start sub_080b7690
sub_080b7690:
	push	{ r4, r5, lr }
	sub		sp, #0x28
	add		r5, r0, #0x0
	bl		sub_08000260
	add		r0, r5, #0x0
	bl		sub_080b7290
	mov		r0, sp
	bl		sub_080b709c
	cmp		r0, #0x0
	bne		_080b76c6
	add		r4, r5, #0x0
	add		r4, #0x10
	ldr		r0, [r4, #0x10]
	ldr		r2, [r0, #0x34]
	add		r0, r5, #0x0
	mov		r1, sp
	bl		sub_080b71f0
	ldr		r0, [r5, #0x28]
	sub		r0, #0x1
	str		r0, [r5, #0x28]
	ldr		r0, [r4, #0x10]
	bl		sub_080b7228
_080b76c6:
	add		r0, r5, #0x0
	bl		sub_08000264
	add		sp, #0x28
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b7690

	thumb_func_start sub_080b76d4
sub_080b76d4:
	push	{ r4, lr }
	sub		sp, #0x28
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0x10
	ldr		r0, [r4, #0x28]
	cmp		r0, #0x0
	bne		_080b7716
	ldr		r1, [r4, #0x24]
	cmp		r1, #0x0
	blt		_080b7716
	ldr		r2, [r2, #0x10]
	ldr		r0, [r2, #0x34]
	cmp		r1, r0
	beq		_080b7716
	ldr		r3, _080b7720
	add		r0, r2, #0x0
	add		r1, r4, #0x0
	mov		r2, sp
	bl		sub_080b73b8
	mov		r0, sp
	bl		sub_080b709c
	cmp		r0, #0x0
	bne		_080b7716
	ldr		r0, [r4, #0x30]
	ldr		r1, [r0, #0x24]
	str		r1, [r4, #0x30]
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_080b70b0
_080b7716:
	add		sp, #0x28
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB771E, 0x2

_080b7720:	.4byte 0x080b79b9
	thumb_func_end sub_080b76d4

	thumb_func_start sub_080b7724
sub_080b7724:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x28
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r4, #0x0
	add		r5, #0x10
	ldr		r0, [r4, #0x28]
	cmp		r0, #0x0
	blt		_080b776c
	str		r3, [r4, #0x10]
	str		r2, [r4, #0x14]
	ldr		r0, [r5, #0x10]
	ldr		r0, [r0, #0x38]
	cmp		r4, r0
	bne		_080b774c
	mov		r1, #0x4
	neg		r1, r1
	add		r0, r6, #0x0
	bl		sub_080b70b0
_080b774c:
	ldr		r0, [r5, #0x10]
	ldr		r3, _080b7774
	add		r1, r4, #0x0
	mov		r2, sp
	bl		sub_080b73b8
	mov		r0, sp
	bl		sub_080b709c
	cmp		r0, #0x0
	bne		_080b776c
	mov		r1, #0x5
	neg		r1, r1
	add		r0, r6, #0x0
	bl		sub_080b70b0
_080b776c:
	add		sp, #0x28
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080b7774:	.4byte 0x080b79a5
	thumb_func_end sub_080b7724

	thumb_func_start sub_080b7778
sub_080b7778:
	push	{ r4, r5, lr }
	sub		sp, #0x28
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r3, r4, #0x0
	add		r3, #0x10
	ldr		r0, [r4, #0x28]
	cmp		r0, #0x0
	blt		_080b77b8
	ldr		r1, [r3, #0x10]
	ldr		r0, [r1, #0x38]
	cmp		r4, r0
	beq		_080b77b8
	str		r2, [r4, #0x10]
	str		r5, [r4, #0x14]
	ldr		r3, _080b77c0
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	mov		r2, sp
	bl		sub_080b73b8
	mov		r0, sp
	bl		sub_080b709c
	cmp		r0, #0x0
	bne		_080b77b8
	ldr		r2, _080b77c4
	ldr		r3, [r4, #0x34]
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080b70c4
_080b77b8:
	add		sp, #0x28
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080b77c0:	.4byte 0x080B79A5
_080b77c4:	.4byte 0x080b7381
	thumb_func_end sub_080b7778

	thumb_func_start sub_080b77c8
sub_080b77c8:
	push	{ lr }
	ldr		r2, [r0, #0x28]
	cmp		r2, #0x0
	bge		_080b77d6
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	b		_080b77ea
_080b77d6:
	ldr		r0, [r0, #0x24]
	cmp		r0, #0x0
	bge		_080b77e2
	mov		r0, #0x80
	lsl		r0, r0, #0x17
	b		_080b77ea
_080b77e2:
	mov		r0, #0x1
	cmp		r2, #0x0
	beq		_080b77ea
	mov		r0, #0x2
_080b77ea:
	and		r0, r1
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b77c8

	thumb_func_start sub_080b77f0
sub_080b77f0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r2, #0x0
	mov		r1, #0x1
	neg		r1, r1
	bl		sub_080b77c8
	add		r1, r0, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x17
	and		r0, r1
	cmp		r0, #0x0
	beq		_080b7814
	mov		r0, #0x0
	str		r0, [r4, #0x24]
	str		r5, [r4, #0x10]
	str		r6, [r4, #0x14]
_080b7814:
	add		r0, r1, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b77f0

	thumb_func_start sub_080b781c
sub_080b781c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	add		r7, r4, #0x0
	add		r7, #0x10
	ldr		r0, [r4, #0x1c]
	cmp		r0, #0x0
	beq		_080b783a
	ldr		r0, _080b7884
	ldr		r1, _080b7888
	add		r2, r4, #0x0
	mov		r3, #0x7
	bl		sub_08000268
_080b783a:
	ldr		r1, [r5, #0xc]
	ldr		r0, [r7, #0x10]
	cmp		r1, r0
	beq		_080b7850
	ldr		r0, _080b7884
	mov		r1, #0xc3
	lsl		r1, r1, #0x2
	add		r2, r4, #0x0
	mov		r3, #0x8
	bl		sub_08000268
_080b7850:
	cmp		r6, #0x0
	beq		_080b7868
	ldr		r1, [r5, #0xc]
	ldr		r0, [r6, #0x20]
	cmp		r1, r0
	beq		_080b7868
	ldr		r0, _080b7884
	ldr		r1, _080b788c
	add		r2, r4, #0x0
	mov		r3, #0x8
	bl		sub_08000268
_080b7868:
	str		r5, [r4, #0x1c]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_080b5dfc
	ldr		r0, [r5, #0xc]
	add		r1, r4, #0x0
	bl		sub_080b71b0
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB7882, 0x2

_080b7884:	.4byte 0x080dfdc4
_080b7888:	.4byte 0x0000030B
_080b788c:	.4byte 0x0000030D
	thumb_func_end sub_080b781c

	thumb_func_start sub_080b7890
sub_080b7890:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0xc]
	add		r1, r5, #0x0
	bl		sub_080b7140
	add		r6, r0, #0x0
	ldr		r4, [r5, #0x4]
	cmp		r4, #0x0
	beq		_080b78c0
_080b78a4:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_080b7164
	ldr		r0, [r5, #0xc]
	ldr		r0, [r0, #0x38]
	cmp		r4, r0
	beq		_080b78ba
	add		r0, r4, #0x0
	bl		sub_080b76d4
_080b78ba:
	ldr		r4, [r6, #0x8]
	cmp		r4, #0x0
	bne		_080b78a4
_080b78c0:
	ldr		r0, [r5, #0xc]
	bl		sub_080b7154
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b7890

	thumb_func_start sub_080b78cc
sub_080b78cc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0xc]
	add		r1, r5, #0x0
	bl		sub_080b7140
	add		r6, r0, #0x0
	ldr		r4, [r5, #0x4]
	cmp		r4, #0x0
	beq		_080b78fc
_080b78e0:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_080b7164
	ldr		r0, [r5, #0xc]
	ldr		r0, [r0, #0x38]
	cmp		r4, r0
	beq		_080b78f6
	add		r0, r4, #0x0
	bl		sub_080b75b0
_080b78f6:
	ldr		r4, [r6, #0x8]
	cmp		r4, #0x0
	bne		_080b78e0
_080b78fc:
	ldr		r0, [r5, #0xc]
	bl		sub_080b7154
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b78cc

	thumb_func_start sub_080b7908
sub_080b7908:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r8, r1
	add		r7, r2, #0x0
	ldr		r0, [r5, #0xc]
	add		r1, r5, #0x0
	bl		sub_080b7140
	add		r6, r0, #0x0
	ldr		r4, [r5, #0x4]
	cmp		r4, #0x0
	beq		_080b7946
_080b7924:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_080b7164
	ldr		r0, [r5, #0xc]
	ldr		r0, [r0, #0x38]
	cmp		r4, r0
	beq		_080b7940
	ldr		r1, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r2, r8
	add		r3, r7, #0x0
	bl		sub_080b7724
_080b7940:
	ldr		r4, [r6, #0x8]
	cmp		r4, #0x0
	bne		_080b7924
_080b7946:
	ldr		r0, [r5, #0xc]
	bl		sub_080b7154
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB7956, 0x4E
	push	{ lr }
	ldr		r1, [r0, #0x28]
	sub		r1, #0x1
	str		r1, [r0, #0x28]
	ldr		r0, [r0, #0x20]
	bl		sub_080b7228
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB79B6, 0x2
	push	{ lr }
	ldr		r2, [r0, #0x30]
	ldr		r1, [r2, #0x24]
	str		r1, [r0, #0x30]
	mov		r1, #0x2
	neg		r1, r1
	add		r0, r2, #0x0
	bl		sub_080b70b0
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB79CE, 0x36
	thumb_func_end sub_080b7908

	thumb_func_start sub_080b7a04
sub_080b7a04:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	sub		r4, r1, #0x1
	cmp		r4, #0x0
	blt		_080b7a1a
_080b7a0e:
	add		r0, r5, #0x0
	bl		sub_080b7690
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080b7a0e
_080b7a1a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b7a04

	thumb_func_start sub_080b7a20
sub_080b7a20:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	sub		r4, r1, #0x1
	cmp		r4, #0x0
	blt		_080b7a36
_080b7a2a:
	add		r0, r5, #0x0
	bl		sub_080b7650
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080b7a2a
_080b7a36:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b7a20

	thumb_func_start sub_080b7a3c
sub_080b7a3c:
	push	{ r4, lr }
	add		r4, r0, #0x0
_080b7a40:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080b7600
	b		_080b7a40

.incbin "base.gba", 0xB7A4A, 0x3A
	thumb_func_end sub_080b7a3c

	thumb_func_start sub_080b7a84
sub_080b7a84:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080b5dc4
	mov		r0, #0x0
	str		r0, [r4, #0x1c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB7A96, 0x32
	thumb_func_end sub_080b7a84

	thumb_func_start sub_080b7ac8
sub_080b7ac8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r3, r2, #0x0
	str		r1, [r4, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x10
	str		r2, [r4, #0x4]
	ldrh	r0, [r1, #0x4]
	lsl		r0, r0, #0x3
	add		r2, r2, r0
	str		r2, [r4, #0x8]
	ldrh	r0, [r1, #0x6]
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	str		r2, [r4, #0xc]
	ldrh	r0, [r1, #0x8]
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	cmp		r3, #0x0
	beq		_080b7af2
	str		r3, [r4, #0xc]
_080b7af2:
	mov		r5, #0x0
	b		_080b7b0a
_080b7af6:
	ldr		r1, [r4, #0xc]
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	add		r0, r2, #0x0
	mov		r1, #0x0
	bl		sub_080bdb08
	add		r2, r0, #0x1
	add		r5, #0x1
_080b7b0a:
	ldr		r0, [r4, #0x0]
	ldrh	r0, [r0, #0x8]
	cmp		r5, r0
	blt		_080b7af6
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b7ac8

	thumb_func_start sub_080b7b18
sub_080b7b18:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x80
	mov		r9, r0
	mov		r10, r2
	add		r6, r1, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x5c
	bne		_080b7b3c
	mov		r0, #0x1
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x5c
	bne		_080b7b3c
	add		r1, r6, #0x2
_080b7b3c:
	add		r0, r1, #0x0
	mov		r1, #0x5c
	bl		sub_080b6764
	add		r5, r0, #0x0
	mov		r0, r9
	ldr		r7, [r0, #0x8]
	cmp		r5, #0x0
	beq		_080b7bac
_080b7b4e:
	sub		r4, r5, r6
	add		r5, #0x1
	mov		r0, sp
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_080bdd08
	add		r0, r0, r4
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r4, r7, #0x6
	mov		r2, #0x0
	mov		r8, r2
	b		_080b7b70
_080b7b6a:
	mov		r3, #0x1
	add		r8, r3
	add		r4, #0x2
_080b7b70:
	ldrh	r0, [r7, #0x2]
	cmp		r8, r0
	bge		_080b7c1a
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x1
	add		r6, r7, r0
	ldrh	r0, [r6, #0x0]
	mov		r2, r9
	ldr		r1, [r2, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	bl		sub_080bdb94
	cmp		r0, #0x0
	bne		_080b7b6a
	add		r7, r6, #0x0
	add		r6, r5, #0x0
	ldr		r0, _080b7c0c
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	add		r0, r6, #0x0
	bl		sub_080b6764
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_080b7b4e
_080b7bac:
	ldrh	r0, [r7, #0x2]
	lsl		r0, r0, #0x1
	add		r0, #0x6
	add		r4, r7, r0
	mov		r5, #0x0
	ldrh	r3, [r7, #0x4]
	cmp		r5, r3
	bge		_080b7c1a
_080b7bbc:
	ldrh	r0, [r4, #0x0]
	mov		r2, r9
	ldr		r1, [r2, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r0, sp
	bl		sub_080bdbf0
	ldrb	r1, [r4, #0x2]
	mov		r3, r9
	ldr		r2, [r3, #0xc]
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	bl		sub_080bdac0
	ldrh	r1, [r4, #0x2]
	lsr		r1, r1, #0x8
	mov		r3, r9
	ldr		r2, [r3, #0xc]
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	bl		sub_080bdac0
	mov		r0, sp
	add		r1, r6, #0x0
	bl		sub_080bdb94
	cmp		r0, #0x0
	bne		_080b7c10
	mov		r0, #0x1
	neg		r0, r0
	add		r10, r0
	cmp		r10, r0
	bne		_080b7c10
	ldrh	r0, [r4, #0x4]
	b		_080b7c1e

.incbin "base.gba", 0xB7C0A, 0x2

_080b7c0c:	.4byte 0x0200EB48

_080b7c10:
	add		r5, #0x1
	add		r4, #0x6
	ldrh	r2, [r7, #0x4]
	cmp		r5, r2
	blt		_080b7bbc
_080b7c1a:
	mov		r0, #0x1
	neg		r0, r0
_080b7c1e:
	add		sp, #0x80
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB7C2E, 0x2
	thumb_func_end sub_080b7b18

	thumb_func_start sub_080b7c30
sub_080b7c30:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r8, r1
	add		r6, r2, #0x0
	mov		r0, #0x0
	str		r0, [r5, #0x24]
	str		r0, [r5, #0x4]
	str		r0, [r5, #0x8]
	str		r0, [r5, #0x0]
	add		r7, r5, #0x0
	add		r7, #0xc
	str		r0, [r5, #0x10]
	str		r0, [r5, #0x14]
	str		r0, [r5, #0xc]
	str		r0, [r5, #0x1c]
	str		r0, [r5, #0x20]
	str		r0, [r5, #0x18]
	cmp		r6, #0x0
	ble		_080b7c8c
	ldr		r1, [r5, #0x2c]
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	add		r0, r5, r0
	ldr		r1, [r1, #0xc]
	bl		sub_080bbc74
	ldr		r0, [r5, #0x1c]
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r4, r1, #0x0
	add		r4, #0x10
	mov		r0, r8
	str		r0, [r4, #0x10]
	str		r6, [r1, #0x24]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
_080b7c8c:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB7C96, 0x22
	thumb_func_end sub_080b7c30

	thumb_func_start sub_080b7cb8
sub_080b7cb8:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r3, #0x0
	ldr		r0, [r6, #0x24]
	add		r0, r0, r2
	str		r0, [r6, #0x24]
	add		r4, r5, #0x0
	add		r4, #0x10
	ldr		r0, [r4, #0x10]
	str		r0, [r7, #0x10]
	add		r0, r0, r2
	str		r0, [r4, #0x10]
	str		r2, [r7, #0x14]
	ldr		r0, [r5, #0x24]
	sub		r0, r0, r2
	str		r0, [r5, #0x24]
	add		r0, r6, #0x0
	add		r0, #0xc
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080b5e54
	ldr		r0, [r5, #0x24]
	cmp		r0, #0x0
	bne		_080b7d06
	add		r0, r4, #0x0
	bl		sub_080b5dc4
	add		r4, r6, #0x0
	add		r4, #0x18
	add		r0, r5, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
_080b7d06:
	add		r0, r7, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB7D0E, 0x2
	thumb_func_end sub_080b7cb8

	thumb_func_start sub_080b7d10
sub_080b7d10:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r9, r0
	mov		r10, r1
	str		r2, [sp, #0x4]
	mov		r0, #0x0
	mov		r8, r0
	mov		r1, r9
	ldr		r6, [r1, #0x4]
	cmp		r6, #0x0
	beq		_080b7d44
_080b7d2e:
	ldr		r2, [r6, #0x24]
	cmp		r2, r8
	ble		_080b7d3e
	cmp		r2, r10
	blt		_080b7d3a
	b		_080b7e84
_080b7d3a:
	add		r7, r6, #0x0
	mov		r8, r2
_080b7d3e:
	ldr		r6, [r6, #0x8]
	cmp		r6, #0x0
	bne		_080b7d2e
_080b7d44:
	mov		r3, r8
	cmp		r3, #0x0
	bne		_080b7d4c
	b		_080b7e80
_080b7d4c:
	mov		r0, r10
	mov		r1, r8
	sub		r0, r0, r1
	mov		r8, r0
	ldr		r5, [r7, #0x14]
	ldr		r1, [r7, #0x18]
	cmp		r5, #0x0
	beq		_080b7d7a
	cmp		r1, #0x0
	beq		_080b7d80
	ldr		r2, [r5, #0x14]
	cmp		r2, r8
	blt		_080b7d72
	ldr		r0, [r1, #0x14]
	cmp		r0, r8
	blt		_080b7d72
	cmp		r2, r0
	ble		_080b7d80
	b		_080b7d7e
_080b7d72:
	ldr		r0, [r1, #0x14]
	cmp		r2, r0
	bge		_080b7d80
	b		_080b7d7e
_080b7d7a:
	cmp		r1, #0x0
	beq		_080b7d80
_080b7d7e:
	add		r5, r1, #0x0
_080b7d80:
	mov		r3, r9
	ldr		r6, [r3, #0x4]
	cmp		r6, #0x0
	beq		_080b7dd4
_080b7d88:
	cmp		r6, r7
	beq		_080b7dce
	add		r2, r6, #0x0
	add		r2, #0x10
	ldr		r0, [r6, #0x24]
	ldr		r4, [r5, #0x14]
	cmp		r0, r4
	blt		_080b7dce
	mov		r0, r9
	ldr		r1, [r0, #0x2c]
	mov		r3, #0x10
	ldrsh	r0, [r1, r3]
	add		r0, r9
	ldr		r2, [r2, #0x10]
	ldr		r3, [r5, #0x10]
	str		r4, [sp, #0x0]
	ldr		r4, [r1, #0x14]
	add		r1, r5, #0x0
	bl		sub_080bbc80
	mov		r0, r9
	add		r1, r5, #0x0
	bl		sub_080b7ea8
	ldr		r2, [r5, #0x14]
	mov		r0, r9
	add		r1, r6, #0x0
	add		r3, r5, #0x0
	bl		sub_080b7cb8
	ldr		r0, [r7, #0x24]
	mov		r8, r0
	cmp		r8, r10
	blt		_080b7d4c
	b		_080b7e8a
_080b7dce:
	ldr		r6, [r6, #0x8]
	cmp		r6, #0x0
	bne		_080b7d88
_080b7dd4:
	ldr		r6, [r7, #0x4]
	ldr		r3, [r7, #0x8]
	cmp		r6, #0x0
	beq		_080b7e08
	cmp		r3, #0x0
	beq		_080b7e10
	add		r0, r6, #0x0
	add		r0, #0x10
	ldr		r2, [r6, #0x24]
	cmp		r2, r8
	blt		_080b7e00
	ldr		r1, [r7, #0x20]
	ldr		r0, [r0, #0x10]
	sub		r0, r1, r0
	sub		r2, r0, r2
	ldr		r0, [r3, #0x20]
	sub		r0, r0, r1
	ldr		r1, [r7, #0x24]
	sub		r0, r0, r1
	cmp		r2, r0
	ble		_080b7e10
	b		_080b7e0c
_080b7e00:
	ldr		r0, [r3, #0x24]
	cmp		r2, r0
	bge		_080b7e10
	b		_080b7e0c
_080b7e08:
	cmp		r3, #0x0
	beq		_080b7e10
_080b7e0c:
	add		r6, r7, #0x0
	add		r7, r3, #0x0
_080b7e10:
	ldr		r5, [r6, #0x18]
_080b7e12:
	mov		r1, r9
	ldr		r4, [r1, #0x2c]
	mov		r3, #0x10
	ldrsh	r0, [r4, r3]
	add		r0, r9
	mov		r1, #0x10
	add		r1, r1, r6
	mov		r8, r1
	ldr		r2, [r1, #0x10]
	ldr		r3, [r5, #0x10]
	ldr		r1, [r5, #0x14]
	str		r1, [sp, #0x0]
	ldr		r4, [r4, #0x14]
	add		r1, r5, #0x0
	bl		sub_080bbc80
	mov		r3, r8
	ldr		r0, [r3, #0x10]
	str		r0, [r5, #0x10]
	ldr		r1, [r3, #0x10]
	ldr		r0, [r5, #0x14]
	add		r1, r1, r0
	str		r1, [r3, #0x10]
	ldr		r5, [r5, #0x8]
	add		r0, r7, #0x0
	add		r0, #0x10
	cmp		r5, r0
	bne		_080b7e12
	str		r1, [r5, #0x10]
	ldr		r0, [r7, #0x24]
	ldr		r1, [r6, #0x24]
	add		r0, r0, r1
	str		r0, [r7, #0x24]
	mov		r0, r8
	bl		sub_080b5dc4
	mov		r4, r9
	add		r4, #0x18
	add		r0, r6, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	ldr		r0, [r7, #0x24]
	mov		r8, r0
	cmp		r8, r10
	bge		_080b7e8a
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	ble		_080b7e80
	b		_080b7d4c
_080b7e80:
	mov		r0, #0x0
	b		_080b7e96
_080b7e84:
	mov		r0, r9
	add		r1, r6, #0x0
	b		_080b7e8e
_080b7e8a:
	mov		r0, r9
	add		r1, r7, #0x0
_080b7e8e:
	mov		r2, r10
	ldr		r3, [sp, #0x4]
	bl		sub_080b7cb8
_080b7e96:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xB7EA6, 0x2
	thumb_func_end sub_080b7d10

	thumb_func_start sub_080b7ea8
sub_080b7ea8:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, [r6, #0x18]
	cmp		r0, #0x0
	bne		_080b7ec2
	ldr		r1, [r6, #0x2c]
	mov		r2, #0x8
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0xc]
	bl		sub_080bbc74
_080b7ec2:
	ldr		r0, [r6, #0x1c]
	bl		sub_080b5dc4
	add		r5, r0, #0x0
	ldr		r2, [r6, #0x4]
	b		_080b7ed0
_080b7ece:
	ldr		r2, [r2, #0x8]
_080b7ed0:
	cmp		r2, #0x0
	bne		_080b7ee0
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	b		_080b7ef0
_080b7ee0:
	ldr		r1, [r2, #0x20]
	ldr		r0, [r4, #0x10]
	cmp		r1, r0
	ble		_080b7ece
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080b5e54
_080b7ef0:
	ldr		r0, [r6, #0x24]
	ldr		r1, [r4, #0x14]
	sub		r0, r0, r1
	str		r0, [r6, #0x24]
	add		r7, r5, #0x0
	add		r7, #0x10
	ldr		r0, [r4, #0x10]
	str		r0, [r7, #0x10]
	ldr		r0, [r4, #0x14]
	str		r0, [r5, #0x24]
	add		r0, r6, #0x0
	add		r0, #0xc
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080b5e54
	add		r0, r4, #0x0
	bl		sub_080b5dc4
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	beq		_080b7f48
	add		r1, r2, #0x0
	add		r1, #0x10
	ldr		r0, [r5, #0x14]
	cmp		r1, r0
	bne		_080b7f48
	ldr		r0, [r2, #0x24]
	ldr		r1, [r5, #0x24]
	add		r0, r0, r1
	str		r0, [r2, #0x24]
	add		r0, r7, #0x0
	bl		sub_080b5dc4
	add		r4, r6, #0x0
	add		r4, #0x18
	add		r0, r5, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
_080b7f48:
	ldr		r2, [r5, #0x8]
	cmp		r2, #0x0
	beq		_080b7f7e
	add		r1, r2, #0x0
	add		r1, #0x10
	ldr		r0, [r5, #0x18]
	cmp		r1, r0
	bne		_080b7f7e
	ldr		r0, [r7, #0x10]
	str		r0, [r1, #0x10]
	ldr		r0, [r2, #0x24]
	ldr		r1, [r5, #0x24]
	add		r0, r0, r1
	str		r0, [r2, #0x24]
	add		r0, r7, #0x0
	bl		sub_080b5dc4
	add		r4, r6, #0x0
	add		r4, #0x18
	add		r0, r5, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
_080b7f7e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB7F84, 0xC
	thumb_func_end sub_080b7ea8

	thumb_func_start sub_080b7f90
sub_080b7f90:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r4, _080b80cc
	add		sp, r4
	mov		r8, r0
	mov		r1, sp
	ldr		r0, _080b80d0
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	add		r1, sp, #0x18
	ldr		r0, _080b80d4
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3 }
	stmia	r1!, {  r2, r3 }
	add		r1, sp, #0x2c
	ldr		r0, _080b80d8
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r4 }
	stmia	r1!, {  r2, r4 }
	add		r1, sp, #0x40
	ldr		r0, _080b80dc
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r3, sp
	add		r3, #0x5c
	ldr		r4, _080b80e0
	add		r4, sp
	str		r3, [r4, #0x0]
	add		r1, r3, #0x0
	ldr		r0, _080b80e4
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, #0xbf
	lsl		r1, r1, #0x3
	add		r1, sp
	mov		r0, #0x19
	neg		r0, r0
	str		r0, [r1, #0x0]
	add		r6, sp, #0x78
	add		r4, r6, #0x0
	mov		r5, #0xf
_080b8000:
	add		r0, r4, #0x0
	bl		sub_080c3cc4
	add		r4, #0x28
	sub		r5, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r5, r0
	bne		_080b8000
	add		r4, sp, #0x2f8
	mov		r5, #0xf
_080b8016:
	add		r0, r4, #0x0
	bl		sub_080c3cec
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	str		r0, [r4, #0x0]
	add		r4, #0x18
	sub		r5, #0x1
	sub		r0, #0x1
	cmp		r5, r0
	bne		_080b8016
	mov		r4, #0x8f
	lsl		r4, r4, #0x3
	add		r4, sp
	mov		r5, #0xf
_080b8036:
	add		r0, r4, #0x0
	bl		sub_080c3cec
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
	str		r0, [r4, #0x0]
	add		r4, #0x18
	sub		r5, #0x1
	sub		r0, #0x1
	cmp		r5, r0
	bne		_080b8036
	add		r5, r6, #0x0
	add		r6, sp, #0x2f8
	mov		r0, #0x8f
	lsl		r0, r0, #0x3
	add		r0, sp
	mov		r1, #0xc0
	lsl		r1, r1, #0x3
	add		r1, sp
	str		r0, [r1, #0x0]
	mov		r0, r8
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080b7c30
	mov		r4, #0xf
_080b806c:
	add		r1, r5, #0x0
	add		r5, #0x28
	mov		r0, r8
	add		r0, #0x18
	mov		r2, #0x0
	bl		sub_080b5dfc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080b806c
	mov		r4, #0x0
	mov		r7, #0x0
_080b8084:
	lsl		r0, r4, #0x2
	ldr		r2, _080b80e0
	add		r2, sp
	ldr		r2, [r2, #0x0]
	add		r1, r2, r0
	ldr		r0, [r1, #0x0]
	add		r4, #0x1
	mov		r10, r4
	mov		r3, #0xc
	add		r3, r8
	mov		r9, r3
	cmp		r0, #0x0
	ble		_080b80e8
	mov		r4, r8
	ldr		r5, [r4, #0x1c]
	add		r4, r5, #0x0
	add		r4, #0x10
	str		r7, [r4, #0x10]
	ldr		r0, [r1, #0x0]
	str		r0, [r5, #0x24]
	add		r7, r7, r0
	add		r0, r5, #0x0
	bl		sub_080b5dc4
	add		r1, r0, #0x0
	mov		r0, r8
	mov		r2, #0x0
	bl		sub_080b5dfc
	mov		r0, r9
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_080b5dfc
	b		_080b80fe

.incbin "base.gba", 0xB80CA, 0x2

_080b80cc:	.4byte 0xFFFFF9FC
_080b80d0:	.4byte 0x080dfde8
_080b80d4:	.4byte 0x080dfe00
_080b80d8:	.4byte 0x080dfe14
_080b80dc:	.4byte 0x080dfe28
_080b80e0:	.4byte 0x000005FC
_080b80e4:	.4byte 0x080dfe44

_080b80e8:
	str		r7, [r6, #0x10]
	ldr		r0, [r1, #0x0]
	neg		r0, r0
	str		r0, [r6, #0x14]
	add		r7, r7, r0
	add		r1, r6, #0x0
	add		r6, #0x18
	mov		r0, r9
	mov		r2, #0x0
	bl		sub_080b5dfc
_080b80fe:
	mov		r4, r10
	cmp		r4, #0x6
	bls		_080b8084
	mov		r4, #0x0
	mov		r0, #0xc0
	lsl		r0, r0, #0x3
	add		r0, sp
	ldr		r5, [r0, #0x0]
_080b810e:
	lsl		r0, r4, #0x2
	mov		r1, #0xbf
	lsl		r1, r1, #0x3
	add		r1, sp
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_080b812a
	neg		r1, r0
	mov		r0, r8
	add		r2, r5, #0x0
	bl		sub_080b7d10
	b		_080b8140
_080b812a:
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x3
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	add		r2, sp
	ldr		r2, [r2, #0x0]
	add		r1, r2, r1
	mov		r0, r8
	bl		sub_080b7ea8
_080b8140:
	add		r5, #0x18
	add		r4, #0x1
	cmp		r4, #0x0
	beq		_080b810e
	ldr		r3, _080b815c
	add		sp, r3
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB815A, 0x2

_080b815c:	.4byte 0x00000604
	thumb_func_end sub_080b7f90

	thumb_func_start sub_080b8160
sub_080b8160:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080b8170
	add		r0, r2, #0x0
	bl		sub_080b7ea8
_080b8170:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b8160

	thumb_func_start sub_080b8174
sub_080b8174:
	push	{ r4, r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	bl		sub_08091e68
	str		r0, [r7, #0x0]
	ldr		r0, [r7, #0x0]
	ldr		r1, _080b81b0
	cmp		r0, r1
	bne		_080b819c
	ldr		r0, _080b81b4
	ldrb	r1, [r0, #0x8]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x8]
_080b819c:
	ldr		r0, _080b81b4
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x17
	beq		_080b81b8
	ldr		r0, _080b81b4
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x1
	beq		_080b81b8
	b		_080b81ba

.incbin "base.gba", 0xB81AE, 0x2

_080b81b0:	.4byte 0x00008001
_080b81b4:	.4byte 0x0200CD70

_080b81b8:
	b		_080b81d2
_080b81ba:
	ldr		r0, _080b8218
	ldr		r1, _080b8218
	ldrb	r2, [r1, #0x5]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x5]
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
_080b81d2:
	ldr		r0, _080b8218
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	ldr		r0, _080b8218
	ldr		r1, _080b8218
	ldr		r2, _080b8218
	ldrb	r3, [r2, #0xd]
	mov		r4, #0x0
	and		r3, r4
	add		r4, r3, #0x0
	strb	r4, [r2, #0xd]
	ldrb	r2, [r1, #0x1]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x1]
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	ldr		r0, _080b8218
	ldrb	r1, [r0, #0x6]
	mov		r2, #0xff
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
	bl		sub_080bb160
	ldr		r1, [r7, #0x0]
	add		r0, r1, #0x0
	b		_080b821c

_080b8218:	.4byte 0x0200CD70

_080b821c:
	add		sp, #0x4
	pop		{ r4, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b8174

	thumb_func_start sub_080b8224
sub_080b8224:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	ldr		r1, _080b824c
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080b825c
	ldr		r0, _080b8250
	ldrb	r1, [r0, #0x2]
	lsl		r2, r1, #0x18
	lsr		r0, r2, #0x18
	cmp		r0, #0x1
	bne		_080b8254
	add		r0, r7, #0x0
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	b		_080b825a

_080b824c:	.4byte 0x0200CCD0
_080b8250:	.4byte 0x0200CD70

_080b8254:
	add		r0, r7, #0x0
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b825a:
	b		_080b8268
_080b825c:
	ldr		r0, _080b827c
	ldrb	r1, [r0, #0x3]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x3]
_080b8268:
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_08093804
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB827A, 0x2

_080b827c:	.4byte 0x0200CD70
	thumb_func_end sub_080b8224

	thumb_func_start sub_080b8280
sub_080b8280:
	push	{ r7, lr }
	sub		sp, #0xc
	mov		r7, sp
	str		r0, [r7, #0x0]
	str		r1, [r7, #0x4]
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_080b8294
	mov		r0, #0x4
	b		_080b82e4
_080b8294:
	add		r0, r7, #0x0
	add		r0, #0x8
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x8
	ldr		r1, _080b82d4
	ldr		r2, _080b82d8
	bl		sub_080bb5fc
	ldr		r0, _080b82d4
	ldrb	r1, [r0, #0x6]
	mov		r2, #0xff
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
	ldr		r0, _080b82d4
	ldr		r1, [r7, #0x0]
	str		r1, [r0, #0x40]
	ldr		r0, _080b82d4
	ldr		r1, [r7, #0x4]
	str		r1, [r0, #0x44]
	ldr		r1, _080b82dc
	add		r0, r1, #0x0
	bl		sub_08091bb4
	ldr		r1, _080b82e0
	add		r0, r1, #0x0
	bl		sub_08091bc0
	mov		r0, #0x0
	b		_080b82e4

_080b82d4:	.4byte 0x0200CD70
_080b82d8:	.4byte 0x01000024
_080b82dc:	.4byte sub_080ba210
_080b82e0:	.4byte sub_080b93b4

_080b82e4:
	add		sp, #0xc
	pop		{ r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b8280

	thumb_func_start sub_080b82ec
sub_080b82ec:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r0, r7, #0x0
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	ldr		r1, _080b8318
	ldr		r2, _080b831c
	bl		sub_080bb5fc
	ldr		r0, _080b8318
	ldrb	r1, [r0, #0x6]
	mov		r2, #0xff
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB8316, 0x2

_080b8318:	.4byte 0x0200CD70
_080b831c:	.4byte 0x01000020
	thumb_func_end sub_080b82ec

	thumb_func_start sub_080b8320
sub_080b8320:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	str		r0, [r7, #0x0]
	bl		sub_080b83c4
	ldr		r0, _080b83c0
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080b83c0
	ldrb	r1, [r0, #0x5]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x2
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x5]
	ldr		r0, _080b83c0
	ldr		r1, [r7, #0x0]
	str		r1, [r0, #0x3c]
	ldr		r0, _080b83c0
	ldr		r1, [r7, #0x0]
	ldrb	r2, [r0, #0x9]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x11]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x9]
	ldr		r0, _080b83c0
	ldr		r1, [r7, #0x0]
	ldrh	r2, [r0, #0x32]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x12]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x32]
	ldr		r0, _080b83c0
	ldr		r1, [r7, #0x0]
	ldrh	r2, [r0, #0x18]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x14]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x18]
	ldr		r0, [r7, #0x0]
	ldrb	r1, [r0, #0x10]
	cmp		r1, #0x0
	beq		_080b83b8
	ldr		r0, _080b83c0
	ldrb	r1, [r0, #0xb]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xb]
_080b83b8:
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

_080b83c0:	.4byte 0x0200CD70
	thumb_func_end sub_080b8320

	thumb_func_start sub_080b83c4
sub_080b83c4:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	ldr		r0, _080b8444
	ldr		r1, _080b8444
	ldrb	r2, [r1, #0x5]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x5]
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080b8444
	ldrb	r1, [r0, #0x6]
	mov		r2, #0xff
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
	ldr		r0, _080b8444
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	ldr		r0, _080b8444
	ldrb	r1, [r0, #0x10]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x10]
	ldr		r0, _080b8444
	ldrb	r1, [r0, #0xc]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xc]
	ldr		r0, _080b8444
	add		r1, r0, #0x0
	add		r0, #0x24
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	ldr		r0, _080b8444
	add		r1, r0, #0x0
	add		r0, #0x30
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b8438:
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080b8448
	b		_080b8490

.incbin "base.gba", 0xB8442, 0x2

_080b8444:	.4byte 0x0200CD70

_080b8448:
	ldr		r0, _080b848c
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x28
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
	ldr		r0, _080b848c
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x34
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
	add		r1, r7, #0x0
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b8438

_080b848c:	.4byte 0x0200CD70

_080b8490:
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080b83c4

	thumb_func_start sub_080b8498
sub_080b8498:
	push	{ r7, lr }
	mov		r7, sp
	ldr		r0, _080b84b8
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x15
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB84B6, 0x2

_080b84b8:	.4byte 0x0200CD70
	thumb_func_end sub_080b8498

	thumb_func_start sub_080b84bc
sub_080b84bc:
	push	{ r4, r7, lr }
	sub		sp, #0x14
	mov		r7, sp
	add		r4, r0, #0x0
	add		r0, r2, #0x0
	str		r3, [r7, #0x8]
	add		r2, r7, #0x0
	add		r3, r4, #0x0
	strb	r3, [r2, #0x0]
	add		r2, r7, #0x2
	strh	r1, [r2, #0x0]
	add		r1, r7, #0x4
	strh	r0, [r1, #0x0]
	ldr		r0, _080b84f0
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x0
	beq		_080b8518
	ldr		r0, _080b84f0
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x8
	bne		_080b84f4
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x1
	bne		_080b84f4
	b		_080b8518

_080b84f0:	.4byte 0x0200CD70

_080b84f4:
	ldr		r0, _080b8514
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0xf3
	mov		r1, #0x1
	bl		sub_080bab48
	mov		r0, #0x1
	b		_080b869c

_080b8514:	.4byte 0x0200CD70

_080b8518:
	bl		sub_08092f40
	lsl		r1, r0, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	bne		_080b8548
	ldr		r0, _080b8544
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x2
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0xf3
	mov		r1, #0x1
	bl		sub_080bab48
	mov		r0, #0x2
	b		_080b869c

_080b8544:	.4byte 0x0200CD70

_080b8548:
	ldr		r0, [r7, #0x8]
	str		r0, [r7, #0x10]
	add		r0, r7, #0x0
	add		r0, #0xc
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b8554:
	add		r0, r7, #0x0
	add		r0, #0xc
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0xf
	bls		_080b8560
	b		_080b858e
_080b8560:
	add		r1, r7, #0x0
	add		r1, #0x10
	ldr		r2, [r1, #0x0]
	ldrh	r0, [r2, #0x0]
	add		r2, #0x2
	str		r2, [r1, #0x0]
	ldr		r1, _080b8574
	cmp		r0, r1
	bne		_080b8578
	b		_080b858e

_080b8574:	.4byte 0x0000FFFF

_080b8578:
	add		r1, r7, #0x0
	add		r1, #0xc
	add		r0, r7, #0x0
	add		r0, #0xc
	add		r1, r7, #0x0
	add		r1, #0xc
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b8554
_080b858e:
	add		r0, r7, #0x0
	add		r0, #0xc
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x10
	bne		_080b85bc
	ldr		r0, _080b85b8
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x4
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0xf3
	mov		r1, #0x1
	bl		sub_080bab48
	mov		r0, #0x4
	b		_080b869c

_080b85b8:	.4byte 0x0200CD70

_080b85bc:
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x1
	bls		_080b85ec
	ldr		r0, _080b85e8
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	add		r0, r7, #0x0
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x2
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	b		_080b85f8

.incbin "base.gba", 0xB85E6, 0x2

_080b85e8:	.4byte 0x0200CD70

_080b85ec:
	ldr		r0, _080b8618
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
_080b85f8:
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080b861c
	ldr		r0, _080b8618
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x5
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	b		_080b864c

.incbin "base.gba", 0xB8616, 0x2

_080b8618:	.4byte 0x0200CD70

_080b861c:
	ldr		r0, _080b8698
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x9
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080b8698
	ldrb	r1, [r0, #0xb]
	cmp		r1, #0x0
	beq		_080b864c
	ldr		r0, _080b8698
	ldrb	r1, [r0, #0xb]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x2
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xb]
_080b864c:
	ldr		r0, _080b8698
	add		r1, r7, #0x0
	ldrb	r2, [r0, #0x6]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x6]
	ldr		r0, _080b8698
	add		r1, r7, #0x2
	ldrh	r2, [r0, #0x1a]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x1a]
	ldr		r0, _080b8698
	add		r1, r7, #0x4
	ldrh	r2, [r0, #0x26]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x26]
	ldr		r0, _080b8698
	ldr		r1, [r7, #0x8]
	str		r1, [r0, #0x20]
	mov		r0, #0x0
	b		_080b869c

_080b8698:	.4byte 0x0200CD70

_080b869c:
	add		sp, #0x14
	pop		{ r4, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b84bc

	thumb_func_start sub_080b86a4
sub_080b86a4:
	push	{ r7, lr }
	sub		sp, #0x8
	mov		r7, sp
	add		r2, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r7, #0x0
	strh	r2, [r1, #0x0]
	add		r1, r7, #0x2
	strh	r0, [r1, #0x0]
	ldr		r0, _080b86d0
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x0
	beq		_080b86f8
	ldr		r0, _080b86d0
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x8
	bls		_080b86d4
	ldr		r0, _080b86d0
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0xb
	bhi		_080b86d4
	b		_080b86f8

_080b86d0:	.4byte 0x0200CD70

_080b86d4:
	ldr		r0, _080b86f4
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0xf3
	mov		r1, #0x1
	bl		sub_080bab48
	mov		r0, #0x1
	b		_080b8878

_080b86f4:	.4byte 0x0200CD70

_080b86f8:
	bl		sub_08092f40
	lsl		r1, r0, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	bne		_080b8728
	ldr		r0, _080b8724
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x2
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0xf3
	mov		r1, #0x1
	bl		sub_080bab48
	mov		r0, #0x2
	b		_080b8878

_080b8724:	.4byte 0x0200CD70

_080b8728:
	add		r0, r7, #0x4
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b872e:
	add		r0, r7, #0x4
	ldr		r2, _080b8740
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x8]
	cmp		r0, r1
	bcc		_080b8744
	b		_080b8774

.incbin "base.gba", 0xB873E, 0x2

_080b8740:	.4byte 0x0200CCD0

_080b8744:
	ldr		r1, _080b8760
	ldr		r0, [r1, #0x0]
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x5
	add		r0, r0, r2
	add		r1, r7, #0x0
	ldrh	r0, [r0, #0x14]
	ldrh	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_080b8764
	b		_080b8774

.incbin "base.gba", 0xB875E, 0x2

_080b8760:	.4byte 0x0200CCD0

_080b8764:
	add		r1, r7, #0x4
	add		r0, r7, #0x4
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b872e
_080b8774:
	ldr		r1, _080b8790
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x8]
	cmp		r1, #0x0
	beq		_080b8794
	add		r0, r7, #0x4
	ldr		r2, _080b8790
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x8]
	cmp		r0, r1
	beq		_080b8794
	b		_080b87b8

.incbin "base.gba", 0xB878E, 0x2

_080b8790:	.4byte 0x0200CCD0

_080b8794:
	ldr		r0, _080b87b4
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x3
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0xf3
	mov		r1, #0x1
	bl		sub_080bab48
	mov		r0, #0x3
	b		_080b8878

_080b87b4:	.4byte 0x0200CD70

_080b87b8:
	ldr		r0, _080b87cc
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x0
	beq		_080b87d0
	ldr		r0, _080b87cc
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x9
	beq		_080b87d0
	b		_080b8800

.incbin "base.gba", 0xB87CA, 0x2

_080b87cc:	.4byte 0x0200CD70

_080b87d0:
	ldr		r0, _080b87fc
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0xc
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080b87fc
	ldrb	r1, [r0, #0x5]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0xd
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x5]
	b		_080b8828

.incbin "base.gba", 0xB87FA, 0x2

_080b87fc:	.4byte 0x0200CD70

_080b8800:
	ldr		r0, _080b8874
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0xb
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080b8874
	ldrb	r1, [r0, #0x5]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0xc
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x5]
_080b8828:
	ldr		r0, _080b8874
	add		r1, r7, #0x0
	ldrh	r2, [r0, #0x1e]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x1e]
	ldr		r0, _080b8874
	add		r1, r7, #0x2
	ldrh	r2, [r0, #0x1a]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x1a]
	ldr		r0, _080b8874
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x0
	beq		_080b8870
	ldr		r0, _080b8874
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x7
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
_080b8870:
	mov		r0, #0x0
	b		_080b8878

_080b8874:	.4byte 0x0200CD70

_080b8878:
	add		sp, #0x8
	pop		{ r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b86a4

	thumb_func_start sub_080b8880
sub_080b8880:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	ldr		r2, _080b88a8
	add		r1, r2, #0x0
	add		r2, #0x30
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r2, #0x0]
	add		r2, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	bne		_080b88ac
	b		_080b896e

.incbin "base.gba", 0xB88A6, 0x2

_080b88a8:	.4byte 0x0200CD70

_080b88ac:
	ldr		r0, _080b88e4
	ldr		r1, _080b88e4
	add		r2, r1, #0x0
	add		r1, #0x30
	add		r2, r7, #0x0
	ldrb	r3, [r2, #0x0]
	mvn		r2, r3
	ldrb	r1, [r1, #0x0]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r0, #0x0
	add		r0, #0x30
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b88da:
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080b88e8
	b		_080b8928

_080b88e4:	.4byte 0x0200CD70

_080b88e8:
	add		r1, r7, #0x0
	ldrb	r0, [r1, #0x0]
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080b8914
	ldr		r0, _080b8924
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x34
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
_080b8914:
	add		r1, r7, #0x1
	add		r0, r7, #0x1
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b88da

_080b8924:	.4byte 0x0200CD70

_080b8928:
	add		r0, r7, #0x1
	ldr		r2, _080b8978
	ldr		r1, [r2, #0x0]
	add		r2, r7, #0x0
	ldrb	r1, [r1, #0x3]
	ldrb	r2, [r2, #0x0]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080b894e
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080bab9c
_080b894e:
	ldr		r0, _080b897c
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x33
	bl		sub_080bab48
_080b896e:
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB8976, 0x2

_080b8978:	.4byte 0x0200CCD0
_080b897c:	.4byte 0x0200CD70
	thumb_func_end sub_080b8880

	thumb_func_start sub_080b8980
sub_080b8980:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, _080b89c0
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080b89c4
	bl		sub_080b83c4
	ldr		r0, _080b89c0
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x17
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	b		_080b8bc0

.incbin "base.gba", 0xB89BE, 0x2

_080b89c0:	.4byte 0x0200CD70

_080b89c4:
	ldr		r0, _080b89dc
	ldrb	r1, [r0, #0x4]
	sub		r0, r1, #0x5
	cmp		r0, #0xd
	bls		_080b89d0
	b		_080b8b88
_080b89d0:
	lsl		r1, r0, #0x2
	ldr		r2, _080b89e0
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	mov		pc, r1

.incbin "base.gba", 0xB89DA, 0x2

_080b89dc:	.4byte 0x0200CD70
_080b89e0:	.4byte 0x080b89e4
_080b89e4:	.4byte 0x080b8a1c

.incbin "base.gba", 0xB89E8, 0x34
	thumb_func_end sub_080b8980


.incbin "base.gba", 0xB8A1C, 0x16C

_080b8b88:

.incbin "base.gba", 0xB8B88, 0x20
_080b8ba8:	.4byte 0x0200CD70

_080b8bac:

.incbin "base.gba", 0xB8BAC, 0x14
_080b8bc0:

.incbin "base.gba", 0xB8BC0, 0x8
_080b8bc8:	.4byte 0x0200CD70
	thumb_func_start sub_080b8bcc
sub_080b8bcc:
	push	{ r4, r7, lr }
	sub		sp, #0x8
	mov		r7, sp
	add		r1, r7, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x7
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r1, r7, #0x0
	ldrh	r0, [r1, #0x0]
	add		r1, r7, #0x3
	add		r2, r7, #0x4
	add		r3, r7, #0x5
	bl		sub_080927b0
	add		r0, r7, #0x3
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080b8bf4
	b		_080b8d44
_080b8bf4:
	ldr		r0, _080b8c7c
	add		r1, r7, #0x3
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	ldr		r0, _080b8c7c
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x16]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x16]
	ldr		r0, _080b8c7c
	ldrb	r1, [r0, #0x9]
	cmp		r1, #0x0
	bne		_080b8c2a
	b		_080b8d28
_080b8c2a:
	ldr		r0, _080b8c7c
	ldrb	r1, [r0, #0xa]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xa]
	ldr		r0, _080b8c7c
	ldrb	r1, [r0, #0x6]
	cmp		r1, #0x0
	bne		_080b8c62
	add		r0, r7, #0x4
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080b8c62
	ldr		r0, _080b8c7c
	ldrb	r1, [r0, #0xa]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x4
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xa]
_080b8c62:
	ldr		r0, _080b8c7c
	ldrb	r1, [r0, #0xa]
	cmp		r1, #0x1
	bne		_080b8cfe
	add		r0, r7, #0x2
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b8c70:
	add		r0, r7, #0x2
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080b8c80
	b		_080b8cf4

.incbin "base.gba", 0xB8C7A, 0x2

_080b8c7c:	.4byte 0x0200CD70

_080b8c80:
	add		r1, r7, #0x3
	ldrb	r0, [r1, #0x0]
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080b8ce0
	ldr		r0, _080b8cf0
	ldr		r1, _080b8cf0
	add		r2, r1, #0x0
	add		r1, #0x30
	add		r2, r7, #0x2
	ldrb	r3, [r2, #0x0]
	mov		r4, #0x1
	add		r2, r4, #0x0
	lsl		r2, r3
	ldrb	r1, [r1, #0x0]
	orr		r1, r2
	add		r2, r0, #0x0
	add		r0, #0x30
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, _080b8cf0
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x34
	add		r0, r1, r2
	ldr		r1, _080b8cf0
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x32]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
_080b8ce0:
	add		r1, r7, #0x2
	add		r0, r7, #0x2
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b8c70

_080b8cf0:	.4byte 0x0200CD70

_080b8cf4:
	mov		r0, #0x31
	mov		r1, #0x1
	bl		sub_080bab48
	b		_080b8d22
_080b8cfe:
	ldr		r0, _080b8d24
	ldrb	r1, [r0, #0xa]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xa]
	add		r0, r7, #0x3
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080bab9c
	add		r0, r7, #0x7
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	mov		r0, #0x33
	mov		r1, #0x1
	bl		sub_080bab48
_080b8d22:
	b		_080b8d40

_080b8d24:	.4byte 0x0200CD70

_080b8d28:
	add		r0, r7, #0x3
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080bab9c
	add		r0, r7, #0x7
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	mov		r0, #0x30
	mov		r1, #0x2
	bl		sub_080bab48
_080b8d40:
	bl		sub_080bb160
_080b8d44:
	ldr		r1, _080b8d68
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x1
	beq		_080b8d50
	b		_080b8f56
_080b8d50:
	add		r0, r7, #0x5
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080b8e0a
	add		r0, r7, #0x2
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b8d5e:
	add		r0, r7, #0x2
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080b8d6c
	b		_080b8dc4

_080b8d68:	.4byte 0x0200CCD0

_080b8d6c:
	ldr		r1, _080b8dc0
	add		r0, r1, #0x0
	add		r1, #0x30
	ldrb	r0, [r1, #0x0]
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080b8dae
	add		r1, r7, #0x5
	ldrb	r0, [r1, #0x0]
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080b8dae
	ldr		r0, _080b8dc0
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x34
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
_080b8dae:
	add		r1, r7, #0x2
	add		r0, r7, #0x2
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b8d5e

.incbin "base.gba", 0xB8DBE, 0x2

_080b8dc0:	.4byte 0x0200CD70

_080b8dc4:
	ldr		r0, _080b8e30
	ldr		r1, _080b8e30
	add		r2, r1, #0x0
	add		r1, #0x30
	add		r2, r7, #0x5
	ldrb	r3, [r2, #0x0]
	mvn		r2, r3
	ldrb	r1, [r1, #0x0]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r0, #0x0
	add		r0, #0x30
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, _080b8e30
	add		r1, r7, #0x5
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0x32
	mov		r1, #0x1
	bl		sub_080bab48
_080b8e0a:
	ldr		r1, _080b8e30
	add		r0, r1, #0x0
	add		r1, #0x30
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080b8e18
	b		_080b8f3e
_080b8e18:
	add		r0, r7, #0x6
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x2
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b8e24:
	add		r0, r7, #0x2
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080b8e34
	b		_080b8f08

.incbin "base.gba", 0xB8E2E, 0x2

_080b8e30:	.4byte 0x0200CD70

_080b8e34:
	ldr		r1, _080b8f04
	add		r0, r1, #0x0
	add		r1, #0x30
	ldrb	r0, [r1, #0x0]
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080b8ef4
	ldr		r0, _080b8f04
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r0, #0x34
	add		r1, r0, r2
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080b8ef4
	ldr		r0, _080b8f04
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r0, #0x34
	add		r1, r0, r2
	ldr		r0, _080b8f04
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x34
	add		r0, r1, r2
	ldr		r1, _080b8f04
	add		r2, r7, #0x2
	ldrb	r3, [r2, #0x0]
	add		r2, r3, #0x0
	lsl		r3, r2, #0x1
	add		r1, #0x34
	add		r2, r1, r3
	ldrh	r3, [r2, #0x0]
	sub		r1, r3, #0x1
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r1, #0x0
	orr		r3, r2
	add		r2, r3, #0x0
	strh	r2, [r0, #0x0]
	add		r0, r1, #0x0
	mov		r1, #0x0
	bic		r0, r1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	bne		_080b8ef4
	ldr		r0, _080b8f04
	ldr		r1, _080b8f04
	add		r2, r1, #0x0
	add		r1, #0x30
	add		r2, r7, #0x2
	ldrb	r3, [r2, #0x0]
	mov		r4, #0x1
	add		r2, r4, #0x0
	lsl		r2, r3
	add		r3, r2, #0x0
	mvn		r2, r3
	ldrb	r1, [r1, #0x0]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r0, #0x0
	add		r0, #0x30
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x6
	add		r1, r7, #0x6
	add		r2, r7, #0x2
	ldrb	r3, [r2, #0x0]
	mov		r4, #0x1
	add		r2, r4, #0x0
	lsl		r2, r3
	ldrb	r1, [r1, #0x0]
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
_080b8ef4:
	add		r1, r7, #0x2
	add		r0, r7, #0x2
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b8e24

_080b8f04:	.4byte 0x0200CD70

_080b8f08:
	add		r0, r7, #0x6
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080b8f3e
	add		r0, r7, #0x6
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080bab9c
	add		r0, r7, #0x7
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r0, _080b8f60
	add		r1, r7, #0x6
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0x33
	mov		r1, #0x1
	bl		sub_080bab48
_080b8f3e:
	ldr		r1, _080b8f60
	add		r0, r1, #0x0
	add		r1, #0x30
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080b8f56
	ldr		r0, _080b8f60
	ldrb	r1, [r0, #0xa]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xa]
_080b8f56:
	add		r0, r7, #0x7
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	b		_080b8f64

.incbin "base.gba", 0xB8F5E, 0x2

_080b8f60:	.4byte 0x0200CD70

_080b8f64:
	add		sp, #0x8
	pop		{ r4, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080b8bcc

	thumb_func_start sub_080b8f6c
sub_080b8f6c:
	push	{ r7, lr }
	mov		r7, sp
	bl		sub_080926d0
	lsl		r1, r0, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	beq		_080b8f88
	mov		r0, #0xf1
	mov		r1, #0x0
	bl		sub_080bab48
	bl		sub_080bb160
_080b8f88:
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xB8F8E, 0x2
	thumb_func_end sub_080b8f6c

	thumb_func_start sub_080b8f90
sub_080b8f90:
	push	{ r4, r7, lr }
	sub		sp, #0x8
	mov		r7, sp
	str		r0, [r7, #0x0]
	ldr		r0, _080b8fb8
	ldr		r1, [r0, #0x40]
	cmp		r1, #0x0
	bne		_080b8fbc
	ldr		r0, _080b8fb8
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x0
	beq		_080b8fbc
	ldr		r0, _080b8fb8
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	b		_080b9230

.incbin "base.gba", 0xB8FB6, 0x2

_080b8fb8:	.4byte 0x0200CD70

_080b8fbc:
	ldr		r0, _080b8fcc
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x0
	beq		_080b8fca
	ldr		r0, [r7, #0x0]
	bl		sub_080b9238
_080b8fca:
	b		_080b8fd2

_080b8fcc:	.4byte 0x0200CD70

.incbin "base.gba", 0xB8FD0, 0x2

_080b8fd2:
	ldr		r0, _080b900c
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x0
	bne		_080b8fdc
	b		_080b91e6
_080b8fdc:
	bl		sub_08091cb8
	ldr		r0, _080b900c
	ldrb	r1, [r0, #0xe]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xe]
	ldr		r0, _080b900c
	ldrb	r1, [r0, #0x4]
	sub		r0, r1, #0x1
	cmp		r0, #0x16
	bls		_080b9000
	b		_080b91d4
_080b9000:
	lsl		r1, r0, #0x2
	ldr		r2, _080b9010
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	mov		pc, r1

.incbin "base.gba", 0xB900A, 0x2

_080b900c:	.4byte 0x0200CD70
_080b9010:	.4byte 0x080b9014
_080b9014:	.4byte 0x080b90b8

.incbin "base.gba", 0xB9018, 0x58
	thumb_func_end sub_080b8f90


.incbin "base.gba", 0xB9070, 0x48

_080b90b8:

.incbin "base.gba", 0xB90B8, 0xC2

_080b917a:

.incbin "base.gba", 0xB917A, 0x6
_080b9180:

.incbin "base.gba", 0xB9180, 0x54

_080b91d4:

.incbin "base.gba", 0xB91D4, 0x2
_080b91d6:

.incbin "base.gba", 0xB91D6, 0x10
_080b91e6:

.incbin "base.gba", 0xB91E6, 0x12
_080b91f8:	.4byte 0x0200CD70

_080b91fc:

.incbin "base.gba", 0xB91FC, 0x2
_080b91fe:

.incbin "base.gba", 0xB91FE, 0x2
_080b9200:

.incbin "base.gba", 0xB9200, 0x2
_080b9202:

.incbin "base.gba", 0xB9202, 0x1A
_080b921c:	.4byte 0x0200CCD0

_080b9220:

.incbin "base.gba", 0xB9220, 0x10
_080b9230:

.incbin "base.gba", 0xB9230, 0x8
	thumb_func_start sub_080b9238
sub_080b9238:
	push	{ r4, r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	str		r0, [r7, #0x0]
	ldr		r0, _080b92a4
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x5
	bne		_080b92bc
	ldr		r0, _080b92a4
	ldrb	r1, [r0, #0x6]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
	ldr		r0, _080b92a4
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x5
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080b92a4
	ldr		r1, _080b92a4
	ldrh	r2, [r0, #0x1a]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x1c]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x1a]
	ldr		r0, _080b92a4
	ldrh	r1, [r0, #0x1a]
	cmp		r1, #0x0
	beq		_080b92a8
	ldr		r0, _080b92a4
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x6
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	b		_080b92bc

_080b92a4:	.4byte 0x0200CD70

_080b92a8:
	ldr		r0, _080b9340
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
_080b92bc:
	ldr		r0, _080b9340
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x1
	bne		_080b9358
	ldr		r0, _080b9340
	ldrb	r1, [r0, #0x6]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
	ldr		r0, _080b9340
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x5
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r4, _080b9340
	ldr		r1, [r7, #0x0]
	add		r0, r1, #0x0
	mov		r1, #0x8c
	bl		sub_080bbeac
	ldrh	r1, [r4, #0x1a]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	add		r1, r2, #0x0
	orr		r1, r0
	add		r0, r1, #0x0
	strh	r0, [r4, #0x1a]
	ldr		r0, _080b9340
	ldr		r1, _080b9340
	ldrh	r2, [r1, #0x1a]
	mov		r3, #0x8c
	sub		r1, r3, r2
	ldrh	r2, [r0, #0x1c]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x1c]
	ldr		r0, _080b9340
	ldrh	r1, [r0, #0x1a]
	cmp		r1, #0x0
	beq		_080b9344
	ldr		r0, _080b9340
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x2
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	b		_080b9358

_080b9340:	.4byte 0x0200CD70

_080b9344:
	ldr		r0, _080b93b0
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x3
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
_080b9358:
	ldr		r0, _080b93b0
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x3
	bne		_080b93a8
	ldr		r0, _080b93b0
	ldrb	r1, [r0, #0x6]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
	ldr		r0, _080b93b0
	ldrh	r1, [r0, #0x1a]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x28
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x1a]
	ldr		r0, _080b93b0
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x4
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	ldr		r0, _080b93b0
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x9
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
_080b93a8:
	add		sp, #0x4
	pop		{ r4, r7 }
	pop		{ r0 }
	bx		r0

_080b93b0:	.4byte 0x0200CD70
	thumb_func_end sub_080b9238

	thumb_func_start sub_080b93b4
sub_080b93b4:
	push	{ r4, r7, lr }
	sub		sp, #0xc
	mov		r7, sp
	add		r2, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r7, #0x0
	strh	r2, [r1, #0x0]
	add		r1, r7, #0x2
	strh	r0, [r1, #0x0]
	ldr		r0, _080b93f8
	ldrb	r1, [r0, #0xe]
	cmp		r1, #0x0
	bne		_080b93d2
	bl		sub_080b9ddc
_080b93d2:
	ldr		r0, _080b93f8
	ldrb	r1, [r0, #0xe]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xe]
	add		r0, r7, #0x0
	ldrh	r1, [r0, #0x0]
	add		r0, r1, #0x0
	sub		r0, #0x10
	cmp		r0, #0x2d
	bls		_080b93ee
	bl		sub_080b9dc0
_080b93ee:
	lsl		r1, r0, #0x2
	ldr		r2, _080b93fc
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	mov		pc, r1

_080b93f8:	.4byte 0x0200CD70
_080b93fc:	.4byte 0x080b9400
_080b9400:	.4byte 0x080b94b8

.incbin "base.gba", 0xB9404, 0xB4
	thumb_func_end sub_080b93b4


.incbin "base.gba", 0xB94B8, 0x908
	thumb_func_start sub_080b9dc0
sub_080b9dc0:
	b		sub_080b9dc2
	thumb_func_end sub_080b9dc0

	non_word_aligned_thumb_func_start sub_080b9dc2
sub_080b9dc2:
	ldr		r0, _080b9dd8
	ldrb	r1, [r0, #0xe]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xe]
	b		_080b9e5a

_080b9dd8:	.4byte 0x0200CD70
	thumb_func_end sub_080b9dc2

	thumb_func_start sub_080b9ddc
sub_080b9ddc:
	add		r0, r7, #0x2
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x3
	bne		_080b9e5a
	ldr		r0, _080b9e08
	ldrb	r1, [r0, #0xf]
	cmp		r1, #0x0
	beq		_080b9e5a
	add		r0, r7, #0x0
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x24
	beq		_080b9e0c
	add		r0, r7, #0x0
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x26
	beq		_080b9e0c
	add		r0, r7, #0x0
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x27
	beq		_080b9e0c
	b		_080b9e5a

.incbin "base.gba", 0xB9E06, 0x2

_080b9e08:	.4byte 0x0200CD70

_080b9e0c:
	bl		sub_08091ccc
	bl		sub_08091cb8
	add		r1, r7, #0x5
	add		r0, r1, #0x0
	bl		sub_08091ce0
	add		r0, r7, #0x5
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080b9e5a
	ldr		r1, _080b9e70
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080b9e5a
	bl		sub_08091ba4
	add		r1, r0, #0x4
	str		r1, [r7, #0x8]
	add		r0, r7, #0x0
	add		r0, #0x8
	ldr		r1, [r0, #0x0]
	ldr		r3, _080b9e70
	ldr		r2, [r3, #0x0]
	ldrb	r3, [r2, #0x2]
	strb	r3, [r1, #0x0]
	add		r1, #0x1
	str		r1, [r0, #0x0]
	ldr		r0, [r7, #0x8]
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	mov		r0, #0x29
	bl		sub_080b8bcc
	add		r0, r7, #0x2
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
_080b9e5a:
	add		r1, r7, #0x0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x26
	bne		_080b9e64
	b		_080ba0c8
_080b9e64:
	cmp		r0, #0x26
	bgt		_080b9e74
	cmp		r0, #0x10
	bne		_080b9e6e
	b		_080ba0e4
_080b9e6e:
	b		_080ba134

_080b9e70:	.4byte 0x0200CCD0

_080b9e74:
	cmp		r0, #0x30
	beq		_080b9e80
	cmp		r0, #0x3d
	bne		_080b9e7e
	b		_080ba0e4
_080b9e7e:
	b		_080ba134
_080b9e80:
	add		r0, r7, #0x2
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080b9e8a
	b		_080ba0be
_080b9e8a:
	bl		sub_08091ba4
	add		r1, r0, #0x0
	ldr		r0, _080b9efc
	ldrb	r2, [r1, #0x8]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	ldr		r0, _080b9efc
	ldrh	r1, [r0, #0x14]
	add		r0, r1, #0x0
	lsl		r2, r0, #0x18
	lsr		r1, r2, #0x18
	add		r0, r1, #0x0
	bl		sub_080babf4
	ldr		r1, _080b9efc
	add		r0, r1, #0x0
	add		r1, #0x30
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080b9f60
	ldr		r0, _080b9efc
	ldr		r1, _080b9efc
	add		r2, r1, #0x0
	add		r1, #0x30
	ldr		r2, _080b9efc
	ldrh	r3, [r2, #0x14]
	add		r2, r3, #0x0
	mvn		r3, r2
	ldrb	r1, [r1, #0x0]
	add		r2, r3, #0x0
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r0, #0x0
	add		r0, #0x30
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x4
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b9ef2:
	add		r0, r7, #0x4
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080b9f00
	b		_080b9f40

_080b9efc:	.4byte 0x0200CD70

_080b9f00:
	ldr		r1, _080b9f3c
	ldrh	r0, [r1, #0x14]
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080b9f2c
	ldr		r0, _080b9f3c
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x34
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
_080b9f2c:
	add		r1, r7, #0x4
	add		r0, r7, #0x4
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b9ef2

_080b9f3c:	.4byte 0x0200CD70

_080b9f40:
	ldr		r0, _080b9f84
	ldrb	r1, [r0, #0x6]
	cmp		r1, #0x0
	bne		_080b9f60
	ldr		r0, _080b9f84
	ldr		r1, _080b9f84
	ldrb	r2, [r1, #0x5]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x5]
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
_080b9f60:
	add		r0, r7, #0x5
	ldr		r1, _080b9f84
	ldr		r2, _080b9f84
	ldrh	r3, [r2, #0x14]
	add		r2, r3, #0x0
	ldrb	r1, [r1, #0x0]
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x4
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080b9f78:
	add		r0, r7, #0x4
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080b9f88
	b		_080b9fd0

.incbin "base.gba", 0xB9F82, 0x2

_080b9f84:	.4byte 0x0200CD70

_080b9f88:
	add		r1, r7, #0x5
	ldrb	r0, [r1, #0x0]
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080b9fbc
	ldr		r0, _080b9fcc
	ldrb	r1, [r0, #0x1]
	cmp		r1, #0x0
	beq		_080b9fbc
	ldr		r1, _080b9fcc
	ldr		r0, _080b9fcc
	ldr		r1, _080b9fcc
	ldrb	r2, [r1, #0x1]
	sub		r1, r2, #0x1
	ldrb	r2, [r0, #0x1]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x1]
_080b9fbc:
	add		r1, r7, #0x4
	add		r0, r7, #0x4
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080b9f78

_080b9fcc:	.4byte 0x0200CD70

_080b9fd0:
	ldr		r0, _080ba050
	ldr		r1, _080ba050
	ldr		r2, _080ba050
	ldrh	r3, [r2, #0x14]
	add		r2, r3, #0x0
	mvn		r3, r2
	ldrb	r1, [r1, #0x0]
	add		r2, r3, #0x0
	add		r3, r2, #0x0
	and		r1, r3
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, _080ba050
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x0
	beq		_080ba090
	ldr		r1, _080ba054
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0xff
	bne		_080ba090
	ldr		r0, _080ba050
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x8
	bne		_080ba058
	ldr		r0, _080ba050
	ldr		r1, _080ba050
	ldrh	r2, [r0, #0x1a]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x1c]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x1a]
	ldr		r0, _080ba050
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x6
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	ldr		r0, _080ba050
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x6
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	b		_080ba090

.incbin "base.gba", 0xBA04E, 0x2

_080ba050:	.4byte 0x0200CD70
_080ba054:	.4byte 0x0200CCD0

_080ba058:
	ldr		r0, _080ba0c0
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x6
	beq		_080ba090
	ldr		r0, _080ba0c0
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x7
	beq		_080ba090
	ldr		r0, _080ba0c0
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	ldr		r0, _080ba0c0
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x5
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
_080ba090:
	ldr		r1, _080ba0c4
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0xff
	bne		_080ba0ae
	ldr		r0, _080ba0c0
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x0
	bne		_080ba0ae
	ldr		r0, _080ba0c0
	ldrb	r1, [r0, #0x6]
	mov		r2, #0xff
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
_080ba0ae:
	ldr		r0, _080ba0c0
	ldrb	r1, [r0, #0xe]
	cmp		r1, #0x0
	bne		_080ba0be
	mov		r0, #0x40
	mov		r1, #0x1
	bl		sub_080bab48
_080ba0be:
	b		_080ba136

_080ba0c0:	.4byte 0x0200CD70
_080ba0c4:	.4byte 0x0200CCD0

_080ba0c8:
	bl		sub_080ba974
	ldr		r1, _080ba0e0
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0xff
	beq		_080ba0de
	mov		r0, #0x50
	mov		r1, #0x0
	bl		sub_080bab48
_080ba0de:
	b		_080ba136

_080ba0e0:	.4byte 0x0200CCD0

_080ba0e4:
	add		r0, r7, #0x2
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080ba12c
	ldr		r0, _080ba130
	ldr		r1, _080ba130
	ldr		r2, _080ba130
	ldrb	r3, [r2, #0xd]
	mov		r4, #0x0
	and		r3, r4
	add		r4, r3, #0x0
	strb	r4, [r2, #0xd]
	ldrb	r2, [r1, #0x1]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x1]
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	ldr		r0, _080ba130
	ldrb	r1, [r0, #0x6]
	mov		r2, #0xff
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x6]
	bl		sub_080bb160
	add		r0, r7, #0x0
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x3d
	bne		_080ba12c
	bl		sub_080b82ec
_080ba12c:
	b		_080ba136

.incbin "base.gba", 0xBA12E, 0x2

_080ba130:	.4byte 0x0200CD70

_080ba134:
	b		_080ba136
_080ba136:
	add		r0, r7, #0x2
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080ba1f0
	add		r0, r7, #0x0
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x1c
	bne		_080ba198
	add		r0, r7, #0x2
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080ba198
	ldr		r0, _080ba190
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x4
	bne		_080ba198
	ldr		r1, _080ba194
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	ldr		r1, _080ba194
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x2]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0xf
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x2]
	mov		r0, #0xf
	bl		sub_080bab9c
	bl		sub_08091cb8
	b		_080ba204

.incbin "base.gba", 0xBA18E, 0x2

_080ba190:	.4byte 0x0200CD70
_080ba194:	.4byte 0x0200CCD0

_080ba198:
	ldr		r0, _080ba20c
	add		r1, r7, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x14]
	ldr		r0, _080ba20c
	add		r1, r7, #0x2
	ldrh	r2, [r0, #0x16]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x16]
	ldr		r0, _080ba20c
	ldrb	r1, [r0, #0xe]
	cmp		r1, #0x0
	beq		_080ba1e4
	ldr		r0, _080ba20c
	ldr		r1, _080ba20c
	ldrb	r2, [r1, #0x5]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x5]
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
_080ba1e4:
	mov		r0, #0xf0
	mov		r1, #0x2
	bl		sub_080bab48
	bl		sub_080bb160
_080ba1f0:
	add		r0, r7, #0x0
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0xff
	bne		_080ba204
	mov		r0, #0xf2
	mov		r1, #0x0
	bl		sub_080bab48
	bl		sub_080bb160
_080ba204:
	add		sp, #0xc
	pop		{ r4, r7 }
	pop		{ r0 }
	bx		r0

_080ba20c:	.4byte 0x0200CD70
	thumb_func_end sub_080b9ddc

	thumb_func_start sub_080ba210
sub_080ba210:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r1, r7, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x2
	ldr		r1, _080ba28c
	ldrb	r2, [r1, #0xe]
	strb	r2, [r0, #0x0]
	ldr		r0, _080ba28c
	ldrb	r1, [r0, #0xe]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xe]
	ldr		r0, _080ba28c
	ldrb	r1, [r0, #0xf]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xf]
	ldr		r1, _080ba290
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080ba296
	add		r0, r7, #0x0
	ldrh	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080b8bcc
	ldr		r0, _080ba28c
	ldrb	r1, [r0, #0x2]
	lsl		r2, r1, #0x18
	lsr		r0, r2, #0x18
	cmp		r0, #0x1
	beq		_080ba294
	bl		sub_080bb160
	ldr		r0, _080ba28c
	ldrb	r1, [r0, #0xf]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xf]
	ldr		r0, _080ba28c
	add		r1, r7, #0x2
	ldrb	r2, [r0, #0xe]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0xe]
	b		_080ba30e

.incbin "base.gba", 0xBA28A, 0x2

_080ba28c:	.4byte 0x0200CD70
_080ba290:	.4byte 0x0200CCD0

_080ba294:
	b		_080ba2c2
_080ba296:
	add		r1, r7, #0x3
	add		r0, r1, #0x0
	bl		sub_08091b48
	lsl		r1, r0, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	bne		_080ba2c2
	ldr		r0, _080ba318
	ldr		r1, _080ba318
	add		r2, r7, #0x3
	ldrb	r1, [r1, #0x3]
	ldrb	r2, [r2, #0x0]
	orr		r1, r2
	ldrb	r2, [r0, #0x3]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x3]
_080ba2c2:
	ldr		r0, _080ba318
	ldr		r1, [r0, #0x44]
	cmp		r1, #0x0
	beq		_080ba2ec
	ldr		r0, _080ba318
	add		r1, r7, #0x0
	ldrh	r2, [r1, #0x0]
	ldr		r1, [r0, #0x44]
	add		r0, r2, #0x0
	bl		sub_080bbc74
	bl		sub_08091cb8
	ldr		r0, _080ba318
	ldrb	r1, [r0, #0x2]
	lsl		r2, r1, #0x18
	lsr		r0, r2, #0x18
	cmp		r0, #0x2
	bne		_080ba2ec
	bl		sub_080bb160
_080ba2ec:
	ldr		r0, _080ba318
	ldrb	r1, [r0, #0xf]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xf]
	ldr		r0, _080ba318
	add		r1, r7, #0x2
	ldrb	r2, [r0, #0xe]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0xe]
_080ba30e:
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBA316, 0x2

_080ba318:	.4byte 0x0200CD70
	thumb_func_end sub_080ba210

	thumb_func_start sub_080ba31c
sub_080ba31c:
	push	{ r7, lr }
	sub		sp, #0xc
	mov		r7, sp
	ldr		r0, _080ba334
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x4
	bls		_080ba338
	ldr		r0, _080ba334
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x8
	bhi		_080ba338
	b		_080ba33a

_080ba334:	.4byte 0x0200CD70

_080ba338:
	b		_080ba7e4
_080ba33a:
	add		r0, r7, #0x2
	ldr		r2, _080ba3c0
	ldr		r1, [r2, #0x0]
	ldr		r2, _080ba3c4
	ldrb	r1, [r1, #0x2]
	ldrb	r2, [r2, #0xc]
	eor		r1, r2
	ldr		r3, _080ba3c0
	ldr		r2, [r3, #0x0]
	ldrb	r2, [r2, #0x2]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x2
	add		r1, r7, #0x2
	ldr		r3, _080ba3c0
	ldr		r2, [r3, #0x0]
	ldrb	r3, [r2, #0x7]
	mvn		r2, r3
	ldrb	r1, [r1, #0x0]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	ldr		r0, _080ba3c4
	ldr		r2, _080ba3c0
	ldr		r1, [r2, #0x0]
	ldrb	r2, [r0, #0xc]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x2]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0xc]
	add		r0, r7, #0x2
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080ba3aa
	ldr		r0, _080ba3c4
	add		r1, r7, #0x2
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0x10
	mov		r1, #0x1
	bl		sub_080bab48
_080ba3aa:
	add		r0, r7, #0x4
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080ba3b6:
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080ba3c8
	b		_080ba668

_080ba3c0:	.4byte 0x0200CCD0
_080ba3c4:	.4byte 0x0200CD70

_080ba3c8:
	add		r0, r7, #0x1
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	mov		r3, #0x1
	add		r1, r3, #0x0
	lsl		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x3
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x2
	add		r1, r7, #0x1
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	add		r2, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	beq		_080ba444
	ldr		r0, _080ba440
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x28
	add		r0, r1, r2
	ldr		r1, _080ba440
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x26]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, _080ba440
	ldr		r2, _080ba440
	add		r1, r2, #0x0
	add		r2, #0x24
	add		r1, r7, #0x1
	ldrb	r2, [r2, #0x0]
	ldrb	r3, [r1, #0x0]
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r0, #0x0
	add		r0, #0x24
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	b		_080ba652

_080ba440:	.4byte 0x0200CD70

_080ba444:
	ldr		r1, _080ba4b0
	add		r0, r1, #0x0
	add		r1, #0x24
	add		r2, r7, #0x1
	ldrb	r0, [r1, #0x0]
	ldrb	r1, [r2, #0x0]
	add		r2, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	bne		_080ba460
	b		_080ba652
_080ba460:
	ldr		r0, _080ba4b4
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x34]
	cmp		r0, #0x46
	beq		_080ba476
	b		_080ba562
_080ba476:
	ldr		r0, _080ba4b4
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r1, #0x61
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_080ba560
	add		r0, r7, #0x3
	add		r1, r7, #0x3
	ldrb	r2, [r1, #0x0]
	mov		r3, #0x2
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	ldr		r0, _080ba4b0
	ldr		r1, [r0, #0x20]
	str		r1, [r7, #0x8]
_080ba4a4:
	ldr		r0, [r7, #0x8]
	ldrh	r1, [r0, #0x0]
	ldr		r0, _080ba4b8
	cmp		r1, r0
	bne		_080ba4bc
	b		_080ba53c

_080ba4b0:	.4byte 0x0200CD70
_080ba4b4:	.4byte 0x0200CCC0
_080ba4b8:	.4byte 0x0000FFFF

_080ba4bc:
	ldr		r1, _080ba52c
	ldr		r0, [r1, #0x0]
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x5
	add		r0, r0, r2
	ldr		r1, [r7, #0x8]
	ldrh	r0, [r0, #0x18]
	ldrh	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_080ba534
	ldr		r0, _080ba530
	ldr		r1, _080ba530
	add		r2, r7, #0x1
	ldrb	r1, [r1, #0x0]
	ldrb	r2, [r2, #0x0]
	orr		r1, r2
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	ldr		r1, _080ba530
	ldr		r0, _080ba530
	ldr		r1, _080ba530
	ldrb	r2, [r1, #0x1]
	add		r1, r2, #0x1
	ldrb	r2, [r0, #0x1]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x1]
	add		r0, r7, #0x4
	add		r1, r7, #0x4
	add		r2, r7, #0x1
	ldrb	r1, [r1, #0x0]
	ldrb	r2, [r2, #0x0]
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	add		r0, r7, #0x3
	add		r1, r7, #0x3
	ldrb	r2, [r1, #0x0]
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080ba53c

_080ba52c:	.4byte 0x0200CCD0
_080ba530:	.4byte 0x0200CD70

_080ba534:
	ldr		r0, [r7, #0x8]
	add		r1, r0, #0x2
	str		r1, [r7, #0x8]
	b		_080ba4a4
_080ba53c:
	add		r0, r7, #0x3
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	add		r0, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	bne		_080ba560
	add		r0, r7, #0x3
	add		r1, r7, #0x3
	ldrb	r2, [r1, #0x0]
	mov		r3, #0x4
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
_080ba560:
	b		_080ba5c2
_080ba562:
	ldr		r0, _080ba664
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r0, #0x28
	add		r1, r0, r2
	ldr		r0, _080ba664
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x28
	add		r0, r1, r2
	ldr		r1, _080ba664
	add		r2, r7, #0x0
	ldrb	r3, [r2, #0x0]
	add		r2, r3, #0x0
	lsl		r3, r2, #0x1
	add		r1, #0x28
	add		r2, r1, r3
	ldrh	r3, [r2, #0x0]
	sub		r1, r3, #0x1
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r1, #0x0
	orr		r3, r2
	add		r2, r3, #0x0
	strh	r2, [r0, #0x0]
	add		r0, r1, #0x0
	mov		r1, #0x0
	bic		r0, r1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	bne		_080ba5c2
	add		r0, r7, #0x3
	add		r1, r7, #0x3
	ldrb	r2, [r1, #0x0]
	mov		r3, #0x6
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
_080ba5c2:
	add		r0, r7, #0x3
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x2
	add		r0, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	beq		_080ba622
	ldr		r0, _080ba664
	ldr		r1, _080ba664
	add		r2, r1, #0x0
	add		r1, #0x24
	add		r2, r7, #0x1
	ldrb	r3, [r2, #0x0]
	mvn		r2, r3
	ldrb	r1, [r1, #0x0]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r0, #0x0
	add		r0, #0x24
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, _080ba664
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x28
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	bl		sub_08093084
_080ba622:
	add		r0, r7, #0x3
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x4
	add		r0, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	beq		_080ba652
	ldr		r0, _080ba664
	ldr		r1, _080ba664
	add		r2, r7, #0x1
	ldrb	r1, [r1, #0xd]
	ldrb	r2, [r2, #0x0]
	orr		r1, r2
	ldrb	r2, [r0, #0xd]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0xd]
_080ba652:
	add		r1, r7, #0x0
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080ba3b6

.incbin "base.gba", 0xBA662, 0x2

_080ba664:	.4byte 0x0200CD70

_080ba668:
	add		r0, r7, #0x4
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080ba68e
	ldr		r0, _080ba740
	add		r1, r7, #0x4
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0x11
	mov		r1, #0x1
	bl		sub_080bab48
_080ba68e:
	ldr		r0, _080ba740
	ldrb	r1, [r0, #0xd]
	cmp		r1, #0x0
	beq		_080ba702
	add		r0, r7, #0x3
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	ldr		r1, _080ba744
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x6]
	cmp		r1, #0x0
	beq		_080ba6c6
	ldr		r0, _080ba740
	ldr		r1, _080ba740
	ldrb	r0, [r0, #0x3]
	ldrb	r1, [r1, #0x0]
	add		r2, r1, #0x0
	add		r1, r0, #0x0
	and		r1, r2
	ldr		r0, _080ba740
	lsl		r2, r1, #0x18
	lsr		r1, r2, #0x18
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	beq		_080ba6c6
	add		r0, r7, #0x3
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080ba6c6:
	add		r0, r7, #0x3
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080ba702
	ldr		r0, _080ba740
	ldrb	r1, [r0, #0xd]
	add		r0, r1, #0x0
	bl		sub_080bab9c
	ldr		r0, _080ba740
	ldr		r1, _080ba740
	ldrb	r2, [r1, #0xd]
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x14]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	ldr		r0, _080ba740
	ldrb	r1, [r0, #0xd]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xd]
	mov		r0, #0x12
	mov		r1, #0x1
	bl		sub_080bab48
_080ba702:
	ldr		r1, _080ba740
	add		r0, r1, #0x0
	add		r1, #0x24
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080ba7e4
	ldr		r0, _080ba740
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x8
	bne		_080ba7e4
	ldr		r0, _080ba740
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x0
	bne		_080ba748
	ldr		r0, _080ba740
	ldr		r1, _080ba740
	ldrb	r2, [r1, #0x5]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x5]
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	mov		r0, #0x14
	mov		r1, #0x0
	bl		sub_080bab48
	b		_080ba7e4

_080ba740:	.4byte 0x0200CD70
_080ba744:	.4byte 0x0200CCD0

_080ba748:
	ldr		r0, _080ba77c
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x2
	bne		_080ba780
	ldr		r0, _080ba77c
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x3
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	ldr		r0, _080ba77c
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x9
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	b		_080ba7a8

.incbin "base.gba", 0xBA77A, 0x2

_080ba77c:	.4byte 0x0200CD70

_080ba780:
	ldr		r0, _080ba7ec
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	ldr		r0, _080ba7ec
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x5
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
_080ba7a8:
	ldr		r0, _080ba7ec
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080ba7e4
	ldr		r0, _080ba7ec
	ldrh	r1, [r0, #0x1a]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x1a]
	ldr		r0, _080ba7ec
	ldrb	r1, [r0, #0x7]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x8
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x7]
	ldr		r0, _080ba7ec
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x5
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
_080ba7e4:
	add		sp, #0xc
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

_080ba7ec:	.4byte 0x0200CD70
	thumb_func_end sub_080ba31c

	thumb_func_start sub_080ba7f0
sub_080ba7f0:
	push	{ r4, r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r0, r7, #0x0
	ldr		r1, _080ba874
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _080ba874
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, _080ba878
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0xf
	bne		_080ba8ec
	ldr		r0, _080ba878
	ldr		r1, _080ba878
	ldrb	r2, [r1, #0x10]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r0, #0x28
	add		r1, r0, r2
	ldr		r0, _080ba878
	ldr		r1, _080ba878
	ldrb	r2, [r1, #0x10]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x28
	add		r0, r1, r2
	ldr		r1, _080ba878
	ldr		r2, _080ba878
	ldrb	r3, [r2, #0x10]
	add		r2, r3, #0x0
	lsl		r3, r2, #0x1
	add		r1, #0x28
	add		r2, r1, r3
	ldrh	r3, [r2, #0x0]
	sub		r1, r3, #0x1
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r1, #0x0
	orr		r3, r2
	add		r2, r3, #0x0
	strh	r2, [r0, #0x0]
	add		r0, r1, #0x0
	mov		r1, #0x0
	bic		r0, r1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	beq		_080ba880
	ldr		r0, _080ba87c
	ldr		r1, _080ba878
	ldrb	r2, [r1, #0x10]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x27
	beq		_080ba880
	b		_080ba8ec

.incbin "base.gba", 0xBA872, 0x2

_080ba874:	.4byte 0x04000208
_080ba878:	.4byte 0x0200CD70
_080ba87c:	.4byte 0x0200CCC0

_080ba880:
	bl		sub_080bb190
	ldr		r0, _080ba968
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x18
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080ba968
	ldrb	r1, [r0, #0x10]
	mov		r0, #0x4
	bl		sub_08093084
	ldr		r0, _080ba968
	ldr		r1, _080ba968
	add		r2, r1, #0x0
	add		r1, #0x24
	ldr		r2, _080ba968
	ldrb	r3, [r2, #0x10]
	mov		r4, #0x1
	add		r2, r4, #0x0
	lsl		r2, r3
	add		r3, r2, #0x0
	mvn		r2, r3
	ldrb	r1, [r1, #0x0]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r0, #0x0
	add		r0, #0x24
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, _080ba968
	ldr		r1, _080ba968
	ldrb	r2, [r1, #0x10]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x28
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
_080ba8ec:
	ldr		r0, _080ba96c
	add		r1, r7, #0x0
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _080ba968
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x18
	bne		_080ba95e
	ldr		r0, _080ba968
	ldrb	r1, [r0, #0x2]
	lsl		r2, r1, #0x18
	lsr		r0, r2, #0x18
	cmp		r0, #0x1
	bne		_080ba90c
	bl		sub_080bb190
_080ba90c:
	ldr		r0, _080ba968
	ldrb	r1, [r0, #0x2]
	lsl		r2, r1, #0x18
	lsr		r0, r2, #0x18
	cmp		r0, #0x0
	bne		_080ba95e
	ldr		r0, _080ba968
	ldr		r1, _080ba968
	ldrb	r2, [r1, #0x5]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x5]
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r1, _080ba970
	ldr		r0, [r1, #0x0]
	ldr		r2, _080ba970
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x2]
	ldrb	r1, [r1, #0x3]
	orr		r0, r1
	add		r1, r0, #0x0
	lsl		r0, r1, #0x18
	lsr		r1, r0, #0x18
	add		r0, r1, #0x0
	bl		sub_080bab9c
	ldr		r0, _080ba968
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0x25
	mov		r1, #0x1
	bl		sub_080bab48
_080ba95e:
	add		sp, #0x4
	pop		{ r4, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBA966, 0x2

_080ba968:	.4byte 0x0200CD70
_080ba96c:	.4byte 0x04000208
_080ba970:	.4byte 0x0200CCD0
	thumb_func_end sub_080ba7f0

	thumb_func_start sub_080ba974
sub_080ba974:
	push	{ r4, r7, lr }
	mov		r7, sp
	ldr		r0, _080baa10
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0xf
	bne		_080baa08
	ldr		r0, _080baa14
	ldr		r1, _080baa10
	ldrb	r2, [r1, #0x10]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x26
	bne		_080baa08
	ldr		r0, _080baa10
	ldr		r1, _080baa10
	ldrb	r2, [r1, #0x5]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strb	r3, [r1, #0x5]
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080baa10
	ldrb	r1, [r0, #0x10]
	mov		r0, #0x4
	bl		sub_08093084
	ldr		r0, _080baa10
	ldr		r1, _080baa10
	add		r2, r1, #0x0
	add		r1, #0x24
	ldr		r2, _080baa10
	ldrb	r3, [r2, #0x10]
	mov		r4, #0x1
	add		r2, r4, #0x0
	lsl		r2, r3
	add		r3, r2, #0x0
	mvn		r2, r3
	ldrb	r1, [r1, #0x0]
	add		r3, r2, #0x0
	and		r1, r3
	add		r2, r0, #0x0
	add		r0, #0x24
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x0]
	ldr		r0, _080baa10
	ldr		r1, _080baa10
	ldrb	r2, [r1, #0x10]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x1
	add		r1, r0, #0x0
	add		r1, #0x28
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
	mov		r0, #0x24
	mov		r1, #0x0
	bl		sub_080bab48
_080baa08:
	pop		{ r4, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBAA0E, 0x2

_080baa10:	.4byte 0x0200CD70
_080baa14:	.4byte 0x0200CCC0
	thumb_func_end sub_080ba974

	thumb_func_start sub_080baa18
sub_080baa18:
	push	{ r7, lr }
	mov		r7, sp
	ldr		r0, _080baa28
	ldrb	r1, [r0, #0x6]
	cmp		r1, #0x0
	beq		_080baa2c
	b		_080baa9c

.incbin "base.gba", 0xBAA26, 0x2

_080baa28:	.4byte 0x0200CD70

_080baa2c:
	ldr		r0, _080baaa4
	ldrb	r1, [r0, #0xa]
	cmp		r1, #0x1
	bne		_080baa9c
	ldr		r0, _080baaa4
	ldr		r1, _080baaa4
	ldrb	r2, [r0, #0x11]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x4]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x11]
	ldr		r0, _080baaa4
	ldr		r1, _080baaa4
	ldrb	r2, [r0, #0x12]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x5]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x12]
	ldr		r0, _080baaa4
	ldrb	r1, [r0, #0x4]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x10
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x4]
	ldr		r0, _080baaa4
	ldrb	r1, [r0, #0x5]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x11
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x5]
	ldr		r0, _080baaa4
	ldrb	r1, [r0, #0xa]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x2
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xa]
_080baa9c:
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBAAA2, 0x2

_080baaa4:	.4byte 0x0200CD70
	thumb_func_end sub_080baa18

	thumb_func_start sub_080baaa8
sub_080baaa8:
	push	{ r4, r7, lr }
	sub		sp, #0x8
	mov		r7, sp
	add		r0, r7, #0x1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080baaba:
	add		r0, r7, #0x0
	ldr		r2, _080baacc
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x8]
	cmp		r0, r1
	bcc		_080baad0
	b		_080bab38

.incbin "base.gba", 0xBAACA, 0x2

_080baacc:	.4byte 0x0200CCD0

_080baad0:
	ldr		r0, _080baae4
	ldr		r1, [r0, #0x20]
	str		r1, [r7, #0x4]
_080baad6:
	ldr		r0, [r7, #0x4]
	ldrh	r1, [r0, #0x0]
	ldr		r0, _080baae8
	cmp		r1, r0
	bne		_080baaec
	b		_080bab28

.incbin "base.gba", 0xBAAE2, 0x2

_080baae4:	.4byte 0x0200CD70
_080baae8:	.4byte 0x0000FFFF

_080baaec:
	ldr		r1, _080bab24
	ldr		r0, [r1, #0x0]
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x5
	add		r0, r0, r2
	ldr		r1, [r7, #0x4]
	ldrh	r0, [r0, #0x18]
	ldrh	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_080bab1a
	add		r0, r7, #0x1
	add		r1, r7, #0x1
	add		r2, r7, #0x0
	ldrb	r3, [r2, #0x0]
	mov		r4, #0x1
	add		r2, r4, #0x0
	lsl		r2, r3
	ldrb	r1, [r1, #0x0]
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
_080bab1a:
	ldr		r0, [r7, #0x4]
	add		r1, r0, #0x2
	str		r1, [r7, #0x4]
	b		_080baad6

.incbin "base.gba", 0xBAB22, 0x2

_080bab24:	.4byte 0x0200CCD0

_080bab28:
	add		r1, r7, #0x0
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080baaba
_080bab38:
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	b		_080bab40
_080bab40:
	add		sp, #0x8
	pop		{ r4, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080baaa8

	thumb_func_start sub_080bab48
sub_080bab48:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r2, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r7, #0x0
	strb	r2, [r1, #0x0]
	add		r1, r7, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, _080bab98
	ldr		r1, [r0, #0x40]
	cmp		r1, #0x0
	beq		_080bab76
	ldr		r0, _080bab98
	add		r2, r7, #0x0
	ldrb	r1, [r2, #0x0]
	add		r3, r7, #0x1
	ldrb	r2, [r3, #0x0]
	ldr		r3, [r0, #0x40]
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	bl		sub_080bbc7c
_080bab76:
	ldr		r0, _080bab98
	ldr		r1, _080bab98
	ldrh	r2, [r1, #0x16]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strh	r3, [r1, #0x16]
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBAB96, 0x2

_080bab98:	.4byte 0x0200CD70
	thumb_func_end sub_080bab48

	thumb_func_start sub_080bab9c
sub_080bab9c:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x1
	ldr		r1, _080babf0
	ldrb	r2, [r1, #0xe]
	strb	r2, [r0, #0x0]
	ldr		r0, _080babf0
	ldrb	r1, [r0, #0xe]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xe]
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_08092c1c
	bl		sub_08091cb8
	ldr		r0, _080babf0
	add		r1, r7, #0x1
	ldrb	r2, [r0, #0xe]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0xe]
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBABEE, 0x2

_080babf0:	.4byte 0x0200CD70
	thumb_func_end sub_080bab9c

	thumb_func_start sub_080babf4
sub_080babf4:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	ldr		r1, _080bac18
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x0
	beq		_080bac9c
	add		r0, r7, #0x1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080bac0e:
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080bac1c
	b		_080bac9c

_080bac18:	.4byte 0x0200CCD0

_080bac1c:
	ldr		r0, _080bac98
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	beq		_080bac88
	ldr		r0, _080bac98
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	add		r2, r7, #0x0
	ldrb	r0, [r1, #0x1a]
	ldrb	r1, [r2, #0x0]
	add		r2, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	beq		_080bac88
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	ldr		r0, _080bac98
	add		r2, r7, #0x1
	ldrb	r3, [r2, #0x0]
	add		r2, r3, #0x0
	lsl		r3, r2, #0x2
	add		r2, r0, r3
	ldr		r0, [r2, #0x0]
	add		r2, r7, #0x0
	ldrb	r3, [r2, #0x0]
	mvn		r2, r3
	ldrb	r0, [r0, #0x1a]
	add		r3, r2, #0x0
	and		r0, r3
	add		r2, r0, #0x0
	lsl		r0, r2, #0x18
	lsr		r2, r0, #0x18
	mov		r0, #0x20
	bl		sub_08093544
_080bac88:
	add		r1, r7, #0x1
	add		r0, r7, #0x1
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080bac0e

_080bac98:	.4byte 0x0200CCC0

_080bac9c:
	ldr		r1, _080bacb8
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x5]
	cmp		r1, #0x0
	beq		_080bad20
	add		r0, r7, #0x1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080bacac:
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080bacbc
	b		_080bad20

.incbin "base.gba", 0xBACB6, 0x2

_080bacb8:	.4byte 0x0200CCD0

_080bacbc:
	ldr		r0, _080bad1c
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x34]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	beq		_080bad0c
	ldr		r0, _080bad1c
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r1, #0x4e
	add		r2, r7, #0x0
	ldrb	r0, [r1, #0x0]
	ldrb	r1, [r2, #0x0]
	add		r2, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	beq		_080bad0c
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080936ac
_080bad0c:
	add		r1, r7, #0x1
	add		r0, r7, #0x1
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080bacac

_080bad1c:	.4byte 0x0200CCC0

_080bad20:
	ldr		r1, _080bad60
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x6]
	cmp		r1, #0x0
	beq		_080badec
	ldr		r1, _080bad60
	ldr		r0, [r1, #0x0]
	ldr		r2, _080bad60
	ldr		r1, [r2, #0x0]
	add		r2, r7, #0x0
	ldrb	r3, [r2, #0x0]
	mvn		r2, r3
	ldrb	r1, [r1, #0x6]
	add		r3, r2, #0x0
	and		r1, r3
	ldrb	r2, [r0, #0x6]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x6]
	add		r0, r7, #0x1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080bad54:
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080bad64
	b		_080badec

.incbin "base.gba", 0xBAD5E, 0x2

_080bad60:	.4byte 0x0200CCD0

_080bad64:
	ldr		r0, _080bade4
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	ldr		r1, _080bade8
	cmp		r0, r1
	bne		_080badd4
	ldr		r0, _080bade4
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	add		r2, r7, #0x0
	ldrb	r0, [r1, #0x3]
	ldrb	r1, [r2, #0x0]
	add		r2, r1, #0x0
	and		r0, r2
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	beq		_080badd4
	ldr		r0, _080bade4
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r1, r0, r2
	ldr		r0, [r1, #0x0]
	ldr		r1, _080bade4
	add		r2, r7, #0x1
	ldrb	r3, [r2, #0x0]
	add		r2, r3, #0x0
	lsl		r3, r2, #0x2
	add		r2, r1, r3
	ldr		r1, [r2, #0x0]
	add		r2, r7, #0x0
	ldrb	r3, [r2, #0x0]
	mvn		r2, r3
	ldrb	r1, [r1, #0x3]
	add		r3, r2, #0x0
	and		r1, r3
	ldrb	r2, [r0, #0x3]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x3]
_080badd4:
	add		r1, r7, #0x1
	add		r0, r7, #0x1
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080bad54

_080bade4:	.4byte 0x0200CCB0
_080bade8:	.4byte 0x00008024

_080badec:
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080babf4

	thumb_func_start sub_080badf4
sub_080badf4:
	push	{ r4, r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	ldr		r0, _080bae04
	ldrh	r1, [r0, #0x18]
	cmp		r1, #0x0
	bne		_080bae08
	b		_080baf84

_080bae04:	.4byte 0x0200CD70

_080bae08:
	ldr		r1, _080bae24
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x0
	bne		_080bae14
	b		_080baf08
_080bae14:
	add		r0, r7, #0x0
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080bae1a:
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080bae28
	b		_080baf08

_080bae24:	.4byte 0x0200CCD0

_080bae28:
	ldr		r0, _080bae60
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	beq		_080baef8
	add		r0, r7, #0x2
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, r7, #0x1
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080bae54:
	add		r0, r7, #0x1
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080bae64
	b		_080baef8

.incbin "base.gba", 0xBAE5E, 0x2

_080bae60:	.4byte 0x0200CCC0

_080bae64:
	ldr		r0, _080baef0
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x1a]
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080baeb0
	ldr		r0, _080baef0
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldr		r0, _080baef4
	ldrh	r1, [r1, #0x2]
	ldrh	r0, [r0, #0x18]
	cmp		r1, r0
	bls		_080baeb0
	add		r0, r7, #0x2
	add		r1, r7, #0x2
	add		r2, r7, #0x1
	ldrb	r3, [r2, #0x0]
	mov		r4, #0x1
	add		r2, r4, #0x0
	lsl		r2, r3
	ldrb	r1, [r1, #0x0]
	orr		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
_080baeb0:
	add		r0, r7, #0x2
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080baede
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	ldr		r0, _080baef0
	add		r2, r7, #0x0
	ldrb	r3, [r2, #0x0]
	add		r2, r3, #0x0
	lsl		r3, r2, #0x2
	add		r0, r0, r3
	ldr		r2, [r0, #0x0]
	add		r0, r7, #0x2
	ldrb	r2, [r2, #0x1a]
	ldrb	r0, [r0, #0x0]
	eor		r2, r0
	add		r3, r2, #0x0
	lsl		r0, r3, #0x18
	lsr		r2, r0, #0x18
	mov		r0, #0x20
	bl		sub_08093544
_080baede:
	add		r1, r7, #0x1
	add		r0, r7, #0x1
	add		r1, r7, #0x1
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080bae54

.incbin "base.gba", 0xBAEEE, 0x2

_080baef0:	.4byte 0x0200CCC0
_080baef4:	.4byte 0x0200CD70

_080baef8:
	add		r1, r7, #0x0
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080bae1a
_080baf08:
	ldr		r1, _080baf24
	ldr		r0, [r1, #0x0]
	ldrb	r1, [r0, #0x5]
	cmp		r1, #0x0
	beq		_080baf84
	add		r0, r7, #0x0
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_080baf18:
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x3
	bls		_080baf28
	b		_080baf84

.incbin "base.gba", 0xBAF22, 0x2

_080baf24:	.4byte 0x0200CCD0

_080baf28:
	ldr		r0, _080baf7c
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x34]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x0
	beq		_080baf6a
	ldr		r0, _080baf7c
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x0
	lsl		r2, r1, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldr		r0, _080baf80
	ldrh	r1, [r1, #0x36]
	ldrh	r0, [r0, #0x18]
	cmp		r1, r0
	bls		_080baf6a
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080936ac
_080baf6a:
	add		r1, r7, #0x0
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	ldrb	r2, [r1, #0x0]
	add		r1, r2, #0x1
	add		r2, r1, #0x0
	strb	r2, [r0, #0x0]
	b		_080baf18

.incbin "base.gba", 0xBAF7A, 0x2

_080baf7c:	.4byte 0x0200CCC0
_080baf80:	.4byte 0x0200CD70

_080baf84:
	add		sp, #0x4
	pop		{ r4, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080badf4

	thumb_func_start sub_080baf8c
sub_080baf8c:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	str		r0, [r7, #0x0]
	ldr		r0, _080bafac
	ldr		r1, [r7, #0x0]
	str		r1, [r0, #0x44]
	ldr		r1, _080bafb0
	add		r0, r1, #0x0
	bl		sub_08091bb4
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBAFAA, 0x2

_080bafac:	.4byte 0x0200CD70
_080bafb0:	.4byte 0x080BA211
	thumb_func_end sub_080baf8c

	thumb_func_start sub_080bafb4
sub_080bafb4:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	str		r0, [r7, #0x0]
	ldr		r0, _080bafcc
	ldr		r1, [r7, #0x0]
	str		r1, [r0, #0x40]
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBAFCA, 0x2

_080bafcc:	.4byte 0x0200CD70
	thumb_func_end sub_080bafb4

	thumb_func_start sub_080bafd0
sub_080bafd0:
	push	{ r7, lr }
	sub		sp, #0x8
	mov		r7, sp
	add		r2, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r7, #0x0
	strb	r2, [r1, #0x0]
	add		r1, r7, #0x2
	strh	r0, [r1, #0x0]
	ldr		r0, _080bb004
	ldrb	r1, [r0, #0x9]
	cmp		r1, #0x0
	beq		_080bb008
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080bb008
	ldr		r1, _080bb004
	add		r0, r1, #0x0
	add		r1, #0x30
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080bb008
	mov		r0, #0x5
	b		_080bb058

.incbin "base.gba", 0xBB002, 0x2

_080bb004:	.4byte 0x0200CD70

_080bb008:
	add		r0, r7, #0x4
	ldr		r1, _080bb050
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _080bb050
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, _080bb054
	add		r1, r7, #0x0
	ldrb	r2, [r0, #0x9]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrb	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strb	r1, [r0, #0x9]
	ldr		r0, _080bb054
	add		r1, r7, #0x2
	ldrh	r2, [r0, #0x32]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x32]
	ldr		r0, _080bb050
	add		r1, r7, #0x4
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	mov		r0, #0x0
	b		_080bb058

.incbin "base.gba", 0xBB04E, 0x2

_080bb050:	.4byte 0x04000208
_080bb054:	.4byte 0x0200CD70

_080bb058:
	add		sp, #0x8
	pop		{ r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080bafd0

	thumb_func_start sub_080bb060
sub_080bb060:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r1, r7, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _080bb0a4
	ldr		r0, [r1, #0x0]
	ldr		r2, _080bb0a4
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x4]
	ldrb	r1, [r1, #0x5]
	orr		r0, r1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	beq		_080bb0ac
	ldr		r0, _080bb0a8
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x6
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0xf3
	mov		r1, #0x1
	bl		sub_080bab48
	mov		r0, #0x6
	b		_080bb0cc

.incbin "base.gba", 0xBB0A2, 0x2

_080bb0a4:	.4byte 0x0200CCD0
_080bb0a8:	.4byte 0x0200CD70

_080bb0ac:
	ldr		r0, _080bb0c8
	add		r1, r7, #0x0
	ldrh	r2, [r0, #0x18]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x18]
	mov		r0, #0x0
	b		_080bb0cc

.incbin "base.gba", 0xBB0C6, 0x2

_080bb0c8:	.4byte 0x0200CD70

_080bb0cc:
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080bb060

	thumb_func_start sub_080bb0d4
sub_080bb0d4:
	push	{ r7, lr }
	sub		sp, #0x4
	mov		r7, sp
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	ldr		r0, _080bb0f8
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0x9
	beq		_080bb0fc
	ldr		r0, _080bb0f8
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0xa
	beq		_080bb0fc
	ldr		r0, _080bb0f8
	ldrb	r1, [r0, #0x4]
	cmp		r1, #0xb
	beq		_080bb0fc
	b		_080bb120

_080bb0f8:	.4byte 0x0200CD70

_080bb0fc:
	ldr		r0, _080bb11c
	ldrh	r1, [r0, #0x14]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x7
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x14]
	mov		r0, #0xf3
	mov		r1, #0x1
	bl		sub_080bab48
	mov		r0, #0x7
	b		_080bb158

_080bb11c:	.4byte 0x0200CD70

_080bb120:
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080bb144
	ldr		r0, _080bb140
	ldrb	r1, [r0, #0xb]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x1
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0xb]
	b		_080bb150

.incbin "base.gba", 0xBB13E, 0x2

_080bb140:	.4byte 0x0200CD70

_080bb144:
	ldr		r0, _080bb154
	ldrb	r1, [r0, #0xb]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0xb]
_080bb150:
	mov		r0, #0x0
	b		_080bb158

_080bb154:	.4byte 0x0200CD70

_080bb158:
	add		sp, #0x4
	pop		{ r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080bb0d4

	thumb_func_start sub_080bb160
sub_080bb160:
	push	{ r7, lr }
	mov		r7, sp
	ldr		r0, _080bb18c
	ldrb	r1, [r0, #0x2]
	lsl		r2, r1, #0x18
	lsr		r0, r2, #0x18
	cmp		r0, #0x0
	beq		_080bb184
	ldr		r0, _080bb18c
	ldrb	r1, [r0, #0x2]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strb	r2, [r0, #0x2]
	mov		r0, #0x45
	mov		r1, #0x0
	bl		sub_080bab48
_080bb184:
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBB18A, 0x2

_080bb18c:	.4byte 0x0200CD70
	thumb_func_end sub_080bb160

	thumb_func_start sub_080bb190
sub_080bb190:
	push	{ r7, lr }
	mov		r7, sp
	ldr		r0, _080bb1ac
	ldrb	r1, [r0, #0x2]
	lsl		r2, r1, #0x18
	lsr		r0, r2, #0x18
	cmp		r0, #0x0
	bne		_080bb1b0
	mov		r0, #0x45
	mov		r1, #0x0
	bl		sub_080bab48
	b		_080bb1d0

.incbin "base.gba", 0xBB1AA, 0x2

_080bb1ac:	.4byte 0x0200CD70

_080bb1b0:
	ldr		r0, _080bb1d8
	ldrb	r1, [r0, #0x2]
	lsl		r2, r1, #0x18
	lsr		r0, r2, #0x18
	cmp		r0, #0x1
	bne		_080bb1d0
	ldr		r0, _080bb1d8
	ldrb	r1, [r0, #0x2]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	mov		r3, #0x2
	add		r1, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strb	r2, [r0, #0x2]
_080bb1d0:
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBB1D6, 0x2

_080bb1d8:	.4byte 0x0200CD70
	thumb_func_end sub_080bb190

	thumb_func_start sub_080bb1dc
sub_080bb1dc:
	push	{ r7, lr }
	mov		r7, sp
	ldr		r0, _080bb1ec
	ldrb	r1, [r0, #0x7]
	cmp		r1, #0x0
	bne		_080bb1f0
	b		_080bb2f6

.incbin "base.gba", 0xBB1EA, 0x2

_080bb1ec:	.4byte 0x0200CD70

_080bb1f0:
	ldr		r0, _080bb208
	ldrb	r1, [r0, #0x4]
	sub		r0, r1, #0x5
	cmp		r0, #0x6
	bls		_080bb1fc
	b		_080bb2f4
_080bb1fc:
	lsl		r1, r0, #0x2
	ldr		r2, _080bb20c
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	mov		pc, r1

.incbin "base.gba", 0xBB206, 0x2

_080bb208:	.4byte 0x0200CD70
_080bb20c:	.4byte 0x080bb210
_080bb210:	.4byte 0x080bb22c

.incbin "base.gba", 0xBB214, 0x18
	thumb_func_end sub_080bb1dc


.incbin "base.gba", 0xBB22C, 0xC8

_080bb2f4:

.incbin "base.gba", 0xBB2F4, 0x2
_080bb2f6:

.incbin "base.gba", 0xBB2F6, 0x6
	thumb_func_start sub_080bb2fc
sub_080bb2fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x14
	mov		r8, r1
	mov		r12, r2
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	add		r1, r3, #0x0
	ldr		r5, _080bb344
	add		r7, r5, #0x0
	add		r2, r5, #0x0
	mov		r0, #0x1
	and		r0, r3
	cmp		r0, #0x0
	beq		_080bb322
	ldr		r7, _080bb348
_080bb322:
	mov		r0, #0x2
	and		r0, r3
	cmp		r0, #0x0
	beq		_080bb32c
	ldr		r5, _080bb34c
_080bb32c:
	mov		r0, #0x4
	and		r0, r3
	cmp		r0, #0x0
	beq		_080bb336
	ldr		r2, _080bb350
_080bb336:
	cmp		r1, #0x7
	bhi		_080bb3f2
	mov		r4, #0x0
	ldr		r0, _080bb354
	ldr		r1, [r0, #0x0]
	add		r3, r0, #0x0
	b		_080bb3ec

_080bb344:	.4byte 0x0000FFFF
_080bb348:	.4byte 0x00007F7E
_080bb34c:	.4byte 0x00007F7C
_080bb350:	.4byte 0x00007F7A
_080bb354:	.4byte 0x0200CCD0

_080bb358:
	ldr		r1, [r3, #0x0]
	lsl		r0, r4, #0x5
	add		r0, r1, r0
	ldrh	r0, [r0, #0x18]
	cmp		r0, r7
	beq		_080bb36c
	cmp		r0, r5
	beq		_080bb36c
	cmp		r0, r2
	bne		_080bb3e6
_080bb36c:
	mov		r0, r12
	add		r1, r4, #0x0
	bl		sub_080bb57c
	add		r0, r4, #0x0
	mov		r1, sp
	bl		sub_080bb508
	mov		r5, #0x0
_080bb37e:
	mov		r0, sp
	add		r4, r0, r5
	add		r0, r4, #0x0
	bl		sub_080bb56c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r6, r0
	bne		_080bb3be
	add		r0, r4, #0x1
	bl		sub_080bb564
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	add		r0, r5, #0x2
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r4, #0x7
	bne		_080bb3ac
	mov		r0, #0x11
	sub		r0, r0, r5
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
_080bb3ac:
	mov		r1, sp
	add		r0, r1, r5
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_080bb53c
	lsl		r0, r4, #0x18
	asr		r0, r0, #0x18
	b		_080bb3f6
_080bb3be:
	add		r4, #0x1
	add		r0, r4, #0x0
	bl		sub_080bb564
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x7
	beq		_080bb3e0
	add		r0, r4, #0x0
	bl		sub_080bb564
	add		r1, r5, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0xf
	bls		_080bb37e
_080bb3e0:
	mov		r0, #0x2
	neg		r0, r0
	b		_080bb3f6
_080bb3e6:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
_080bb3ec:
	ldrb	r1, [r1, #0x8]
	cmp		r4, r1
	bcc		_080bb358
_080bb3f2:
	mov		r0, #0x1
	neg		r0, r0
_080bb3f6:
	add		sp, #0x14
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xBB402, 0x106
	thumb_func_end sub_080bb2fc

	thumb_func_start sub_080bb508
sub_080bb508:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	lsl		r4, r4, #0x18
	ldr		r6, _080bb538
	lsr		r4, r4, #0x13
	add		r4, #0x14
	ldr		r0, [r6, #0x0]
	add		r0, r0, r4
	add		r0, #0x6
	mov		r2, #0xd
	bl		sub_080bb53c
	ldr		r0, [r6, #0x0]
	add		r0, r0, r4
	add		r0, #0x15
	add		r5, #0xd
	add		r1, r5, #0x0
	mov		r2, #0x4
	bl		sub_080bb53c
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080bb538:	.4byte 0x0200CCD0
	thumb_func_end sub_080bb508

	thumb_func_start sub_080bb53c
sub_080bb53c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r3, #0x0
	cmp		r3, r2
	bcs		_080bb55e
_080bb54c:
	add		r1, r4, r3
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, r2
	bcc		_080bb54c
_080bb55e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080bb53c

	thumb_func_start sub_080bb564
sub_080bb564:
	ldrb	r0, [r0, #0x0]
	lsr		r0, r0, #0x5
	bx		lr

.incbin "base.gba", 0xBB56A, 0x2
	thumb_func_end sub_080bb564

	thumb_func_start sub_080bb56c
sub_080bb56c:
	ldrb	r2, [r0, #0x1]
	mov		r1, #0x1f
	and		r1, r2
	lsl		r1, r1, #0x8
	ldrb	r0, [r0, #0x0]
	orr		r0, r1
	bx		lr

.incbin "base.gba", 0xBB57A, 0x2
	thumb_func_end sub_080bb56c

	thumb_func_start sub_080bb57c
sub_080bb57c:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	lsl		r1, r1, #0x18
	ldr		r0, _080bb5f4
	lsr		r1, r1, #0x13
	add		r1, #0x14
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	add		r0, #0x19
	mov		r1, sp
	mov		r2, #0x4
	bl		sub_080bb53c
	mov		r0, sp
	ldrb	r2, [r0, #0x3]
	lsl		r1, r2, #0x18
	lsr		r0, r1, #0x1d
	add		r0, #0x3
	strb	r0, [r4, #0x0]
	lsr		r1, r1, #0x19
	mov		r0, #0xf
	and		r1, r0
	strb	r1, [r4, #0x1]
	mov		r3, #0x1
	add		r0, r3, #0x0
	and		r0, r2
	lsl		r0, r0, #0x4
	mov		r1, sp
	ldrb	r2, [r1, #0x2]
	lsr		r1, r2, #0x4
	orr		r0, r1
	strb	r0, [r4, #0x2]
	mov		r0, #0xf
	and		r0, r2
	lsl		r0, r0, #0x1
	mov		r1, sp
	ldrb	r5, [r1, #0x1]
	lsl		r1, r5, #0x18
	lsr		r2, r1, #0x1f
	orr		r0, r2
	strb	r0, [r4, #0x3]
	lsr		r1, r1, #0x19
	mov		r0, #0x3f
	and		r1, r0
	strb	r1, [r4, #0x4]
	and		r3, r5
	lsl		r3, r3, #0x5
	mov		r0, sp
	ldrb	r1, [r0, #0x0]
	lsr		r0, r1, #0x3
	orr		r3, r0
	strb	r3, [r4, #0x5]
	mov		r0, #0x7
	and		r0, r1
	strb	r0, [r4, #0x6]
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080bb5f4:	.4byte 0x0200CCD0
	thumb_func_end sub_080bb57c

	thumb_func_start sub_080bb5f8
sub_080bb5f8:
	svc		0xe
	bx		lr
	thumb_func_end sub_080bb5f8

	thumb_func_start sub_080bb5fc
sub_080bb5fc:
	svc		0xb
	bx		lr
	thumb_func_end sub_080bb5fc

	thumb_func_start sub_080bb600
sub_080bb600:
	svc		0x6
	bx		lr
	thumb_func_end sub_080bb600

	thumb_func_start sub_080bb604
sub_080bb604:
	svc		0x7
	bx		lr
	thumb_func_end sub_080bb604

	thumb_func_start sub_080bb608
sub_080bb608:
	svc		0x6
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0xBB60E, 0x2
	thumb_func_end sub_080bb608

	thumb_func_start sub_080bb610
sub_080bb610:
	svc		0x8
	bx		lr
	thumb_func_end sub_080bb610

	thumb_func_start sub_080bb614
sub_080bb614:
	ldr		r3, _080bb62c
	mov		r2, #0x0
	strb	r2, [r3, #0x0]
	ldr		r3, _080bb630
	mov		r2, #0x1
	strb	r2, [r3, #0x0]
	sub		r3, #0xfa
	mov		sp, r3
	mov		r2, #0x1
	bic		r0, r2
	svc		0x1
	svc		0x0
_080bb62c:
	lsl		r0, r1, #0x8
	lsl		r0, r0, #0x10
_080bb630:
	ldrb	r2, [r7, #0x1f]
	lsl		r0, r0, #0xc
	ldr		r3, _080bb648
	mov		r2, #0x0
	strb	r2, [r3, #0x0]
	ldr		r3, _080bb64c
	mov		r2, #0x0
	strb	r2, [r3, #0x0]
	sub		r3, #0xfa
	mov		sp, r3
	svc		0x1
	svc		0x0
_080bb648:
	lsl		r0, r1, #0x8
	lsl		r0, r0, #0x10
_080bb64c:
	ldrb	r2, [r7, #0x1f]
	lsl		r0, r0, #0xc
	thumb_func_end sub_080bb614

	thumb_func_start sub_080bb650
sub_080bb650:
	push	{ r4, r7, lr }
	sub		sp, #0x2c
	mov		r7, sp
	ldr		r0, _080bb6bc
	str		r0, [r7, #0x0]
	ldr		r0, _080bb6c0
	str		r0, [r7, #0x4]
	ldr		r0, _080bb6c4
	str		r0, [r7, #0x8]
	add		r0, r7, #0x0
	add		r0, #0xc
	ldr		r1, [r7, #0x4]
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x4]
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x8]
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x0]
	ldrh	r3, [r2, #0x6]
	mov		r4, #0x0
	and		r3, r4
	add		r4, r3, #0x0
	strh	r4, [r2, #0x6]
	ldrh	r2, [r1, #0x4]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	strh	r3, [r1, #0x4]
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	and		r1, r2
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x1c
	ldr		r1, _080bb6c8
	mov		r2, #0x8
	bl		sub_0808c818
	ldr		r0, _080bb6cc
	str		r0, [r7, #0x24]
	mov		r0, #0x1
	str		r0, [r7, #0x28]
	mov		r0, #0x0
	str		r0, [r7, #0x10]
_080bb6b4:
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x3
	bls		_080bb6d0
	b		_080bb700

_080bb6bc:	.4byte 0x09FE20F8
_080bb6c0:	.4byte 0x04000204
_080bb6c4:	.4byte 0x09FE2FFE
_080bb6c8:	.4byte 0x080dff50
_080bb6cc:	.4byte 0x09FD0000

_080bb6d0:
	add		r0, r7, #0x0
	add		r0, #0x14
	ldr		r1, [r7, #0x10]
	add		r2, r1, #0x0
	lsl		r1, r2, #0x1
	add		r0, r0, r1
	ldr		r1, [r7, #0x10]
	add		r2, r1, #0x0
	lsl		r1, r2, #0x1
	ldr		r2, [r7, #0x24]
	add		r1, r1, r2
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x10]
	add		r1, r0, #0x1
	str		r1, [r7, #0x10]
	b		_080bb6b4
_080bb700:
	mov		r0, #0x0
	str		r0, [r7, #0x10]
_080bb704:
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x3
	bls		_080bb70c
	b		_080bb756
_080bb70c:
	ldr		r0, [r7, #0x10]
	add		r1, r0, #0x0
	lsl		r0, r1, #0x1
	ldr		r1, [r7, #0x24]
	add		r0, r0, r1
	add		r1, r7, #0x0
	add		r1, #0x1c
	ldr		r2, [r7, #0x10]
	add		r3, r2, #0x0
	lsl		r2, r3, #0x1
	add		r1, r1, r2
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x10]
	add		r1, r0, #0x0
	lsl		r0, r1, #0x1
	ldr		r1, [r7, #0x24]
	add		r0, r0, r1
	add		r1, r7, #0x0
	add		r1, #0x1c
	ldr		r2, [r7, #0x10]
	add		r3, r2, #0x0
	lsl		r2, r3, #0x1
	add		r1, r1, r2
	ldrh	r0, [r0, #0x0]
	lsl		r2, r0, #0x10
	lsr		r0, r2, #0x10
	ldrh	r1, [r1, #0x0]
	cmp		r0, r1
	beq		_080bb74e
	mov		r0, #0x0
	str		r0, [r7, #0x28]
	b		_080bb756
_080bb74e:
	ldr		r0, [r7, #0x10]
	add		r1, r0, #0x1
	str		r1, [r7, #0x10]
	b		_080bb704
_080bb756:
	ldr		r0, [r7, #0x0]
	ldr		r1, [r7, #0x28]
	cmp		r1, #0x0
	beq		_080bb768
	ldr		r2, _080bb764
	add		r1, r2, #0x0
	b		_080bb76a

_080bb764:	.4byte 0x000001FD

_080bb768:
	mov		r1, #0xfd
_080bb76a:
	ldrh	r2, [r0, #0x2]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	orr		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x2]
	mov		r0, #0x0
	str		r0, [r7, #0x10]
_080bb77c:
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x3
	bls		_080bb784
	b		_080bb7a6
_080bb784:
	ldr		r0, [r7, #0x10]
	add		r1, r0, #0x0
	lsl		r0, r1, #0x1
	ldr		r1, [r7, #0x24]
	add		r0, r0, r1
	add		r1, r7, #0x0
	add		r1, #0x14
	ldr		r2, [r7, #0x10]
	add		r3, r2, #0x0
	lsl		r2, r3, #0x1
	add		r1, r1, r2
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x10]
	add		r1, r0, #0x1
	str		r1, [r7, #0x10]
	b		_080bb77c
_080bb7a6:
	ldr		r0, [r7, #0x8]
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x4]
	add		r1, r7, #0x0
	add		r1, #0xc
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	add		sp, #0x2c
	pop		{ r4, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBB7BE, 0x2
	thumb_func_end sub_080bb650

	thumb_func_start sub_080bb7c0
sub_080bb7c0:
	push	{ r4, r7, lr }
	sub		sp, #0x14
	mov		r7, sp
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	ldr		r0, _080bb840
	str		r0, [r7, #0x4]
	ldr		r0, [r7, #0x4]
	ldrh	r1, [r0, #0x2]
	lsl		r2, r1, #0x10
	lsr		r0, r2, #0x10
	lsl		r1, r0, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x14
	add		r0, r1, r2
	str		r0, [r7, #0x8]
	ldr		r0, _080bb844
	str		r0, [r7, #0xC]
	add		r0, r7, #0x0
	add		r0, #0x10
	ldr		r1, [r7, #0x4]
	ldrh	r2, [r1, #0x6]
	lsl		r1, r2, #0x10
	lsr		r2, r1, #0x10
	lsr		r1, r2, #0x1
	add		r3, r1, #0x0
	lsl		r2, r3, #0x10
	lsr		r1, r2, #0x10
	add		r2, r1, #0x0
	lsl		r1, r2, #0x1
	ldr		r2, [r7, #0x8]
	add		r1, r1, r2
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0xC]
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x10
	ldr		r1, [r7, #0x4]
	ldrh	r2, [r1, #0x6]
	mov		r3, #0x1
	add		r1, r2, #0x0
	and		r1, r3
	add		r3, r1, #0x0
	lsl		r2, r3, #0x10
	lsr		r1, r2, #0x10
	cmp		r1, #0x0
	beq		_080bb848
	add		r1, r7, #0x0
	add		r1, #0x10
	ldrh	r2, [r1, #0x0]
	mov		r3, #0xff
	add		r1, r2, #0x0
	and		r1, r3
	add		r2, r7, #0x0
	ldrb	r3, [r2, #0x0]
	add		r2, r3, #0x0
	lsl		r3, r2, #0x8
	add		r2, r3, #0x0
	add		r3, r1, #0x0
	orr		r3, r2
	add		r1, r3, #0x0
	b		_080bb860

_080bb840:	.4byte 0x09FE20F8
_080bb844:	.4byte 0x09FE2FFE

_080bb848:
	add		r2, r7, #0x0
	add		r2, #0x10
	ldrh	r3, [r2, #0x0]
	mov		r4, #0xff
	lsl		r4, r4, #0x8
	add		r2, r3, #0x0
	and		r2, r4
	add		r3, r7, #0x0
	ldrb	r4, [r3, #0x0]
	add		r3, r4, #0x0
	orr		r3, r2
	add		r1, r3, #0x0
_080bb860:
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x4]
	ldrh	r1, [r0, #0x6]
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
	lsr		r0, r1, #0x1
	add		r2, r0, #0x0
	lsl		r1, r2, #0x10
	lsr		r0, r1, #0x10
	add		r1, r0, #0x0
	lsl		r0, r1, #0x1
	ldr		r1, [r7, #0x8]
	add		r0, r0, r1
	add		r1, r7, #0x0
	add		r1, #0x10
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r1, [r7, #0x4]
	ldr		r0, [r7, #0x4]
	ldr		r1, [r7, #0x4]
	ldrh	r2, [r1, #0x6]
	add		r1, r2, #0x1
	ldrh	r2, [r0, #0x6]
	mov		r3, #0x0
	and		r2, r3
	add		r3, r2, #0x0
	add		r2, r3, #0x0
	orr		r2, r1
	add		r1, r2, #0x0
	strh	r1, [r0, #0x6]
	ldr		r0, [r7, #0xC]
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		sp, #0x14
	pop		{ r4, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBB8AA, 0x2
	thumb_func_end sub_080bb7c0

	thumb_func_start sub_080bb8ac
sub_080bb8ac:
	push	{ r7, lr }
	sub		sp, #0x10
	mov		r7, sp
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	ldr		r0, _080bb900
	str		r0, [r7, #0x4]
	add		r0, r7, #0x0
	add		r0, #0x8
	ldr		r1, [r7, #0x4]
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x4]
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080bb7c0
	ldr		r0, [r7, #0x4]
	add		r1, r7, #0x0
	add		r1, #0x8
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _080bb904
	str		r0, [r7, #0xC]
	ldr		r1, [r7, #0xC]
	ldrh	r0, [r1, #0x6]
	ldr		r1, [r7, #0xC]
	ldrh	r2, [r1, #0x4]
	sub		r1, r2, #0x1
	lsl		r2, r1, #0x10
	lsr		r1, r2, #0x10
	cmp		r0, r1
	bne		_080bb8f8
	bl		sub_080bba78
_080bb8f8:
	add		sp, #0x10
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

_080bb900:	.4byte 0x04000204
_080bb904:	.4byte 0x09FE20F8
	thumb_func_end sub_080bb8ac

	thumb_func_start sub_080bb908
sub_080bb908:
	push	{ r7, lr }
	sub		sp, #0x10
	mov		r7, sp
	str		r0, [r7, #0x0]
	ldr		r0, _080bb934
	str		r0, [r7, #0x4]
	ldr		r0, _080bb938
	str		r0, [r7, #0x8]
	add		r0, r7, #0x0
	add		r0, #0xc
	ldr		r1, [r7, #0x8]
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x8]
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
_080bb928:
	ldr		r0, [r7, #0x0]
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080bb93c
	b		_080bb94e

.incbin "base.gba", 0xBB932, 0x2

_080bb934:	.4byte 0x09FE20F8
_080bb938:	.4byte 0x04000204

_080bb93c:
	ldr		r0, [r7, #0x0]
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	bl		sub_080bb8ac
	ldr		r0, [r7, #0x0]
	add		r1, r0, #0x1
	str		r1, [r7, #0x0]
	b		_080bb928
_080bb94e:
	ldr		r0, [r7, #0x8]
	add		r1, r7, #0x0
	add		r1, #0xc
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	add		sp, #0x10
	pop		{ r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080bb908

	thumb_func_start sub_080bb960
sub_080bb960:
	push	{ r0, r1, r2, r3 }
	push	{ r7, lr }
	sub		sp, #0x104
	mov		r7, sp
	mov		r1, #0x88
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	add		r1, r7, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r2, r7, r3
	str		r0, [r2, #0x0]
	add		r0, r7, #0x0
	add		r1, r7, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r3, r7, r1
	ldr		r2, [r3, #0x0]
	mov		r3, #0x86
	lsl		r3, r3, #0x1
	add		r3, r3, r7
	ldr		r1, [r3, #0x0]
	bl		sub_080be948
	add		r1, r7, #0x0
	add		r0, r1, #0x0
	bl		sub_080bb908
	add		sp, #0x104
	pop		{ r7 }
	pop		{ r3 }
	add		sp, #0x10
	bx		r3

.incbin "base.gba", 0xBB9A2, 0x2
	thumb_func_end sub_080bb960

	thumb_func_start sub_080bb9a4
sub_080bb9a4:
	push	{ r4, r7, lr }
	sub		sp, #0x20
	mov		r7, sp
	str		r0, [r7, #0x0]
	ldr		r0, _080bba08
	str		r0, [r7, #0x18]
	ldr		r0, _080bba0c
	str		r0, [r7, #0x1C]
	ldr		r0, _080bba10
	str		r0, [r7, #0x4]
	ldr		r0, _080bba14
	str		r0, [r7, #0x8]
	add		r0, r7, #0x0
	add		r0, #0xc
	ldr		r1, [r7, #0x8]
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _080bba18
	str		r0, [r7, #0x10]
	add		r0, r7, #0x0
	add		r0, #0x14
	ldr		r1, [r7, #0x10]
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x8]
	add		r1, r7, #0x0
	add		r1, #0xc
	ldrh	r2, [r1, #0x0]
	ldr		r3, _080bba1c
	add		r1, r2, #0x0
	and		r1, r3
	add		r2, r1, #0x0
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x10]
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_080bba36
_080bb9f2:
	ldr		r1, [r7, #0x1C]
	ldr		r0, [r7, #0x1C]
	ldrh	r1, [r1, #0x6]
	lsl		r2, r1, #0x10
	lsr		r1, r2, #0x10
	ldrh	r0, [r0, #0x4]
	lsl		r2, r0, #0x10
	lsr		r0, r2, #0x10
	cmp		r1, r0
	bne		_080bba20
	b		_080bba34

_080bba08:	.4byte 0x09FE2FFE
_080bba0c:	.4byte 0x09FE20F8
_080bba10:	.4byte 0x09FE209D
_080bba14:	.4byte 0x04000208
_080bba18:	.4byte 0x04000204
_080bba1c:	.4byte 0x0000FFFE

_080bba20:
	ldr		r0, [r7, #0x18]
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	ldr		r4, [r7, #0x4]
	bl		sub_080bbc80
	ldr		r0, [r7, #0x18]
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	b		_080bb9f2
_080bba34:
	b		_080bba5c
_080bba36:
	ldr		r1, [r7, #0x1C]
	ldr		r0, [r7, #0x1C]
	ldrh	r1, [r1, #0x6]
	lsl		r2, r1, #0x10
	lsr		r1, r2, #0x10
	ldrh	r0, [r0, #0x4]
	lsl		r2, r0, #0x10
	lsr		r0, r2, #0x10
	cmp		r1, r0
	beq		_080bba5c
	ldr		r0, [r7, #0x18]
	mov		r1, #0x20
	strh	r1, [r0, #0x0]
	ldr		r4, [r7, #0x4]
	bl		sub_080bbc80
	ldr		r0, [r7, #0x18]
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
_080bba5c:
	ldr		r0, [r7, #0x10]
	add		r1, r7, #0x0
	add		r1, #0x14
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x8]
	add		r1, r7, #0x0
	add		r1, #0xc
	ldrh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	add		sp, #0x20
	pop		{ r4, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080bb9a4

	thumb_func_start sub_080bba78
sub_080bba78:
	push	{ r7, lr }
	mov		r7, sp
	mov		r0, #0x0
	bl		sub_080bb9a4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080bba78

	thumb_func_start sub_080bba88
sub_080bba88:
	push	{ r7, lr }
	mov		r7, sp
	mov		r0, #0x1
	bl		sub_080bb9a4
	pop		{ r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080bba88

	thumb_func_start sub_080bba98
sub_080bba98:
	push	{ r7, lr }
	sub		sp, #0x10
	mov		r7, sp
	str		r0, [r7, #0x0]
	str		r1, [r7, #0x4]
	str		r2, [r7, #0x8]
	str		r3, [r7, #0xc]
	ldr		r0, [r7, #0xc]
	cmp		r0, #0x0
	beq		_080bbac4
	ldr		r0, _080bbac0
	ldr		r2, [r7, #0x4]
	ldr		r3, [r7, #0x8]
	ldr		r1, [r7, #0x0]
	bl		sub_080bb960
	bl		sub_080bba88
.incbin "base.gba", 0xBBABC, 0x4
_080bbac0:
.incbin "base.gba", 0xBBAC0, 0x4
_080bbac4:
	ldr		r0, _080bbad8
	ldr		r2, [r7, #0x4]
	ldr		r3, [r7, #0x8]
	ldr		r1, [r7, #0x0]
	bl		sub_080bb960
	add		sp, #0x10
	pop		{ r7 }
	pop		{ r0 }
	bx		r0

_080bbad8:	.4byte 0x080dff90 @ WARING FILE=[%s] LINE=[%d]  EXP=[%s] 

.incbin "base.gba", 0xbbadc, 0x2
	thumb_func_end sub_080bba98


.incbin "base.gba", 0xBBADE, 0x22
	thumb_func_start sub_080bbb00
sub_080bbb00:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x80
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r2, _080bbb2c
	ldrh	r0, [r2, #0x0]
	ldr		r1, _080bbb30
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r3, _080bbb34
	mov		r0, #0x1
	bic		r3, r0
	mov		r2, sp
	ldr		r0, _080bbb38
	ldr		r1, _080bbb34
	sub		r0, r0, r1
	lsl		r0, r0, #0xf
	b		_080bbb48

.incbin "base.gba", 0xBBB2A, 0x2

_080bbb2c:	.4byte 0x04000204
_080bbb30:	.4byte 0x0000FFFC
_080bbb34:	.4byte 0x080BBADD
_080bbb38:	.4byte 0x080BBB01

_080bbb3c:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	sub		r0, r1, #0x1
	lsl		r0, r0, #0x10
_080bbb48:
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080bbb3c
	mov		r3, sp
	add		r3, #0x1
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080bbc7c
	add		sp, #0x80
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080bbb00

	thumb_func_start sub_080bbb64
sub_080bbb64:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r3, r2, #0x0
	ldr		r2, _080bbb9c
	ldrh	r0, [r2, #0x0]
	ldr		r1, _080bbba0
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	sub		r3, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r3, r0
	beq		_080bbb94
	add		r1, r0, #0x0
_080bbb86:
	ldrb	r0, [r5, #0x0]
	strb	r0, [r4, #0x0]
	add		r5, #0x1
	add		r4, #0x1
	sub		r3, #0x1
	cmp		r3, r1
	bne		_080bbb86
_080bbb94:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xBBB9A, 0x2

_080bbb9c:	.4byte 0x04000204
_080bbba0:	.4byte 0x0000FFFC

.incbin "base.gba", 0xBBBA4, 0x2
	thumb_func_end sub_080bbb64


.incbin "base.gba", 0xBBBA6, 0x2E
	thumb_func_start sub_080bbbd4
sub_080bbbd4:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc0
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r2, _080bbc00
	ldrh	r0, [r2, #0x0]
	ldr		r1, _080bbc04
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r3, _080bbc08
	mov		r0, #0x1
	bic		r3, r0
	mov		r2, sp
	ldr		r0, _080bbc0c
	ldr		r1, _080bbc08
	sub		r0, r0, r1
	lsl		r0, r0, #0xf
	b		_080bbc1c

.incbin "base.gba", 0xBBBFE, 0x2

_080bbc00:	.4byte 0x04000204
_080bbc04:	.4byte 0x0000FFFC
_080bbc08:	.4byte 0x080BBBA5
_080bbc0c:	.4byte 0x080BBBD5

_080bbc10:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	sub		r0, r1, #0x1
	lsl		r0, r0, #0x10
_080bbc1c:
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080bbc10
	mov		r3, sp
	add		r3, #0x1
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080bbc7c
	add		sp, #0xc0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080bbbd4

	thumb_func_start sub_080bbc38
sub_080bbc38:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	mov		r7, #0x0
	b		_080bbc4a
_080bbc44:
	add		r0, r7, #0x1
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
_080bbc4a:
	cmp		r7, #0x2
	bhi		_080bbc68
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_080bbb64
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_080bbbd4
	add		r3, r0, #0x0
	cmp		r3, #0x0
	bne		_080bbc44
_080bbc68:
	add		r0, r3, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080bbc38

	thumb_func_start sub_080bbc70
sub_080bbc70:
	bx		r0

.incbin "base.gba", 0xBBC72, 0x2
	thumb_func_end sub_080bbc70

	thumb_func_start sub_080bbc74
sub_080bbc74:
	bx		r1

.incbin "base.gba", 0xBBC76, 0x2
	thumb_func_end sub_080bbc74

	thumb_func_start sub_080bbc78
sub_080bbc78:
	bx		r2

.incbin "base.gba", 0xBBC7A, 0x2
	thumb_func_end sub_080bbc78

	thumb_func_start sub_080bbc7c
sub_080bbc7c:
	bx		r3

.incbin "base.gba", 0xBBC7E, 0x2
	thumb_func_end sub_080bbc7c

	thumb_func_start sub_080bbc80
sub_080bbc80:
	bx		r4

.incbin "base.gba", 0xBBC82, 0x2
	thumb_func_end sub_080bbc80

	thumb_func_start sub_080bbc84
sub_080bbc84:
	bx		r5

.incbin "base.gba", 0xBBC86, 0xA
	thumb_func_end sub_080bbc84

	thumb_func_start sub_080bbc90
sub_080bbc90:
	bx		r8

.incbin "base.gba", 0xBBC92, 0x1A
	thumb_func_end sub_080bbc90

	thumb_func_start sub_080bbcac
sub_080bbcac:
	cmp		r1, #0x0
	beq		_080bbd34
	push	{ r4 }
	add		r4, r0, #0x0
	eor		r4, r1
	mov		r12, r4
	mov		r3, #0x1
	mov		r2, #0x0
	cmp		r1, #0x0
	bpl		_080bbcc2
	neg		r1, r1
_080bbcc2:
	cmp		r0, #0x0
	bpl		_080bbcc8
	neg		r0, r0
_080bbcc8:
	cmp		r0, r1
	bcc		_080bbd26
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_080bbcd0:
	cmp		r1, r4
	bcs		_080bbcde
	cmp		r1, r0
	bcs		_080bbcde
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_080bbcd0
_080bbcde:
	lsl		r4, r4, #0x3
_080bbce0:
	cmp		r1, r4
	bcs		_080bbcee
	cmp		r1, r0
	bcs		_080bbcee
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_080bbce0
_080bbcee:
	cmp		r0, r1
	bcc		_080bbcf6
	sub		r0, r0, r1
	orr		r2, r3
_080bbcf6:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_080bbd02
	sub		r0, r0, r4
	lsr		r4, r3, #0x1
	orr		r2, r4
_080bbd02:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_080bbd0e
	sub		r0, r0, r4
	lsr		r4, r3, #0x2
	orr		r2, r4
_080bbd0e:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_080bbd1a
	sub		r0, r0, r4
	lsr		r4, r3, #0x3
	orr		r2, r4
_080bbd1a:
	cmp		r0, #0x0
	beq		_080bbd26
	lsr		r3, r3, #0x4
	beq		_080bbd26
	lsr		r1, r1, #0x4
	b		_080bbcee
_080bbd26:
	add		r0, r2, #0x0
	mov		r4, r12
	cmp		r4, #0x0
	bpl		_080bbd30
	neg		r0, r0
_080bbd30:
	pop		{ r4 }
	mov		pc, lr
_080bbd34:
	push	{ lr }
	bl		sub_080bbd40
	mov		r0, #0x0
	pop		{ pc }

.incbin "base.gba", 0xBBD3E, 0x2
	thumb_func_end sub_080bbcac

	thumb_func_start sub_080bbd40
sub_080bbd40:
	mov		pc, lr

.incbin "base.gba", 0xBBD42, 0x2
	thumb_func_end sub_080bbd40

	thumb_func_start sub_080bbd44
sub_080bbd44:
	mov		r3, #0x1
	cmp		r1, #0x0
	beq		_080bbe08
	bpl		_080bbd4e
	neg		r1, r1
_080bbd4e:
	push	{ r4 }
	push	{ r0 }
	cmp		r0, #0x0
	bpl		_080bbd58
	neg		r0, r0
_080bbd58:
	cmp		r0, r1
	bcc		_080bbdfc
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_080bbd60:
	cmp		r1, r4
	bcs		_080bbd6e
	cmp		r1, r0
	bcs		_080bbd6e
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_080bbd60
_080bbd6e:
	lsl		r4, r4, #0x3
_080bbd70:
	cmp		r1, r4
	bcs		_080bbd7e
	cmp		r1, r0
	bcs		_080bbd7e
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_080bbd70
_080bbd7e:
	mov		r2, #0x0
	cmp		r0, r1
	bcc		_080bbd86
	sub		r0, r0, r1
_080bbd86:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_080bbd98
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x1
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_080bbd98:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_080bbdaa
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x2
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_080bbdaa:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_080bbdbc
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x3
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_080bbdbc:
	mov		r12, r3
	cmp		r0, #0x0
	beq		_080bbdca
	lsr		r3, r3, #0x4
	beq		_080bbdca
	lsr		r1, r1, #0x4
	b		_080bbd7e
_080bbdca:
	mov		r4, #0xe
	lsl		r4, r4, #0x1c
	and		r2, r4
	beq		_080bbdfc
	mov		r3, r12
	mov		r4, #0x3
	ror		r3, r4
	tst		r2, r3
	beq		_080bbde0
	lsr		r4, r1, #0x3
	add		r0, r0, r4
_080bbde0:
	mov		r3, r12
	mov		r4, #0x2
	ror		r3, r4
	tst		r2, r3
	beq		_080bbdee
	lsr		r4, r1, #0x2
	add		r0, r0, r4
_080bbdee:
	mov		r3, r12
	mov		r4, #0x1
	ror		r3, r4
	tst		r2, r3
	beq		_080bbdfc
	lsr		r4, r1, #0x1
	add		r0, r0, r4
_080bbdfc:
	pop		{ r4 }
	cmp		r4, #0x0
	bpl		_080bbe04
	neg		r0, r0
_080bbe04:
	pop		{ r4 }
	mov		pc, lr
_080bbe08:
	push	{ lr }
	bl		sub_080bbd40
	mov		r0, #0x0
	pop		{ pc }

.incbin "base.gba", 0xBBE12, 0x2
	thumb_func_end sub_080bbd44

	thumb_func_start sub_080bbe14
sub_080bbe14:
	push	{ r4, lr }
	neg		r2, r0
	add		r3, r2, #0x0
	neg		r1, r1
	cmp		r2, #0x0
	beq		_080bbe22
	sub		r1, #0x1
_080bbe22:
	add		r4, r1, #0x0
	add		r1, r4, #0x0
	add		r0, r3, #0x0
	pop		{ r4, pc }

.incbin "base.gba", 0xBBE2A, 0xA
	thumb_func_end sub_080bbe14

	thumb_func_start sub_080bbe34
sub_080bbe34:
	cmp		r1, #0x0
	beq		_080bbea2
	mov		r3, #0x1
	mov		r2, #0x0
	push	{ r4 }
	cmp		r0, r1
	bcc		_080bbe9c
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_080bbe46:
	cmp		r1, r4
	bcs		_080bbe54
	cmp		r1, r0
	bcs		_080bbe54
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_080bbe46
_080bbe54:
	lsl		r4, r4, #0x3
_080bbe56:
	cmp		r1, r4
	bcs		_080bbe64
	cmp		r1, r0
	bcs		_080bbe64
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_080bbe56
_080bbe64:
	cmp		r0, r1
	bcc		_080bbe6c
	sub		r0, r0, r1
	orr		r2, r3
_080bbe6c:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_080bbe78
	sub		r0, r0, r4
	lsr		r4, r3, #0x1
	orr		r2, r4
_080bbe78:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_080bbe84
	sub		r0, r0, r4
	lsr		r4, r3, #0x2
	orr		r2, r4
_080bbe84:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_080bbe90
	sub		r0, r0, r4
	lsr		r4, r3, #0x3
	orr		r2, r4
_080bbe90:
	cmp		r0, #0x0
	beq		_080bbe9c
	lsr		r3, r3, #0x4
	beq		_080bbe9c
	lsr		r1, r1, #0x4
	b		_080bbe64
_080bbe9c:
	add		r0, r2, #0x0
	pop		{ r4 }
	mov		pc, lr
_080bbea2:
	push	{ lr }
	bl		sub_080bbd40
	mov		r0, #0x0
	pop		{ pc }
	thumb_func_end sub_080bbe34

	thumb_func_start sub_080bbeac
sub_080bbeac:
	cmp		r1, #0x0
	beq		_080bbf62
	mov		r3, #0x1
	cmp		r0, r1
	bcs		_080bbeb8
	mov		pc, lr
_080bbeb8:
	push	{ r4 }
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_080bbebe:
	cmp		r1, r4
	bcs		_080bbecc
	cmp		r1, r0
	bcs		_080bbecc
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_080bbebe
_080bbecc:
	lsl		r4, r4, #0x3
_080bbece:
	cmp		r1, r4
	bcs		_080bbedc
	cmp		r1, r0
	bcs		_080bbedc
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_080bbece
_080bbedc:
	mov		r2, #0x0
	cmp		r0, r1
	bcc		_080bbee4
	sub		r0, r0, r1
_080bbee4:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_080bbef6
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x1
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_080bbef6:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_080bbf08
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x2
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_080bbf08:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_080bbf1a
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x3
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_080bbf1a:
	mov		r12, r3
	cmp		r0, #0x0
	beq		_080bbf28
	lsr		r3, r3, #0x4
	beq		_080bbf28
	lsr		r1, r1, #0x4
	b		_080bbedc
_080bbf28:
	mov		r4, #0xe
	lsl		r4, r4, #0x1c
	and		r2, r4
	bne		_080bbf34
	pop		{ r4 }
	mov		pc, lr
_080bbf34:
	mov		r3, r12
	mov		r4, #0x3
	ror		r3, r4
	tst		r2, r3
	beq		_080bbf42
	lsr		r4, r1, #0x3
	add		r0, r0, r4
_080bbf42:
	mov		r3, r12
	mov		r4, #0x2
	ror		r3, r4
	tst		r2, r3
	beq		_080bbf50
	lsr		r4, r1, #0x2
	add		r0, r0, r4
_080bbf50:
	mov		r3, r12
	mov		r4, #0x1
	ror		r3, r4
	tst		r2, r3
	beq		_080bbf5e
	lsr		r4, r1, #0x1
	add		r0, r0, r4
_080bbf5e:
	pop		{ r4 }
	mov		pc, lr
_080bbf62:
	push	{ lr }
	bl		sub_080bbd40
	mov		r0, #0x0
	pop		{ pc }
	thumb_func_end sub_080bbeac

	thumb_func_start sub_080bbf6c
sub_080bbf6c:
	push	{ r4, r5, r6, lr }
	ldr		r2, [r0, #0xc]
	ldr		r6, [r0, #0x4]
	mov		r5, #0x0
	mov		r1, #0x0
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x1
	bhi		_080bbf7e
	mov		r1, #0x1
_080bbf7e:
	cmp		r1, #0x0
	beq		_080bbf8c
	mov		r5, #0xff
	mov		r0, #0x80
	lsl		r0, r0, #0xd
	orr		r2, r0
	b		_080bbff2
_080bbf8c:
	mov		r1, #0x0
	cmp		r3, #0x4
	bne		_080bbf94
	mov		r1, #0x1
_080bbf94:
	cmp		r1, #0x0
	bne		_080bbfc8
	mov		r1, #0x0
	cmp		r3, #0x2
	bne		_080bbfa0
	mov		r1, #0x1
_080bbfa0:
	cmp		r1, #0x0
	beq		_080bbfa8
	mov		r2, #0x0
	b		_080bbff2
_080bbfa8:
	cmp		r2, #0x0
	beq		_080bbff2
	ldr		r0, [r0, #0x8]
	mov		r3, #0x7e
	neg		r3, r3
	cmp		r0, r3
	bge		_080bbfc4
	sub		r0, r3, r0
	cmp		r0, #0x19
	ble		_080bbfc0
	mov		r2, #0x0
	b		_080bbff0
_080bbfc0:
	lsr		r2, r0
	b		_080bbff0
_080bbfc4:
	cmp		r0, #0x7f
	ble		_080bbfce
_080bbfc8:
	mov		r5, #0xff
	mov		r2, #0x0
	b		_080bbff2
_080bbfce:
	add		r5, r0, #0x0
	add		r5, #0x7f
	mov		r0, #0x7f
	and		r0, r2
	cmp		r0, #0x40
	bne		_080bbfe6
	mov		r0, #0x80
	and		r0, r2
	cmp		r0, #0x0
	beq		_080bbfe8
	add		r2, #0x40
	b		_080bbfe8
_080bbfe6:
	add		r2, #0x3f
_080bbfe8:
	cmp		r2, #0x0
	bge		_080bbff0
	lsr		r2, r2, #0x1
	add		r5, #0x1
_080bbff0:
	lsr		r2, r2, #0x7
_080bbff2:
	ldr		r0, _080bc014
	and		r2, r0
	ldr		r0, _080bc018
	and		r4, r0
	orr		r4, r2
	mov		r0, #0xff
	and		r5, r0
	lsl		r1, r5, #0x17
	ldr		r0, _080bc01c
	and		r4, r0
	orr		r4, r1
	lsl		r1, r6, #0x1f
	ldr		r0, _080bc020
	and		r4, r0
	orr		r4, r1
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, pc }

_080bc014:	.4byte 0x007FFFFF
_080bc018:	.4byte 0xFF800000
_080bc01c:	.4byte 0x807FFFFF
_080bc020:	.4byte 0x7FFFFFFF
	thumb_func_end sub_080bbf6c

	thumb_func_start sub_080bc024
sub_080bc024:
	push	{ r4, lr }
	add		r3, r1, #0x0
	ldr		r0, [r0, #0x0]
	lsl		r1, r0, #0x9
	lsr		r2, r1, #0x9
	lsl		r1, r0, #0x1
	lsr		r1, r1, #0x18
	lsr		r0, r0, #0x1f
	str		r0, [r3, #0x4]
	cmp		r1, #0x0
	bne		_080bc068
	cmp		r2, #0x0
	bne		_080bc044
	mov		r0, #0x2
	str		r0, [r3, #0x0]
	b		_080bc09c
_080bc044:
	add		r4, r1, #0x0
	sub		r4, #0x7e
	str		r4, [r3, #0x8]
	lsl		r2, r2, #0x7
	mov		r0, #0x3
	str		r0, [r3, #0x0]
	ldr		r1, _080bc064
	cmp		r2, r1
	bhi		_080bc084
	add		r0, r4, #0x0
_080bc058:
	lsl		r2, r2, #0x1
	sub		r0, #0x1
	cmp		r2, r1
	bls		_080bc058
	str		r0, [r3, #0x8]
	b		_080bc084

_080bc064:	.4byte 0x3FFFFFFF

_080bc068:
	cmp		r1, #0xff
	bne		_080bc088
	cmp		r2, #0x0
	bne		_080bc076
	mov		r0, #0x4
	str		r0, [r3, #0x0]
	b		_080bc09c
_080bc076:
	mov		r0, #0x80
	lsl		r0, r0, #0xd
	and		r0, r2
	cmp		r0, #0x0
	beq		_080bc082
	mov		r0, #0x1
_080bc082:
	str		r0, [r3, #0x0]
_080bc084:
	str		r2, [r3, #0xc]
	b		_080bc09c
_080bc088:
	add		r0, r1, #0x0
	sub		r0, #0x7f
	str		r0, [r3, #0x8]
	mov		r0, #0x3
	str		r0, [r3, #0x0]
	lsl		r0, r2, #0x7
	mov		r1, #0x80
	lsl		r1, r1, #0x17
	orr		r0, r1
	str		r0, [r3, #0xc]
_080bc09c:
	pop		{ r4, pc }

.incbin "base.gba", 0xBC09E, 0x2
	thumb_func_end sub_080bc024

	thumb_func_start sub_080bc0a0
sub_080bc0a0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r5, r2, #0x0
	mov		r0, #0x0
	ldr		r2, [r6, #0x0]
	cmp		r2, #0x1
	bhi		_080bc0b6
	mov		r0, #0x1
_080bc0b6:
	cmp		r0, #0x0
	beq		_080bc0be
_080bc0ba:
	add		r0, r6, #0x0
	b		_080bc214
_080bc0be:
	mov		r1, #0x0
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x1
	bhi		_080bc0c8
	mov		r1, #0x1
_080bc0c8:
	cmp		r1, #0x0
	bne		_080bc13c
	mov		r1, #0x0
	cmp		r2, #0x4
	bne		_080bc0d4
	mov		r1, #0x1
_080bc0d4:
	cmp		r1, #0x0
	beq		_080bc0f4
	mov		r1, #0x0
	cmp		r0, #0x4
	bne		_080bc0e0
	mov		r1, #0x1
_080bc0e0:
	cmp		r1, #0x0
	beq		_080bc0ba
	ldr		r1, [r6, #0x4]
	ldr		r0, [r7, #0x4]
	cmp		r1, r0
	beq		_080bc0ba
	ldr		r0, _080bc0f0
	b		_080bc214

_080bc0f0:	.4byte 0x0200CBB0

_080bc0f4:
	mov		r1, #0x0
	cmp		r0, #0x4
	bne		_080bc0fc
	mov		r1, #0x1
_080bc0fc:
	cmp		r1, #0x0
	bne		_080bc13c
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_080bc108
	mov		r1, #0x1
_080bc108:
	cmp		r1, #0x0
	beq		_080bc12e
	mov		r0, #0x0
	cmp		r2, #0x2
	bne		_080bc114
	mov		r0, #0x1
_080bc114:
	cmp		r0, #0x0
	beq		_080bc0ba
	add		r1, r5, #0x0
	add		r0, r6, #0x0
	ldmia	r0!, { r2, r3, r4 }
	stmia	r1!, {  r2, r3, r4 }
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r6, #0x4]
	ldr		r1, [r7, #0x4]
	and		r0, r1
	str		r0, [r5, #0x4]
	b		_080bc212
_080bc12e:
	mov		r1, #0x0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x2
	bne		_080bc138
	mov		r1, #0x1
_080bc138:
	cmp		r1, #0x0
	beq		_080bc140
_080bc13c:
	add		r0, r7, #0x0
	b		_080bc214
_080bc140:
	ldr		r1, [r6, #0x8]
	ldr		r3, [r7, #0x8]
	ldr		r2, [r6, #0xc]
	ldr		r4, [r7, #0xc]
	sub		r0, r1, r3
	cmp		r0, #0x0
	bge		_080bc150
	neg		r0, r0
_080bc150:
	cmp		r0, #0x1f
	bgt		_080bc194
	ldr		r6, [r6, #0x4]
	ldr		r7, [r7, #0x4]
	mov		r8, r7
	cmp		r1, r3
	ble		_080bc176
	mov		r7, #0x1
	mov		r12, r7
	sub		r3, r1, r3
_080bc164:
	sub		r3, #0x1
	add		r0, r4, #0x0
	mov		r7, r12
	and		r0, r7
	lsr		r4, r4, #0x1
	orr		r4, r0
	cmp		r3, #0x0
	bne		_080bc164
	add		r3, r1, #0x0
_080bc176:
	cmp		r3, r1
	ble		_080bc1a6
	mov		r0, #0x1
	mov		r12, r0
	sub		r1, r3, r1
_080bc180:
	sub		r1, #0x1
	add		r0, r2, #0x0
	mov		r7, r12
	and		r0, r7
	lsr		r2, r2, #0x1
	orr		r2, r0
	cmp		r1, #0x0
	bne		_080bc180
	add		r1, r3, #0x0
	b		_080bc1a6
_080bc194:
	cmp		r1, r3
	ble		_080bc19c
	mov		r4, #0x0
	b		_080bc1a0
_080bc19c:
	add		r1, r3, #0x0
	mov		r2, #0x0
_080bc1a0:
	ldr		r6, [r6, #0x4]
	ldr		r7, [r7, #0x4]
	mov		r8, r7
_080bc1a6:
	cmp		r6, r8
	beq		_080bc1f0
	cmp		r6, #0x0
	beq		_080bc1b2
	sub		r3, r4, r2
	b		_080bc1b4
_080bc1b2:
	sub		r3, r2, r4
_080bc1b4:
	cmp		r3, #0x0
	blt		_080bc1c2
	mov		r0, #0x0
	str		r0, [r5, #0x4]
	str		r1, [r5, #0x8]
	str		r3, [r5, #0xc]
	b		_080bc1cc
_080bc1c2:
	mov		r0, #0x1
	str		r0, [r5, #0x4]
	str		r1, [r5, #0x8]
	neg		r0, r3
	str		r0, [r5, #0xc]
_080bc1cc:
	ldr		r1, [r5, #0xc]
	sub		r0, r1, #0x1
	ldr		r2, _080bc1ec
	cmp		r0, r2
	bhi		_080bc1f8
_080bc1d6:
	lsl		r0, r1, #0x1
	str		r0, [r5, #0xc]
	ldr		r1, [r5, #0x8]
	sub		r1, #0x1
	str		r1, [r5, #0x8]
	add		r1, r0, #0x0
	sub		r0, r1, #0x1
	cmp		r0, r2
	bls		_080bc1d6
	b		_080bc1f8

.incbin "base.gba", 0xBC1EA, 0x2

_080bc1ec:	.4byte 0x3FFFFFFE

_080bc1f0:
	str		r6, [r5, #0x4]
	str		r1, [r5, #0x8]
	add		r0, r2, r4
	str		r0, [r5, #0xc]
_080bc1f8:
	mov		r0, #0x3
	str		r0, [r5, #0x0]
	ldr		r1, [r5, #0xc]
	cmp		r1, #0x0
	bge		_080bc212
	mov		r0, #0x1
	and		r0, r1
	lsr		r1, r1, #0x1
	orr		r0, r1
	str		r0, [r5, #0xc]
	ldr		r0, [r5, #0x8]
	add		r0, #0x1
	str		r0, [r5, #0x8]
_080bc212:
	add		r0, r5, #0x0
_080bc214:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBC21A, 0x2
	thumb_func_end sub_080bc0a0

	thumb_func_start sub_080bc21c
sub_080bc21c:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x30]
	str		r1, [sp, #0x34]
	add		r0, sp, #0x30
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x34
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	add		r2, sp, #0x20
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc0a0
	bl		sub_080bbf6c
	add		sp, #0x38
	pop		{ r4, pc }
	thumb_func_end sub_080bc21c

	thumb_func_start sub_080bc248
sub_080bc248:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x30]
	str		r1, [sp, #0x34]
	add		r0, sp, #0x30
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x34
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	ldr		r0, [r4, #0x4]
	mov		r1, #0x1
	eor		r0, r1
	str		r0, [r4, #0x4]
	add		r2, sp, #0x20
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc0a0
	bl		sub_080bbf6c
	add		sp, #0x38
	pop		{ r4, pc }
	thumb_func_end sub_080bc248

	thumb_func_start sub_080bc27c
sub_080bc27c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x38
	str		r0, [sp, #0x30]
	str		r1, [sp, #0x34]
	add		r0, sp, #0x30
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x34
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	mov		r7, sp
	add		r0, sp, #0x20
	mov		r8, r0
	mov		r0, #0x0
	ldr		r1, [sp, #0x0]
	mov		r9, r8
	cmp		r1, #0x1
	bhi		_080bc2ae
	mov		r0, #0x1
_080bc2ae:
	cmp		r0, #0x0
	bne		_080bc30c
	mov		r2, #0x0
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x1
	bhi		_080bc2bc
	mov		r2, #0x1
_080bc2bc:
	cmp		r2, #0x0
	beq		_080bc2c4
	ldr		r0, [sp, #0x4]
	b		_080bc32c
_080bc2c4:
	mov		r2, #0x0
	cmp		r1, #0x4
	bne		_080bc2cc
	mov		r2, #0x1
_080bc2cc:
	cmp		r2, #0x0
	beq		_080bc2de
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_080bc2d8
	mov		r1, #0x1
_080bc2d8:
	cmp		r1, #0x0
	bne		_080bc2f6
	b		_080bc30c
_080bc2de:
	mov		r2, #0x0
	cmp		r0, #0x4
	bne		_080bc2e6
	mov		r2, #0x1
_080bc2e6:
	cmp		r2, #0x0
	beq		_080bc300
	mov		r0, #0x0
	cmp		r1, #0x2
	bne		_080bc2f2
	mov		r0, #0x1
_080bc2f2:
	cmp		r0, #0x0
	beq		_080bc32a
_080bc2f6:
	ldr		r0, _080bc2fc
	b		_080bc3ce

.incbin "base.gba", 0xBC2FA, 0x2

_080bc2fc:	.4byte 0x0200CBB0

_080bc300:
	mov		r2, #0x0
	cmp		r1, #0x2
	bne		_080bc308
	mov		r2, #0x1
_080bc308:
	cmp		r2, #0x0
	beq		_080bc31e
_080bc30c:
	ldr		r0, [sp, #0x4]
	ldr		r1, [sp, #0x14]
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	str		r1, [sp, #0x4]
	mov		r0, sp
	b		_080bc3ce
_080bc31e:
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_080bc326
	mov		r1, #0x1
_080bc326:
	cmp		r1, #0x0
	beq		_080bc33c
_080bc32a:
	ldr		r0, [r7, #0x4]
_080bc32c:
	ldr		r1, [sp, #0x14]
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	str		r1, [sp, #0x14]
	add		r0, r4, #0x0
	b		_080bc3ce
_080bc33c:
	ldr		r0, [r7, #0xC]
	mov		r1, #0x0
	ldr		r2, [sp, #0x1C]
	mov		r3, #0x0
	bl		sub_080bcb94
	add		r2, r1, #0x0
	add		r5, r2, #0x0
	add		r6, r0, #0x0
	ldr		r4, [r7, #0x8]
	ldr		r0, [sp, #0x18]
	add		r4, r4, r0
	str		r4, [sp, #0x28]
	ldr		r1, [r7, #0x4]
	ldr		r0, [sp, #0x14]
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r0, r0, #0x1f
	str		r0, [sp, #0x24]
	add		r4, #0x2
	str		r4, [sp, #0x28]
	cmp		r2, #0x0
	bge		_080bc388
	mov		r2, #0x1
	mov		r1, #0x80
	lsl		r1, r1, #0x18
_080bc372:
	add		r4, #0x1
	add		r0, r5, #0x0
	and		r0, r2
	cmp		r0, #0x0
	beq		_080bc380
	lsr		r6, r6, #0x1
	orr		r6, r1
_080bc380:
	lsr		r5, r5, #0x1
	cmp		r5, #0x0
	blt		_080bc372
	str		r4, [sp, #0x28]
_080bc388:
	ldr		r0, _080bc3dc
	cmp		r5, r0
	bhi		_080bc3ae
	mov		r4, #0x80
	lsl		r4, r4, #0x18
	mov		r3, #0x1
	add		r2, r0, #0x0
	ldr		r1, [sp, #0x28]
_080bc398:
	sub		r1, #0x1
	lsl		r5, r5, #0x1
	add		r0, r6, #0x0
	and		r0, r4
	cmp		r0, #0x0
	beq		_080bc3a6
	orr		r5, r3
_080bc3a6:
	lsl		r6, r6, #0x1
	cmp		r5, r2
	bls		_080bc398
	str		r1, [sp, #0x28]
_080bc3ae:
	mov		r0, #0x7f
	and		r0, r5
	cmp		r0, #0x40
	bne		_080bc3c4
	mov		r0, #0x80
	and		r0, r5
	cmp		r0, #0x0
	bne		_080bc3c2
	cmp		r6, #0x0
	beq		_080bc3c4
_080bc3c2:
	add		r5, #0x40
_080bc3c4:
	str		r5, [sp, #0x2C]
	mov		r0, #0x3
	mov		r1, r8
	str		r0, [r1, #0x0]
	mov		r0, r9
_080bc3ce:
	bl		sub_080bbf6c
	add		sp, #0x38
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7, pc }

_080bc3dc:	.4byte 0x3FFFFFFF
	thumb_func_end sub_080bc27c

	thumb_func_start sub_080bc3e0
sub_080bc3e0:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x28
	str		r0, [sp, #0x20]
	str		r1, [sp, #0x24]
	add		r0, sp, #0x20
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x24
	add		r5, sp, #0x10
	add		r1, r5, #0x0
	bl		sub_080bc024
	mov		r4, sp
	mov		r0, #0x0
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x1
	bhi		_080bc406
	mov		r0, #0x1
_080bc406:
	cmp		r0, #0x0
	beq		_080bc40e
	mov		r1, sp
	b		_080bc4c0
_080bc40e:
	mov		r0, #0x0
	ldr		r2, [sp, #0x10]
	add		r6, r2, #0x0
	cmp		r2, #0x1
	bhi		_080bc41a
	mov		r0, #0x1
_080bc41a:
	cmp		r0, #0x0
	beq		_080bc422
	add		r1, r5, #0x0
	b		_080bc4c0
_080bc422:
	ldr		r0, [sp, #0x4]
	ldr		r1, [sp, #0x14]
	eor		r0, r1
	str		r0, [sp, #0x4]
	mov		r0, #0x0
	cmp		r3, #0x4
	bne		_080bc432
	mov		r0, #0x1
_080bc432:
	cmp		r0, #0x0
	bne		_080bc442
	mov		r0, #0x0
	cmp		r3, #0x2
	bne		_080bc43e
	mov		r0, #0x1
_080bc43e:
	cmp		r0, #0x0
	beq		_080bc454
_080bc442:
	ldr		r0, [r4, #0x0]
	add		r1, r4, #0x0
	cmp		r0, r6
	bne		_080bc4c0
	ldr		r1, _080bc450
	b		_080bc4c0

.incbin "base.gba", 0xBC44E, 0x2

_080bc450:	.4byte 0x0200CBB0

_080bc454:
	mov		r1, #0x0
	cmp		r2, #0x4
	bne		_080bc45c
	mov		r1, #0x1
_080bc45c:
	cmp		r1, #0x0
	beq		_080bc468
	str		r0, [sp, #0xc]
	str		r0, [sp, #0x8]
	mov		r1, sp
	b		_080bc4c0
_080bc468:
	mov		r0, #0x0
	cmp		r2, #0x2
	bne		_080bc470
	mov		r0, #0x1
_080bc470:
	cmp		r0, #0x0
	beq		_080bc47a
	mov		r0, #0x4
	str		r0, [r4, #0x0]
	b		_080bc4be
_080bc47a:
	ldr		r1, [r4, #0x8]
	ldr		r0, [sp, #0x18]
	sub		r0, r1, r0
	str		r0, [r4, #0x8]
	ldr		r2, [r4, #0xc]
	ldr		r3, [sp, #0x1c]
	cmp		r2, r3
	bcs		_080bc490
	lsl		r2, r2, #0x1
	sub		r0, #0x1
	str		r0, [r4, #0x8]
_080bc490:
	mov		r0, #0x80
	lsl		r0, r0, #0x17
	mov		r1, #0x0
_080bc496:
	cmp		r2, r3
	bcc		_080bc49e
	orr		r1, r0
	sub		r2, r2, r3
_080bc49e:
	lsr		r0, r0, #0x1
	lsl		r2, r2, #0x1
	cmp		r0, #0x0
	bne		_080bc496
	mov		r0, #0x7f
	and		r0, r1
	cmp		r0, #0x40
	bne		_080bc4bc
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bc4ba
	cmp		r2, #0x0
	beq		_080bc4bc
_080bc4ba:
	add		r1, #0x40
_080bc4bc:
	str		r1, [r4, #0xc]
_080bc4be:
	add		r1, r4, #0x0
_080bc4c0:
	add		r0, r1, #0x0
	bl		sub_080bbf6c
	add		sp, #0x28
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0xBC4CA, 0x2
	thumb_func_end sub_080bc3e0

	thumb_func_start sub_080bc4cc
sub_080bc4cc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0x0
	ldr		r2, [r4, #0x0]
	cmp		r2, #0x1
	bhi		_080bc4da
	mov		r0, #0x1
_080bc4da:
	cmp		r0, #0x0
	bne		_080bc4ec
	mov		r0, #0x0
	ldr		r3, [r1, #0x0]
	cmp		r3, #0x1
	bhi		_080bc4e8
	mov		r0, #0x1
_080bc4e8:
	cmp		r0, #0x0
	beq		_080bc4f0
_080bc4ec:
	mov		r0, #0x1
	b		_080bc5ae
_080bc4f0:
	mov		r0, #0x0
	cmp		r2, #0x4
	bne		_080bc4f8
	mov		r0, #0x1
_080bc4f8:
	cmp		r0, #0x0
	beq		_080bc510
	mov		r0, #0x0
	cmp		r3, #0x4
	bne		_080bc504
	mov		r0, #0x1
_080bc504:
	cmp		r0, #0x0
	beq		_080bc510
	ldr		r0, [r1, #0x4]
	ldr		r1, [r4, #0x4]
	sub		r0, r0, r1
	b		_080bc5ae
_080bc510:
	mov		r2, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x4
	bne		_080bc51a
	mov		r2, #0x1
_080bc51a:
	cmp		r2, #0x0
	bne		_080bc568
	mov		r2, #0x0
	cmp		r3, #0x4
	bne		_080bc526
	mov		r2, #0x1
_080bc526:
	cmp		r2, #0x0
	beq		_080bc538
_080bc52a:
	ldr		r0, [r1, #0x4]
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, #0x0
	beq		_080bc572
	mov		r1, #0x1
	b		_080bc572
_080bc538:
	mov		r2, #0x0
	cmp		r0, #0x2
	bne		_080bc540
	mov		r2, #0x1
_080bc540:
	cmp		r2, #0x0
	beq		_080bc550
	mov		r2, #0x0
	cmp		r3, #0x2
	bne		_080bc54c
	mov		r2, #0x1
_080bc54c:
	cmp		r2, #0x0
	bne		_080bc5ac
_080bc550:
	mov		r2, #0x0
	cmp		r0, #0x2
	bne		_080bc558
	mov		r2, #0x1
_080bc558:
	cmp		r2, #0x0
	bne		_080bc52a
	mov		r0, #0x0
	cmp		r3, #0x2
	bne		_080bc564
	mov		r0, #0x1
_080bc564:
	cmp		r0, #0x0
	beq		_080bc576
_080bc568:
	ldr		r0, [r4, #0x4]
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_080bc572
	sub		r1, #0x2
_080bc572:
	add		r0, r1, #0x0
	b		_080bc5ae
_080bc576:
	ldr		r3, [r4, #0x4]
	ldr		r0, [r1, #0x4]
	cmp		r3, r0
	beq		_080bc588
_080bc57e:
	mov		r0, #0x1
	cmp		r3, #0x0
	beq		_080bc5ae
	sub		r0, #0x2
	b		_080bc5ae
_080bc588:
	ldr		r2, [r4, #0x8]
	ldr		r0, [r1, #0x8]
	cmp		r2, r0
	bgt		_080bc57e
	cmp		r2, r0
	bge		_080bc5a0
_080bc594:
	mov		r0, #0x1
	neg		r0, r0
	cmp		r3, #0x0
	beq		_080bc5ae
	mov		r0, #0x1
	b		_080bc5ae
_080bc5a0:
	ldr		r0, [r4, #0xc]
	ldr		r1, [r1, #0xc]
	cmp		r0, r1
	bhi		_080bc57e
	cmp		r0, r1
	bcc		_080bc594
_080bc5ac:
	mov		r0, #0x0
_080bc5ae:
	pop		{ r4, pc }
	thumb_func_end sub_080bc4cc

	thumb_func_start sub_080bc5b0
sub_080bc5b0:
	push	{ r4, lr }
	sub		sp, #0x28
	str		r0, [sp, #0x20]
	str		r1, [sp, #0x24]
	add		r0, sp, #0x20
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x24
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc4cc
	add		sp, #0x28
	pop		{ r4, pc }

.incbin "base.gba", 0xBC5D6, 0x2
	thumb_func_end sub_080bc5b0

	thumb_func_start sub_080bc5d8
sub_080bc5d8:
	push	{ r4, lr }
	sub		sp, #0x28
	str		r0, [sp, #0x20]
	str		r1, [sp, #0x24]
	add		r0, sp, #0x20
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x24
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bc5fc
	mov		r1, #0x1
_080bc5fc:
	cmp		r1, #0x0
	bne		_080bc60e
	mov		r1, #0x0
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x1
	bhi		_080bc60a
	mov		r1, #0x1
_080bc60a:
	cmp		r1, #0x0
	beq		_080bc612
_080bc60e:
	mov		r0, #0x1
	b		_080bc61a
_080bc612:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc4cc
_080bc61a:
	add		sp, #0x28
	pop		{ r4, pc }

.incbin "base.gba", 0xBC61E, 0x2
	thumb_func_end sub_080bc5d8

	thumb_func_start sub_080bc620
sub_080bc620:
	push	{ r4, lr }
	sub		sp, #0x28
	str		r0, [sp, #0x20]
	str		r1, [sp, #0x24]
	add		r0, sp, #0x20
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x24
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bc644
	mov		r1, #0x1
_080bc644:
	cmp		r1, #0x0
	bne		_080bc656
	mov		r1, #0x0
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x1
	bhi		_080bc652
	mov		r1, #0x1
_080bc652:
	cmp		r1, #0x0
	beq		_080bc65a
_080bc656:
	mov		r0, #0x1
	b		_080bc662
_080bc65a:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc4cc
_080bc662:
	add		sp, #0x28
	pop		{ r4, pc }

.incbin "base.gba", 0xBC666, 0x2
	thumb_func_end sub_080bc620

	thumb_func_start sub_080bc668
sub_080bc668:
	push	{ r4, lr }
	sub		sp, #0x28
	str		r0, [sp, #0x20]
	str		r1, [sp, #0x24]
	add		r0, sp, #0x20
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x24
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bc68c
	mov		r1, #0x1
_080bc68c:
	cmp		r1, #0x0
	bne		_080bc69e
	mov		r1, #0x0
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x1
	bhi		_080bc69a
	mov		r1, #0x1
_080bc69a:
	cmp		r1, #0x0
	beq		_080bc6a4
_080bc69e:
	mov		r0, #0x1
	neg		r0, r0
	b		_080bc6ac
_080bc6a4:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc4cc
_080bc6ac:
	add		sp, #0x28
	pop		{ r4, pc }
	thumb_func_end sub_080bc668

	thumb_func_start sub_080bc6b0
sub_080bc6b0:
	push	{ r4, lr }
	sub		sp, #0x28
	str		r0, [sp, #0x20]
	str		r1, [sp, #0x24]
	add		r0, sp, #0x20
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x24
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bc6d4
	mov		r1, #0x1
_080bc6d4:
	cmp		r1, #0x0
	bne		_080bc6e6
	mov		r1, #0x0
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x1
	bhi		_080bc6e2
	mov		r1, #0x1
_080bc6e2:
	cmp		r1, #0x0
	beq		_080bc6ec
_080bc6e6:
	mov		r0, #0x1
	neg		r0, r0
	b		_080bc6f4
_080bc6ec:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc4cc
_080bc6f4:
	add		sp, #0x28
	pop		{ r4, pc }
	thumb_func_end sub_080bc6b0

	thumb_func_start sub_080bc6f8
sub_080bc6f8:
	push	{ r4, lr }
	sub		sp, #0x28
	str		r0, [sp, #0x20]
	str		r1, [sp, #0x24]
	add		r0, sp, #0x20
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x24
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bc71c
	mov		r1, #0x1
_080bc71c:
	cmp		r1, #0x0
	bne		_080bc72e
	mov		r1, #0x0
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x1
	bhi		_080bc72a
	mov		r1, #0x1
_080bc72a:
	cmp		r1, #0x0
	beq		_080bc732
_080bc72e:
	mov		r0, #0x1
	b		_080bc73a
_080bc732:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc4cc
_080bc73a:
	add		sp, #0x28
	pop		{ r4, pc }

.incbin "base.gba", 0xBC73E, 0x2
	thumb_func_end sub_080bc6f8

	thumb_func_start sub_080bc740
sub_080bc740:
	push	{ r4, lr }
	sub		sp, #0x28
	str		r0, [sp, #0x20]
	str		r1, [sp, #0x24]
	add		r0, sp, #0x20
	mov		r1, sp
	bl		sub_080bc024
	add		r0, sp, #0x24
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_080bc024
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bc764
	mov		r1, #0x1
_080bc764:
	cmp		r1, #0x0
	bne		_080bc776
	mov		r1, #0x0
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x1
	bhi		_080bc772
	mov		r1, #0x1
_080bc772:
	cmp		r1, #0x0
	beq		_080bc77a
_080bc776:
	mov		r0, #0x1
	b		_080bc782
_080bc77a:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bc4cc
_080bc782:
	add		sp, #0x28
	pop		{ r4, pc }

.incbin "base.gba", 0xBC786, 0x2
	thumb_func_end sub_080bc740

	thumb_func_start sub_080bc788
sub_080bc788:
	push	{ lr }
	sub		sp, #0x10
	add		r1, r0, #0x0
	mov		r0, #0x3
	str		r0, [sp, #0x0]
	lsr		r2, r1, #0x1f
	str		r2, [sp, #0x4]
	cmp		r1, #0x0
	bne		_080bc7a0
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	b		_080bc7d8
_080bc7a0:
	mov		r0, #0x1e
	str		r0, [sp, #0x8]
	cmp		r2, #0x0
	beq		_080bc7be
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	cmp		r1, r0
	bne		_080bc7b8
	ldr		r0, _080bc7b4
	b		_080bc7de

_080bc7b4:	.4byte 0xCF000000

_080bc7b8:
	neg		r0, r1
	str		r0, [sp, #0xC]
	b		_080bc7c0
_080bc7be:
	str		r1, [sp, #0xC]
_080bc7c0:
	ldr		r2, [sp, #0xC]
	ldr		r3, _080bc7e4
	cmp		r2, r3
	bhi		_080bc7d8
	ldr		r1, [sp, #0x8]
_080bc7ca:
	lsl		r0, r2, #0x1
	sub		r1, #0x1
	add		r2, r0, #0x0
	cmp		r0, r3
	bls		_080bc7ca
	str		r1, [sp, #0x8]
	str		r0, [sp, #0xC]
_080bc7d8:
	mov		r0, sp
	bl		sub_080bbf6c
_080bc7de:
	add		sp, #0x10
	pop		{ pc }

.incbin "base.gba", 0xBC7E2, 0x2

_080bc7e4:	.4byte 0x3FFFFFFF
	thumb_func_end sub_080bc788

	thumb_func_start sub_080bc7e8
sub_080bc7e8:
	push	{ lr }
	sub		sp, #0x14
	str		r0, [sp, #0x10]
	add		r0, sp, #0x10
	mov		r1, sp
	bl		sub_080bc024
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x2
	bne		_080bc800
	mov		r1, #0x1
_080bc800:
	cmp		r1, #0x0
	bne		_080bc832
	mov		r1, #0x0
	cmp		r0, #0x1
	bhi		_080bc80c
	mov		r1, #0x1
_080bc80c:
	cmp		r1, #0x0
	bne		_080bc832
	mov		r1, #0x0
	cmp		r0, #0x4
	bne		_080bc818
	mov		r1, #0x1
_080bc818:
	cmp		r1, #0x0
	beq		_080bc82c
_080bc81c:
	ldr		r0, [sp, #0x4]
	ldr		r1, _080bc828
	cmp		r0, #0x0
	beq		_080bc84a
	add		r1, #0x1
	b		_080bc84a

_080bc828:	.4byte 0x7FFFFFFF

_080bc82c:
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x0
	bge		_080bc836
_080bc832:
	mov		r0, #0x0
	b		_080bc84c
_080bc836:
	cmp		r1, #0x1e
	bgt		_080bc81c
	mov		r0, #0x1e
	sub		r0, r0, r1
	ldr		r1, [sp, #0xC]
	lsr		r1, r0
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	beq		_080bc84a
	neg		r1, r1
_080bc84a:
	add		r0, r1, #0x0
_080bc84c:
	add		sp, #0x14
	pop		{ pc }
	thumb_func_end sub_080bc7e8

	thumb_func_start sub_080bc850
sub_080bc850:
	push	{ lr }
	sub		sp, #0x14
	str		r0, [sp, #0x10]
	add		r0, sp, #0x10
	mov		r1, sp
	bl		sub_080bc024
	mov		r1, #0x0
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	bne		_080bc868
	mov		r1, #0x1
_080bc868:
	str		r1, [sp, #0x4]
	mov		r0, sp
	bl		sub_080bbf6c
	add		sp, #0x14
	pop		{ pc }
	thumb_func_end sub_080bc850

	thumb_func_start sub_080bc874
sub_080bc874:
	push	{ lr }
	sub		sp, #0x10
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	str		r2, [sp, #0x8]
	str		r3, [sp, #0xC]
	mov		r0, sp
	bl		sub_080bbf6c
	add		sp, #0x10
	pop		{ pc }

.incbin "base.gba", 0xBC88A, 0x2
	thumb_func_end sub_080bc874

	thumb_func_start sub_080bc88c
sub_080bc88c:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x18
	str		r0, [sp, #0x14]
	add		r0, sp, #0x14
	add		r1, sp, #0x4
	bl		sub_080bc024
	ldr		r0, [sp, #0x4]
	ldr		r1, [sp, #0x8]
	ldr		r2, [sp, #0xC]
	ldr		r3, [sp, #0x10]
	mov		r4, #0x0
	lsr		r6, r3, #0x2
	lsl		r5, r4, #0x1e
	add		r4, r6, #0x0
	orr		r4, r5
	lsl		r3, r3, #0x1e
	str		r4, [sp, #0x0]
	bl		sub_080bd934
	add		sp, #0x18
	pop		{ r4, r5, r6, pc }
	thumb_func_end sub_080bc88c

	thumb_func_start sub_080bc8b8
sub_080bc8b8:
	push	{ lr }
	bl		sub_080bd9e0
.incbin "base.gba", 0xbc8be, 0x2
	push	{ lr }
	ldr		r0, _080bc8cc
	ldr		r0, [r0, #0x0]
	bl		sub_080bbc70
	pop		{ pc }

_080bc8cc:	.4byte 0x0200EB4C
	thumb_func_end sub_080bc8b8

	thumb_func_start sub_080bc8d0
sub_080bc8d0:
	push	{ r4, lr }
	add		r4, r2, #0x0
	bl		sub_080bdb94
	cmp		r0, #0x0
	beq		_080bc8e0
	mov		r0, #0x0
	b		_080bc8e2
_080bc8e0:
	add		r0, r4, #0x0
_080bc8e2:
	pop		{ r4, pc }

.incbin "base.gba", 0xBC8E4, 0x2B0
	thumb_func_end sub_080bc8d0

	thumb_func_start sub_080bcb94
sub_080bcb94:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	str		r2, [sp, #0x8]
	str		r3, [sp, #0xC]
	ldr		r3, [sp, #0x0]
	ldr		r0, _080bcc00
	mov		r12, r0
	add		r2, r3, #0x0
	and		r2, r0
	lsr		r3, r3, #0x10
	ldr		r1, [sp, #0x8]
	add		r0, r1, #0x0
	mov		r4, r12
	and		r0, r4
	lsr		r1, r1, #0x10
	add		r5, r2, #0x0
	mul		r5, r0
	add		r4, r2, #0x0
	mul		r4, r1
	add		r2, r3, #0x0
	mul		r2, r0
	mul		r3, r1
	lsr		r0, r5, #0x10
	add		r4, r4, r0
	add		r4, r4, r2
	cmp		r4, r2
	bcs		_080bcbd4
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	add		r3, r3, r0
_080bcbd4:
	lsr		r0, r4, #0x10
	add		r7, r3, r0
	mov		r1, r12
	and		r4, r1
	lsl		r0, r4, #0x10
	and		r5, r1
	add		r6, r0, #0x0
	orr		r6, r5
	add		r1, r7, #0x0
	add		r0, r6, #0x0
	ldr		r3, [sp, #0x0]
	ldr		r4, [sp, #0xC]
	add		r2, r3, #0x0
	mul		r2, r4
	ldr		r5, [sp, #0x4]
	ldr		r4, [sp, #0x8]
	add		r3, r5, #0x0
	mul		r3, r4
	add		r2, r2, r3
	add		r1, r7, r2
	add		sp, #0x10
	pop		{ r4, r5, r6, r7, pc }

_080bcc00:	.4byte 0x0000FFFF
	thumb_func_end sub_080bcb94

	thumb_func_start sub_080bcc04
sub_080bcc04:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r1, r0, #0x0
	ldr		r4, [r1, #0xc]
	ldr		r5, [r1, #0x10]
	ldr		r7, [r1, #0x4]
	mov		r6, #0x0
	mov		r2, #0x0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bhi		_080bcc1c
	mov		r2, #0x1
_080bcc1c:
	cmp		r2, #0x0
	beq		_080bcc3c
	ldr		r6, _080bcc30
	ldr		r2, _080bcc34
	ldr		r3, _080bcc38
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	orr		r1, r3
	b		_080bccf4

.incbin "base.gba", 0xBCC2E, 0x2

_080bcc30:	.4byte 0x000007FF
_080bcc34:	.4byte 0x00000000
_080bcc38:	.4byte 0x00080000

_080bcc3c:
	mov		r2, #0x0
	cmp		r0, #0x4
	bne		_080bcc44
	mov		r2, #0x1
_080bcc44:
	cmp		r2, #0x0
	bne		_080bcc90
	mov		r2, #0x0
	cmp		r0, #0x2
	bne		_080bcc50
	mov		r2, #0x1
_080bcc50:
	cmp		r2, #0x0
	beq		_080bcc5a
	mov		r4, #0x0
	mov		r5, #0x0
	b		_080bccf8
_080bcc5a:
	add		r0, r5, #0x0
	orr		r0, r4
	cmp		r0, #0x0
	beq		_080bccf8
	ldr		r2, [r1, #0x8]
	ldr		r0, _080bcc78
	cmp		r2, r0
	bge		_080bcc8a
	sub		r2, r0, r2
	cmp		r2, #0x38
	ble		_080bcc7c
	mov		r4, #0x0
	mov		r5, #0x0
	b		_080bccea

.incbin "base.gba", 0xBCC76, 0x2

_080bcc78:	.4byte 0xFFFFFC02

_080bcc7c:
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	bl		sub_080bd9a0
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	b		_080bccea
_080bcc8a:
	ldr		r0, _080bcc98
	cmp		r2, r0
	ble		_080bcca0
_080bcc90:
	ldr		r6, _080bcc9c
	mov		r4, #0x0
	mov		r5, #0x0
	b		_080bccf8

_080bcc98:	.4byte 0x000003FF
_080bcc9c:	.4byte 0x000007FF

_080bcca0:
	ldr		r0, _080bccc8
	add		r6, r2, r0
	mov		r0, #0xff
	add		r1, r4, #0x0
	and		r1, r0
	mov		r2, #0x0
	cmp		r1, #0x80
	bne		_080bcccc
	cmp		r2, #0x0
	bne		_080bcccc
	add		r0, #0x1
	add		r1, r4, #0x0
	and		r1, r0
	add		r0, r2, #0x0
	orr		r0, r1
	cmp		r0, #0x0
	beq		_080bccd4
	mov		r0, #0x80
	mov		r1, #0x0
	b		_080bccd0

_080bccc8:	.4byte 0x000003FF

_080bcccc:
	mov		r0, #0x7f
	mov		r1, #0x0
_080bccd0:
	add		r4, r4, r0
	adc		r5, r1
_080bccd4:
	ldr		r0, _080bcd38
	cmp		r5, r0
	bls		_080bccea
	lsl		r3, r5, #0x1f
	lsr		r2, r4, #0x1
	add		r0, r3, #0x0
	orr		r0, r2
	lsr		r1, r5, #0x1
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	add		r6, #0x1
_080bccea:
	lsl		r3, r5, #0x18
	lsr		r2, r4, #0x8
	add		r0, r3, #0x0
	orr		r0, r2
	lsr		r1, r5, #0x8
_080bccf4:
	add		r5, r1, #0x0
	add		r4, r0, #0x0
_080bccf8:
	str		r4, [sp, #0x0]
	ldr		r2, _080bcd3c
	and		r2, r5
	ldr		r0, [sp, #0x4]
	ldr		r1, _080bcd40
	and		r0, r1
	orr		r0, r2
	str		r0, [sp, #0x4]
	mov		r2, sp
	ldr		r1, _080bcd44
	add		r0, r1, #0x0
	and		r6, r0
	lsl		r1, r6, #0x4
	ldr		r0, _080bcd48
	ldrh		r3, [r2, #0x6]
	and		r0, r3
	orr		r0, r1
	strh		r0, [r2, #0x6]
	lsl		r1, r7, #0x7
	mov		r0, #0x7f
	ldrb	r3, [r2, #0x7]
	and		r0, r3
	orr		r0, r1
	strb	r0, [r2, #0x7]
	ldr		r1, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	add		sp, #0x8
	pop		{ r4, r5, r6, r7, pc }

_080bcd38:	.4byte 0x1FFFFFFF
_080bcd3c:	.4byte 0x000FFFFF
_080bcd40:	.4byte 0xFFF00000
_080bcd44:	.4byte 0x000007FF
_080bcd48:	.4byte 0xFFFF800F
	thumb_func_end sub_080bcc04

	thumb_func_start sub_080bcd4c
sub_080bcd4c:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r2, r0, #0x0
	add		r6, r1, #0x0
	ldr		r1, [r2, #0x4]
	str		r1, [sp, #0x0]
	ldr		r0, [r2, #0x0]
	str		r0, [sp, #0x4]
	mov		r2, sp
	add		r4, r1, #0x0
	lsl		r0, r0, #0xc
	lsr		r5, r0, #0xc
	ldrh		r3, [r2, #0x6]
	lsl		r0, r3, #0x11
	lsr		r3, r0, #0x15
	ldrb	r2, [r2, #0x7]
	lsr		r0, r2, #0x7
	str		r0, [r6, #0x4]
	cmp		r3, #0x0
	bne		_080bcdc0
	orr		r1, r5
	cmp		r1, #0x0
	bne		_080bcd80
	mov		r0, #0x2
	str		r0, [r6, #0x0]
	b		_080bce14
_080bcd80:
	ldr		r0, _080bcdb8
	str		r0, [r6, #0x8]
	lsr		r3, r4, #0x18
	lsl		r2, r5, #0x8
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r4, #0x8
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	mov		r0, #0x3
	str		r0, [r6, #0x0]
	ldr		r0, _080bcdbc
	cmp		r5, r0
	bhi		_080bcdf0
	add		r7, r0, #0x0
_080bcd9e:
	lsr		r3, r4, #0x1f
	lsl		r2, r5, #0x1
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r4, #0x1
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	ldr		r0, [r6, #0x8]
	sub		r0, #0x1
	str		r0, [r6, #0x8]
	cmp		r5, r7
	bls		_080bcd9e
	b		_080bcdf0

_080bcdb8:	.4byte 0xFFFFFC02
_080bcdbc:	.4byte 0x0FFFFFFF

_080bcdc0:
	ldr		r0, _080bcdd4
	cmp		r3, r0
	bne		_080bcdf6
	orr		r1, r5
	cmp		r1, #0x0
	bne		_080bcdd8
	mov		r0, #0x4
	str		r0, [r6, #0x0]
	b		_080bce14

.incbin "base.gba", 0xBCDD2, 0x2

_080bcdd4:	.4byte 0x000007FF

_080bcdd8:
	mov		r2, #0x80
	lsl		r2, r2, #0xc
	mov		r0, #0x0
	add		r1, r5, #0x0
	and		r1, r2
	orr		r1, r0
	cmp		r1, #0x0
	beq		_080bcdee
	mov		r0, #0x1
	str		r0, [r6, #0x0]
	b		_080bcdf0
_080bcdee:
	str		r1, [r6, #0x0]
_080bcdf0:
	str		r4, [r6, #0xc]
	str		r5, [r6, #0x10]
	b		_080bce14
_080bcdf6:
	ldr		r1, _080bce18
	add		r0, r3, r1
	str		r0, [r6, #0x8]
	mov		r0, #0x3
	str		r0, [r6, #0x0]
	lsr		r3, r4, #0x18
	lsl		r2, r5, #0x8
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r4, #0x8
	ldr		r2, _080bce1c
	ldr		r3, _080bce20
	orr		r1, r3
	str		r0, [r6, #0xc]
	str		r1, [r6, #0x10]
_080bce14:
	add		sp, #0x8
	pop		{ r4, r5, r6, r7, pc }

_080bce18:	.4byte 0xFFFFFC01
_080bce1c:	.4byte 0x00000000
_080bce20:	.4byte 0x10000000
	thumb_func_end sub_080bcd4c

	thumb_func_start sub_080bce24
sub_080bce24:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	mov		r10, r2
	mov		r0, #0x0
	ldr		r2, [r3, #0x0]
	cmp		r2, #0x1
	bhi		_080bce40
	mov		r0, #0x1
_080bce40:
	cmp		r0, #0x0
	beq		_080bce48
_080bce44:
	add		r0, r3, #0x0
	b		_080bd080
_080bce48:
	mov		r1, #0x0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x1
	bhi		_080bce52
	mov		r1, #0x1
_080bce52:
	cmp		r1, #0x0
	bne		_080bceca
	mov		r1, #0x0
	cmp		r2, #0x4
	bne		_080bce5e
	mov		r1, #0x1
_080bce5e:
	cmp		r1, #0x0
	beq		_080bce80
	mov		r1, #0x0
	cmp		r0, #0x4
	bne		_080bce6a
	mov		r1, #0x1
_080bce6a:
	cmp		r1, #0x0
	beq		_080bce44
	ldr		r1, [r3, #0x4]
	ldr		r0, [r4, #0x4]
	cmp		r1, r0
	beq		_080bce44
	ldr		r0, _080bce7c
	b		_080bd080

.incbin "base.gba", 0xBCE7A, 0x2

_080bce7c:	.4byte 0x0200CBE0

_080bce80:
	mov		r1, #0x0
	cmp		r0, #0x4
	bne		_080bce88
	mov		r1, #0x1
_080bce88:
	cmp		r1, #0x0
	bne		_080bceca
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_080bce94
	mov		r1, #0x1
_080bce94:
	cmp		r1, #0x0
	beq		_080bcebc
	mov		r0, #0x0
	cmp		r2, #0x2
	bne		_080bcea0
	mov		r0, #0x1
_080bcea0:
	cmp		r0, #0x0
	beq		_080bce44
	mov		r1, r10
	add		r0, r3, #0x0
	ldmia	r0!, { r2, r5, r6 }
	stmia	r1!, {  r2, r5, r6 }
	ldmia	r0!, { r2, r5 }
	stmia	r1!, {  r2, r5 }
	ldr		r0, [r3, #0x4]
	ldr		r1, [r4, #0x4]
	and		r0, r1
	mov		r6, r10
	str		r0, [r6, #0x4]
	b		_080bd07e
_080bcebc:
	mov		r1, #0x0
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x2
	bne		_080bcec6
	mov		r1, #0x1
_080bcec6:
	cmp		r1, #0x0
	beq		_080bcece
_080bceca:
	add		r0, r4, #0x0
	b		_080bd080
_080bcece:
	ldr		r0, [r3, #0x8]
	mov		r9, r0
	ldr		r1, [r4, #0x8]
	mov		r8, r1
	ldr		r6, [r3, #0xc]
	ldr		r7, [r3, #0x10]
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x10]
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	mov		r1, r9
	mov		r2, r8
	sub		r0, r1, r2
	cmp		r0, #0x0
	bge		_080bceee
	neg		r0, r0
_080bceee:
	cmp		r0, #0x3f
	bgt		_080bcf6c
	ldr		r3, [r3, #0x4]
	mov		r12, r3
	ldr		r4, [r4, #0x4]
	str		r4, [sp, #0x8]
	cmp		r9, r8
	ble		_080bcf38
	mov		r3, r9
	mov		r4, r8
	sub		r3, r3, r4
	mov		r8, r3
_080bcf06:
	mov		r5, #0x1
	neg		r5, r5
	add		r8, r5
	ldr		r2, [sp, #0x0]
	mov		r0, #0x1
	and		r2, r0
	mov		r3, #0x0
	ldr		r1, [sp, #0x4]
	lsl		r5, r1, #0x1f
	ldr		r0, [sp, #0x0]
	lsr		r4, r0, #0x1
	add		r0, r5, #0x0
	orr		r0, r4
	add		r4, r1, #0x0
	lsr		r1, r4, #0x1
	add		r5, r2, #0x0
	orr		r5, r0
	str		r5, [sp, #0x0]
	add		r4, r3, #0x0
	orr		r4, r1
	str		r4, [sp, #0x4]
	mov		r5, r8
	cmp		r5, #0x0
	bne		_080bcf06
	mov		r8, r9
_080bcf38:
	cmp		r8, r9
	ble		_080bcf88
	mov		r0, r8
	mov		r1, r9
	sub		r0, r0, r1
	mov		r9, r0
_080bcf44:
	mov		r2, #0x1
	neg		r2, r2
	add		r9, r2
	mov		r2, #0x1
	and		r2, r6
	mov		r3, #0x0
	lsl		r5, r7, #0x1f
	lsr		r4, r6, #0x1
	add		r0, r5, #0x0
	orr		r0, r4
	lsr		r1, r7, #0x1
	add		r6, r2, #0x0
	orr		r6, r0
	add		r7, r3, #0x0
	orr		r7, r1
	mov		r3, r9
	cmp		r3, #0x0
	bne		_080bcf44
	mov		r9, r8
	b		_080bcf88
_080bcf6c:
	cmp		r9, r8
	ble		_080bcf7a
	mov		r0, #0x0
	mov		r1, #0x0
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	b		_080bcf80
_080bcf7a:
	mov		r9, r8
	mov		r6, #0x0
	mov		r7, #0x0
_080bcf80:
	ldr		r3, [r3, #0x4]
	mov		r12, r3
	ldr		r4, [r4, #0x4]
	str		r4, [sp, #0x8]
_080bcf88:
	ldr		r1, [sp, #0x8]
	cmp		r12, r1
	beq		_080bd030
	mov		r2, r12
	cmp		r2, #0x0
	beq		_080bcfaa
	add		r1, r7, #0x0
	add		r0, r6, #0x0
	bl		sub_080bbe14
	add		r3, r1, #0x0
	add		r2, r0, #0x0
	ldr		r4, [sp, #0x0]
	ldr		r5, [sp, #0x4]
	add		r2, r2, r4
	adc		r3, r5
	b		_080bcfb6
_080bcfaa:
	add		r3, r7, #0x0
	add		r2, r6, #0x0
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	sub		r2, r2, r0
	sbc		r3, r1
_080bcfb6:
	cmp		r3, #0x0
	blt		_080bcfcc
	mov		r0, #0x0
	mov		r1, r10
	str		r0, [r1, #0x4]
	mov		r4, r9
	str		r4, [r1, #0x8]
	mov		r5, r10
	str		r2, [r5, #0xc]
	str		r3, [r5, #0x10]
	b		_080bcfe4
_080bcfcc:
	mov		r0, #0x1
	mov		r6, r10
	str		r0, [r6, #0x4]
	mov		r0, r9
	str		r0, [r6, #0x8]
	add		r1, r3, #0x0
	add		r0, r2, #0x0
	bl		sub_080bbe14
	mov		r2, r10
	str		r0, [r2, #0xc]
	str		r1, [r2, #0x10]
_080bcfe4:
	mov		r4, r10
	ldr		r2, [r4, #0xc]
	ldr		r3, [r4, #0x10]
	mov		r0, #0x1
	neg		r0, r0
	asr		r1, r0, #0x1f
_080bcff0:
	add		r2, r2, r0
	adc		r3, r1
	ldr		r0, _080bd02c
	cmp		r3, r0
	bhi		_080bd048
	cmp		r3, r0
	bne		_080bd006
	mov		r0, #0x2
	neg		r0, r0
	cmp		r2, r0
	bhi		_080bd048
_080bd006:
	mov		r5, r10
	ldr		r0, [r5, #0xc]
	ldr		r1, [r5, #0x10]
	lsr		r3, r0, #0x1f
	lsl		r2, r1, #0x1
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r0, #0x1
	mov		r6, r10
	str		r0, [r6, #0xc]
	str		r1, [r6, #0x10]
	ldr		r2, [r6, #0x8]
	sub		r2, #0x1
	str		r2, [r6, #0x8]
	mov		r2, #0x1
	neg		r2, r2
	asr		r3, r2, #0x1f
	b		_080bcff0

.incbin "base.gba", 0xBD02A, 0x2

_080bd02c:	.4byte 0x0FFFFFFF

_080bd030:
	mov		r0, r12
	mov		r1, r10
	str		r0, [r1, #0x4]
	mov		r2, r9
	str		r2, [r1, #0x8]
	ldr		r3, [sp, #0x0]
	ldr		r4, [sp, #0x4]
	add		r6, r6, r3
	adc		r7, r4
	mov		r4, r10
	str		r6, [r4, #0xc]
	str		r7, [r4, #0x10]
_080bd048:
	mov		r0, #0x3
	mov		r5, r10
	str		r0, [r5, #0x0]
	ldr		r1, [r5, #0x10]
	ldr		r0, _080bd08c
	cmp		r1, r0
	bls		_080bd07e
	ldr		r4, [r5, #0xc]
	ldr		r5, [r5, #0x10]
	mov		r2, #0x1
	add		r0, r4, #0x0
	and		r0, r2
	mov		r1, #0x0
	lsl		r6, r5, #0x1f
	mov		r8, r6
	lsr		r6, r4, #0x1
	mov		r2, r8
	orr		r2, r6
	lsr		r3, r5, #0x1
	orr		r0, r2
	orr		r1, r3
	mov		r2, r10
	str		r0, [r2, #0xc]
	str		r1, [r2, #0x10]
	ldr		r0, [r2, #0x8]
	add		r0, #0x1
	str		r0, [r2, #0x8]
_080bd07e:
	mov		r0, r10
_080bd080:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

_080bd08c:	.4byte 0x1FFFFFFF
	thumb_func_end sub_080bce24

	thumb_func_start sub_080bd090
sub_080bd090:
	push	{ r4, lr }
	sub		sp, #0x4c
	str		r0, [sp, #0x3C]
	str		r1, [sp, #0x40]
	str		r2, [sp, #0x44]
	str		r3, [sp, #0x48]
	add		r0, sp, #0x3c
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x44
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	add		r2, sp, #0x28
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bce24
	bl		sub_080bcc04
	add		sp, #0x4c
	pop		{ r4, pc }
	thumb_func_end sub_080bd090

	thumb_func_start sub_080bd0c0
sub_080bd0c0:
	push	{ r4, lr }
	sub		sp, #0x4c
	str		r0, [sp, #0x3C]
	str		r1, [sp, #0x40]
	str		r2, [sp, #0x44]
	str		r3, [sp, #0x48]
	add		r0, sp, #0x3c
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x44
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	ldr		r0, [r4, #0x4]
	mov		r1, #0x1
	eor		r0, r1
	str		r0, [r4, #0x4]
	add		r2, sp, #0x28
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bce24
	bl		sub_080bcc04
	add		sp, #0x4c
	pop		{ r4, pc }
	thumb_func_end sub_080bd0c0

	thumb_func_start sub_080bd0f8
sub_080bd0f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x74
	str		r0, [sp, #0x3C]
	str		r1, [sp, #0x40]
	str		r2, [sp, #0x44]
	str		r3, [sp, #0x48]
	add		r0, sp, #0x3c
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x44
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r8, sp
	add		r0, sp, #0x28
	mov		r10, r0
	mov		r0, #0x0
	ldr		r1, [sp, #0x0]
	cmp		r1, #0x1
	bhi		_080bd12e
	mov		r0, #0x1
_080bd12e:
	cmp		r0, #0x0
	bne		_080bd192
	mov		r2, #0x0
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x1
	bhi		_080bd13c
	mov		r2, #0x1
_080bd13c:
	cmp		r2, #0x0
	beq		_080bd144
	ldr		r0, [sp, #0x4]
	b		_080bd1b4
_080bd144:
	mov		r2, #0x0
	cmp		r1, #0x4
	bne		_080bd14c
	mov		r2, #0x1
_080bd14c:
	cmp		r2, #0x0
	beq		_080bd15e
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_080bd158
	mov		r1, #0x1
_080bd158:
	cmp		r1, #0x0
	bne		_080bd176
	b		_080bd192
_080bd15e:
	mov		r2, #0x0
	cmp		r0, #0x4
	bne		_080bd166
	mov		r2, #0x1
_080bd166:
	cmp		r2, #0x0
	beq		_080bd186
	mov		r0, #0x0
	cmp		r1, #0x2
	bne		_080bd172
	mov		r0, #0x1
_080bd172:
	cmp		r0, #0x0
	beq		_080bd180
_080bd176:
	ldr		r0, _080bd17c
	b		_080bd37e

.incbin "base.gba", 0xBD17A, 0x2

_080bd17c:	.4byte 0x0200CBE0

_080bd180:
	mov		r1, r8
	ldr		r0, [r1, #0x4]
	b		_080bd1b4
_080bd186:
	mov		r2, #0x0
	cmp		r1, #0x2
	bne		_080bd18e
	mov		r2, #0x1
_080bd18e:
	cmp		r2, #0x0
	beq		_080bd1a4
_080bd192:
	ldr		r0, [sp, #0x4]
	ldr		r1, [sp, #0x18]
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	str		r1, [sp, #0x4]
	mov		r0, sp
	b		_080bd37e
_080bd1a4:
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_080bd1ac
	mov		r1, #0x1
_080bd1ac:
	cmp		r1, #0x0
	beq		_080bd1c4
	mov		r2, r8
	ldr		r0, [r2, #0x4]
_080bd1b4:
	ldr		r1, [sp, #0x18]
	eor		r0, r1
	neg		r1, r0
	orr		r1, r0
	lsr		r1, r1, #0x1f
	str		r1, [sp, #0x18]
	add		r0, r4, #0x0
	b		_080bd37e
_080bd1c4:
	mov		r4, r8
	ldr		r0, [r4, #0xC]
	ldr		r1, [r4, #0x10]
	add		r6, r0, #0x0
	mov		r7, #0x0
	str		r1, [sp, #0x4C]
	mov		r5, #0x0
	str		r5, [sp, #0x50]
	ldr		r0, [sp, #0x20]
	ldr		r1, [sp, #0x24]
	add		r4, r0, #0x0
	str		r1, [sp, #0x54]
	mov		r0, #0x0
	str		r0, [sp, #0x58]
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	add		r3, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_080bcb94
	str		r0, [sp, #0x5C]
	str		r1, [sp, #0x60]
	ldr		r0, [sp, #0x54]
	ldr		r1, [sp, #0x58]
	add		r3, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_080bcb94
	add		r7, r1, #0x0
	add		r6, r0, #0x0
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	ldr		r2, [sp, #0x4C]
	ldr		r3, [sp, #0x50]
	bl		sub_080bcb94
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	ldr		r0, [sp, #0x54]
	ldr		r1, [sp, #0x58]
	ldr		r2, [sp, #0x4C]
	ldr		r3, [sp, #0x50]
	bl		sub_080bcb94
	str		r0, [sp, #0x64]
	str		r1, [sp, #0x68]
	mov		r1, #0x0
	mov		r2, #0x0
	str		r1, [sp, #0x6C]
	str		r2, [sp, #0x70]
	add		r3, r7, #0x0
	add		r2, r6, #0x0
	add		r2, r2, r4
	adc		r3, r5
	cmp		r7, r3
	bhi		_080bd23c
	cmp		r7, r3
	bne		_080bd244
	cmp		r6, r2
	bls		_080bd244
_080bd23c:
	ldr		r5, _080bd394
	ldr		r4, _080bd390
	str		r4, [sp, #0x6C]
	str		r5, [sp, #0x70]
_080bd244:
	add		r1, r2, #0x0
	mov		r6, #0x0
	add		r7, r1, #0x0
	ldr		r0, [sp, #0x5C]
	ldr		r1, [sp, #0x60]
	add		r6, r6, r0
	adc		r7, r1
	cmp		r1, r7
	bhi		_080bd260
	ldr		r1, [sp, #0x60]
	cmp		r1, r7
	bne		_080bd270
	cmp		r0, r6
	bls		_080bd270
_080bd260:
	mov		r0, #0x1
	mov		r1, #0x0
	ldr		r4, [sp, #0x6C]
	ldr		r5, [sp, #0x70]
	add		r4, r4, r0
	adc		r5, r1
	str		r4, [sp, #0x6C]
	str		r5, [sp, #0x70]
_080bd270:
	add		r0, r3, #0x0
	add		r2, r0, #0x0
	mov		r3, #0x0
	add		r5, r3, #0x0
	add		r4, r2, #0x0
	ldr		r0, [sp, #0x64]
	ldr		r1, [sp, #0x68]
	add		r4, r4, r0
	adc		r5, r1
	ldr		r1, [sp, #0x6C]
	ldr		r2, [sp, #0x70]
	add		r4, r4, r1
	adc		r5, r2
	mov		r0, r8
	ldr		r2, [r0, #0x8]
	ldr		r0, [sp, #0x1C]
	add		r2, r2, r0
	str		r2, [sp, #0x30]
	mov		r0, r8
	ldr		r1, [r0, #0x4]
	ldr		r0, [sp, #0x18]
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r0, r0, #0x1f
	str		r0, [sp, #0x2C]
	add		r2, #0x4
	str		r2, [sp, #0x30]
	ldr		r0, _080bd398
	cmp		r5, r0
	bls		_080bd2f2
	mov		r1, #0x1
	mov		r9, r1
	mov		r8, r0
	mov		r12, r2
_080bd2b6:
	mov		r2, #0x1
	add		r12, r2
	mov		r0, r9
	and		r0, r4
	cmp		r0, #0x0
	beq		_080bd2dc
	lsl		r3, r7, #0x1f
	lsr		r2, r6, #0x1
	add		r0, r3, #0x0
	orr		r0, r2
	lsr		r1, r7, #0x1
	add		r7, r1, #0x0
	add		r6, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x18
	orr		r1, r7
	add		r7, r1, #0x0
	add		r6, r0, #0x0
_080bd2dc:
	lsl		r3, r5, #0x1f
	lsr		r2, r4, #0x1
	add		r0, r3, #0x0
	orr		r0, r2
	lsr		r1, r5, #0x1
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	cmp		r5, r8
	bhi		_080bd2b6
	mov		r0, r12
	str		r0, [sp, #0x30]
_080bd2f2:
	ldr		r0, _080bd39c
	cmp		r5, r0
	bhi		_080bd344
	mov		r1, #0x80
	lsl		r1, r1, #0x18
	mov		r9, r1
	mov		r8, r0
	ldr		r2, [sp, #0x30]
	mov		r12, r2
_080bd304:
	mov		r0, #0x1
	neg		r0, r0
	add		r12, r0
	lsr		r3, r4, #0x1f
	lsl		r2, r5, #0x1
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r4, #0x1
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, r9
	and		r1, r7
	orr		r0, r1
	cmp		r0, #0x0
	beq		_080bd32e
	mov		r0, #0x1
	orr		r0, r4
	add		r1, r5, #0x0
	add		r5, r1, #0x0
	add		r4, r0, #0x0
_080bd32e:
	lsr		r3, r6, #0x1f
	lsl		r2, r7, #0x1
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r6, #0x1
	add		r7, r1, #0x0
	add		r6, r0, #0x0
	cmp		r5, r8
	bls		_080bd304
	mov		r1, r12
	str		r1, [sp, #0x30]
_080bd344:
	mov		r0, #0xff
	add		r1, r4, #0x0
	and		r1, r0
	mov		r2, #0x0
	cmp		r1, #0x80
	bne		_080bd372
	cmp		r2, #0x0
	bne		_080bd372
	add		r0, #0x1
	add		r1, r4, #0x0
	and		r1, r0
	add		r0, r2, #0x0
	orr		r0, r1
	cmp		r0, #0x0
	bne		_080bd36a
	add		r0, r7, #0x0
	orr		r0, r6
	cmp		r0, #0x0
	beq		_080bd372
_080bd36a:
	mov		r0, #0x80
	mov		r1, #0x0
	add		r4, r4, r0
	adc		r5, r1
_080bd372:
	str		r4, [sp, #0x34]
	str		r5, [sp, #0x38]
	mov		r0, #0x3
	mov		r2, r10
	str		r0, [r2, #0x0]
	add		r0, sp, #0x28
_080bd37e:
	bl		sub_080bcc04
	add		sp, #0x74
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBD38E, 0x2

_080bd390:	.4byte 0x00000000
_080bd394:	.4byte 0x00000001
_080bd398:	.4byte 0x1FFFFFFF
_080bd39c:	.4byte 0x0FFFFFFF
	thumb_func_end sub_080bd0f8

	thumb_func_start sub_080bd3a0
sub_080bd3a0:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x48
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x2C]
	str		r2, [sp, #0x30]
	str		r3, [sp, #0x34]
	add		r0, sp, #0x28
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x30
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r12, sp
	mov		r0, #0x0
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x1
	bhi		_080bd3ca
	mov		r0, #0x1
_080bd3ca:
	cmp		r0, #0x0
	beq		_080bd3d2
	mov		r1, sp
	b		_080bd514
_080bd3d2:
	mov		r0, #0x0
	ldr		r2, [sp, #0x14]
	add		r5, r2, #0x0
	cmp		r2, #0x1
	bhi		_080bd3de
	mov		r0, #0x1
_080bd3de:
	cmp		r0, #0x0
	beq		_080bd3e6
	add		r1, r4, #0x0
	b		_080bd514
_080bd3e6:
	ldr		r0, [sp, #0x4]
	ldr		r1, [sp, #0x18]
	eor		r0, r1
	str		r0, [sp, #0x4]
	mov		r0, #0x0
	cmp		r3, #0x4
	bne		_080bd3f6
	mov		r0, #0x1
_080bd3f6:
	cmp		r0, #0x0
	bne		_080bd406
	mov		r4, #0x0
	cmp		r3, #0x2
	bne		_080bd402
	mov		r4, #0x1
_080bd402:
	cmp		r4, #0x0
	beq		_080bd418
_080bd406:
	mov		r1, r12
	ldr		r0, [r1, #0x0]
	cmp		r0, r5
	beq		_080bd410
	b		_080bd514
_080bd410:
	ldr		r1, _080bd414
	b		_080bd514

_080bd414:	.4byte 0x0200CBE0

_080bd418:
	mov		r0, #0x0
	cmp		r2, #0x4
	bne		_080bd420
	mov		r0, #0x1
_080bd420:
	cmp		r0, #0x0
	beq		_080bd432
	mov		r0, #0x0
	mov		r1, #0x0
	str		r0, [sp, #0xC]
	str		r1, [sp, #0x10]
	str		r4, [sp, #0x8]
	mov		r1, sp
	b		_080bd514
_080bd432:
	mov		r0, #0x0
	cmp		r2, #0x2
	bne		_080bd43a
	mov		r0, #0x1
_080bd43a:
	cmp		r0, #0x0
	beq		_080bd446
	mov		r0, #0x4
	mov		r2, r12
	str		r0, [r2, #0x0]
	b		_080bd512
_080bd446:
	mov		r3, r12
	ldr		r1, [r3, #0x8]
	ldr		r0, [sp, #0x1C]
	sub		r6, r1, r0
	str		r6, [r3, #0x8]
	ldr		r4, [r3, #0xC]
	ldr		r5, [r3, #0x10]
	ldr		r0, [sp, #0x20]
	ldr		r1, [sp, #0x24]
	str		r0, [sp, #0x38]
	str		r1, [sp, #0x3C]
	cmp		r1, r5
	bhi		_080bd46a
	ldr		r1, [sp, #0x3C]
	cmp		r1, r5
	bne		_080bd47e
	cmp		r0, r4
	bls		_080bd47e
_080bd46a:
	lsr		r3, r4, #0x1f
	lsl		r2, r5, #0x1
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r4, #0x1
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	sub		r0, r6, #0x1
	mov		r2, r12
	str		r0, [r2, #0x8]
_080bd47e:
	ldr		r7, _080bd524
	ldr		r6, _080bd520
	mov		r0, #0x0
	mov		r1, #0x0
	str		r0, [sp, #0x40]
	str		r1, [sp, #0x44]
_080bd48a:
	ldr		r1, [sp, #0x3C]
	cmp		r1, r5
	bhi		_080bd4ae
	cmp		r1, r5
	bne		_080bd49a
	ldr		r2, [sp, #0x38]
	cmp		r2, r4
	bhi		_080bd4ae
_080bd49a:
	ldr		r0, [sp, #0x40]
	orr		r0, r6
	ldr		r1, [sp, #0x44]
	orr		r1, r7
	str		r0, [sp, #0x40]
	str		r1, [sp, #0x44]
	ldr		r0, [sp, #0x38]
	ldr		r1, [sp, #0x3C]
	sub		r4, r4, r0
	sbc		r5, r1
_080bd4ae:
	lsl		r3, r7, #0x1f
	lsr		r2, r6, #0x1
	add		r0, r3, #0x0
	orr		r0, r2
	lsr		r1, r7, #0x1
	add		r7, r1, #0x0
	add		r6, r0, #0x0
	lsr		r3, r4, #0x1f
	lsl		r2, r5, #0x1
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r4, #0x1
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	add		r0, r7, #0x0
	orr		r0, r6
	cmp		r0, #0x0
	bne		_080bd48a
	mov		r0, #0xff
	ldr		r1, [sp, #0x40]
	and		r1, r0
	mov		r2, #0x0
	cmp		r1, #0x80
	bne		_080bd508
	cmp		r2, #0x0
	bne		_080bd508
	add		r0, #0x1
	ldr		r1, [sp, #0x40]
	and		r1, r0
	add		r0, r2, #0x0
	orr		r0, r1
	cmp		r0, #0x0
	bne		_080bd4f8
	add		r0, r5, #0x0
	orr		r0, r4
	cmp		r0, #0x0
	beq		_080bd508
_080bd4f8:
	mov		r0, #0x80
	mov		r1, #0x0
	ldr		r2, [sp, #0x40]
	ldr		r3, [sp, #0x44]
	add		r2, r2, r0
	adc		r3, r1
	str		r2, [sp, #0x40]
	str		r3, [sp, #0x44]
_080bd508:
	ldr		r0, [sp, #0x40]
	ldr		r1, [sp, #0x44]
	mov		r2, r12
	str		r0, [r2, #0xC]
	str		r1, [r2, #0x10]
_080bd512:
	mov		r1, r12
_080bd514:
	add		r0, r1, #0x0
	bl		sub_080bcc04
	add		sp, #0x48
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBD51E, 0x2

_080bd520:	.4byte 0x00000000
_080bd524:	.4byte 0x10000000
	thumb_func_end sub_080bd3a0

	thumb_func_start sub_080bd528
sub_080bd528:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r0, #0x0
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x1
	bhi		_080bd538
	mov		r0, #0x1
_080bd538:
	cmp		r0, #0x0
	bne		_080bd54a
	mov		r0, #0x0
	ldr		r2, [r6, #0x0]
	cmp		r2, #0x1
	bhi		_080bd546
	mov		r0, #0x1
_080bd546:
	cmp		r0, #0x0
	beq		_080bd54e
_080bd54a:
	mov		r0, #0x1
	b		_080bd624
_080bd54e:
	mov		r0, #0x0
	cmp		r1, #0x4
	bne		_080bd556
	mov		r0, #0x1
_080bd556:
	cmp		r0, #0x0
	beq		_080bd56e
	mov		r0, #0x0
	cmp		r2, #0x4
	bne		_080bd562
	mov		r0, #0x1
_080bd562:
	cmp		r0, #0x0
	beq		_080bd56e
	ldr		r0, [r6, #0x4]
	ldr		r1, [r5, #0x4]
	sub		r0, r0, r1
	b		_080bd624
_080bd56e:
	mov		r1, #0x0
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x4
	bne		_080bd578
	mov		r1, #0x1
_080bd578:
	cmp		r1, #0x0
	bne		_080bd5c6
	mov		r1, #0x0
	cmp		r2, #0x4
	bne		_080bd584
	mov		r1, #0x1
_080bd584:
	cmp		r1, #0x0
	beq		_080bd596
_080bd588:
	ldr		r0, [r6, #0x4]
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, #0x0
	beq		_080bd5d0
	mov		r1, #0x1
	b		_080bd5d0
_080bd596:
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_080bd59e
	mov		r1, #0x1
_080bd59e:
	cmp		r1, #0x0
	beq		_080bd5ae
	mov		r1, #0x0
	cmp		r2, #0x2
	bne		_080bd5aa
	mov		r1, #0x1
_080bd5aa:
	cmp		r1, #0x0
	bne		_080bd622
_080bd5ae:
	mov		r1, #0x0
	cmp		r0, #0x2
	bne		_080bd5b6
	mov		r1, #0x1
_080bd5b6:
	cmp		r1, #0x0
	bne		_080bd588
	mov		r0, #0x0
	cmp		r2, #0x2
	bne		_080bd5c2
	mov		r0, #0x1
_080bd5c2:
	cmp		r0, #0x0
	beq		_080bd5d4
_080bd5c6:
	ldr		r0, [r5, #0x4]
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_080bd5d0
	sub		r1, #0x2
_080bd5d0:
	add		r0, r1, #0x0
	b		_080bd624
_080bd5d4:
	ldr		r0, [r6, #0x4]
	ldr		r4, [r5, #0x4]
	cmp		r4, r0
	beq		_080bd5e6
_080bd5dc:
	mov		r0, #0x1
	cmp		r4, #0x0
	beq		_080bd624
	sub		r0, #0x2
	b		_080bd624
_080bd5e6:
	ldr		r1, [r5, #0x8]
	ldr		r0, [r6, #0x8]
	cmp		r1, r0
	bgt		_080bd5dc
	cmp		r1, r0
	bge		_080bd5fe
_080bd5f2:
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, #0x0
	beq		_080bd624
	mov		r0, #0x1
	b		_080bd624
_080bd5fe:
	ldr		r3, [r5, #0x10]
	ldr		r2, [r6, #0x10]
	cmp		r3, r2
	bhi		_080bd5dc
	cmp		r3, r2
	bne		_080bd612
	ldr		r1, [r5, #0xc]
	ldr		r0, [r6, #0xc]
	cmp		r1, r0
	bhi		_080bd5dc
_080bd612:
	cmp		r2, r3
	bhi		_080bd5f2
	cmp		r2, r3
	bne		_080bd622
	ldr		r1, [r6, #0xc]
	ldr		r0, [r5, #0xc]
	cmp		r1, r0
	bhi		_080bd5f2
_080bd622:
	mov		r0, #0x0
_080bd624:
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0xBD626, 0x2
	thumb_func_end sub_080bd528

	thumb_func_start sub_080bd628
sub_080bd628:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x2C]
	str		r2, [sp, #0x30]
	str		r3, [sp, #0x34]
	add		r0, sp, #0x28
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x30
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bd528
	add		sp, #0x38
	pop		{ r4, pc }

.incbin "base.gba", 0xBD652, 0x2
	thumb_func_end sub_080bd628

	thumb_func_start sub_080bd654
sub_080bd654:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x2C]
	str		r2, [sp, #0x30]
	str		r3, [sp, #0x34]
	add		r0, sp, #0x28
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x30
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bd67c
	mov		r1, #0x1
_080bd67c:
	cmp		r1, #0x0
	bne		_080bd68e
	mov		r1, #0x0
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x1
	bhi		_080bd68a
	mov		r1, #0x1
_080bd68a:
	cmp		r1, #0x0
	beq		_080bd692
_080bd68e:
	mov		r0, #0x1
	b		_080bd69a
_080bd692:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bd528
_080bd69a:
	add		sp, #0x38
	pop		{ r4, pc }

.incbin "base.gba", 0xBD69E, 0x2
	thumb_func_end sub_080bd654

	thumb_func_start sub_080bd6a0
sub_080bd6a0:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x2C]
	str		r2, [sp, #0x30]
	str		r3, [sp, #0x34]
	add		r0, sp, #0x28
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x30
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bd6c8
	mov		r1, #0x1
_080bd6c8:
	cmp		r1, #0x0
	bne		_080bd6da
	mov		r1, #0x0
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x1
	bhi		_080bd6d6
	mov		r1, #0x1
_080bd6d6:
	cmp		r1, #0x0
	beq		_080bd6de
_080bd6da:
	mov		r0, #0x1
	b		_080bd6e6
_080bd6de:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bd528
_080bd6e6:
	add		sp, #0x38
	pop		{ r4, pc }

.incbin "base.gba", 0xBD6EA, 0x2
	thumb_func_end sub_080bd6a0

	thumb_func_start sub_080bd6ec
sub_080bd6ec:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x2C]
	str		r2, [sp, #0x30]
	str		r3, [sp, #0x34]
	add		r0, sp, #0x28
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x30
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bd714
	mov		r1, #0x1
_080bd714:
	cmp		r1, #0x0
	bne		_080bd726
	mov		r1, #0x0
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x1
	bhi		_080bd722
	mov		r1, #0x1
_080bd722:
	cmp		r1, #0x0
	beq		_080bd72c
_080bd726:
	mov		r0, #0x1
	neg		r0, r0
	b		_080bd734
_080bd72c:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bd528
_080bd734:
	add		sp, #0x38
	pop		{ r4, pc }
	thumb_func_end sub_080bd6ec

	thumb_func_start sub_080bd738
sub_080bd738:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x2C]
	str		r2, [sp, #0x30]
	str		r3, [sp, #0x34]
	add		r0, sp, #0x28
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x30
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bd760
	mov		r1, #0x1
_080bd760:
	cmp		r1, #0x0
	bne		_080bd772
	mov		r1, #0x0
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x1
	bhi		_080bd76e
	mov		r1, #0x1
_080bd76e:
	cmp		r1, #0x0
	beq		_080bd778
_080bd772:
	mov		r0, #0x1
	neg		r0, r0
	b		_080bd780
_080bd778:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bd528
_080bd780:
	add		sp, #0x38
	pop		{ r4, pc }
	thumb_func_end sub_080bd738

	thumb_func_start sub_080bd784
sub_080bd784:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x2C]
	str		r2, [sp, #0x30]
	str		r3, [sp, #0x34]
	add		r0, sp, #0x28
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x30
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bd7ac
	mov		r1, #0x1
_080bd7ac:
	cmp		r1, #0x0
	bne		_080bd7be
	mov		r1, #0x0
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x1
	bhi		_080bd7ba
	mov		r1, #0x1
_080bd7ba:
	cmp		r1, #0x0
	beq		_080bd7c2
_080bd7be:
	mov		r0, #0x1
	b		_080bd7ca
_080bd7c2:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bd528
_080bd7ca:
	add		sp, #0x38
	pop		{ r4, pc }

.incbin "base.gba", 0xBD7CE, 0x2
	thumb_func_end sub_080bd784

	thumb_func_start sub_080bd7d0
sub_080bd7d0:
	push	{ r4, lr }
	sub		sp, #0x38
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x2C]
	str		r2, [sp, #0x30]
	str		r3, [sp, #0x34]
	add		r0, sp, #0x28
	mov		r1, sp
	bl		sub_080bcd4c
	add		r0, sp, #0x30
	add		r4, sp, #0x14
	add		r1, r4, #0x0
	bl		sub_080bcd4c
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x1
	bhi		_080bd7f8
	mov		r1, #0x1
_080bd7f8:
	cmp		r1, #0x0
	bne		_080bd80a
	mov		r1, #0x0
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x1
	bhi		_080bd806
	mov		r1, #0x1
_080bd806:
	cmp		r1, #0x0
	beq		_080bd80e
_080bd80a:
	mov		r0, #0x1
	b		_080bd816
_080bd80e:
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_080bd528
_080bd816:
	add		sp, #0x38
	pop		{ r4, pc }

.incbin "base.gba", 0xBD81A, 0x2
	thumb_func_end sub_080bd7d0

	thumb_func_start sub_080bd81c
sub_080bd81c:
	push	{ r4, r5, lr }
	sub		sp, #0x14
	add		r2, r0, #0x0
	mov		r0, #0x3
	str		r0, [sp, #0x0]
	lsr		r1, r2, #0x1f
	str		r1, [sp, #0x4]
	cmp		r2, #0x0
	bne		_080bd834
	mov		r0, #0x2
	str		r0, [sp, #0x0]
	b		_080bd88a
_080bd834:
	mov		r0, #0x3c
	str		r0, [sp, #0x8]
	cmp		r1, #0x0
	beq		_080bd85a
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	cmp		r2, r0
	bne		_080bd854
	ldr		r1, _080bd850
	ldr		r0, _080bd84c
	b		_080bd890

.incbin "base.gba", 0xBD84A, 0x2

_080bd84c:	.4byte 0xC1E00000
_080bd850:	.4byte 0x00000000

_080bd854:
	neg		r0, r2
	asr		r1, r0, #0x1f
	b		_080bd85e
_080bd85a:
	add		r0, r2, #0x0
	asr		r1, r2, #0x1f
_080bd85e:
	str		r0, [sp, #0xC]
	str		r1, [sp, #0x10]
	ldr		r0, [sp, #0x10]
	ldr		r1, _080bd894
	cmp		r0, r1
	bhi		_080bd88a
	add		r5, r1, #0x0
	ldr		r4, [sp, #0x8]
_080bd86e:
	ldr		r0, [sp, #0xC]
	ldr		r1, [sp, #0x10]
	lsr		r3, r0, #0x1f
	lsl		r2, r1, #0x1
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r0, #0x1
	str		r0, [sp, #0xC]
	str		r1, [sp, #0x10]
	sub		r4, #0x1
	ldr		r0, [sp, #0x10]
	cmp		r0, r5
	bls		_080bd86e
	str		r4, [sp, #0x8]
_080bd88a:
	mov		r0, sp
	bl		sub_080bcc04
_080bd890:
	add		sp, #0x14
	pop		{ r4, r5, pc }

_080bd894:	.4byte 0x0FFFFFFF
	thumb_func_end sub_080bd81c

	thumb_func_start sub_080bd898
sub_080bd898:
	push	{ lr }
	sub		sp, #0x1c
	str		r0, [sp, #0x14]
	str		r1, [sp, #0x18]
	add		r0, sp, #0x14
	mov		r1, sp
	bl		sub_080bcd4c
	mov		r1, #0x0
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x2
	bne		_080bd8b2
	mov		r1, #0x1
_080bd8b2:
	cmp		r1, #0x0
	bne		_080bd8e6
	mov		r1, #0x0
	cmp		r0, #0x1
	bhi		_080bd8be
	mov		r1, #0x1
_080bd8be:
	cmp		r1, #0x0
	bne		_080bd8e6
	mov		r1, #0x0
	cmp		r0, #0x4
	bne		_080bd8ca
	mov		r1, #0x1
_080bd8ca:
	cmp		r1, #0x0
	beq		_080bd8e0
_080bd8ce:
	ldr		r0, [sp, #0x4]
	ldr		r1, _080bd8dc
	cmp		r0, #0x0
	beq		_080bd904
	add		r1, #0x1
	b		_080bd904

.incbin "base.gba", 0xBD8DA, 0x2

_080bd8dc:	.4byte 0x7FFFFFFF

_080bd8e0:
	ldr		r0, [sp, #0x8]
	cmp		r0, #0x0
	bge		_080bd8ea
_080bd8e6:
	mov		r0, #0x0
	b		_080bd906
_080bd8ea:
	cmp		r0, #0x1e
	bgt		_080bd8ce
	mov		r2, #0x3c
	sub		r2, r2, r0
	ldr		r0, [sp, #0xC]
	ldr		r1, [sp, #0x10]
	bl		sub_080bd9a0
	add		r1, r0, #0x0
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	beq		_080bd904
	neg		r1, r1
_080bd904:
	add		r0, r1, #0x0
_080bd906:
	add		sp, #0x1c
	pop		{ pc }

.incbin "base.gba", 0xBD90A, 0x2
	thumb_func_end sub_080bd898

	thumb_func_start sub_080bd90c
sub_080bd90c:
	push	{ lr }
	sub		sp, #0x1c
	str		r0, [sp, #0x14]
	str		r1, [sp, #0x18]
	add		r0, sp, #0x14
	mov		r1, sp
	bl		sub_080bcd4c
	mov		r1, #0x0
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	bne		_080bd926
	mov		r1, #0x1
_080bd926:
	str		r1, [sp, #0x4]
	mov		r0, sp
	bl		sub_080bcc04
	add		sp, #0x1c
	pop		{ pc }

.incbin "base.gba", 0xBD932, 0x2
	thumb_func_end sub_080bd90c

	thumb_func_start sub_080bd934
sub_080bd934:
	sub		sp, #0x4
	push	{ r4, lr }
	sub		sp, #0x14
	str		r3, [sp, #0x1C]
	ldr		r3, [sp, #0x1C]
	ldr		r4, [sp, #0x0+0x20]
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	str		r2, [sp, #0x8]
	str		r3, [sp, #0xC]
	str		r4, [sp, #0x10]
	mov		r0, sp
	bl		sub_080bcc04
	add		sp, #0x14
	pop		{ r4 }
	pop		{ r3 }
	add		sp, #0x4
	bx		r3

.incbin "base.gba", 0xBD95A, 0x46
	thumb_func_end sub_080bd934

	thumb_func_start sub_080bd9a0
sub_080bd9a0:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r5, r0, #0x0
	cmp		r2, #0x0
	beq		_080bd9d0
	mov		r0, #0x20
	sub		r0, r0, r2
	cmp		r0, #0x0
	bgt		_080bd9bc
	mov		r4, #0x0
	neg		r0, r0
	add		r3, r6, #0x0
	lsr		r3, r0
	b		_080bd9cc
_080bd9bc:
	add		r1, r6, #0x0
	lsl		r1, r0
	add		r4, r6, #0x0
	lsr		r4, r2
	add		r0, r5, #0x0
	lsr		r0, r2
	add		r3, r0, #0x0
	orr		r3, r1
_080bd9cc:
	add		r1, r4, #0x0
	add		r0, r3, #0x0
_080bd9d0:
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0xBD9D2, 0xE
	thumb_func_end sub_080bd9a0

	thumb_func_start sub_080bd9e0
sub_080bd9e0:
	mov		r12, r3
	mov		r3, r8
	push	{ r3 }
	mov		r3, r12
	mov		r2, #0x18
	ldr		r3, _080bd9fc
	add		r0, r2, #0x0
	add		r1, r3, #0x0
	svc		0xab
	mov		r8, r0
	pop		{ r3 }
	mov		r8, r3
	bx		lr

.incbin "base.gba", 0xBD9FA, 0x2

_080bd9fc:	.4byte 0x00020022
	thumb_func_end sub_080bd9e0

	thumb_func_start sub_080bda00
sub_080bda00:
	mov		r0, #0x1
	bx		lr

.incbin "base.gba", 0xBDA04, 0x4
	thumb_func_end sub_080bda00

	thumb_func_start sub_080bda08
sub_080bda08:
	push	{ r4, lr }
	add		r4, r2, #0x0
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	cmp		r4, #0x3
	bls		_080bda44
	orr		r0, r2
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bda44
	b		_080bda2a
_080bda20:
	add		r3, #0x4
	add		r2, #0x4
	sub		r4, #0x4
	cmp		r4, #0x3
	bls		_080bda44
_080bda2a:
	ldr		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	beq		_080bda20
	b		_080bda44
_080bda34:
	ldrb	r0, [r3, #0x0]
	ldrb	r1, [r2, #0x0]
	cmp		r0, r1
	beq		_080bda40
	sub		r0, r0, r1
	b		_080bda4e
_080bda40:
	add		r3, #0x1
	add		r2, #0x1
_080bda44:
	add		r0, r4, #0x0
	sub		r4, #0x1
	cmp		r0, #0x0
	bne		_080bda34
	mov		r0, #0x0
_080bda4e:
	pop		{ r4, pc }
	thumb_func_end sub_080bda08

	thumb_func_start sub_080bda50
sub_080bda50:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldrb	r0, [r4, #0x0]
	ldr		r1, _080bdabc
	mov		r12, r1
	cmp		r0, #0x0
	beq		_080bda92
	mov		r6, r12
	mov		r7, #0x1
_080bda64:
	ldrb	r3, [r4, #0x0]
	add		r1, r3, r6
	add		r0, r7, #0x0
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080bda74
	add		r3, #0x20
_080bda74:
	ldrb	r2, [r5, #0x0]
	add		r1, r2, r6
	add		r0, r7, #0x0
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080bda84
	add		r2, #0x20
_080bda84:
	cmp		r3, r2
	bne		_080bda92
	add		r4, #0x1
	add		r5, #0x1
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080bda64
_080bda92:
	ldrb	r3, [r4, #0x0]
	mov		r0, r12
	add		r1, r3, r0
	mov		r4, #0x1
	add		r0, r4, #0x0
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080bdaa6
	add		r3, #0x20
_080bdaa6:
	ldrb	r2, [r5, #0x0]
	mov		r0, r12
	add		r1, r2, r0
	add		r0, r4, #0x0
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080bdab8
	add		r2, #0x20
_080bdab8:
	sub		r0, r3, r2
	pop		{ r4, r5, r6, r7, pc }

_080bdabc:	.4byte 0x080dffdd
	thumb_func_end sub_080bda50

	thumb_func_start sub_080bdac0
sub_080bdac0:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r0, #0x3
	and		r0, r4
	cmp		r0, #0x0
	bne		_080bdaf6
	ldr		r1, [r4, #0x0]
	ldr		r5, _080bdadc
	add		r0, r1, r5
	bic		r0, r1
	ldr		r3, _080bdae0
	b		_080bdaec

_080bdadc:	.4byte 0xfefefeff
_080bdae0:	.4byte 0x80808080

_080bdae4:
	add		r2, #0x4
	ldr		r1, [r2, #0x0]
	add		r0, r1, r5
	bic		r0, r1
_080bdaec:
	and		r0, r3
	cmp		r0, #0x0
	beq		_080bdae4
	b		_080bdaf6
_080bdaf4:
	add		r2, #0x1
_080bdaf6:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_080bdaf4
	add		r0, r2, #0x0
	add		r1, r6, #0x0
	bl		sub_080bdbf0
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, pc }
	thumb_func_end sub_080bdac0

	thumb_func_start sub_080bdb08
sub_080bdb08:
	push	{ r4, r5, r6, r7, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r7, r1, #0x18
	mov		r0, #0x3
	and		r0, r2
	cmp		r0, #0x0
	bne		_080bdb6e
	mov		r5, #0x0
	mov		r0, #0x0
	ldr		r4, [r2, #0x0]
_080bdb1e:
	lsl		r5, r5, #0x8
	orr		r5, r7
	add		r0, #0x1
	cmp		r0, #0x3
	bls		_080bdb1e
	add		r3, r2, #0x0
	ldr		r0, _080bdb44
	mov		r12, r0
	add		r0, r4, r0
	bic		r0, r4
	ldr		r6, _080bdb48
	and		r0, r6
	cmp		r0, #0x0
	bne		_080bdb6c
	add		r1, r5, #0x0
	eor		r1, r4
	ldr		r2, _080bdb44
	b		_080bdb62

.incbin "base.gba", 0xBDB42, 0x2

_080bdb44:	.4byte 0xfefefeff
_080bdb48:	.4byte 0x80808080

_080bdb4c:
	add		r3, #0x4
	ldr		r2, [r3, #0x0]
	mov		r1, r12
	add		r0, r2, r1
	bic		r0, r2
	and		r0, r6
	cmp		r0, #0x0
	bne		_080bdb6c
	add		r1, r5, #0x0
	eor		r1, r2
	mov		r2, r12
_080bdb62:
	add		r0, r1, r2
	bic		r0, r1
	and		r0, r6
	cmp		r0, #0x0
	beq		_080bdb4c
_080bdb6c:
	add		r2, r3, #0x0
_080bdb6e:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_080bdb84
	cmp		r0, r7
	beq		_080bdb8e
_080bdb78:
	add		r2, #0x1
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_080bdb84
	cmp		r0, r7
	bne		_080bdb78
_080bdb84:
	ldrb	r0, [r2, #0x0]
	cmp		r0, r7
	beq		_080bdb8e
	mov		r0, #0x0
	b		_080bdb90
_080bdb8e:
	add		r0, r2, #0x0
_080bdb90:
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBDB92, 0x2
	thumb_func_end sub_080bdb08

	thumb_func_start sub_080bdb94
sub_080bdb94:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	orr		r0, r3
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bdbda
	ldr		r1, [r2, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_080bdbda
	ldr		r5, _080bdbc0
	ldr		r4, _080bdbc4
_080bdbb0:
	ldr		r1, [r2, #0x0]
	add		r0, r1, r5
	bic		r0, r1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080bdbc8
	mov		r0, #0x0
	b		_080bdbec

_080bdbc0:	.4byte 0xfefefeff
_080bdbc4:	.4byte 0x80808080

_080bdbc8:
	add		r2, #0x4
	add		r3, #0x4
	ldr		r1, [r2, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	beq		_080bdbb0
	b		_080bdbda
_080bdbd6:
	add		r2, #0x1
	add		r3, #0x1
_080bdbda:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_080bdbe6
	ldrb	r1, [r3, #0x0]
	cmp		r0, r1
	beq		_080bdbd6
_080bdbe6:
	ldrb	r2, [r2, #0x0]
	ldrb	r3, [r3, #0x0]
	sub		r0, r2, r3
_080bdbec:
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xBDBEE, 0x2
	thumb_func_end sub_080bdb94

	thumb_func_start sub_080bdbf0
sub_080bdbf0:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r3, r6, #0x0
	add		r2, r1, #0x0
	add		r0, r2, #0x0
	orr		r0, r6
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bdc28
	ldr		r1, [r2, #0x0]
	ldr		r5, _080bdc10
	add		r0, r1, r5
	bic		r0, r1
	ldr		r4, _080bdc14
	b		_080bdc22

_080bdc10:	.4byte 0xfefefeff
_080bdc14:	.4byte 0x80808080

_080bdc18:
	ldmia	r2!, { r0 }
	stmia	r3!, { r0 }
	ldr		r1, [r2, #0x0]
	add		r0, r1, r5
	bic		r0, r1
_080bdc22:
	and		r0, r4
	cmp		r0, #0x0
	beq		_080bdc18
_080bdc28:
	ldrb	r0, [r2, #0x0]
	strb	r0, [r3, #0x0]
	lsl		r0, r0, #0x18
	add		r2, #0x1
	add		r3, #0x1
	cmp		r0, #0x0
	bne		_080bdc28
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0xBDC3A, 0x2
	thumb_func_end sub_080bdbf0

	thumb_func_start sub_080bdc3c
sub_080bdc3c:
	push	{ r4, r5, lr }
	add		r1, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bdc74
	add		r2, r1, #0x0
	ldr		r1, [r2, #0x0]
	ldr		r4, _080bdc58
	add		r0, r1, r4
	bic		r0, r1
	ldr		r3, _080bdc5c
	b		_080bdc68

_080bdc58:	.4byte 0xfefefeff
_080bdc5c:	.4byte 0x80808080

_080bdc60:
	add		r2, #0x4
	ldr		r1, [r2, #0x0]
	add		r0, r1, r4
	bic		r0, r1
_080bdc68:
	and		r0, r3
	cmp		r0, #0x0
	beq		_080bdc60
	add		r1, r2, #0x0
	b		_080bdc74
_080bdc72:
	add		r1, #0x1
_080bdc74:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080bdc72
	sub		r0, r1, r5
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xBDC7E, 0x2
	thumb_func_end sub_080bdc3c

	thumb_func_start sub_080bdc80
sub_080bdc80:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	cmp		r2, #0x0
	beq		_080bdcec
	add		r0, r6, #0x0
	orr		r0, r4
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bdcd0
	add		r3, r6, #0x0
	add		r5, r4, #0x0
	cmp		r2, #0x3
	bls		_080bdccc
	ldr		r1, [r6, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bne		_080bdccc
	ldr		r6, _080bdcdc
	ldr		r4, _080bdce0
_080bdcaa:
	sub		r2, #0x4
	cmp		r2, #0x0
	beq		_080bdcec
	ldr		r1, [r3, #0x0]
	add		r0, r1, r6
	bic		r0, r1
	and		r0, r4
	cmp		r0, #0x0
	bne		_080bdcec
	add		r3, #0x4
	add		r5, #0x4
	cmp		r2, #0x3
	bls		_080bdccc
	ldr		r1, [r3, #0x0]
	ldr		r0, [r5, #0x0]
	cmp		r1, r0
	beq		_080bdcaa
_080bdccc:
	add		r6, r3, #0x0
	add		r4, r5, #0x0
_080bdcd0:
	add		r0, r2, #0x0
	sub		r2, #0x1
	cmp		r0, #0x0
	beq		_080bdcfe
	b		_080bdcf6

.incbin "base.gba", 0xBDCDA, 0x2

_080bdcdc:	.4byte 0xfefefeff
_080bdce0:	.4byte 0x80808080

_080bdce4:
	cmp		r2, #0x0
	beq		_080bdcec
	cmp		r0, #0x0
	bne		_080bdcf0
_080bdcec:
	mov		r0, #0x0
	b		_080bdd04
_080bdcf0:
	add		r6, #0x1
	add		r4, #0x1
	sub		r2, #0x1
_080bdcf6:
	ldrb	r0, [r6, #0x0]
	ldrb	r1, [r4, #0x0]
	cmp		r0, r1
	beq		_080bdce4
_080bdcfe:
	ldrb	r6, [r6, #0x0]
	ldrb	r4, [r4, #0x0]
	sub		r0, r6, r4
_080bdd04:
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0xBDD06, 0x2
	thumb_func_end sub_080bdc80

	thumb_func_start sub_080bdd08
sub_080bdd08:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r4, r7, #0x0
	add		r3, r1, #0x0
	add		r0, r3, #0x0
	orr		r0, r7
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bdd4a
	cmp		r2, #0x3
	bls		_080bdd4a
	ldr		r1, [r3, #0x0]
	ldr		r6, _080bdd2c
	add		r0, r1, r6
	bic		r0, r1
	ldr		r5, _080bdd30
	b		_080bdd44

_080bdd2c:	.4byte 0xfefefeff
_080bdd30:	.4byte 0x80808080

_080bdd34:
	sub		r2, #0x4
	ldmia	r3!, { r0 }
	stmia	r4!, { r0 }
	cmp		r2, #0x3
	bls		_080bdd4a
	ldr		r1, [r3, #0x0]
	add		r0, r1, r6
	bic		r0, r1
_080bdd44:
	and		r0, r5
	cmp		r0, #0x0
	beq		_080bdd34
_080bdd4a:
	cmp		r2, #0x0
	beq		_080bdd5e
	sub		r2, #0x1
	ldrb	r0, [r3, #0x0]
	strb	r0, [r4, #0x0]
	lsl		r0, r0, #0x18
	add		r3, #0x1
	add		r4, #0x1
	cmp		r0, #0x0
	bne		_080bdd4a
_080bdd5e:
	add		r0, r2, #0x0
	sub		r2, #0x1
	cmp		r0, #0x0
	beq		_080bdd74
	mov		r1, #0x0
_080bdd68:
	strb	r1, [r4, #0x0]
	add		r4, #0x1
	add		r0, r2, #0x0
	sub		r2, #0x1
	cmp		r0, #0x0
	bne		_080bdd68
_080bdd74:
	add		r0, r7, #0x0
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_080bdd08

	thumb_func_start sub_080bdd78
sub_080bdd78:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_080bdd8e
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080bddb6
_080bdd8a:
	add		r0, r3, #0x0
	b		_080bddb8
_080bdd8e:
	mov		r1, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080bdd8a
	ldrb	r2, [r3, #0x0]
	cmp		r0, r2
	bne		_080bddae
_080bdd9c:
	add		r1, #0x1
	add		r0, r4, r1
	ldrb	r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_080bdd8a
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	beq		_080bdd9c
_080bddae:
	add		r3, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_080bdd8e
_080bddb6:
	mov		r0, #0x0
_080bddb8:
	pop		{ r4, pc }

.incbin "base.gba", 0xBDDBA, 0x2
	thumb_func_end sub_080bdd78

	thumb_func_start sub_080bddbc
sub_080bddbc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x68
	str		r0, [sp, #0xC]
	add		r5, r1, #0x0
	str		r2, [sp, #0x10]
	mov		r2, #0x0
	mov		r12, r2
	mov		r0, #0x0
	str		r0, [sp, #0x20]
	mov		r6, #0x0
	mov		r7, #0x0
	str		r5, [sp, #0x28]
	ldr		r1, [sp, #0x28]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x2d
	bhi		_080bdec6
	lsl		r0, r0, #0x2
	ldr		r1, _080bddf0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0xBDDEE, 0x2

_080bddf0:	.4byte 0x080bddf4

.incbin "base.gba", 0xBDDF4, 0xB8
	thumb_func_end sub_080bddbc


.incbin "base.gba", 0xBDEAC, 0x1A

_080bdec6:

.incbin "base.gba", 0xBDEC6, 0x18
_080bdede:

.incbin "base.gba", 0xBDEDE, 0xC
_080bdeea:

.incbin "base.gba", 0xBDEEA, 0xC
_080bdef6:

.incbin "base.gba", 0xBDEF6, 0x14
_080bdf0a:

.incbin "base.gba", 0xBDF0A, 0x16
_080bdf20:

.incbin "base.gba", 0xBDF20, 0x14
_080bdf34:

.incbin "base.gba", 0xBDF34, 0xC
_080bdf40:

.incbin "base.gba", 0xBDF40, 0x8
_080bdf48:

.incbin "base.gba", 0xBDF48, 0x18
_080bdf60:

.incbin "base.gba", 0xBDF60, 0xE
_080bdf6e:

.incbin "base.gba", 0xBDF6E, 0x10
_080bdf7e:

.incbin "base.gba", 0xBDF7E, 0x14
_080bdf92:

.incbin "base.gba", 0xBDF92, 0x16
_080bdfa8:

.incbin "base.gba", 0xBDFA8, 0x10
_080bdfb8:

.incbin "base.gba", 0xBDFB8, 0x6
_080bdfbe:

.incbin "base.gba", 0xBDFBE, 0x18
_080bdfd6:

.incbin "base.gba", 0xBDFD6, 0x12
_080bdfe8:

.incbin "base.gba", 0xBDFE8, 0x2
_080bdfea:

.incbin "base.gba", 0xBDFEA, 0x4
_080bdfee:

.incbin "base.gba", 0xBDFEE, 0x8
_080bdff6:

.incbin "base.gba", 0xBDFF6, 0xC
_080be002:

.incbin "base.gba", 0xBE002, 0x10
_080be012:

.incbin "base.gba", 0xBE012, 0x16
_080be028:

.incbin "base.gba", 0xBE028, 0x8
_080be030:

.incbin "base.gba", 0xBE030, 0xC
_080be03c:

.incbin "base.gba", 0xBE03C, 0xC
_080be048:

.incbin "base.gba", 0xBE048, 0x14
_080be05c:

.incbin "base.gba", 0xBE05C, 0x10
_080be06c:

.incbin "base.gba", 0xBE06C, 0xE
_080be07a:

.incbin "base.gba", 0xBE07A, 0xE
_080be088:

.incbin "base.gba", 0xBE088, 0xC
_080be094:	.4byte 0x0098967F

_080be098:

.incbin "base.gba", 0xBE098, 0x6
_080be09e:

.incbin "base.gba", 0xBE09E, 0x2
_080be0a0:

.incbin "base.gba", 0xBE0A0, 0xE
_080be0ae:

.incbin "base.gba", 0xBE0AE, 0xA
_080be0b8:

.incbin "base.gba", 0xBE0B8, 0x6
_080be0be:

.incbin "base.gba", 0xBE0BE, 0x14
_080be0d2:

.incbin "base.gba", 0xBE0D2, 0xC
_080be0de:

.incbin "base.gba", 0xBE0DE, 0x20
_080be0fe:

.incbin "base.gba", 0xBE0FE, 0x3E
_080be13c:

.incbin "base.gba", 0xBE13C, 0x10
_080be14c:

.incbin "base.gba", 0xBE14C, 0x12
_080be15e:

.incbin "base.gba", 0xBE15E, 0x1A
_080be178:	.4byte 0x41F00000
_080be17c:	.4byte 0x00000000
_080be180:	.4byte 0x080e00f0

_080be184:

.incbin "base.gba", 0xBE184, 0x34
_080be1b8:

.incbin "base.gba", 0xBE1B8, 0xC
_080be1c4:	.4byte 0x080e00f0

_080be1c8:

.incbin "base.gba", 0xBE1C8, 0x24
_080be1ec:	.4byte 0x080e00f0

_080be1f0:

.incbin "base.gba", 0xBE1F0, 0x2C
_080be21c:

.incbin "base.gba", 0xBE21C, 0x10
_080be22c:

.incbin "base.gba", 0xBE22C, 0x8
_080be234:

.incbin "base.gba", 0xBE234, 0x14
_080be248:

.incbin "base.gba", 0xBE248, 0x4
_080be24c:	.4byte 0x080e00f0
_080be250:	.4byte 0x080e0208

_080be254:

.incbin "base.gba", 0xBE254, 0xC
_080be260:

.incbin "base.gba", 0xBE260, 0xC
_080be26c:

.incbin "base.gba", 0xBE26C, 0x1A
_080be286:

.incbin "base.gba", 0xBE286, 0x10
_080be296:

.incbin "base.gba", 0xBE296, 0x3A
_080be2d0:	.4byte 0x080e01b8
_080be2d4:	.4byte 0xFCB00000
_080be2d8:	.4byte 0x7FF00000
_080be2dc:	.4byte 0x7CA00000
_080be2e0:	.4byte 0x7C900000
_080be2e4:	.4byte 0x7FEFFFFF

_080be2e8:

.incbin "base.gba", 0xBE2E8, 0x8
_080be2f0:

.incbin "base.gba", 0xBE2F0, 0x8
_080be2f8:

.incbin "base.gba", 0xBE2F8, 0x22
_080be31a:

.incbin "base.gba", 0xBE31A, 0x1E
_080be338:

.incbin "base.gba", 0xBE338, 0x1A
_080be352:

.incbin "base.gba", 0xBE352, 0x10
_080be362:

.incbin "base.gba", 0xBE362, 0x58
_080be3ba:

.incbin "base.gba", 0xBE3BA, 0x12
_080be3cc:

.incbin "base.gba", 0xBE3CC, 0x4
_080be3d0:	.4byte 0x080e00f0
_080be3d4:	.4byte 0x080e01e0
_080be3d8:	.4byte 0x00000000
_080be3dc:	.4byte 0x00000000

_080be3e0:

.incbin "base.gba", 0xBE3E0, 0x16
_080be3f6:

.incbin "base.gba", 0xBE3F6, 0x4
_080be3fa:

.incbin "base.gba", 0xBE3FA, 0x1A
_080be414:

.incbin "base.gba", 0xBE414, 0x18
_080be42c:

.incbin "base.gba", 0xBE42C, 0x2C
_080be458:	.4byte 0x000FFFFF
_080be45c:	.4byte 0x7FF00000

_080be460:

.incbin "base.gba", 0xBE460, 0xC
_080be46c:

.incbin "base.gba", 0xBE46C, 0x14
_080be480:	.4byte 0x000FFFFF
_080be484:	.4byte 0x7FF00000
_080be488:	.4byte 0xFFF00000

_080be48c:

.incbin "base.gba", 0xBE48C, 0xA
_080be496:

.incbin "base.gba", 0xBE496, 0x2C
_080be4c2:

.incbin "base.gba", 0xBE4C2, 0x2
_080be4c4:	.4byte 0x00000000
_080be4c8:	.4byte 0x00000000

_080be4cc:

.incbin "base.gba", 0xBE4CC, 0x28
_080be4f4:	.4byte 0x40000000
_080be4f8:	.4byte 0x00000000
_080be4fc:	.4byte 0x3FF00000
_080be500:	.4byte 0x00000000

_080be504:

.incbin "base.gba", 0xBE504, 0xC
_080be510:

.incbin "base.gba", 0xBE510, 0xA
_080be51a:

.incbin "base.gba", 0xBE51A, 0xE
_080be528:	.4byte 0x000FFFFF
_080be52c:	.4byte 0x3FF00000
_080be530:	.4byte 0x00000000
_080be534:	.4byte 0xBFF00000
_080be538:	.4byte 0x00000000

_080be53c:

.incbin "base.gba", 0xBE53C, 0x18
_080be554:	.4byte 0x3FF00000
_080be558:	.4byte 0x00000000
_080be55c:	.4byte 0x3FE00000
_080be560:	.4byte 0x00000000

_080be564:

.incbin "base.gba", 0xBE564, 0x10
_080be574:

.incbin "base.gba", 0xBE574, 0x8
_080be57c:	.4byte 0x3FE00000
_080be580:	.4byte 0x00000000

_080be584:

.incbin "base.gba", 0xBE584, 0x1A
_080be59e:

.incbin "base.gba", 0xBE59E, 0x8
_080be5a6:

.incbin "base.gba", 0xBE5A6, 0x58
_080be5fe:

.incbin "base.gba", 0xBE5FE, 0xA
_080be608:	.4byte 0x3FE00000
_080be60c:	.4byte 0x00000000
_080be610:	.4byte 0x7FF00000
_080be614:	.4byte 0x7FE00000
_080be618:	.4byte 0xFCB00000
_080be61c:	.4byte 0x7C9FFFFF
_080be620:	.4byte 0x7FEFFFFF

_080be624:

.incbin "base.gba", 0xBE624, 0x8
_080be62c:

.incbin "base.gba", 0xBE62C, 0x40
_080be66c:

.incbin "base.gba", 0xBE66C, 0x20
_080be68c:

.incbin "base.gba", 0xBE68C, 0x3E
_080be6ca:

.incbin "base.gba", 0xBE6CA, 0x12
_080be6dc:

.incbin "base.gba", 0xBE6DC, 0x12
_080be6ee:

.incbin "base.gba", 0xBE6EE, 0x2
_080be6f0:	.4byte 0x3FF00000
_080be6f4:	.4byte 0x00000000
_080be6f8:	.4byte 0x3FE00000
_080be6fc:	.4byte 0x00000000
_080be700:	.4byte 0x7FF00000
_080be704:	.4byte 0x000FFFFF
_080be708:	.4byte 0x3FDFFFFF
_080be70c:	.4byte 0x94A03595
_080be710:	.4byte 0x3FE00000
_080be714:	.4byte 0x35AFE535

_080be718:

.incbin "base.gba", 0xBE718, 0x12
_080be72a:

.incbin "base.gba", 0xBE72A, 0x20
_080be74a:

.incbin "base.gba", 0xBE74A, 0x4A
_080be794:	.4byte 0x3FCFFFFF
_080be798:	.4byte 0x94A03595

_080be79c:

.incbin "base.gba", 0xBE79C, 0xC
_080be7a8:

.incbin "base.gba", 0xBE7A8, 0xA
_080be7b2:

.incbin "base.gba", 0xBE7B2, 0x2
_080be7b4:

.incbin "base.gba", 0xBE7B4, 0x14
_080be7c8:	.4byte 0xFFFFFC02
_080be7cc:	.4byte 0x00000433

_080be7d0:

.incbin "base.gba", 0xBE7D0, 0x4
_080be7d4:

.incbin "base.gba", 0xBE7D4, 0x10
_080be7e4:

.incbin "base.gba", 0xBE7E4, 0x6
_080be7ea:

.incbin "base.gba", 0xBE7EA, 0x12
_080be7fc:

.incbin "base.gba", 0xBE7FC, 0x24
_080be820:

.incbin "base.gba", 0xBE820, 0x10
_080be830:

.incbin "base.gba", 0xBE830, 0x12
_080be842:

.incbin "base.gba", 0xBE842, 0x10
_080be852:

.incbin "base.gba", 0xBE852, 0x12
_080be864:

.incbin "base.gba", 0xBE864, 0x26
_080be88a:

.incbin "base.gba", 0xBE88A, 0x14
_080be89e:

.incbin "base.gba", 0xBE89E, 0x28
	non_word_aligned_thumb_func_start sub_080be8c6
sub_080be8c6:
	ldr		r0, [sp, #0x10]
	cmp		r0, #0x0
	beq		_080be8d0
	ldr		r1, [sp, #0x28]
	str		r1, [r0, #0x0]
_080be8d0:
	add		r1, r7, #0x0
	add		r0, r6, #0x0
	ldr		r2, [sp, #0x20]
	cmp		r2, #0x0
	beq		_080be8de
	bl		sub_080bd90c
_080be8de:
	add		sp, #0x68
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBE8EA, 0x2

_080be8ec:	.4byte 0x000FFFFF
	thumb_func_end sub_080be8c6

	thumb_func_start sub_080be8f0
sub_080be8f0:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, _080be904
	ldr		r0, [r0, #0x0]
	add		r1, r3, #0x0
	bl		sub_080bddbc
	pop		{ pc }

.incbin "base.gba", 0xBE902, 0x2

_080be904:	.4byte 0x0200EE40

.incbin "base.gba", 0xBE908, 0xC
	thumb_func_end sub_080be8f0

	thumb_func_start sub_080be914
sub_080be914:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r3, r4, #0x0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080be940
	ldr		r5, _080be944
	mov		r6, #0x2
_080be924:
	ldrb	r2, [r3, #0x0]
	add		r1, r2, r5
	add		r0, r6, #0x0
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080be938
	add		r0, r2, #0x0
	sub		r0, #0x20
	strb	r0, [r3, #0x0]
_080be938:
	add		r3, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_080be924
_080be940:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, pc }

_080be944:	.4byte 0x080dffdd
	thumb_func_end sub_080be914

	thumb_func_start sub_080be948
sub_080be948:
	push	{ r4, r5, lr }
	sub		sp, #0x58
	mov		r4, sp
	mov		r5, #0x0
	mov		r3, #0x82
	lsl		r3, r3, #0x2
	strh		r3, [r4, #0xC]
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x10]
	ldr		r0, _080be974
	str		r0, [sp, #0x8]
	str		r0, [sp, #0x14]
	ldr		r0, _080be978
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x54]
	mov		r0, sp
	bl		sub_080bf2e0
	ldr		r1, [sp, #0x0]
	strb	r5, [r1, #0x0]
	add		sp, #0x58
	pop		{ r4, r5, pc }

_080be974:	.4byte 0x7FFFFFFF
_080be978:	.4byte 0x0200EE40
	thumb_func_end sub_080be948

	thumb_func_start sub_080be97c
sub_080be97c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, [r4, #0x4c]
	cmp		r0, #0x0
	bne		_080be998
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0x10
	bl		sub_080c0464
	str		r0, [r4, #0x4c]
	cmp		r0, #0x0
	beq		_080be9c0
_080be998:
	ldr		r1, [r4, #0x4c]
	lsl		r0, r6, #0x2
	add		r2, r0, r1
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	beq		_080be9aa
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	b		_080be9c8
_080be9aa:
	mov		r5, #0x1
	lsl		r5, r6
	lsl		r2, r5, #0x2
	add		r2, #0x14
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_080c0464
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bne		_080be9c4
_080be9c0:
	mov		r0, #0x0
	b		_080be9d0
_080be9c4:
	str		r6, [r1, #0x4]
	str		r5, [r1, #0x8]
_080be9c8:
	mov		r0, #0x0
	str		r0, [r1, #0x10]
	str		r0, [r1, #0xc]
	add		r0, r1, #0x0
_080be9d0:
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0xBE9D2, 0x2
	thumb_func_end sub_080be97c

	thumb_func_start sub_080be9d4
sub_080be9d4:
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	cmp		r2, #0x0
	beq		_080be9ea
	ldr		r0, [r2, #0x4]
	ldr		r1, [r3, #0x4c]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	str		r2, [r0, #0x0]
_080be9ea:
	bx		lr
	thumb_func_end sub_080be9d4

	thumb_func_start sub_080be9ec
sub_080be9ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	ldr		r6, [r5, #0x10]
	add		r3, r5, #0x0
	add		r3, #0x14
	mov		r7, #0x0
	ldr		r0, _080bea80
	mov		r12, r0
_080bea08:
	ldr		r1, [r3, #0x0]
	add		r0, r1, #0x0
	mov		r2, r12
	and		r0, r2
	add		r2, r0, #0x0
	mul		r2, r4
	add		r2, r8
	lsr		r1, r1, #0x10
	add		r0, r1, #0x0
	mul		r0, r4
	lsr		r1, r2, #0x10
	add		r0, r0, r1
	lsr		r1, r0, #0x10
	mov		r8, r1
	lsl		r0, r0, #0x10
	mov		r1, r12
	and		r2, r1
	add		r0, r0, r2
	stmia	r3!, { r0 }
	add		r7, #0x1
	cmp		r7, r6
	blt		_080bea08
	mov		r2, r8
	cmp		r2, #0x0
	beq		_080bea76
	ldr		r0, [r5, #0x8]
	cmp		r6, r0
	blt		_080bea66
	ldr		r1, [r5, #0x4]
	add		r1, #0x1
	mov		r0, r9
	bl		sub_080be97c
	add		r4, r0, #0x0
	add		r0, #0xc
	add		r1, r5, #0x0
	add		r1, #0xc
	ldr		r2, [r5, #0x10]
	lsl		r2, r2, #0x2
	add		r2, #0x8
	bl		sub_0808c818
	mov		r0, r9
	add		r1, r5, #0x0
	bl		sub_080be9d4
	add		r5, r4, #0x0
_080bea66:
	lsl		r1, r6, #0x2
	add		r0, r5, #0x0
	add		r0, #0x14
	add		r0, r0, r1
	mov		r1, r8
	str		r1, [r0, #0x0]
	add		r6, #0x1
	str		r6, [r5, #0x10]
_080bea76:
	add		r0, r5, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7, pc }

_080bea80:	.4byte 0x0000FFFF
	thumb_func_end sub_080be9ec

	thumb_func_start sub_080bea84
sub_080bea84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	mov		r8, r3
	mov		r0, r8
	add		r0, #0x8
	mov		r1, #0x9
	bl		sub_080bbcac
	mov		r1, #0x0
	mov		r2, #0x1
	cmp		r0, #0x1
	ble		_080beaac
_080beaa4:
	lsl		r2, r2, #0x1
	add		r1, #0x1
	cmp		r0, r2
	bgt		_080beaa4
_080beaac:
	add		r0, r7, #0x0
	bl		sub_080be97c
	add		r1, r0, #0x0
	ldr		r0, [sp, #0x0+0x18]
	str		r0, [r1, #0x14]
	mov		r0, #0x1
	str		r0, [r1, #0x10]
	mov		r5, #0x9
	cmp		r6, #0x9
	ble		_080beade
	add		r4, #0x9
_080beac4:
	ldrb	r3, [r4, #0x0]
	sub		r3, #0x30
	add		r4, #0x1
	add		r0, r7, #0x0
	mov		r2, #0xa
	bl		sub_080be9ec
	add		r1, r0, #0x0
	add		r5, #0x1
	cmp		r5, r6
	blt		_080beac4
	add		r4, #0x1
	b		_080beae0
_080beade:
	add		r4, #0xa
_080beae0:
	cmp		r5, r8
	bge		_080beafe
	mov		r0, r8
	sub		r5, r0, r5
_080beae8:
	ldrb	r3, [r4, #0x0]
	sub		r3, #0x30
	add		r4, #0x1
	add		r0, r7, #0x0
	mov		r2, #0xa
	bl		sub_080be9ec
	add		r1, r0, #0x0
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_080beae8
_080beafe:
	add		r0, r1, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBEB06, 0x2
	thumb_func_end sub_080bea84

	thumb_func_start sub_080beb08
sub_080beb08:
	add		r1, r0, #0x0
	mov		r2, #0x0
	ldr		r0, _080beb58
	and		r0, r1
	cmp		r0, #0x0
	bne		_080beb18
	mov		r2, #0x10
	lsl		r1, r1, #0x10
_080beb18:
	mov		r0, #0xff
	lsl		r0, r0, #0x18
	and		r0, r1
	cmp		r0, #0x0
	bne		_080beb26
	add		r2, #0x8
	lsl		r1, r1, #0x8
_080beb26:
	mov		r0, #0xf0
	lsl		r0, r0, #0x18
	and		r0, r1
	cmp		r0, #0x0
	bne		_080beb34
	add		r2, #0x4
	lsl		r1, r1, #0x4
_080beb34:
	mov		r0, #0xc0
	lsl		r0, r0, #0x18
	and		r0, r1
	cmp		r0, #0x0
	bne		_080beb42
	add		r2, #0x2
	lsl		r1, r1, #0x2
_080beb42:
	cmp		r1, #0x0
	blt		_080beb5c
	add		r2, #0x1
	mov		r0, #0x80
	lsl		r0, r0, #0x17
	and		r0, r1
	cmp		r0, #0x0
	bne		_080beb5c
	mov		r0, #0x20
	b		_080beb5e

.incbin "base.gba", 0xBEB56, 0x2

_080beb58:	.4byte 0xffff0000

_080beb5c:
	add		r0, r2, #0x0
_080beb5e:
	bx		lr
	thumb_func_end sub_080beb08

	thumb_func_start sub_080beb60
sub_080beb60:
	add		r3, r0, #0x0
	ldr		r1, [r3, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_080beb90
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080beb78
	mov		r0, #0x0
	b		_080bebe0
_080beb78:
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080beb88
	lsr		r0, r1, #0x1
	str		r0, [r3, #0x0]
	mov		r0, #0x1
	b		_080bebe0
_080beb88:
	lsr		r0, r1, #0x2
	str		r0, [r3, #0x0]
	mov		r0, #0x2
	b		_080bebe0
_080beb90:
	mov		r2, #0x0
	ldr		r0, _080bebd8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080beb9e
	mov		r2, #0x10
	lsr		r1, r1, #0x10
_080beb9e:
	mov		r0, #0xff
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bebaa
	add		r2, #0x8
	lsr		r1, r1, #0x8
_080bebaa:
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bebb6
	add		r2, #0x4
	lsr		r1, r1, #0x4
_080bebb6:
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bebc2
	add		r2, #0x2
	lsr		r1, r1, #0x2
_080bebc2:
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_080bebdc
	add		r2, #0x1
	lsr		r1, r1, #0x1
	cmp		r1, #0x0
	bne		_080bebdc
	mov		r0, #0x20
	b		_080bebe0

.incbin "base.gba", 0xBEBD6, 0x2

_080bebd8:	.4byte 0x0000FFFF

_080bebdc:
	str		r1, [r3, #0x0]
	add		r0, r2, #0x0
_080bebe0:
	bx		lr

.incbin "base.gba", 0xBEBE2, 0x2
	thumb_func_end sub_080beb60

	thumb_func_start sub_080bebe4
sub_080bebe4:
	push	{ r4, lr }
	add		r4, r1, #0x0
	mov		r1, #0x1
	bl		sub_080be97c
	str		r4, [r0, #0x14]
	mov		r1, #0x1
	str		r1, [r0, #0x10]
	pop		{ r4, pc }

.incbin "base.gba", 0xBEBF6, 0x2
	thumb_func_end sub_080bebe4

	thumb_func_start sub_080bebf8
sub_080bebf8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	ldr		r1, [r4, #0x10]
	ldr		r0, [r5, #0x10]
	cmp		r1, r0
	bge		_080bec18
	str		r4, [sp, #0x0]
	add		r4, r5, #0x0
	ldr		r5, [sp, #0x0]
_080bec18:
	ldr		r1, [r4, #0x4]
	ldr		r6, [r4, #0x10]
	ldr		r0, [r5, #0x10]
	mov		r8, r0
	mov		r2, r8
	add		r2, r6, r2
	str		r2, [sp, #0x4]
	ldr		r0, [r4, #0x8]
	cmp		r2, r0
	ble		_080bec2e
	add		r1, #0x1
_080bec2e:
	add		r0, r3, #0x0
	bl		sub_080be97c
	str		r0, [sp, #0x0]
	add		r7, r0, #0x0
	add		r7, #0x14
	ldr		r1, [sp, #0x4]
	lsl		r0, r1, #0x2
	add		r2, r7, r0
	str		r2, [sp, #0x8]
	str		r0, [sp, #0x18]
	add		r1, r4, #0x0
	add		r1, #0x14
	lsl		r3, r6, #0x2
	add		r2, r5, #0x0
	add		r2, #0x14
	mov		r5, r8
	lsl		r4, r5, #0x2
	ldr		r0, [sp, #0x8]
	cmp		r7, r0
	bcs		_080bec62
	mov		r0, #0x0
_080bec5a:
	stmia	r7!, { r0 }
	ldr		r5, [sp, #0x8]
	cmp		r7, r5
	bcc		_080bec5a
_080bec62:
	str		r1, [sp, #0x8]
	add		r3, r1, r3
	str		r3, [sp, #0xC]
	mov		r8, r2
	add		r4, r8
	str		r4, [sp, #0x10]
	ldr		r0, [sp, #0x0]
	add		r0, #0x14
	mov		r9, r0
	mov		r1, r9
	str		r1, [sp, #0x20]
	cmp		r8, r4
	bcs		_080bed2a
_080bec7c:
	mov		r2, r8
	ldmia	r2!, { r6 }
	str		r2, [sp, #0x14]
	ldr		r0, _080bed38
	and		r6, r0
	mov		r4, r9
	add		r4, #0x4
	str		r4, [sp, #0x1C]
	cmp		r6, #0x0
	beq		_080becd4
	ldr		r7, [sp, #0x8]
	mov		r5, r9
	mov		r1, #0x0
	mov		r12, r1
	mov		r10, r0
_080bec9a:
	ldmia	r7!, { r3 }
	add		r0, r3, #0x0
	mov		r2, r10
	and		r0, r2
	add		r1, r0, #0x0
	mul		r1, r6
	ldr		r2, [r5, #0x0]
	add		r0, r2, #0x0
	mov		r4, r10
	and		r0, r4
	add		r1, r1, r0
	mov		r0, r12
	add		r4, r1, r0
	lsr		r1, r4, #0x10
	lsr		r3, r3, #0x10
	add		r0, r3, #0x0
	mul		r0, r6
	lsr		r2, r2, #0x10
	add		r0, r0, r2
	add		r2, r0, r1
	lsr		r0, r2, #0x10
	mov		r12, r0
	strh	r2, [r5, #0x0]
	strh	r4, [r5, #0x2]
	add		r5, #0x4
	ldr		r1, [sp, #0xC]
	cmp		r7, r1
	bcc		_080bec9a
	str		r0, [r5, #0x0]
_080becd4:
	mov		r2, r8
	ldrh	r6, [r2, #0x2]
	cmp		r6, #0x0
	beq		_080bed1c
	ldr		r7, [sp, #0x8]
	mov		r5, r9
	mov		r4, #0x0
	mov		r12, r4
	ldr		r2, [r5, #0x0]
	ldr		r3, _080bed38
_080bece8:
	ldmia	r7!, { r1 }
	add		r0, r1, #0x0
	and		r0, r3
	mul		r0, r6
	ldrh	r4, [r5, #0x2]
	add		r4, r4, r0
	mov		r8, r4
	add		r4, r12
	lsr		r0, r4, #0x10
	mov		r12, r0
	strh	r4, [r5, #0x0]
	strh	r2, [r5, #0x2]
	add		r5, #0x4
	lsr		r1, r1, #0x10
	mul		r1, r6
	ldr		r0, [r5, #0x0]
	and		r0, r3
	add		r1, r1, r0
	mov		r4, r12
	add		r2, r1, r4
	lsr		r0, r2, #0x10
	mov		r12, r0
	ldr		r1, [sp, #0xC]
	cmp		r7, r1
	bcc		_080bece8
	str		r2, [r5, #0x0]
_080bed1c:
	ldr		r2, [sp, #0x14]
	mov		r8, r2
	ldr		r4, [sp, #0x1C]
	mov		r9, r4
	ldr		r5, [sp, #0x10]
	cmp		r8, r5
	bcc		_080bec7c
_080bed2a:
	ldr		r0, [sp, #0x20]
	ldr		r1, [sp, #0x18]
	add		r5, r0, r1
	ldr		r2, [sp, #0x4]
	cmp		r2, #0x0
	ble		_080bed4e
	b		_080bed46

_080bed38:	.4byte 0x0000FFFF

_080bed3c:
	ldr		r4, [sp, #0x4]
	sub		r4, #0x1
	str		r4, [sp, #0x4]
	cmp		r4, #0x0
	ble		_080bed4e
_080bed46:
	sub		r5, #0x4
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_080bed3c
_080bed4e:
	ldr		r5, [sp, #0x4]
	ldr		r0, [sp, #0x0]
	str		r5, [r0, #0x10]
	ldr		r0, [sp, #0x0]
	add		sp, #0x24
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBED62, 0x2
	thumb_func_end sub_080bebf8

	thumb_func_start sub_080bed64
sub_080bed64:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	mov		r1, #0x3
	and		r1, r6
	cmp		r1, #0x0
	beq		_080bed8e
	ldr		r0, _080bedb0
	sub		r1, #0x1
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r2, [r1, #0x0]
	mov		r0, r8
	add		r1, r7, #0x0
	mov		r3, #0x0
	bl		sub_080be9ec
	add		r7, r0, #0x0
_080bed8e:
	asr		r6, r6, #0x2
	cmp		r6, #0x0
	beq		_080bedf4
	mov		r0, r8
	ldr		r5, [r0, #0x48]
	add		r4, r5, #0x0
	cmp		r5, #0x0
	bne		_080bedd0
	ldr		r1, _080bedb4
	bl		sub_080bebe4
	mov		r1, r8
	str		r0, [r1, #0x48]
	add		r5, r0, #0x0
	str		r4, [r5, #0x0]
	b		_080bedd0

.incbin "base.gba", 0xBEDAE, 0x2

_080bedb0:	.4byte 0x080e00e4
_080bedb4:	.4byte 0x00000271

_080bedb8:
	ldr		r0, [r5, #0x0]
	add		r4, r0, #0x0
	cmp		r0, #0x0
	bne		_080bedce
	mov		r0, r8
	add		r1, r5, #0x0
	add		r2, r5, #0x0
	bl		sub_080bebf8
	str		r0, [r5, #0x0]
	str		r4, [r0, #0x0]
_080bedce:
	add		r5, r0, #0x0
_080bedd0:
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_080bedee
	mov		r0, r8
	add		r1, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_080bebf8
	add		r4, r0, #0x0
	mov		r0, r8
	add		r1, r7, #0x0
	bl		sub_080be9d4
	add		r7, r4, #0x0
_080bedee:
	asr		r6, r6, #0x1
	cmp		r6, #0x0
	bne		_080bedb8
_080bedf4:
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_080bed64

	thumb_func_start sub_080bedfc
sub_080bedfc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r10, r0
	mov		r8, r1
	add		r5, r2, #0x0
	asr		r6, r5, #0x5
	ldr		r1, [r1, #0x4]
	mov		r2, r8
	ldr		r0, [r2, #0x10]
	add		r0, r6, r0
	add		r7, r0, #0x1
	ldr		r2, [r2, #0x8]
	cmp		r7, r2
	ble		_080bee26
_080bee1e:
	add		r1, #0x1
	lsl		r2, r2, #0x1
	cmp		r7, r2
	bgt		_080bee1e
_080bee26:
	mov		r0, r10
	bl		sub_080be97c
	mov		r9, r0
	mov		r4, r9
	add		r4, #0x14
	mov		r0, r8
	add		r0, #0x14
	cmp		r6, #0x0
	ble		_080bee46
	mov		r1, #0x0
	add		r2, r6, #0x0
_080bee3e:
	stmia	r4!, {  r1 }
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_080bee3e
_080bee46:
	add		r3, r0, #0x0
	mov		r1, r8
	ldr		r0, [r1, #0x10]
	lsl		r0, r0, #0x2
	add		r6, r3, r0
	mov		r0, #0x1f
	and		r5, r0
	cmp		r5, #0x0
	beq		_080bee78
	mov		r0, #0x20
	sub		r1, r0, r5
	mov		r2, #0x0
_080bee5e:
	ldr		r0, [r3, #0x0]
	lsl		r0, r5
	orr		r0, r2
	stmia	r4!, { r0 }
	ldmia	r3!, { r2 }
	lsr		r2, r1
	cmp		r3, r6
	bcc		_080bee5e
	str		r2, [r4, #0x0]
	cmp		r2, #0x0
	beq		_080bee80
	add		r7, #0x1
	b		_080bee80
_080bee78:
	ldmia	r3!, { r0 }
	stmia	r4!, { r0 }
	cmp		r3, r6
	bcc		_080bee78
_080bee80:
	sub		r0, r7, #0x1
	mov		r2, r9
	str		r0, [r2, #0x10]
	mov		r0, r10
	mov		r1, r8
	bl		sub_080be9d4
	mov		r0, r9
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBEE9A, 0x2
	thumb_func_end sub_080bedfc

	thumb_func_start sub_080bee9c
sub_080bee9c:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r2, #0x10]
	ldr		r1, [r5, #0x10]
	sub		r0, r0, r1
	cmp		r0, #0x0
	bne		_080beed8
	add		r4, r2, #0x0
	add		r4, #0x14
	lsl		r1, r1, #0x2
	add		r3, r4, r1
	add		r0, r5, #0x0
	add		r0, #0x14
	add		r1, r0, r1
_080beeba:
	sub		r3, #0x4
	sub		r1, #0x4
	ldr		r0, [r3, #0x0]
	ldr		r2, [r1, #0x0]
	cmp		r0, r2
	beq		_080beed2
	mov		r1, #0x1
	cmp		r0, r2
	bcs		_080beece
	sub		r1, #0x2
_080beece:
	add		r0, r1, #0x0
	b		_080beed8
_080beed2:
	cmp		r3, r4
	bhi		_080beeba
	mov		r0, #0x0
_080beed8:
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xBEEDA, 0x2
	thumb_func_end sub_080bee9c

	thumb_func_start sub_080beedc
sub_080beedc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	mov		r8, r2
	add		r0, r5, #0x0
	mov		r1, r8
	bl		sub_080bee9c
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_080bef0e
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080be97c
	add		r7, r0, #0x0
	mov		r0, #0x1
	str		r0, [r7, #0x10]
	str		r4, [r7, #0x14]
	b		_080befbe
_080bef0e:
	cmp		r4, #0x0
	bge		_080bef1c
	add		r7, r5, #0x0
	mov		r5, r8
	mov		r8, r7
	mov		r4, #0x1
	b		_080bef1e
_080bef1c:
	mov		r4, #0x0
_080bef1e:
	ldr		r1, [r5, #0x4]
	add		r0, r6, #0x0
	bl		sub_080be97c
	add		r7, r0, #0x0
	str		r4, [r7, #0xc]
	ldr		r0, [r5, #0x10]
	mov		r9, r0
	add		r6, r5, #0x0
	add		r6, #0x14
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	mov		r10, r0
	mov		r1, r8
	ldr		r0, [r1, #0x10]
	mov		r3, #0x14
	add		r3, r8
	mov		r12, r3
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r0, [sp, #0x0]
	add		r4, r7, #0x0
	add		r4, #0x14
	mov		r5, #0x0
	ldr		r0, _080befa8
	mov		r8, r0
_080bef52:
	ldmia	r6!, { r1 }
	str		r1, [sp, #0x4]
	mov		r3, r8
	and		r1, r3
	mov		r0, r12
	add		r0, #0x4
	mov		r12, r0
	sub		r0, #0x4
	ldmia	r0!, { r2 }
	add		r0, r2, #0x0
	and		r0, r3
	sub		r1, r1, r0
	add		r0, r1, r5
	asr		r5, r0, #0x10
	ldr		r1, [sp, #0x4]
	lsr		r3, r1, #0x10
	lsr		r2, r2, #0x10
	sub		r3, r3, r2
	add		r1, r3, r5
	asr		r5, r1, #0x10
	strh	r1, [r4, #0x0]
	strh	r0, [r4, #0x2]
	add		r4, #0x4
	ldr		r3, [sp, #0x0]
	cmp		r12, r3
	bcc		_080bef52
	cmp		r6, r10
	bcs		_080befb2
	ldr		r2, _080befa8
_080bef8c:
	ldmia	r6!, { r1 }
	add		r0, r1, #0x0
	and		r0, r2
	add		r0, r0, r5
	asr		r5, r0, #0x10
	lsr		r1, r1, #0x10
	add		r1, r1, r5
	asr		r5, r1, #0x10
	strh	r1, [r4, #0x0]
	strh	r0, [r4, #0x2]
	add		r4, #0x4
	cmp		r6, r10
	bcc		_080bef8c
	b		_080befb2

_080befa8:	.4byte 0x0000FFFF

_080befac:
	mov		r0, #0x1
	neg		r0, r0
	add		r9, r0
_080befb2:
	sub		r4, #0x4
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080befac
	mov		r1, r9
	str		r1, [r7, #0x10]
_080befbe:
	add		r0, r7, #0x0
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_080beedc

	thumb_func_start sub_080befcc
sub_080befcc:
	push	{ r4, lr }
	ldr		r2, _080befe0
	and		r2, r0
	ldr		r0, _080befe4
	add		r2, r2, r0
	cmp		r2, #0x0
	ble		_080befe8
	add		r3, r2, #0x0
	mov		r4, #0x0
	b		_080bf012

_080befe0:	.4byte 0x7FF00000
_080befe4:	.4byte 0xFCC00000

_080befe8:
	neg		r0, r2
	asr		r2, r0, #0x14
	cmp		r2, #0x13
	bgt		_080beffc
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	add		r3, r0, #0x0
	asr		r3, r2
	mov		r4, #0x0
	b		_080bf012
_080beffc:
	mov		r3, #0x0
	sub		r2, #0x14
	cmp		r2, #0x1e
	bgt		_080bf00e
	mov		r0, #0x1f
	sub		r0, r0, r2
	mov		r1, #0x1
	lsl		r1, r0
	b		_080bf010
_080bf00e:
	mov		r1, #0x1
_080bf010:
	add		r4, r1, #0x0
_080bf012:
	add		r1, r4, #0x0
	add		r0, r3, #0x0
	pop		{ r4, pc }
	thumb_func_end sub_080befcc

	thumb_func_start sub_080bf018
sub_080bf018:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r4, r1, #0x0
	mov		r1, #0x14
	add		r1, r1, r0
	mov		r8, r1
	ldr		r0, [r0, #0x10]
	lsl		r0, r0, #0x2
	add		r5, r1, r0
	sub		r5, #0x4
	ldr		r2, [r5, #0x0]
	add		r0, r2, #0x0
	str		r2, [sp, #0x0]
	bl		sub_080beb08
	add		r3, r0, #0x0
	mov		r0, #0x20
	sub		r0, r0, r3
	str		r0, [r4, #0x0]
	ldr		r2, [sp, #0x0]
	cmp		r3, #0xa
	bgt		_080bf078
	mov		r0, #0xb
	sub		r0, r0, r3
	add		r1, r2, #0x0
	lsr		r1, r0
	ldr		r0, _080bf060
	add		r6, r1, #0x0
	orr		r6, r0
	cmp		r5, r8
	bls		_080bf064
	sub		r5, #0x4
	ldr		r1, [r5, #0x0]
	b		_080bf066

_080bf060:	.4byte 0x3FF00000

_080bf064:
	mov		r1, #0x0
_080bf066:
	add		r0, r3, #0x0
	add		r0, #0x15
	lsl		r2, r0
	mov		r0, #0xb
	sub		r0, r0, r3
	lsr		r1, r0
	add		r7, r2, #0x0
	orr		r7, r1
	b		_080bf0c4
_080bf078:
	cmp		r5, r8
	bls		_080bf082
	sub		r5, #0x4
	ldr		r4, [r5, #0x0]
	b		_080bf084
_080bf082:
	mov		r4, #0x0
_080bf084:
	sub		r3, #0xb
	cmp		r3, #0x0
	beq		_080bf0bc
	lsl		r2, r3
	mov		r0, #0x20
	sub		r0, r0, r3
	add		r1, r4, #0x0
	lsr		r1, r0
	ldr		r0, _080bf0a8
	orr		r1, r0
	add		r6, r2, #0x0
	orr		r6, r1
	cmp		r5, r8
	bls		_080bf0ac
	sub		r5, #0x4
	ldr		r2, [r5, #0x0]
	b		_080bf0ae

.incbin "base.gba", 0xBF0A6, 0x2

_080bf0a8:	.4byte 0x3FF00000

_080bf0ac:
	mov		r2, #0x0
_080bf0ae:
	lsl		r4, r3
	mov		r0, #0x20
	sub		r0, r0, r3
	lsr		r2, r0
	add		r7, r4, #0x0
	orr		r7, r2
	b		_080bf0c4
_080bf0bc:
	ldr		r0, _080bf0d0
	add		r6, r2, #0x0
	orr		r6, r0
	add		r7, r4, #0x0
_080bf0c4:
	add		r1, r7, #0x0
	add		r0, r6, #0x0
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }

_080bf0d0:	.4byte 0x3FF00000
	thumb_func_end sub_080bf018

	thumb_func_start sub_080bf0d4
sub_080bf0d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r9, r3
	ldr		r3, [sp, #0x0+0x28]
	mov		r10, r3
	add		r5, r2, #0x0
	add		r4, r1, #0x0
	mov		r1, #0x1
	bl		sub_080be97c
	add		r6, r0, #0x0
	mov		r0, #0x14
	add		r0, r0, r6
	mov		r8, r0
	ldr		r2, _080bf13c
	add		r1, r4, #0x0
	and		r2, r1
	str		r2, [sp, #0x4]
	ldr		r0, _080bf140
	and		r4, r0
	lsr		r7, r4, #0x14
	cmp		r7, #0x0
	beq		_080bf112
	mov		r0, #0x80
	lsl		r0, r0, #0xd
	orr		r0, r2
	str		r0, [sp, #0x4]
_080bf112:
	str		r5, [sp, #0x0]
	cmp		r5, #0x0
	beq		_080bf15c
	mov		r0, sp
	bl		sub_080beb60
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_080bf144
	mov		r0, #0x20
	sub		r0, r0, r2
	ldr		r1, [sp, #0x4]
	lsl		r1, r0
	ldr		r0, [sp, #0x0]
	orr		r0, r1
	str		r0, [r6, #0x14]
	ldr		r0, [sp, #0x4]
	lsr		r0, r2
	str		r0, [sp, #0x4]
	b		_080bf148

.incbin "base.gba", 0xBF13A, 0x2

_080bf13c:	.4byte 0x000FFFFF
_080bf140:	.4byte 0x7FFFFFFF

_080bf144:
	ldr		r0, [sp, #0x0]
	str		r0, [r6, #0x14]
_080bf148:
	ldr		r0, [sp, #0x4]
	mov		r1, r8
	str		r0, [r1, #0x4]
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_080bf156
	mov		r1, #0x2
_080bf156:
	str		r1, [r6, #0x10]
	add		r4, r1, #0x0
	b		_080bf170
_080bf15c:
	add		r0, sp, #0x4
	bl		sub_080beb60
	add		r2, r0, #0x0
	ldr		r0, [sp, #0x4]
	str		r0, [r6, #0x14]
	mov		r0, #0x1
	str		r0, [r6, #0x10]
	mov		r4, #0x1
	add		r2, #0x20
_080bf170:
	cmp		r7, #0x0
	beq		_080bf18c
	ldr		r3, _080bf188
	add		r0, r2, r3
	add		r0, r7, r0
	mov		r1, r9
	str		r0, [r1, #0x0]
	mov		r0, #0x35
	sub		r0, r0, r2
	mov		r3, r10
	str		r0, [r3, #0x0]
	b		_080bf1a8

_080bf188:	.4byte 0xfffffbcd

_080bf18c:
	ldr		r1, _080bf1b8
	add		r0, r2, r1
	mov		r3, r9
	str		r0, [r3, #0x0]
	lsl		r0, r4, #0x2
	add		r0, r8
	sub		r0, #0x4
	ldr		r0, [r0, #0x0]
	bl		sub_080beb08
	lsl		r1, r4, #0x5
	sub		r1, r1, r0
	mov		r0, r10
	str		r1, [r0, #0x0]
_080bf1a8:
	add		r0, r6, #0x0
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xBF1B6, 0x2

_080bf1b8:	.4byte 0xfffffbce
	thumb_func_end sub_080bf0d4

	thumb_func_start sub_080bf1bc
sub_080bf1bc:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r1, sp
	bl		sub_080bf018
	str		r0, [sp, #0x8]
	str		r1, [sp, #0xC]
	add		r1, sp, #0x4
	add		r0, r5, #0x0
	bl		sub_080bf018
	add		r7, r1, #0x0
	add		r6, r0, #0x0
	ldr		r2, [sp, #0x0]
	ldr		r0, [sp, #0x4]
	sub		r2, r2, r0
	ldr		r0, [r4, #0x10]
	ldr		r1, [r5, #0x10]
	sub		r0, r0, r1
	lsl		r0, r0, #0x5
	add		r0, r2, r0
	cmp		r0, #0x0
	ble		_080bf1f8
	lsl		r0, r0, #0x14
	ldr		r1, [sp, #0x8]
	add		r0, r1, r0
	str		r0, [sp, #0x8]
	b		_080bf1fc
_080bf1f8:
	lsl		r0, r0, #0x14
	sub		r6, r6, r0
_080bf1fc:
	ldr		r0, [sp, #0x8]
	ldr		r1, [sp, #0xC]
	add		r3, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_080bd3a0
	add		sp, #0x10
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_080bf1bc

	thumb_func_start sub_080bf20c
sub_080bf20c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r1, _080bf228
	ldr		r0, _080bf224
	cmp		r4, #0x17
	bgt		_080bf230
	ldr		r0, _080bf22c
	lsl		r1, r4, #0x3
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r1, [r1, #0x4]
	b		_080bf242

_080bf224:	.4byte 0x3FF00000
_080bf228:	.4byte 0x00000000
_080bf22c:	.4byte 0x080e00f0

_080bf230:
	cmp		r4, #0x0
	ble		_080bf242
_080bf234:
	ldr		r3, _080bf248
	ldr		r2, _080bf244
	bl		sub_080bd0f8
	sub		r4, #0x1
	cmp		r4, #0x0
	bgt		_080bf234
_080bf242:
	pop		{ r4, pc }

_080bf244:	.4byte 0x40240000
_080bf248:	.4byte 0x00000000
	thumb_func_end sub_080bf20c

	thumb_func_start sub_080bf24c
sub_080bf24c:
	push	{ r4, lr }
	add		r4, r1, #0x0
	ldr		r1, [r4, #0x8]
	cmp		r1, #0x0
	beq		_080bf264
	add		r1, r4, #0x0
	bl		sub_080c1780
	mov		r1, #0x0
	str		r1, [r4, #0x8]
	str		r1, [r4, #0x4]
	b		_080bf268
_080bf264:
	str		r1, [r4, #0x4]
	mov		r0, #0x0
_080bf268:
	pop		{ r4, pc }

.incbin "base.gba", 0xBF26A, 0x2
	thumb_func_end sub_080bf24c

	thumb_func_start sub_080bf26c
sub_080bf26c:
	push	{ r4, r5, lr }
	ldr		r4, _080bf2dc
	add		sp, r4
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x54]
	str		r0, [sp, #0x54]
	mov		r3, sp
	mov		r0, #0x3
	neg		r0, r0
	ldrh	r4, [r5, #0xc]
	and		r0, r4
	mov		r4, #0x0
	strh		r0, [r3, #0xC]
	ldrh	r0, [r5, #0xe]
	strh		r0, [r3, #0xE]
	ldr		r0, [r5, #0x1c]
	str		r0, [sp, #0x1C]
	ldr		r0, [r5, #0x24]
	str		r0, [sp, #0x24]
	add		r0, sp, #0x58
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x10]
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	str		r0, [sp, #0x8]
	str		r0, [sp, #0x14]
	str		r4, [sp, #0x18]
	mov		r0, sp
	bl		sub_080bf2e0
	add		r4, r0, #0x0
	cmp		r4, #0x0
	blt		_080bf2bc
	mov		r0, sp
	bl		sub_080c1310
	cmp		r0, #0x0
	beq		_080bf2bc
	mov		r4, #0x1
	neg		r4, r4
_080bf2bc:
	mov		r1, sp
	mov		r0, #0x40
	ldrh		r1, [r1, #0xC]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080bf2d0
	mov		r0, #0x40
	ldrh	r1, [r5, #0xc]
	orr		r0, r1
	strh	r0, [r5, #0xc]
_080bf2d0:
	add		r0, r4, #0x0
	mov		r3, #0x8b
	lsl		r3, r3, #0x3
	add		sp, r3
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xBF2DA, 0x2

_080bf2dc:	.4byte 0xFFFFFBA8
	thumb_func_end sub_080bf26c

	thumb_func_start sub_080bf2e0
sub_080bf2e0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r3, r2, #0x0
	ldr		r0, [r4, #0x54]
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_080bf2f4
	pop		{ r4, r5, pc }
	thumb_func_end sub_080bf2e0

	thumb_func_start sub_080bf2f4
sub_080bf2f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r4, _080bf35c
	add		sp, r4
	str		r0, [sp, #0x1dc]
	str		r1, [sp, #0x1e0]
	add		r4, r2, #0x0
	mov		r10, r3
	bl		sub_080c1a48
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x1f8]
	mov		r1, #0x0
	add		r0, sp, #0x1d0
	str		r1, [r0, #0x0]
	ldr		r1, [sp, #0x1e0]
	ldr		r0, [r1, #0x54]
	cmp		r0, #0x0
	bne		_080bf326
	ldr		r0, _080bf360
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x54]
_080bf326:
	ldr		r2, [sp, #0x1e0]
	ldr		r1, [r2, #0x54]
	ldr		r0, [r1, #0x38]
	cmp		r0, #0x0
	bne		_080bf336
	add		r0, r1, #0x0
	bl		sub_080c14a0
_080bf336:
	mov		r0, #0x8
	ldr		r1, [sp, #0x1e0]
	ldrh	r1, [r1, #0xc]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080bf34a
	ldr		r2, [sp, #0x1e0]
	ldr		r0, [r2, #0x10]
	cmp		r0, #0x0
	bne		_080bf364
_080bf34a:
	ldr		r0, [sp, #0x1e0]
	bl		sub_080c03b8
	cmp		r0, #0x0
	beq		_080bf364
	mov		r0, #0x1
	neg		r0, r0
	bl		sub_080c0244
_080bf35c:
.incbin "base.gba", 0xBF35C, 0x4
_080bf360:
.incbin "base.gba", 0xBF360, 0x4
_080bf364:
	mov		r0, #0x1a
	ldr		r1, [sp, #0x1e0]
	ldrh	r1, [r1, #0xc]
	and		r0, r1
	cmp		r0, #0xa
	bne		_080bf388
	ldr		r2, [sp, #0x1e0]
	mov		r1, #0xe
	ldrsh	r0, [r2, r1]
	cmp		r0, #0x0
	blt		_080bf388
	add		r0, r2, #0x0
	add		r1, r4, #0x0
	mov		r2, r10
	bl		sub_080bf26c
	bl		sub_080c0244
_080bf388:
	str		r4, [sp, #0x1e4]
	add		r1, sp, #0x1c
	add		r5, sp, #0x28
	str		r5, [sp, #0x1c]
	mov		r0, #0x0
	str		r0, [r1, #0x8]
	str		r0, [r1, #0x4]
	mov		r2, #0x0
	str		r2, [sp, #0x1f0]
	mov		r9, r1
	mov		r4, #0xe6
	lsl		r4, r4, #0x1
	add		r4, sp
	str		r4, [sp, #0x214]
	mov		r0, #0xe8
	lsl		r0, r0, #0x1
	add		r0, sp
	str		r0, [sp, #0x218]
	thumb_func_end sub_080bf2f4

	thumb_func_start sub_080bf3ac
sub_080bf3ac:
	ldr		r1, [sp, #0x1e4]
	mov		r8, r1
_080bf3b0:
	ldr		r0, _080bf45c
	ldr		r0, [r0, #0x0]
	ldr		r1, _080bf460
	ldr		r3, [r1, #0x0]
	ldr		r2, [sp, #0x218]
	str		r2, [sp, #0x0]
	ldr		r1, [sp, #0x214]
	ldr		r2, [sp, #0x1e4]
	bl		sub_080c2050
	add		r4, r0, #0x0
	cmp		r4, #0x0
	ble		_080bf3de
	ldr		r0, [sp, #0x1e4]
	add		r0, r0, r4
	str		r0, [sp, #0x1e4]
	add		r0, sp, #0x1cc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x25
	bne		_080bf3b0
	ldr		r1, [sp, #0x1e4]
	sub		r1, #0x1
	str		r1, [sp, #0x1e4]
_080bf3de:
	ldr		r2, [sp, #0x1e4]
	mov		r0, r8
	sub		r6, r2, r0
	cmp		r6, #0x0
	beq		_080bf416
	str		r0, [r5, #0x0]
	str		r6, [r5, #0x4]
	mov		r1, r9
	ldr		r0, [r1, #0x8]
	add		r0, r0, r6
	str		r0, [r1, #0x8]
	add		r5, #0x8
	ldr		r0, [r1, #0x4]
	add		r0, #0x1
	str		r0, [r1, #0x4]
	cmp		r0, #0x7
	ble		_080bf410
	ldr		r0, [sp, #0x1e0]
	bl		sub_080bf24c
	cmp		r0, #0x0
	beq		_080bf40e
	bl		sub_080c0230
_080bf40e:
	add		r5, sp, #0x28
_080bf410:
	ldr		r2, [sp, #0x1f0]
	add		r2, r2, r6
	str		r2, [sp, #0x1f0]
_080bf416:
	cmp		r4, #0x0
	bgt		_080bf41e
	bl		sub_080c0218
_080bf41e:
	ldr		r4, [sp, #0x1e4]
	add		r4, #0x1
	str		r4, [sp, #0x1e4]
	mov		r0, #0x0
	str		r0, [sp, #0x1ec]
	mov		r1, #0x0
	str		r1, [sp, #0x208]
	mov		r2, #0x0
	str		r2, [sp, #0x1f4]
	mov		r6, #0x1
	neg		r6, r6
	ldr		r0, _080bf464
	add		r0, sp
	strb	r2, [r0, #0x0]
	ldr		r0, [sp, #0x1e4]
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x1e8]
	ldr		r1, [sp, #0x1e4]
	add		r1, #0x1
	str		r1, [sp, #0x1e4]
	ldr		r0, [sp, #0x1e8]
	sub		r0, #0x20
	cmp		r0, #0x58
	bls		_080bf450
	b		_080bfb02
_080bf450:
	lsl		r0, r0, #0x2
	ldr		r1, _080bf468
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0xBF45A, 0x2

_080bf45c:	.4byte 0x0200EE40
_080bf460:	.4byte 0x0200EE44
_080bf464:	.4byte 0x000001C9
_080bf468:	.4byte 0x080bf46c
_080bf46c:	.4byte 0x080bf5d0

.incbin "base.gba", 0xBF470, 0x160
	thumb_func_end sub_080bf3ac


.incbin "base.gba", 0xBF5D0, 0x532

_080bfb02:

.incbin "base.gba", 0xBFB02, 0x8
_080bfb0a:

.incbin "base.gba", 0xBFB0A, 0x1E
_080bfb28:

.incbin "base.gba", 0xBFB28, 0x14
_080bfb3c:	.4byte 0x000001C9

_080bfb40:

.incbin "base.gba", 0xBFB40, 0x10
_080bfb50:

.incbin "base.gba", 0xBFB50, 0x1C
_080bfb6c:

.incbin "base.gba", 0xBFB6C, 0x2A
_080bfb96:

.incbin "base.gba", 0xBFB96, 0x4
_080bfb9a:

.incbin "base.gba", 0xBFB9A, 0xA
_080bfba4:

.incbin "base.gba", 0xBFBA4, 0x2A
_080bfbce:

.incbin "base.gba", 0xBFBCE, 0x2
_080bfbd0:

.incbin "base.gba", 0xBFBD0, 0x2C
_080bfbfc:	.4byte 0x080e0210 @ "                0000000000000000Inf"
_080bfc00:	.4byte 0x000001C9

_080bfc04:

.incbin "base.gba", 0xBFC04, 0x30
_080bfc34:

.incbin "base.gba", 0xBFC34, 0xE
_080bfc42:

.incbin "base.gba", 0xBFC42, 0x2
_080bfc44:

.incbin "base.gba", 0xBFC44, 0x1C
_080bfc60:

.incbin "base.gba", 0xBFC60, 0x2A
_080bfc8a:

.incbin "base.gba", 0xBFC8A, 0x4
_080bfc8e:

.incbin "base.gba", 0xBFC8E, 0x6
_080bfc94:

.incbin "base.gba", 0xBFC94, 0x2A
_080bfcbe:

.incbin "base.gba", 0xBFCBE, 0x2
_080bfcc0:

.incbin "base.gba", 0xBFCC0, 0x10
_080bfcd0:

.incbin "base.gba", 0xBFCD0, 0x2A
_080bfcfa:

.incbin "base.gba", 0xBFCFA, 0x4
_080bfcfe:

.incbin "base.gba", 0xBFCFE, 0x6
_080bfd04:

.incbin "base.gba", 0xBFD04, 0x28
_080bfd2c:

.incbin "base.gba", 0xBFD2C, 0x2
_080bfd2e:

.incbin "base.gba", 0xBFD2E, 0x28
_080bfd56:

.incbin "base.gba", 0xBFD56, 0x6
PTR_s_0000000000000000Inf_0...:	.4byte 0x080e0220

_080bfd60:

.incbin "base.gba", 0xBFD60, 0x8
_080bfd68:

.incbin "base.gba", 0xBFD68, 0x3A
_080bfda2:

.incbin "base.gba", 0xBFDA2, 0x2
_080bfda4:

.incbin "base.gba", 0xBFDA4, 0x16
_080bfdba:

.incbin "base.gba", 0xBFDBA, 0x26
_080bfde0:

.incbin "base.gba", 0xBFDE0, 0x2
_080bfde2:

.incbin "base.gba", 0xBFDE2, 0xA
_080bfdec:

.incbin "base.gba", 0xBFDEC, 0x8
_080bfdf4:

.incbin "base.gba", 0xBFDF4, 0x26
_080bfe1a:

.incbin "base.gba", 0xBFE1A, 0x4
_080bfe1e:

.incbin "base.gba", 0xBFE1E, 0x6
_080bfe24:

.incbin "base.gba", 0xBFE24, 0xC
_080bfe30:	.4byte 0x00000000
_080bfe34:	.4byte 0x00000000
_080bfe38:	.4byte 0x080e0284
_080bfe3c:	.4byte 0x080e0220 @ "                0000000000000000Inf"

_080bfe40:

.incbin "base.gba", 0xBFE40, 0x30
_080bfe70:

.incbin "base.gba", 0xBFE70, 0x2
_080bfe72:

.incbin "base.gba", 0xBFE72, 0x28
_080bfe9a:

.incbin "base.gba", 0xBFE9A, 0x2
_080bfe9c:

.incbin "base.gba", 0xBFE9C, 0x10
_080bfeac:

.incbin "base.gba", 0xBFEAC, 0x26
_080bfed2:

.incbin "base.gba", 0xBFED2, 0x4
_080bfed6:

.incbin "base.gba", 0xBFED6, 0x6
_080bfedc:

.incbin "base.gba", 0xBFEDC, 0x24
_080bff00:

.incbin "base.gba", 0xBFF00, 0x2
_080bff02:

.incbin "base.gba", 0xBFF02, 0x1E
_080bff20:	.4byte 0x080e0284
_080bff24:	.4byte 0x080e0220 @ "                0000000000000000Inf"

_080bff28:

.incbin "base.gba", 0xBFF28, 0x30
_080bff58:

.incbin "base.gba", 0xBFF58, 0x2
_080bff5a:

.incbin "base.gba", 0xBFF5A, 0x12
_080bff6c:

.incbin "base.gba", 0xBFF6C, 0x26
_080bff92:

.incbin "base.gba", 0xBFF92, 0x4
_080bff96:

.incbin "base.gba", 0xBFF96, 0x6
_080bff9c:

.incbin "base.gba", 0xBFF9C, 0x24
_080bffc0:

.incbin "base.gba", 0xBFFC0, 0x2
_080bffc2:

.incbin "base.gba", 0xBFFC2, 0xC
_080bffce:

.incbin "base.gba", 0xBFFCE, 0xE
_080bffdc:	.4byte 0x080e0220 @ "                0000000000000000Inf"
_080bffe0:	.4byte 0x080e0288

_080bffe4:

.incbin "base.gba", 0xBFFE4, 0x26
_080c000a:

.incbin "base.gba", 0xC000A, 0x2
_080c000c:

.incbin "base.gba", 0xC000C, 0x2E
_080c003a:

.incbin "base.gba", 0xC003A, 0x2
_080c003c:

.incbin "base.gba", 0xC003C, 0xC
_080c0048:	.4byte 0x080e0288

_080c004c:

.incbin "base.gba", 0xC004C, 0x12
_080c005e:

.incbin "base.gba", 0xC005E, 0x36
_080c0094:

.incbin "base.gba", 0xC0094, 0x2
_080c0096:

.incbin "base.gba", 0xC0096, 0x26
_080c00bc:	.4byte 0x00000000
_080c00c0:	.4byte 0x00000000

_080c00c4:

.incbin "base.gba", 0xC00C4, 0x10
_080c00d4:

.incbin "base.gba", 0xC00D4, 0x26
_080c00fa:

.incbin "base.gba", 0xC00FA, 0x4
_080c00fe:

.incbin "base.gba", 0xC00FE, 0x6
_080c0104:

.incbin "base.gba", 0xC0104, 0x1C
_080c0120:	.4byte 0x080e0220 @ "                0000000000000000Inf"

_080c0124:

.incbin "base.gba", 0xC0124, 0xC
_080c0130:

.incbin "base.gba", 0xC0130, 0x12
_080c0142:

.incbin "base.gba", 0xC0142, 0xA
_080c014c:

.incbin "base.gba", 0xC014C, 0x6
_080c0152:

.incbin "base.gba", 0xC0152, 0x8
_080c015a:

.incbin "base.gba", 0xC015A, 0xA
_080c0164:

.incbin "base.gba", 0xC0164, 0x8
_080c016c:

.incbin "base.gba", 0xC016C, 0xA
_080c0176:

.incbin "base.gba", 0xC0176, 0x1C
_080c0192:

.incbin "base.gba", 0xC0192, 0x28
_080c01ba:

.incbin "base.gba", 0xC01BA, 0x6
_080c01c0:

.incbin "base.gba", 0xC01C0, 0x22
_080c01e2:

.incbin "base.gba", 0xC01E2, 0xA
_080c01ec:

.incbin "base.gba", 0xC01EC, 0x1A
_080c0206:

.incbin "base.gba", 0xC0206, 0xE
_080c0214:

.incbin "base.gba", 0xC0214, 0x4
	thumb_func_start sub_080c0218
sub_080c0218:
	mov		r1, r9
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x0
	beq		_080c022a
	ldr		r0, [sp, #0x1e0]
	bl		sub_080bf24c
	cmp		r0, #0x0
	bne		sub_080c0230
_080c022a:
	mov		r0, #0x0
	mov		r1, r9
	str		r0, [r1, #0x4]
	thumb_func_end sub_080c0218

	thumb_func_start sub_080c0230
sub_080c0230:
	mov		r0, #0x40
	ldr		r2, [sp, #0x1e0]
	ldrh	r2, [r2, #0xc]
	and		r0, r2
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, #0x0
	bne		_080c0242
	ldr		r1, [sp, #0x1f0]
_080c0242:
	add		r0, r1, #0x0
	thumb_func_end sub_080c0230

	thumb_func_start sub_080c0244
sub_080c0244:
	mov		r3, #0x88
	lsl		r3, r3, #0x2
	add		sp, r3
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_080c0244

	thumb_func_start sub_080c0254
sub_080c0254:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	str		r0, [sp, #0x18]
	add		r5, r2, #0x0
	add		r4, r1, #0x0
	mov		r8, r3
	ldr		r6, [sp, #0x0+0x3c]
	ldr		r0, [sp, #0x8+0x3c]
	mov		r10, r0
	ldr		r1, [sp, #0xc+0x3c]
	mov		r9, r1
	cmp		r1, #0x66
	bne		_080c027a
	mov		r7, #0x3
	b		_080c028a
_080c027a:
	mov		r0, r9
	cmp		r0, #0x65
	beq		_080c0284
	cmp		r0, #0x45
	bne		_080c0288
_080c0284:
	mov		r1, #0x1
	add		r8, r1
_080c0288:
	mov		r7, #0x2
_080c028a:
	lsl		r0, r4, #0x1f
	lsr		r0, r0, #0x1f
	cmp		r0, #0x0
	beq		_080c02a0
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	bl		sub_080bd90c
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	mov		r0, #0x2d
_080c02a0:
	ldr		r1, [sp, #0x4+0x3c]
	strb	r0, [r1, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x0]
	mov		r1, r10
	str		r1, [sp, #0x4]
	add		r0, sp, #0x10
	str		r0, [sp, #0x8]
	add		r0, sp, #0x14
	str		r0, [sp, #0xC]
	ldr		r0, [sp, #0x18]
	add		r2, r5, #0x0
	add		r1, r4, #0x0
	add		r3, r7, #0x0
	bl		sub_080c0618
	add		r7, r0, #0x0
	mov		r1, r9
	cmp		r1, #0x67
	beq		_080c02cc
	cmp		r1, #0x47
	bne		_080c02d4
_080c02cc:
	mov		r0, #0x1
	and		r6, r0
	cmp		r6, #0x0
	beq		_080c0328
_080c02d4:
	mov		r0, r8
	add		r6, r7, r0
	mov		r1, r9
	cmp		r1, #0x66
	bne		_080c0304
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x30
	bne		_080c02fe
	ldr		r3, _080c0344
	ldr		r2, _080c0340
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	bl		sub_080bd6a0
	cmp		r0, #0x0
	beq		_080c02fe
	mov		r1, r8
	neg		r0, r1
	add		r0, #0x1
	mov		r1, r10
	str		r0, [r1, #0x0]
_080c02fe:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	add		r6, r6, r0
_080c0304:
	ldr		r3, _080c0344
	ldr		r2, _080c0340
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	bl		sub_080bd654
	cmp		r0, #0x0
	bne		_080c0316
	str		r6, [sp, #0x14]
_080c0316:
	ldr		r0, [sp, #0x14]
	cmp		r0, r6
	bcs		_080c0328
	mov		r1, #0x30
_080c031e:
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	str		r0, [sp, #0x14]
	cmp		r0, r6
	bcc		_080c031e
_080c0328:
	ldr		r0, [sp, #0x14]
	sub		r0, r0, r7
	ldr		r1, [sp, #0x10+0x3c]
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC033E, 0x2

_080c0340:	.4byte 0x00000000
_080c0344:	.4byte 0x00000000
	thumb_func_end sub_080c0254

	thumb_func_start sub_080c0348
sub_080c0348:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x134
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	strb	r2, [r7, #0x0]
	add		r5, r7, #0x1
	cmp		r6, #0x0
	bge		_080c035e
	neg		r6, r6
	mov		r0, #0x2d
	b		_080c0360
_080c035e:
	mov		r0, #0x2b
_080c0360:
	strb	r0, [r7, #0x1]
	add		r5, #0x1
	add		r4, sp, #0x134
	cmp		r6, #0x9
	ble		_080c03a2
_080c036a:
	sub		r4, #0x1
	add		r0, r6, #0x0
	mov		r1, #0xa
	bl		sub_080bbd44
	add		r0, #0x30
	strb	r0, [r4, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0xa
	bl		sub_080bbcac
	add		r6, r0, #0x0
	cmp		r6, #0x9
	bgt		_080c036a
	sub		r4, #0x1
	add		r0, #0x30
	strb	r0, [r4, #0x0]
	add		r0, sp, #0x134
	cmp		r4, r0
	bcs		_080c03b0
	add		r1, r0, #0x0
_080c0394:
	ldrb	r0, [r4, #0x0]
	strb	r0, [r5, #0x0]
	add		r4, #0x1
	add		r5, #0x1
	cmp		r4, r1
	bcc		_080c0394
	b		_080c03b0
_080c03a2:
	mov		r0, #0x30
	strb	r0, [r5, #0x0]
	add		r5, #0x1
	add		r0, r6, #0x0
	add		r0, #0x30
	strb	r0, [r5, #0x0]
	add		r5, #0x1
_080c03b0:
	sub		r0, r5, r7
	add		sp, #0x134
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC03B6, 0x2
	thumb_func_end sub_080c0348

	thumb_func_start sub_080c03b8
sub_080c03b8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x54]
	cmp		r0, #0x0
	bne		_080c03c8
	ldr		r0, _080c03f4
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x54]
_080c03c8:
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x38]
	cmp		r0, #0x0
	bne		_080c03d6
	add		r0, r1, #0x0
	bl		sub_080c14a0
_080c03d6:
	ldrh	r1, [r4, #0xc]
	mov		r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	asr		r5, r0, #0x10
	cmp		r5, #0x0
	bne		_080c0430
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c03f8
	mov		r0, #0x1
	neg		r0, r0
	b		_080c0462

.incbin "base.gba", 0xC03F2, 0x2

_080c03f4:	.4byte 0x0200EE40

_080c03f8:
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c0428
	ldr		r1, [r4, #0x30]
	cmp		r1, #0x0
	beq		_080c0416
	add		r0, r4, #0x0
	add		r0, #0x40
	cmp		r1, r0
	beq		_080c0414
	ldr		r0, [r4, #0x54]
	bl		sub_080c1500
_080c0414:
	str		r5, [r4, #0x30]
_080c0416:
	mov		r0, #0x25
	neg		r0, r0
	ldrh	r1, [r4, #0xc]
	and		r0, r1
	mov		r1, #0x0
	strh	r0, [r4, #0xc]
	str		r1, [r4, #0x4]
	ldr		r0, [r4, #0x10]
	str		r0, [r4, #0x0]
_080c0428:
	mov		r0, #0x8
	ldrh	r1, [r4, #0xc]
	orr		r0, r1
	strh	r0, [r4, #0xc]
_080c0430:
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	bne		_080c043c
	add		r0, r4, #0x0
	bl		sub_080c1a58
_080c043c:
	ldrh	r1, [r4, #0xc]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c0452
	mov		r0, #0x0
	str		r0, [r4, #0x8]
	ldr		r0, [r4, #0x14]
	neg		r0, r0
	str		r0, [r4, #0x18]
	b		_080c0460
_080c0452:
	mov		r0, #0x2
	and		r0, r1
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_080c045e
	ldr		r1, [r4, #0x14]
_080c045e:
	str		r1, [r4, #0x8]
_080c0460:
	mov		r0, #0x0
_080c0462:
	pop		{ r4, r5, pc }
	thumb_func_end sub_080c03b8

	thumb_func_start sub_080c0464
sub_080c0464:
	push	{ r4, lr }
	mul		r1, r2
	bl		sub_080c1c90
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_080c0476
	mov		r0, #0x0
	b		_080c04ba
_080c0476:
	add		r0, r4, #0x0
	sub		r0, #0x8
	ldr		r0, [r0, #0x4]
	mov		r1, #0x4
	neg		r1, r1
	and		r0, r1
	sub		r2, r0, #0x4
	cmp		r2, #0x24
	bhi		_080c04b0
	add		r1, r4, #0x0
	cmp		r2, #0x13
	bls		_080c04a6
	mov		r0, #0x0
	stmia	r1!, { r0 }
	str		r0, [r4, #0x4]
	add		r1, #0x4
	cmp		r2, #0x1b
	bls		_080c04a6
	stmia	r1!, { r0 }
	stmia	r1!, { r0 }
	cmp		r2, #0x23
	bls		_080c04a6
	stmia	r1!, { r0 }
	stmia	r1!, { r0 }
_080c04a6:
	mov		r0, #0x0
	stmia	r1!, { r0 }
	stmia	r1!, { r0 }
	str		r0, [r1, #0x0]
	b		_080c04b8
_080c04b0:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808c828
_080c04b8:
	add		r0, r4, #0x0
_080c04ba:
	pop		{ r4, pc }
	thumb_func_end sub_080c0464

	thumb_func_start sub_080c04bc
sub_080c04bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	ldr		r7, [r1, #0x10]
	ldr		r0, [r0, #0x10]
	cmp		r0, r7
	bge		_080c04d8
	mov		r0, #0x0
	b		_080c060c
_080c04d8:
	ldr		r0, [sp, #0x4]
	add		r0, #0x14
	mov		r8, r0
	sub		r7, #0x1
	lsl		r0, r7, #0x2
	mov		r1, r8
	add		r1, r1, r0
	str		r1, [sp, #0xC]
	ldr		r4, [sp, #0x0]
	add		r4, #0x14
	add		r5, r4, r0
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	ldr		r2, [r5, #0x0]
	mov		r10, r2
	mov		r0, r10
	bl		sub_080bbe34
	str		r0, [sp, #0x8]
	mov		r3, r8
	str		r3, [sp, #0x14]
	str		r4, [sp, #0x10]
	cmp		r0, #0x0
	beq		_080c0582
	mov		r6, #0x0
	mov		r9, r6
	ldr		r0, _080c056c
	mov		r12, r0
_080c0510:
	mov		r2, r8
	add		r2, #0x4
	mov		r8, r2
	sub		r2, #0x4
	ldmia	r2!, { r1 }
	add		r0, r1, #0x0
	mov		r3, r12
	and		r0, r3
	ldr		r2, [sp, #0x8]
	mul		r0, r2
	mov		r3, r9
	add		r2, r0, r3
	lsr		r0, r1, #0x10
	ldr		r3, [sp, #0x8]
	add		r1, r0, #0x0
	mul		r1, r3
	lsr		r0, r2, #0x10
	add		r3, r1, r0
	lsr		r0, r3, #0x10
	mov		r9, r0
	ldr		r0, [r4, #0x0]
	mov		r1, r12
	and		r0, r1
	and		r2, r1
	sub		r0, r0, r2
	add		r2, r0, r6
	asr		r6, r2, #0x10
	ldr		r0, [r4, #0x0]
	lsr		r1, r0, #0x10
	mov		r0, r12
	and		r3, r0
	sub		r1, r1, r3
	add		r0, r1, r6
	asr		r6, r0, #0x10
	strh	r0, [r4, #0x0]
	strh	r2, [r4, #0x2]
	add		r4, #0x4
	ldr		r1, [sp, #0xC]
	cmp		r8, r1
	bls		_080c0510
	mov		r2, r10
	cmp		r2, #0x0
	bne		_080c0582
	ldr		r4, [sp, #0x10]
	b		_080c0572

.incbin "base.gba", 0xC056A, 0x2

_080c056c:	.4byte 0x0000FFFF

_080c0570:
	sub		r7, #0x1
_080c0572:
	sub		r5, #0x4
	cmp		r5, r4
	bls		_080c057e
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_080c0570
_080c057e:
	ldr		r3, [sp, #0x0]
	str		r7, [r3, #0x10]
_080c0582:
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	bl		sub_080bee9c
	cmp		r0, #0x0
	blt		_080c060a
	ldr		r0, [sp, #0x8]
	add		r0, #0x1
	str		r0, [sp, #0x8]
	mov		r6, #0x0
	mov		r9, r6
	ldr		r4, [sp, #0x10]
	ldr		r1, [sp, #0x14]
	mov		r8, r1
	lsl		r2, r7, #0x2
	mov		r10, r2
	ldr		r5, _080c05f4
_080c05a4:
	mov		r3, r8
	add		r3, #0x4
	mov		r8, r3
	sub		r3, #0x4
	ldmia	r3!, { r1 }
	add		r0, r1, #0x0
	and		r0, r5
	mov		r3, r9
	add		r2, r0, r3
	lsr		r1, r1, #0x10
	lsr		r0, r2, #0x10
	add		r3, r1, r0
	lsr		r0, r3, #0x10
	mov		r9, r0
	ldr		r1, [r4, #0x0]
	add		r0, r1, #0x0
	and		r0, r5
	and		r2, r5
	sub		r0, r0, r2
	add		r2, r0, r6
	asr		r6, r2, #0x10
	lsr		r1, r1, #0x10
	and		r3, r5
	sub		r1, r1, r3
	add		r0, r1, r6
	asr		r6, r0, #0x10
	strh	r0, [r4, #0x0]
	strh	r2, [r4, #0x2]
	add		r4, #0x4
	ldr		r1, [sp, #0xC]
	cmp		r8, r1
	bls		_080c05a4
	ldr		r4, [sp, #0x10]
	mov		r2, r10
	add		r5, r4, r2
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_080c060a
	b		_080c05fa

.incbin "base.gba", 0xC05F2, 0x2

_080c05f4:	.4byte 0x0000FFFF

_080c05f8:
	sub		r7, #0x1
_080c05fa:
	sub		r5, #0x4
	cmp		r5, r4
	bls		_080c0606
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_080c05f8
_080c0606:
	ldr		r3, [sp, #0x0]
	str		r7, [r3, #0x10]
_080c060a:
	ldr		r0, [sp, #0x8]
_080c060c:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_080c04bc

	thumb_func_start sub_080c0618
sub_080c0618:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x84
	mov		r10, r0
	str		r3, [sp, #0xC]
	ldr		r4, [sp, #0x8+0xa4]
	str		r1, [sp, #0x40]
	str		r2, [sp, #0x44]
	ldr		r2, [r0, #0x40]
	cmp		r2, #0x0
	beq		_080c0650
	ldr		r0, [r0, #0x44]
	str		r0, [r2, #0x4]
	mov		r0, r10
	ldr		r1, [r0, #0x44]
	mov		r0, #0x1
	lsl		r0, r1
	str		r0, [r2, #0x8]
	mov		r0, r10
	add		r1, r2, #0x0
	bl		sub_080be9d4
	mov		r0, #0x0
	mov		r1, r10
	str		r0, [r1, #0x40]
_080c0650:
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	ldr		r1, [sp, #0x40]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c066c
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	ldr		r0, _080c0668
	and		r1, r0
	str		r1, [sp, #0x40]
	b		_080c066e

_080c0668:	.4byte 0x7FFFFFFF

_080c066c:
	str		r0, [r4, #0x0]
_080c066e:
	ldr		r1, _080c06b0
	ldr		r2, [sp, #0x40]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, r1
	bne		_080c06c4
	ldr		r0, _080c06b4
	ldr		r3, [sp, #0x4+0xa4]
	str		r0, [r3, #0x0]
	ldr		r0, _080c06b8
	mov		r9, r0
	ldr		r1, [sp, #0x44]
	cmp		r1, #0x0
	bne		_080c0696
	ldr		r0, _080c06bc
	and		r2, r0
	cmp		r2, #0x0
	bne		_080c0696
	ldr		r2, _080c06c0
	mov		r9, r2
_080c0696:
	ldr		r3, [sp, #0xc+0xa4]
	cmp		r3, #0x0
	beq		_080c06e8
	mov		r1, r9
	ldrb	r0, [r1, #0x3]
	add		r1, #0x3
	cmp		r0, #0x0
	beq		_080c06a8
	add		r1, #0x5
_080c06a8:
	ldr		r2, [sp, #0xc+0xa4]
	str		r1, [r2, #0x0]
	b		_080c06e8

.incbin "base.gba", 0xC06AE, 0x2

_080c06b0:	.4byte 0x7FF00000
_080c06b4:	.4byte 0x0000270F
_080c06b8:	.4byte 0x080e0298
_080c06bc:	.4byte 0x000FFFFF
_080c06c0:	.4byte 0x080e028c @ Infinity

_080c06c4:
	ldr		r3, _080c06f4
	ldr		r2, _080c06f0
	ldr		r0, [sp, #0x40]
	ldr		r1, [sp, #0x44]
	bl		sub_080bd654
	cmp		r0, #0x0
	bne		_080c06fc
	mov		r0, #0x1
	ldr		r3, [sp, #0x4+0xa4]
	str		r0, [r3, #0x0]
	ldr		r0, _080c06f8
	mov		r9, r0
	ldr		r1, [sp, #0xc+0xa4]
	cmp		r1, #0x0
	beq		_080c06e8
	add		r0, #0x1
	str		r0, [r1, #0x0]
_080c06e8:
	mov		r0, r9
	bl		sub_080c1302
.incbin "base.gba", 0xc06ee, 0x2
_080c06f0:
.incbin "base.gba", 0xc06f0, 0x4
_080c06f4:
.incbin "base.gba", 0xc06f4, 0x4
_080c06f8:
	lsl		r4, r3, #0xa
	lsr		r6, r1, #0x20
_080c06fc:
	add		r0, sp, #0x8
	str		r0, [sp, #0x0]
	mov		r0, r10
	ldr		r1, [sp, #0x40]
	ldr		r2, [sp, #0x44]
	add		r3, sp, #0x4
	bl		sub_080bf0d4
	str		r0, [sp, #0x5C]
	ldr		r2, [sp, #0x40]
	lsl		r0, r2, #0x1
	lsr		r0, r0, #0x15
	mov		r8, r0
	cmp		r0, #0x0
	beq		_080c074c
	ldr		r0, [sp, #0x40]
	ldr		r1, [sp, #0x44]
	str		r0, [sp, #0x48]
	str		r1, [sp, #0x4C]
	ldr		r0, _080c0740
	ldr		r1, [sp, #0x48]
	and		r1, r0
	str		r1, [sp, #0x48]
	ldr		r0, _080c0744
	add		r2, r1, #0x0
	orr		r2, r0
	str		r2, [sp, #0x48]
	ldr		r3, _080c0748
	add		r8, r3
	mov		r0, #0x0
	str		r0, [sp, #0x58]
	ldr		r6, [sp, #0x8]
	b		_080c07ac

.incbin "base.gba", 0xC073E, 0x2

_080c0740:	.4byte 0x000FFFFF
_080c0744:	.4byte 0x3FF00000
_080c0748:	.4byte 0xFFFFFC01

_080c074c:
	ldr		r1, [sp, #0x8]
	ldr		r0, [sp, #0x4]
	add		r2, r1, r0
	ldr		r3, _080c0774
	add		r3, r3, r2
	mov		r8, r3
	add		r6, r1, #0x0
	cmp		r3, #0x20
	ble		_080c077c
	mov		r0, #0x40
	sub		r0, r0, r3
	ldr		r4, [sp, #0x40]
	lsl		r4, r0
	ldr		r1, _080c0778
	add		r0, r2, r1
	ldr		r2, [sp, #0x44]
	lsr		r2, r0
	add		r0, r2, #0x0
	orr		r4, r0
	b		_080c0786

_080c0774:	.4byte 0x00000432
_080c0778:	.4byte 0x00000412

_080c077c:
	mov		r0, #0x20
	mov		r3, r8
	sub		r0, r0, r3
	ldr		r4, [sp, #0x44]
	lsl		r4, r0
_080c0786:
	add		r0, r4, #0x0
	bl		sub_080bd81c
	cmp		r4, #0x0
	bge		_080c0798
	ldr		r3, _080c085c
	ldr		r2, _080c0858
	bl		sub_080bd090
_080c0798:
	str		r0, [sp, #0x48]
	str		r1, [sp, #0x4C]
	ldr		r1, _080c0860
	ldr		r0, [sp, #0x48]
	add		r1, r0, r1
	str		r1, [sp, #0x48]
	ldr		r2, _080c0864
	add		r8, r2
	mov		r3, #0x1
	str		r3, [sp, #0x58]
_080c07ac:
	ldr		r2, _080c0868
	ldr		r3, _080c086c
	ldr		r0, [sp, #0x48]
	ldr		r1, [sp, #0x4C]
	bl		sub_080bd0c0
	ldr		r2, _080c0870
	ldr		r3, _080c0874
	bl		sub_080bd0f8
	ldr		r2, _080c0878
	ldr		r3, _080c087c
	bl		sub_080bd090
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	mov		r0, r8
	bl		sub_080bd81c
	ldr		r2, _080c0880
	ldr		r3, _080c0884
	bl		sub_080bd0f8
	add		r3, r1, #0x0
	add		r2, r0, #0x0
	add		r1, r5, #0x0
	add		r0, r4, #0x0
	bl		sub_080bd090
	str		r0, [sp, #0x6C]
	str		r1, [sp, #0x70]
	bl		sub_080bd898
	str		r0, [sp, #0x24]
	ldr		r2, _080c0888
	ldr		r3, _080c088c
	ldr		r0, [sp, #0x6C]
	ldr		r1, [sp, #0x70]
	bl		sub_080bd784
	cmp		r0, #0x0
	bge		_080c081c
	ldr		r0, [sp, #0x24]
	bl		sub_080bd81c
	add		r3, r1, #0x0
	add		r2, r0, #0x0
	ldr		r0, [sp, #0x6C]
	ldr		r1, [sp, #0x70]
	bl		sub_080bd6a0
	cmp		r0, #0x0
	beq		_080c081c
	ldr		r0, [sp, #0x24]
	sub		r0, #0x1
	str		r0, [sp, #0x24]
_080c081c:
	mov		r1, #0x1
	str		r1, [sp, #0x2C]
	ldr		r2, [sp, #0x24]
	cmp		r2, #0x16
	bhi		_080c0846
	ldr		r1, _080c0890
	lsl		r0, r2, #0x3
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r3, [r0, #0x4]
	ldr		r0, [sp, #0x40]
	ldr		r1, [sp, #0x44]
	bl		sub_080bd784
	cmp		r0, #0x0
	bge		_080c0842
	ldr		r3, [sp, #0x24]
	sub		r3, #0x1
	str		r3, [sp, #0x24]
_080c0842:
	mov		r0, #0x0
	str		r0, [sp, #0x2C]
_080c0846:
	mov		r1, r8
	sub		r0, r6, r1
	sub		r4, r0, #0x1
	cmp		r4, #0x0
	blt		_080c0894
	mov		r2, #0x0
	str		r2, [sp, #0x10]
	str		r4, [sp, #0x34]
	b		_080c089c

_080c0858:	.4byte 0x41F00000
_080c085c:	.4byte 0x00000000
_080c0860:	.4byte 0xFE100000
_080c0864:	.4byte 0xfffffbcd
_080c0868:	.4byte 0x3FF80000
_080c086c:	.4byte 0x00000000
_080c0870:	.4byte 0x3FD287A7
_080c0874:	.4byte 0x636F4361
_080c0878:	.4byte 0x3FC68A28
_080c087c:	.4byte 0x8B60C8B3
_080c0880:	.4byte 0x3FD34413
_080c0884:	.4byte 0x509F79FB
_080c0888:	.4byte 0x00000000
_080c088c:	.4byte 0x00000000
_080c0890:	.4byte 0x080e00f0

_080c0894:
	neg		r4, r4
	str		r4, [sp, #0x10]
	mov		r3, #0x0
	str		r3, [sp, #0x34]
_080c089c:
	ldr		r0, [sp, #0x24]
	cmp		r0, #0x0
	blt		_080c08b0
	mov		r1, #0x0
	str		r1, [sp, #0x14]
	str		r0, [sp, #0x38]
	ldr		r2, [sp, #0x34]
	add		r2, r2, r0
	str		r2, [sp, #0x34]
	b		_080c08c0
_080c08b0:
	ldr		r3, [sp, #0x10]
	ldr		r0, [sp, #0x24]
	sub		r3, r3, r0
	str		r3, [sp, #0x10]
	neg		r1, r0
	str		r1, [sp, #0x14]
	mov		r2, #0x0
	str		r2, [sp, #0x38]
_080c08c0:
	ldr		r3, [sp, #0xC]
	cmp		r3, #0x9
	bls		_080c08ca
	mov		r0, #0x0
	str		r0, [sp, #0xC]
_080c08ca:
	mov		r5, #0x1
	ldr		r1, [sp, #0xC]
	cmp		r1, #0x5
	ble		_080c08d8
	sub		r1, #0x4
	str		r1, [sp, #0xC]
	mov		r5, #0x0
_080c08d8:
	mov		r2, #0x1
	str		r2, [sp, #0x30]
	ldr		r3, [sp, #0xC]
	cmp		r3, #0x5
	bhi		_080c0952
	lsl		r0, r3, #0x2
	ldr		r1, _080c08ec
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080c08ec:	.4byte 0x080c08f0
_080c08f0:	.4byte 0x080c0908

.incbin "base.gba", 0xC08F4, 0x14
	thumb_func_end sub_080c0618


.incbin "base.gba", 0xC0908, 0x4A

_080c0952:

.incbin "base.gba", 0xC0952, 0x10
_080c0962:

.incbin "base.gba", 0xC0962, 0x10
_080c0972:

.incbin "base.gba", 0xC0972, 0x18
_080c098a:

.incbin "base.gba", 0xC098A, 0x6
_080c0990:

.incbin "base.gba", 0xC0990, 0x4C
_080c09dc:

.incbin "base.gba", 0xC09DC, 0x6
_080c09e2:

.incbin "base.gba", 0xC09E2, 0x1A
_080c09fc:

.incbin "base.gba", 0xC09FC, 0x8
_080c0a04:

.incbin "base.gba", 0xC0A04, 0x14
_080c0a18:	.4byte 0x080e00f0
_080c0a1c:	.4byte 0x080e01b8

_080c0a20:

.incbin "base.gba", 0xC0A20, 0x2A
_080c0a4a:

.incbin "base.gba", 0xC0A4A, 0x1A
_080c0a64:

.incbin "base.gba", 0xC0A64, 0x8
_080c0a6c:

.incbin "base.gba", 0xC0A6C, 0x24
_080c0a90:

.incbin "base.gba", 0xC0A90, 0x1A
_080c0aaa:

.incbin "base.gba", 0xC0AAA, 0x4E
_080c0af8:

.incbin "base.gba", 0xC0AF8, 0x1A
_080c0b12:

.incbin "base.gba", 0xC0B12, 0x2
_080c0b14:	.4byte 0x080e00f0
_080c0b18:	.4byte 0x080e01b8
_080c0b1c:	.4byte 0x3FF00000
_080c0b20:	.4byte 0x00000000
_080c0b24:	.4byte 0x40240000
_080c0b28:	.4byte 0x00000000
_080c0b2c:	.4byte 0x401C0000
_080c0b30:	.4byte 0x00000000
_080c0b34:	.4byte 0xFCC00000
_080c0b38:	.4byte 0x40140000
_080c0b3c:	.4byte 0x00000000

_080c0b40:

.incbin "base.gba", 0xC0B40, 0x30
_080c0b70:	.4byte 0x080e00f0
_080c0b74:	.4byte 0x3FE00000
_080c0b78:	.4byte 0x00000000

_080c0b7c:

.incbin "base.gba", 0xC0B7C, 0x20
_080c0b9c:

.incbin "base.gba", 0xC0B9C, 0x3C
_080c0bd8:

.incbin "base.gba", 0xC0BD8, 0x1A
_080c0bf2:

.incbin "base.gba", 0xC0BF2, 0xE
_080c0c00:	.4byte 0x40240000
_080c0c04:	.4byte 0x00000000
_080c0c08:	.4byte 0x3FF00000
_080c0c0c:	.4byte 0x00000000

_080c0c10:

.incbin "base.gba", 0xC0C10, 0x20
_080c0c30:	.4byte 0x080e00f0

_080c0c34:

.incbin "base.gba", 0xC0C34, 0x14
_080c0c48:

.incbin "base.gba", 0xC0C48, 0x52
_080c0c9a:

.incbin "base.gba", 0xC0C9A, 0x2C
_080c0cc6:

.incbin "base.gba", 0xC0CC6, 0x12
_080c0cd8:	.4byte 0x40240000
_080c0cdc:	.4byte 0x00000000
_080c0ce0:	.4byte 0x3FE00000
_080c0ce4:	.4byte 0x00000000

_080c0ce8:

.incbin "base.gba", 0xC0CE8, 0x14
_080c0cfc:

.incbin "base.gba", 0xC0CFC, 0x8
_080c0d04:

.incbin "base.gba", 0xC0D04, 0x8
_080c0d0c:

.incbin "base.gba", 0xC0D0C, 0x2A
_080c0d36:

.incbin "base.gba", 0xC0D36, 0x1E
_080c0d54:

.incbin "base.gba", 0xC0D54, 0x4
_080c0d58:	.4byte 0x080e00f0
_080c0d5c:	.4byte 0x40140000
_080c0d60:	.4byte 0x00000000

_080c0d64:

.incbin "base.gba", 0xC0D64, 0x6
_080c0d6a:

.incbin "base.gba", 0xC0D6A, 0x1A
_080c0d84:

.incbin "base.gba", 0xC0D84, 0x4
_080c0d88:

.incbin "base.gba", 0xC0D88, 0x6A
_080c0df2:

.incbin "base.gba", 0xC0DF2, 0xA
_080c0dfc:

.incbin "base.gba", 0xC0DFC, 0x2
_080c0dfe:

.incbin "base.gba", 0xC0DFE, 0x1C
_080c0e1a:

.incbin "base.gba", 0xC0E1A, 0x8
_080c0e22:

.incbin "base.gba", 0xC0E22, 0x6
_080c0e28:	.4byte 0x40240000
_080c0e2c:	.4byte 0x00000000
_080c0e30:	.4byte 0x00000000
_080c0e34:	.4byte 0x00000000

_080c0e38:

.incbin "base.gba", 0xC0E38, 0x28
_080c0e60:	.4byte 0x00000433

_080c0e64:

.incbin "base.gba", 0xC0E64, 0x8
_080c0e6c:

.incbin "base.gba", 0xC0E6C, 0xE
_080c0e7a:

.incbin "base.gba", 0xC0E7A, 0x10
_080c0e8a:

.incbin "base.gba", 0xC0E8A, 0xC
_080c0e96:

.incbin "base.gba", 0xC0E96, 0x2
_080c0e98:

.incbin "base.gba", 0xC0E98, 0x16
_080c0eae:

.incbin "base.gba", 0xC0EAE, 0x12
_080c0ec0:

.incbin "base.gba", 0xC0EC0, 0x10
_080c0ed0:

.incbin "base.gba", 0xC0ED0, 0x32
_080c0f02:

.incbin "base.gba", 0xC0F02, 0x10
_080c0f12:

.incbin "base.gba", 0xC0F12, 0x6
_080c0f18:

.incbin "base.gba", 0xC0F18, 0x6
_080c0f1e:

.incbin "base.gba", 0xC0F1E, 0x1A
_080c0f38:

.incbin "base.gba", 0xC0F38, 0x30
_080c0f68:	.4byte 0x000FFFFF
_080c0f6c:	.4byte 0x7FF00000

_080c0f70:

.incbin "base.gba", 0xC0F70, 0x4
_080c0f74:

.incbin "base.gba", 0xC0F74, 0x2C
_080c0fa0:

.incbin "base.gba", 0xC0FA0, 0xE
_080c0fae:

.incbin "base.gba", 0xC0FAE, 0xC
_080c0fba:

.incbin "base.gba", 0xC0FBA, 0xC
_080c0fc6:

.incbin "base.gba", 0xC0FC6, 0x8
_080c0fce:

.incbin "base.gba", 0xC0FCE, 0x10
_080c0fde:

.incbin "base.gba", 0xC0FDE, 0x12
_080c0ff0:

.incbin "base.gba", 0xC0FF0, 0x12
_080c1002:

.incbin "base.gba", 0xC1002, 0x3A
_080c103c:

.incbin "base.gba", 0xC103C, 0x4
_080c1040:

.incbin "base.gba", 0xC1040, 0x2A
_080c106a:

.incbin "base.gba", 0xC106A, 0x8
_080c1072:

.incbin "base.gba", 0xC1072, 0x12
_080c1084:

.incbin "base.gba", 0xC1084, 0x8
_080c108c:

.incbin "base.gba", 0xC108C, 0x10
_080c109c:

.incbin "base.gba", 0xC109C, 0x32
_080c10ce:

.incbin "base.gba", 0xC10CE, 0xE
_080c10dc:

.incbin "base.gba", 0xC10DC, 0x28
_080c1104:

.incbin "base.gba", 0xC1104, 0x1C
_080c1120:

.incbin "base.gba", 0xC1120, 0x4
_080c1124:

.incbin "base.gba", 0xC1124, 0x34
_080c1158:

.incbin "base.gba", 0xC1158, 0x2
_080c115a:

.incbin "base.gba", 0xC115A, 0x22
_080c117c:

.incbin "base.gba", 0xC117C, 0xA
_080c1186:

.incbin "base.gba", 0xC1186, 0x14
_080c119a:

.incbin "base.gba", 0xC119A, 0x2A
_080c11c4:

.incbin "base.gba", 0xC11C4, 0x6
_080c11ca:

.incbin "base.gba", 0xC11CA, 0x6
_080c11d0:

.incbin "base.gba", 0xC11D0, 0x8
_080c11d8:

.incbin "base.gba", 0xC11D8, 0xC
_080c11e4:

.incbin "base.gba", 0xC11E4, 0xC
_080c11f0:

.incbin "base.gba", 0xC11F0, 0x10
_080c1200:

.incbin "base.gba", 0xC1200, 0x2
_080c1202:

.incbin "base.gba", 0xC1202, 0x6
_080c1208:

.incbin "base.gba", 0xC1208, 0x12
_080c121a:

.incbin "base.gba", 0xC121A, 0x1A
_080c1234:

.incbin "base.gba", 0xC1234, 0x24
_080c1258:

.incbin "base.gba", 0xC1258, 0xE
_080c1266:

.incbin "base.gba", 0xC1266, 0x14
_080c127a:

.incbin "base.gba", 0xC127A, 0x8
_080c1282:

.incbin "base.gba", 0xC1282, 0x6
_080c1288:

.incbin "base.gba", 0xC1288, 0x12
_080c129a:

.incbin "base.gba", 0xC129A, 0xE
_080c12a8:

.incbin "base.gba", 0xC12A8, 0xE
_080c12b6:

.incbin "base.gba", 0xC12B6, 0x4
_080c12ba:

.incbin "base.gba", 0xC12BA, 0x20
_080c12da:

.incbin "base.gba", 0xC12DA, 0x8
_080c12e2:

.incbin "base.gba", 0xC12E2, 0x1E
_080c1300:

.incbin "base.gba", 0xC1300, 0x2
	non_word_aligned_thumb_func_start sub_080c1302
sub_080c1302:
	add		sp, #0x84
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC130E, 0x2
	thumb_func_end sub_080c1302

	thumb_func_start sub_080c1310
sub_080c1310:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_080c132c
	ldr		r0, _080c1324
	ldr		r0, [r0, #0x0]
	ldr		r1, _080c1328
	bl		sub_080c19ac
	b		_080c13a2

_080c1324:	.4byte 0x0200EE40
_080c1328:	.4byte 0x080C1311

_080c132c:
	ldr		r0, [r4, #0x54]
	cmp		r0, #0x0
	bne		_080c1338
	ldr		r0, _080c136c
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x54]
_080c1338:
	ldr		r1, [r4, #0x54]
	ldr		r0, [r1, #0x38]
	cmp		r0, #0x0
	bne		_080c1346
	add		r0, r1, #0x0
	bl		sub_080c14a0
_080c1346:
	mov		r0, #0xc
	ldrsh	r1, [r4, r0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c13a0
	ldr		r6, [r4, #0x10]
	cmp		r6, #0x0
	beq		_080c13a0
	ldr		r0, [r4, #0x0]
	sub		r5, r0, r6
	str		r6, [r4, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c137e
	ldr		r0, [r4, #0x14]
	b		_080c1380

.incbin "base.gba", 0xC136A, 0x2

_080c136c:	.4byte 0x0200EE40

_080c1370:
	mov		r0, #0x40
	ldrh	r1, [r4, #0xc]
	orr		r0, r1
	strh	r0, [r4, #0xc]
	mov		r0, #0x1
	neg		r0, r0
	b		_080c13a2
_080c137e:
	mov		r0, #0x0
_080c1380:
	str		r0, [r4, #0x8]
	cmp		r5, #0x0
	ble		_080c13a0
_080c1386:
	ldr		r0, [r4, #0x1c]
	ldr		r3, [r4, #0x24]
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_080bbc7c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	ble		_080c1370
	add		r6, r6, r1
	sub		r5, r5, r1
	cmp		r5, #0x0
	bgt		_080c1386
_080c13a0:
	mov		r0, #0x0
_080c13a2:
	pop		{ r4, r5, r6, pc }
	thumb_func_end sub_080c1310

	thumb_func_start sub_080c13a4
sub_080c13a4:
	push	{ r4, lr }
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	str		r4, [r0, #0x4]
	str		r4, [r0, #0x8]
	strh	r1, [r0, #0xc]
	strh	r2, [r0, #0xe]
	str		r4, [r0, #0x10]
	str		r4, [r0, #0x18]
	str		r0, [r0, #0x1c]
	ldr		r1, _080c13cc
	str		r1, [r0, #0x20]
	ldr		r1, _080c13d0
	str		r1, [r0, #0x24]
	ldr		r1, _080c13d4
	str		r1, [r0, #0x28]
	ldr		r1, _080c13d8
	str		r1, [r0, #0x2c]
	str		r3, [r0, #0x54]
	pop		{ r4, pc }

_080c13cc:	.4byte sub_080c21fc
_080c13d0:	.4byte 0x080C2231
_080c13d4:	.4byte 0x080C2271
_080c13d8:	.4byte 0x080c22b1
	thumb_func_end sub_080c13a4

	thumb_func_start sub_080c13dc
sub_080c13dc:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	mov		r1, #0x58
	add		r6, r5, #0x0
	mul		r6, r1
	add		r1, r6, #0x0
	add		r1, #0xc
	bl		sub_080c1c90
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_080c1408
	add		r0, #0xc
	mov		r1, #0x0
	str		r1, [r4, #0x0]
	str		r5, [r4, #0x4]
	str		r0, [r4, #0x8]
	add		r2, r6, #0x0
	bl		sub_0808c828
	add		r0, r4, #0x0
	b		_080c140a
_080c1408:
	mov		r0, #0x0
_080c140a:
	pop		{ r4, r5, r6, pc }
	thumb_func_end sub_080c13dc

	thumb_func_start sub_080c140c
sub_080c140c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, [r5, #0x38]
	cmp		r0, #0x0
	bne		_080c141c
	add		r0, r5, #0x0
	bl		sub_080c14a0
_080c141c:
	mov		r0, #0xec
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	b		_080c1426
_080c1424:
	ldr		r4, [r4, #0x0]
_080c1426:
	ldr		r2, [r4, #0x8]
	ldr		r0, [r4, #0x4]
	b		_080c1436
_080c142c:
	mov		r3, #0xc
	ldrsh	r1, [r2, r3]
	cmp		r1, #0x0
	beq		_080c1458
	add		r2, #0x58
_080c1436:
	sub		r0, #0x1
	cmp		r0, #0x0
	bge		_080c142c
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080c1424
	add		r0, r5, #0x0
	mov		r1, #0x4
	bl		sub_080c13dc
	str		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080c1424
	mov		r0, #0xc
	str		r0, [r5, #0x0]
	mov		r0, #0x0
	b		_080c1478
_080c1458:
	mov		r0, #0x1
	strh	r0, [r2, #0xc]
	str		r1, [r2, #0x0]
	str		r1, [r2, #0x8]
	str		r1, [r2, #0x4]
	str		r1, [r2, #0x10]
	str		r1, [r2, #0x14]
	str		r1, [r2, #0x18]
	ldr		r0, _080c147c
	strh	r0, [r2, #0xe]
	str		r1, [r2, #0x30]
	str		r1, [r2, #0x34]
	str		r1, [r2, #0x44]
	str		r1, [r2, #0x48]
	str		r5, [r2, #0x54]
	add		r0, r2, #0x0
_080c1478:
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC147A, 0x2

_080c147c:	.4byte 0x0000FFFF
	thumb_func_end sub_080c140c

	thumb_func_start sub_080c1480
sub_080c1480:
	push	{ lr }
	ldr		r1, _080c148c
	bl		sub_080c19ac
	pop		{ pc }

.incbin "base.gba", 0xC148A, 0x2

_080c148c:	.4byte 0x080C1311
	thumb_func_end sub_080c1480

	thumb_func_start sub_080c1490
sub_080c1490:
	push	{ lr }
	ldr		r0, _080c149c
	ldr		r0, [r0, #0x0]
	bl		sub_080c1480
	pop		{ pc }

_080c149c:	.4byte 0x0200EE40
	thumb_func_end sub_080c1490

	thumb_func_start sub_080c14a0
sub_080c14a0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, _080c14fc
	str		r0, [r5, #0x3c]
	mov		r0, #0x1
	str		r0, [r5, #0x38]
	mov		r0, #0xf2
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	add		r0, r4, #0x0
	mov		r1, #0x4
	mov		r2, #0x0
	add		r3, r5, #0x0
	bl		sub_080c13a4
	mov		r1, #0x8f
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x9
	mov		r2, #0x1
	add		r3, r5, #0x0
	bl		sub_080c13a4
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0xa
	mov		r2, #0x2
	add		r3, r5, #0x0
	bl		sub_080c13a4
	mov		r0, #0xec
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x3
	str		r0, [r1, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	str		r4, [r0, #0x0]
	pop		{ r4, r5, pc }

_080c14fc:	.4byte sub_080c1480
	thumb_func_end sub_080c14a0

	thumb_func_start sub_080c1500
sub_080c1500:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	add		r4, r1, #0x0
	cmp		r4, #0x0
	bne		_080c1512
	b		_080c16b6
_080c1512:
	bl		sub_080c2184
	add		r5, r4, #0x0
	sub		r5, #0x8
	ldr		r1, [r5, #0x4]
	mov		r6, #0x2
	neg		r6, r6
	and		r6, r1
	add		r7, r5, r6
	ldr		r4, [r7, #0x4]
	mov		r0, #0x4
	neg		r0, r0
	and		r4, r0
	ldr		r0, _080c1574
	mov		r12, r0
	ldr		r0, [r0, #0x8]
	cmp		r7, r0
	bne		_080c1580
	add		r6, r6, r4
	mov		r4, #0x1
	and		r1, r4
	cmp		r1, #0x0
	bne		_080c154e
	ldr		r0, [r5, #0x0]
	sub		r5, r5, r0
	add		r6, r6, r0
	ldr		r3, [r5, #0xc]
	ldr		r2, [r5, #0x8]
	str		r3, [r2, #0xc]
	str		r2, [r3, #0x8]
_080c154e:
	add		r0, r6, #0x0
	orr		r0, r4
	str		r0, [r5, #0x4]
	mov		r2, r12
	str		r5, [r2, #0x8]
	ldr		r0, _080c1578
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bcc		_080c156a
	ldr		r0, _080c157c
	ldr		r1, [r0, #0x0]
	mov		r0, r9
	bl		sub_080c16c0
_080c156a:
	mov		r0, r9
	bl		sub_080c2188
	b		_080c16b6

.incbin "base.gba", 0xC1572, 0x2

_080c1574:	.4byte 0x0200EE58
_080c1578:	.4byte 0x0200F260
_080c157c:	.4byte 0x0200F264

_080c1580:
	str		r4, [r7, #0x4]
	mov		r0, #0x0
	mov		r8, r0
	mov		r0, #0x1
	and		r1, r0
	cmp		r1, #0x0
	bne		_080c15ac
	ldr		r0, [r5, #0x0]
	sub		r5, r5, r0
	add		r6, r6, r0
	ldr		r1, [r5, #0x8]
	mov		r0, r12
	add		r0, #0x8
	cmp		r1, r0
	bne		_080c15a4
	mov		r2, #0x1
	mov		r8, r2
	b		_080c15ac
_080c15a4:
	ldr		r3, [r5, #0xc]
	add		r2, r1, #0x0
	str		r3, [r2, #0xc]
	str		r2, [r3, #0x8]
_080c15ac:
	add		r0, r7, r4
	ldr		r0, [r0, #0x4]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c15e4
	add		r6, r6, r4
	ldr		r1, [r7, #0x8]
	mov		r0, r8
	cmp		r0, #0x0
	bne		_080c15dc
	ldr		r0, _080c15d8
	cmp		r1, r0
	bne		_080c15dc
	mov		r2, #0x1
	mov		r8, r2
	str		r5, [r1, #0xc]
	str		r5, [r1, #0x8]
	str		r1, [r5, #0xc]
	str		r1, [r5, #0x8]
	b		_080c15e4

.incbin "base.gba", 0xC15D6, 0x2

_080c15d8:	.4byte 0x0200EE60

_080c15dc:
	ldr		r3, [r7, #0xc]
	add		r2, r1, #0x0
	str		r3, [r2, #0xc]
	str		r2, [r3, #0x8]
_080c15e4:
	mov		r1, #0x1
	add		r0, r6, #0x0
	orr		r0, r1
	str		r0, [r5, #0x4]
	add		r0, r5, r6
	str		r6, [r0, #0x0]
	mov		r0, r8
	cmp		r0, #0x0
	bne		_080c16b0
	ldr		r0, _080c1614
	cmp		r6, r0
	bhi		_080c161c
	lsr		r4, r6, #0x3
	ldr		r2, _080c1618
	add		r0, r4, #0x0
	asr		r0, r0, #0x2
	lsl		r1, r0
	ldr		r0, [r2, #0x4]
	orr		r0, r1
	str		r0, [r2, #0x4]
	lsl		r0, r4, #0x3
	add		r3, r0, r2
	ldr		r2, [r3, #0x8]
	b		_080c16a8

_080c1614:	.4byte 0x000001FF
_080c1618:	.4byte 0x0200EE58

_080c161c:
	lsr		r1, r6, #0x9
	cmp		r1, #0x0
	bne		_080c1626
	lsr		r4, r6, #0x3
	b		_080c166e
_080c1626:
	cmp		r1, #0x4
	bhi		_080c1632
	lsr		r0, r6, #0x6
	add		r4, r0, #0x0
	add		r4, #0x38
	b		_080c166e
_080c1632:
	cmp		r1, #0x14
	bhi		_080c163c
	add		r4, r1, #0x0
	add		r4, #0x5b
	b		_080c166e
_080c163c:
	cmp		r1, #0x54
	bhi		_080c1648
	lsr		r0, r6, #0xc
	add		r4, r0, #0x0
	add		r4, #0x6e
	b		_080c166e
_080c1648:
	mov		r0, #0xaa
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_080c1658
	lsr		r0, r6, #0xf
	add		r4, r0, #0x0
	add		r4, #0x77
	b		_080c166e
_080c1658:
	ldr		r0, _080c1668
	cmp		r1, r0
	bhi		_080c166c
	lsr		r0, r6, #0x12
	add		r4, r0, #0x0
	add		r4, #0x7c
	b		_080c166e

.incbin "base.gba", 0xC1666, 0x2

_080c1668:	.4byte 0x00000554

_080c166c:
	mov		r4, #0x7e
_080c166e:
	lsl		r0, r4, #0x3
	ldr		r7, _080c168c
	add		r3, r0, r7
	ldr		r2, [r3, #0x8]
	cmp		r2, r3
	bne		_080c1690
	add		r0, r4, #0x0
	asr		r0, r0, #0x2
	mov		r1, #0x1
	lsl		r1, r0
	ldr		r0, [r7, #0x4]
	orr		r0, r1
	str		r0, [r7, #0x4]
	b		_080c16a8

.incbin "base.gba", 0xC168A, 0x2

_080c168c:	.4byte 0x0200EE58

_080c1690:
	ldr		r0, [r2, #0x4]
	mov		r1, #0x4
	neg		r1, r1
	b		_080c16a0
_080c1698:
	ldr		r2, [r2, #0x8]
	cmp		r2, r3
	beq		_080c16a6
	ldr		r0, [r2, #0x4]
_080c16a0:
	and		r0, r1
	cmp		r6, r0
	bcc		_080c1698
_080c16a6:
	ldr		r3, [r2, #0xc]
_080c16a8:
	str		r3, [r5, #0xc]
	str		r2, [r5, #0x8]
	str		r5, [r3, #0x8]
	str		r5, [r2, #0xc]
_080c16b0:
	mov		r0, r9
	bl		sub_080c2188
_080c16b6:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC16BE, 0x2
	thumb_func_end sub_080c1500

	thumb_func_start sub_080c16c0
sub_080c16c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080c2184
	ldr		r0, _080c1748
	mov		r8, r0
	ldr		r0, [r0, #0x8]
	ldr		r6, [r0, #0x4]
	mov		r0, #0x4
	neg		r0, r0
	and		r6, r0
	sub		r4, r6, r4
	mov		r5, #0x80
	lsl		r5, r5, #0x5
	ldr		r1, _080c174c
	add		r4, r4, r1
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080bbe34
	sub		r0, #0x1
	lsl		r4, r0, #0xc
	cmp		r4, r5
	blt		_080c173e
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080c21d0
	add		r2, r0, #0x0
	mov		r1, r8
	ldr		r0, [r1, #0x8]
	add		r0, r0, r6
	cmp		r2, r0
	bne		_080c173e
	neg		r1, r4
	add		r0, r7, #0x0
	bl		sub_080c21d0
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_080c1758
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080c21d0
	add		r2, r0, #0x0
	mov		r0, r8
	ldr		r3, [r0, #0x8]
	sub		r6, r2, r3
	cmp		r6, #0xf
	ble		_080c173e
	ldr		r1, _080c1750
	ldr		r0, _080c1754
	ldr		r0, [r0, #0x0]
	sub		r0, r2, r0
	str		r0, [r1, #0x0]
	mov		r0, #0x1
	orr		r6, r0
	str		r6, [r3, #0x4]
_080c173e:
	add		r0, r7, #0x0
	bl		sub_080c2188
	mov		r0, #0x0
	b		_080c1774

_080c1748:	.4byte 0x0200EE58
_080c174c:	.4byte 0x00000FEF
_080c1750:	.4byte 0x0200F274
_080c1754:	.4byte 0x0200F268

_080c1758:
	mov		r1, r8
	ldr		r2, [r1, #0x8]
	sub		r0, r6, r4
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r2, #0x4]
	ldr		r1, _080c177c
	ldr		r0, [r1, #0x0]
	sub		r0, r0, r4
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	bl		sub_080c2188
	mov		r0, #0x1
_080c1774:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC177A, 0x2

_080c177c:	.4byte 0x0200F274
	thumb_func_end sub_080c16c0

	thumb_func_start sub_080c1780
sub_080c1780:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r10, r1
	ldr		r6, [r1, #0x8]
	cmp		r6, #0x0
	bne		_080c1798
	b		_080c198e
_080c1798:
	mov		r0, #0x8
	ldrh	r1, [r5, #0xc]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c17a8
	ldr		r0, [r5, #0x10]
	cmp		r0, #0x0
	bne		_080c17b4
_080c17a8:
	add		r0, r5, #0x0
	bl		sub_080c03b8
	cmp		r0, #0x0
	beq		_080c17b4
	b		_080c199a
_080c17b4:
	mov		r2, r10
	ldr		r2, [r2, #0x0]
	mov		r8, r2
	mov		r6, #0x0
	ldrh	r1, [r5, #0xc]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c1808
_080c17c6:
	ldr		r0, [r5, #0x1c]
	ldr		r3, [r5, #0x24]
	cmp		r6, #0x0
	bne		_080c17dc
_080c17ce:
	mov		r1, r8
	ldr		r7, [r1, #0x0]
	ldr		r6, [r1, #0x4]
	mov		r2, #0x8
	add		r8, r2
	cmp		r6, #0x0
	beq		_080c17ce
_080c17dc:
	add		r2, r6, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	cmp		r6, r1
	bls		_080c17e8
	add		r2, r1, #0x0
_080c17e8:
	add		r1, r7, #0x0
	bl		sub_080bbc7c
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bgt		_080c17f6
	b		_080c1992
_080c17f6:
	add		r7, r7, r4
	sub		r6, r6, r4
	mov		r1, r10
	ldr		r0, [r1, #0x8]
	sub		r0, r0, r4
	str		r0, [r1, #0x8]
	cmp		r0, #0x0
	bne		_080c17c6
	b		_080c198e
_080c1808:
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c18c2
_080c1810:
	ldrh	r1, [r5, #0xc]
	ldr		r0, [r5, #0x8]
	ldr		r3, [r5, #0x0]
	cmp		r6, #0x0
	bne		_080c1828
_080c181a:
	mov		r2, r8
	ldr		r7, [r2, #0x0]
	ldr		r6, [r2, #0x4]
	mov		r2, #0x8
	add		r8, r2
	cmp		r6, #0x0
	beq		_080c181a
_080c1828:
	add		r4, r0, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c1856
	cmp		r6, r4
	bcs		_080c183c
	add		r4, r6, #0x0
_080c183c:
	add		r0, r3, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080c20fc
	ldr		r0, [r5, #0x8]
	sub		r0, r0, r4
	str		r0, [r5, #0x8]
	ldr		r0, [r5, #0x0]
	add		r0, r0, r4
	str		r0, [r5, #0x0]
	add		r4, r6, #0x0
	b		_080c18b0
_080c1856:
	ldr		r0, [r5, #0x10]
	cmp		r3, r0
	bls		_080c187e
	cmp		r6, r4
	bls		_080c187e
	add		r0, r3, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080c20fc
	ldr		r0, [r5, #0x0]
	add		r0, r0, r4
	str		r0, [r5, #0x0]
	add		r0, r5, #0x0
	bl		sub_080c1310
	cmp		r0, #0x0
	beq		_080c187c
	b		_080c1992
_080c187c:
	b		_080c18b0
_080c187e:
	ldr		r4, [r5, #0x14]
	cmp		r6, r4
	bcc		_080c1898
	ldr		r0, [r5, #0x1c]
	ldr		r3, [r5, #0x24]
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080bbc7c
	add		r4, r0, #0x0
	cmp		r4, #0x0
	ble		_080c1992
	b		_080c18b0
_080c1898:
	add		r4, r6, #0x0
	add		r0, r3, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080c20fc
	ldr		r0, [r5, #0x8]
	sub		r0, r0, r4
	str		r0, [r5, #0x8]
	ldr		r0, [r5, #0x0]
	add		r0, r0, r4
	str		r0, [r5, #0x0]
_080c18b0:
	add		r7, r7, r4
	sub		r6, r6, r4
	mov		r1, r10
	ldr		r0, [r1, #0x8]
	sub		r0, r0, r4
	str		r0, [r1, #0x8]
	cmp		r0, #0x0
	bne		_080c1810
	b		_080c198e
_080c18c2:
	mov		r2, #0x0
	str		r2, [sp, #0x0]
_080c18c6:
	cmp		r6, #0x0
	bne		_080c18dc
	mov		r0, #0x0
	str		r0, [sp, #0x0]
_080c18ce:
	mov		r1, r8
	ldr		r7, [r1, #0x0]
	ldr		r6, [r1, #0x4]
	mov		r2, #0x8
	add		r8, r2
	cmp		r6, #0x0
	beq		_080c18ce
_080c18dc:
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	bne		_080c1900
	add		r0, r7, #0x0
	mov		r1, #0xa
	add		r2, r6, #0x0
	bl		sub_080c207c
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_080c18f8
	sub		r0, r7, #0x1
	sub		r1, r1, r0
	b		_080c18fa
_080c18f8:
	add		r1, r6, #0x1
_080c18fa:
	mov		r9, r1
	mov		r2, #0x1
	str		r2, [sp, #0x0]
_080c1900:
	mov		r2, r9
	cmp		r9, r6
	bls		_080c1908
	add		r2, r6, #0x0
_080c1908:
	ldr		r0, [r5, #0x8]
	ldr		r1, [r5, #0x14]
	add		r4, r0, r1
	ldr		r0, [r5, #0x10]
	ldr		r3, [r5, #0x0]
	cmp		r3, r0
	bls		_080c1936
	cmp		r2, r4
	ble		_080c1936
	add		r0, r3, #0x0
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080c20fc
	ldr		r0, [r5, #0x0]
	add		r0, r0, r4
	str		r0, [r5, #0x0]
	add		r0, r5, #0x0
	bl		sub_080c1310
	cmp		r0, #0x0
	bne		_080c1992
	b		_080c1966
_080c1936:
	add		r4, r1, #0x0
	cmp		r2, r4
	blt		_080c1950
	ldr		r0, [r5, #0x1c]
	ldr		r3, [r5, #0x24]
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_080bbc7c
	add		r4, r0, #0x0
	cmp		r4, #0x0
	ble		_080c1992
	b		_080c1966
_080c1950:
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	add		r1, r7, #0x0
	bl		sub_080c20fc
	ldr		r0, [r5, #0x8]
	sub		r0, r0, r4
	str		r0, [r5, #0x8]
	ldr		r0, [r5, #0x0]
	add		r0, r0, r4
	str		r0, [r5, #0x0]
_080c1966:
	mov		r0, r9
	sub		r0, r0, r4
	mov		r9, r0
	cmp		r0, #0x0
	bne		_080c197e
	add		r0, r5, #0x0
	bl		sub_080c1310
	cmp		r0, #0x0
	bne		_080c1992
	mov		r1, #0x0
	str		r1, [sp, #0x0]
_080c197e:
	add		r7, r7, r4
	sub		r6, r6, r4
	mov		r2, r10
	ldr		r0, [r2, #0x8]
	sub		r0, r0, r4
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	bne		_080c18c6
_080c198e:
	mov		r0, #0x0
	b		_080c199e
_080c1992:
	mov		r0, #0x40
	ldrh	r1, [r5, #0xc]
	orr		r0, r1
	strh	r0, [r5, #0xc]
_080c199a:
	mov		r0, #0x1
	neg		r0, r0
_080c199e:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC19AA, 0x2
	thumb_func_end sub_080c1780

	thumb_func_start sub_080c19ac
sub_080c19ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r1
	mov		r7, #0x0
	mov		r1, #0xec
	lsl		r1, r1, #0x1
	add		r6, r0, r1
	cmp		r6, #0x0
	beq		_080c19e4
_080c19c0:
	ldr		r5, [r6, #0x8]
	ldr		r4, [r6, #0x4]
	b		_080c19d8
_080c19c6:
	mov		r1, #0xc
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x0
	beq		_080c19d6
	add		r0, r5, #0x0
	bl		sub_080bbc90
	orr		r7, r0
_080c19d6:
	add		r5, #0x58
_080c19d8:
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080c19c6
	ldr		r6, [r6, #0x0]
	cmp		r6, #0x0
	bne		_080c19c0
_080c19e4:
	add		r0, r7, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_080c19ac

	thumb_func_start sub_080c19ec
sub_080c19ec:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	cmp		r4, #0x0
	beq		_080c1a20
	ldr		r1, _080c1a14
	add		r0, r4, #0x0
	bl		sub_080bdb94
	cmp		r0, #0x0
	beq		_080c1a1c
	ldr		r1, _080c1a18
	add		r0, r4, #0x0
	bl		sub_080bdb94
	cmp		r0, #0x0
	beq		_080c1a1c
	mov		r0, #0x0
	b		_080c1a22

_080c1a14:	.4byte 0x080e02d8
_080c1a18:	.4byte 0x080e02d0

_080c1a1c:
	str		r6, [r5, #0x30]
	str		r4, [r5, #0x34]
_080c1a20:
	ldr		r0, _080c1a24
_080c1a22:
	pop		{ r4, r5, r6, pc }

_080c1a24:	.4byte 0x080e02d8
	thumb_func_end sub_080c19ec

	thumb_func_start sub_080c1a28
sub_080c1a28:
	ldr		r0, _080c1a2c
	bx		lr

_080c1a2c:	.4byte 0x080e02a0
	thumb_func_end sub_080c1a28

	thumb_func_start sub_080c1a30
sub_080c1a30:
	push	{ lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, _080c1a44
	ldr		r0, [r0, #0x0]
	add		r1, r3, #0x0
	bl		sub_080c19ec
	pop		{ pc }

.incbin "base.gba", 0xC1A42, 0x2

_080c1a44:	.4byte 0x0200EE40
	thumb_func_end sub_080c1a30

	thumb_func_start sub_080c1a48
sub_080c1a48:
	push	{ lr }
	ldr		r0, _080c1a54
	ldr		r0, [r0, #0x0]
	bl		sub_080c1a28
	pop		{ pc }

_080c1a54:	.4byte 0x0200EE40
	thumb_func_end sub_080c1a48

	thumb_func_start sub_080c1a58
sub_080c1a58:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x3c
	add		r4, r0, #0x0
	mov		r0, #0x2
	ldrh	r1, [r4, #0xc]
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c1aee
	mov		r2, #0xe
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	blt		_080c1a80
	ldr		r0, [r4, #0x54]
	mov		r2, #0xe
	ldrsh	r1, [r4, r2]
	mov		r2, sp
	bl		sub_080c278c
	cmp		r0, #0x0
	bge		_080c1a92
_080c1a80:
	mov		r7, #0x0
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r1, #0x0
	ldrh	r2, [r4, #0xc]
	orr		r0, r2
	b		_080c1ad6
_080c1a92:
	mov		r7, #0x0
	ldr		r1, [sp, #0x4]
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r1, r0
	bne		_080c1aa6
	mov		r7, #0x1
_080c1aa6:
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bne		_080c1acc
	ldr		r1, [r4, #0x28]
	ldr		r0, _080c1ac8
	cmp		r1, r0
	bne		_080c1acc
	add		r0, r6, #0x0
	ldrh	r1, [r4, #0xc]
	orr		r0, r1
	strh	r0, [r4, #0xc]
	str		r6, [r4, #0x4c]
	b		_080c1ad8

.incbin "base.gba", 0xC1AC6, 0x2

_080c1ac8:	.4byte 0x080C2271

_080c1acc:
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r0, r2, #0x0
	ldrh	r1, [r4, #0xc]
	orr		r0, r1
_080c1ad6:
	strh	r0, [r4, #0xc]
_080c1ad8:
	ldr		r0, [r4, #0x54]
	add		r1, r6, #0x0
	bl		sub_080c1c90
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_080c1afc
	mov		r0, #0x2
	ldrh	r2, [r4, #0xc]
	orr		r0, r2
	strh	r0, [r4, #0xc]
_080c1aee:
	add		r0, r4, #0x0
	add		r0, #0x43
	str		r0, [r4, #0x0]
	str		r0, [r4, #0x10]
	mov		r0, #0x1
	str		r0, [r4, #0x14]
	b		_080c1b2a
_080c1afc:
	ldr		r1, [r4, #0x54]
	ldr		r0, _080c1b30
	str		r0, [r1, #0x3c]
	mov		r0, #0x80
	mov		r5, #0x0
	ldrh	r1, [r4, #0xc]
	orr		r0, r1
	strh	r0, [r4, #0xc]
	str		r2, [r4, #0x0]
	str		r2, [r4, #0x10]
	str		r6, [r4, #0x14]
	cmp		r7, #0x0
	beq		_080c1b2a
	mov		r2, #0xe
	ldrsh	r0, [r4, r2]
	bl		sub_080bda00
	cmp		r0, #0x0
	beq		_080c1b2a
	mov		r0, #0x1
	ldrh	r1, [r4, #0xc]
	orr		r0, r1
	strh	r0, [r4, #0xc]
_080c1b2a:
	add		sp, #0x3c
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC1B2E, 0x2

_080c1b30:	.4byte sub_080c1480
	thumb_func_end sub_080c1a58

	thumb_func_start sub_080c1b34
sub_080c1b34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	str		r0, [sp, #0x0]
	ldr		r0, _080c1ba8
	ldr		r0, [r0, #0x8]
	mov		r8, r0
	ldr		r7, [r0, #0x4]
	mov		r0, #0x4
	neg		r0, r0
	and		r7, r0
	mov		r2, r8
	add		r4, r2, r7
	ldr		r0, _080c1bac
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	add		r6, r1, #0x0
	add		r6, #0x10
	ldr		r3, _080c1bb0
	mov		r10, r3
	ldr		r0, [r3, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	mov		r9, r2
	cmp		r0, r9
	beq		_080c1b76
	ldr		r3, _080c1bb4
	add		r6, r1, r3
	ldr		r0, _080c1bb8
	and		r6, r0
_080c1b76:
	ldr		r0, [sp, #0x0]
	add		r1, r6, #0x0
	bl		sub_080c21d0
	add		r5, r0, #0x0
	cmp		r5, r9
	beq		_080c1c78
	cmp		r5, r4
	bcs		_080c1b8e
	ldr		r0, _080c1ba8
	cmp		r8, r0
	bne		_080c1c78
_080c1b8e:
	ldr		r1, _080c1bbc
	ldr		r0, [r1, #0x0]
	add		r2, r0, r6
	str		r2, [r1, #0x0]
	cmp		r5, r4
	bne		_080c1bc0
	add		r2, r6, r7
	ldr		r3, _080c1ba8
	ldr		r1, [r3, #0x8]
	mov		r0, #0x1
	orr		r2, r0
	str		r2, [r1, #0x4]
	b		_080c1c60

_080c1ba8:	.4byte 0x0200EE58
_080c1bac:	.4byte 0x0200F264
_080c1bb0:	.4byte 0x0200F268
_080c1bb4:	.4byte 0x0000100F
_080c1bb8:	.4byte 0xFFFFF000
_080c1bbc:	.4byte 0x0200F274

_080c1bc0:
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	cmp		r0, r9
	bne		_080c1bcc
	str		r5, [r3, #0x0]
	b		_080c1bd2
_080c1bcc:
	sub		r0, r5, r4
	add		r0, r2, r0
	str		r0, [r1, #0x0]
_080c1bd2:
	add		r1, r5, #0x0
	add		r1, #0x8
	mov		r0, #0x7
	and		r1, r0
	cmp		r1, #0x0
	beq		_080c1be6
	mov		r0, #0x8
	sub		r4, r0, r1
	add		r5, r5, r4
	b		_080c1be8
_080c1be6:
	mov		r4, #0x0
_080c1be8:
	add		r0, r5, r6
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	sub		r1, #0x1
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	sub		r0, r1, r0
	add		r4, r4, r0
	ldr		r0, [sp, #0x0]
	add		r1, r4, #0x0
	bl		sub_080c21d0
	add		r2, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_080c1c78
	ldr		r1, _080c1c30
	ldr		r0, [r1, #0x0]
	add		r0, r0, r4
	str		r0, [r1, #0x0]
	ldr		r1, _080c1c34
	str		r5, [r1, #0x8]
	sub		r0, r2, r5
	add		r2, r0, r4
	mov		r3, #0x1
	orr		r2, r3
	str		r2, [r5, #0x4]
	cmp		r8, r1
	beq		_080c1c60
	cmp		r7, #0xf
	bhi		_080c1c38
	str		r3, [r5, #0x4]
	b		_080c1c78

.incbin "base.gba", 0xC1C2E, 0x2

_080c1c30:	.4byte 0x0200F274
_080c1c34:	.4byte 0x0200EE58

_080c1c38:
	sub		r7, #0xc
	mov		r0, #0x8
	neg		r0, r0
	and		r7, r0
	mov		r2, r8
	ldr		r0, [r2, #0x4]
	and		r0, r3
	orr		r0, r7
	str		r0, [r2, #0x4]
	add		r1, r2, r7
	mov		r0, #0x5
	str		r0, [r1, #0x4]
	str		r0, [r1, #0x8]
	cmp		r7, #0xf
	bls		_080c1c60
	mov		r1, r8
	add		r1, #0x8
	ldr		r0, [sp, #0x0]
	bl		sub_080c1500
_080c1c60:
	ldr		r0, _080c1c84
	ldr		r2, _080c1c88
	ldr		r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bls		_080c1c6e
	str		r1, [r2, #0x0]
_080c1c6e:
	ldr		r2, _080c1c8c
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bls		_080c1c78
	str		r1, [r2, #0x0]
_080c1c78:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

_080c1c84:	.4byte 0x0200F274
_080c1c88:	.4byte 0x0200F26C
_080c1c8c:	.4byte 0x0200F270
	thumb_func_end sub_080c1b34

	thumb_func_start sub_080c1c90
sub_080c1c90:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r0, [sp, #0x0]
	add		r1, #0xb
	cmp		r1, #0x16
	ble		_080c1cb2
	mov		r0, #0x8
	neg		r0, r0
	mov		r8, r0
	mov		r2, r8
	and		r2, r1
	mov		r8, r2
	b		_080c1cb6
_080c1cb2:
	mov		r3, #0x10
	mov		r8, r3
_080c1cb6:
	ldr		r0, [sp, #0x0]
	bl		sub_080c2184
	ldr		r0, _080c1cfc
	cmp		r8, r0
	bhi		_080c1d0a
	mov		r4, r8
	lsr		r4, r4, #0x3
	mov		r12, r4
	ldr		r0, _080c1d00
	mov		r7, r8
	add		r2, r7, r0
	ldr		r5, [r2, #0xc]
	cmp		r5, r2
	bne		_080c1cde
	add		r2, r5, #0x0
	add		r2, #0x8
	ldr		r5, [r2, #0xc]
	cmp		r5, r2
	beq		_080c1d04
_080c1cde:
	ldr		r2, [r5, #0x4]
	mov		r0, #0x4
	neg		r0, r0
	and		r2, r0
	ldr		r6, [r5, #0xc]
	ldr		r4, [r5, #0x8]
	str		r6, [r4, #0xc]
	str		r4, [r6, #0x8]
	add		r2, r5, r2
	ldr		r0, [r2, #0x4]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r2, #0x4]
	b		_080c2036

.incbin "base.gba", 0xC1CFA, 0x2

_080c1cfc:	.4byte 0x000001F7
_080c1d00:	.4byte 0x0200EE58

_080c1d04:
	mov		r0, #0x2
	add		r12, r0
	b		_080c1db6
_080c1d0a:
	mov		r2, r8
	lsr		r1, r2, #0x9
	cmp		r1, #0x0
	bne		_080c1d16
	lsr		r2, r2, #0x3
	b		_080c1d66
_080c1d16:
	cmp		r1, #0x4
	bhi		_080c1d24
	mov		r3, r8
	lsr		r0, r3, #0x6
	add		r0, #0x38
	mov		r12, r0
	b		_080c1d68
_080c1d24:
	cmp		r1, #0x14
	bhi		_080c1d2e
	add		r1, #0x5b
	mov		r12, r1
	b		_080c1d68
_080c1d2e:
	cmp		r1, #0x54
	bhi		_080c1d3c
	mov		r4, r8
	lsr		r0, r4, #0xc
	add		r0, #0x6e
	mov		r12, r0
	b		_080c1d68
_080c1d3c:
	mov		r0, #0xaa
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_080c1d4e
	mov		r7, r8
	lsr		r0, r7, #0xf
	add		r0, #0x77
	mov		r12, r0
	b		_080c1d68
_080c1d4e:
	ldr		r0, _080c1d60
	cmp		r1, r0
	bhi		_080c1d64
	mov		r1, r8
	lsr		r0, r1, #0x12
	add		r0, #0x7c
	mov		r12, r0
	b		_080c1d68

.incbin "base.gba", 0xC1D5E, 0x2

_080c1d60:	.4byte 0x00000554

_080c1d64:
	mov		r2, #0x7e
_080c1d66:
	mov		r12, r2
_080c1d68:
	mov		r3, r12
	lsl		r0, r3, #0x3
	ldr		r1, _080c1d8c
	add		r4, r0, r1
	ldr		r5, [r4, #0xc]
	cmp		r5, r4
	beq		_080c1db2
	ldr		r1, [r5, #0x4]
	mov		r0, #0x4
	neg		r0, r0
	and		r1, r0
	mov		r7, r8
	sub		r3, r1, r7
	cmp		r3, #0xf
	ble		_080c1d90
	add		r0, #0x3
	add		r12, r0
	b		_080c1db2

_080c1d8c:	.4byte 0x0200EE58

_080c1d90:
	cmp		r3, #0x0
	blt		_080c1d96
	b		_080c1fd0
_080c1d96:
	ldr		r5, [r5, #0xc]
	cmp		r5, r4
	beq		_080c1db2
	ldr		r1, [r5, #0x4]
	mov		r0, #0x4
	neg		r0, r0
	and		r1, r0
	mov		r2, r8
	sub		r3, r1, r2
	cmp		r3, #0xf
	ble		_080c1d90
	mov		r3, #0x1
	neg		r3, r3
	add		r12, r3
_080c1db2:
	mov		r4, #0x1
	add		r12, r4
_080c1db6:
	ldr		r0, _080c1df4
	ldr		r5, [r0, #0x8]
	mov		r10, r0
	cmp		r5, r10
	bne		_080c1dc2
	b		_080c1ec4
_080c1dc2:
	ldr		r1, [r5, #0x4]
	mov		r0, #0x4
	neg		r0, r0
	and		r1, r0
	mov		r7, r8
	sub		r3, r1, r7
	cmp		r3, #0xf
	ble		_080c1df8
	add		r2, r5, r7
	mov		r1, #0x1
	add		r0, r7, #0x0
	orr		r0, r1
	str		r0, [r5, #0x4]
	mov		r4, r10
	str		r2, [r4, #0xc]
	str		r2, [r4, #0x8]
	str		r4, [r2, #0xc]
	str		r4, [r2, #0x8]
	add		r0, r3, #0x0
	orr		r0, r1
	str		r0, [r2, #0x4]
	add		r0, r2, r3
	str		r3, [r0, #0x0]
	b		_080c2036

.incbin "base.gba", 0xC1DF2, 0x2

_080c1df4:	.4byte 0x0200EE60

_080c1df8:
	mov		r7, r10
	str		r7, [r7, #0xc]
	str		r7, [r7, #0x8]
	cmp		r3, #0x0
	blt		_080c1e0e
	add		r2, r5, r1
	ldr		r0, [r2, #0x4]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r2, #0x4]
	b		_080c2036
_080c1e0e:
	ldr		r0, _080c1e30
	cmp		r1, r0
	bhi		_080c1e34
	lsr		r2, r1, #0x3
	mov		r3, r10
	sub		r3, #0x8
	add		r0, r2, #0x0
	asr		r0, r0, #0x2
	mov		r1, #0x1
	lsl		r1, r0
	ldr		r0, [r3, #0x4]
	orr		r0, r1
	str		r0, [r3, #0x4]
	lsl		r0, r2, #0x3
	add		r6, r0, r3
	ldr		r4, [r6, #0x8]
	b		_080c1ebc

_080c1e30:	.4byte 0x000001FF

_080c1e34:
	lsr		r2, r1, #0x9
	cmp		r2, #0x0
	bne		_080c1e3e
	lsr		r2, r1, #0x3
	b		_080c1e82
_080c1e3e:
	cmp		r2, #0x4
	bhi		_080c1e4a
	lsr		r0, r1, #0x6
	add		r2, r0, #0x0
	add		r2, #0x38
	b		_080c1e82
_080c1e4a:
	cmp		r2, #0x14
	bhi		_080c1e52
	add		r2, #0x5b
	b		_080c1e82
_080c1e52:
	cmp		r2, #0x54
	bhi		_080c1e5e
	lsr		r0, r1, #0xc
	add		r2, r0, #0x0
	add		r2, #0x6e
	b		_080c1e82
_080c1e5e:
	mov		r0, #0xaa
	lsl		r0, r0, #0x1
	cmp		r2, r0
	bhi		_080c1e6e
	lsr		r0, r1, #0xf
	add		r2, r0, #0x0
	add		r2, #0x77
	b		_080c1e82
_080c1e6e:
	ldr		r0, _080c1e7c
	cmp		r2, r0
	bhi		_080c1e80
	lsr		r0, r1, #0x12
	add		r2, r0, #0x0
	add		r2, #0x7c
	b		_080c1e82

_080c1e7c:	.4byte 0x00000554

_080c1e80:
	mov		r2, #0x7e
_080c1e82:
	lsl		r0, r2, #0x3
	ldr		r3, _080c1ea0
	add		r6, r0, r3
	ldr		r4, [r6, #0x8]
	cmp		r4, r6
	bne		_080c1ea4
	add		r0, r2, #0x0
	asr		r0, r0, #0x2
	mov		r1, #0x1
	lsl		r1, r0
	ldr		r7, _080c1ea0
	ldr		r0, [r7, #0x4]
	orr		r0, r1
	str		r0, [r7, #0x4]
	b		_080c1ebc

_080c1ea0:	.4byte 0x0200EE58

_080c1ea4:
	ldr		r0, [r4, #0x4]
	mov		r2, #0x4
	neg		r2, r2
	b		_080c1eb4
_080c1eac:
	ldr		r4, [r4, #0x8]
	cmp		r4, r6
	beq		_080c1eba
	ldr		r0, [r4, #0x4]
_080c1eb4:
	and		r0, r2
	cmp		r1, r0
	bcc		_080c1eac
_080c1eba:
	ldr		r6, [r4, #0xc]
_080c1ebc:
	str		r6, [r5, #0xc]
	str		r4, [r5, #0x8]
	str		r5, [r6, #0x8]
	str		r5, [r4, #0xc]
_080c1ec4:
	mov		r0, r12
	cmp		r0, #0x0
	bge		_080c1ecc
	add		r0, #0x3
_080c1ecc:
	asr		r0, r0, #0x2
	mov		r6, #0x1
	lsl		r6, r0
	ldr		r0, _080c1ef0
	ldr		r1, [r0, #0x4]
	cmp		r6, r1
	bhi		_080c1f8e
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c1f02
	mov		r0, #0x4
	neg		r0, r0
	mov		r2, r12
	and		r0, r2
	add		r0, #0x4
	mov		r12, r0
	b		_080c1ef8

_080c1ef0:	.4byte 0x0200EE58

_080c1ef4:
	mov		r3, #0x4
	add		r12, r3
_080c1ef8:
	lsl		r6, r6, #0x1
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c1ef4
_080c1f02:
	ldr		r4, _080c1f80
	mov		r9, r4
_080c1f06:
	mov		r7, r12
	str		r7, [sp, #0x4]
	mov		r1, r12
	lsl		r0, r1, #0x3
	mov		r3, r9
	add		r2, r0, r3
	add		r4, r2, #0x0
_080c1f14:
	ldr		r5, [r4, #0xc]
	cmp		r5, r4
	beq		_080c1f34
	mov		r0, #0x4
	neg		r0, r0
_080c1f1e:
	ldr		r1, [r5, #0x4]
	and		r1, r0
	mov		r7, r8
	sub		r3, r1, r7
	cmp		r3, #0xf
	bgt		_080c1fe4
	cmp		r3, #0x0
	bge		_080c200c
	ldr		r5, [r5, #0xc]
	cmp		r5, r4
	bne		_080c1f1e
_080c1f34:
	add		r4, #0x8
	mov		r0, #0x1
	add		r12, r0
	mov		r0, r12
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c1f14
_080c1f44:
	ldr		r0, [sp, #0x4]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c1f84
	ldr		r3, [sp, #0x4]
	sub		r3, #0x1
	str		r3, [sp, #0x4]
	sub		r2, #0x8
	ldr		r0, [r2, #0x8]
	cmp		r0, r2
	beq		_080c1f44
_080c1f5a:
	lsl		r6, r6, #0x1
	mov		r4, r9
	ldr		r1, [r4, #0x4]
	cmp		r6, r1
	bhi		_080c1f8e
	cmp		r6, #0x0
	beq		_080c1f8e
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c1f06
_080c1f70:
	mov		r7, #0x4
	add		r12, r7
	lsl		r6, r6, #0x1
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c1f70
	b		_080c1f06

_080c1f80:	.4byte 0x0200EE58

_080c1f84:
	mov		r1, r9
	ldr		r0, [r1, #0x4]
	bic		r0, r6
	str		r0, [r1, #0x4]
	b		_080c1f5a
_080c1f8e:
	ldr		r2, _080c1fcc
	ldr		r0, [r2, #0x8]
	ldr		r0, [r0, #0x4]
	mov		r4, #0x4
	neg		r4, r4
	and		r0, r4
	mov		r7, r8
	sub		r3, r0, r7
	cmp		r0, r8
	bcc		_080c1fa6
	cmp		r3, #0xf
	bgt		_080c2020
_080c1fa6:
	ldr		r0, [sp, #0x0]
	mov		r1, r8
	bl		sub_080c1b34
	ldr		r1, _080c1fcc
	ldr		r0, [r1, #0x8]
	ldr		r0, [r0, #0x4]
	and		r0, r4
	mov		r2, r8
	sub		r3, r0, r2
	cmp		r0, r8
	bcc		_080c1fc2
	cmp		r3, #0xf
	bgt		_080c2020
_080c1fc2:
	ldr		r0, [sp, #0x0]
	bl		sub_080c2188
	mov		r0, #0x0
	b		_080c2040

_080c1fcc:	.4byte 0x0200EE58

_080c1fd0:
	ldr		r6, [r5, #0xc]
	ldr		r4, [r5, #0x8]
	str		r6, [r4, #0xc]
	str		r4, [r6, #0x8]
	add		r2, r5, r1
	ldr		r0, [r2, #0x4]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r2, #0x4]
	b		_080c2036
_080c1fe4:
	mov		r4, r8
	add		r2, r5, r4
	mov		r1, #0x1
	orr		r4, r1
	str		r4, [r5, #0x4]
	ldr		r6, [r5, #0xc]
	ldr		r4, [r5, #0x8]
	str		r6, [r4, #0xc]
	str		r4, [r6, #0x8]
	mov		r7, r10
	str		r2, [r7, #0xc]
	str		r2, [r7, #0x8]
	str		r7, [r2, #0xc]
	str		r7, [r2, #0x8]
	add		r0, r3, #0x0
	orr		r0, r1
	str		r0, [r2, #0x4]
	add		r0, r2, r3
	str		r3, [r0, #0x0]
	b		_080c2036
_080c200c:
	add		r2, r5, r1
	ldr		r0, [r2, #0x4]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r2, #0x4]
	ldr		r6, [r5, #0xc]
	ldr		r4, [r5, #0x8]
	str		r6, [r4, #0xc]
	str		r4, [r6, #0x8]
	b		_080c2036
_080c2020:
	ldr		r2, _080c204c
	ldr		r5, [r2, #0x8]
	mov		r1, #0x1
	mov		r0, r8
	orr		r0, r1
	str		r0, [r5, #0x4]
	mov		r4, r8
	add		r0, r5, r4
	str		r0, [r2, #0x8]
	orr		r3, r1
	str		r3, [r0, #0x4]
_080c2036:
	ldr		r0, [sp, #0x0]
	bl		sub_080c2188
	add		r0, r5, #0x0
	add		r0, #0x8
_080c2040:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

_080c204c:	.4byte 0x0200EE58
	thumb_func_end sub_080c1c90

	thumb_func_start sub_080c2050
sub_080c2050:
	sub		sp, #0x4
	cmp		r1, #0x0
	bne		_080c2058
	mov		r1, sp
_080c2058:
	cmp		r2, #0x0
	beq		_080c2074
	cmp		r3, #0x0
	bne		_080c2066
	mov		r0, #0x1
	neg		r0, r0
	b		_080c2076
_080c2066:
	ldrb	r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_080c2074
	mov		r0, #0x1
	b		_080c2076
_080c2074:
	mov		r0, #0x0
_080c2076:
	add		sp, #0x4
	bx		lr

.incbin "base.gba", 0xC207A, 0x2
	thumb_func_end sub_080c2050

	thumb_func_start sub_080c207c
sub_080c207c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r1, #0x0
	add		r1, r0, #0x0
	mov		r0, #0xff
	and		r5, r0
	cmp		r2, #0x3
	bls		_080c20f0
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c20f0
	add		r4, r1, #0x0
	mov		r6, #0x0
	mov		r1, #0x0
_080c2098:
	lsl		r0, r6, #0x8
	add		r6, r0, r5
	add		r1, #0x1
	cmp		r1, #0x3
	bls		_080c2098
	cmp		r2, #0x3
	bls		_080c20d6
	ldr		r0, _080c20dc
	mov		r12, r0
	ldr		r7, _080c20e0
_080c20ac:
	ldr		r1, [r4, #0x0]
	eor		r1, r6
	mov		r3, r12
	add		r0, r1, r3
	bic		r0, r1
	and		r0, r7
	cmp		r0, #0x0
	beq		_080c20ce
	add		r1, r4, #0x0
	mov		r3, #0x0
_080c20c0:
	ldrb	r0, [r1, #0x0]
	cmp		r0, r5
	beq		_080c20ea
	add		r1, #0x1
	add		r3, #0x1
	cmp		r3, #0x3
	bls		_080c20c0
_080c20ce:
	sub		r2, #0x4
	add		r4, #0x4
	cmp		r2, #0x3
	bhi		_080c20ac
_080c20d6:
	add		r1, r4, #0x0
	b		_080c20f0

.incbin "base.gba", 0xC20DA, 0x2

_080c20dc:	.4byte 0xfefefeff
_080c20e0:	.4byte 0x80808080

_080c20e4:
	ldrb	r0, [r1, #0x0]
	cmp		r0, r5
	bne		_080c20ee
_080c20ea:
	add		r0, r1, #0x0
	b		_080c20fa
_080c20ee:
	add		r1, #0x1
_080c20f0:
	add		r0, r2, #0x0
	sub		r2, #0x1
	cmp		r0, #0x0
	bne		_080c20e4
	mov		r0, #0x0
_080c20fa:
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_080c207c

	thumb_func_start sub_080c20fc
sub_080c20fc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	add		r3, r1, #0x0
	cmp		r3, r5
	bcs		_080c212e
	add		r0, r3, r2
	cmp		r5, r0
	bcs		_080c212e
	add		r3, r0, #0x0
	add		r4, r5, r2
	sub		r2, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_080c2180
	add		r1, r0, #0x0
_080c211e:
	sub		r4, #0x1
	sub		r3, #0x1
	ldrb	r0, [r3, #0x0]
	strb	r0, [r4, #0x0]
	sub		r2, #0x1
	cmp		r2, r1
	bne		_080c211e
	b		_080c2180
_080c212e:
	cmp		r2, #0xf
	bls		_080c2166
	add		r0, r3, #0x0
	orr		r0, r4
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_080c2166
	add		r1, r3, #0x0
_080c2140:
	ldmia	r1!, { r0 }
	stmia	r4!, { r0 }
	ldmia	r1!, { r0 }
	stmia	r4!, { r0 }
	ldmia	r1!, { r0 }
	stmia	r4!, { r0 }
	ldmia	r1!, { r0 }
	stmia	r4!, { r0 }
	sub		r2, #0x10
	cmp		r2, #0xf
	bhi		_080c2140
	cmp		r2, #0x3
	bls		_080c2164
_080c215a:
	ldmia	r1!, { r0 }
	stmia	r4!, { r0 }
	sub		r2, #0x4
	cmp		r2, #0x3
	bhi		_080c215a
_080c2164:
	add		r3, r1, #0x0
_080c2166:
	sub		r2, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_080c2180
	add		r1, r0, #0x0
_080c2172:
	ldrb	r0, [r3, #0x0]
	strb	r0, [r4, #0x0]
	add		r3, #0x1
	add		r4, #0x1
	sub		r2, #0x1
	cmp		r2, r1
	bne		_080c2172
_080c2180:
	add		r0, r5, #0x0
	pop		{ r4, r5, pc }
	thumb_func_end sub_080c20fc

	thumb_func_start sub_080c2184
sub_080c2184:
	bx		lr

.incbin "base.gba", 0xC2186, 0x2
	thumb_func_end sub_080c2184

	thumb_func_start sub_080c2188
sub_080c2188:
	bx		lr

.incbin "base.gba", 0xC218A, 0x46
	thumb_func_end sub_080c2188

	thumb_func_start sub_080c21d0
sub_080c21d0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	ldr		r4, _080c21f8
	mov		r1, #0x0
	str		r1, [r4, #0x0]
	bl		sub_080c2680
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_080c21f2
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080c21f2
	str		r0, [r5, #0x0]
_080c21f2:
	add		r0, r1, #0x0
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC21F6, 0x2

_080c21f8:	.4byte 0x0200CDB8
	thumb_func_end sub_080c21d0

	thumb_func_start sub_080c21fc
sub_080c21fc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r3, r2, #0x0
	ldr		r0, [r5, #0x54]
	mov		r2, #0xe
	ldrsh	r1, [r5, r2]
	add		r2, r4, #0x0
	bl		sub_080c27e8
	add		r1, r0, #0x0
	cmp		r1, #0x0
	blt		_080c221e
	ldr		r0, [r5, #0x50]
	add		r0, r0, r1
	str		r0, [r5, #0x50]
	b		_080c2226
_080c221e:
	ldr		r0, _080c222c
	ldrh	r2, [r5, #0xc]
	and		r0, r2
	strh	r0, [r5, #0xc]
_080c2226:
	add		r0, r1, #0x0
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC222A, 0x2

_080c222c:	.4byte 0xffffefff
	thumb_func_end sub_080c21fc

	thumb_func_start sub_080c2230
sub_080c2230:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	ldrh	r1, [r4, #0xc]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c2252
	ldr		r0, [r4, #0x54]
	mov		r2, #0xe
	ldrsh	r1, [r4, r2]
	mov		r2, #0x0
	mov		r3, #0x2
	bl		sub_080c27b8
_080c2252:
	ldr		r0, _080c226c
	ldrh	r1, [r4, #0xc]
	and		r0, r1
	strh	r0, [r4, #0xc]
	ldr		r0, [r4, #0x54]
	mov		r2, #0xe
	ldrsh	r1, [r4, r2]
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_080c2724
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0xC226A, 0x2

_080c226c:	.4byte 0xffffefff
	thumb_func_end sub_080c2230

	thumb_func_start sub_080c2270
sub_080c2270:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r3, r2, #0x0
	ldr		r0, [r5, #0x54]
	mov		r2, #0xe
	ldrsh	r1, [r5, r2]
	add		r2, r4, #0x0
	bl		sub_080c27b8
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_080c229c
	ldr		r0, _080c2298
	ldrh	r2, [r5, #0xc]
	and		r0, r2
	strh	r0, [r5, #0xc]
	b		_080c22aa

_080c2298:	.4byte 0xffffefff

_080c229c:
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r0, r2, #0x0
	ldrh	r2, [r5, #0xc]
	orr		r0, r2
	strh	r0, [r5, #0xc]
	str		r1, [r5, #0x50]
_080c22aa:
	add		r0, r1, #0x0
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC22AE, 0x2
	push	{ lr }
	ldr		r2, [r0, #0x54]
	mov		r3, #0xe
	ldrsh	r1, [r0, r3]
	add		r0, r2, #0x0
	bl		sub_080c2754
	pop		{ pc }
	thumb_func_end sub_080c2270

	thumb_func_start sub_080c22c0
sub_080c22c0:
	add		r3, r0, #0x0
	mov		r1, #0x0
	ldr		r2, _080c22c8
	b		_080c22d4

_080c22c8:	.4byte 0x0200CC08

_080c22cc:
	add		r2, #0x8
	add		r1, #0x1
	cmp		r1, #0x13
	bgt		_080c22da
_080c22d4:
	ldr		r0, [r2, #0x0]
	cmp		r0, r3
	bne		_080c22cc
_080c22da:
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0xC22DE, 0x2
	thumb_func_end sub_080c22c0

	thumb_func_start sub_080c22e0
sub_080c22e0:
	add		r2, r0, #0x0
	ldr		r0, _080c22f4
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x4]
	mov		r3, #0xe
	ldrsh	r0, [r0, r3]
	cmp		r2, r0
	bne		_080c22fc
	ldr		r0, _080c22f8
	b		_080c2322

_080c22f4:	.4byte 0x0200EE40
_080c22f8:	.4byte 0x0200CBFC

_080c22fc:
	ldr		r0, [r1, #0x8]
	mov		r3, #0xe
	ldrsh	r0, [r0, r3]
	cmp		r2, r0
	bne		_080c2310
	ldr		r0, _080c230c
	b		_080c2322

.incbin "base.gba", 0xC230A, 0x2

_080c230c:	.4byte 0x0200CC00

_080c2310:
	ldr		r0, [r1, #0xc]
	mov		r1, #0xe
	ldrsh	r0, [r0, r1]
	cmp		r2, r0
	beq		_080c2320
	add		r0, r2, #0x0
	sub		r0, #0x20
	b		_080c2324
_080c2320:
	ldr		r0, _080c2328
_080c2322:
	ldr		r0, [r0, #0x0]
_080c2324:
	bx		lr

.incbin "base.gba", 0xC2326, 0x2

_080c2328:	.4byte 0x0200CC04
	thumb_func_end sub_080c22e0

	thumb_func_start sub_080c232c
sub_080c232c:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	ldr		r4, _080c2388
	str		r4, [sp, #0x0]
	mov		r3, #0x3
	str		r3, [sp, #0x8]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	mov		r5, #0x1
	add		r0, r5, #0x0
	mov		r1, sp
	svc		0xab
	add		r2, r0, #0x0
	ldr		r5, _080c238c
	str		r2, [r5, #0x0]
	str		r4, [sp, #0x0]
	str		r3, [sp, #0x8]
	mov		r0, #0x4
	str		r0, [sp, #0x4]
	ldr		r3, _080c2390
	mov		r4, #0x1
	add		r0, r4, #0x0
	mov		r1, sp
	svc		0xab
	add		r2, r0, #0x0
	ldr		r0, _080c2394
	str		r2, [r0, #0x0]
	str		r2, [r3, #0x0]
	ldr		r2, _080c2398
	add		r1, r2, #0x0
	sub		r4, #0x2
	add		r0, r2, #0x0
	add		r0, #0x98
_080c236e:
	str		r4, [r0, #0x0]
	sub		r0, #0x8
	cmp		r0, r1
	bge		_080c236e
	mov		r0, #0x0
	ldr		r1, [r5, #0x0]
	str		r1, [r2, #0x0]
	str		r0, [r2, #0x4]
	ldr		r1, [r3, #0x0]
	str		r1, [r2, #0x8]
	str		r0, [r2, #0xc]
	add		sp, #0xc
	pop		{ r4, r5, pc }

_080c2388:	.4byte 0x080e02dc
_080c238c:	.4byte 0x0200CBFC
_080c2390:	.4byte 0x0200CC00
_080c2394:	.4byte 0x0200CC04
_080c2398:	.4byte 0x0200CC08
	thumb_func_end sub_080c232c

	thumb_func_start sub_080c239c
sub_080c239c:
	push	{ r4, lr }
	mov		r3, #0x13
	mov		r4, #0x0
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	svc		0xab
	add		r2, r0, #0x0
	add		r0, r2, #0x0
	pop		{ r4, pc }

.incbin "base.gba", 0xC23AE, 0x2
	thumb_func_end sub_080c239c

	thumb_func_start sub_080c23b0
sub_080c23b0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	bl		sub_080c2780
	add		r4, r0, #0x0
	bl		sub_080c239c
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5, pc }
	thumb_func_end sub_080c23b0

	thumb_func_start sub_080c23c4
sub_080c23c4:
	push	{ lr }
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_080c23d4
	add		r0, r1, #0x0
	b		_080c23da
_080c23d4:
	add		r0, r1, #0x0
	bl		sub_080c23b0
_080c23da:
	pop		{ pc }
	thumb_func_end sub_080c23c4

	thumb_func_start sub_080c23dc
sub_080c23dc:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080c22e0
	str		r0, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r3, #0x6
	add		r0, r3, #0x0
	mov		r1, sp
	svc		0xab
	add		r2, r0, #0x0
	add		r0, r2, #0x0
	add		sp, #0xc
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC23FE, 0x2
	thumb_func_end sub_080c23dc

	thumb_func_start sub_080c2400
sub_080c2400:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r2, #0x0
	bl		sub_080c22e0
	bl		sub_080c22c0
	add		r6, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	bl		sub_080c23dc
	cmp		r0, #0x0
	bge		_080c242a
	mov		r0, #0x1
	neg		r0, r0
	bl		sub_080c23b0
	b		_080c2440
_080c242a:
	sub		r2, r7, r0
	cmp		r6, #0x14
	beq		_080c243e
	ldr		r0, _080c2444
	lsl		r1, r6, #0x3
	add		r0, #0x4
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_080c243e:
	add		r0, r2, #0x0
_080c2440:
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC2442, 0x2

_080c2444:	.4byte 0x0200CC08
	thumb_func_end sub_080c2400

	thumb_func_start sub_080c2448
sub_080c2448:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x8
	mov		r8, r0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	bl		sub_080c22e0
	add		r7, r0, #0x0
	bl		sub_080c22c0
	add		r6, r0, #0x0
	cmp		r4, #0x1
	bne		_080c247e
	cmp		r6, #0x14
	bne		_080c2470
	mov		r0, #0x1
	neg		r0, r0
	b		_080c24c0
_080c2470:
	ldr		r0, _080c24c8
	lsl		r1, r6, #0x3
	add		r0, #0x4
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	add		r5, r5, r0
	mov		r4, #0x0
_080c247e:
	cmp		r4, #0x2
	bne		_080c2490
	str		r7, [sp, #0x0]
	mov		r3, #0xc
	add		r0, r3, #0x0
	mov		r1, sp
	svc		0xab
	add		r2, r0, #0x0
	add		r5, r5, r2
_080c2490:
	mov		r0, r8
	bl		sub_080c22e0
	str		r0, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r3, #0xa
	add		r0, r3, #0x0
	mov		r1, sp
	svc		0xab
	add		r2, r0, #0x0
	cmp		r6, #0x14
	beq		_080c24b6
	cmp		r2, #0x0
	bne		_080c24b6
	ldr		r0, _080c24c8
	lsl		r1, r6, #0x3
	add		r0, #0x4
	add		r1, r1, r0
	str		r5, [r1, #0x0]
_080c24b6:
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, #0x0
	bne		_080c24c0
	add		r0, r5, #0x0
_080c24c0:
	add		sp, #0x8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }

_080c24c8:	.4byte 0x0200CC08
	thumb_func_end sub_080c2448

	thumb_func_start sub_080c24cc
sub_080c24cc:
	push	{ lr }
	bl		sub_080c2448
	bl		sub_080c23c4
	pop		{ pc }
	thumb_func_end sub_080c24cc

	thumb_func_start sub_080c24d8
sub_080c24d8:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	bl		sub_080c22e0
	str		r0, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r3, #0x5
	add		r0, r3, #0x0
	mov		r1, sp
	svc		0xab
	add		r2, r0, #0x0
	add		r0, r2, #0x0
	add		sp, #0xc
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC24FA, 0x2
	thumb_func_end sub_080c24d8

	thumb_func_start sub_080c24fc
sub_080c24fc:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	bl		sub_080c22e0
	bl		sub_080c22c0
	add		r7, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080c24d8
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	beq		_080c2524
	cmp		r0, r6
	bne		_080c252c
_080c2524:
	add		r0, r1, #0x0
	bl		sub_080c23b0
	b		_080c2542
_080c252c:
	sub		r2, r6, r0
	cmp		r7, #0x14
	beq		_080c2540
	ldr		r0, _080c2544
	lsl		r1, r7, #0x3
	add		r0, #0x4
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
_080c2540:
	add		r0, r2, #0x0
_080c2542:
	pop		{ r4, r5, r6, r7, pc }

_080c2544:	.4byte 0x0200CC08
	thumb_func_end sub_080c24fc

	thumb_func_start sub_080c2548
sub_080c2548:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r4, r1, #0x0
	mov		r5, #0x0
	mov		r6, #0x1
	neg		r6, r6
	add		r0, r6, #0x0
	bl		sub_080c22c0
	mov		r8, r0
	cmp		r0, #0x14
	bne		_080c256a
	add		r0, r6, #0x0
	b		_080c25de
_080c256a:
	mov		r0, #0x2
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2574
	mov		r5, #0x2
_080c2574:
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2582
	mov		r0, #0x4
	orr		r5, r0
_080c2582:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2590
	mov		r0, #0x4
	orr		r5, r0
_080c2590:
	mov		r1, #0x8
	and		r4, r1
	cmp		r4, #0x0
	beq		_080c25a0
	mov		r0, #0x5
	neg		r0, r0
	and		r5, r0
	orr		r5, r1
_080c25a0:
	str		r7, [sp, #0x0]
	add		r0, r7, #0x0
	bl		sub_080bdc3c
	str		r0, [sp, #0x8]
	str		r5, [sp, #0x4]
	mov		r2, #0x1
	add		r0, r2, #0x0
	mov		r1, sp
	svc		0xab
	add		r3, r0, #0x0
	cmp		r3, #0x0
	blt		_080c25d8
	ldr		r0, _080c25d4
	mov		r1, r8
	lsl		r2, r1, #0x3
	add		r1, r2, r0
	str		r3, [r1, #0x0]
	add		r0, #0x4
	add		r2, r2, r0
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x20
	b		_080c25de

.incbin "base.gba", 0xC25D2, 0x2

_080c25d4:	.4byte 0x0200CC08

_080c25d8:
	add		r0, r3, #0x0
	bl		sub_080c23b0
_080c25de:
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0xC25E6, 0x16
	thumb_func_end sub_080c2548

	thumb_func_start sub_080c25fc
sub_080c25fc:
	push	{ lr }
	sub		sp, #0x4
	bl		sub_080c22e0
	str		r0, [sp, #0x0]
	bl		sub_080c22c0
	add		r1, r0, #0x0
	cmp		r1, #0x14
	beq		_080c261c
	ldr		r0, _080c262c
	lsl		r1, r1, #0x3
	add		r1, r1, r0
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
_080c261c:
	mov		r3, #0x2
	add		r0, r3, #0x0
	mov		r1, sp
	svc		0xab
	add		r2, r0, #0x0
	add		r0, r2, #0x0
	add		sp, #0x4
	pop		{ pc }

_080c262c:	.4byte 0x0200CC08
	thumb_func_end sub_080c25fc

	thumb_func_start sub_080c2630
sub_080c2630:
	push	{ lr }
	bl		sub_080c25fc
	bl		sub_080c23c4
	pop		{ pc }

.incbin "base.gba", 0xC263C, 0x44
	thumb_func_end sub_080c2630

	thumb_func_start sub_080c2680
sub_080c2680:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r4, _080c26b0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080c2690
	ldr		r0, _080c26b4
	str		r0, [r4, #0x0]
_080c2690:
	ldr		r5, [r4, #0x0]
	add		r0, r5, r6
	cmp		r0, sp
	bls		_080c26a6
	ldr		r1, _080c26b8
	mov		r0, #0x1
	mov		r2, #0x20
	bl		sub_080c24fc
	bl		sub_080bd9e0
_080c26a6:
	ldr		r0, [r4, #0x0]
	add		r0, r0, r6
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, pc }

_080c26b0:	.4byte 0x0200CBF8
_080c26b4:	.4byte 0x080e3284
_080c26b8:	.4byte 0x080e02e0 @ _sbrk: Heap and stack collision
	thumb_func_end sub_080c2680

	thumb_func_start sub_080c26bc
sub_080c26bc:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	str		r0, [r1, #0x4]
	mov		r0, #0x0
	bx		lr

.incbin "base.gba", 0xC26C6, 0xE
	thumb_func_end sub_080c26bc

	thumb_func_start sub_080c26d4
sub_080c26d4:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	cmp		r2, #0x0
	beq		_080c26f2
	mov		r4, #0x11
	mov		r5, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	svc		0xab
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	str		r4, [r2, #0x0]
	mov		r0, #0x0
	str		r0, [r2, #0x4]
_080c26f2:
	cmp		r3, #0x0
	beq		_080c26fc
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	str		r0, [r3, #0x4]
_080c26fc:
	mov		r0, #0x0
	pop		{ r4, r5, pc }
	thumb_func_end sub_080c26d4

	thumb_func_start sub_080c2700
sub_080c2700:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	mov		r4, #0x10
	mov		r5, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	svc		0xab
	add		r3, r0, #0x0
	cmp		r2, #0x0
	beq		_080c271e
	str		r3, [r2, #0x0]
	mov		r0, #0x0
	str		r0, [r2, #0x4]
	str		r0, [r2, #0x8]
	str		r0, [r2, #0xc]
_080c271e:
	add		r0, r3, #0x0
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC2722, 0x2
	thumb_func_end sub_080c2700

	thumb_func_start sub_080c2724
sub_080c2724:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	ldr		r4, _080c2750
	mov		r3, #0x0
	str		r3, [r4, #0x0]
	bl		sub_080c24fc
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_080c274a
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080c274a
	str		r0, [r5, #0x0]
_080c274a:
	add		r0, r1, #0x0
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC274E, 0x2

_080c2750:	.4byte 0x0200CDB8
	thumb_func_end sub_080c2724

	thumb_func_start sub_080c2754
sub_080c2754:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	ldr		r4, _080c277c
	mov		r1, #0x0
	str		r1, [r4, #0x0]
	bl		sub_080c2630
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_080c2776
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080c2776
	str		r0, [r5, #0x0]
_080c2776:
	add		r0, r1, #0x0
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC277A, 0x2

_080c277c:	.4byte 0x0200CDB8
	thumb_func_end sub_080c2754

	thumb_func_start sub_080c2780
sub_080c2780:
	ldr		r0, _080c2788
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0xC2786, 0x2

_080c2788:	.4byte 0x0200EE40
	thumb_func_end sub_080c2780

	thumb_func_start sub_080c278c
sub_080c278c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	ldr		r4, _080c27b4
	mov		r2, #0x0
	str		r2, [r4, #0x0]
	bl		sub_080c26bc
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_080c27b0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080c27b0
	str		r0, [r5, #0x0]
_080c27b0:
	add		r0, r1, #0x0
	pop		{ r4, r5, pc }

_080c27b4:	.4byte 0x0200CDB8
	thumb_func_end sub_080c278c

	thumb_func_start sub_080c27b8
sub_080c27b8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	ldr		r4, _080c27e4
	mov		r3, #0x0
	str		r3, [r4, #0x0]
	bl		sub_080c24cc
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_080c27de
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080c27de
	str		r0, [r5, #0x0]
_080c27de:
	add		r0, r1, #0x0
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC27E2, 0x2

_080c27e4:	.4byte 0x0200CDB8
	thumb_func_end sub_080c27b8

	thumb_func_start sub_080c27e8
sub_080c27e8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	ldr		r4, _080c2814
	mov		r3, #0x0
	str		r3, [r4, #0x0]
	bl		sub_080c2400
	add		r1, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_080c280e
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_080c280e
	str		r0, [r5, #0x0]
_080c280e:
	add		r0, r1, #0x0
	pop		{ r4, r5, pc }

.incbin "base.gba", 0xC2812, 0x2

_080c2814:	.4byte 0x0200CDB8

.incbin "base.gba", 0xC2818, 0x8
	thumb_func_end sub_080c27e8

	thumb_func_start sub_080c2820
sub_080c2820:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c2848
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2840
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2840:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2846, 0x2

_080c2848:	.4byte 0x080e0424
	thumb_func_end sub_080c2820

	thumb_func_start sub_080c284c
sub_080c284c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r0, #0x40
	ldr		r1, _080c2880
	str		r1, [r5, #0x4c]
	ldr		r1, _080c2884
	str		r1, [r5, #0xc]
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2878
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2878:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC287E, 0x2

_080c2880:	.4byte 0x080e044c
_080c2884:	.4byte 0x080e0464
	thumb_func_end sub_080c284c

	thumb_func_start sub_080c2888
sub_080c2888:
	push	{ lr }
	ldr		r2, _080c2898
	str		r2, [r0, #0xc]
	bl		sub_08008a90
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2896, 0x2

_080c2898:	.4byte 0x080e04cc
	thumb_func_end sub_080c2888

	thumb_func_start sub_080c289c
sub_080c289c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c28c4
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c28bc
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c28bc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC28C2, 0x2

_080c28c4:	.4byte 0x080e05dc
	thumb_func_end sub_080c289c

	thumb_func_start sub_080c28c8
sub_080c28c8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c28f4
	str		r0, [r5, #0x54]
	ldr		r0, _080c28f8
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_0800d3b4
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c28ec
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c28ec:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC28F2, 0x2

_080c28f4:	.4byte 0x080e06a4
_080c28f8:	.4byte 0x080e064c
	thumb_func_end sub_080c28c8

	thumb_func_start sub_080c28fc
sub_080c28fc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c2924
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c291c
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c291c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2922, 0x2

_080c2924:	.4byte 0x080e067c
	thumb_func_end sub_080c28fc

	thumb_func_start sub_080c2928
sub_080c2928:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r0, #0x40
	ldr		r1, _080c295c
	str		r1, [r5, #0x4c]
	ldr		r1, _080c2960
	str		r1, [r5, #0xc]
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2954
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2954:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC295A, 0x2

_080c295c:	.4byte 0x080e06ec
_080c2960:	.4byte 0x080e0704
	thumb_func_end sub_080c2928

	thumb_func_start sub_080c2964
sub_080c2964:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c298c
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2984
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2984:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC298A, 0x2

_080c298c:	.4byte 0x080e076c
	thumb_func_end sub_080c2964

	thumb_func_start sub_080c2990
sub_080c2990:
	push	{ lr }
	ldr		r2, _080c29a0
	str		r2, [r0, #0xc]
	bl		sub_0800f274
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC299E, 0x2

_080c29a0:	.4byte 0x080e07dc
	thumb_func_end sub_080c2990

	thumb_func_start sub_080c29a4
sub_080c29a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r9, r0
	ldr		r0, _080c2a94
	mov		r1, #0x0
	bl		sub_08008f44
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_080c29ca
	ldr		r0, _080c2a98
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080c29ca:
	add		r6, r4, #0x0
	mov		r0, #0x0
	mov		r8, r0
	ldr		r7, _080c2a9c
	mov		r1, #0x1a
	add		r1, r1, r7
	mov		r10, r1
_080c29d8:
	mov		r2, r8
	lsl		r0, r2, #0x2
	ldr		r1, _080c2aa0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	bl		sub_0800d74c
	add		r5, r0, #0x0
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_080c29fc
	ldr		r0, _080c2aa4
	mov		r1, #0x53
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_08000268
_080c29fc:
	add		r4, r5, #0x1
	mov		r2, #0x0
	str		r2, [r7, #0x4]
	add		r0, r7, #0x0
	mov		r1, #0x1e
	mov		r2, #0x14
	bl		sub_0808f054
	ldrb	r2, [r5, #0x1]
	add		r4, #0x1
	add		r2, r4, r2
	add		r0, r7, #0x0
	add		r0, #0x18
	add		r1, r4, #0x0
	bl		sub_0808ec54
	ldrb	r2, [r7, #0x18]
	lsl		r2, r2, #0x1
	add		r2, r10
	add		r0, r7, #0x0
	mov		r1, r10
	bl		sub_0808f1a8
	mov		r1, #0xa0
	sub		r0, r1, r0
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r0, #0x10
	ldrb	r2, [r5, #0x1]
	strh	r0, [r6, #0x28]
	mov		r0, #0xe
	strh	r0, [r6, #0x2a]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	mov		r3, #0x0
	bl		sub_0800f18c
	mov		r4, #0x0
_080c2a4a:
	mov		r0, r9
	bl		sub_080b7690
	mov		r0, #0x0
	mov		r1, #0x40
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_080c2a60
	mov		r4, #0x1
	neg		r4, r4
_080c2a60:
	mov		r0, #0x0
	mov		r1, #0x80
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_080c2a6e
	mov		r4, #0x1
_080c2a6e:
	mov		r0, #0x0
	mov		r1, #0xc0
	bl		sub_0800185c
	cmp		r0, #0x0
	beq		_080c2a4a
	add		r8, r4
	mov		r1, r8
	mov		r2, #0xf
	and		r1, r2
	mov		r8, r1
	ldr		r1, [r6, #0xc]
	mov		r2, #0x18
	ldrsh	r0, [r1, r2]
	add		r0, r6, r0
	ldr		r1, [r1, #0x1c]
	bl		sub_080bbc74
	b		_080c29d8

_080c2a94:	.4byte 0x0200AA18
_080c2a98:	.4byte 0x080d05fc
_080c2a9c:	.4byte 0x03007548
_080c2aa0:	.4byte 0x080d06dc
_080c2aa4:	.4byte 0x080d0548 @ a_toda/msgtext.cpp
	thumb_func_end sub_080c29a4

	thumb_func_start sub_080c2aa8
sub_080c2aa8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c2ad0
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2ac8
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2ac8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2ACE, 0x2

_080c2ad0:	.4byte 0x080e0874
	thumb_func_end sub_080c2aa8

	thumb_func_start sub_080c2ad4
sub_080c2ad4:
	push	{ lr }
	ldr		r2, _080c2ae8
	str		r2, [r0, #0x50]
	ldr		r2, _080c2aec
	str		r2, [r0, #0xc]
	bl		sub_0800c160
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2AE6, 0x2

_080c2ae8:	.4byte 0x080e08bc
_080c2aec:	.4byte 0x080e089c
	thumb_func_end sub_080c2ad4

	thumb_func_start sub_080c2af0
sub_080c2af0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c2b1c
	str		r0, [r5, #0x4c]
	ldr		r0, _080c2b20
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080109e0
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2b14
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2b14:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2B1A, 0x2

_080c2b1c:	.4byte 0x080e09a4
_080c2b20:	.4byte 0x080e08cc
	thumb_func_end sub_080c2af0

	thumb_func_start sub_080c2b24
sub_080c2b24:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c2b50
	str		r0, [r5, #0x4c]
	ldr		r0, _080c2b54
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080109e0
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2b48
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2b48:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2B4E, 0x2

_080c2b50:	.4byte 0x080e09a4
_080c2b54:	.4byte 0x080e08fc
	thumb_func_end sub_080c2b24

	thumb_func_start sub_080c2b58
sub_080c2b58:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c2b84
	str		r0, [r5, #0x4c]
	ldr		r0, _080c2b88
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080109e0
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2b7c
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2b7c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2B82, 0x2

_080c2b84:	.4byte 0x080e09a4
_080c2b88:	.4byte 0x080e0974
	thumb_func_end sub_080c2b58

	thumb_func_start sub_080c2b8c
sub_080c2b8c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c2bb8
	str		r0, [r5, #0x4c]
	ldr		r0, _080c2bbc
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080109e0
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c2bb0
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c2bb0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2BB6, 0x2

_080c2bb8:	.4byte 0x080e09a4
_080c2bbc:	.4byte 0x080e0974
	thumb_func_end sub_080c2b8c

	thumb_func_start sub_080c2bc0
sub_080c2bc0:
	push	{ lr }
	ldr		r2, _080c2bd4
	str		r2, [r0, #0x50]
	ldr		r2, _080c2bd8
	str		r2, [r0, #0xc]
	bl		sub_0800bf00
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC2BD2, 0x2

_080c2bd4:	.4byte 0x080e09ec
_080c2bd8:	.4byte 0x080e09fc

.incbin "base.gba", 0xC2BDC, 0x97C
	thumb_func_end sub_080c2bc0

	thumb_func_start sub_080c3558
sub_080c3558:
	push	{ r4, lr }
	ldr		r1, [r0, #0x14]
	ldr		r4, [r0, #0xc]
	sub		r1, r1, r4
	ldr		r2, [r0, #0x0]
	mul		r2, r1
	ldr		r1, [r0, #0x4]
	add		r0, r2, #0x0
	bl		sub_080bbcac
	add		r0, r0, r4
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080c3558

	thumb_func_start sub_080c3574
sub_080c3574:
	push	{ r4, lr }
	ldr		r1, [r0, #0x10]
	ldr		r4, [r0, #0x8]
	sub		r1, r1, r4
	ldr		r2, [r0, #0x0]
	mul		r2, r1
	ldr		r1, [r0, #0x4]
	add		r0, r2, #0x0
	bl		sub_080bbcac
	add		r0, r0, r4
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080c3574

	thumb_func_start sub_080c3590
sub_080c3590:
	str		r1, [r0, #0x0]
	str		r2, [r0, #0x4]
	bx		lr

.incbin "base.gba", 0xC3596, 0x2
	thumb_func_end sub_080c3590

	thumb_func_start sub_080c3598
sub_080c3598:
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	str		r1, [r0, #0x4]
	bx		lr
	thumb_func_end sub_080c3598

	thumb_func_start sub_080c35a0
sub_080c35a0:
	ldr		r0, [r0, #0x40]
	bx		lr
	thumb_func_end sub_080c35a0

	thumb_func_start sub_080c35a4
sub_080c35a4:
	push	{ lr }
	mov		r1, #0x0
	ldr		r0, [r0, #0x4]
	sub		r0, #0x3
	cmp		r0, #0x1
	bhi		_080c35b2
	mov		r1, #0x1
_080c35b2:
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080c35a4

	thumb_func_start sub_080c35b8
sub_080c35b8:
	str		r1, [r0, #0x14]
	str		r1, [r0, #0x18]
	bx		lr

.incbin "base.gba", 0xC35BE, 0x2
	thumb_func_end sub_080c35b8

	thumb_func_start sub_080c35c0
sub_080c35c0:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _080c35dc
	str		r0, [r2, #0x14]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c35d6
	add		r0, r2, #0x0
	bl		sub_0808afac
_080c35d6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC35DA, 0x2

_080c35dc:	.4byte 0x080e23e4

.incbin "base.gba", 0xC35E0, 0x10
	thumb_func_end sub_080c35c0

	thumb_func_start sub_080c35f0
sub_080c35f0:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _080c360c
	str		r0, [r2, #0x14]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080c3606
	add		r0, r2, #0x0
	bl		sub_0808afac
_080c3606:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC360A, 0x2

_080c360c:	.4byte 0x080e23e4
	thumb_func_end sub_080c35f0

	thumb_func_start sub_080c3610
sub_080c3610:
	str		r1, [r0, #0x24]
	bx		lr

.incbin "base.gba", 0xC3614, 0x8
	thumb_func_end sub_080c3610

	thumb_func_start sub_080c361c
sub_080c361c:
	push	{ lr }
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	ldr		r0, [r0, #0x0]
	bl		sub_080964e4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC362C, 0xC
	thumb_func_end sub_080c361c

	thumb_func_start sub_080c3638
sub_080c3638:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c3660
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c3658
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c3658:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC365E, 0x2

_080c3660:	.4byte 0x080e24d4
	thumb_func_end sub_080c3638

	thumb_func_start sub_080c3664
sub_080c3664:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c3690
	str		r0, [r5, #0x40]
	ldr		r0, _080c3694
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c3688
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c3688:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC368E, 0x2

_080c3690:	.4byte 0x080e2524
_080c3694:	.4byte 0x080e253c
	thumb_func_end sub_080c3664

	thumb_func_start sub_080c3698
sub_080c3698:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c36c0
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c36b8
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c36b8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC36BE, 0x2

_080c36c0:	.4byte 0x080e2564

.incbin "base.gba", 0xC36C4, 0x8
	thumb_func_end sub_080c3698

	thumb_func_start sub_080c36cc
sub_080c36cc:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r0, #0x40
	ldr		r1, _080c3700
	str		r1, [r5, #0x4c]
	ldr		r1, _080c3704
	str		r1, [r5, #0xc]
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c36f8
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c36f8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC36FE, 0x2

_080c3700:	.4byte 0x080e034c
_080c3704:	.4byte 0x080e2854
	thumb_func_end sub_080c36cc

	thumb_func_start sub_080c3708
sub_080c3708:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _080c3748
	str		r0, [r6, #0x4c]
	ldr		r0, _080c374c
	str		r0, [r6, #0xc]
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080c3742
	add		r0, r6, #0x0
	bl		sub_080b74c8
_080c3742:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080c3748:	.4byte 0x080e28a4
_080c374c:	.4byte 0x080e28bc
	thumb_func_end sub_080c3708

	thumb_func_start sub_080c3750
sub_080c3750:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c377c
	str		r0, [r5, #0x4c]
	ldr		r0, _080c3780
	str		r0, [r5, #0xc]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080c386c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c3774
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c3774:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC377A, 0x2

_080c377c:	.4byte 0x080e2aec
_080c3780:	.4byte 0x080e2924
	thumb_func_end sub_080c3750

	thumb_func_start sub_080c3784
sub_080c3784:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _080c37b8
	str		r0, [r5, #0x4c]
	ldr		r0, _080c37bc
	str		r0, [r5, #0xc]
	ldr		r1, _080c37c0
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080c386c
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_080c37b2
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c37b2:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080c37b8:	.4byte 0x080e29fc
_080c37bc:	.4byte 0x080e2a14
_080c37c0:	.4byte 0x00003FC8
	thumb_func_end sub_080c3784

	thumb_func_start sub_080c37c4
sub_080c37c4:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	bl		sub_080b74f4
	add		r0, r5, #0x0
	add		r0, #0x40
	bl		sub_080006ec
	add		r0, r5, #0x0
	add		r0, #0x54
	bl		sub_08089124
	ldr		r0, _080c3850
	str		r0, [r5, #0x4c]
	ldr		r0, _080c3854
	str		r0, [r5, #0xc]
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	bl		sub_08089124
	mov		r1, #0x98
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	bl		sub_08089124
	mov		r0, #0xd2
	lsl		r0, r0, #0x2
	add		r4, r5, r0
	mov		r6, #0x1d
	mov		r7, #0x1
	neg		r7, r7
_080c3804:
	add		r0, r4, #0x0
	bl		sub_08089124
	add		r0, r4, #0x0
	add		r0, #0xf4
	bl		sub_08089124
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r4, r4, r1
	sub		r6, #0x1
	cmp		r6, r7
	bne		_080c3804
	ldr		r1, _080c3858
	add		r0, r5, r1
	bl		sub_08089124
	ldr		r1, _080c385c
	add		r0, r5, r1
	bl		sub_08089124
	ldr		r1, _080c3860
	add		r0, r5, r1
	bl		sub_08089124
	ldr		r1, _080c3864
	add		r0, r5, r1
	bl		sub_08089124
	ldr		r1, _080c3868
	add		r0, r5, r1
	bl		sub_0808983c
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xC384E, 0x2

_080c3850:	.4byte 0x080e2aec
_080c3854:	.4byte 0x080e2b04
_080c3858:	.4byte 0x00003B10
_080c385c:	.4byte 0x00003BF8
_080c3860:	.4byte 0x00003CE0
_080c3864:	.4byte 0x00003DC8
_080c3868:	.4byte 0x00003EB0
	thumb_func_end sub_080c37c4

	thumb_func_start sub_080c386c
sub_080c386c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _080c3920
	str		r0, [r5, #0x4c]
	ldr		r0, _080c3924
	str		r0, [r5, #0xc]
	ldr		r1, _080c3928
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_080897d0
	ldr		r1, _080c392c
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r1, _080c3930
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r1, _080c3934
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r0, _080c3938
	add		r4, r5, r0
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xd2
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	cmp		r0, #0x0
	beq		_080c38d8
	cmp		r0, r4
	beq		_080c38d8
	add		r6, r0, #0x0
_080c38be:
	ldr		r0, _080c393c
	add		r4, r4, r0
	add		r0, r4, #0x0
	add		r0, #0xf4
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0808e28c
	cmp		r6, r4
	bne		_080c38be
_080c38d8:
	mov		r1, #0x98
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r5, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	bl		sub_0808e28c
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_080c391a
	add		r0, r5, #0x0
	bl		sub_080b74c8
_080c391a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080c3920:	.4byte 0x080e2aec
_080c3924:	.4byte 0x080e2b04
_080c3928:	.4byte 0x00003EB0
_080c392c:	.4byte 0x00003DC8
_080c3930:	.4byte 0x00003CE0
_080c3934:	.4byte 0x00003BF8
_080c3938:	.4byte 0x00003B10
_080c393c:	.4byte 0xFFFFFE24
	thumb_func_end sub_080c386c

	thumb_func_start sub_080c3940
sub_080c3940:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _080c39a4
	str		r0, [r6, #0x4c]
	ldr		r0, _080c39a8
	str		r0, [r6, #0xc]
	mov		r1, #0xdf
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080c399e
	add		r0, r6, #0x0
	bl		sub_080b74c8
_080c399e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080c39a4:	.4byte 0x080e2e44
_080c39a8:	.4byte 0x080e2e5c
	thumb_func_end sub_080c3940

	thumb_func_start sub_080c39ac
sub_080c39ac:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r7, #0x0
	add		r5, #0x40
	ldr		r4, _080c3a20
	str		r4, [r7, #0x4c]
	ldr		r0, _080c3a24
	str		r0, [r7, #0xc]
	ldr		r1, _080c3a28
	add		r0, r7, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	str		r4, [r7, #0x4c]
	ldr		r0, _080c3a2c
	str		r0, [r7, #0xc]
	mov		r1, #0xdf
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r7, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	bl		sub_0808e28c
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r6
	cmp		r0, #0x0
	beq		_080c3a1a
	add		r0, r7, #0x0
	bl		sub_080b74c8
_080c3a1a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080c3a20:	.4byte 0x080e2e44
_080c3a24:	.4byte 0x080e2d44
_080c3a28:	.4byte 0x0000046C
_080c3a2c:	.4byte 0x080e2e5c
	thumb_func_end sub_080c39ac

	thumb_func_start sub_080c3a30
sub_080c3a30:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _080c3a94
	str		r0, [r6, #0x4c]
	ldr		r0, _080c3a98
	str		r0, [r6, #0xc]
	mov		r1, #0xdf
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xd6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080c3a8e
	add		r0, r6, #0x0
	bl		sub_080b74c8
_080c3a8e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080c3a94:	.4byte 0x080e2e44
_080c3a98:	.4byte 0x080e2e5c
	thumb_func_end sub_080c3a30

	thumb_func_start sub_080c3a9c
sub_080c3a9c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _080c3b14
	str		r0, [r6, #0x4c]
	ldr		r0, _080c3b18
	str		r0, [r6, #0xc]
	mov		r1, #0x84
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	mov		r1, #0x94
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	ldr		r0, _080c3b1c
	str		r0, [r6, #0x4c]
	ldr		r0, _080c3b20
	str		r0, [r6, #0xc]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080c3b0e
	add		r0, r6, #0x0
	bl		sub_080b74c8
_080c3b0e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080c3b14:	.4byte 0x080e300c
_080c3b18:	.4byte 0x080e3024
_080c3b1c:	.4byte 0x080e30fc
_080c3b20:	.4byte 0x080e30bc
	thumb_func_end sub_080c3a9c

	thumb_func_start sub_080c3b24
sub_080c3b24:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _080c3b70
	str		r0, [r6, #0x4c]
	ldr		r0, _080c3b74
	str		r0, [r6, #0xc]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080c3b6a
	add		r0, r6, #0x0
	bl		sub_080b74c8
_080c3b6a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080c3b70:	.4byte 0x080e30fc
_080c3b74:	.4byte 0x080e30bc
	thumb_func_end sub_080c3b24

	thumb_func_start sub_080c3b78
sub_080c3b78:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r6, #0x0
	add		r4, #0x40
	ldr		r0, _080c3bc4
	str		r0, [r6, #0x4c]
	ldr		r0, _080c3bc8
	str		r0, [r6, #0xc]
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x2
	bl		sub_0808e28c
	add		r0, r6, #0x0
	add		r0, #0x54
	mov		r1, #0x0
	bl		sub_0808e28c
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080006b4
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080b752c
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080c3bbe
	add		r0, r6, #0x0
	bl		sub_080b74c8
_080c3bbe:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080c3bc4:	.4byte 0x080e30fc
_080c3bc8:	.4byte 0x080e30bc
	thumb_func_end sub_080c3b78

	thumb_func_start sub_080c3bcc
sub_080c3bcc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _080c3be0
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_080c3be0:	.4byte 0x080e034c
	thumb_func_end sub_080c3bcc

	thumb_func_start sub_080c3be4
sub_080c3be4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080c3bcc
	ldr		r0, _080c3bf8
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_080c3bf8:	.4byte 0x080e319c
	thumb_func_end sub_080c3be4

	thumb_func_start sub_080c3bfc
sub_080c3bfc:
	ldr		r1, _080c3c04
	str		r1, [r0, #0x28]
	bx		lr

.incbin "base.gba", 0xC3C02, 0x2

_080c3c04:	.4byte 0x080e31ec
	thumb_func_end sub_080c3bfc

	thumb_func_start sub_080c3c08
sub_080c3c08:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	bl		sub_080c3bfc
	ldr		r0, _080c3c38
	str		r0, [r5, #0x28]
	mov		r0, #0xda
	lsl		r0, r0, #0x1
	add		r4, r5, r0
	mov		r6, #0xf
_080c3c1c:
	add		r0, r4, #0x0
	bl		sub_080c3c60
	add		r4, #0x24
	sub		r6, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r6, r0
	bne		_080c3c1c
	add		r0, r5, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xC3C36, 0x2

_080c3c38:	.4byte 0x080e31b4
	thumb_func_end sub_080c3c08

	thumb_func_start sub_080c3c3c
sub_080c3c3c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080006ec
	ldr		r0, _080c3c50
	str		r0, [r4, #0xc]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_080c3c50:	.4byte 0x080e31c4
	thumb_func_end sub_080c3c3c

	thumb_func_start sub_080c3c54
sub_080c3c54:
	push	{ lr }
	bl		sub_080006b4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC3C5E, 0x2
	thumb_func_end sub_080c3c54

	thumb_func_start sub_080c3c60
sub_080c3c60:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_080c3c88
	mov		r5, #0x0
	str		r5, [r4, #0x4]
	str		r5, [r4, #0x8]
	str		r5, [r4, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x10
	bl		sub_080c3c88
	str		r5, [r4, #0x14]
	str		r5, [r4, #0x18]
	str		r5, [r4, #0x10]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xC3C86, 0x2
	thumb_func_end sub_080c3c60

	thumb_func_start sub_080c3c88
sub_080c3c88:
	ldr		r1, _080c3c90
	str		r1, [r0, #0xc]
	bx		lr

.incbin "base.gba", 0xC3C8E, 0x2

_080c3c90:	.4byte 0x080e0864
	thumb_func_end sub_080c3c88

	thumb_func_start sub_080c3c94
sub_080c3c94:
	push	{ lr }
	bl		sub_080006b4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC3C9E, 0x2
	thumb_func_end sub_080c3c94

	thumb_func_start sub_080c3ca0
sub_080c3ca0:
	push	{ lr }
	bl		sub_080006b4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xC3CAA, 0x1A
	thumb_func_end sub_080c3ca0

	thumb_func_start sub_080c3cc4
sub_080c3cc4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080c3cdc
	add		r0, r4, #0x0
	add		r0, #0x10
	bl		sub_080c3cec
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080c3cc4

	thumb_func_start sub_080c3cdc
sub_080c3cdc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080c3c88
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080c3cdc

	thumb_func_start sub_080c3cec
sub_080c3cec:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080c3c88
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0xC3CFC, 0x3325
	thumb_func_end sub_080c3cec


.incbin "base.gba", 0xC7021, 0x9F
_080C70C0:	.4byte 0x080c709c @ WARNING @(%s %d) #($%08x,$%08x)

.incbin "base.gba", 0xC70C4, 0x24
_080C70E8:	.4byte 0x080c70c4 @ WARNING @(%s '%s') #($%08x,$%08x)

.incbin "base.gba", 0xC70EC, 0x24
_080c7110:	.4byte 0x080c70ec @ DEADEND_@(%s_%d)_#($%08x,$%08x)

.incbin "base.gba", 0xc7114, 0x10
_080c7124:	.4byte 0x03005918
_080c7128:	.4byte 0x0800158d
_080c712c:	.4byte 0x0800158D

.incbin "base.gba", 0xC7130, 0x4
_080c7134:	.4byte 0x08001591

.incbin "base.gba", 0xC7138, 0xC
_080c7144:	.4byte 0x0800158D

.incbin "base.gba", 0xC7148, 0x3C
_080c7184:	.4byte 0x000000A0

.incbin "base.gba", 0xC7188, 0x4
_080c718c:	.4byte 0x08000000

.incbin "base.gba", 0xC7190, 0x10
_080c71a0:	.4byte 0x0200CE20
_080c71a4:	.4byte 0x02000AF0
_080c71a8:	.4byte 0x02000B04
_080c71ac:	.4byte 0x0200CE70
_080c71b0:	.4byte 0x03000000
_080c71b4:	.4byte 0x0200CE20

.incbin "base.gba", 0xC71B8, 0x8
_080c71c0:	.4byte 0x02000B2C

.incbin "base.gba", 0xC71C4, 0x20
_080c71e4:	.4byte 0x00000040
_080c71e8:	.4byte 0x00000080

.incbin "base.gba", 0xC71EC, 0x74
_080c7260:	.4byte 0x0200BF08

.incbin "base.gba", 0xc7264, 0x10
_080c7274:	.4byte 0x0200CDBC

.incbin "base.gba", 0xc7278, 0x3BC
_080c7634:	.4byte 0x080c728c @ Keyword
_080c7638:	.4byte 0x02000BAC
_080c763c:	.4byte 0x00000008
_080c7640:	.4byte 0x0E000200
_080c7644:	.4byte 0x08006859
_080c7648:	.4byte sub_0800683c
_080c764c:	.4byte 0x080c7294 @ Scriptflags
_080c7650:	.4byte 0x02000BB8
_080c7654:	.4byte 0x000000C0
_080c7658:	.4byte 0x0E00020C
_080c765c:	.4byte sub_0800681c

.incbin "base.gba", 0xC7660, 0x5A8
_080c7c08:	.4byte 0x02004754

.incbin "base.gba", 0xC7C0C, 0x28
_080c7c34:	.4byte 0x080c7c28 @ Hamtaro
_080c7c38:	.4byte 0x080c7c30
_080c7c3c:	.4byte 0x02000C9C
_080c7c40:	.4byte 0x02000CBC
_080c7c44:	.4byte 0x02000CDC
_080c7c48:	.4byte 0x02000D1C
_080c7c4c:	.4byte 0x02000D3C

.incbin "base.gba", 0xc7c50, 0x14
_080c7c64:	.4byte 0x02004970
_080c7c68:	.4byte 0x02000BAC

.incbin "base.gba", 0xc7c6c, 0x14
_080c7c80:	.4byte 0x02008880
_080c7c84:	.4byte 0x02004752

.incbin "base.gba", 0xc7c88, 0x10C
_080c7d94:	.4byte 0x02000F64
_080c7d98:	.4byte 0x02000F68
_080c7d9c:	.4byte 0x02000F6C
_080c7da0:	.4byte 0x02000F70
_080c7da4:	.4byte 0x02000F5C

.incbin "base.gba", 0xC7DA8, 0x34
_080c7ddc:	.4byte 0x02008734
_080c7de0:	.4byte 0x0200D0A0
_080c7de4:	.4byte 0x02000BAC

.incbin "base.gba", 0xc7de8, 0x34
_080c7e1c:	.4byte 0x02000BB8
_080c7e20:	.4byte 0x080c7f28
_080c7e24:	.4byte 0x080c7f28
_080c7e28:	.4byte 0x080c7f28
_080c7e2c:	.4byte 0x02000BB8
_080c7e30:	.4byte 0x080c7f28
_080c7e34:	.4byte 0x02000BB8
_080c7e38:	.4byte 0x080c7f28
_080c7e3c:	.4byte 0x02000BB8
_080c7e40:	.4byte 0x080c7f28
_080c7e44:	.4byte 0x080c7f28
_080c7e48:	.4byte 0x080c7f28
_080c7e4c:	.4byte 0x02000BAC
_080c7e50:	.4byte 0x02000BAC

.incbin "base.gba", 0xC7E54, 0x20
_080c7e74:	.4byte 0x02000C9C

.incbin "base.gba", 0xC7E78, 0x38
_080c7eb0:	.4byte 0x02000EBC

.incbin "base.gba", 0xC7EB4, 0x98
_080c7f4c:	.4byte 0x020089A0

.incbin "base.gba", 0xc7f50, 0x44
_080c7f94:	.4byte 0x0200CE30
_080c7f98:	.4byte 0x0200CE44

.incbin "base.gba", 0xc7f9c, 0x24
_080c7fc0:	.4byte 0x02008734

.incbin "base.gba", 0xc7fc4, 0x2B4
_080c8278:	.4byte 0x02009E1C
_080c827c:	.4byte 0x02009984

.incbin "base.gba", 0xC8280, 0x130
_080c83b0:	.4byte sub_0800d564

.incbin "base.gba", 0xC83B4, 0x1C
_080c83d0:	.4byte 0x080096d5

.incbin "base.gba", 0xC83D4, 0xE4
_080c84b8:	.4byte 0x02000B1A

.incbin "base.gba", 0xc84bc, 0xE4
_080c85a0:	.4byte 0x00780000
_080c85a4:	.4byte 0x00500000
_080c85a8:	.4byte 0x00010000
_080c85ac:	.4byte 0xffffffff
_080c85b0:	.4byte 0x0000FFFF
_080c85b4:	.4byte 0x01000100
_080c85b8:	.4byte 0x00000000
_080c85bc:	.4byte 0x00000000
_080c85c0:	.4byte 0x00000400
_080c85c4:	.4byte 0x03005918
_080c85c8:	.4byte 0x0200DA00

.incbin "base.gba", 0xC85CC, 0xB0
_080c867c:	.4byte 0x0200BEB4

.incbin "base.gba", 0xc8680, 0x7F98
_080d0618:	.4byte 0x0200AEB8

.incbin "base.gba", 0xd061c, 0xC0
_080d06dc:	.4byte 0x0200AA14
_080d06e0:	.4byte 0x0200AA10

.incbin "base.gba", 0xD06E4, 0x84
_080d0768:	.4byte 0x0200AF30

.incbin "base.gba", 0xD076C, 0x28
_080d0794:	.4byte 0x0200B5D4

.incbin "base.gba", 0xD0798, 0x20
_080d07b8:	.4byte 0x0200B68C

.incbin "base.gba", 0xd07bc, 0x14
_080d07d0:	.4byte 0x0200AEC4
_080d07d4:	.4byte sub_0800f5e8

.incbin "base.gba", 0xD07D8, 0x94
_080d086c:	.4byte 0x0200AEC4
_080d0870:	.4byte 0x0200AF30
_080d0874:	.4byte 0x0200AF30

.incbin "base.gba", 0xd0878, 0x58
_080d08d0:	.4byte 0x0200AF5A

.incbin "base.gba", 0xd08d4, 0x68A
_080d0f5e:	.4byte 0x08ca0546

.incbin "base.gba", 0xD0F62, 0xF2
_080d1054:	.4byte 0x0200B698
_080d1058:	.4byte 0x0200BDD4

.incbin "base.gba", 0xd105c, 0x80
_080d10dc:	.4byte 0x00000003
_080d10e0:	.4byte 0x00000015
_080d10e4:	.4byte 0x00000004
_080d10e8:	.4byte 0x00000014
_080d10ec:	.4byte 0x00000004

.incbin "base.gba", 0xD10F0, 0xBC
_080d11ac:	.4byte 0x0200D1E4

.incbin "base.gba", 0xd11b0, 0x6EC
_080d189c:	.4byte 0x02000BAC
_080d18a0:	.4byte 0x0200B7A4

.incbin "base.gba", 0xD18A4, 0x2D0
_080d1b74:	.4byte 0x000002C6

.incbin "base.gba", 0xD1B78, 0x14
_080d1b8c:	.4byte 0x000002C7

.incbin "base.gba", 0xD1B90, 0x130
_080d1cc0:	.4byte 0x00000863

.incbin "base.gba", 0xD1CC4, 0x10
_080d1cd4:	.4byte 0x0200A26C

.incbin "base.gba", 0xd1cd8, 0x28
_080d1d00:	.4byte 0x080d1b6c
_080d1d04:	.4byte 0x0200B854

.incbin "base.gba", 0xd1d08, 0x194
_080d1e9c:	.4byte 0x0200A26C

.incbin "base.gba", 0xD1EA0, 0x224
_080d20c4:	.4byte 0x0200D280

.incbin "base.gba", 0xD20C8, 0x14
_080d20dc:	.4byte 0x0200D280
_080d20e0:	.4byte 0x0200A26C

.incbin "base.gba", 0xD20E4, 0xC
_080d20f0:	.4byte 0x0200A26C

.incbin "base.gba", 0xD20F4, 0x64
_080d2158:	.4byte 0x0200A26C
_080d215c:	.4byte 0x02000BAC

.incbin "base.gba", 0xD2160, 0x3C
_080d219c:	.4byte 0x0200A26C
_080d21a0:	.4byte 0x0200A26C

.incbin "base.gba", 0xd21a4, 0x10
_080d21b4:	.4byte 0x0200A26C
_080d21b8:	.4byte 0x0200A26C
_080d21bc:	.4byte 0x0200CE3C
_080d21c0:	.4byte 0x0200DA00

.incbin "base.gba", 0xd21c4, 0x60
_080d2224:	.4byte 0x0200A26C
_080d2228:	.4byte 0x00000664
_080d222c:	.4byte 0x00000665
_080d2230:	.4byte 0x00000666
_080d2234:	.4byte 0x00000667
_080d2238:	.4byte 0x00000668
_080d223c:	.4byte 0x00000669
_080d2240:	.4byte 0xffffffff
_080d2244:	.4byte 0x0200B954

.incbin "base.gba", 0xd2248, 0x1A0
_080d23e8:	.4byte 0x00000926

.incbin "base.gba", 0xD23EC, 0x4
_080d23f0:	.4byte 0x00000927

.incbin "base.gba", 0xD23F4, 0xA4
_080d2498:	.4byte 0x0200A26C
_080d249c:	.4byte 0x0200A26C

.incbin "base.gba", 0xd24a0, 0x398
_080d2838:	.4byte 0x00000000
_080d283c:	.4byte 0x080d270c @ PD4F7AYL4
_080d2840:	.4byte 0x000004DF
_080d2844:	.4byte 0x00000000

.incbin "base.gba", 0xD2848, 0x2E8
_080d2b30:	.4byte 0x00000008
_080d2b34:	.4byte 0x0000000F

.incbin "base.gba", 0xD2B38, 0x4
_080d2b3c:	.4byte 0x00000004
_080d2b40:	.4byte 0x0000000C

.incbin "base.gba", 0xD2B44, 0x44
_080d2b88:	.4byte 0x0200B900

.incbin "base.gba", 0xd2b8C, 0x24
_080d2bb0:	.4byte 0x0200A26C
_080d2bb4:	.4byte 0x02000BAC
_080d2bb8:	.4byte 0x0200D280
_080d2bbc:	.4byte 0x0200B7A4

.incbin "base.gba", 0xd2bc0, 0xA8
_080d2c68:	.4byte 0x0200D520

.incbin "base.gba", 0xD2C6C, 0x6C
_080d2cd8:	.4byte 0x00000014
_080d2cdc:	.4byte 0x00000015
_080d2ce0:	.4byte 0x00000016
_080d2ce4:	.4byte 0x00000018
_080d2ce8:	.4byte 0x00000019
_080d2cec:	.4byte 0x0000001A

.incbin "base.gba", 0xD2CF0, 0x98
_080d2d88:	.4byte 0x00000100
_080d2d8c:	.4byte 0x00000101
_080d2d90:	.4byte 0x00000102
_080d2d94:	.4byte 0x00000103
_080d2d98:	.4byte 0x0200D530
_080d2d9c:	.4byte 0x01100000
_080d2da0:	.4byte 0x00DC0000
_080d2da4:	.4byte 0x00780000
_080d2da8:	.4byte 0x003C0000
_080d2dac:	.4byte 0x005A0000
_080d2db0:	.4byte 0x00780000
_080d2db4:	.4byte 0x00C00000
_080d2db8:	.4byte 0x00200000
_080d2dbc:	.4byte 0xFFC00000
_080d2dc0:	.4byte 0x00200000
_080d2dc4:	.4byte 0x00400000
_080d2dc8:	.4byte 0x00200000

.incbin "base.gba", 0xD2DCC, 0x1A0
_080d2f6c:	.4byte 0x00000000
_080d2f70:	.4byte 0x00000001
_080d2f74:	.4byte 0x00000002
_080d2f78:	.4byte 0x00000003
_080d2f7c:	.4byte 0x00000005
_080d2f80:	.4byte 0x00000008
_080d2f84:	.4byte 0x0000000E
_080d2f88:	.4byte 0x00000013

.incbin "base.gba", 0xD2F8C, 0x10
_080d2f9c:	.4byte 0x02000D8C

.incbin "base.gba", 0xd2fa0, 0xD0
_080d3070:	.4byte 0x0200D548
_080d3074:	.4byte 0x00000014
_080d3078:	.4byte 0x00000034
_080d307c:	.4byte 0x0000005C
_080d3080:	.4byte 0x0000007C
_080d3084:	.4byte 0x00000024
_080d3088:	.4byte 0x0000006C
_080d308c:	.4byte 0x000000A4
_080d3090:	.4byte 0x000000C4
_080d3094:	.4byte 0x0200EB24
_080d3098:	.4byte 0x0200EB1E
_080d309c:	.4byte 0x0200EB20
_080d30a0:	.4byte 0x0200EB22
_080d30a4:	.4byte 0x0000010A
_080d30a8:	.4byte 0x0000010B
_080d30ac:	.4byte 0x0000010B
_080d30b0:	.4byte 0x0000010A
_080d30b4:	.4byte 0x00000006
_080d30b8:	.4byte 0x00000004
_080d30bc:	.4byte 0x00000005
_080d30c0:	.4byte 0x00000005

.incbin "base.gba", 0xd30c4, 0x38
_080d30fc:	.4byte 0x0200DB50
_080d3100:	.4byte 0x00000000
_080d3104:	.4byte 0x0000000D
_080d3108:	.4byte 0x00000008
_080d310c:	.4byte 0x00000011

.incbin "base.gba", 0xd3110, 0x34
_080d3144:	.4byte 0x00000000
_080d3148:	.4byte 0x00000001
_080d314c:	.4byte 0x00000002
_080d3150:	.4byte 0x00000003
_080d3154:	.4byte 0x00000014
_080d3158:	.4byte 0x0000000A
_080d315c:	.4byte 0x0000000F
_080d3160:	.4byte 0x00000019

.incbin "base.gba", 0xd3164, 0x30
_080d3194:	.4byte 0x0200D51C

.incbin "base.gba", 0xD3198, 0x4
_080d319c:	.4byte 0x0200DB50
_080d31a0:	.4byte 0x00000000
_080d31a4:	.4byte 0x00000001
_080d31a8:	.4byte 0x00000002
_080d31ac:	.4byte 0x00000003
_080d31b0:	.4byte 0x080d31a0
_080d31b4:	.4byte 0x00000002
_080d31b8:	.4byte 0x0000000B
_080d31bc:	.4byte 0x00000007
_080d31c0:	.4byte 0x00000010

.incbin "base.gba", 0xd31c4, 0x34
_080d31f8:	.4byte 0x00000048
_080d31fc:	.4byte 0x00000065
_080d3200:	.4byte 0x00000084
_080d3204:	.4byte 0x000000A0

.incbin "base.gba", 0xD3208, 0x34
_080d323c:	.4byte 0x0200D51C
_080d3240:	.4byte 0x0200D51C

.incbin "base.gba", 0xD3244, 0x14
_080d3258:	.4byte 0x0200D54C
_080d325c:	.4byte 0x0200D570

.incbin "base.gba", 0xD3260, 0x30
_080d3290:	.4byte 0x0200D54C

.incbin "base.gba", 0xD3294, 0xC
_080d32a0:	.4byte 0x0200D568
_080d32a4:	.4byte 0x0200D568
_080d32a8:	.4byte 0x0200D54C
_080d32ac:	.4byte 0x0200D568
_080d32b0:	.4byte 0x0200D568
_080d32b4:	.4byte 0x0200D568

.incbin "base.gba", 0xD32B8, 0x1C
_080d32d4:	.4byte 0x0200D54C
_080d32d8:	.4byte 0x0200BDD4

.incbin "base.gba", 0xD32DC, 0x1E
_080d32fa:	.4byte 0x08f838c8

.incbin "base.gba", 0xD32FE, 0x6
_080d3304:	.4byte 0x00000014
_080d3308:	.4byte 0x0000000A
_080d330c:	.4byte 0x0000000A
_080d3310:	.4byte 0x0000000B
_080d3314:	.4byte 0x0000000C
_080d3318:	.4byte 0x0000000C
_080d331c:	.4byte 0x0000000C
_080d3320:	.4byte 0x0000000C
_080d3324:	.4byte 0x0000000C

.incbin "base.gba", 0xD3328, 0x20
_080d3348:	.4byte 0x0200CB94
_080d334c:	.4byte 0x0200D568

.incbin "base.gba", 0xD3350, 0x48
_080d3398:	.4byte 0x02000E2C

.incbin "base.gba", 0xD339C, 0x8
_080d33a4:	.4byte 0x0200D568
_080d33a8:	.4byte 0x0200D568

.incbin "base.gba", 0xD33AC, 0x14
_080d33c0:	.4byte 0x0200D568

.incbin "base.gba", 0xD33C4, 0x48
_080d340c:	.4byte 0x02000E0C

.incbin "base.gba", 0xD3410, 0xC
_080d341c:	.4byte 0x00007800
_080d3420:	.4byte 0x00012800
_080d3424:	.4byte 0x0000B000
_080d3428:	.4byte 0x00005000
_080d342c:	.4byte 0x0200DB50

.incbin "base.gba", 0xd3430, 0x18
_080d3448:	.4byte 0x0200A26C

.incbin "base.gba", 0xD344C, 0x54
_080d34a0:	.4byte 0x0200BEFC
_080d34a4:	.4byte 0x0200BEFC

.incbin "base.gba", 0xD34A8, 0x38
_080d34e0:	.4byte 0x0200D58C
_080d34e4:	.4byte 0x0200D580
_080d34e8:	.4byte 0x0200D580
_080d34ec:	.4byte 0x0200D58C
_080d34f0:	.4byte 0x0200D580

.incbin "base.gba", 0xD34F4, 0x8
_080d34fc:	.4byte 0x0200D58C
_080d3500:	.4byte 0x02000B18
_080d3504:	.4byte 0x0200D58C
_080d3508:	.4byte 0x0200D580
_080d350c:	.4byte 0x0200D58C
_080d3510:	.4byte 0x0200D58C

.incbin "base.gba", 0xD3514, 0x30
_080d3544:	.4byte 0x0200D58C

.incbin "base.gba", 0xd3548, 0x34
_080d357c:	.4byte 0x0200D58C

.incbin "base.gba", 0xD3580, 0x10
_080d3590:	.4byte 0x0200D580
_080d3594:	.4byte 0x0200D58C
_080d3598:	.4byte 0x0200D580

.incbin "base.gba", 0xD359C, 0xC
_080d35a8:	.4byte 0x0200D580
_080d35ac:	.4byte 0x0200D580
_080d35b0:	.4byte 0x02000B9C

.incbin "base.gba", 0xd35b4, 0xA0
_080d3654:	.4byte 0x02000BAC
_080d3658:	.4byte 0x0200AA18

.incbin "base.gba", 0xD365C, 0x4
_080d3660:	.4byte 0x02000BAC
_080d3664:	.4byte 0x02000BAC
_080d3668:	.4byte 0x0200D578
_080d366c:	.4byte 0x02000F8C
_080d3670:	.4byte 0x020010A0

.incbin "base.gba", 0xd3674, 0x13C
_080d37b0:	.4byte 0x0200D58C
_080d37b4:	.4byte 0x0200BF08
_080d37b8:	.4byte 0x0200D584

.incbin "base.gba", 0xd37bc, 0x7C
_080d3838:	.4byte 0x0200BB44
_080d383c:	.4byte 0x0200BB40
_080d3840:	.4byte 0x0200BB44
_080d3844:	.4byte 0x0200BB40
_080d3848:	.4byte 0x030072D4
_080d384c:	.4byte 0x0200BB44
_080d3850:	.4byte 0x030072D4
_080d3854:	.4byte 0x030072D4
_080d3858:	.4byte 0x030072D4
_080d385c:	.4byte 0x030072D4
_080d3860:	.4byte 0x0200CD70

.incbin "base.gba", 0xd3864, 0x54
_080d38b8:	.4byte 0x0200CE3C
_080d38bc:	.4byte 0x02009E1C
_080d38c0:	.4byte 0x0200CE30

.incbin "base.gba", 0xD38C4, 0x8
_080d38cc:	.4byte 0x0200CE44
_080d38d0:	.4byte 0x0200CE30

.incbin "base.gba", 0xD38D4, 0x14
_080d38e8:	.4byte 0x0200BB58
_080d38ec:	.4byte 0x0200BB58
_080d38f0:	.4byte 0x0200BB58
_080d38f4:	.4byte 0x0200BB58

.incbin "base.gba", 0xd38f8, 0x38
_080d3930:	.4byte 0x0200BB58
_080d3934:	.4byte 0x0200BDD4
_080d3938:	.4byte 0x080d38f8 @ SELECT_LEVEL:%1d
_080d393c:	.4byte 0x080d390c @ "                     "

.incbin "base.gba", 0xD3940, 0x94
_080d39d4:	.4byte 0x0200BB58
_080d39d8:	.4byte 0x0200EB24
_080d39dc:	.4byte 0x0200BB58
_080d39e0:	.4byte 0x0200EB22
_080d39e4:	.4byte 0x0200BB58

.incbin "base.gba", 0xD39E8, 0x454
_080d3e3c:	.4byte 0x00000000
_080d3e40:	.4byte 0x00000001
_080d3e44:	.4byte 0x00000001
_080d3e48:	.4byte 0x00000002

.incbin "base.gba", 0xd3e4c, 0xC
_080d3e58:	.4byte 0x0200BCA8

.incbin "base.gba", 0xD3E5C, 0x1B8
_080d4014:	.4byte 0x0200D5E4
_080d4018:	.4byte 0x0200D5E8
_080d401c:	.4byte 0x0200D5DC
_080d4020:	.4byte 0x0200D5E0

.incbin "base.gba", 0xD4024, 0x90
_080d40b4:	.4byte 0x080d4094 @ HAM
_080d40b8:	.4byte 0x080d409c @ NIJI
_080d40bc:	.4byte 0x080d40a4 @ KUCK
_080d40c0:	.4byte 0x080d40ac @ JANGAL

.incbin "base.gba", 0xd40c4, 0x40
_080d4104:	.4byte 0x080d40e4
_080d4108:	.4byte 0x080d40ec
_080d410c:	.4byte 0x080d40f4
_080d4110:	.4byte 0x080d40fc

.incbin "base.gba", 0xD4114, 0x8
_080d411c:	.4byte 0x0200D5E4
_080d4120:	.4byte 0x0200D5E8
_080d4124:	.4byte 0x0200D5E4
_080d4128:	.4byte 0x0200D5E8
_080d412c:	.4byte 0x0200CE40
_080d4130:	.4byte 0x0200CE3C

.incbin "base.gba", 0xD4134, 0xA8
_080d41dc:	.4byte 0xFFF80000

.incbin "base.gba", 0xD41E0, 0x184
_080d4364:	.4byte 0x080d457c
_080d4368:	.4byte 0x080d4570
_080d436c:	.4byte 0x00000004
_080d4370:	.4byte 0x00000003

.incbin "base.gba", 0xd4374, 0x14
_080d4388:	.4byte 0x0200D5FC
_080d438c:	.4byte 0x0200CE44
_080d4390:	.4byte 0x0200D604
_080d4394:	.4byte 0x00000000
_080d4398:	.4byte 0x00000002
_080d439c:	.4byte 0x00000001

.incbin "base.gba", 0xd43a0, 0x18
_080d43b8:	.4byte 0x0200BDD4

.incbin "base.gba", 0xD43BC, 0x14
_080d43d0:	.4byte 0x00000002
_080d43d4:	.4byte 0x00000003
_080d43d8:	.4byte 0x0000000A
_080d43dc:	.4byte 0x0000000B
_080d43e0:	.4byte 0x00000010
_080d43e4:	.4byte 0x00000007
_080d43e8:	.4byte 0x00000006
_080d43ec:	.4byte 0x0000000E
_080d43f0:	.4byte 0x0000000F
_080d43f4:	.4byte 0x00000011

.incbin "base.gba", 0xD43F8, 0x4C
_080d4444:	.4byte 0x00000007
_080d4448:	.4byte 0x00000008

.incbin "base.gba", 0xD444C, 0xC
_080d4458:	.4byte 0x0200A26C

.incbin "base.gba", 0xD445C, 0x18
_080d4474:	.4byte 0x0200A26C

.incbin "base.gba", 0xD4478, 0x230
_080d46a8:	.4byte 0xFFFFFFD8

.incbin "base.gba", 0xD46AC, 0x48
_080d46f4:	.4byte 0x0200AA18
_080d46f8:	.4byte 0x0000000A
_080d46fc:	.4byte 0x00000006

.incbin "base.gba", 0xD4700, 0x28
_080d4728:	.4byte 0x00000060
_080d472c:	.4byte 0x0000009C

.incbin "base.gba", 0xD4730, 0x5C
_080d478c:	.4byte 0x0200D634
_080d4790:	.4byte 0x00000000
_080d4794:	.4byte 0x00000000

.incbin "base.gba", 0xD4798, 0x20
_080d47b8:	.4byte 0x00000000
_080d47bc:	.4byte 0x00000001

.incbin "base.gba", 0xD47C0, 0x20
_080d47e0:	.4byte 0x00000000

.incbin "base.gba", 0xD47E4, 0x24
_080d4808:	.4byte 0x0000000D
_080d480c:	.4byte 0x00000005
_080d4810:	.4byte 0x00000015
_080d4814:	.4byte 0x02008AD4
_080d4818:	.4byte 0x0200CE30
_080d481c:	.4byte 0x0200CE44

.incbin "base.gba", 0xD4820, 0x54
_080d4874:	.4byte 0x000000CE
_080d4878:	.4byte 0x0000000A

.incbin "base.gba", 0xD487C, 0x10
_080d488c:	.4byte 0x0000000C

.incbin "base.gba", 0xD4890, 0x8
_080d4898:	.4byte 0x00000000

.incbin "base.gba", 0xD489C, 0x499C
_080d9238:	.4byte 0x00000000

.incbin "base.gba", 0xD923C, 0x6C
_080d92a8:	.4byte 0x00000000

.incbin "base.gba", 0xD92AC, 0x16B4
_080da960:	.4byte 0x00000012
_080da964:	.4byte 0x00000000

.incbin "base.gba", 0xDA968, 0x8
_080da970:	.4byte 0x00000002
_080da974:	.4byte 0x00000000

.incbin "base.gba", 0xDA978, 0x18
_080da990:	.4byte 0x00000001
_080da994:	.4byte 0x00000000

.incbin "base.gba", 0xDA998, 0x28
_080da9c0:	.4byte 0x0200DB60

.incbin "base.gba", 0xDA9c4, 0x6C
_080daa30:	.4byte 0x02000DEC

.incbin "base.gba", 0xDAA34, 0x3B8
_080dadec:	.4byte 0xffffffff
_080dadf0:	.4byte 0xffffffff
_080dadf4:	.4byte 0xffffffff
_080dadf8:	.4byte 0xffffffff

.incbin "base.gba", 0xDADFC, 0x2E0
_080db0dc:	.4byte 0x000AC000
_080db0e0:	.4byte 0x00048000
_080db0e4:	.4byte 0x00073800
_080db0e8:	.4byte 0x00080000

.incbin "base.gba", 0xDB0EC, 0x8
_080db0f4:	.4byte 0x000AC000
_080db0f8:	.4byte 0x00080000

.incbin "base.gba", 0xDB0FC, 0xF0
_080db1ec:	.4byte 0x00000000

.incbin "base.gba", 0xDB1F0, 0x4
_080db1f4:	.4byte 0x00000001

.incbin "base.gba", 0xDB1F8, 0x4E0
_080db6d8:	.4byte 0x00000000
_080db6dc:	.4byte 0x00000001

.incbin "base.gba", 0xDB6E0, 0x8
_080db6e8:	.4byte 0x00000006
_080db6ec:	.4byte 0x00000005
_080db6f0:	.4byte 0x00000008
_080db6f4:	.4byte 0x00000009

.incbin "base.gba", 0xDB6F8, 0xA28
_080dc120:	.4byte 0x0200CE4C
PTR_H_Reset_080dc124:	.4byte 0xffff0000

.incbin "base.gba", 0xDC128, 0x314
_080dc43c:	.4byte 0x080dc440

.incbin "base.gba", 0xDC440, 0x864
_080dcca4:	.4byte 0x080dccac
_080dcca8:	.4byte 0x080dccac

.incbin "base.gba", 0xDCCAC, 0x151C
_080de1c8:	.4byte 0x00000400
_080de1cc:	.4byte 0x00000404

.incbin "base.gba", 0xDE1D0, 0x86C
_080dea3c:	.4byte 0x0808f83c

.incbin "base.gba", 0xDEA40, 0x38
_080dea78:	.4byte 0x0200CBA0
_080dea7c:	.4byte 0x0200DA00
_080dea80:	.4byte 0x0200CBA2
_080dea84:	.4byte 0x0200EB38

.incbin "base.gba", 0xDEA88, 0x50
_080dead8:	.4byte sub_0809518c

.incbin "base.gba", 0xDEADC, 0x14
_080deaf0:	.4byte sub_0809528c
_080deaf4:	.4byte 0x08095279

.incbin "base.gba", 0xDEAF8, 0x108
_080dec00:	.4byte 0x04000063
_080dec04:	.4byte 0x04000069
_080dec08:	.4byte 0x00000000
_080dec0c:	.4byte 0x04000079
_080dec10:	.4byte 0x04000065
_080dec14:	.4byte 0x0400006D
_080dec18:	.4byte 0x00000000
_080dec1c:	.4byte 0x0400007D
_080dec20:	.4byte sub_08095534

.incbin "base.gba", 0xDEC24, 0x1C
_080dec40:	.4byte sub_08095534

.incbin "base.gba", 0xDEC44, 0x1C
_080dec60:	.4byte 0x08095585

.incbin "base.gba", 0xDEC64, 0x1C
_080dec80:	.4byte sub_08095534

.incbin "base.gba", 0xDEC84, 0x1C
_080deca0:	.4byte 0x04000064
_080deca4:	.4byte 0x0400006C
_080deca8:	.4byte 0x00000000
_080decac:	.4byte 0x0400007C
_080decb0:	.4byte 0x04000062
_080decb4:	.4byte 0x04000068
_080decb8:	.4byte 0x00000000
_080decbc:	.4byte 0x00000000

.incbin "base.gba", 0xDECC0, 0x4
_080decc4:	.4byte 0x08095a1d

.incbin "base.gba", 0xDECC8, 0x1C
_080dece4:	.4byte 0x080dead8

.incbin "base.gba", 0xDECE8, 0x1100
_080dfde8:	.4byte 0xfffffffb
_080dfdec:	.4byte 0xfffffffb
_080dfdf0:	.4byte 0xfffffffb
_080dfdf4:	.4byte 0x00000000
_080dfdf8:	.4byte 0x00000002
_080dfdfc:	.4byte 0x00000001
_080dfe00:	.4byte 0xfffffffd
_080dfe04:	.4byte 0x0000000A
_080dfe08:	.4byte 0xfffffffe
_080dfe0c:	.4byte 0xFFFFFFF6
_080dfe10:	.4byte 0x00000005
_080dfe14:	.4byte 0xfffffffe
_080dfe18:	.4byte 0x0000000A
_080dfe1c:	.4byte 0xfffffffd
_080dfe20:	.4byte 0xFFFFFFF6
_080dfe24:	.4byte 0x00000005
_080dfe28:	.4byte 0x00000005
_080dfe2c:	.4byte 0xFFFFFFF1
_080dfe30:	.4byte 0xFFFFFFF6
_080dfe34:	.4byte 0x0000000A
_080dfe38:	.4byte 0xFFFFFFF6
_080dfe3c:	.4byte 0xFFFFFFF6
_080dfe40:	.4byte 0x00000005
_080dfe44:	.4byte 0x00000005
_080dfe48:	.4byte 0xFFFFFFF1
_080dfe4c:	.4byte 0xFFFFFFF6
_080dfe50:	.4byte 0x0000000A
_080dfe54:	.4byte 0xFFFFFFF4
_080dfe58:	.4byte 0xFFFFFFF8
_080dfe5c:	.4byte 0x0000000A

.incbin "base.gba", 0xDFE60, 0x298
_080e00f8:	.4byte 0x40240000
_080e00fc:	.4byte 0x00000000

.incbin "base.gba", 0xE0100, 0x28
_080e0128:	.4byte 0x416312D0
_080e012c:	.4byte 0x00000000

.incbin "base.gba", 0xE0130, 0x28
_080e0158:	.4byte 0x42A2309C
_080e015c:	.4byte 0xE5400000

.incbin "base.gba", 0xE0160, 0x8
_080e0168:	.4byte 0x430C6BF5
_080e016c:	.4byte 0x26340000

.incbin "base.gba", 0xE0170, 0x48
_080e01b8:	.4byte 0x4341C379
_080e01bc:	.4byte 0x37E08000
_080e01c0:	.4byte 0x4693B8B5
_080e01c4:	.4byte 0xB5056E17

.incbin "base.gba", 0xE01C8, 0x10
_080e01d8:	.4byte 0x75154FDD
_080e01dc:	.4byte 0x7F73BF3C
_080e01e0:	.4byte 0x3C9CD2B2
_080e01e4:	.4byte 0x97D889BC
_080e01e8:	.4byte 0x3949F623
_080e01ec:	.4byte 0xD5A8A733

.incbin "base.gba", 0xE01F0, 0x18
_080e0208:	.4byte 0x7FF00000
_080e020c:	.4byte 0x00000000

.incbin "base.gba", 0xE0210, 0x90
_080e02a0:	.4byte 0x080e02d4

.incbin "base.gba", 0xE02A4, 0x37FDC
	thumb_func_start sub_08118280
sub_08118280:
	push	{ r1, r3, r4, r5, r7, lr }
	ldr		r6, [sp, #0x2b0]
	ldrb	r5, [r1, #0x6]
	strb	r6, [r4, r5]
	sub		r5, #0x48
	add		r3, #0x36
	sub		r5, #0x36
	strb	r7, [r0, r1]
	strb	r4, [r4, #0x15]
	ldrh	r3, [r0, #0x2c]
	str		r7, [sp, #0x248]

.incbin "base.gba", 0x118296, 0x17D6B
	thumb_func_end sub_08118280


.incbin "base.gba", 0x130001, 0x76247

_081a6248:

.incbin "base.gba", 0x1A6248, 0x5E
_081a62a6:

.incbin "base.gba", 0x1A62A6, 0x62
_081a6308:

.incbin "base.gba", 0x1A6308, 0x2
_081a630a:

.incbin "base.gba", 0x1A630A, 0x2
_081a630c:

.incbin "base.gba", 0x1A630C, 0x56
_081a6362:

.incbin "base.gba", 0x1A6362, 0x32
_081a6394:

.incbin "base.gba", 0x1A6394, 0x28
_081a63bc:

.incbin "base.gba", 0x1A63BC, 0x18
_081a63d4:

.incbin "base.gba", 0x1A63D4, 0x40
_081a6414:

.incbin "base.gba", 0x1A6414, 0x2
_081a6416:

.incbin "base.gba", 0x1A6416, 0x1A
_081a6430:

.incbin "base.gba", 0x1A6430, 0x40
_081a6470:

.incbin "base.gba", 0x1A6470, 0x1C
_081a648c:

.incbin "base.gba", 0x1A648C, 0x4
_081a6490:

.incbin "base.gba", 0x1A6490, 0x4
_081a6494:

.incbin "base.gba", 0x1A6494, 0x8
_081a649c:

.incbin "base.gba", 0x1A649C, 0x12
_081a64ae:

.incbin "base.gba", 0x1A64AE, 0x1C
_081a64ca:

.incbin "base.gba", 0x1A64CA, 0x8
_081a64d2:

.incbin "base.gba", 0x1A64D2, 0x38
_081a650a:

.incbin "base.gba", 0x1A650A, 0xE
_081a6518:

.incbin "base.gba", 0x1A6518, 0xA
_081a6522:

.incbin "base.gba", 0x1A6522, 0x2
_081a6524:

.incbin "base.gba", 0x1A6524, 0x26
_081a654a:

.incbin "base.gba", 0x1A654A, 0x34

_081a657e:

.incbin "base.gba", 0x1A657E, 0x36
_081a65b4:

.incbin "base.gba", 0x1A65B4, 0x1C
_081a65d0:

.incbin "base.gba", 0x1A65D0, 0x2
_081a65d2:

.incbin "base.gba", 0x1A65D2, 0x4
_081a65d6:

.incbin "base.gba", 0x1A65D6, 0xE
_081a65e4:

.incbin "base.gba", 0x1A65E4, 0x4C
_081a6630:

.incbin "base.gba", 0x1A6630, 0x2
_081a6632:

.incbin "base.gba", 0x1A6632, 0xA
_081a663c:

.incbin "base.gba", 0x1A663C, 0x4
_081a6640:

.incbin "base.gba", 0x1A6640, 0x4
_081a6644:

.incbin "base.gba", 0x1A6644, 0x4
_081a6648:

.incbin "base.gba", 0x1A6648, 0x1C
_081a6664:

.incbin "base.gba", 0x1A6664, 0x26

_081a668a:

.incbin "base.gba", 0x1a668a, 0x2
_081a668c:

.incbin "base.gba", 0x1a668c, 0x2
_081a668e:

.incbin "base.gba", 0x1a668e, 0x2E
_081a66bc:

.incbin "base.gba", 0x1A66BC, 0x28
_081a66e4:

.incbin "base.gba", 0x1A66E4, 0x32
_081a6716:

.incbin "base.gba", 0x1A6716, 0xE
_081a6724:

.incbin "base.gba", 0x1A6724, 0x2
_081a6726:

.incbin "base.gba", 0x1A6726, 0x14
_081a673a:

.incbin "base.gba", 0x1A673A, 0x2
_081a673c:

.incbin "base.gba", 0x1A673C, 0x2
_081a673e:

.incbin "base.gba", 0x1A673E, 0x2A
_081a6768:

.incbin "base.gba", 0x1A6768, 0x14
_081a677c:

.incbin "base.gba", 0x1A677C, 0x12
_081a678e:

.incbin "base.gba", 0x1A678E, 0x6
_081a6794:

.incbin "base.gba", 0x1A6794, 0x4
_081a6798:

.incbin "base.gba", 0x1A6798, 0x2
_081a679a:

.incbin "base.gba", 0x1A679A, 0x6
_081a67a0:

.incbin "base.gba", 0x1A67A0, 0x2
_081a67a2:

.incbin "base.gba", 0x1A67A2, 0x3A
_081a67dc:

.incbin "base.gba", 0x1A67DC, 0x16
_081a67f2:

.incbin "base.gba", 0x1A67F2, 0x6
_081a67f8:

.incbin "base.gba", 0x1A67F8, 0x54
_081a684c:

.incbin "base.gba", 0x1A684C, 0x3A
_081a6886:

.incbin "base.gba", 0x1A6886, 0x20
_081a68a6:

.incbin "base.gba", 0x1A68A6, 0x56
_081a68fc:	.4byte 0xCDD1A57E

_081a6900:

.incbin "base.gba", 0x1A6900, 0x4
_081a6904:

.incbin "base.gba", 0x1A6904, 0xA
_081a690e:

.incbin "base.gba", 0x1A690E, 0xE
_081a691c:

.incbin "base.gba", 0x1A691C, 0x2
_081a691e:

.incbin "base.gba", 0x1A691E, 0x2
_081a6920:

.incbin "base.gba", 0x1A6920, 0x4
_081a6924:

.incbin "base.gba", 0x1A6924, 0xE
_081a6932:

.incbin "base.gba", 0x1A6932, 0x28
_081a695a:

.incbin "base.gba", 0x1A695A, 0xC
_081a6966:

.incbin "base.gba", 0x1A6966, 0x4
_081a696a:

.incbin "base.gba", 0x1A696A, 0x4
_081a696e:

.incbin "base.gba", 0x1A696E, 0x2C
_081a699a:

.incbin "base.gba", 0x1A699A, 0x18
_081a69b2:

.incbin "base.gba", 0x1A69B2, 0x2
_081a69b4:

.incbin "base.gba", 0x1A69B4, 0xE
_081a69c2:

.incbin "base.gba", 0x1A69C2, 0x4
_081a69c6:

.incbin "base.gba", 0x1A69C6, 0x8
_081a69ce:

.incbin "base.gba", 0x1A69CE, 0xE
_081a69dc:

.incbin "base.gba", 0x1A69DC, 0x4
_081a69e0:

.incbin "base.gba", 0x1A69E0, 0x4
_081a69e4:

.incbin "base.gba", 0x1A69E4, 0x4
_081a69e8:	.4byte 0xA3B2BBDB
_081a69ec:	.4byte 0x6AA5957E
_081a69f0:	.4byte 0x09263437

.incbin "base.gba", 0x1A69F4, 0x1A

_081a6a0e:

.incbin "base.gba", 0x1A6A0E, 0x4
_081a6a12:

.incbin "base.gba", 0x1A6A12, 0x32
_081a6a44:

.incbin "base.gba", 0x1A6A44, 0x6
_081a6a4a:

.incbin "base.gba", 0x1A6A4A, 0x14
_081a6a5e:

.incbin "base.gba", 0x1A6A5E, 0x4
_081a6a62:

.incbin "base.gba", 0x1A6A62, 0x4
_081a6a66:

.incbin "base.gba", 0x1A6A66, 0xE
_081a6a74:

.incbin "base.gba", 0x1A6A74, 0x38

_081a6aac:

.incbin "base.gba", 0x1A6AAC, 0x16
_081a6ac2:

.incbin "base.gba", 0x1A6AC2, 0xA
_081a6acc:

.incbin "base.gba", 0x1A6ACC, 0x4
_081a6ad0:

.incbin "base.gba", 0x1A6AD0, 0x4
_081a6ad4:

.incbin "base.gba", 0x1A6AD4, 0x4
_081a6ad8:

.incbin "base.gba", 0x1A6AD8, 0x44
_081a6b1c:

.incbin "base.gba", 0x1A6B1C, 0x2
_081a6b1e:

.incbin "base.gba", 0x1A6B1E, 0xC
_081a6b2a:

.incbin "base.gba", 0x1A6B2A, 0x8
_081a6b32:

.incbin "base.gba", 0x1A6B32, 0x12
_081a6b44:

.incbin "base.gba", 0x1A6B44, 0xC
_081a6b50:

.incbin "base.gba", 0x1A6B50, 0x24
_081a6b74:

.incbin "base.gba", 0x1A6B74, 0x56
_081a6bca:

.incbin "base.gba", 0x1A6BCA, 0x4
_081a6bce:

.incbin "base.gba", 0x1A6BCE, 0x2
_081a6bd0:

.incbin "base.gba", 0x1A6BD0, 0x10
_081a6be0:

.incbin "base.gba", 0x1A6BE0, 0x10
_081a6bf0:

.incbin "base.gba", 0x1A6BF0, 0xC
_081a6bfc:

.incbin "base.gba", 0x1A6BFC, 0x1C
_081a6c18:

.incbin "base.gba", 0x1A6C18, 0x4
_081a6c1c:

.incbin "base.gba", 0x1A6C1C, 0x2
_081a6c1e:

.incbin "base.gba", 0x1A6C1E, 0x2
_081a6c20:

.incbin "base.gba", 0x1A6C20, 0x4
_081a6c24:

.incbin "base.gba", 0x1A6C24, 0x4
_081a6c28:

.incbin "base.gba", 0x1A6C28, 0x2
_081a6c2a:

.incbin "base.gba", 0x1A6C2A, 0x2
_081a6c2c:

.incbin "base.gba", 0x1A6C2C, 0x4
_081a6c30:

.incbin "base.gba", 0x1A6C30, 0x2
_081a6c32:

.incbin "base.gba", 0x1A6C32, 0x50
_081a6c82:

.incbin "base.gba", 0x1A6C82, 0x2
_081a6c84:

.incbin "base.gba", 0x1A6C84, 0x14
_081a6c98:

.incbin "base.gba", 0x1A6C98, 0x10
_081a6ca8:

.incbin "base.gba", 0x1A6CA8, 0x4
_081a6cac:

.incbin "base.gba", 0x1A6CAC, 0x4
_081a6cb0:

.incbin "base.gba", 0x1A6CB0, 0x4
_081a6cb4:

.incbin "base.gba", 0x1A6CB4, 0x4
_081a6cb8:	.4byte 0xBCDAB688
_081a6cbc:	.4byte 0x9481A4B3

.incbin "base.gba", 0x1A6CC0, 0x1C

_081a6cdc:

.incbin "base.gba", 0x1A6CDC, 0x5A
_081a6d36:

.incbin "base.gba", 0x1A6D36, 0xC
_081a6d42:

.incbin "base.gba", 0x1A6D42, 0x3E
_081a6d80:

.incbin "base.gba", 0x1A6D80, 0x10
_081a6d90:

.incbin "base.gba", 0x1A6D90, 0x4
_081a6d94:

.incbin "base.gba", 0x1A6D94, 0x4
_081a6d98:

.incbin "base.gba", 0x1A6D98, 0xA
_081a6da2:

.incbin "base.gba", 0x1A6DA2, 0xA
_081a6dac:

.incbin "base.gba", 0x1A6DAC, 0x4
_081a6db0:

.incbin "base.gba", 0x1A6DB0, 0x4
_081a6db4:

.incbin "base.gba", 0x1A6DB4, 0x10
_081a6dc4:

.incbin "base.gba", 0x1A6DC4, 0x18
_081a6ddc:

.incbin "base.gba", 0x1A6DDC, 0xE
_081a6dea:

.incbin "base.gba", 0x1A6DEA, 0xC
_081a6df6:

.incbin "base.gba", 0x1A6DF6, 0x34
_081a6e2a:

.incbin "base.gba", 0x1A6E2A, 0x6
_081a6e30:

.incbin "base.gba", 0x1A6E30, 0x4
_081a6e34:

.incbin "base.gba", 0x1A6E34, 0x4
_081a6e38:

.incbin "base.gba", 0x1A6E38, 0x4
_081a6e3c:

.incbin "base.gba", 0x1A6E3C, 0x6
_081a6e42:

.incbin "base.gba", 0x1A6E42, 0x2
_081a6e44:

.incbin "base.gba", 0x1A6E44, 0x12
_081a6e56:

.incbin "base.gba", 0x1A6E56, 0x32
_081a6e88:

.incbin "base.gba", 0x1A6E88, 0x4
_081a6e8c:

.incbin "base.gba", 0x1A6E8C, 0xA
_081a6e96:

.incbin "base.gba", 0x1A6E96, 0x8
_081a6e9e:

.incbin "base.gba", 0x1A6E9E, 0x36
_081a6ed4:

.incbin "base.gba", 0x1A6ED4, 0x1C
_081a6ef0:

.incbin "base.gba", 0x1A6EF0, 0x6
_081a6ef6:

.incbin "base.gba", 0x1A6EF6, 0x2
_081a6ef8:

.incbin "base.gba", 0x1A6EF8, 0x4
_081a6efc:

.incbin "base.gba", 0x1A6EFC, 0x54
_081a6f50:

.incbin "base.gba", 0x1A6F50, 0x2
_081a6f52:

.incbin "base.gba", 0x1A6F52, 0xE
_081a6f60:

.incbin "base.gba", 0x1A6F60, 0x4
_081a6f64:

.incbin "base.gba", 0x1A6F64, 0x2
_081a6f66:

.incbin "base.gba", 0x1A6F66, 0x2
_081a6f68:

.incbin "base.gba", 0x1A6F68, 0x2
_081a6f6a:

.incbin "base.gba", 0x1A6F6A, 0x4
_081a6f6e:

.incbin "base.gba", 0x1A6F6E, 0x4
_081a6f72:

.incbin "base.gba", 0x1A6F72, 0x4
_081a6f76:

.incbin "base.gba", 0x1A6F76, 0x4
_081a6f7a:

.incbin "base.gba", 0x1A6F7A, 0x8
_081a6f82:

.incbin "base.gba", 0x1A6F82, 0xE
_081a6f90:

.incbin "base.gba", 0x1A6F90, 0x4
_081a6f94:

.incbin "base.gba", 0x1A6F94, 0x4
_081a6f98:

.incbin "base.gba", 0x1A6F98, 0x2
_081a6f9a:

.incbin "base.gba", 0x1A6F9A, 0x2
_081a6f9c:

.incbin "base.gba", 0x1A6F9C, 0x10
_081a6fac:

.incbin "base.gba", 0x1A6FAC, 0xE
_081a6fba:

.incbin "base.gba", 0x1A6FBA, 0x12
_081a6fcc:

.incbin "base.gba", 0x1A6FCC, 0x2C
_081a6ff8:

.incbin "base.gba", 0x1A6FF8, 0xC
_081a7004:

.incbin "base.gba", 0x1A7004, 0x36
_081a703a:

.incbin "base.gba", 0x1A703A, 0x2
_081a703c:

.incbin "base.gba", 0x1A703C, 0xA
_081a7046:

.incbin "base.gba", 0x1A7046, 0x14
_081a705a:

.incbin "base.gba", 0x1A705A, 0x6
_081a7060:

.incbin "base.gba", 0x1A7060, 0x4
_081a7064:

.incbin "base.gba", 0x1A7064, 0xC
_081a7070:

.incbin "base.gba", 0x1A7070, 0x1C
_081a708c:

.incbin "base.gba", 0x1A708C, 0x22
_081a70ae:

.incbin "base.gba", 0x1A70AE, 0x6
_081a70b4:

.incbin "base.gba", 0x1A70B4, 0x4
_081a70b8:

.incbin "base.gba", 0x1A70B8, 0x2
_081a70ba:

.incbin "base.gba", 0x1A70BA, 0x2
_081a70bc:

.incbin "base.gba", 0x1A70BC, 0x2
_081a70be:

.incbin "base.gba", 0x1A70BE, 0x2
_081a70c0:

.incbin "base.gba", 0x1A70C0, 0x2
_081a70c2:

.incbin "base.gba", 0x1A70C2, 0x2
_081a70c4:

.incbin "base.gba", 0x1A70C4, 0x4
_081a70c8:

.incbin "base.gba", 0x1A70C8, 0x6
_081a70ce:

.incbin "base.gba", 0x1A70CE, 0x12
	thumb_func_start sub_081a70e0
sub_081a70e0:
	push	{ r2, r3, r4, r6, r7, lr }
	ldr		r5, [sp, #0x2c8]
	ldr		r5, [sp, #0x1f4]
	str		r7, [r3, #0x18]
	add		r3, #0x34
	lsr		r2, r4, #0xc
.incbin "base.gba", 0x1a70ec, 0x2
	strh	r2, [r5, #0x4]
	strh	r2, [r6, #0x2]
	strh	r1, [r0, #0x34]
	bge		_081a7060
.incbin "base.gba", 0x1a70f6, 0x2
	strh	r6, [r4, #0x14]
_081a70fa:
	add		r1, sp, #0x244
	sub		r1, #0x70
	cmp		r0, #0x34
	sub		r2, #0xa
	add		r4, sp, #0x25c
	strb	r2, [r1, #0x2]
	strh	r4, [r7, #0x22]
	add		r1, sp, #0x200
	ldmia	r2, { r2, r4, r6, r7 }
	add		r4, sp, #0x2c0
	strh	r1, [r1, #0x24]
	strh	r3, [r5, #0x4]
	add		r3, #0x43
	lsr		r4, r5, #0x1c
	strh	r4, [r4, #0x38]
	str		r5, [sp, #0x2ac]
	ldrb	r2, [r6, #0x1]
	ldrb	r5, [r0, #0x16]
	ldmia	r2, { r0, r2, r3, r4, r7 }
	sub		sp, #0x150
	str		r2, [sp, #0x2c4]
	add		r0, sp, #0x1f4
	ldr		r7, _081a7364
_081a7128:
	add		r1, #0x32
.incbin "base.gba", 0x1a712a, 0x2
	add		r0, sp, #0x1c8
	strb	r0, [r4, #0x16]
	strh	r4, [r6, #0x1a]
	str		r2, [sp, #0x1f8]
	bge		_081a70ba
.incbin "base.gba", 0x1a7136, 0x2
	ldrb	r3, [r3, #0x16]
	ldr		r4, [sp, #0x280]
	add		r3, #0x5d
	mov		r1, #0x33
	ldrh	r4, [r1, r0]
	add		r0, sp, #0x28c
	strb	r4, [r7, #0x9]
	strh	r1, [r0, #0xC]

.incbin "base.gba", 0x1A7148, 0x80

_081a71c8:	.4byte 0xAFD0D0A3
_081a71cc:	.4byte 0xAA818EAE
_081a71d0:	.4byte 0x2F324989
_081a71d4:	.4byte 0xAA7C1B15
_081a71d8:	.4byte 0x8476739B

.incbin "base.gba", 0x1A71DC, 0x5E
_081a723a:	.4byte 0x31325393
_081a723e:	.4byte 0xA76C111B
_081a7242:	.4byte 0x837477A3
_081a7246:	.4byte 0xDBBD8F80

.incbin "base.gba", 0x1a724a, 0x2
	thumb_func_end sub_081a70e0


.incbin "base.gba", 0x1A724C, 0x74
_081a72c0:	.4byte 0x7088AD9A
_081a72c4:	.4byte 0xAA80837C
_081a72c8:	.4byte 0xABB0C8D5
_081a72cc:	.4byte 0x7DAC8788

.incbin "base.gba", 0x1A72D0, 0x94
_081a7364:	.4byte 0x25343566

.incbin "base.gba", 0x1A7368, 0x2EA10
	thumb_func_start sub_081d5d78
sub_081d5d78:
	push	{ r3, r4, r5, r7, lr }
.incbin "base.gba", 0x1d5d7a, 0x4
	ldrh	r4, [r2, #0x1c]
	strh	r0, [r1, #0x34]
	ldrh	r6, [r0, #0x4]
	ldrh	r1, [r1, #0x1c]
	ldrh	r6, [r1, #0x3c]
	str		r0, [sp, #0x240]
	ldr		r0, [sp, #0x238]
	ldr		r3, [sp, #0x268]
	ldrh	r3, [r2, #0x2c]
	strh	r0, [r1, #0x1c]
	ldrb	r0, [r0, #0x1a]
	ldrb	r4, [r7, #0x9]
	strb	r7, [r6, #0x19]
	strb	r4, [r6, #0x9]
	ldr		r0, [r6, #0x64]
	ldr		r4, [r5, #0x4]
	str		r5, [r4, #0x24]
	ldrh	r5, [r3, r1]
	strh	r6, [r2, r5]
	ldr		r4, _081d5ee4
.incbin "base.gba", 0x1D5DA6, 0x13e

_081d5ee4:	.4byte 0x4145474A

.incbin "base.gba", 0x1D5EE8, 0x144
	thumb_func_end sub_081d5d78


.incbin "base.gba", 0x1D602C, 0xEF9B8
	thumb_func_start sub_082c59e4
sub_082c59e4:
	push	{ r1, r2, r6, r7, lr }
	ldrh	r1, [r4, #0xc]
	ldr		r7, _082c5ba4
	sub		r2, #0x3a
	ldrsh	r2, [r1, r5]
	strh	r2, [r6, #0x1a]
	ldr		r4, [sp, #0x244]
	add		r3, sp, #0x290

.incbin "base.gba", 0x2C59F4, 0x1B0

_082c5ba4:	.4byte 0x65565859

.incbin "base.gba", 0x2C5BA8, 0x3A862
	str		r6, [sp, #0x288]
	ldrb	r2, [r0, #0x2]
	ldrb	r1, [r7, #0x19]
	ldrsh	r6, [r6, r5]
	ldrsh	r2, [r2, r1]
	ldrb	r4, [r6, #0x19]
	ldrh	r3, [r0, #0x4]
	strh	r5, [r0, #0x4]
	strh	r2, [r0, #0x34]
	str		r1, [sp, #0x224]
	ldrh	r0, [r2, #0x4]
	strh	r1, [r1, #0x1c]
	strh	r2, [r7, #0x2a]
	ldr		r4, [sp, #0x260]
	ldrh	r1, [r3, #0x3c]
	ldrb	r2, [r0, #0x16]
	ldr		r0, [r7, #0x24]
	ldrsb	r1, [r3, r1]
	strb	r5, [r4, #0x19]
	ldrh	r7, [r7, #0x2]
.incbin "base.gba", 0x300432, 0x2
	ldrh	r3, [r3, #0x4]
	strb	r1, [r6, #0x11]
.incbin "base.gba", 0x300438, 0x2
	strh	r1, [r2, #0x4]
	strb	r0, [r7, #0x1d]
	strb	r2, [r6, #0x11]
	strb	r1, [r7, #0x11]
	strb	r1, [r7, #0x15]
	ldr		r4, [r4, #0x64]
	ldr		r7, [sp, #0x238]
	ldrh	r3, [r2, #0x1c]
	strh	r6, [r1, #0x4]
	ldrb	r5, [r6, #0xd]
	strb	r0, [r0, #0x6]
	str		r5, [r3, #0x44]
	ldr		r2, [r5, #0x64]
	strh	r0, [r0, #0x34]
	ldrh	r1, [r0, #0x24]
	ldr		r3, [sp, #0x26c]
	ldrb	r1, [r1, #0xa]
	strb	r4, [r6, #0x11]
	ldrsh	r6, [r5, r5]
	str		r3, [r2, r1]
	ldrb	r0, [r4, #0x5]
	str		r6, [sp, #0x228]
	str		r4, [sp, #0x260]
	ldrh	r1, [r2, #0x24]
	ldrb	r0, [r0, #0x1e]
	ldrb	r0, [r0, #0x6]
	strh	r0, [r0, #0x4]
	ldr		r3, _0830060c
	str		r4, [r1, #0x54]
	strh	r2, [r6, #0x2a]
	add		r0, sp, #0x29c
	strh	r4, [r2, #0x34]
	ldrb	r1, [r7, #0x15]
	ldrb	r1, [r0, #0x16]
	strh	r7, [r7, #0xa]
	strb	r5, [r7, #0x1d]
	ldrh	r7, [r7, #0xa]
	strh	r2, [r1, #0x2c]
	strh	r3, [r0, #0x3c]
	ldr		r6, [r7, #0x54]
	ldrb	r0, [r6, #0x15]
	strh	r0, [r0, #0x1c]
	strh	r1, [r1, #0x4]
	ldrb	r5, [r6, #0x9]
	strh	r3, [r0, #0x2c]
	ldrh	r2, [r0, #0x34]
	add		r0, sp, #0x288
	str		r3, [sp, #0x27c]
	ldr		r5, [sp, #0x250]
	ldr		r2, [sp, #0x268]
	strh	r7, [r3, #0x14]
	ldr		r4, [r5, #0x64]
	ldrsh	r4, [r4, r1]
	ldr		r7, [r3, r1]
	strb	r1, [r4, #0x19]
	strh	r7, [r7, #0x12]
	ldrh	r4, [r1, #0x14]
	strh	r1, [r0, #0x34]
	ldrb	r0, [r0, #0xa]
	strh	r6, [r0, #0x14]
	ldr		r4, [sp, #0x208]
	ldr		r5, [sp, #0x290]
	ldr		r0, [sp, #0x270]
	str		r4, [sp, #0x258]
	str		r2, [r0, #0x68]
	str		r6, [r2, #0x74]
	strb	r0, [r7, #0x11]
	ldrb	r5, [r6, #0x5]
	strb	r4, [r6, #0x1d]
	str		r4, [sp, #0x21c]
	strh	r7, [r1, #0x4]
	strb	r5, [r6, #0x1]
	ldrb	r5, [r6, #0x1]
	str		r1, [sp, #0x214]
	str		r4, [sp, #0x248]
	ldrb	r7, [r1, #0x16]
	strh	r7, [r6, #0x2]
	strh	r3, [r0, #0x4]
	ldr		r5, [r7, #0x24]
	ldrb	r3, [r3, r5]
	str		r6, [r3, #0x34]
	ldr		r4, [r5, #0x64]
	ldrb	r0, [r6, #0x9]
	strb	r5, [r7, #0x11]
	ldrh	r5, [r6, #0x22]
	sub		sp, #0xb0
	strh	r6, [r2, #0x4]
	ldrb	r5, [r6, #0x9]
	ldrh	r6, [r1, #0x3c]
	ldrb	r7, [r7, #0x1]
	strh	r0, [r0, #0x34]
	strb	r6, [r0, #0x1e]
	ldr		r5, [r3, r5]
	ldrb	r5, [r5, #0x19]
	strb	r5, [r7, #0x11]
	str		r7, [r5, #0x54]
	ldr		r1, [r4, #0x14]
	ldrb	r5, [r5, #0x15]
	str		r3, [sp, #0x240]
	str		r1, [sp, #0x240]
	ldrh	r4, [r2, #0x3c]
	strh	r0, [r0, #0x14]
	ldrh	r1, [r2, #0x14]
	ldr		r1, [r7, #0x74]
	strb	r0, [r6, #0x15]
	ldrsh	r5, [r5, r5]
	ldrb	r4, [r2, r5]
	ldrh	r1, [r7, #0xa]
	strh	r1, [r1, #0x4]
	strh	r6, [r7, #0x12]
	str		r7, [sp, #0x220]
	ldr		r5, [sp, #0x294]
	str		r2, [sp, #0x24c]
	ldrb	r0, [r1, #0x1a]
	str		r1, [r5, r1]
	ldrb	r7, [r2, #0x9]
	str		r2, [sp, #0x248]
	ldrh	r0, [r1, #0x1c]
	sub		sp, #0x7c
	ldrh	r4, [r4, #0x1c]
	str		r6, [sp, #0x21c]
	ldr		r4, [r2, #0x78]
	ldr		r0, _0830065c
	strb	r4, [r3, #0x19]
	add		r3, sp, #0x248
.incbin "base.gba", 0x300534, 0x2
	add		r0, sp, #0x2e0
	ldr		r0, [r0, #0x28]
	ldr		r5, [r5, #0x74]
	strb	r5, [r5, #0x5]
	str		r0, [sp, #0x204]
	strh	r0, [r1, #0x34]
	str		r3, [sp, #0x25c]
	strb	r5, [r7, #0x11]
	ldr		r2, [sp, #0x20c]
	strh	r6, [r2, #0x2c]
	str		r5, [r6, #0x64]
	strh	r7, [r5, #0x2]
	strh	r7, [r0, #0x2c]
	str		r2, [sp, #0x20c]
	strh	r2, [r2, #0x4]
	ldr		r0, [r6, #0x14]
	strb	r4, [r5, #0x19]
	ldr		r7, [sp, #0x21c]
	add		r0, sp, #0x2a0
	strh	r5, [r3, #0x3c]
	str		r4, [r6, #0x34]
	strh	r4, [r2, r1]
	ldrsh	r0, [r3, r1]
	ldrb	r0, [r5, #0xd]
_08300566:
	add		r3, sp, #0x250
.incbin "base.gba", 0x300568, 0x2
	ldrh	r1, [r5, #0x3c]
	ldrb	r6, [r0, #0x1e]
	ldrb	r0, [r5, r1]
	ldr		r3, [r4, #0x64]
	strb	r6, [r6, #0x11]
	strh	r3, [r7, #0x32]
	strb	r6, [r7, #0x5]
	ldrb	r2, [r6, #0x19]
	strb	r0, [r0, #0x1a]
	strb	r7, [r5, #0x1d]
	ldrb	r2, [r7, #0x19]
	strh	r1, [r0, #0x4]
	ldrh	r2, [r0, #0x34]
.incbin "base.gba", 0x300584, 0x4
	ldr		r0, [r2, #0x48]
	cmp		r0, r10
	str		r5, [r1, #0x64]
	strb	r6, [r6, #0x9]
	strh	r2, [r6, #0x2a]
	ldrh	r2, [r2, #0x4]
	ldrb	r2, [r0, #0x16]
	strh	r1, [r7, #0x32]
_08300598:
	ldrh	r0, [r2, #0x1c]
	ldr		r0, [r0, #0x48]
	str		r7, [r3, #0x74]
	ldrb	r6, [r6, #0xd]
	str		r7, [r5, #0x4]
	str		r4, [r3, #0x64]
	ldrh	r3, [r7, #0x32]
	strb	r3, [r1, #0xa]
	ldr		r0, [r4, #0x24]
	strh	r0, [r0, #0x3c]
	ldr		r0, [r0, #0x58]
	strh	r4, [r4, #0x2]
	ldr		r7, [sp, #0x280]
	strb	r3, [r1, #0x12]
	ldr		r0, [r5, #0x74]
	ldrb	r7, [r6, #0x19]
	ldrh	r4, [r6, r5]
	ldr		r6, [r2, #0x54]
	ldrh	r0, [r0, #0x34]
	add		r0, sp, #0x278
	ldrb	r7, [r2, #0xa]
	ldrsh	r0, [r5, r5]
	str		r5, [r3, #0x14]
	ldrh	r2, [r6, #0x2]
	str		r5, [sp, #0x244]
	ldrh	r7, [r2, #0x3c]
	str		r6, [r6, #0x74]
	ldrh	r5, [r7, #0x32]
	strh	r5, [r1, #0xc]
	ldr		r7, [r5, #0x14]
	strh	r1, [r7, #0x22]
	ldr		r2, [sp, #0x244]
	strb	r0, [r1, #0x12]
	add		r2, sp, #0x200
	add		r1, sp, #0x2f8
	sub		r5, #0x72
	strb	r5, [r6, r0]
	strh	r6, [r6, #0x22]
.incbin "base.gba", 0x3005e4, 0x2
	pop		{ r3, r5, r7 }
.incbin "base.gba", 0x3005e8, 0x2
	ldrb	r0, [r1, #0x1a]
	strb	r2, [r5, #0x11]
	ldr		r3, [sp, #0x210]
	strh	r3, [r5, #0x4]
	add		r3, #0x42
	strh	r6, [r1, #0x2]
	pop		{ r1, r4, r5, r7, pc }

.incbin "base.gba", 0x3005F8, 0x14

_0830060c:	.4byte 0x9192785C

.incbin "base.gba", 0x300610, 0x4C
_0830065c:	.4byte 0x95A69F78

.incbin "base.gba", 0x300660, 0x1F
	thumb_func_end sub_082c59e4


.incbin "base.gba", 0x30067F, 0x199
_08300818:	.4byte 0x9C79535B

.incbin "base.gba", 0x30081C, 0x14
_08300830:	.4byte 0x777E7B72

.incbin "base.gba", 0x300834, 0x6C
_083008a0:	.4byte 0x928D8A77

.incbin "base.gba", 0x3008A4, 0x1EB55D
_084ebe01:	.4byte 0x33033333

.incbin "base.gba", 0x4EBE05, 0xFDF
.incbin "base.gba", 0x4ECDE4, 0x4
.incbin "base.gba", 0x4ECDE8, 0x4
.incbin "base.gba", 0x4ECDEC, 0x4
.incbin "base.gba", 0x4ECDF0, 0x4
.incbin "base.gba", 0x4ECDF4, 0x4
.incbin "base.gba", 0x4ECDF8, 0x4
.incbin "base.gba", 0x4ECDFC, 0x4
_084ece00:
.incbin "base.gba", 0x4ECE00, 0x4
.incbin "base.gba", 0x4ECE04, 0x4
.incbin "base.gba", 0x4ECE08, 0x4
.incbin "base.gba", 0x4ECE0C, 0x4
.incbin "base.gba", 0x4ECE10, 0x4
.incbin "base.gba", 0x4ECE14, 0x4
.incbin "base.gba", 0x4ECE18, 0x4
.incbin "base.gba", 0x4ECE1C, 0xBBC6C
.incbin "base.gba", 0x5A8A88, 0x946460
_08eeeee8:
.incbin "base.gba", 0xEEEEE8, 0x111118
